<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Next Level JavaScript programming</title>
      <author>AOSXAP</author>
      <pubDate>Thu, 02 Sep 2021 07:21:37 +0000</pubDate>
      <link>https://dev.to/aosxap/next-level-javascript-programming-357l</link>
      <guid>https://dev.to/aosxap/next-level-javascript-programming-357l</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WrqcJKb9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.pexels.com/photos/1261427/pexels-photo-1261427.jpeg%3Fcs%3Dsrgb%26dl%3Dpexels-hitesh-choudhary-1261427.jpg%26fm%3Djpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WrqcJKb9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.pexels.com/photos/1261427/pexels-photo-1261427.jpeg%3Fcs%3Dsrgb%26dl%3Dpexels-hitesh-choudhary-1261427.jpg%26fm%3Djpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-lot-of-people-have-worked-with-javascript-but-we-still-tend-to-overlook-and-underestimate-how-powerful-js-really-became-with-time"&gt;
  &lt;/a&gt;
  A lot of people have worked with JavaScript, but we still tend to overlook and underestimate how powerful JS really became with time.
&lt;/h3&gt;

&lt;p&gt;The language came to life in 1995 and for a long time it was wildly used solely for web development.&lt;/p&gt;

&lt;p&gt;Though, when Nodejs came to town EVERYTHING changed and it rapidly became the most used languace thanks to it's incredible features.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#now-how-can-we-take-advantage-of-all-the-goodness-nodejs-has-to-offer"&gt;
  &lt;/a&gt;
  Now how can we take advantage of all the goodness nodejs has to offer??
&lt;/h3&gt;

&lt;p&gt;Me and a friend tried our best to showcase it in a library we created : &lt;a href="https://github.com/reqorg/reqless"&gt;https://github.com/reqorg/reqless&lt;/a&gt; . It is called reqless and was created via low level networking in c++ and was binded to js using &lt;a href="https://nodejs.org/api/n-api.html"&gt;Napi&lt;/a&gt; , this will enable us to create advanced features in c++ and use them in JS and also increase their speed.&lt;/p&gt;

&lt;p&gt;If you like Rust, you can use &lt;a href="https://rustwasm.github.io/docs/wasm-bindgen/introduction.html"&gt;wasm-bindgen&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;This is only one breeze of what nodejs is capable , you should also check out the incredible &lt;a href="https://nodejs.org/api/child_process.html"&gt;nodejs child processes&lt;/a&gt; , which helped in a lot of projects (even building a discord bot capable of running cpp code in a sanboxed environment) . And if you are doing more backend and power hungry stuff you should also check out multithreading in js !&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#i-really-like-to-keep-it-simple-and-not-waste-too-much-of-your-time-so-for-now-thanks-for-your-time-"&gt;
  &lt;/a&gt;
  I really like to keep it simple and not waste too much of your time , so for now, Thanks for your time :)
&lt;/h5&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>cpp</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Last minute guide to React.useEffect()</title>
      <author>Bikash Mishra</author>
      <pubDate>Thu, 02 Sep 2021 06:31:39 +0000</pubDate>
      <link>https://dev.to/forkbikash/last-minute-guide-to-react-useeffect-4n1i</link>
      <guid>https://dev.to/forkbikash/last-minute-guide-to-react-useeffect-4n1i</guid>
      <description>&lt;p&gt;React.useEffect() is one of the React hooks that manages side-effects in functional React components. You can do so much by writing so little with the help of this hook.&lt;/p&gt;

&lt;p&gt;useEffect accepts a callback function (also called the 'effect' function), and it runs after every render (by default).&lt;/p&gt;

&lt;p&gt;If you want your effects to run less often, you can provide a second argument ‚Äì an array of values. Think of them as the dependencies for that effect.&lt;/p&gt;

&lt;p&gt;So, let us look at some examples in which I'll be showing how you can control the behavior of useEffect.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-when-no-dependencies-are-provided"&gt;
  &lt;/a&gt;
  1. When no dependencies are provided
&lt;/h2&gt;

&lt;p&gt;The callback function provided as the first argument will run after every rendering.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { useEffect } from 'react';

function MyComponent() {
  useEffect(() =&amp;gt; {
    // Runs after EVERY rendering
  });  
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-when-an-empty-dependencies-array-is-provided"&gt;
  &lt;/a&gt;
  2. When an empty dependencies array([]) is provided
&lt;/h2&gt;

&lt;p&gt;The callback function provided as the first argument will run only once after the initial rendering.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { useEffect } from 'react';

function MyComponent() {
  useEffect(() =&amp;gt; {
    // Runs ONCE after initial rendering
  }, []);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-when-dependencies-array-provided-has-props-or-state-values-prop1-prop2-state1-state2"&gt;
  &lt;/a&gt;
  3. When dependencies array provided has props or state values [prop1, prop2, ..., state1, state2]
&lt;/h2&gt;

&lt;p&gt;The callback function provided as the first argument will run only when any dependency value changes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { useEffect, useState } from 'react';

function MyComponent({ prop }) {
  const [state, setState] = useState('');
  useEffect(() =&amp;gt; {
    // Runs ONCE after initial rendering
    // and after every rendering ONLY IF `prop` or `state` changes
  }, [prop, state]);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-effect-with-cleanup"&gt;
  &lt;/a&gt;
  4. Effect with Cleanup
&lt;/h2&gt;

&lt;p&gt;If the callback of useEffect returns a function, then useEffect() considers this as an effect cleanup.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;useEffect(() =&amp;gt; {
  // Side-effect...

  return function cleanup() {
    // Side-effect cleanup...
  };
}, dependencies);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's pretty common to clean up an effect after some time. This is possible by returning a function from within the effect function passed to useEffect. Below's an example with addEventListener.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;() =&amp;gt; {
  useEffect(() =&amp;gt; {
    const clicked = () =&amp;gt; console.log('window clicked')
    window.addEventListener('click', clicked)

    // return a clean-up function
    return () =&amp;gt; {
      window.removeEventListener('click', clicked)
    }
  }, [])

  return &amp;lt;div&amp;gt;
    When you click the window you'll 
    find a message logged to the console
  &amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-multiple-effects"&gt;
  &lt;/a&gt;
  5. Multiple Effects
&lt;/h2&gt;

&lt;p&gt;Multiple useEffect calls can happen within a functional component as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;() =&amp;gt; {
  // üçü
  useEffect(() =&amp;gt; {
    const clicked = () =&amp;gt; console.log('window clicked')
    window.addEventListener('click', clicked)

    return () =&amp;gt; {
      window.removeEventListener('click', clicked)
    }
  }, [])

  // üçü another useEffect hook 
  useEffect(() =&amp;gt; {
    console.log("another useEffect call");
  })

  return &amp;lt;div&amp;gt;
    Check your console logs
  &amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope this article helps someone out there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you liked this post, you can find more by:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Following me on Twitter: &lt;a href="https://twitter.com/forkbikash"&gt;@forkbikash&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Following me on GitHub: &lt;a href="https://github.com/forkbikash"&gt;@forkbikash&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Following me on this beautiful platform: &lt;a class="mentioned-user" href="https://dev.to/forkbikash"&gt;@forkbikash&lt;/a&gt;
 &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://twitter.com/share?url=https://dev.to/forkbikash/last-minute-guide-to-react-useeffect-4n1i"&gt;&lt;strong&gt;Tweet this post&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/forkbikash?ref_src=twsrc%5Etfw"&gt;&lt;strong&gt;Follow me on Twitter @forkbikash&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>react</category>
    </item>
    <item>
      <title>SQL : JSON Datatype</title>
      <author>Uday Yadav</author>
      <pubDate>Thu, 02 Sep 2021 06:23:47 +0000</pubDate>
      <link>https://dev.to/dev117uday/sql-json-datatype-11j1</link>
      <guid>https://dev.to/dev117uday/sql-json-datatype-11j1</guid>
      <description>&lt;p&gt;This guide is for PostgreSQL : &lt;a href="https://www.postgresql.org/"&gt;https://www.postgresql.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download the sample data from here : &lt;a href="https://drive.google.com/file/d/1wWRtgrhVJhwcICyeNBcZ6UXjdDQjXfc8/view?usp=sharing"&gt;sample_data.sql&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#json-vs-jsonb"&gt;
  &lt;/a&gt;
  JSON vs JSONB
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;JSON&lt;/th&gt;
&lt;th&gt;JSONB&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;stores data in text format&lt;/td&gt;
&lt;td&gt;stores data in binary format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;stores data AS-is&lt;/td&gt;
&lt;td&gt;trims of white spaces&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;slower in operations&lt;/td&gt;
&lt;td&gt;faster in operations&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;doesn't support full text indexing&lt;/td&gt;
&lt;td&gt;supports full text indexing&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="s1"&gt;'{
    "title":"book 1"}
'&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

         &lt;span class="n"&gt;json&lt;/span&gt;          
&lt;span class="c1"&gt;-----------------------&lt;/span&gt;
 &lt;span class="err"&gt;{&lt;/span&gt;                    &lt;span class="o"&gt;+&lt;/span&gt;
     &lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;"book 1"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="s1"&gt;'
  {"title":"book 1"}
  '&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;jsonb&lt;/span&gt;


        &lt;span class="n"&gt;jsonb&lt;/span&gt;        
&lt;span class="c1"&gt;---------------------&lt;/span&gt;
 &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"book 1"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#operations"&gt;
  &lt;/a&gt;
  Operations
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;books_jsonb&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;id&lt;/span&gt;        &lt;span class="nb"&gt;serial&lt;/span&gt; &lt;span class="k"&gt;primary&lt;/span&gt; &lt;span class="k"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;book_info&lt;/span&gt; &lt;span class="n"&gt;JSONB&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;books_jsonb&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;book_info&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'{
  "title": "Book 1"
}'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'{
  "title": "Book 2"
}'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'{
  "title": "Book 3"
}'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

 &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;  
&lt;span class="c1"&gt;---------+--------&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Book&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Book&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
  &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Book&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;


&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;book_info&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'title'&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="nv"&gt;"title"&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;books_jsonb&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;book_info&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'title'&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Book 1'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;  
&lt;span class="c1"&gt;---------+--------&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Book&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;


&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;books_jsonb&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;book_info&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'{ "title": "Book 10" }'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;


 &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;      &lt;span class="n"&gt;book_info&lt;/span&gt;       
&lt;span class="c1"&gt;---------+----------------------&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 1"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 2"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 3"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 10"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;


&lt;span class="k"&gt;UPDATE&lt;/span&gt; &lt;span class="n"&gt;books_jsonb&lt;/span&gt;
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;book_info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;book_info&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s1"&gt;'{"title": "Book 4" }'&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;book_info&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'title'&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Book 10'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;      &lt;span class="n"&gt;book_info&lt;/span&gt;      
&lt;span class="c1"&gt;---------+---------------------&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 1"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 2"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 3"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 4"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;


&lt;span class="k"&gt;UPDATE&lt;/span&gt; &lt;span class="n"&gt;books_jsonb&lt;/span&gt;
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;book_info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;book_info&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s1"&gt;'{"author": "author 1" }'&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;book_info&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'title'&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Book 1'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;                 &lt;span class="n"&gt;book_info&lt;/span&gt;                 
&lt;span class="c1"&gt;---------+-------------------------------------------&lt;/span&gt;
  &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 2"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 3"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 4"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"author"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"author 1"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;


&lt;span class="k"&gt;UPDATE&lt;/span&gt; &lt;span class="n"&gt;books_jsonb&lt;/span&gt;
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;book_info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;book_info&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'author'&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;book_info&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'title'&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Book 1'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;      &lt;span class="n"&gt;book_info&lt;/span&gt;      
&lt;span class="c1"&gt;---------+---------------------&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 1"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 2"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 3"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 4"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;


&lt;span class="k"&gt;UPDATE&lt;/span&gt; &lt;span class="n"&gt;books_jsonb&lt;/span&gt;
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;book_info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;book_info&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s1"&gt;'{"available":["new delhi","Tokyo","sydney"]}'&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;book_info&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'title'&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Book 1'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;book_info&lt;/span&gt;                                         

  &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 2"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 3"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 4"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"author"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"author 1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"available"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;"new delhi"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"Tokyo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"sydney"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;


&lt;span class="k"&gt;UPDATE&lt;/span&gt; &lt;span class="n"&gt;books_jsonb&lt;/span&gt;
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;book_info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;book_info&lt;/span&gt; &lt;span class="o"&gt;#-&lt;/span&gt; &lt;span class="s1"&gt;'{available,1}'&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;book_info&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'title'&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Book 1'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="n"&gt;Book_info&lt;/span&gt;                                    

  &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 2"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 3"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 4"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Book 1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"author"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"author 1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"available"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;"new delhi"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"sydney"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#rowtojson"&gt;
  &lt;/a&gt;
  ROW_TO_JSON()
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;row_to_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;orders&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;orders&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"order_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10248&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"customer_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;"VINET"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"employee_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"order_date"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;"1996-07-04"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"required_date"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;"1996-08-01"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"shipped_date"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;"1996-07-16"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"ship_via"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"freight"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;38&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"ship_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;"Vins et alcools Chevalier"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"ship_address"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;"59 rue de l'Abbaye"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"ship_city"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;"Reims"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"ship_region"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"ship_postal_code"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;"51100"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"ship_country"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;"France"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;row_to_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; 
&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
  &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;orders&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"order_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10248&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"customer_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;"VINET"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"employee_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"order_date"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;"1996-07-04"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"required_date"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;"1996-08-01"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"shipped_date"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;"1996-07-16"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"ship_via"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"freight"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;38&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"ship_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;"Vins et alcools Chevalier"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"ship_address"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;"59 rue de l'Abbaye"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"ship_city"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;"Reims"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"ship_region"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"ship_postal_code"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;"51100"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;"ship_country"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;"France"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#jsonagg"&gt;
  &lt;/a&gt;
  JSON_AGG()
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;orders&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;director_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lASt_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;json_agg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;FROM&lt;/span&gt; 
    &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;movie_name&lt;/span&gt;
        &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;movies&lt;/span&gt; &lt;span class="n"&gt;mv&lt;/span&gt;
        &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;mv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;director_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;directors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;director_id&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;::&lt;/span&gt; &lt;span class="n"&gt;jsonb&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;directors&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#jsonbuild"&gt;
  &lt;/a&gt;
  JSON_BUILD
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;json_build_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="n"&gt;json_build_array&lt;/span&gt;  
&lt;span class="c1"&gt;-------------------------&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;


&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;json_build_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Hi'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

     &lt;span class="n"&gt;json_build_array&lt;/span&gt;     
&lt;span class="c1"&gt;-------------------------------&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"Hi"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;


&lt;span class="c1"&gt;-- error : argument list must have even number of elements&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;json_build_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;json_build_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Hi'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="n"&gt;json_build_object&lt;/span&gt;            
&lt;span class="c1"&gt;----------------------------------------------&lt;/span&gt;
 &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"1"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"3"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"5"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"7"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Hi"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;


&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;json_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'{name,email}'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'{"adnan","a@b.com"}'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

               &lt;span class="n"&gt;json_object&lt;/span&gt;               
&lt;span class="c1"&gt;----------------------------------------------&lt;/span&gt;
 &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"name"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"adnan"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"email"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"a@b.com"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#json-functions"&gt;
  &lt;/a&gt;
  Json Functions
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;directors_docs&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;id&lt;/span&gt;   &lt;span class="nb"&gt;serial&lt;/span&gt; &lt;span class="k"&gt;primary&lt;/span&gt; &lt;span class="k"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="n"&gt;jsonb&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;


&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;director_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="p"&gt;(&lt;/span&gt;
           &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;json_agg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;all_movies&lt;/span&gt;
           &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;movie_name&lt;/span&gt;
                    &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;movies&lt;/span&gt; &lt;span class="n"&gt;mv&lt;/span&gt;
                    &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;mv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;director_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;directors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;director_id&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
       &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;::&lt;/span&gt; &lt;span class="n"&gt;jsonb&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;directors&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;directors_docs&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;row_to_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
         &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;director_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;json_agg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;all_movies&lt;/span&gt;
                    &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                             &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;movie_name&lt;/span&gt;
                             &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;movies&lt;/span&gt; &lt;span class="n"&gt;mv&lt;/span&gt;
                             &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;mv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;director_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;directors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;director_id&lt;/span&gt;
                         &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;::&lt;/span&gt; &lt;span class="n"&gt;jsonb&lt;/span&gt;
         &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;directors&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;directors_docs&lt;/span&gt; &lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"last_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Alfredson"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"all_movies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"movie_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Let the Right One In"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;"first_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Tomas"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"director_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"last_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Anderson"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"all_movies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"movie_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"There Will Be Blood"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;"first_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Paul"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"director_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"last_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Anderson"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"all_movies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"movie_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Grand Budapest Hotel"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"movie_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Rushmore"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"movie_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"The Darjeeling Limited"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;"first_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Wes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"director_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;


&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jsonb_array_length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'all_movies'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;total_movies&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;directors_docs&lt;/span&gt;
&lt;span class="k"&gt;order&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="n"&gt;jsonb_array_length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="s1"&gt;'all_movies'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="mi"&gt;13&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"last_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Kubrick"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"all_movies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"movie_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"A Clockwork Orange"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"movie_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Eyes Wide Shut"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"movie_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"The Shining"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;"first_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Stanley"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"director_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;                                   &lt;span class="o"&gt;|&lt;/span&gt;            &lt;span class="mi"&gt;3&lt;/span&gt;
  &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"last_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Anderson"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"all_movies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"movie_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Grand Budapest Hotel"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"movie_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Rushmore"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"movie_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"The Darjeeling Limited"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;"first_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Wes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"director_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;                                &lt;span class="o"&gt;|&lt;/span&gt;            &lt;span class="mi"&gt;3&lt;/span&gt;
 &lt;span class="mi"&gt;17&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"last_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Lucas"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"all_movies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"movie_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Star Wars: A New Hope"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"movie_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Star Wars: Empire Strikes Back"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"movie_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Star Wars: Return of the Jedi"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;"first_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"George"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"director_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;            &lt;span class="mi"&gt;3&lt;/span&gt;


&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;jsonb_object_keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;directors_docs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"last_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Alfredson"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"all_movies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"movie_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Let the Right One In"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;"first_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Tomas"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"director_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;last_name&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"last_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Alfredson"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"all_movies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"movie_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Let the Right One In"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;"first_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Tomas"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"director_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;all_movies&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"last_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Alfredson"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"all_movies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"movie_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Let the Right One In"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;"first_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Tomas"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"director_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;first_name&lt;/span&gt;


&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;directors_docs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="n"&gt;jsonb_each&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;key&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;                  &lt;span class="n"&gt;value&lt;/span&gt;                   
&lt;span class="c1"&gt;-----------------+------------------------------------------&lt;/span&gt;
 &lt;span class="n"&gt;last_name&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;"Alfredson"&lt;/span&gt;
 &lt;span class="n"&gt;all_movies&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"movie_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Let the Right One In"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="n"&gt;first_name&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;"Tomas"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#existence-operators"&gt;
  &lt;/a&gt;
  Existence Operators
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;directors_docs&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'first_name'&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="s1"&gt;'John'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="mi"&gt;14&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"last_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Lasseter"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"all_movies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"movie_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"Toy Story"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;"first_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;"John"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"director_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#searching-json"&gt;
  &lt;/a&gt;
  Searching JSON
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;directors_docs&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;@&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'{"first_name":"John"}'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;directors_docs&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;@&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'{"director_id":1}'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;-- error : No operator matches the given name and argument types. You might need to add explicit type casts.&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;directors_docs&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'first_name'&lt;/span&gt; &lt;span class="k"&gt;LIKE&lt;/span&gt; &lt;span class="s1"&gt;'J%'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;directors_docs&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'first_name'&lt;/span&gt; &lt;span class="k"&gt;LIKE&lt;/span&gt; &lt;span class="s1"&gt;'J%'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;directors_docs&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'director_id'&lt;/span&gt;&lt;span class="p"&gt;)::&lt;/span&gt;&lt;span class="nb"&gt;integer&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>sql</category>
      <category>programming</category>
      <category>database</category>
    </item>
    <item>
      <title>Web Basics Episode 2: Introduction to CSS</title>
      <author>Fahid Latheef A</author>
      <pubDate>Thu, 02 Sep 2021 06:04:50 +0000</pubDate>
      <link>https://dev.to/fahidlatheef/web-basics-episode-2-introduction-to-css-o98</link>
      <guid>https://dev.to/fahidlatheef/web-basics-episode-2-introduction-to-css-o98</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In this series, I will try to discuss Web Basics Topics. In the first episode, the &lt;a href="https://dev.to/fahidlatheef/web-basics-episode-1-introduction-to-html-4cn7"&gt;HTML Basics&lt;/a&gt; were covered. In this episode, I will try to cover the Basic CSS Concepts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-is-css-"&gt;What is CSS?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#css-example"&gt;CSS Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#css-selectors"&gt;CSS Selectors&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#css-selectors-examples"&gt;CSS Selectors Examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#ways-of-adding-css-to-our-html-file"&gt;Ways of adding CSS to our HTML file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#css-box-model"&gt;CSS Box Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#css--display--property"&gt;CSS &lt;code&gt;display&lt;/code&gt; property&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#-inline-"&gt;&lt;code&gt;inline&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-inline-block-"&gt;&lt;code&gt;inline-block&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-block-"&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#css-position-property"&gt;CSS Position Property&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#css-structural-classes"&gt;CSS Structural Classes&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#some-structural-class-examples"&gt;Some Structural class examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#css-specificity"&gt;CSS Specificity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#css-media-query"&gt;CSS Media Query&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#references"&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-css"&gt;
  &lt;/a&gt;
  What is CSS?
&lt;/h2&gt;

&lt;p&gt;CSS (Cascading Style Sheets)  is the language for describing the presentation of Web pages, including colours, layout, and fonts. It allows one to adapt the presentation to different types of devices, such as large screens, small screens, or printers. CSS is independent of HTML and can be used with any XML-based markup language. The separation of HTML from CSS makes it easier to maintain sites, share style sheets across pages, and tailor pages to different environments. Moreover, CSS saves a lot of work by allowing us to control the layout of multiple web pages all at once.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-example"&gt;
  &lt;/a&gt;
  CSS Example
&lt;/h2&gt;

&lt;p&gt;This is an example of an CSS file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;body&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="no"&gt;lightblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="n"&gt;verdana&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;  

&lt;span class="nt"&gt;h1&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, we define the &lt;code&gt;backgound-color&lt;/code&gt; of the &lt;code&gt;body&lt;/code&gt; to light blue, with  a &lt;code&gt;font-family&lt;/code&gt; of verdana with 20px &lt;code&gt;font-size&lt;/code&gt;. Now for the &lt;code&gt;h1&lt;/code&gt; headers, we define the &lt;code&gt;color&lt;/code&gt; (text color) white and align the text centrally using &lt;code&gt;text-align&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-selectors"&gt;
  &lt;/a&gt;
  CSS Selectors
&lt;/h2&gt;

&lt;p&gt;A CSS selector helps us selecting the HTML element(s) we want to style.&lt;/p&gt;

&lt;p&gt;We can divide CSS selectors into five categories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Simple selectors: Select elements based on name, id, class&lt;/li&gt;
&lt;li&gt;  Combinator selectors: Select elements based on a specific relationship between them&lt;/li&gt;
&lt;li&gt;  Pseudo-class selectors: Select elements based on a certain state&lt;/li&gt;
&lt;li&gt;  Pseudo-elements selectors: Select and style a part of an element&lt;/li&gt;
&lt;li&gt;  Attribute selectors: Select elements based on an attribute or attribute value&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#css-selectors-examples"&gt;
  &lt;/a&gt;
  CSS Selectors Examples
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;CSS Element Selector
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here all &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; (paragraph) elements are styled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CSS ID Selector
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#section-intro&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here HTML element with ID &lt;em&gt;section-intro&lt;/em&gt; is styled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The CSS Class Selector
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.center&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here all HTML elements with class name &lt;em&gt;center&lt;/em&gt; is styled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The CSS Universal Selector
For universally selecting all HTML elements on the page, the following code is used.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#ways-of-adding-css-to-our-html-file"&gt;
  &lt;/a&gt;
  Ways of adding CSS to our HTML file
&lt;/h2&gt;

&lt;p&gt;There are three ways of inserting a style sheet:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  External CSS&lt;/li&gt;
&lt;li&gt;  Internal CSS&lt;/li&gt;
&lt;li&gt;  Inline CSS&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#css-box-model"&gt;
  &lt;/a&gt;
  CSS Box Model
&lt;/h2&gt;

&lt;p&gt;The CSS box model is a box that wraps around every HTML element. It consists of: margins, borders, padding, and the actual content. The image below illustrates the box model:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4ZEqOwrv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.washington.edu/accesscomputing/webd2/student/unit3/images/boxmodel.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ZEqOwrv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.washington.edu/accesscomputing/webd2/student/unit3/images/boxmodel.gif" alt="Box Model"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-raw-display-endraw-property"&gt;
  &lt;/a&gt;
  CSS &lt;code&gt;display&lt;/code&gt; property
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;display&lt;/code&gt; property specifies the display behavior of an element.&lt;/p&gt;

&lt;p&gt;Usage:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.class-name&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-inline-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;inline&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Displays an element as an inline element. Any height and width properties will have no effect on it. Moreover, inline elements are forced to stay on the same line. Here are a few elements that have a default  &lt;code&gt;inline&lt;/code&gt;  property:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;span&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;a&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;img&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#-raw-inlineblock-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;inline-block&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Displays an element as an inline-level block container. You can set height and width values. It‚Äôs essentially the same thing as  &lt;code&gt;inline&lt;/code&gt;, except that we can set height and width values.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-block-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;block&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The element &lt;code&gt;block&lt;/code&gt; starts on a new line and takes up the full width available. So that means block elements will occupy the entire width of its parent element.&lt;/p&gt;

&lt;p&gt;Here are a few elements that have a default  &lt;code&gt;block&lt;/code&gt;  property:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;div&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;h1&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;p&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;li&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;section&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#css-position-property"&gt;
  &lt;/a&gt;
  CSS Position Property
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;position&lt;/code&gt; property specifies the type of positioning method used for an element. For example, &lt;code&gt;static&lt;/code&gt;, &lt;code&gt;relative&lt;/code&gt; and &lt;code&gt;absolute&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;position: static;&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HTML elements are positioned static by default.&lt;/li&gt;
&lt;li&gt;Static positioned elements are not affected by the top, bottom, left, and right properties.&lt;/li&gt;
&lt;li&gt;An element with &lt;code&gt;position: static;&lt;/code&gt; is not positioned in any special way; it is always positioned according to the normal flow of the page.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;code&gt;position: relative;&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An element with &lt;code&gt;position: relative;&lt;/code&gt; is positioned relative to its normal position.&lt;/li&gt;
&lt;li&gt;Setting the top, right, bottom, and left properties of a relatively-positioned element will cause it to be adjusted away from its normal position. &lt;/li&gt;
&lt;li&gt;Other content will not be adjusted to fit into any gap left by the element.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;code&gt;position: absolute;&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An element with &lt;code&gt;position: absolute;&lt;/code&gt; is positioned relative to the nearest positioned ancestor.&lt;/li&gt;
&lt;li&gt;If an absolute positioned element has no positioned ancestors, it uses the document body, and moves along with page scrolling.&lt;/li&gt;
&lt;li&gt;Absolute positioned elements are removed from the normal flow, and can overlap elements.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#css-structural-classes"&gt;
  &lt;/a&gt;
  CSS Structural Classes
&lt;/h2&gt;

&lt;p&gt;Structural pseudo classes allow access to the child elements present within the hierarchy of parent elements. We can select first-child element, last-child element, alternate elements present within the hierarchy of parent elements.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#some-structural-class-examples"&gt;
  &lt;/a&gt;
  Some Structural class examples
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;Select(s)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:first-child&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The first child of its parent&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:last-child&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The last child of its parent&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:nth-child(2n+1)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Every odd child&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:nth-child(2n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Every even child&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:nth-last-child(2n+1)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Every odd child element starting from the last element&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#css-specificity"&gt;
  &lt;/a&gt;
  CSS Specificity
&lt;/h2&gt;

&lt;p&gt;Sometimes, CSS rules conflict. For example, if multiple selectors target the same element in a document, the rules to be applied is determined by CSS specificity. In CSS, different selectors have varying weights. When two or more rules conflict on the same element, the more specific one applies.&lt;/p&gt;

&lt;p&gt;These are the Specificity priority of different selectors&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;strong&gt;Inline CSS:&lt;/strong&gt; Inline CSS appears as style attributes in the opening tag of HTML elements. Since this CSS is closest to the HTML, it has the highest level of specificity.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;ID selectors:&lt;/strong&gt; An ID is unique to a page element and thus, very specific.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Class selectors, attribute selectors, and pseudo-class selectors:&lt;/strong&gt; These three selector types have equal specificity. If all three types are applied to the same HTML element, the one appearing latest in the style-sheet will apply and override the rest.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Type selectors&lt;/strong&gt;: These select all HTML elements that have a given node name and have the syntax &lt;strong&gt;element&lt;/strong&gt;. These are element names and pseudo-elements.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#css-media-query"&gt;
  &lt;/a&gt;
  CSS Media Query
&lt;/h2&gt;

&lt;p&gt;Media Query is very helpful in creating &lt;strong&gt;responsive web designs&lt;/strong&gt; which works well with all types of devices. It uses the &lt;code&gt;@media&lt;/code&gt; rule to include a block of CSS properties only if a certain condition is true.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;only&lt;/span&gt; &lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;lightblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, if the browser window is 600px or smaller, we set the &lt;code&gt;background-color&lt;/code&gt; to lightblue.&lt;/p&gt;

&lt;p&gt;While developing web pages, it is advised to create the &lt;strong&gt;mobile version first&lt;/strong&gt; before other screen sizes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That concludes the Introduction to CSS topic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.w3schools.com/css/"&gt;CSS Basics w3schools&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.washington.edu/accesscomputing/webd2/student/unit3/module4/lesson1.html"&gt;Box Model&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.samanthaming.com/pictorials/css-inline-vs-inlineblock-vs-block/"&gt;CSS display property&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.web4college.com/css/web4-css-structural-classes.php"&gt;Structural Classes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.hubspot.com/website/what-is-css-class"&gt;CSS Specificity&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>webdev</category>
    </item>
    <item>
      <title>From Individual Contributor to Manager</title>
      <author>Conti</author>
      <pubDate>Thu, 02 Sep 2021 05:51:47 +0000</pubDate>
      <link>https://dev.to/conti/from-individual-contributor-to-manager-i5g</link>
      <guid>https://dev.to/conti/from-individual-contributor-to-manager-i5g</guid>
      <description>&lt;h2&gt;
  &lt;a href="#past"&gt;
  &lt;/a&gt;
  Past
&lt;/h2&gt;

&lt;p&gt;Since 2008 I have been playing my career mostly as a an &lt;em&gt;individual contributor&lt;/em&gt;, something I do not regret in any way, and that role belongs to a period focused on improving technical skills based on &lt;strong&gt;experimentation, deep study and failures&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;As an &lt;em&gt;IC&lt;/em&gt; I have had awesome mentors and team leads, who did all their efforts to build a &lt;strong&gt;safe environment&lt;/strong&gt; for failures, which I think it is the key for enhancing and boosting your self confidence when you are designing and developing solutions to given problems. We could speak out and deeply about other factors that allow such environment (CI/CD, automations, etc), but it is out of scope for this post.&lt;/p&gt;

&lt;p&gt;I was asked to change my role from &lt;em&gt;IC&lt;/em&gt; to &lt;strong&gt;Manager&lt;/strong&gt; two years ago for a different project, and all I could say in the following months was that &lt;em&gt;I had played in better places&lt;/em&gt;. A few keys I struggled with at the beginning:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Huge Impostor syndrome&lt;/strong&gt;: I knew I could do the job better because I was before a reliable and resourceful professional, but something in my mind was telling me the opposite.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Very poor definition of &lt;strong&gt;responsibilities and accountability&lt;/strong&gt;: If doubts exist about &lt;em&gt;who&lt;/em&gt; is in charge of specific errands, then something is wrong.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Burned and overwhelmed&lt;/strong&gt; team which was eager to go on vacation instead of pulling issues from &lt;em&gt;TODO column&lt;/em&gt; because of the biggest toxic stakeholder I have ever known.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On top of that, I had to be in charge of management tasks I had never done...very interesting scenario, isn't it?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#present"&gt;
  &lt;/a&gt;
  Present
&lt;/h2&gt;

&lt;p&gt;Two years later: &lt;em&gt;I have never played in a better place&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;My world is different right now, I love my colleagues, they are very committed to the project, and as a result we have a high mature and productive environment.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-did-we-solve-the-hot-parts-"&gt;
  &lt;/a&gt;
  How did we solve the &lt;em&gt;hot parts&lt;/em&gt; ?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Impostor thing&lt;/strong&gt;: frequent personal retrospective, feedback loops with the team and being open to experimentation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Responsibilities and accountability&lt;/strong&gt;: open loud and clear, respectfully, with different stakeholders of the project, and do  feedback loops (again).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Toxic stakeholder&lt;/strong&gt;: fire them, put away from the project. &lt;em&gt;Do you want to work with that guy anymore?&lt;/em&gt; No, then do the first move, I do not know where to, but do it. And ask for help, do not be ashamed, in my case the Product Owner and CEO were the key to remove toxicity from the environment, without their help I could not have done it.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#management"&gt;
  &lt;/a&gt;
  Management
&lt;/h3&gt;

&lt;p&gt;Since I started this new role, I may claim right now that being IC means that there is &lt;strong&gt;another person&lt;/strong&gt; who:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;removes &lt;strong&gt;stones&lt;/strong&gt; for you when you can not lift them.&lt;/li&gt;
&lt;li&gt;shows a &lt;strong&gt;tiny light&lt;/strong&gt; at the end of a tunnel for a problem no one has a right clue of how to solve it.&lt;/li&gt;
&lt;li&gt;manages &lt;strong&gt;feedback&lt;/strong&gt; loops for the team.&lt;/li&gt;
&lt;li&gt;does &lt;strong&gt;interviews&lt;/strong&gt; for candidates.&lt;/li&gt;
&lt;li&gt;builds an invisible wall to allow the ICs be productive without &lt;strong&gt;noise&lt;/strong&gt; from Product Management.&lt;/li&gt;
&lt;li&gt;is &lt;strong&gt;accountable&lt;/strong&gt; for a whole development workflow.&lt;/li&gt;
&lt;li&gt;is able to play as an &lt;strong&gt;IC&lt;/strong&gt; for specific issues and push stuck situations.
...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That is a small list of things a Lead role must be in charge of and they can not be avoided, so there is always a need to have someone in charge of those errands. &lt;/p&gt;

&lt;p&gt;The question here is: &lt;em&gt;do you want to try?&lt;/em&gt; Give it a chance, do not worry if you think that you are not ready right now, because &lt;strong&gt;you will never be&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#future"&gt;
  &lt;/a&gt;
  Future
&lt;/h2&gt;

&lt;p&gt;I am just a lucky guy who learned the pits and falls of a migration process from a non-desirable environment to a high productive and motivating one. &lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;good team&lt;/strong&gt; is built with &lt;strong&gt;good professionals&lt;/strong&gt;, not necessary ninjas, gurus or unicorns on specific topics, so whenever I interview someone I need to check if he or she fits our &lt;strong&gt;team values&lt;/strong&gt; first, instead of tech skills or certifications.&lt;/p&gt;

&lt;p&gt;Remember that technical skills are far easier to learn that people management, which can not ever be mastered.&lt;/p&gt;

&lt;p&gt;Header image attribution: &lt;a href="https://www.flickr.com/photos/solutionist/48227526067"&gt;https://www.flickr.com/photos/solutionist/48227526067&lt;/a&gt;&lt;/p&gt;

</description>
      <category>team</category>
      <category>lead</category>
      <category>tech</category>
      <category>management</category>
    </item>
    <item>
      <title>Coding a SaaS in 30 days</title>
      <author>Adrian Twarog</author>
      <pubDate>Thu, 02 Sep 2021 05:36:52 +0000</pubDate>
      <link>https://dev.to/adriantwarog/coding-a-saas-in-30-days-20ji</link>
      <guid>https://dev.to/adriantwarog/coding-a-saas-in-30-days-20ji</guid>
      <description>&lt;p&gt;So I built a SaaS in 30 days... and it was way more complicated that I originally thought, but check out how I did it, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Picking a topic&lt;/li&gt;
&lt;li&gt;Learning AI&lt;/li&gt;
&lt;li&gt;Registering a domain&lt;/li&gt;
&lt;li&gt;Creating a logo&lt;/li&gt;
&lt;li&gt;Designing a landing page&lt;/li&gt;
&lt;li&gt;Coding the website&lt;/li&gt;
&lt;li&gt;Frontend and Backend design&lt;/li&gt;
&lt;li&gt;Taking Payment with Stripe&lt;/li&gt;
&lt;li&gt;VPS setup&lt;/li&gt;
&lt;li&gt;Launching it!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/UBG_YiTg_Bs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Youtube Video: &lt;a href="https://youtu.be/UBG_YiTg_Bs"&gt;Journey of Building a Saas&lt;/a&gt;&lt;br&gt;
Blog Post: &lt;a href="https://adriantwarog.com/building-a-saas-in-30-days"&gt;Adrian Twarog&lt;/a&gt;&lt;br&gt;
The SaaS: &lt;a href="https://www.enhanceai.ai"&gt;Enhance AI&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;I spent seven days building my own SAS, it's gonna help developers win at life by using AI. And in this video, I'm going to show you how I did it all the fun and all the pain and an actual product. At the end, they say developers can build anything. &lt;/p&gt;

&lt;p&gt;Well, I'm a developer, and I want to build just something, I want to build a SAS. And I'm not really sassy, per se. But a SAS is just a software as a service. And it seems easy enough to build, you just need some front end, maybe some back end. And maybe you need it to work without bugs we'll see along the way. But I want to build something really cool. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XqbSIA9U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3t7uwl8ji8t72t7q3b2a.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XqbSIA9U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3t7uwl8ji8t72t7q3b2a.gif" alt="Enhance AI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Recently, I checked out GitHub co pilot, and it uses AI tech, it's really cool AI attack that autocompletes what you're writing, and I wanted to use some of their tech to build a SAS a number of tools, maybe for developers or something like that, because I'm a little bit of a tool myself. &lt;/p&gt;

&lt;p&gt;And whenever I jump into a problem, I always have to Google it, if there was an easier way for me not to have to Google the same things over and over, like how to perform a git merge or for example, how to, you know, just do basic commands, or even regex regex just blows my mind with some of the syntax. So I'm going to try and build a tool around that. &lt;/p&gt;

&lt;p&gt;Now, the way I'm going to do it is I'm going to show you, I'm going to take you on this journey where I'm trying to solve this problems of building a SAS, this will be everything like trying to build the front end and the back end trying to design it and everything in between. So let's jump into my very first day of trying to do this. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cMlmpe7c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3d333tfm8v4r2ybfmt7b.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cMlmpe7c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3d333tfm8v4r2ybfmt7b.gif" alt="EnhanceAI"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#learning-ai"&gt;
  &lt;/a&gt;
  Learning AI
&lt;/h2&gt;

&lt;p&gt;So the first thing I need to do is get access to some AI tools. There are lots out there, Google has their own machine learning suite, so does Amazon and even Microsoft themselves. But this isn't what got me excited in the first place. What really I enjoyed was GitHub co pilot. And that was made by a company called Open AI. &lt;/p&gt;

&lt;p&gt;And they created their own AI tech called GPT. Two and now also GPT three, which created the model that they're using, which is I think called codecs that they have for developers using VS code. That's what I wanted to use to create some of these tools. So I tried to jump onto their website. &lt;/p&gt;

&lt;p&gt;And unfortunately, even though there are companies called Open AI, you can't just jump in there and get access and sign up, you actually have to go through a waitlist and a process. So I did just that. And I waited, and waited. And eventually I did get in. So now here I am inside of their playground. And I'm going to try and see if some of these ideas that I have around building tools with AI actually even work. &lt;/p&gt;

&lt;p&gt;So let's try them out. I jumped on the open AI website to try and figure out how it all works. I was a little scared at first because sometimes documentation can be terrible and some developer websites. But honestly, the open API documentation is some of the best I've seen so far. I'd actually even reminds me of stripe documentation, which is world class. But this does not mean I know what I'm doing. &lt;/p&gt;

&lt;p&gt;I jumped into their playground system. And I was overwhelmed with all these different things like models response temperature, Toppy frequency presidency, I was just at a loss. So I jumped into their examples here, it shows off some of the things you can build with open AI. &lt;/p&gt;

&lt;p&gt;And for me, I wanted to kick things off with a regex completer. I played around with a lot of different settings and prompts until I got a number of things working like a JavaScript chatbot and even the regex. So it means that it is possible seems like there is some cool merit to this idea around creating natural language to solve programming problems that we all have. But let's have a look at the next most important step in building their SAS. And that is to register the domain name. &lt;/p&gt;

&lt;p&gt;And to do that I need a business name. And that is one of the hardest things to do. I thought about all different types of options. And I came up with a name called sub writer, or was it sub editor? I can't remember but I immediately went to register, there is new domain names out there. called.ai. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WnpfPrlb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/06wp4lpsb30t9x3npyq7.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WnpfPrlb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/06wp4lpsb30t9x3npyq7.gif" alt="Enhance AI.ai"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#registering-a-domain"&gt;
  &lt;/a&gt;
  Registering a Domain
&lt;/h2&gt;

&lt;p&gt;So I jumped on and registered subeditor.ai domain. And actually then after spending, I think two $300 I decided no, no, I don't like this domain name, I need to register another domain name. One of the things that I've been doing recently is building enhance UI, which is a book for developers to learn design. So I thought I might as well keep up the trend and create enhance AI, which can be a bunch of tools for developers to use AI to improve their daily jobs, write blogs and stuff like that. So let's register that domain name as well. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wiw_4p3C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ohkq21562e6tru58h7q.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wiw_4p3C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ohkq21562e6tru58h7q.gif" alt="EnhanceAI.ai"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#creating-a-logo"&gt;
  &lt;/a&gt;
  Creating a Logo
&lt;/h2&gt;

&lt;p&gt;Now that we've got this done, we can look at the hardest part of creating any sass product as a developer, and that is to create the logo. Now for a logo, it's going to have to be something amazing when people look at this logo, it has to have the representation of developers and tools and open AI and all of that. So what I did was put some circles and squares together and here's the logo. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--el-I_dTQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/365zs5iap6tdfv1o6z9r.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--el-I_dTQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/365zs5iap6tdfv1o6z9r.gif" alt="Adrian Twarog"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#designing-a-landing-page"&gt;
  &lt;/a&gt;
  Designing a Landing Page
&lt;/h2&gt;

&lt;p&gt;Next up, we need to create a landing page so that when people have a look at this product, they're more inclined to try out and even purchase it. To do this, I'm going to jump on to figma. And we're going to create a design based off the logo, what I want to do is pull in some of those colours from the logo, some of those shapes like the squares and the circles. &lt;/p&gt;

&lt;p&gt;And I want to create a design that sort of gives people an idea of how the tool works. So I might send her it with a nice box and give them an example of how maybe he can explain code and what it's doing, as well as have lots of call to actions for people to sign up. &lt;/p&gt;

&lt;p&gt;This is a designer sort of came up with, it's nothing too fancy. And I probably continued to play around with it. But at least it's up and running. So the next thing we have to do is actually code it. So I'm going to code it in just some basic HTML and CSS. So let's try and do that right now. So I opened up VS code installed, tailwind CSS, and started coding it all from my figma design. And in no time I was done, I don't often have nightmares. &lt;/p&gt;

&lt;p&gt;But last night, I had a nightmare that I'm gonna have to write out every single individual line of code for this SAS. Now, that's sometimes an interesting take as a developer because you enjoy coding, but sometimes it's just too much. &lt;/p&gt;

&lt;p&gt;So I'm going to try and use a page builder. And please don't judge me when I say this, I'm going to use web flow, I'm going to see if you can redesign some of these tailwind designs inside there. And if it takes me as long or quicker, just as a test. And if in this case, it's easier, I might just swap the whole landing page to webflow. And then when we actually build the app, I'll then definitely build that on react. But for the landing page, it's going to be changed all the time. And I just think that react might be overkill to build this thing. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vpi_2nyK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/345adbt0m3zhpn7wmcpc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vpi_2nyK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/345adbt0m3zhpn7wmcpc.gif" alt="Enhance AI"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#front-end-and-back-end"&gt;
  &lt;/a&gt;
  Front end and back end
&lt;/h2&gt;

&lt;p&gt;Now it's time to build the front end and the back end, the best parts, let's work with the front end to start off with, let's use create react app for that. And I'll just start building that. And at the same time, I also need a backend to do even basic stuff, like logins. So let's use our favourite node Express and Mongo, I might use the cloud version of Mongo, just because later, I want to make sure that it persists if I'm going to scale it. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--solQ3HFj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jmx4u757gd2cr528cc0v.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--solQ3HFj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jmx4u757gd2cr528cc0v.gif" alt="EAI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But it's a traditional route for building an a SAS. So let's just get started with that. Next, we'll need a payment processor, like for example, II way or PayPal or even stripe because you do not want to store credit card information yourself. So I decided to go with stripe because they're a popular one. And I do want to do subscriptions. &lt;/p&gt;

&lt;p&gt;So that should be easy to set up. It wasn't easy to set up. But now that it's done, then it's all working. And every time someone jumps in, they can do a free trial to test out the product before they fully sign up and commit, which is something you want to do. Because no one wants to purchase something immediately without actually trying it out these days. Next, we need a place to host this entire system, both the front end and the back end, because it's not going to host itself, which was Linode&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5qMWEubL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dczdh8q1h4mvkpwqby40.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5qMWEubL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dczdh8q1h4mvkpwqby40.gif" alt="Enhance AI Adrian Twarog"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#launching"&gt;
  &lt;/a&gt;
  Launching
&lt;/h2&gt;

&lt;p&gt;Finally it's done! I create a post on Twitter, and Article on Hashnode, and a video on youtube. You can find them below.&lt;/p&gt;

&lt;p&gt;Website: &lt;a href="https://www.enhanceai.ai"&gt;https://www.enhanceai.ai&lt;/a&gt; &lt;br&gt;
Twitter: &lt;a href="https://twitter.com/EnhanceAI"&gt;https://twitter.com/EnhanceAI&lt;/a&gt; &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wfcxizy6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E-GrugKUcAII8r6.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ugr_G7WG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1268445996192632834/Ufosoga3_normal.jpg" alt="Adrian Twarog ü¶ò profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Adrian Twarog ü¶ò
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @adrian_twarog
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I built a SaaS in 30 days...&lt;br&gt;&lt;br&gt;Check out how I did it, including:&lt;br&gt;- Picking a topic&lt;br&gt;- Learning AI&lt;br&gt;- Registering a domain&lt;br&gt;- Creating a logo&lt;br&gt;- Designing a landing page&lt;br&gt;- Coding the website&lt;br&gt;- Frontend and Backend design&lt;br&gt;- Taking Payment with Stripe&lt;br&gt;- VPS setup&lt;br&gt;- Launching it!&lt;br&gt;&lt;br&gt;üîóüëá 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      08:04 AM - 31 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1432615192404234244" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1432615192404234244" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1432615192404234244" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7nB5eVF4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E-CljvDVkAsIAoT.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--tO4Y33bp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1432316576984809485/rOa3mHG1_normal.jpg" alt="Enhance AI profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Enhance AI
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @enhanceai
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Our landing page is up and running. &lt;br&gt;&lt;br&gt;Check out a quick demo of our systems which are powered by OpenAI latest tech! If you want to learn more, comment below! 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      12:58 PM - 30 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1432326985657683973" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1432326985657683973" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1432326985657683973" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CByUkKkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1432905656449728516/pu/img/x13aVTTkCraljOvJ.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--tO4Y33bp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1432316576984809485/rOa3mHG1_normal.jpg" alt="Enhance AI profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Enhance AI
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @enhanceai
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      ‚úç Try our co-editor tool that helps you write blogs &amp;amp; articles with autocomplete similar to Github Co-pilot. It's able to:&lt;br&gt;&lt;br&gt;- Write an outline for a blog&lt;br&gt;- Create an introduction&lt;br&gt;- Help finish a sentence&lt;br&gt;- Suggest a new sentence&lt;br&gt;&lt;br&gt;üçÉ It will make writing your next blog a breeze! 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      03:21 AM - 01 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1432906410572980229" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1432906410572980229" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1432906410572980229" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#follow-and-support-me"&gt;
  &lt;/a&gt;
  Follow and support me:
&lt;/h2&gt;

&lt;p&gt;Special thanks if you subscribe to my channel :)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCvM5YYWwfLwpcQgbRr68JLQ?sub_confirmation=1"&gt;üéûÔ∏è Youtube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/intent/follow?screen_name=adrian_twarog"&gt;üê¶ Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>productivity</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Analytics Box - A simple privacy focused analytics in GO. </title>
      <author>KetanIP</author>
      <pubDate>Thu, 02 Sep 2021 05:36:19 +0000</pubDate>
      <link>https://dev.to/ketanip/analytics-box-a-simple-privacy-focused-analytics-in-go-hmm</link>
      <guid>https://dev.to/ketanip/analytics-box-a-simple-privacy-focused-analytics-in-go-hmm</guid>
      <description>&lt;p&gt;Repo: &lt;a href="https://github.com/KetanIP/analytics"&gt;https://github.com/KetanIP/analytics&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Hello guys, today I am here to share with you a project that I've made recently, it is Analytics Box - A simple privacy focused analytics in Golang. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-analytics-box-"&gt;
  &lt;/a&gt;
  What is Analytics Box ?
&lt;/h2&gt;

&lt;p&gt;Analytics box is analytics tool like google analytics but instead of ripping user's privacy off them like google it respects their privacy and doesn't collect any unnecessary information.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;No Cookies.&lt;/li&gt;
&lt;li&gt;Forgets user in 24 hours so even if wish to know user's private info you can't.&lt;/li&gt;
&lt;li&gt;Can track unique page views effectively without hurting user's privacy.&lt;/li&gt;
&lt;li&gt;Custom events available.&lt;/li&gt;
&lt;li&gt;Super simple to setup. ( 1 go binary + 1 super small script on frontend ).&lt;/li&gt;
&lt;li&gt;Super low resource consumption.&lt;/li&gt;
&lt;li&gt;Dashboard is decoupled from the tool so you can use any tool ( like Metabase for visualization of data ).&lt;/li&gt;
&lt;li&gt;Supports multiple SQL database.&lt;/li&gt;
&lt;/ol&gt;




&lt;h2&gt;
  &lt;a href="#you-may-wish-to-ask-some-question-here-are-some-faq"&gt;
  &lt;/a&gt;
  You may wish to ask some question here are some FAQ.
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#how-do-we-uniquely-identify-users"&gt;
  &lt;/a&gt;
  How do we uniquely identify users?
&lt;/h3&gt;

&lt;p&gt;We identify users uniquely by creating a hash and storing it in a Redis database along with a UUID which automatically deletes itself in 24 hours.&lt;br&gt;
hash = md5( raw_public_ip + browser_name + operating_system + date + secret)&lt;/p&gt;

&lt;p&gt;It generates a 32 character long string with is stored in database along with a UUID and it is only valid for a day.&lt;/p&gt;

&lt;p&gt;Parameters used in hash have the following reasons,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;IP&lt;/strong&gt; - to identify user ( It may be a public IP like caf√© or a user's own IP )&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Browser&lt;/strong&gt; - So if user changes his/her browser we forget it.
&lt;strong&gt;Operating System&lt;/strong&gt; - So if user changes its device we forget him.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Date&lt;/strong&gt; - So we forget user daily.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Secret&lt;/strong&gt; - Here comes the most important part we while production recommend to use a UUID that isn't logged anywhere so even if want to view user's private info you can't, but while development use a hardcoded string as you restart server many times and it will generate false unique visitors.&lt;/li&gt;
&lt;/ol&gt;




&lt;h3&gt;
  &lt;a href="#what-makes-it-different-"&gt;
  &lt;/a&gt;
  What makes it different ?
&lt;/h3&gt;

&lt;p&gt;There are many privacy friendly analytics tool but here are some points that makes it special.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It is written in go so you can but it on the same server as your app as it uses nearly to negligible amount of resource ( in large schema of things ).&lt;/li&gt;
&lt;li&gt;It is written in go fiber which can handle a by lot I mean around 35,000 requests per second ( as per their website).&lt;/li&gt;
&lt;li&gt;It currently supports PostgreSQL and in future I plan to add support for Clickhouse because of its amazing performance, and I will continue to keep postgres supported for as long as possible because of its low resource consumption it would be a great tool for small websites like blogs, like one that, I have though it hasn't been updated for a while now.&lt;/li&gt;
&lt;li&gt;I don't plan to convert it into a SaaS application ( at least in near future ) as I don't want to make another SaaS privacy focused analytics app as there are already many good in market. I'm making this in a way that you can get most insights from your data so it doesn't have a dashboard ( use something like Metabase for it here are some screenshots of dashboard that I build within 3-4 minutes while writing this readme and I'm no profession and it on par with what SaaS provides apps provides to you) with complete control over your data and it can run on simple commodity hardware for a long period of time without any manual Interventions.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0OOi8nqv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/vVNg7PM.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0OOi8nqv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/vVNg7PM.jpg" alt="1st image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xTJtsEmT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/onLrNsl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xTJtsEmT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/onLrNsl.jpg" alt="2nd image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--56S0eIfk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/G44UP29.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--56S0eIfk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/G44UP29.jpg" alt="3rd image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#why-dont-it-has-a-dashboard-build-in-"&gt;
  &lt;/a&gt;
  Why don't it has a dashboard build in ?
&lt;/h3&gt;

&lt;p&gt;There are many privacy friendly analytics tools and they have a dashboard built in as most of them are SaaS application but this isn't gonna be a SaaS app so in order to make most sense out of the data we recommend users to use something like Metabase as even a non-techie can make custom charts and if you are a techie then you can make even more sense of data by writing custom SQL Queries to obtain and visualize data.&lt;/p&gt;

&lt;p&gt;The Images you saw above were made within 3-4 minutes while I was writing README for GitHub repo, and it was auto generated I just changed its sizes and names that's it. So we have made a conscious decision to decouple analytics tool and dashboard for it. &lt;/p&gt;

</description>
      <category>go</category>
      <category>analytics</category>
      <category>privacy</category>
      <category>fasthttp</category>
    </item>
    <item>
      <title>Storage Options in GCP </title>
      <author>Salah Elhossiny</author>
      <pubDate>Thu, 02 Sep 2021 05:20:30 +0000</pubDate>
      <link>https://dev.to/salah856/storage-options-in-gcp-25h8</link>
      <guid>https://dev.to/salah856/storage-options-in-gcp-25h8</guid>
      <description>&lt;p&gt;GCP provides various storage options to store your application data. Different applications have different storage needs, and depending on the application, performance improves.&lt;/p&gt;

&lt;p&gt;Looking at the GCP storage options, it is very clear that it can support various storage needs like NoSQL, Document DB, Object Storage, Relational Database Management System (RDBMS), and so on. You can use Google's managed services for your storage needs, or you can use the Google infrastructure and install services that you need.&lt;/p&gt;

&lt;p&gt;Choosing the right storage option for your application is important. Based on the available storage options in Google, the following chart will help you to identify the right storage option:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4Q0rFklF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/122635361-bbb09e80-d0e3-11eb-9570-5d05cda51873.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4Q0rFklF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/122635361-bbb09e80-d0e3-11eb-9570-5d05cda51873.png" alt="1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, we will discuss the following storage options in detail:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cloud Bigtable&lt;/li&gt;
&lt;li&gt;Cloud Datastore&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cloud Firestore&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cloud SQL&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cloud Spanner&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cloud Memorystore&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cloud-bigtable-and-ai-applications"&gt;
  &lt;/a&gt;
  Cloud Bigtable and AI applications
&lt;/h2&gt;

&lt;p&gt;Cloud Bigtable can act as storage in various AI and ML use cases. Most of the big data migration or modern data platforms use cloud Bigtable to build their NoSQL Database. For example, a streaming ML application can use Bigtable very well as a backend.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cloud-datastore-and-ai-applications"&gt;
  &lt;/a&gt;
  Cloud Datastore and AI applications
&lt;/h2&gt;

&lt;p&gt;Cloud Datastore can act as storage in AI and ML use cases for large web applications. Any e-commerce website hosted on GCP can use Datastore to save data, and using this data, ML models can be trained and can provide required recommendations to the user and in turn can increase customer satisfaction.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cloud-firestore-and-ai-applications"&gt;
  &lt;/a&gt;
  Cloud Firestore and AI applications
&lt;/h2&gt;

&lt;p&gt;Cloud Firestore can act as storage in AI and ML use cases for applications that are hosted on mobile and web devices. Any application hosted on GCP with both website and mobile applications can save the data in Firestore, and using this data, ML models can be trained and can provide required recommendations to users on both their mobile devices and website applications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cloud-sql-and-ai-applications"&gt;
  &lt;/a&gt;
  Cloud SQL and AI applications
&lt;/h2&gt;

&lt;p&gt;Cloud SQL can serve all the AI and ML use cases for large and complex structured data. Another service named Cloud Spanner can serve similar use cases, which can be served by Cloud SQL, but on a very large scale.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cloud-spanner-and-ai-applications"&gt;
  &lt;/a&gt;
  Cloud Spanner and AI applications
&lt;/h2&gt;

&lt;p&gt;Cloud Spanner can serve all the AI and ML use cases which are suitable for MySQL and PostgreSQL. Cloud SQL is right for serving AI and ML use cases that require up to 10 TB of structured data; for example, a machine learning use case requires data preparation, which involves complex SQL joins and can increase the efficiency of the process.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cloud-memorystore-and-ai-applications"&gt;
  &lt;/a&gt;
  Cloud Memorystore and AI applications
&lt;/h2&gt;

&lt;p&gt;Cloud Memorystore can serve various AL and ML use cases using Redis ML modules. Redis ML has various ML modules as built-in data types. Cloud Memorystore can serve machine learning modules for linear and logistic regression, decision tree matrix calculations, and so on.&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>googlecloud</category>
    </item>
    <item>
      <title>An Ultimate Guide To Gatsby - Everything You Need To Know Before Starting with Gatsby</title>
      <author>Suhail Kakar</author>
      <pubDate>Thu, 02 Sep 2021 05:07:49 +0000</pubDate>
      <link>https://dev.to/suhailkakar/an-ultimate-guide-to-gatsby-everything-you-need-to-know-before-starting-with-gatsby-153a</link>
      <guid>https://dev.to/suhailkakar/an-ultimate-guide-to-gatsby-everything-you-need-to-know-before-starting-with-gatsby-153a</guid>
      <description>&lt;p&gt;Gatsby websites are getting popular day by day. Nowadays most of the popular websites use Gatsby because of its speed, SEO and etc, and if you don't know anything about Gatsby, It is probably worth learning it in 2021. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-is-gatsby"&gt;What is Gatsby?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-are-static-sites"&gt;What are Static Sites?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#why-you-should-consider-using-gatsby"&gt;Why you should consider using Gatsby?&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#seo"&gt;SEO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#plugins"&gt;Plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#speed"&gt;Speed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#templates"&gt;Templates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#why-should-you-avoid-gatsby"&gt;Why should you avoid Gatsby?&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#build-time"&gt;Build Time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dynamic-websites"&gt;Dynamic Websites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#complex-sites"&gt;Complex sites&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#set-up-your-first-gatsby-website"&gt;Set Up Your First Gatsby Website&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#installing-gatsby-cli"&gt;Installing Gatsby CLI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#starter-templates"&gt;Starter Templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#run-your-app-locally"&gt;Run your app locally&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#deploying-website-to-netlify"&gt;Deploying Website To Netlify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-gatsby"&gt;
  &lt;/a&gt;
  What is Gatsby?
&lt;/h2&gt;

&lt;p&gt;GatsbyJS is a React-based, GraphQL powered static site generator. Gatsby is an open-source framework that combines functionality from React, GraphQL, and Webpack into a single tool for building static websites and apps. Although the term "static site generator" has been around for a while, Gatsby is more akin to a modern front-end framework than a traditional static site generator.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-static-sites"&gt;
  &lt;/a&gt;
  What are Static Sites?
&lt;/h2&gt;

&lt;p&gt;Static websites have existed for a long time. They're most likely the initial website, with only HTML, CSS, and JavaScript. They aren't rendered in real-time because there isn't any server-side programming, no database, and so on.&lt;/p&gt;

&lt;p&gt;A static site generator is a tool that creates static web pages. JS frameworks and libraries, on the other hand, typically produce HTML content on the client-side during runtime. This material is generated by static site generators while the site is being built. Then, after it's loaded, React takes over, and you've got yourself a single-page app!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-you-should-consider-using-gatsby"&gt;
  &lt;/a&gt;
  Why you should consider using Gatsby?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#seo"&gt;
  &lt;/a&gt;
  SEO
&lt;/h3&gt;

&lt;p&gt;The use of GatsbyJs allows your websites to make use of several of the internal code's optimization strategies. As a result, search engines will rank your website higher. There are a number of plugins that can assist you with this.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#plugins"&gt;
  &lt;/a&gt;
  Plugins
&lt;/h3&gt;

&lt;p&gt;Gatsby has some amazing plugins which can help your website in different aspects. You can install these plugins using NPM or Yarn. &lt;/p&gt;

&lt;p&gt;Some of the popular plugins are Source File-System, Contentful, Plugin Sharp and etc. You can find all plugins on their official website &lt;a href="https://www.gatsbyjs.com/plugins"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#speed"&gt;
  &lt;/a&gt;
  Speed
&lt;/h3&gt;

&lt;p&gt;Gatsby sites are much faster than many of the alternatives, even compared to cached sites using WordPress and things like that because that static site is really hard to beat in terms of its speed and performance.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#templates"&gt;
  &lt;/a&gt;
  Templates
&lt;/h3&gt;

&lt;p&gt;There are enough GatsbyJs Starter repositories and templates available that cloning and altering the content is straightforward. This allows you to quickly and efficiently construct websites such as your blog or your portfolio.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-should-you-avoid-gatsby"&gt;
  &lt;/a&gt;
  Why should you avoid Gatsby?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#build-time"&gt;
  &lt;/a&gt;
  Build Time
&lt;/h3&gt;

&lt;p&gt;As the amount of content on your website grows, so does the time it takes to produce it. This is not only inconvenient during development, but it also wastes time when it comes to deployment. Gatsby is not advised if you want to create a site that changes frequently.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dynamic-websites"&gt;
  &lt;/a&gt;
  Dynamic Websites
&lt;/h3&gt;

&lt;p&gt;Sites with a lot of dynamically produced routes, because you won't be able to reap the benefits of statically generated pages if you don't know what they are at the time of construction.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#complex-sites"&gt;
  &lt;/a&gt;
  Complex sites
&lt;/h3&gt;

&lt;p&gt;Because complex sites expand quickly and take a long time to build, they are continuously adding new pages and material. Although many e-commerce companies can and do employ statically created sites, if build time becomes an issue, it is most likely time to abandon them in favor of dynamically generated sites like Gatsby.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#set-up-your-first-gatsby-website"&gt;
  &lt;/a&gt;
  Set Up Your First Gatsby Website
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#installing-gatsby-cli"&gt;
  &lt;/a&gt;
  Installing Gatsby CLI
&lt;/h3&gt;

&lt;p&gt;The first step is to install Gatsby CLI, You can create and modify a new site using the Gatsby command-line interface. To install Gatsby CLI, simply run :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; gatsby-cli
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;-g&lt;/code&gt; argument indicates that the Gatsby command-line interface is being installed globally rather than locally. As a result, you'll be able to utilize the tool in any directory.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#starter-templates"&gt;
  &lt;/a&gt;
  Starter Templates
&lt;/h3&gt;

&lt;p&gt;As I mentioned previously that you don't need to create a website from scratch, instead we can use some starter templates which can be found on Gatsby's official website. &lt;/p&gt;

&lt;p&gt;For this tutorial, we will use &lt;code&gt;gatsby-starter-default&lt;/code&gt; to do that, run the below command on your terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;gatsby new gatsby-starter-default https://github.com/gatsbyjs/gatsby-starter-default
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;gatsby new&lt;/code&gt; creates a new website. You'll get a barebones site if you utilize gatsby new on its own. Combining gatsby new with a starter template is the most typical approach to use it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#run-your-app-locally"&gt;
  &lt;/a&gt;
  Run your app locally
&lt;/h3&gt;

&lt;p&gt;Once it is done, you should see a message that Gatsby site has been successfully bootstrapped. Now run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;gatsby-starter-default &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; gatsby develop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command with navigate to our new gatsby folder and initialize files, so that we can view it locally. Open your browser and navigate to &lt;code&gt;http://localhost:8000/&lt;/code&gt;, You should see a default stater page, just like image below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HMgZ3TOP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630556437929/UvPkbP0MT.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HMgZ3TOP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630556437929/UvPkbP0MT.png%3Fauto%3Dcompress" alt="Gatsby Default Template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's critical to arrange your website's metadata correctly if you want a search engine to find your website. The gatsby-config.js file allows you to customize your website's data.&lt;/p&gt;

&lt;p&gt;In order to make your website accessible for everybody around the globe, you need to deploy your website in a hosting service. You can deploy a Gatsby website to Netfliy, Vercel, Azure, Gatsby Cloud, Heroku, AWS, IIS, Firebase and etc. But for this example, we will use Netlify&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploying-website-to-netlify"&gt;
  &lt;/a&gt;
  Deploying Website To Netlify
&lt;/h2&gt;

&lt;p&gt;Before deploying our website, first, we need to generate a build folder that contains static files. To do that run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;gatsby build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once it is completed, You should see a folder named &lt;code&gt;public&lt;/code&gt;. That is it, We need only that folder to deploy in Netlify.&lt;/p&gt;

&lt;p&gt;Go to &lt;a href="https://www.netlify.com/"&gt;Netlify&lt;/a&gt; website and if you don't have an account, click on the signup button and create an account. Don't worry, Netfliy is free hosting and it won't charge you anything. Once you registered, you should be redirected to Netfliy dashboard, which will look like this. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s0Gx5bnh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630557032763/BJR3s93Hq.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s0Gx5bnh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630557032763/BJR3s93Hq.png%3Fauto%3Dcompress" alt="Netlify Dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now click on sites on the Netlify menu, and you should see a page with a text "Want to deploy a new site without connecting to Git? Drag and drop your site output folder here" . Drag and drop your public folder on that placeholder, Wait for a while and then your website will be deployed on Netfliy.  If it is deployed successfully you should see something similar to the below image. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8gGGfPO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630557480458/c6_KmJUyK.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8gGGfPO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630557480458/c6_KmJUyK.png%3Fauto%3Dcompress" alt="Netlify Dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope you found this article helpful. If you need any help please let me know in the comment section. &lt;/p&gt;

&lt;p&gt;Would you like to buy me a coffee, You can do it &lt;a href="https://www.buymeacoffee.com/suhailkakar"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let's connect on  &lt;a href="https://twitter.com/suhailkakar"&gt;Twitter&lt;/a&gt;  and  &lt;a href="https://www.linkedin.com/in/suhailkakar/"&gt;LinkedIn&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;üëã Thanks for reading, See you next time&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>gatsby</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Get user input value from input box in visual studio code</title>
      <author>Adrian Matei </author>
      <pubDate>Thu, 02 Sep 2021 04:54:16 +0000</pubDate>
      <link>https://dev.to/codever/get-user-input-value-from-input-box-in-visual-studio-code-1b8e</link>
      <guid>https://dev.to/codever/get-user-input-value-from-input-box-in-visual-studio-code-1b8e</guid>
      <description>&lt;p&gt;Use &lt;code&gt;vscode.window.showInputBox&lt;/code&gt; - the returned value will be &lt;code&gt;undefined&lt;/code&gt; if the input box was canceled (e.g. pressing &lt;strong&gt;ESC&lt;/strong&gt;). Otherwise the returned value will be the string typed by the user or an empty string if the user did not type anything but dismissed the input box with OK.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;searchQuery&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;vscode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;showInputBox&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;placeHolder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Search query&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;prompt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Search my snippets on Codever&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;selectedText&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;searchQuery&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;searchQuery&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;vscode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;showErrorMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;A search query is mandatory to execute this action&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;searchQuery&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;searchUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://www.codever.land/search?q=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;searchQuery&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;sd=my-snippets`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;vscode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;openExternal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Uri&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;searchUrl&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see it in action below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Cpy-KsH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/codeverland/codever-vscode/main/resources/gif/codever-vscode-extension-search-snippet-800x457.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Cpy-KsH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/codeverland/codever-vscode/main/resources/gif/codever-vscode-extension-search-snippet-800x457.gif" alt="vs-code-extension-search"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;The whole source for the &lt;a href="https://marketplace.visualstudio.com/items?itemName=codever.vscode-codever"&gt;Codever Snippets VSCode extension&lt;/a&gt; on &lt;a href="https://github.com/codeverland/codever-vscode"&gt;Github&lt;/a&gt;.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Shared ‚ù§Ô∏è from &lt;a href="https://www.codever.land/snippets/60dbfb494095c204661309bf/details"&gt;Codever&lt;/a&gt;. ¬† üëâ   use the &lt;a href="https://www.codever.land/snippets/60dbfb494095c204661309bf/details"&gt;&lt;strong&gt;copy to mine&lt;/strong&gt;&lt;/a&gt; functionality to add it to your personal snippets collection. &lt;/p&gt;


&lt;/blockquote&gt;

</description>
      <category>typescript</category>
      <category>vscode</category>
      <category>codever</category>
      <category>snippets</category>
    </item>
    <item>
      <title>A closer look at Semantics in HTML</title>
      <author>Shriya Dhar</author>
      <pubDate>Thu, 02 Sep 2021 04:53:23 +0000</pubDate>
      <link>https://dev.to/inverseswirl/a-closer-look-at-semantics-in-html-noo</link>
      <guid>https://dev.to/inverseswirl/a-closer-look-at-semantics-in-html-noo</guid>
      <description>&lt;p&gt;Coding is 50% communication and 50% what you code. HTML is the base markup language used by modern web browsers to communicate website content to users. So, it makes sense to add meaning to the markup language of the web. &lt;/p&gt;

&lt;p&gt;This can be achieved through Semantics in  HTML.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-use-semantics"&gt;
  &lt;/a&gt;
  Why use semantics?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;Web accessibility&lt;/strong&gt;- Our website is designed for the end-users. It helps visually impaired people to navigate through the web page easily. They make use of screen readers to navigate through the pages. As a web developer, adding too many divs for styling pages without using semantic HTML tags will make it difficult for such users to understand the intent of that section of the web page. For instance,
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;article&amp;gt;
  &amp;lt;h1&amp;gt;Title of the blog&amp;lt;/h1&amp;gt;
  &amp;lt;p&amp;gt;Blog content brief&amp;lt;/p&amp;gt;
&amp;lt;/article
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If a developer uses the &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; tag for a blog page instead of plain &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, the screen readers can better communicate the meaning to the visually impaired person.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Easy to read code for other developers&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;HTML files can contain lengthy code inside. If every section has the same-named HTML tags without a specific purpose, it would be confounding for developers to understand the code. Also, usually, developers work in a team. Using semantics as part of HTML code writing improves the readability of code and communication of code to other developers.  &lt;/p&gt;

&lt;p&gt;In a scenario with no semantics in HTML, code will usually look the same with no clear distinction between elements. There will be no named tags but, say, just one &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; to mark an entire web page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   &amp;lt;div&amp;gt;Weather is beautiful outside.&amp;lt;/div&amp;gt;
   &amp;lt;div&amp;gt;Weather forecast:&amp;lt;/div&amp;gt;
   &amp;lt;div&amp;gt;1. Max temperature - 24 degrees Celsius&amp;lt;/div&amp;gt;
   &amp;lt;div&amp;gt;1. Min temperature - 12 degrees Celsius&amp;lt;/div&amp;gt;
   &amp;lt;div&amp;gt;Image&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ah! It is confusing to read. Thanks to semantics in HTML, writing HTML code has become simple, more readable and meaningful.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Improves CSS styling for similar HTML components&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Semantics help developers use specific names to style the same elements on different pages or multiple blocks of the same element on the same web page. &lt;/p&gt;

&lt;p&gt;In the example below, if you were to style a &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; tag or a &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tag using CSS, it becomes much quicker to style these tags using their names. These CSS properties will automatically apply to all the &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; details{
     color: blue;
 }

 p{
    font-family: 'Courier New', Courier, monospace;
 }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Suppose you wish to add separate style properties for the &lt;code&gt;&amp;lt;summary&amp;gt;&lt;/code&gt; element inside multiple &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; tags &amp;amp; each of these &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; tags have different information. You can style these using class attributes and the name of summary tags.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;details class="about"&amp;gt;
    &amp;lt;summary&amp;gt;My Hobbies&amp;lt;/summary&amp;gt;
    &amp;lt;ul&amp;gt;
     &amp;lt;li&amp;gt;Playing cricket&amp;lt;/li&amp;gt;
     &amp;lt;li&amp;gt;Reading books&amp;lt;/li&amp;gt;
   &amp;lt;/ul&amp;gt;
  &amp;lt;/details&amp;gt;

  &amp;lt;details class="facts"&amp;gt;
    &amp;lt;summary&amp;gt;Facts on Weather&amp;lt;/summary&amp;gt;
      &amp;lt;ul&amp;gt;
        &amp;lt;li&amp;gt;It gets cold in December in Australia.&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;In the Sahara desert, the temperature is high 
            during days. &amp;lt;/li&amp;gt;
      &amp;lt;/ul&amp;gt;
  &amp;lt;/details&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;styling:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; .about summary{
     list-style-type: circle;
     color: blue;
}

 .facts summary{
     list-style-type: square;
     color: purple;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Semantic HTML is highly recommended &amp;amp; of high utility especially, for newbies trying to understand the webpage markup language.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Prisma Data Platform - Prisma ORM on Cloud</title>
      <author>Somsubhra Das</author>
      <pubDate>Thu, 02 Sep 2021 04:50:19 +0000</pubDate>
      <link>https://dev.to/somsubhra1/prisma-data-platform-prisma-orm-on-cloud-2854</link>
      <guid>https://dev.to/somsubhra1/prisma-data-platform-prisma-orm-on-cloud-2854</guid>
      <description>&lt;p&gt;&lt;a href="https://www.prisma.io/?utm_source=Prisma%20Ambassador&amp;amp;utm_medium=Blog%20post&amp;amp;utm_campaign=Prisma%20AP%20Somsubhra%20Dass"&gt;Prisma&lt;/a&gt; Data Platform is a cloud based service which allows developers to try the Prisma ORM, run queries on cloud environment without the need to install Prisma Client locally on the developers' computer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-of-prisma-data-platform"&gt;
  &lt;/a&gt;
  Features of Prisma Data Platform
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Free database provisioning&lt;/li&gt;
&lt;li&gt;Pre defined model schema templates&lt;/li&gt;
&lt;li&gt;Run and test Prisma Queries on the data&lt;/li&gt;
&lt;li&gt;Collaboration between team members&lt;/li&gt;
&lt;li&gt;Data browsing capabilities&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;To get started, visit &lt;a href="https://cloud.prisma.io/"&gt;Prisma Data Platform&lt;/a&gt;, sign in with your GitHub Account and click on &lt;strong&gt;New Project&lt;/strong&gt;. From here, we may choose to go in two different ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create new project from scratch&lt;/li&gt;
&lt;li&gt;Import existing project from GitHub&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#creating-project"&gt;
  &lt;/a&gt;
  Creating Project
&lt;/h3&gt;

&lt;p&gt;Creating a project is simple on Prisma Data Platform. Once you create the project on Prisma Data Platform it will simultaneously create a GitHub Project for it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--thZAEMca--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nz9g9w8jc388fbmn3sj0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--thZAEMca--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nz9g9w8jc388fbmn3sj0.png" alt="Project create"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DeM3TXS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vircta7a7x1j9wmwtqft.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DeM3TXS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vircta7a7x1j9wmwtqft.png" alt="GitHub Project"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-database"&gt;
  &lt;/a&gt;
  Creating Database
&lt;/h3&gt;

&lt;p&gt;Prisma Data Platform can automatically spin an app instance on heroku and create a PostgreSQL database instance as well. You may connect to an existing database as well.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BOnWgNHm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p1qts21h2hs80re9k1c4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BOnWgNHm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p1qts21h2hs80re9k1c4.png" alt="Database Creation"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zb7LhfIJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yrmetfkl8l1x2h82euse.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zb7LhfIJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yrmetfkl8l1x2h82euse.png" alt="PostgreSQL Heroku Add-on"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-schema"&gt;
  &lt;/a&gt;
  Creating Schema
&lt;/h3&gt;

&lt;p&gt;One of the great features of Prisma Data Platform is that it provides  pre written schemas for our database. We can even customise the schema if we want. Also it loads sample data to our database so that we can try out our queries on those data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--01K4uing--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2940a7xgkdhd29q5lfux.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--01K4uing--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2940a7xgkdhd29q5lfux.png" alt="Prisma cloud Schema"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For this blog, I would be using the &lt;strong&gt;URL Shortener template&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Once the schema has been created, it pushes the &lt;code&gt;schema.prisma&lt;/code&gt; file to the GitHub Repository and also adds a &lt;code&gt;Readme.md&lt;/code&gt; file to the repo which contains all the instructions for setting up and running the project locally and also the Database &lt;strong&gt;ER diagram&lt;/strong&gt; for ready reference like the one shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bagEBXP1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7i1s3dpt7vp09t54gjvl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bagEBXP1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7i1s3dpt7vp09t54gjvl.png" alt="ER Diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This ER Diagram is generated using:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/notiz-dev/prisma-dbml-generator"&gt;Prisma DBML Generator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dbdiagram.io"&gt;DBDiagram.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#prisma-on-cloud-functionalities"&gt;
  &lt;/a&gt;
  Prisma on Cloud Functionalities
&lt;/h2&gt;

&lt;p&gt;The Prisma on cloud contains several functionalities such as&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Guide to Local Setup &lt;/li&gt;
&lt;li&gt;Data browser (Prisma Studio)&lt;/li&gt;
&lt;li&gt;Query Console&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#local-setup"&gt;
  &lt;/a&gt;
  Local Setup
&lt;/h3&gt;

&lt;p&gt;Prisma on Cloud gives a robust documentation to setup the same project on your local development environment with the option to setup local database or connect to a remote database.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3XTbWWNM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oofuuhdyi4nj6xaw0hlc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3XTbWWNM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oofuuhdyi4nj6xaw0hlc.png" alt="Local Setup"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-browser"&gt;
  &lt;/a&gt;
  Data Browser
&lt;/h3&gt;

&lt;p&gt;Prisma on Cloud provides &lt;strong&gt;Prisma Studio&lt;/strong&gt; out of the box for data browsing on cloud. It helps developers edit data in database tables without a local database client.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DZPTjux4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pvvh6i1tp2uwuxvv6u4g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DZPTjux4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pvvh6i1tp2uwuxvv6u4g.png" alt="Prisma Studio"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#query-console"&gt;
  &lt;/a&gt;
  Query Console
&lt;/h3&gt;

&lt;p&gt;The query console is the heart of Prisma Data Platform. It allows us to write and try out complex queries on the sample dataset. It can even serve as a scratch pad for your queries during the development phase of your application. It helps to instantly get output of a query without having to write APIs and console logs for the same.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uZqRuS2q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9j0or271u8twymp0dcip.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uZqRuS2q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9j0or271u8twymp0dcip.png" alt="Query Console"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Query console supports code highlighting, auto complete, auto saves queries and also code linting features.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#collaborate-with-users"&gt;
  &lt;/a&gt;
  Collaborate with users
&lt;/h3&gt;

&lt;p&gt;Prisma on cloud also allows developers to collaborate with fellow developers, just by inviting a GitHub user to the Prisma Project. It also gives various types of permissions for collaborators such as Admin, Developer, Viewer etc which grants restricted access to the Prisma project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q9JFz33---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c4knd0rcj6i7b35a6pko.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q9JFz33---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c4knd0rcj6i7b35a6pko.png" alt="Collaborate"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Admins can even modify access of collaborators and can remove them from project if at some point they think it's necessary to do so.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next-for-prisma-data-platform"&gt;
  &lt;/a&gt;
  What's next for Prisma Data Platform?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Support for other database dialects&lt;/li&gt;
&lt;li&gt;Multiple environments support to facilitate and organise projects and initiate workflows between them&lt;/li&gt;
&lt;li&gt;Insights such as query times, generated SQL Script about the Query ran in the Query console&lt;/li&gt;
&lt;li&gt;Telemetry events integration from Prisma queries to 3rd party external services supporting Open Telemetry Framework&lt;/li&gt;
&lt;li&gt;Insights about list of queries in the application&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;[Please note: All the above mentioned points are subject to change and are not guaranteed]&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contribute-to-prisma"&gt;
  &lt;/a&gt;
  Contribute to Prisma
&lt;/h2&gt;

&lt;p&gt;Prisma ORM is Open Source and available publicly on GitHub. If you want to contribute to the Prisma check out their GitHub Repository by clicking &lt;a href="https://github.com/prisma/prisma"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#similar-articles"&gt;
  &lt;/a&gt;
  Similar Articles:
&lt;/h5&gt;

&lt;p&gt;Check out my previous blog on Prisma MongoDB Connector &lt;a href="https://dev.to/somsubhra1/journey-from-mongoose-to-prisma-orm-for-mongodb-3j21"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>database</category>
      <category>postgres</category>
      <category>cloud</category>
      <category>opensource</category>
    </item>
  </channel>
</rss>
