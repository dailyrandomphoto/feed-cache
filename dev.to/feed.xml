<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>13 Accessibility Resources For Web designers</title>
      <author>Pawan Bhayde</author>
      <pubDate>Thu, 22 Apr 2021 12:51:18 +0000</pubDate>
      <link>https://dev.to/pawanbhayde/13-accessibility-resources-for-web-designers-2ga4</link>
      <guid>https://dev.to/pawanbhayde/13-accessibility-resources-for-web-designers-2ga4</guid>
      <description>&lt;p&gt;&lt;strong&gt;Accessibility&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://www.getstark.co/"&gt;Stark&lt;/a&gt;&lt;br&gt;
Color-blind simulator and contrast checker&lt;/p&gt;

&lt;p&gt;&lt;a href="http://colorsafe.co/"&gt;Color Safe&lt;/a&gt;&lt;br&gt;
Build accessible colour combinations&lt;/p&gt;

&lt;p&gt;&lt;a href="https://usecontrast.com/"&gt;Contrast&lt;/a&gt;&lt;br&gt;
A macOS app for quick access to WCAG color contrast ratios&lt;/p&gt;

&lt;p&gt;&lt;a href="https://color.review/"&gt;Color Review&lt;/a&gt;&lt;br&gt;
A modern tool for exploring and finding accessible colors&lt;/p&gt;

&lt;p&gt;&lt;a href="https://colorable.jxnblk.com/"&gt;Colorable&lt;/a&gt;&lt;br&gt;
Test and use color combinations that are accessible&lt;/p&gt;

&lt;p&gt;&lt;a href="https://a11yproject.com/"&gt;A11y Project&lt;/a&gt;&lt;br&gt;
Community-driven effort to make web accessibility easier&lt;/p&gt;

&lt;p&gt;&lt;a href="https://contrast-grid.eightshapes.com/"&gt;Contrast Grid&lt;/a&gt;&lt;br&gt;
Test many color combinations for WCAG 2.0 compliance&lt;/p&gt;

&lt;p&gt;&lt;a href="https://clrs.cc/a11y"&gt;90 Colors&lt;/a&gt;&lt;br&gt;
A free collection of accessible color themes&lt;/p&gt;

&lt;p&gt;&lt;a href="https://whocanuse.com/"&gt;Who Can Use&lt;/a&gt;&lt;br&gt;
Accessible color combination tester with different scenarios&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.colorbox.io/"&gt;Colorbox&lt;/a&gt;&lt;br&gt;
Produce accessible color sets&lt;/p&gt;

&lt;p&gt;&lt;a href="https://colororacle.org/"&gt;Color Oracle&lt;/a&gt;&lt;br&gt;
Free color blindness simulator&lt;/p&gt;

&lt;p&gt;&lt;a href="https://michelf.ca/projects/sim-daltonism"&gt;Sim Daltonism&lt;/a&gt;&lt;br&gt;
A color blindness simulator&lt;/p&gt;

&lt;p&gt;&lt;a href="https://abc.useallfive.com/"&gt;Accessible Brand Colors&lt;/a&gt;&lt;br&gt;
Create ADA compliant colors&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hopefully its helpful for you&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Note:- visit my youtube channel for frontend tutorials&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;subscribe to my youtube channel :-&lt;/strong&gt; &lt;a href="https://www.youtube.com/channel/UCR64vQptythbJ1SmI-ub0Rg"&gt;https://www.youtube.com/channel/UCR64vQptythbJ1SmI-ub0Rg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resent post :-&lt;/strong&gt; &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/pawanbhayde" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FR7dkKNA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--cc4jqEtb--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/616392/56aa242b-7e08-47cb-be8f-0b8767227b61.png" alt="pawanbhayde image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/pawanbhayde/microsoft-homepage-clone-using-only-html-and-css-15jn" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Microsoft HomePage Clone Using Only HTML And CSS&lt;/h2&gt;
      &lt;h3&gt;Pawan Bhayde „Éª Apr 21 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>webdev</category>
      <category>design</category>
      <category>uiweekly</category>
      <category>ux</category>
    </item>
    <item>
      <title>JavaScript Interview Question #35: What is faster, zero timeout, or immediate resolve?</title>
      <author>Coderslang: Become a Software Engineer</author>
      <pubDate>Thu, 22 Apr 2021 12:25:30 +0000</pubDate>
      <link>https://dev.to/coderslang/javascript-interview-question-35-what-is-faster-zero-timeout-or-immediate-resolve-3agl</link>
      <guid>https://dev.to/coderslang/javascript-interview-question-35-what-is-faster-zero-timeout-or-immediate-resolve-3agl</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uotiuJT6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/js-test-35.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uotiuJT6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/js-test-35.png" alt="js-test-35"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What's the order of the output?&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;Both &lt;code&gt;setTimeout&lt;/code&gt; and &lt;code&gt;Promise.resolve&lt;/code&gt; are asynchronous actions, which means that the inner &lt;code&gt;console.log&lt;/code&gt; statements will be evaluated after some delay.&lt;/p&gt;

&lt;p&gt;The difference is that &lt;code&gt;Promise.resolve&lt;/code&gt; schedules the microtask, and &lt;code&gt;setTimeout&lt;/code&gt; schedules the macrotask. Micro tasks have higher priority than macrotasks, thus &lt;code&gt;Promise.resolve&lt;/code&gt; will be evaluated faster and the first output will be &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;ANSWER&lt;/strong&gt;: &lt;code&gt;2&lt;/code&gt; will be printed on the first line, followed by &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://js.coderslang.com/sign-in"&gt;Learn Full-Stack JavaScript&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>webdev</category>
    </item>
    <item>
      <title>CSS Only Dog Walk Puzzle Simple Game</title>
      <author>Takane Ichinose</author>
      <pubDate>Thu, 22 Apr 2021 12:22:24 +0000</pubDate>
      <link>https://dev.to/takaneichinose/css-only-dog-walk-puzzle-simple-game-5d32</link>
      <guid>https://dev.to/takaneichinose/css-only-dog-walk-puzzle-simple-game-5d32</guid>
      <description>&lt;h1&gt;CodepenChallenge On and Off&lt;/h1&gt;

&lt;h2&gt;Description&lt;/h2&gt;

&lt;p&gt;I hope this is considered as microinteractions. üòÖ&lt;/p&gt;

&lt;p&gt;This game is full of hidden radio buttons, and checkboxes inside.&lt;/p&gt;

&lt;p&gt;CSS only simple game built with Pug, SCSS, and pixel-art images.&lt;/p&gt;

&lt;p&gt;I actually intended to draw a cat, but when I tried, the result looked like a dog, so I decided to make this game a 'dog' game.&lt;/p&gt;

&lt;p&gt;When one of the radios/checkboxes was ticked, the controls will hide/show depends on the condition.&lt;/p&gt;

&lt;p&gt;I thought of this game because in recent times, the switches element are created by hidden checkboxes anyway.&lt;/p&gt;

&lt;p&gt;There are actually many rendered controllers on the DOM, but are just hidden.&lt;/p&gt;

&lt;p&gt;The Dog is also animated when moving. Although the dog stays at the center while moving.&lt;/p&gt;

&lt;p&gt;The actual moving objects are the background. Which I also used parallax to animate. The 'farthest' object moves slower than the 'nearest' object. Which covers the 'parallax effect'.&lt;/p&gt;

&lt;p&gt;Recently, I've been studying the ways to draw a pixel art. Which I found interesting.&lt;/p&gt;




&lt;h2&gt;Controls&lt;/h2&gt;

&lt;p&gt;Although stated at the instructions, here is how to control the game:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;At the bottom right of the screen, the ‚ñ∑ (Triangle facing right) icon will make you move to the right.&lt;/li&gt;
&lt;li&gt;At the bottom right of the screen, the ‚óÅ (Triangle facing left) icon will make you move to the left.&lt;/li&gt;
&lt;li&gt;At the bottom left of the screen, the fang or tooth or whatever icon will make you interact with the object.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Objective&lt;/h2&gt;

&lt;p&gt;Because this is just a simple game, there aren't that much puzzles that will make you think.&lt;/p&gt;

&lt;p&gt;Just move further, take away the obstacle, and get the bone. Simple isn't it?&lt;/p&gt;




&lt;h2&gt;Tools&lt;/h2&gt;

&lt;p&gt;This game doesn't have any Javascript code for the functionality (Except the comment, and Pug's (or Jade) Javascript). But heavily relies on &lt;a href="https://sass-lang.com/"&gt;SCSS&lt;/a&gt;' loop, which makes the SCSS code so large when compiled.&lt;/p&gt;

&lt;p&gt;I used &lt;a href="https://www.getpaint.net/"&gt;Paint.NET&lt;/a&gt; to draw the assets.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/takaneichinose/embed/LYxgvQW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>webdev</category>
      <category>gamedev</category>
      <category>css</category>
    </item>
    <item>
      <title>DISCUSS: JavaScript just DIED! What language should replace it?</title>
      <author>Naseki</author>
      <pubDate>Thu, 22 Apr 2021 12:18:25 +0000</pubDate>
      <link>https://dev.to/naseki/discuss-javascript-just-died-what-language-should-replace-it-2ak5</link>
      <guid>https://dev.to/naseki/discuss-javascript-just-died-what-language-should-replace-it-2ak5</guid>
      <description>&lt;p&gt;People usually have a love-hate relationship with JavaScript. It's got its beauty and its unavoidable quirks. We're all familiar with them. We can't deny that it's been an absolute powerhouse for the web, though.&lt;/p&gt;

&lt;p&gt;You'll always find Js in the top 10 or even top 5 lists of most popular programming languages. It's also the #1 topic on dev.to!&lt;/p&gt;

&lt;p&gt;But what if all of that suddenly went, like, POOF! üëª&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#now-now-wheres-this-coming-from"&gt;
  &lt;/a&gt;
  Now now, where's this coming from?
&lt;/h1&gt;

&lt;p&gt;First of all, special thanks to &lt;a class="mentioned-user" href="https://dev.to/technoglot"&gt;@technoglot&lt;/a&gt;
 for the inspiration!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/technoglot" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lh6IYNlR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--sRtmRRW_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/430182/1ae1b206-5ef0-4d89-85eb-08fc33ba191f.jpg" alt="technoglot image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/technoglot/javascript-is-dead-14bm" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;JavaScript is DEAD üíÄ&lt;/h2&gt;
      &lt;h3&gt;Amelia Vieira Rosado „Éª Apr  9 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#watercooler&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Her article asked this simple question: What would your tech stack look like if JavaScript didn't exist?&lt;/p&gt;

&lt;p&gt;I'm a webdeveloper through and through. Naturally, I'd start unpacking all CSS-only solutions! However, I started thinking more about the implications of JavaScript's death, like...&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#%E2%9C%8D-comment-below-answering-the-following-question"&gt;
  &lt;/a&gt;
  ‚úç Comment below answering the following question
&lt;/h1&gt;

&lt;p&gt;If JavaScript stopped existing, &lt;strong&gt;what language do you think should replace it?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now, I understand that some programming languages aren't quite ready for things like DOM manipulation and such. Imagine these things would be implemented into said languages.&lt;/p&gt;

&lt;p&gt;Or perhaps you have a better version of JavaScript in mind? üòÆ‚òù Let me know! &lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ciETrbsg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sa0hfs0886uf0g7c0b7e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ciETrbsg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sa0hfs0886uf0g7c0b7e.png" alt="Naseki logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/Naseki_"&gt;Twitter&lt;/a&gt; | &lt;a href="https://naseki.com"&gt;Website&lt;/a&gt; | &lt;a href="https://buttondown.email/Naseki/"&gt;Newsletter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>watercooler</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>From Zero to Hero (‚ñÄÃøƒπÃØ‚ñÄÃø Ãø) in Authentication | Part 1</title>
      <author>Kushagra Mehta</author>
      <pubDate>Thu, 22 Apr 2021 12:14:03 +0000</pubDate>
      <link>https://dev.to/kushagra_mehta/from-zero-to-hero-l-in-authentication-part-1-38od</link>
      <guid>https://dev.to/kushagra_mehta/from-zero-to-hero-l-in-authentication-part-1-38od</guid>
      <description>&lt;h1&gt;
  &lt;a href="#authentication"&gt;
  &lt;/a&gt;
  Authentication
&lt;/h1&gt;

&lt;p&gt;First focus on &lt;strong&gt;"WHAT"&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;

&lt;div class="ltag__wikipedia--container"&gt;
  &lt;div class="ltag__wikipedia--header"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sew3uq9H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/wikipedia-logo-0a3e76624c7b1c3ccdeb9493ea4add6ef5bd82d7e88d102d5ddfd7c981efa2e7.svg" class="ltag__wikipedia--logo" alt="Wikipedia Logo"&gt;
    &lt;a href="https://en.wikipedia.org/wiki/Authentication" rel="noopener noreferrer"&gt;Authentication&lt;/a&gt;
  &lt;/div&gt;
  &lt;div class="ltag__wikipedia--extract"&gt;&lt;p&gt;&lt;b&gt;Authentication&lt;/b&gt; is the act of proving an assertion, such as the identity of a computer system user. In contrast with identification, the act of indicating a person or thing's identity, authentication is the process of verifying that identity. It might involve validating personal identity documents, verifying the authenticity of a website with a digital certificate, determining the age of an artifact by carbon dating, or ensuring that a product or document is not counterfeit.&lt;/p&gt;&lt;/div&gt;
  &lt;div class="ltag__wikipedia--btn--container"&gt;
    
      &lt;a href="https://en.wikipedia.org/wiki/Authentication" rel="noopener noreferrer"&gt;View on Wikipedia&lt;/a&gt;
    
  &lt;/div&gt;
&lt;/div&gt;

&lt;/blockquote&gt;

&lt;p&gt;OKAY.ü§®! But it is kinda hard for me. Let's understand with a simple example. For example, you're Sheldon Cooper you go to the bank to withdraw money. You say to the cashier give me $5000, they were like &lt;em&gt;"Who are you?? I don't know you so I can't"&lt;/em&gt;. This happens because they don't know you, to identify you as a real holder of your bank account. They provided you a bank account number and pin/signature to identify you. When you give these details to the cashier, he will like &lt;em&gt;"Thank you! Mr. Cooper, here is your $5000"&lt;/em&gt;.  So this shows that by giving the details it identifies you as the real holder of the bank account. &lt;em&gt;So the process or action of verifying the identity of a user or process is &lt;strong&gt;Authentication&lt;/strong&gt;&lt;/em&gt;.&lt;br&gt;
&lt;a href="https://i.giphy.com/media/3o6MbmTd7iUDK5AiHu/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3o6MbmTd7iUDK5AiHu/giphy.gif" alt="Security"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#types-of-authentication"&gt;
  &lt;/a&gt;
  Types of Authentication
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Stateful

&lt;ul&gt;
&lt;li&gt;Cookie/Session Based Auth.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Stateless

&lt;ul&gt;
&lt;li&gt;Basic Auth&lt;/li&gt;
&lt;li&gt;JWT&lt;/li&gt;
&lt;li&gt;OAuth&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#stateful-authentication"&gt;
  &lt;/a&gt;
  Stateful Authentication
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/7GYHmjk6vlqY8/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/7GYHmjk6vlqY8/giphy.gif" alt="Cookie"&gt;&lt;/a&gt;&lt;br&gt;
Stateful Authentication is a way to verify users by having the server or backend store much of the session information, such as user properties. &lt;br&gt;
In this method whenever a client requests to the server, the request carries the unique-id provided by the server at the authentication time and this ID is matched against its identity provider (IdP).&lt;br&gt;
Stateful authentication is also called session-based authentication or cookie-based authentication for the session information the server must store on the user.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages"&gt;
  &lt;/a&gt;
  Advantages
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Revoke the session anytime.&lt;/li&gt;
&lt;li&gt;Easy to implement and manage.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#disadvantages"&gt;
  &lt;/a&gt;
  Disadvantages
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Increasing server overhead: As the number of logged-in users increases, the more server resources are occupied.&lt;/li&gt;
&lt;li&gt;Server has to store the session id which limits scalability.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#stateless-authentication"&gt;
  &lt;/a&gt;
  Stateless Authentication
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/eSgUxM1lzE4YYL4A9O/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/eSgUxM1lzE4YYL4A9O/giphy.gif" alt="Token-based"&gt;&lt;/a&gt;&lt;br&gt;
Stateless authentication is a way to verify a user by storing its data on the client-side and signing it with some cryptographic signature. This signed data is known as a token. Whenever a client tries to request the server, the server verifies the signed token, check if the token is valid or not.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages"&gt;
  &lt;/a&gt;
  Advantages
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Easy to scale &lt;/li&gt;
&lt;li&gt;Lower server overhead: Server does not have to allocate resources to the client.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#disadvantages"&gt;
  &lt;/a&gt;
  Disadvantages
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Cannot revoke the session anytime: As token is stored at client side, server does not have any rights to delete the session.&lt;/li&gt;
&lt;li&gt;Relatively complex to implement: It increases the technical complexity while implementing.&lt;/li&gt;
&lt;li&gt;If a token gets steal before expiring and a hacker uses it, the server has no way to identify it. That's why token's expiry time should be less(&amp;lt;=15min).
&lt;img src="https://i.giphy.com/media/wY6uwmZZAchWM/giphy.gif" alt="Man-In-Middle"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Stateful&lt;/th&gt;
&lt;th&gt;Stateless&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Session information could be stolen&lt;/td&gt;
&lt;td&gt;‚ùå It is impossible to steal session information from the session identifier because it is just an identifier associated with the session&lt;/td&gt;
&lt;td&gt;‚úÖ Session identifier contains all authentication information and it is possible to steal sensitive information, it is not encrypted.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Resource consuming&lt;/td&gt;
&lt;td&gt;‚úÖ When retrieving session information, service always gets access to session storage which causes additional resource consumption.&lt;/td&gt;
&lt;td&gt;‚ùå The session identifier contains all session information.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Easy to implement&lt;/td&gt;
&lt;td&gt;‚úÖWhen session information stored in an external database, there is a need to implement session database persistence&lt;/td&gt;
&lt;td&gt;‚ùåSession identifier contains all session information, there is no need to implement additional functionality&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Easy to scale&lt;/td&gt;
&lt;td&gt;‚ùåWhile adding new instances, there is a need to implement additional scale to session storage as well&lt;/td&gt;
&lt;td&gt;‚úÖAdding new service instances does not require additional effort&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Authentication token size&lt;/td&gt;
&lt;td&gt;ü§èIt is just an identifier, So size is small&lt;/td&gt;
&lt;td&gt;ü•µ It contains a large amount of data, the authentication token also becomes large&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Restrict access among different parts of an application&lt;/td&gt;
&lt;td&gt;‚úÖIt is possible to configure the system so different parts of the system will only have access to the data necessary for their work&lt;/td&gt;
&lt;td&gt;‚ùåAll parts of the system have access to all session data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Possibility to revoke session&lt;/td&gt;
&lt;td&gt;‚úÖIt is possible to revoke a session at any time&lt;/td&gt;
&lt;td&gt;‚ùåSince the session token contains an expiration date, it is impossible to revoke the authentication session&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Both approaches make sense, both have their advantages and disadvantages. Stateless authentication easier to implement and scale, but stateful authentication is more secure and easier to manage. In the next part, we'll understand each way of authentication like JWT, Cookie, OAuth, Etc. üëãüèª&lt;br&gt;
&lt;a href="https://i.giphy.com/media/YnGDmAudv7F2UASBqK/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/YnGDmAudv7F2UASBqK/giphy.gif" alt="Bye"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bibliography"&gt;
  &lt;/a&gt;
  Bibliography
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.openidentityplatform.org/blog/stateless-vs-stateful-authentication"&gt;Stateful vs Stateless Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=44c1t_cKylo"&gt;Difference between cookies, session and tokens&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>security</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Algolia Coding Contest üßë‚Äçüíª</title>
      <author>Julie Reboul</author>
      <pubDate>Thu, 22 Apr 2021 11:41:10 +0000</pubDate>
      <link>https://dev.to/algolia/algolia-coding-contest-4cm4</link>
      <guid>https://dev.to/algolia/algolia-coding-contest-4cm4</guid>
      <description>&lt;p&gt;Hi everyone! We're happy to announce Algolia is kicking off a &lt;strong&gt;Coding Contest&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;To participate, it's simple:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Build a project using Algolia, choosing one of the 3 categories listed below&lt;/li&gt;
&lt;li&gt;Place your submission in a GitHub repository&lt;/li&gt;
&lt;li&gt;Send your project to &lt;strong&gt;&lt;em&gt;codingcontest[at]algolia.com&lt;/em&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The deadline for all submissions is &lt;strong&gt;Wednesday, May 5th, 11:59pm PST&lt;/strong&gt;. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-prizes"&gt;
  &lt;/a&gt;
  The prizes
&lt;/h1&gt;

&lt;p&gt;Exciting news! For each category, the winner will receive one of the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A smartphone of your choice between an iPhone 12 64 Gb / a Samsung S21 128 Gb / an OPPO Find X3 Neo 256 Gb&lt;/li&gt;
&lt;li&gt;Or an $800 Amazon giftcard.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On top of that, each participant is entitled to a 1-month coupon to use Algolia for free. Please send us an email to codingcontest[at]algolia.com with ‚ÄúCoupon request‚Äù in the subject line.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#project-requirements"&gt;
  &lt;/a&gt;
  Project requirements
&lt;/h1&gt;

&lt;p&gt;Build a search interface using Algolia. It can be for mobile or the web. You can integrate it into an existing website or app that has no search yet, or create a simple, standalone interface for the contest.&lt;/p&gt;

&lt;p&gt;In you are not familiar with Algolia, we suggest you follow our &lt;a href="https://www.algolia.com/doc/guides/getting-started/quick-start/"&gt;Quick Start guide&lt;/a&gt;, which will help you (a) send data to Algolia and (b) build a UI. You can also use our &lt;a href="https://www.algolia.com/doc/onboarding/#/pick-dataset"&gt;Interactive Tutorial&lt;/a&gt; for the same purposes.&lt;/p&gt;

&lt;p&gt;Additionally, feel free to use any of Algolia‚Äôs features: facets, solutions, paging, menus, and so on. Check out our &lt;a href="https://www.algolia.com/doc/guides/solutions/gallery-overview/"&gt;solutions page&lt;/a&gt; in the docs for tutorials, and check our &lt;a href="https://www.algolia.com/search-inspiration-library/"&gt;inspiration library&lt;/a&gt; to see what you can build. &lt;/p&gt;

&lt;p&gt;We will not accept projects that display violence, pornography, abuse, or any kind of hate speech, as stated in the Coding Contest &lt;a href="https://drive.google.com/file/d/1tO_zOR_noyTxfkpB18gI6MNmcSu9TWRs/view?usp=sharing"&gt;Official Rules&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#criteria"&gt;
  &lt;/a&gt;
  Criteria
&lt;/h1&gt;

&lt;p&gt;To evaluate your submitted project, we will take into account:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Functionality:&lt;/strong&gt; Is your code clean, does it work well?&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;User experience:&lt;/strong&gt; Once you've got the features, now it‚Äôs time to design the interface. Are features well placed on the screen? Are they nicely styled? Extra points for creativity or novelty!&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#your-project-pick-one"&gt;
  &lt;/a&gt;
  Your project - Pick one:
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Important note&lt;/strong&gt;: you can only submit &lt;em&gt;one&lt;/em&gt; project. &lt;/p&gt;

&lt;p&gt;Choose from one of the following three categories:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-category"&gt;
  &lt;/a&gt;
  First category
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Build a project using both the &lt;a href="https://strapi.io/"&gt;Strapi&lt;/a&gt; and &lt;a href="https://www.algolia.com/"&gt;Algolia&lt;/a&gt; APIs.&lt;/strong&gt;&lt;br&gt;
You can also include any other APIs or tool you'd like for this project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#second-category"&gt;
  &lt;/a&gt;
  Second category
&lt;/h2&gt;

&lt;p&gt;If you're not familiar with Strapi, we offer you a broader option: &lt;strong&gt;build a project using the Algolia API&lt;/strong&gt;.&lt;br&gt;
You can also include any other APIs or tools you'd like for this project. Please refer to our &lt;a href="https://www.algolia.com/doc"&gt;documentation&lt;/a&gt; if you have any questions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#third-category"&gt;
  &lt;/a&gt;
  Third category
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Build an Algolia implementation using a pre-made Codesandbox&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;See the &lt;a href="https://github.com/algolia/algolia-coding-contest/blob/main/contest-category3-sandbox.md"&gt;rules here&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#frequently-asked-questions"&gt;
  &lt;/a&gt;
  Frequently Asked Questions
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Can Algolia offer me a free plan for this project?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Yes. Algolia offers a 14-day full-featured free trial for all new users. We are also offering a 1-month coupon for each participant to thank you for joining the contest. If you‚Äôre interested in receiving the coupon, please send us an additional email to codingcontest[at]algolia.com with ‚ÄúCoupon request‚Äù in the subject line.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Can I use Strapi for free for this project?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Yes. Strapi offers a Community plan that is free and available to everyone.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; Can I participate in several categories?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;No. You can only participate in one of the 3 categories, as stated in the Coding Contest &lt;a href="https://drive.google.com/file/d/1tO_zOR_noyTxfkpB18gI6MNmcSu9TWRs/view?usp=sharing"&gt;Official Rules&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When will the results will be announced?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;The Algolia jury will deliberate during 2 weeks after the last day of submissions.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How will I know I am the winner of my category?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;You will receive an email from the Algolia team. They will contact you about the prize and how to organize the shipping.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If I have some questions for the organizers, where should I send them?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Please send them to codingcontest[at]algolia.com&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Can a website/app already using Algolia be submitted?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;No. The goal of this contest is for you to build something new. We want to make the contest fair to every participant who has until May 5th to build their project. However, you can definitely get inspired by one of your previous projects using Algolia!&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Does the code have to be public or can I submit a private repository?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;You can submit a private repository, but we will ask you to give access to the jury members when you submit on the codingcontest[at]algolia.com email adress.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#coding-contest-official-rules"&gt;
  &lt;/a&gt;
  Coding Contest Official Rules
&lt;/h3&gt;

&lt;p&gt;The Official Rules of the Coding Contest are available here. By participating to the Coding Contest, you agree with the Algolia Coding Contest &lt;a href="https://drive.google.com/file/d/1tO_zOR_noyTxfkpB18gI6MNmcSu9TWRs/view?usp=sharing"&gt;Official Rules&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>contest</category>
      <category>hackathon</category>
      <category>search</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Float an Element to the Bottom Corner</title>
      <author>Temani Afif</author>
      <pubDate>Thu, 22 Apr 2021 11:36:42 +0000</pubDate>
      <link>https://dev.to/afif/float-an-element-to-the-bottom-corner-342n</link>
      <guid>https://dev.to/afif/float-an-element-to-the-bottom-corner-342n</guid>
      <description>&lt;p&gt;&lt;sup&gt;pssst, I am on twitter --&amp;gt; &lt;a href="https://twitter.com/ChallengesCss"&gt;follow me!&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Need to lay out an element to the right or the left, such that text wraps around it? That's an easy task for the float property. But what about if you also want to push that element (let's call it an image) to one of the bottom corners while we‚Äôre at it? Sounds a bit tricky, right? We probably need JavaScript?&lt;/p&gt;

&lt;p&gt;Nope, few lines of (tricky) CSS can do it! Here's the CSS-only solution that will make your image to stick to the bottom corner, regardless of the size and content.&lt;/p&gt;

&lt;p&gt;Resize the wrapper element and see the magic at work:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/JjbEXYm?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Let's dissect the code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#markup-and-layout"&gt;
  &lt;/a&gt;
  Markup and layout
&lt;/h3&gt;

&lt;p&gt;We'll need a wrapper element to contain everything, and we'll be using flexbox on it. Flexbox allows us to rely on the default stretch alignment to be able to later use &lt;code&gt;height: 100%.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"float"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    Lorem ipsum dolor ...
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.wrapper&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.float&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex-end&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;shape-outside&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="n"&gt;-&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;.box&lt;/code&gt; within the &lt;code&gt;.wrapper&lt;/code&gt; is our flex item. We don't need any particular CSS applied to the box. It defines the height of the wrapper and, at the same time, is stretched to the same height. This behavior will give us a "reference height" that can be used by the child elements.&lt;/p&gt;

&lt;p&gt;From &lt;a href="https://www.w3.org/TR/css-flexbox-1/#algo-stretch"&gt;the specification&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If the flex item has &lt;code&gt;align-self: stretch&lt;/code&gt;, redo layout for its contents, treating this used size as its definite cross size so that percentage-sized children can be resolved.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The keyword is the &lt;strong&gt;definite&lt;/strong&gt; which allows us to safely use a percentage (%) height inside the box element.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#now-for-the-floated-element"&gt;
  &lt;/a&gt;
  Now for the floated element
&lt;/h3&gt;

&lt;p&gt;Our &lt;code&gt;.float&lt;/code&gt; element will take the entire height next to the text content, thanks to the height calculation we detailed above. Inside this element we push the image to the bottom using flexbox alignment.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jUnHk5fH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/04/q0prkg5dsvplig90u78x.png%3Fw%3D836%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jUnHk5fH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/04/q0prkg5dsvplig90u78x.png%3Fw%3D836%26ssl%3D1" alt="Float image to right"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now for the real trickery, using the &lt;code&gt;shape-outside&lt;/code&gt; property. Here‚Äôs how &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/shape-outside"&gt;MDN defines it&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The shape-outside CSS property defines a shape‚Äîwhich may be non-rectangular‚Äîaround which adjacent inline content should wrap. By default, inline content wraps around its margin box; shape-outside provides a way to customize this wrapping, making it possible to wrap text around complex objects rather than simple boxes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In other words, shape-outside sets the way content flows around an element's bounding box.&lt;/p&gt;

&lt;p&gt;It takes a number of values. One of those is the &lt;code&gt;inset()&lt;/code&gt; function which, again, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/basic-shape#inset()"&gt;according to MDN&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Defines an inset rectangle. When all of the first four arguments are supplied they represent the top, right, bottom and left offsets from the reference box inward that define the positions of the edges of the inset rectangle.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, with &lt;code&gt;shape-outside: inset(calc(100% - X) 0 0)&lt;/code&gt; we can create an inset rectangle that starts exactly at the top of the image. And the top is equal to &lt;code&gt;100% - X&lt;/code&gt;, where &lt;code&gt;X&lt;/code&gt; is the image height and &lt;code&gt;100%&lt;/code&gt; is the height of the &lt;code&gt;.float&lt;/code&gt; element. This allows the text to wrap within the free space on the top of the image. This is responsive, plus we can easily switch between left and right (by adjusting the float property)&lt;/p&gt;

&lt;p&gt;That's it! The only major caveat is that you need to know the image height.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#want-more"&gt;
  &lt;/a&gt;
  Want more?
&lt;/h2&gt;

&lt;p&gt;We can extend this concept a little further to account for fancier situations. For example, we can float the image to the right, but pin it to the middle of the box with &lt;code&gt;justify-content: center&lt;/code&gt; and also adjust our inset rectangle to the middle by changing the shape-outside from &lt;code&gt;inset(calc(100% - X) 0 0)&lt;/code&gt; to &lt;code&gt;inset(calc(50% - X/2) 0)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/PoWEYmX?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;We can also float two images at both bottom corners:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/WNRdeqr?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Nothing complex here. I am simply using the same floating element twice, once on the right, and again on the left. And why stop at two corners when we can place images at all four corners:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/qBRpWPV?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The same basic idea is at play here, but we're are also relying on the common float feature for the top images. However, you'll notice that this is where the concept starts to break down a bit, and we get some unwanted overflow depending on the size of the containing box. We can make the height of the &lt;code&gt;.float&lt;/code&gt; element greater than 100% and apply somewhat "magic numbers" that smooth things out by adjusting the padding and margin of the images.&lt;/p&gt;

&lt;p&gt;Did you know that &lt;code&gt;shape-outside&lt;/code&gt; accepts &lt;code&gt;radial-gradient()&lt;/code&gt; as a value? We can use that to place rounded images like below:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/ExZoYEX?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The transparent part of the gradient is the &lt;em&gt;free&lt;/em&gt; space where the text can go. You may have noticed that we applied a &lt;code&gt;border-radius&lt;/code&gt; to the image as well. The &lt;code&gt;shape-outside&lt;/code&gt; property will simply affect the &lt;code&gt;.float&lt;/code&gt; element and we need to manually adjust the shape of the image to follow the shape defined by &lt;code&gt;shape-outside&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;While we're at it, let's combine this with our earlier example that pins the image to the vertical center of the box using &lt;code&gt;justify-content: center&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/dyNJbeK?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Another &lt;code&gt;radial-gradient()&lt;/code&gt; and also another &lt;code&gt;border-radius&lt;/code&gt; configuration.&lt;/p&gt;

&lt;p&gt;We could have used a &lt;code&gt;linear-gradient()&lt;/code&gt; instead to make a triangular shape for the wrapping area:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/GRryKGz?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;This is the same idea that we used for the &lt;code&gt;radial-gradient()&lt;/code&gt;. The big difference is that we're using &lt;code&gt;clip-path&lt;/code&gt; instead of &lt;code&gt;border-radius&lt;/code&gt; to cut our image.&lt;/p&gt;

&lt;p&gt;And, since we did it for the others, let's use the &lt;code&gt;justify-content: center&lt;/code&gt; idea to pin the image to the vertical center of the box's right edge:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/abpEoaV?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;We used a &lt;code&gt;conic-gradient()&lt;/code&gt; in the above demo with &lt;code&gt;shape-outside&lt;/code&gt; to define the triangular shape and &lt;code&gt;clip-path&lt;/code&gt; to get a similar shape on the image&lt;/p&gt;

&lt;p&gt;All of these examples can still be optimized using less of code in the case that the image is decorative (when it's not needed inside the HTML for SEO purposes). Let's replace the &lt;code&gt;.float&lt;/code&gt; element with a pseudo-element and apply the image as background instead:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/XWpYVVz?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;We're using mask to show just the portion of the image that we need and, guess what, it uses the same value as &lt;code&gt;shape-outside&lt;/code&gt;! So, all we had to do is define one value for the shape.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thats-it"&gt;
  &lt;/a&gt;
  That's it!
&lt;/h3&gt;

&lt;p&gt;There are a lot of possibilities here to place not just rectangles in corners, but any kind of shape at any position, using largely the same code structure. We only need to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Adjust the &lt;code&gt;shape-outside&lt;/code&gt; property to define the shape&lt;/li&gt;
&lt;li&gt;Apply some styling to the image to follow the previously defined shape or apply the same value to mask in case we are using the pseudo element version&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then everything holds it place, even in responsive designs.&lt;/p&gt;




&lt;p&gt;Did I tell you that I am on twitter? Yes ... so you know what to do then:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0-follow-me"&gt;
  &lt;/a&gt;
  ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬† &lt;a href="https://twitter.com/ChallengesCss"&gt;Follow me&lt;/a&gt;
&lt;/h2&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Do You Do Home Automation? Join Us!</title>
      <author>Lars Richter</author>
      <pubDate>Thu, 22 Apr 2021 11:06:00 +0000</pubDate>
      <link>https://dev.to/n_develop/do-you-do-home-automation-join-us-1fkf</link>
      <guid>https://dev.to/n_develop/do-you-do-home-automation-join-us-1fkf</guid>
      <description>&lt;p&gt;A lot of developers like tinkering with all sorts of tech. And if you own, build or rent a house or an apartment, home automation is a cool area to discover and play with.&lt;/p&gt;

&lt;p&gt;But home automation can be frustrating as well. Which system should I choose? Should I go with an open-source system like Home Assistant? Or maybe with something like Philips Hue? Where do I start? Lighting? Heating? Cameras? Door locks?&lt;/p&gt;

&lt;p&gt;But even if you found a system to go with, there will be hurdles. I mean, it's tech, isn't it? üòâ And that's where a community would be awesome. Asking questions. Giving advice to others. That's what we are here for. And &lt;a href="https://dev.to/ben"&gt;Ben&lt;/a&gt;  created a special (of course Forem-powered) community for everything related to technology in your home.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#join-hometechnica"&gt;
  &lt;/a&gt;
  Join &lt;a href="https://www.hometechnica.com"&gt;Hometechnica&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;It's not just about home automation. There is much more. Here is the "tagline" of Hometechnica.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Homebuilding in the age of automation, privacy, security, and alternative energy. Gadgets, ideas, and community.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you are interested in any of these topics, come join us over there. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.hometechnica.com"&gt;https://www.hometechnica.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It will be fun. I promise. üòÑ&lt;/p&gt;

</description>
      <category>homeautomation</category>
      <category>smarthome</category>
      <category>community</category>
      <category>hometechnica</category>
    </item>
    <item>
      <title>How To Make Money With Technical Articles As A Developer</title>
      <author>The Code Lounge</author>
      <pubDate>Thu, 22 Apr 2021 11:04:00 +0000</pubDate>
      <link>https://dev.to/codeloungedev/how-to-make-money-with-technical-articles-as-a-developer-1kl3</link>
      <guid>https://dev.to/codeloungedev/how-to-make-money-with-technical-articles-as-a-developer-1kl3</guid>
      <description>&lt;p&gt;&lt;a href="https://codelounge.dev"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oZGLRauQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617198357271/uoNdlXnwM.png" alt="cover (1).png"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Learn how to monetise your knowledge and create a side¬†income&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Writing paid technical articles is a great way to create a side-income or even a salary. Thus, this article will teach you how to make money with technical articles as a developer. &lt;/p&gt;

&lt;p&gt;The good thing is that you can make money with technical articles even if you are not a super experienced developer. However, that does not mean you should not have a bit of experience. To put things into perspective, I made money writing articles as a junior developer. So it is doable.&lt;/p&gt;

&lt;p&gt;With that being said, this article assumes no knowledge about the subject. As a result, you will learn how to do it from zero. You will learn how to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;choose an area of expertise&lt;/li&gt;
&lt;li&gt;start a blog&lt;/li&gt;
&lt;li&gt;write consistently&lt;/li&gt;
&lt;li&gt;pitch websites and publications to write for them&lt;/li&gt;
&lt;li&gt;write on freeCodeCamp&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#your-area-of-expertise"&gt;
  &lt;/a&gt;
  Your area of expertise
&lt;/h1&gt;

&lt;p&gt;The first step of the process is to choose an area of expertise. Usually, people write about their area of development. What do I mean by that? If someone is a front-end developer, that person tends to write about front-end development. Likewise for other areas. As a result, you can write about the subject you know the best.&lt;/p&gt;

&lt;p&gt;However, you are not confined only to the subject you know the best. Alternatively, you can write about the stuff you want to learn. You do not have to be an expert in the technology to write about it, but you should have basic knowledge about the technologies you use. &lt;/p&gt;

&lt;p&gt;For instance, my best paid/non-paid articles are the ones where I learnt how to put together a handful of technologies. Other people went through the same hurdles to set them together, and they found my articles helpful. It's important to note that I have basic knowledge of the technologies I put together; if I wrote about building an application with Node.js, MongoDB and Pug, it means I have basic knowledge in all of them. On the flip side, I did not write about building an application with Angular, Supabase and Google Cloud because I never used them. &lt;/p&gt;

&lt;p&gt;In conclusion, define your area of expertise and write articles about it. Moreover, you can also write about the technologies you want to learn because you do not have to be an expert to write about a subject.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#start-your-blog"&gt;
  &lt;/a&gt;
  Start your blog
&lt;/h1&gt;

&lt;p&gt;The next question is where to publish your articles. There are two options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pitch publications and sell the articles directly&lt;/li&gt;
&lt;li&gt;Create a blog and build a portfolio&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In my case, I choose to create a blog. I decided to make a blog because I can build a portfolio of articles I can present to the publications I am pitching. Additionally, some publications &lt;em&gt;(not all of them)&lt;/em&gt; allows writers to re-publish the articles on their blog. Thus, I have all the articles I write in one place - my blog.&lt;/p&gt;

&lt;p&gt;When it comes to blogging platforms, there are many you can use. For my blog, I use &lt;a href="https://hashnode.com"&gt;Hashnode&lt;/a&gt; because it allows me to use my personal domain for free. However, you are not limited. There are other blogging platforms as well, and you can read about the &lt;a href="https://www.freecodecamp.org/news/best-blogging-platforms-for-developers/"&gt;best blogging platforms for developers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Therefore, the ball is in your yard to decide. If your sole goal is to make money, you can sell them directly to publications. If you want to create a portfolio &lt;em&gt;(which I advise you)&lt;/em&gt;, I recommend starting a blog.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#caveats"&gt;
  &lt;/a&gt;
  Caveats
&lt;/h3&gt;

&lt;p&gt;There are some caveats and extra advantages if you choose to start a blog. In my case, I received many gigs after people found my blog and read the articles. Having an active blog is like having a personal recruiter looking for opportunities for you non-stop.&lt;/p&gt;

&lt;p&gt;Besides that, companies might pay you to write reviews about their products or tutorials straight on your blog. Usually, sponsored posts on your blog are more expensive since you need to write them and use your platform to promote/advertise them.&lt;/p&gt;

&lt;p&gt;Thus, your blog is more than a portfolio. It can become a source of income as well!&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#write-for-freecodecamp"&gt;
  &lt;/a&gt;
  Write for freeCodeCamp
&lt;/h1&gt;

&lt;p&gt;Once you have some writing experience under your belt, I recommend applying to write for freeCodeCamp. Here is where your blog comes in handy - freeCodeCamp asks for three articles you consider to be your best articles. Having a blog with technical articles increases your chances of getting accepted as a writer.&lt;/p&gt;

&lt;p&gt;Now you might ask why do I recommend freeCodeCamp. The main reason why I recommend writing on freeCodeCamp is that they have an editorial team. That means there are professional people that read your articles and provides you with feedback. Having someone, especially professional writers, check your articles and give you feedback is extremely helpful. You will improve much quicker and thus become a better writer.&lt;/p&gt;

&lt;p&gt;Besides having an editorial team, freeCodeCamp reaches millions of people daily. It's one of the best publication to write for if you want to reach a broad audience and help people. Not many publications can match that, and there are not many places where you can reach such an enormous audience.&lt;/p&gt;

&lt;p&gt;Therefore, writing for freeCodeCamp is an excellent way to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;familiarize yourself with publications&lt;/li&gt;
&lt;li&gt;improve and become a better writer&lt;/li&gt;
&lt;li&gt;reach a wide audience&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I highly recommend writing for freeCodeCamp!&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#write-consistently"&gt;
  &lt;/a&gt;
  Write consistently
&lt;/h1&gt;

&lt;p&gt;The more articles you write, the better you get at writing. The better your articles are, the better your chances of getting accepted to write for a publication. You get the idea!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#create-a-schedule"&gt;
  &lt;/a&gt;
  Create a schedule
&lt;/h4&gt;

&lt;p&gt;If you are a beginner in writing, I would advise you to create a schedule and stick to it. When you create a schedule, create a reasonable one. You might have many ideas at the moment, and you might think you can ship three articles weekly. But soon, you find out you cannot keep up the rhythm.&lt;/p&gt;

&lt;p&gt;As a result, I recommend sticking to one article per week. Writing one article weekly is manageable for most people, and it does not put too much pressure on you. Also, if you have lots of ideas, even better. Do not step up the rhythm by publishing more articles. Instead, spread it out, so you have content for more weeks.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#list-of-topics"&gt;
  &lt;/a&gt;
  List of topics
&lt;/h4&gt;

&lt;p&gt;After creating a schedule, research and create a list of topics. In my beginnings, I made the mistake of blogging randomly when ideas popped in my head. As you might guess, I was not very consistent, and I did not have any results.&lt;/p&gt;

&lt;p&gt;That changed when I started researching topics. You can research topics and keywords with tools like Ubersuggest, Google Trends, Ahrefs and so on. In my case, I use Ahrefs. With that being said, once you have a list of topics/keywords, it's easier to keep a schedule and write consistently.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#find-online-challenges"&gt;
  &lt;/a&gt;
  Find online challenges
&lt;/h4&gt;

&lt;p&gt;If you search for "writing challenges" online, you can find a lot of content revolving around this. Alternatively, blogging platforms like Hashnode have badges and challenges. For instance, Hashnode has a challenge aimed to make you a better writer called &lt;a href="https://hashnode.com/challenge/2articles1week"&gt;#2Articles1Week&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;This is just one example. However, there are many other challenges on the internet!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h4&gt;

&lt;p&gt;Thus, my top tips for writing consistently are as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a posting schedule. Preferably an article weekly for beginners.&lt;/li&gt;
&lt;li&gt;Research keywords and create a list of possible article ideas.&lt;/li&gt;
&lt;li&gt;Find online challenges.&lt;/li&gt;
&lt;/ol&gt;




&lt;h1&gt;
  &lt;a href="#find-and-pitch-publications"&gt;
  &lt;/a&gt;
  Find and pitch publications
&lt;/h1&gt;

&lt;p&gt;The last step of the process is to find and pitch publications. This is one of the most challenging steps, but I'll make it easier for you.&lt;/p&gt;

&lt;p&gt;Many, if not most, companies/technologies/tools have their blogs. The reason is that written content (articles) is still super powerful and helpful. Thus, they use their blogs to share knowledge and promote their tools. &lt;/p&gt;

&lt;p&gt;Let's take as an example a database company called MarioDB &lt;em&gt;(fictive company name)&lt;/em&gt;. MarioDB might have a company blog where employees write tutorials about integration the database with other technologies. Additionally, they also accept articles from guest authors. As a result, you could pitch them and write an article about integrating MarioDB with Vue. More or less, that is how most publications work.&lt;/p&gt;

&lt;p&gt;With that being said, each publication/company: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;pays a fixed rate&lt;/li&gt;
&lt;li&gt;has their rules and policies&lt;/li&gt;
&lt;li&gt;has their list of accepted topics&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All publications/companies have a particular page on their blog that specifies all the information you need and how to apply. I ‚Äãwill not list all the publications and &lt;a href="https://catalins.tech/websites-that-pay-you-to-write-technical-articles"&gt;websites that pay you to write technical articles&lt;/a&gt; here. But you can click on the embedded link to find them and how much they pay.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;It's important to note that this is one way to go from zero to writing paid technical articles and not the only way. Also, it's not a get-rich-quick scheme. You have to put in the work and be patient.&lt;/p&gt;

&lt;p&gt;To recap, here are the steps I recommend:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;choose your area of expertise - focus on the subject/s you know the best&lt;/li&gt;
&lt;li&gt;open a blog or not - it depends on what your goals are&lt;/li&gt;
&lt;li&gt;apply to write for freeCodeCamp - you get exposure to a wide audience&lt;/li&gt;
&lt;li&gt;get better at writing by doing it consistently&lt;/li&gt;
&lt;li&gt;find publications and write for them&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;em&gt;If you are interested in JavaScript tutorials, I recommend&lt;/em&gt; &lt;a href="https://catalins.tech/frontend-masters-membership-is-it-worth-it"&gt;&lt;em&gt;Frontend Masters&lt;/em&gt;&lt;/a&gt;&lt;em&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you want to make money with technical writing, check&lt;/em&gt; &lt;a href="https://catalins.tech/websites-that-pay-you-to-write-technical-articles"&gt;&lt;em&gt;websites that pay you to write&lt;/em&gt;&lt;/a&gt; &lt;em&gt;technical articles!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you want to learn JavaScript, I recommend these&lt;/em&gt; &lt;a href="https://catalins.tech/5-best-resources-to-learn-javascript-as-a-beginner"&gt;&lt;em&gt;5 resources to learn JavaScript as a beginner&lt;/em&gt;&lt;/a&gt;&lt;em&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Negotiating your salary is essential ‚Äî learn&lt;/em&gt; &lt;a href="https://catalins.tech/how-to-negotiate-your-salary-as-a-developer"&gt;&lt;em&gt;how to negotiate your salary as a developer&lt;/em&gt;&lt;/a&gt;&lt;em&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Speed up your development with&lt;/em&gt; &lt;a href="https://catalins.tech/git-aliases-what-are-they-and-how-to-use-them"&gt;&lt;em&gt;Git Aliases&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you want to&lt;/em&gt; &lt;a href="https://catalins.tech/how-to-start-your-blog-as-a-developer"&gt;&lt;em&gt;start a blog as a developer&lt;/em&gt;&lt;/a&gt;&lt;em&gt;, I recommend reading the article ‚Äú&lt;/em&gt;&lt;a href="https://catalins.tech/how-to-start-your-blog-as-a-developer"&gt;&lt;em&gt;how to start your blog as a developer&lt;/em&gt;&lt;/a&gt;&lt;em&gt;‚Äù!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Do you struggle to stay up-to-date with all news in tech? See&lt;/em&gt; &lt;a href="https://catalins.tech/one-way-to-stay-up-to-date-as-developer"&gt;&lt;em&gt;one way to stay up to date as a developer&lt;/em&gt;&lt;/a&gt;&lt;em&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Learn&lt;/em&gt; &lt;a href="https://catalins.tech/how-to-use-asyncawait-in-javascript"&gt;&lt;em&gt;how to use Async/Await in JavaScript&lt;/em&gt;&lt;/a&gt;&lt;em&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;GitHub profiles are all the rage at the moment. Learn&lt;/em&gt; &lt;a href="https://catalins.tech/how-to-create-a-kickass-github-profile-page"&gt;&lt;em&gt;how to create a GitHub profile page&lt;/em&gt;&lt;/a&gt;&lt;em&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Check these 7&lt;/em&gt; &lt;a href="https://catalins.tech/7-github-repositories-to-help-you-crush-your-job-interviews"&gt;&lt;em&gt;resources to help you pass your job interviews&lt;/em&gt;&lt;/a&gt;&lt;em&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;See the new features coming in&lt;/em&gt; &lt;a href="https://catalins.tech/javascript-es2021-you-need-to-see-these-ecmascript-2021-features"&gt;&lt;em&gt;JavaScript ECMAScript 2021 ES2021&lt;/em&gt;&lt;/a&gt;&lt;em&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Are you a beginner programmer? Check these&lt;/em&gt; &lt;a href="https://catalins.tech/10-programming-project-ideas-for-beginners"&gt;&lt;em&gt;programming project ideas for beginners&lt;/em&gt;&lt;/a&gt;&lt;em&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Are you learning to code or do you plan to do it? Check the&lt;/em&gt; &lt;a href="https://catalins.tech/20-best-places-to-learn-programming-for-free"&gt;&lt;em&gt;best places to learn programming for FREE&lt;/em&gt;&lt;/a&gt;&lt;em&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://catalins.tech/my-9-must-have-browser-extensions-for-increased-developer-productivity"&gt;&lt;em&gt;Increase your developer productivity&lt;/em&gt;&lt;/a&gt; &lt;em&gt;with these 9 browser extensions!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you are a Node.js developer, I advise you to check these&lt;/em&gt; &lt;a href="https://catalins.tech/the-4-creational-design-patterns-in-nodejs-you-should-know"&gt;&lt;em&gt;4 creational design patterns in Node.js&lt;/em&gt;&lt;/a&gt;&lt;em&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Check these amazing&lt;/em&gt; &lt;a href="https://catalins.tech/javascript-es2020-the-features-you-should-know"&gt;&lt;em&gt;JavaScript ECMAScript 2020 features&lt;/em&gt;&lt;/a&gt;&lt;em&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can also check this &lt;a href="https://catalins.tech/keystonejs-and-graphql-api-crash-course"&gt;KeystoneJS&lt;/a&gt; crash course!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>programming</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Page scroll progress bars</title>
      <author>debadeepsen</author>
      <pubDate>Thu, 22 Apr 2021 10:56:05 +0000</pubDate>
      <link>https://dev.to/debadeepsen/page-scroll-progress-bars-fjl</link>
      <guid>https://dev.to/debadeepsen/page-scroll-progress-bars-fjl</guid>
      <description>&lt;p&gt;You must have seen this on blogs, or articles of other kinds (what's the difference again?). Basically, you are (perhaps correctly) assumed to be one of those readers who are either super-busy or super-lazy, and therefore need to know how much of the page you have visually consumed. So there's some kind of a progress bar that tells you how much you've scrolled. It looks cool, helps your readers/users, and is super simple to implement. Let's dig right in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#progress-percent"&gt;
  &lt;/a&gt;
  Progress percent
&lt;/h2&gt;

&lt;p&gt;Before we get into any progress bar, we need to calculate the progress percent, aka, how much of the page has been scrolled. Thanks to the helpful people at &lt;a href="https://css-tricks.com/how-i-put-the-scroll-percentage-in-the-browser-title-bar/"&gt;CSS Tricks&lt;/a&gt;, I was able to compute that easily. The following code does exactly that.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;scrollTop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;docHeight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetHeight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;winHeight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;scrollPercent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;scrollTop&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;docHeight&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;winHeight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;scrollPercentRounded&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scrollPercent&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#horizontal-progress-bar"&gt;
  &lt;/a&gt;
  Horizontal progress bar
&lt;/h2&gt;

&lt;p&gt;This one's the simpler one of the two. All we need to do here is have a &lt;code&gt;div&lt;/code&gt; "stick" to the top of the page, and set its background to display a visual indication of the progress. The trick here is to use the &lt;code&gt;linear-gradient()&lt;/code&gt; CSS function, which you can read up all about &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient()"&gt;here&lt;/a&gt;. Now, instead of a smooth gradient, what we need to achieve is a distinct color change at certain point. For that, we can use the "linear-color-stop" overload (somebody please check if they're still called function overloads in CSS, I honestly don't know for sure). If we give the gradient two colors, and set the progress percent as the color-stop for both, the result will be a distinct change of color. Since we'll be using JavaScript to set it, here's what that will look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pb&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;background&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
   &lt;span class="s2"&gt;`linear-gradient(to right, #498 &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;scrollPercentRounded&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%, #eee &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;scrollPercentRounded&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%)`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;The greenish "progress bar" isn't overlain on top of the grey bar, but using &lt;code&gt;linear-gradient&lt;/code&gt; this way gives the impression that it does.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now if you add the JavaScript code above to the &lt;code&gt;onscroll&lt;/code&gt; event handler for the page (be patient, a TL;DR CodeSandbox is at the end of this article, as usual), you should be able to see the scroll progress bar in action.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#circular-progress-indicator"&gt;
  &lt;/a&gt;
  Circular progress indicator
&lt;/h2&gt;

&lt;p&gt;The circular progress bar(?!) is similar, with a little more coding effort added. We'll still be using gradients, but this time, we're gonna use something called the "conic gradient". Which, as the name suggests, displays a gradient to make it appear that... um, you're staring at a cone downwards from top? (My description skills aren't astounding, so why don't you look it up on the official &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/conic-gradient()"&gt;docs&lt;/a&gt;?) But the principle remains the same - we define "hard stops" so that the gradient looks less like a smooth gradient and more like a sharp change in color. That means setting the &lt;code&gt;background&lt;/code&gt; programmatically in the following way.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// using variables from the code block above&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;scrollPercent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;scrollTop&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;docHeight&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;winHeight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;scrollPercentRounded&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scrollPercent&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;degrees&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;scrollPercent&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;360&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.bg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;background&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`conic-gradient(#498 &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;degrees&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;deg, #ddd &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;degrees&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;deg)`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;By the way, a &lt;code&gt;div&lt;/code&gt; with the same &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; that has its &lt;code&gt;border-radius&lt;/code&gt; set to &lt;code&gt;50%&lt;/code&gt; will be rendered as a perfect circle.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, if we implement a conic gradient on a circle, it will look like a pie chart, like this - &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4fh8sBUN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/MOZTzQe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4fh8sBUN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/MOZTzQe.png" alt="Imgur"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, you could keep the pie progress chart, but if you wanted, you could also overlay a circular disc on top of it using the right &lt;code&gt;position&lt;/code&gt; attribute and dimensions, and it would look like so - &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2dFhGhSF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/j47BMq7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2dFhGhSF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/j47BMq7.png" alt="Imgur"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And that's basically it. Thank you for reading through this patiently (and if you literally just jumped to this section for the full code, I don't hate you either - we're all busy). Here's the Sandbox. Happy coding!&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/solitary-violet-y6s28"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>css</category>
      <category>javascript</category>
      <category>ux</category>
    </item>
    <item>
      <title>Material Tailwind ‚Äì New Framework for Web Developers</title>
      <author>Creative Tim</author>
      <pubDate>Thu, 22 Apr 2021 10:55:23 +0000</pubDate>
      <link>https://dev.to/creativetim_official/material-tailwind-new-framework-for-web-developers-5eaa</link>
      <guid>https://dev.to/creativetim_official/material-tailwind-new-framework-for-web-developers-5eaa</guid>
      <description>&lt;p&gt;When talking about the user interface, the most important thing is its appearance. It is the interaction point with the user‚Äôs attention. However, building a beautiful and effective appearance is not easy because it needs spending time and a lot of skills.&lt;/p&gt;

&lt;p&gt;In this case, the good part is that there are some workarounds, like frameworks and libraries (e.g. &lt;a href="https://tailwindcss.com/"&gt;Tailwind CSS)&lt;/a&gt;, which facilitate the process of building user interfaces (but not that much like you‚Äôre thinking about).&lt;/p&gt;

&lt;p&gt;OK, are you looking for a simple, easy, and quick way to build a better and beautiful user interface? If the answer is YES then you should take a look over &lt;a href="https://material-tailwind.com/"&gt;Material Tailwind&lt;/a&gt;. Read this article to find out why.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-material-tailwind"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is Material Tailwind?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://material-tailwind.com/"&gt;Material Tailwind&lt;/a&gt;&lt;/strong&gt; is a framework for building user interfaces, an open-source project by &lt;a href="https://www.creative-tim.com/?ref=devto"&gt;Creative Tim&lt;/a&gt;. It is using &lt;a href="https://tailwindcss.com/"&gt;Tailwind CSS&lt;/a&gt; ‚Äì a utility-first CSS framework, and &lt;a href="https://material.io/"&gt;Material Design 2&lt;/a&gt; guidelines ‚Äì a modern design system developed by Google.&lt;/p&gt;

&lt;p&gt;The first version of &lt;a href="https://material-tailwind.com/?ref=devto"&gt;Material Tailwind&lt;/a&gt; has been released based on &lt;a href="https://reactjs.org/"&gt;ReactJS&lt;/a&gt;, the most popular JavaScript library for building user interfaces.&lt;/p&gt;

&lt;p&gt;So before we deep dive into Material Tailwind‚Äôs details, let‚Äôs take a look at &lt;a href="https://tailwindcss.com/"&gt;Tailwind CSS&lt;/a&gt;, &lt;a href="https://material.io/"&gt;Material Design 2&lt;/a&gt;, and &lt;a href="https://reactjs.org/"&gt;ReactJS&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-tailwind-css"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is Tailwind CSS?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://tailwindcss.com/"&gt;Tailwind CSS&lt;/a&gt; is a utility-first CSS framework packed with classes that can be composed to build any design directly into your markup.&lt;/p&gt;

&lt;p&gt;Compared to other CSS frameworks like &lt;a href="https://getbootstrap.com/"&gt;Bootstrap&lt;/a&gt;, it doesn‚Äôt come with predefined components; instead, Tailwind CSS provides you a set of CSS helper classes. Using these classes, you can create custom designs and user interfaces with ease.&lt;/p&gt;

&lt;p&gt;For more information about Tailwind CSS, you can check the Tailwind CSS website: &lt;a href="https://tailwindcss.com/"&gt;https://tailwindcss.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-material-design-2"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is Material Design 2?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://material.io/"&gt;Material Design 2&lt;/a&gt; is the most popular, modern, and comprehensive design system developed by Google that helps you build high-quality digital experiences.&lt;/p&gt;

&lt;p&gt;The design system itself is a comprehensive set of useful guides and helpful tools that developers or designers can use for building modern, trendy and user-friendly user interfaces that adhere to material style.&lt;/p&gt;

&lt;p&gt;For more information about Material Design 2, you can check the Material Design 2 website: &lt;a href="https://material.io/"&gt;https://material.io/&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-reactjs"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is ReactJS?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/"&gt;ReactJS&lt;/a&gt; is the most popular front-end JavaScript library for building fast and interactive user interfaces. It is an open-source, component-based, front-end library responsible only for the application‚Äôs view layer in Model View Controller (MVC) architecture.&lt;/p&gt;

&lt;p&gt;For more information about ReactJS, you can check the ReactJS website: &lt;a href="https://reactjs.org/"&gt;https://reactjs.org/&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-material-tailwind"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Why Material Tailwind?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Therefore, as you read above, &lt;a href="https://material-tailwind.com/?ref=devto"&gt;Material Tailwind&lt;/a&gt; has been built using the most popular technologies and trends around the world.&lt;/p&gt;

&lt;p&gt;As I said before, building a user interface is not easy, even if you‚Äôre using Tailwind CSS. It comes up with different helper classes, and you need to play around with thousands of helper classes to build a simple user interface that makes your code cluttered. Also, add the fact that you need to build everything from scratch, which takes a lot of time. ‚òπÔ∏è&lt;/p&gt;

&lt;p&gt;By using Material Tailwind you can build a user interface as quickly and easily as possible because you don‚Äôt need to build everything from scratch or play around with Tailwind CSS helper classes. Material Tailwind provides you all the important and necessary components for building a user interface in the format of &lt;a href="https://reactjs.org/"&gt;ReactJS&lt;/a&gt; components with the space of &lt;a href="https://material.io/"&gt;Material Design 2&lt;/a&gt; and &lt;a href="https://tailwindcss.com/"&gt;Tailwind CSS&lt;/a&gt; helper classes üòç&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-can-use-material-tailwind"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Who can use Material Tailwind?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Material Tailwind is a free and open-source project and everyone can use it, you only need to have a basic knowledge of ReactJS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#material-tailwind-components"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Material Tailwind Components&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;As I said before, Material Tailwind contains all the necessary and important components for building a user interface.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Alerts&lt;/li&gt;
&lt;li&gt;Buttons&lt;/li&gt;
&lt;li&gt;Cards&lt;/li&gt;
&lt;li&gt;Dropdowns and Dropups&lt;/li&gt;
&lt;li&gt;Images&lt;/li&gt;
&lt;li&gt;Inputs&lt;/li&gt;
&lt;li&gt;Labels&lt;/li&gt;
&lt;li&gt;Menus&lt;/li&gt;
&lt;li&gt;Modals&lt;/li&gt;
&lt;li&gt;Navbars&lt;/li&gt;
&lt;li&gt;Paginations&lt;/li&gt;
&lt;li&gt;Popovers&lt;/li&gt;
&lt;li&gt;Progress bars&lt;/li&gt;
&lt;li&gt;Tabs&lt;/li&gt;
&lt;li&gt;Tooltips&lt;/li&gt;
&lt;li&gt;Typography&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R_o1xebb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/04/material-tailwind-alerts-1024x584.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R_o1xebb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/04/material-tailwind-alerts-1024x584.png" alt="Material Tailwind ‚Äì Alerts Examples"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#material-tailwind-alerts-examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;&lt;a href="https://material-tailwind.com/components?ref=devto"&gt;Material Tailwind ‚Äì Alerts Examples&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fgpXAWp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/04/material-tailwind-buttons-1024x496.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fgpXAWp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/04/material-tailwind-buttons-1024x496.png" alt="Material Tailwind ‚Äì Buttons Examples"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#material-tailwind-buttons-examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;&lt;a href="https://material-tailwind.com/components?ref=devto"&gt;Material Tailwind ‚Äì Buttons Examples&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;




&lt;p&gt;You can check here the components: &lt;a href="https://material-tailwind.com/components"&gt;https://material-tailwind.com/components&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also, this awesome framework comes with 3 fully coded sample pages. You can start working instantly.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--syxH8LUZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2020/04/Screen-Shot-2021-04-12-at-15.31.04-1024x586.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--syxH8LUZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2020/04/Screen-Shot-2021-04-12-at-15.31.04-1024x586.png" alt="Material Tailwind ‚Äì Login Page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#material-tailwind-login-page"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;&lt;a href="https://material-tailwind.com/templates/login?ref=devto"&gt;Material Tailwind ‚Äì Login Page&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x3LSP2hL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2020/04/profil-page-1024x582.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x3LSP2hL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2020/04/profil-page-1024x582.png" alt="Material Tailwind ‚Äì Profile Page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#material-tailwind-profile-page"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;&lt;a href="https://material-tailwind.com/templates/profile?ref=devto"&gt;Material Tailwind ‚Äì Profile Page&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;




&lt;p&gt;But it‚Äôs not the end of the story and we will expand and add more components to Material Tailwind in the near future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#material-tailwind-is-opensource"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Material Tailwind is open-source&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Material Tailwind is an open-source project, and everyone can contribute to making Material Tailwind better. You can contribute to solve different issues or expand its components.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Before contributing to Material Tailwind, please read the contributing guideline: &lt;a href="https://github.com/creativetimofficial/material-tailwind/blob/main/CONTRIBUTING.md"&gt;https://github.com/creativetimofficial/material-tailwind/blob/main/CONTRIBUTING.md&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-the-near-future"&gt;
  &lt;/a&gt;
  &lt;strong&gt;In the near future&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;As I said before, the first version of Material Tailwind is only available for ReactJS, but soon, you will see the other versions for &lt;a href="https://vuejs.org/"&gt;Vue.js&lt;/a&gt;, &lt;a href="https://angularjs.org/"&gt;Angular.js&lt;/a&gt;, &lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt;, and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript"&gt;Vanilla Javascript.&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>react</category>
      <category>webdev</category>
      <category>uiweekly</category>
    </item>
    <item>
      <title>Listify - A Flask Todo App</title>
      <author>Md. Manzum Rahman</author>
      <pubDate>Thu, 22 Apr 2021 10:47:06 +0000</pubDate>
      <link>https://dev.to/manzumrahman/listify-a-flask-todo-app-59cd</link>
      <guid>https://dev.to/manzumrahman/listify-a-flask-todo-app-59cd</guid>
      <description>&lt;p&gt;Assalamualaikum Warahmatullahi Wabarakatuh everyone, I have recently developed a Flask Todo List app.&lt;br&gt;
&lt;strong&gt;Live Deployment&lt;/strong&gt; - &lt;a href="https://listify-todo.herokuapp.com/"&gt;https://listify-todo.herokuapp.com/&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Repository Link&lt;/strong&gt; - &lt;a href="https://github.com/manzumrahman/Listify/"&gt;https://github.com/manzumrahman/Listify/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n10CPHbB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j674i9vi897fgzo6jek4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n10CPHbB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j674i9vi897fgzo6jek4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequsites"&gt;
  &lt;/a&gt;
  Prerequsites
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Python (intermediate)&lt;/li&gt;
&lt;li&gt;Flask(basics)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-i-made-it"&gt;
  &lt;/a&gt;
  How I made it
&lt;/h2&gt;

&lt;p&gt;So, First of all, I watched a tutorial on creating a Flask Todo List app and made the primary app. Then I watched another tutorial on Flask Authentication. After that I added some basic user authentication in my app. And finally i deployed it to heroku after quickly adding some styles to it and making a homepage.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;1:&lt;/strong&gt; Clone this repository using
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone git@github.com:manzumrahman/Listify.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;2:&lt;/strong&gt; make a .env file and put this following text there
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;DATABASE_URL=sqlite:///database.db
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;3:&lt;/strong&gt; Run the following commands in terminal
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install -r requirements.txt
python app.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Done:&lt;/strong&gt; Your website will be live on &lt;a href="http://127.0.0.1:5000"&gt;http://127.0.0.1:5000&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#contribute"&gt;
  &lt;/a&gt;
  Contribute
&lt;/h2&gt;

&lt;p&gt;Make a pull request after fixing a bug or making your desired changes and put appropiate description about your changes , I will merge it if I find it useful.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h5&gt;
  &lt;a href="#written-with-%E2%9D%A4-by-mdmanzum-rahman-"&gt;
  &lt;/a&gt;
  Written with ‚ù§ by &lt;a href="https://manzumrahman.github.io"&gt;Md.Manzum Rahman&lt;/a&gt; :)
&lt;/h5&gt;
&lt;/blockquote&gt;

</description>
      <category>python</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
