<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Memorization in Recursion (JS)</title>
      <author>Umashankar S</author>
      <pubDate>Wed, 29 Dec 2021 19:15:36 +0000</pubDate>
      <link>https://dev.to/umashankar_s/memorization-in-recursion-281b</link>
      <guid>https://dev.to/umashankar_s/memorization-in-recursion-281b</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;What is Memorization ?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;&lt;strong&gt;In a non technical words&lt;/strong&gt;&lt;/em&gt;: Assume, you want to watch one movie. and you downloaded that movie (2TB) and you watched.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mn2_Egm1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5u0k8xblotmuqxoh0ofi.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mn2_Egm1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5u0k8xblotmuqxoh0ofi.gif" alt="Image description" width="356" height="200"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After one day, again you want to watch that same movie because its quite interesting. so what you will do now?&lt;br&gt;
Again you will download (2TB) ? or you will watch from your already downloaded file?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o1E8ecqN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bmxg3h89a5sua2wgkabo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o1E8ecqN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bmxg3h89a5sua2wgkabo.gif" alt="Image description" width="220" height="220"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;In a Technical Words&lt;/em&gt;&lt;/strong&gt;:- It is an optimization technique that speeds up applications by storing the results of expensive function calls and returning the cached result when the same inputs occur again.&lt;/p&gt;



&lt;p&gt;Before get into the &lt;strong&gt;memorization&lt;/strong&gt; deeply, lets understood the &lt;strong&gt;recursion&lt;/strong&gt; first.so we will have a better understanding, where we can use our memorization.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Recursion&lt;/em&gt;&lt;/strong&gt;: Recursion is a technique to iterate over the function repeatedly. untill we get a result or untill the condition satisfied.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;fibonacci program with recursion:&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;  &lt;span class="nx"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code, we are using recursion concept to calculate fibonacci. so fib(n) will be repeated most of the times. &lt;br&gt;
&lt;strong&gt;eg:-&lt;/strong&gt; fib(40) = fib(40-1)+fib(40-2)&lt;br&gt;
               fib(39)+fib(38)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;And this tree will go further. and lot of fib(4),fib(5), fib(6), fib(n),etc..... series need to calculate. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Assume fib(4), we calculate and &lt;strong&gt;we stored it in cache&lt;/strong&gt; and again if fib(4) came in that tree. we &lt;strong&gt;don't need to calculate again&lt;/strong&gt;. Just we need to return it from the cache. So this will improve the response time as well.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;fibonacci program with recursion and memorization:&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;previousValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;previousValue&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;////memorization&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;previousValue&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nx"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;previousValue&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;  &lt;span class="c1"&gt;//memorization&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And you guys can take both the programs and you guys can check that, which one is having a &lt;strong&gt;better response time&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Thanks for your time!!&lt;br&gt;
Cheers!!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Hyperscript - the hidden language of React</title>
      <author>Nikita Grechino</author>
      <pubDate>Wed, 29 Dec 2021 18:38:31 +0000</pubDate>
      <link>https://dev.to/fromaline/hyperscript-the-hidden-language-of-react-3d1f</link>
      <guid>https://dev.to/fromaline/hyperscript-the-hidden-language-of-react-3d1f</guid>
      <description>&lt;h2&gt;
  &lt;a href="#jsx-is-the-starting-point"&gt;
  &lt;/a&gt;
  JSX is the starting point
&lt;/h2&gt;

&lt;p&gt;React uses JSX to make things easier for the developers. So when you write something like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  Hello!
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Babel with a react preset transforms it to this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;foo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Check out this example in &lt;a href="https://babeljs.io/repl#?browsers=defaults%2C%20ie%206&amp;amp;build=&amp;amp;builtIns=false&amp;amp;corejs=3.6&amp;amp;spec=false&amp;amp;loose=false&amp;amp;code_lz=MYewdgzgLgBAJgSwG4wLwwDyJQuqBEAZiCPgHwASApgDY0gCEGA9NmUA&amp;amp;debug=false&amp;amp;forceAllTransforms=true&amp;amp;shippedProposals=false&amp;amp;circleciRepo=&amp;amp;evaluate=false&amp;amp;fileSize=true&amp;amp;timeTravel=false&amp;amp;sourceType=module&amp;amp;lineWrap=true&amp;amp;presets=env%2Creact&amp;amp;prettier=false&amp;amp;targets=&amp;amp;version=7.16.6&amp;amp;externalPlugins=&amp;amp;assumptions=%7B%7D"&gt;Babel REPL&lt;/a&gt;.&lt;br&gt;
&lt;code&gt;React.createElement&lt;/code&gt; is a function that creates a virtual node.&lt;br&gt;
It's a well-known fact, and you probably already know it. So what's the point?&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#preact-way"&gt;
  &lt;/a&gt;
  Preact way
&lt;/h2&gt;

&lt;p&gt;If you've used Preact before, you may notice it has &lt;a href="https://github.com/preactjs/preact/blob/master/src/index.js#L4"&gt;an unobvious export&lt;/a&gt; in its source code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;createElement&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./create-element&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To make things clear, the &lt;code&gt;createElement&lt;/code&gt; function from Preact serves the same needs as &lt;code&gt;React.createElement&lt;/code&gt;. So the question is, why is it exported as &lt;code&gt;h&lt;/code&gt; as well?&lt;/p&gt;

&lt;p&gt;The reason is dead simple. It's exported as &lt;code&gt;h&lt;/code&gt; because it's &lt;a href="https://github.com/hyperhype/hyperscript/tree/9237f590f3bc82b841ba6e7c4df946f21dff0045"&gt;a hypescript function&lt;/a&gt;. &lt;br&gt;
So what exactly is hypescript?&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#hyperscript-is-the-key"&gt;
  &lt;/a&gt;
  Hyperscript is the key
&lt;/h2&gt;

&lt;p&gt;Hypescript is a kind of language to create HyperText with JavaScript and was started by Dominic Tarr in 2012. He was inspired by &lt;a href="https://github.com/markaby/markaby"&gt;markaby&lt;/a&gt;, the "short bit of code" to write HTML in pure Ruby.&lt;br&gt;
Markaby allows doing things like that.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'markaby'&lt;/span&gt;

&lt;span class="n"&gt;mab&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Markaby&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
&lt;span class="n"&gt;mab&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;html&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;head&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="s2"&gt;"Boats.com"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;h1&lt;/span&gt; &lt;span class="s2"&gt;"Boats.com has great deals"&lt;/span&gt;
    &lt;span class="n"&gt;ul&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;li&lt;/span&gt; &lt;span class="s2"&gt;"$49 for a canoe"&lt;/span&gt;
      &lt;span class="n"&gt;li&lt;/span&gt; &lt;span class="s2"&gt;"$39 for a raft"&lt;/span&gt;
      &lt;span class="n"&gt;li&lt;/span&gt; &lt;span class="s2"&gt;"$29 for a huge boot that floats and can fit 5 people"&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;mab&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the &lt;code&gt;h&lt;/code&gt; function allows doing essentially the same thing, but with different syntax.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hyperscript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;div#foo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It also supports nesting and CSS properties.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hyperscript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;div#foo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;h1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello from H1!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;color&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;coral&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Check out &lt;a href="https://hyperhype.github.io/hyperscript/"&gt;an interactive demo&lt;/a&gt; to see how it works.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-your-hands-dirty"&gt;
  &lt;/a&gt;
  Get your hands dirty
&lt;/h2&gt;

&lt;p&gt;Now when we know what the &lt;code&gt;h&lt;/code&gt; function does and why we need it, let's write our own version of it. Complete example can be found on &lt;a href="https://codesandbox.io/s/h-edxqp"&gt;codesanbox&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First, let's make up a &lt;code&gt;render&lt;/code&gt; function, that creates real DOM elements from our virtual nodes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;prop&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;child&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Than, let's create the &lt;code&gt;h&lt;/code&gt; function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;handledType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;handledType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;children&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, let's create an actual content with our &lt;code&gt;h&lt;/code&gt; function, render it with our &lt;code&gt;render&lt;/code&gt; function and mount the result to the DOM.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt; 
      &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;h1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;foo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;
      &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;h2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;World!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to check commit message and branch name with git hooks without any new installation</title>
      <author>Anibal</author>
      <pubDate>Wed, 29 Dec 2021 18:25:40 +0000</pubDate>
      <link>https://dev.to/anibalardid/how-to-check-commit-message-and-branch-name-with-git-hooks-without-any-new-installation-n34</link>
      <guid>https://dev.to/anibalardid/how-to-check-commit-message-and-branch-name-with-git-hooks-without-any-new-installation-n34</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Hi All ! &lt;br&gt;
I'm a tech lead, and I'm on charge to check Pull Request/Merge Request on my team. And also to create release notes (CHANGELOG.md) on each release.&lt;br&gt;
So, my first problem was to resolve the commits of the developers, that they always have some mistake, or have errors into the commit message (without correct format), or errors in the branch name.&lt;br&gt;
I searched and I found different solutions. A lot of them need to use an external software, like node (npm library), or php composer library, etc. And the projects are in different technologies, like Android, PHP, .NET, etc.&lt;/p&gt;

&lt;p&gt;After checking all that I found, I created a solution that works in all environments without external dependencies.&lt;/p&gt;

&lt;p&gt;The solution is really easy.&lt;br&gt;
You need to follow these easy steps&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#steps"&gt;
  &lt;/a&gt;
  Steps:
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;create &lt;strong&gt;.git-hooks&lt;/strong&gt; folder into your project root directory, at the same level you already have .git folder&lt;/li&gt;
&lt;li&gt;create 2 files into this folder: &lt;strong&gt;pre-commit&lt;/strong&gt; and &lt;strong&gt;prepare-commit-msg&lt;/strong&gt; (these two files don't have an extension)&lt;/li&gt;
&lt;li&gt;put the correct code into each file (I will add them below these steps)&lt;/li&gt;
&lt;li&gt;run this command in your command line, into your main folder of your project (one level up from .git-hooks): &lt;strong&gt;git config core.hooksPath .git-hooks&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;READY ! &lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#the-code"&gt;
  &lt;/a&gt;
  The Code
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;pre-commit&lt;/strong&gt; file code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="nv"&gt;BRANCH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;git rev-parse &lt;span class="nt"&gt;--abbrev-ref&lt;/span&gt; HEAD&lt;span class="si"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;REGEX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"^(dev|release)-([0-9]+)-q([0-9]+)&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="s2"&gt;([0-9]+)&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="s2"&gt;(.+)$"&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$BRANCH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;~ &lt;span class="nv"&gt;$REGEX&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then
  &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Your commit was rejected due to branching name"&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Please rename your branch with '(dev|release)-YYYY-qX.X.X' syntax"&lt;/span&gt;
  &lt;span class="nb"&gt;exit &lt;/span&gt;1
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;prepare-commit-msg&lt;/strong&gt; file code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="nv"&gt;MESSAGE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;cat&lt;/span&gt; &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt; 
&lt;span class="nv"&gt;COMMITFORMAT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"^(feat|fix|docs|style|refactor|test|chore|perf|other)(&lt;/span&gt;&lt;span class="se"&gt;\(&lt;/span&gt;&lt;span class="s2"&gt;(.*)&lt;/span&gt;&lt;span class="se"&gt;\)&lt;/span&gt;&lt;span class="s2"&gt;)?: #([0-9]+) (.*)$"&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$MESSAGE&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;~ &lt;span class="nv"&gt;$COMMITFORMAT&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then
  &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Your commit was rejected due to the commit message. Skipping..."&lt;/span&gt; 
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Please use the following format:"&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"feat: #1234 feature example comment"&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"fix(ui): #4321 bugfix example comment"&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"More details on COMMITS.md"&lt;/span&gt;
  &lt;span class="nb"&gt;exit &lt;/span&gt;1
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can edit it according to your needs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#explanation"&gt;
  &lt;/a&gt;
  Explanation
&lt;/h2&gt;

&lt;p&gt;File &lt;strong&gt;pre-commit&lt;/strong&gt;: check branch names.&lt;br&gt;
In my case I filter to use only format like that:&lt;br&gt;
dev-YYYY-qX.X.X&lt;br&gt;
release-YYYY-qX.X.X&lt;br&gt;
Where YYYY is the year, and X.X.X are the version, in our case we use the Quarter number.&lt;br&gt;
You could change that using regex and put what you want ;)&lt;/p&gt;

&lt;p&gt;File &lt;strong&gt;prepare-commit-msg&lt;/strong&gt;: check commit message.&lt;br&gt;
In our case, we use the following format:&lt;br&gt;
&lt;a href="https://www.conventionalcommits.org/en/v1.0.0/"&gt;https://www.conventionalcommits.org/en/v1.0.0/&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="http://karma-runner.github.io/1.0/dev/git-commit-msg.html"&gt;http://karma-runner.github.io/1.0/dev/git-commit-msg.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Off course, you could change it as your needs.&lt;/p&gt;

&lt;p&gt;And finally, the command &lt;strong&gt;git config core.hooksPath .git-hooks&lt;/strong&gt; change your local git hooks configuration to use the new path .&lt;/p&gt;

</description>
      <category>git</category>
      <category>hooks</category>
      <category>devops</category>
      <category>programming</category>
    </item>
    <item>
      <title>Exceptions vs error values</title>
      <author>Spyros Argalias</author>
      <pubDate>Wed, 29 Dec 2021 18:11:08 +0000</pubDate>
      <link>https://dev.to/sargalias/exceptions-vs-error-values-2hp9</link>
      <guid>https://dev.to/sargalias/exceptions-vs-error-values-2hp9</guid>
      <description>&lt;p&gt;Exceptions vs error values has been a debate in &lt;a href="https://programmingduck.com/articles/errors"&gt;error handling&lt;/a&gt; for ages. Some people have firm stances on them. For example, in the book &lt;a href="https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882"&gt;Clean Code&lt;/a&gt;, Uncle Bob recommends exceptions. In his post on &lt;a href="https://www.joelonsoftware.com/2003/10/13/13/"&gt;Exceptions&lt;/a&gt;, Joel mentions that he prefers error values.&lt;/p&gt;

&lt;p&gt;Programming languages have also taken stances. Popular languages such as C# and Java traditionally use exceptions. Languages like Rust use error values.&lt;/p&gt;

&lt;p&gt;In this article we'll examine some of their similarities and differences. We'll also provide suggestions about when to use which.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/wrz409nQ4hc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#basic-examples-of-exceptions-and-error-values"&gt;
  &lt;/a&gt;
  Basic examples of exceptions and error values
&lt;/h2&gt;

&lt;p&gt;Just for a quick introduction, here are some examples of exceptions and error values.&lt;/p&gt;

&lt;p&gt;If you're already familiar with them, then please skip to the next section.&lt;/p&gt;

&lt;p&gt;Here's an example of throwing and catching an exception in C#:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Example&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nf"&gt;Bar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IndexOutOfRangeException&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// handle error&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Bar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt; &lt;span class="cm"&gt;/* some condition to check if something went wrong */&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;IndexOutOfRangeException&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Some error message"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// normal program execution&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code above, &lt;code&gt;Bar&lt;/code&gt; throws an exception. The exception is caught and handled in &lt;code&gt;Foo&lt;/code&gt;, in the &lt;code&gt;catch&lt;/code&gt; block.&lt;/p&gt;

&lt;p&gt;Here's the same thing in JavaScript:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// handle error&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="cm"&gt;/* some condition */&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Error message&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// normal program execution&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Error values can be implemented in different ways. One way is for a function to return either an error or a normal value.&lt;/p&gt;

&lt;p&gt;For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="k"&gt;instanceof&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// handle error&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// normal program execution&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="cm"&gt;/* some condition */&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Error message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code above, &lt;code&gt;bar&lt;/code&gt; can return either an error or a normal value. &lt;code&gt;foo&lt;/code&gt; checks the return value. If it was an error, it handles it. Otherwise, it continues normal program execution.&lt;/p&gt;

&lt;p&gt;You can also use error values by returning a single object. The object should have fields for both the error and the normal return value. For example, you could use a tuple, or an object with properties. If there was an error, the &lt;code&gt;value&lt;/code&gt; should be empty. For example &lt;code&gt;{error: new Error('Message'), value: null}&lt;/code&gt;. If there wasn't an error, the &lt;code&gt;error&lt;/code&gt; value should be empty. For example &lt;code&gt;{error: null, value: 42}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here's a code example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// handle error&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// normal program execution&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="cm"&gt;/* some condition */&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Error message.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code above, &lt;code&gt;bar&lt;/code&gt; always returns an object. If something goes wrong, the object will have a value in the &lt;code&gt;error&lt;/code&gt; field. Otherwise, the &lt;code&gt;error&lt;/code&gt; field will be &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cNYU2r57--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b0vxpx5e7jsqjxqyz2un.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cNYU2r57--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b0vxpx5e7jsqjxqyz2un.jpg" alt="" width="880" height="586"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#similarities-between-exceptions-and-error-values"&gt;
  &lt;/a&gt;
  Similarities between exceptions and error values
&lt;/h2&gt;

&lt;p&gt;Exceptions and error values are fairly similar. In fact, some newer programming languages such as Rust and Swift eliminate most of the differences between them.&lt;/p&gt;

&lt;p&gt;The most important thing about both of them is that they act as different return values from a function / method. The different return values should lead to different code execution paths.&lt;/p&gt;

&lt;p&gt;They also share a big downside. It's easy to mess up with both of them.&lt;/p&gt;

&lt;p&gt;With an exception, you may:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;forget to catch it&lt;/li&gt;
&lt;li&gt;wrongly assume that some code higher in the call stack will catch it&lt;/li&gt;
&lt;li&gt;accidentally catch it higher in the call stack in a place that's not prepared to handle it properly&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, you can completely avoid checking error values.&lt;/p&gt;

&lt;p&gt;It's very easy to forget or mess up. Even if you don't, someone else might. So, you have to be very diligent.&lt;/p&gt;

&lt;p&gt;Or, you can use a programming language that forces you to check all errors. (More on that later.)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#differences-between-exceptions-and-error-values"&gt;
  &lt;/a&gt;
  Differences between exceptions and error values
&lt;/h2&gt;

&lt;p&gt;Exceptions and error values have some differences:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#performance"&gt;
  &lt;/a&gt;
  Performance
&lt;/h3&gt;

&lt;p&gt;Throwing and catching exceptions are commonly considered slow. Returning error values is fast.&lt;/p&gt;

&lt;p&gt;However, exceptions are supposed to be "exceptional" (thrown very rarely). In practice, this means that the performance of your application shouldn't be negatively affected by using them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#crashing-the-program-vs-silent-bugs"&gt;
  &lt;/a&gt;
  Crashing the program vs silent bugs
&lt;/h3&gt;

&lt;p&gt;Uncaught exceptions crash the program. More rarely, exceptions can also result in silent bugs (if you catch them higher in the call stack without intending to).&lt;/p&gt;

&lt;p&gt;Unchecked error values result in silent bugs.&lt;/p&gt;

&lt;p&gt;Exceptions are better in this case. As explained in &lt;a href="https://programmingduck.com/articles/error-responses"&gt;how to respond to errors&lt;/a&gt;, crashing the program is a better default option than silent bugs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bubbling"&gt;
  &lt;/a&gt;
  Bubbling
&lt;/h3&gt;

&lt;p&gt;Exceptions can "bubble" up the call stack. An exception that's not caught in a &lt;code&gt;catch&lt;/code&gt; block will be thrown in the caller (the previous code in the call stack). If it's not caught there, the process will repeat. If it reaches the end of the call stack, the program will crash.&lt;/p&gt;

&lt;p&gt;Bubbling is both good and bad.&lt;/p&gt;

&lt;p&gt;The benefit is that it's very convenient. You can have a single try / catch block in some parent function. The exception will propagate to it and will be caught there.&lt;/p&gt;

&lt;p&gt;The downside is that the flow of execution is not explicit. You have to keep track of it yourself. You also have to remember which exceptions are caught where in the call stack.&lt;/p&gt;

&lt;p&gt;This can put you into a bad situation. Sometimes you might not remember or know if an exception will be caught or not, or where it will be caught, or by what.&lt;/p&gt;

&lt;p&gt;In comparison, error values are standard return values. If you want them to propagate, you have to propagate them manually. You have to manually return them across different functions / methods, all the way up the stack.&lt;/p&gt;

&lt;p&gt;The benefit of this is that it's very explicit. It's very easy to track and reason about. The downside is that it's very verbose. You need many return statements across many different function / method calls.&lt;/p&gt;

&lt;p&gt;Note that you can technically manually propagate exceptions if you want to. However, that's not common practice. For more details on this please see "checked exceptions" in a later section.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#suitability-in-functional-programming"&gt;
  &lt;/a&gt;
  Suitability in functional programming
&lt;/h3&gt;

&lt;p&gt;Generally, exceptions are less common in functional programming.&lt;/p&gt;

&lt;p&gt;That's because functional programming promotes immutability and pure functions.&lt;/p&gt;

&lt;p&gt;With exceptions, sometimes you need to break immutability. For example, often, you need to declare variables outside of try / catch blocks and then mutate them in try / catch.&lt;/p&gt;

&lt;p&gt;Here's a code example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Something&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="c1"&gt;// do stuff with `a`&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// handle error&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;finally&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also, thrown exceptions are not standard return values. This messes up the "pure function" point.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exceptions-and-error-values-in-some-newer-languages"&gt;
  &lt;/a&gt;
  Exceptions and error values in some newer languages
&lt;/h2&gt;

&lt;p&gt;Some newer languages, like Rust and Swift, change things up a bit.&lt;/p&gt;

&lt;p&gt;Most importantly, they force you to check all error values and thrown exceptions. This means that you can never forget to check for errors or to handle exceptions.&lt;/p&gt;

&lt;p&gt;In the case of Swift, it also makes exception bubbling more explicit. It still allows exceptions to propagate automatically. However, it requires intermediate functions (that an exception will propagate through), to be marked with the keyword "throws".&lt;/p&gt;

&lt;p&gt;This additional explicitness makes exceptions easier to track throughout your code.&lt;/p&gt;

&lt;p&gt;The downside is that it makes things more verbose.&lt;/p&gt;

&lt;p&gt;(Rust uses error values, which you have to propagate explicitly anyway.)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YClfKdj9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/habp1qd5gha5bc3yntlc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YClfKdj9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/habp1qd5gha5bc3yntlc.jpg" alt="" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#which-should-you-use"&gt;
  &lt;/a&gt;
  Which should you use?
&lt;/h2&gt;

&lt;p&gt;Overall, it seems like this is a question of robustness and amount of safety measures vs verbosity.&lt;/p&gt;

&lt;p&gt;Enforcing error checking and having explicit error propagation have obvious benefits. It makes it much harder to forget to do your error handling. You'll have to intentionally ignore it to avoid it.&lt;/p&gt;

&lt;p&gt;However, verbosity has downsides too. It can can make code less readable. It can also make it harder to make large changes to code. This can be especially prominent if you're propagating everything manually.&lt;/p&gt;

&lt;p&gt;For example, imagine that you change a low-level function (or add a new one) to sometimes return an error value. That error may need to be handled at a higher-level function. This means that you'll need to add code to every intermediary function to keep propagating the error.&lt;/p&gt;

&lt;p&gt;That's a large change. In comparison, if you added an exception that bubbled automatically, you would just add a try / catch block at the high-level function and you'd be done.&lt;/p&gt;

&lt;p&gt;So it's up to you to decide where you stand on the safety measures vs verbosity scale.&lt;/p&gt;

&lt;p&gt;For maximum safety measures, you should probably use a language that forces you to check all errors and forces explicit propagation of them. The downside is that the error handling will be more verbose.&lt;/p&gt;

&lt;p&gt;One level lower in safety is to use error values. I regard these as more robust than throwing exceptions. That's because propagating error values is more explicit than bubbling exceptions. The downside is that there's more verbosity. Also, note that you need to be very diligent with these. If you forget to check an error, you'll get silent bugs. Unchecked error values are worse than uncaught exceptions.&lt;/p&gt;

&lt;p&gt;Otherwise, go for throwing "normal" exceptions (such as the ones in Java, C# and JavaScript). They're the least verbose. This doesn't mean that you can't create robust programs with them. It just means that it's up to you to be diligent with errors and to track everything.&lt;/p&gt;

&lt;p&gt;It's probably also a good idea to consider the convention in your programming language. Some programming languages prefer exceptions. Some others prefer error values.&lt;/p&gt;

&lt;p&gt;My personal preference is to lean towards higher safety for larger scoped and more critical projects. For smaller scoped projects, I lean towards less verbosity and more convenience (exceptions).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-notes"&gt;
  &lt;/a&gt;
  Final notes
&lt;/h2&gt;

&lt;p&gt;So that's it for this article. I hope that you found it useful.&lt;/p&gt;

&lt;p&gt;As always, if any points were missed, or if you disagree with anything, or have any comments or feedback then please leave a comment below.&lt;/p&gt;

&lt;p&gt;For the next steps, I recommend looking at the other articles in the &lt;a href="https://programmingduck.com/articles/errors"&gt;error handling series&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Alright, thanks and see you next time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#credits"&gt;
  &lt;/a&gt;
  Credits
&lt;/h2&gt;

&lt;p&gt;Images:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Duelling Legos - Photo by Stillness InMotion on Unsplash&lt;/li&gt;
&lt;li&gt;Typewriter and laptop - Photo by Glenn Carstens-Peters on Unsplash&lt;/li&gt;
&lt;li&gt;Post-it notes - Photo by Will H McMahan on Unsplash&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>coding</category>
    </item>
    <item>
      <title>Hello World</title>
      <author>Mert Kadir</author>
      <pubDate>Wed, 29 Dec 2021 17:58:37 +0000</pubDate>
      <link>https://dev.to/9mertkadirr/hello-world-3dai</link>
      <guid>https://dev.to/9mertkadirr/hello-world-3dai</guid>
      <description>&lt;p&gt;Hello my name is Mert, I'm Mobil Application Developer&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Release ScrcpyHub v1.3.0</title>
      <author>katz</author>
      <pubDate>Wed, 29 Dec 2021 17:56:21 +0000</pubDate>
      <link>https://dev.to/kaleidot725/release-scrcpyhub-v130-1ho5</link>
      <guid>https://dev.to/kaleidot725/release-scrcpyhub-v130-1ho5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;ScrcpyHub is a GUI application to use scrcpy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/kaleidot725/ScrcpyHub"&gt;https://github.com/kaleidot725/ScrcpyHub&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h2&gt;

&lt;p&gt;scrcpy is an Android device screen mirroring command tool.　scrcpy is a useful command tool, but multiple device mirroring is so difficult and bother.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Get android device using adb command.&lt;/li&gt;
&lt;li&gt;Execute scrcpy command using -s option.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JLE8rTV7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.craft.do/user/full/3a21bd0e-fe7a-39aa-73ad-b52ef24b655b/doc/6995FDF2-2CF0-43F5-B9D3-C35F739FF92F/BB45EAD5-A33A-4C88-8243-24E6F425A2F6_2/2021-11-27%252011-10-40.2021-11-27%252011_11_40.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JLE8rTV7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.craft.do/user/full/3a21bd0e-fe7a-39aa-73ad-b52ef24b655b/doc/6995FDF2-2CF0-43F5-B9D3-C35F739FF92F/BB45EAD5-A33A-4C88-8243-24E6F425A2F6_2/2021-11-27%252011-10-40.2021-11-27%252011_11_40.gif" alt="2021-11-27 11-10-40.2021-11-27 11_11_40.gif" width="582" height="366"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;p&gt;ScrcpyHub assists in multiple device mirroring. ScrcpyHub makes it easy to do multiple device mirroring.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Support Windows10 / 11 or macOS.&lt;/li&gt;
&lt;li&gt;Detect android device.&lt;/li&gt;
&lt;li&gt;Control mirroing (Start / Stop).&lt;/li&gt;
&lt;li&gt;Save Screenshot.&lt;/li&gt;
&lt;li&gt;Support Tary Menu.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;v1.3.0 NEW Feature : Record Movie.&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_EHBRB_v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.craft.do/user/full/3a21bd0e-fe7a-39aa-73ad-b52ef24b655b/doc/6995FDF2-2CF0-43F5-B9D3-C35F739FF92F/E0E18CA8-8A5C-4633-B72F-FBA8315D34BD_2/2021-11-27%252018-10-59.2021-11-27%252018_12_53.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_EHBRB_v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.craft.do/user/full/3a21bd0e-fe7a-39aa-73ad-b52ef24b655b/doc/6995FDF2-2CF0-43F5-B9D3-C35F739FF92F/E0E18CA8-8A5C-4633-B72F-FBA8315D34BD_2/2021-11-27%252018-10-59.2021-11-27%252018_12_53.gif" alt="2021-11-27 18-10-59.2021-11-27 18_12_53.gif" width="880" height="514"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#new-feature-record-movie"&gt;
  &lt;/a&gt;
  New Feature : Record Movie
&lt;/h2&gt;

&lt;p&gt;v1.3.0 support recording movie. You record easily movie with your Android Device. Try it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mxhcGGwd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i6bopuihx808fq38sdte.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mxhcGGwd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i6bopuihx808fq38sdte.gif" alt="Image description" width="500" height="266"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use"&gt;
  &lt;/a&gt;
  How to Use
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#install"&gt;
  &lt;/a&gt;
  Install
&lt;/h3&gt;

&lt;p&gt;Install adb and scrcpy, ScrcpyHub.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#mac-os"&gt;
  &lt;/a&gt;
  💻 Mac OS
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Install android-platform-tools and scrcpy.&lt;/li&gt;
&lt;li&gt;Download &lt;a href="https://github.com/kaleidot725/scrcpy-hub/releases/tag/v1.3.0"&gt;here&lt;/a&gt; and launch ScrcpyHub.&lt;/li&gt;
&lt;li&gt;Open ScrcpyHub Preferences.&lt;/li&gt;
&lt;li&gt;Input adb and scrcpy location, save settings.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew install android-platform-tools
brew install scrcpy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#windows-10-11"&gt;
  &lt;/a&gt;
  💻 Windows 10 / 11
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Download &lt;a href="https://github.com/Genymobile/scrcpy#windows"&gt;here&lt;/a&gt; and install scrcpy somewhere.&lt;/li&gt;
&lt;li&gt;Download &lt;a href="https://github.com/kaleidot725/scrcpy-hub/releases/tag/v1.3.0"&gt;here&lt;/a&gt; and launch ScrcpyHub.&lt;/li&gt;
&lt;li&gt;Open ScrcpyHub Preferences.&lt;/li&gt;
&lt;li&gt;Input adb and scrcpy location, save settings.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b0AhZpV6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.craft.do/user/full/3a21bd0e-fe7a-39aa-73ad-b52ef24b655b/doc/137C802C-F06D-460A-BA71-9B94DAF64B71/83AAA09B-F6B5-425C-9CF7-FEA002375072_2/Image" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b0AhZpV6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.craft.do/user/full/3a21bd0e-fe7a-39aa-73ad-b52ef24b655b/doc/137C802C-F06D-460A-BA71-9B94DAF64B71/83AAA09B-F6B5-425C-9CF7-FEA002375072_2/Image" alt="Image" width="350" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contact"&gt;
  &lt;/a&gt;
  🔥Contact
&lt;/h2&gt;

&lt;p&gt;We are working on the development &lt;a href="https://github.com/kaleidot725/ScrcpyHub"&gt;here&lt;/a&gt;. If you have any suggestions for improvement, please contact us.&lt;/p&gt;

</description>
      <category>android</category>
      <category>kotlin</category>
      <category>scrcpy</category>
      <category>tooling</category>
    </item>
    <item>
      <title>What is Staking ? | Earning Passive Income with Crypto in 2022</title>
      <author>Course Probe</author>
      <pubDate>Wed, 29 Dec 2021 17:45:18 +0000</pubDate>
      <link>https://dev.to/courseprobe/what-is-staking-earning-passive-income-with-crypto-in-2022-1ke7</link>
      <guid>https://dev.to/courseprobe/what-is-staking-earning-passive-income-with-crypto-in-2022-1ke7</guid>
      <description>&lt;p&gt;A lot of people that come to me for advise think the only way to make money in crypto is through trading, and because this seems so complex most of them end up looking elsewhere. &lt;/p&gt;

&lt;p&gt;Earning money with Crypto, is super simple and Trading is not the only way. That's why I decided to offer another view into Crypto Earning through Staking.&lt;/p&gt;




&lt;p&gt;I consider Staking as a less risky investment for beginners and something really simple to set up !! &lt;/p&gt;

&lt;p&gt;This is probably very good news for you in 2022 since you will be able to get some Passive Incomre through your Crypto Investments.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-staking-"&gt;
  &lt;/a&gt;
  What is Staking ?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Short answer:&lt;/strong&gt; a way to earn rewards (more coins) by freezing and holding certain cryptocurrencies.&lt;/p&gt;

&lt;p&gt;Staking is one of the best ways of earning Crypto Passive Income, it means freezing your coins in the blockchain so you can get an interest rate, an Annual Percentage Rate APR or an Annual Percentage Yield APY. &lt;/p&gt;

&lt;p&gt;Is a process more complex than that, it involves nodes which are validating the blocks on the blockchain and many other factors which I'll leave out in this guide to make it as simple as possible.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-much-can-i-earn-with-staking-"&gt;
  &lt;/a&gt;
  How much can I earn with Staking ?
&lt;/h2&gt;

&lt;p&gt;Running a simple calculation Today (market conditions change with time).&lt;/p&gt;

&lt;p&gt;Let's say you decide to stake 10000 TRX that would be a value around 800$, leaving the coins staked over a 3 year period will get you 11440 TRX. &lt;/p&gt;

&lt;p&gt;11440 TRX , if the price reaches 0.80 after those 3 years, means you would have: 9152$. &lt;strong&gt;Going from 800 to 9000 USD not bad for Crypto Passive Income.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is not financial advise, just letting you know some scenarios and how staking could work. I encourage you to research more about the coin and this option.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--77Tomvq_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fsz5noxbu95i7xale6z9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--77Tomvq_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fsz5noxbu95i7xale6z9.png" alt="Tron TRX Staking Calculator" width="880" height="409"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;I wanna do this right Now , I said Now&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;There are many ways you can start staking TRX and many other coins, you would need a couple of Apps for doing that:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Guarda Wallet:&lt;/strong&gt; &lt;a href="https://grd.to/ref/GcgX"&gt;https://grd.to/ref/GcgX&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Binance:&lt;/strong&gt; &lt;a href="https://accounts.binance.com/en/register?ref=K5XIYGD8"&gt;https://accounts.binance.com/en/register?ref=K5XIYGD8&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The links are friend referral links, they give you some perks like 10% discount on all coins bought in Binance for example.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Another way of Staking is by going the DEFI way, in this case I would recommend you to take a look at Pancakeswap.finance&lt;/p&gt;

&lt;p&gt;You can easily stake some coins and tokens in Pancakeswap using Metamask as a wallet. (Questions on this contact me via telegram, link below)&lt;/p&gt;

&lt;p&gt;There are many other platforms for DEFI trading and staking, some of them offer awesome APR% but they run on the Ethereum network and transaction fees are so high that I don't consider them as viable options.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-simple-steps-to-stake-crypto-in-2022-for-passive-income"&gt;
  &lt;/a&gt;
  3 Simple Steps to stake crypto in 2022 for passive income:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Get a Wallet or Trading Platform capable of Staking.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Buy the Crypto you are looking to stake.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Click on Earn, select the Crypto, click Stake.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Some of the highest Annual Percentage Rates APR% in Guarda are:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c9i5u5td--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t7ap3hqrnr2y7ffp0l2f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c9i5u5td--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t7ap3hqrnr2y7ffp0l2f.png" alt="Guarda APR rates" width="880" height="596"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These rates change from platform to platform and you might find better conditions on one trading app over the other, I encourage you to compare Guarda vs Binance for example when taking your decision.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#help-and-support"&gt;
  &lt;/a&gt;
  Help and Support:
&lt;/h3&gt;

&lt;p&gt;I'm available to help you out with any questions you might have through Discord and Telegram:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Discord:&lt;/strong&gt; &lt;a href="https://discord.gg/kTQpdTMArN"&gt;https://discord.gg/kTQpdTMArN&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Telegram:&lt;/strong&gt; &lt;a href="https://t.me/cryptominingadvisor"&gt;https://t.me/cryptominingadvisor&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#is-staking-risky-in-any-way-"&gt;
  &lt;/a&gt;
  Is Staking Risky in any way ?
&lt;/h2&gt;

&lt;p&gt;Yes, as everything in Crypto there are some things you should know prior to staking.&lt;/p&gt;

&lt;p&gt;One of the main drawbacks of staking is that your coins might be locked up for a period of time, in some cases the platform might lock your coins up for 30 days.&lt;/p&gt;

&lt;p&gt;This means you are not able to trade your coins, you might get your coins back with certain penalties like loosing the APR earned so far if you decide to withdraw before the agreed period.&lt;/p&gt;

&lt;p&gt;In the case of Staking TRX on Guarda, you will have your coins locked only for the first 3 days. After that you can get your coins and your full rewards at any given time.&lt;/p&gt;

&lt;p&gt;Annother risk to consider are changes in prices of the coins, staking is great for long term holders who are staking a coin witha good future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-main-advantages-of-staking-in-2022-"&gt;
  &lt;/a&gt;
  What are the main advantages of staking in 2022 ?
&lt;/h2&gt;

&lt;p&gt;One of the two advantages of staking in 2022 for the traders and stakers, is the fact you will be able to generate more coins and rewards instead of leaving your coins sitting in your wallet.&lt;/p&gt;

&lt;p&gt;The second advantage of staking is for the blockchain, it helps contributing to the security and efficiency of the blockchain this is done via voting for certain validator nodes which are going to be securing the blocks on the chain.&lt;/p&gt;




&lt;p&gt;If you want to get some Crypto Passive Income in 2022, Staking is a very good way of doing so, I invite you to join staking and in case you have any doubts feel free to reach out so I can answer your questions !!&lt;/p&gt;

&lt;p&gt;If you are also looking to learn more about trading and staking I tried to prepare a very basic mini course for beginners which you can find below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=cjXWot3wA74&amp;amp;list=PLPsvPYOyfNwQcumrO05zAicj-LN-WAAzp"&gt;https://www.youtube.com/watch?v=cjXWot3wA74&amp;amp;list=PLPsvPYOyfNwQcumrO05zAicj-LN-WAAzp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/cjXWot3wA74"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>crypto</category>
      <category>money</category>
      <category>staking</category>
    </item>
    <item>
      <title>Ethereum smart contract development using Solidity</title>
      <author>Chiranjeevi Tirunagari</author>
      <pubDate>Wed, 29 Dec 2021 17:42:32 +0000</pubDate>
      <link>https://dev.to/vchiranjeeviak/ethereum-smart-contract-development-using-solidity-4pj0</link>
      <guid>https://dev.to/vchiranjeeviak/ethereum-smart-contract-development-using-solidity-4pj0</guid>
      <description>&lt;p&gt;Today, I randomly came across a website called crypto zombies. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q3gRdwlp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mh1rna7folzsu6pnz69a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q3gRdwlp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mh1rna7folzsu6pnz69a.png" alt="Image of Crypto Zombie website" width="880" height="490"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cryptozombies.io/"&gt;crypto zombies&lt;/a&gt;&lt;br&gt;
It's a nice platform to learn solidity and smart contract dev. I completed a starting course (pretty easy if we know programming basics) which consists 15 chapters. Here r few learnings of today:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;In every solidity program, we need to specify the version of language we are using in it using "pragma solidity ".&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A smart contract or simply contract is a building block of an Ethereum app. It contains the variables, functions etc. just like a class in java/c++.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This contract is deployed on blockchain which acts as the backend of our decentralized app (dapp).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A contract once deployed on blockchain can't be modified. So, we need to be very careful when writing them.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There are many data types in solidity just like other programming languages.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Integers are broadly 2 types, signed (int) and unsigned (uint), there are different sizes as well (8, 16, .., 256 bits).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Strings are used to store from letters to sentences.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Arrays are also 2 types. Static and Dynamic. When we know we make changes to an array in runtime, we should dynamic arrays as they provide push and pop functionality.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;"function  ()   returns (){}".&lt;br&gt;
Above is the syntax to write a function.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Public functions can be called from external contracts also and Private functions are restricted from doing it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A pure type function can only access data which is passed to it as parameters.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A view type function can access data which is not passed to but present in that contract.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Struct is another data type which is user-defined which contains other variables in it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Parameters can be passed in 2 ways to a function. Pass by value and Pass by reference.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To pass a parameter with reference, we need to give keyword "memory" before the name of argument.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We can create events, so that when that event occurs, we can perform certain things in our frontend.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;"event  (arguments)". We can catch these events using web3JS.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To fire that event in a function, we use "emit ".&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Push method of dynamic array returns the size of array after pushing.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;20.All this info in 20 mins read. Try it if u want to get started.&lt;/p&gt;

&lt;p&gt;My twitter: &lt;a href="https://twitter.com/VChiranjeeviAK"&gt;twitter&lt;/a&gt;&lt;br&gt;
My LinkedIn: &lt;a href="https://www.linkedin.com/in/chiranjeevi-tirunagari-685459191/"&gt;linkedin&lt;/a&gt;&lt;br&gt;
My showwcase: &lt;a href="https://www.showwcase.com/vchiranjeeviak"&gt;showwcase&lt;/a&gt;&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>web3</category>
    </item>
    <item>
      <title>My Year 2021: From Broke to Time, Location, and Financial Freedom</title>
      <author>Bonnie</author>
      <pubDate>Wed, 29 Dec 2021 17:42:20 +0000</pubDate>
      <link>https://dev.to/the_greatbonnie/my-year-2021-from-broke-to-time-location-and-financial-freedom-3am8</link>
      <guid>https://dev.to/the_greatbonnie/my-year-2021-from-broke-to-time-location-and-financial-freedom-3am8</guid>
      <description>&lt;p&gt;The year 2021 has been a roller coaster for me.&lt;/p&gt;

&lt;p&gt;It started with being broke and disappointed to end it by making close to $1000 in a few months.&lt;/p&gt;

&lt;p&gt;It led me to gain Time, Location, and Financial Freedom.&lt;/p&gt;

&lt;p&gt;Below is how things unfolded for me this year.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#january-broke-and-disappointed"&gt;
  &lt;/a&gt;
  January: Broke and disappointed
&lt;/h2&gt;

&lt;p&gt;I spent the whole of 2020 at home due to the pandemic. At the start of 2021, I wanted to leave home so badly to start my life afresh.&lt;/p&gt;

&lt;p&gt;The problem was that I was broke. I had tried to put my web development skills into good use by building people's websites. I could not land any clients, which made me disappointed.&lt;/p&gt;

&lt;p&gt;I decided to get a manual job that paid $6 per day. It would enable me to afford data to continue learning to improve my web development skills.&lt;/p&gt;

&lt;p&gt;I continued doing client outreach for my freelance business, but I could not convert potential clients to paying customers.&lt;/p&gt;

&lt;p&gt;That is when I realized I was doing everything wrong.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#may-a-fresh-start"&gt;
  &lt;/a&gt;
  May: A fresh start
&lt;/h2&gt;

&lt;p&gt;I started to learn how to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Build converting websites.&lt;/li&gt;
&lt;li&gt;Sell my services.&lt;/li&gt;
&lt;li&gt;Build an audience.&lt;/li&gt;
&lt;li&gt;Build a personal brand.&lt;/li&gt;
&lt;li&gt;Write.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I left home on 28th May (I count this as my second birthday) and moved to another town. It was after a relative told me they were starting a new business, and if I wanted, I could be a business partner. My task was to run the business.&lt;/p&gt;

&lt;p&gt;In June, I joined Tech Twitter Community, and it was the best decision I have ever made on Twitter. It helped me to make international friends and meaningful connections.&lt;/p&gt;

&lt;p&gt;After three months, the business I was running failed so terribly. I had no option but to get a 9 to 5 job to help me pay the bills.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#november-gaining-time-location-and-financial-freedom"&gt;
  &lt;/a&gt;
  November: Gaining Time, Location, and Financial Freedom
&lt;/h2&gt;

&lt;p&gt;One and half months into my 9 to 5 job, I received a Twitter DM. Someone asked me if I could be interested in writing Technical Articles for their blog (&lt;a href="https://arctype.com/blog/"&gt;Arctype Blog&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;They told me they pay between $200 to $300 per article. I did not think twice, and I accepted. I had wanted to give technical writing a shot, and this opportunity couldn't have come at a better time.&lt;/p&gt;

&lt;p&gt;I was paid $300 after working on my first technical article. I quit my 9 to 5 job and relocated to the city(Nairobi, Kenya).&lt;/p&gt;

&lt;p&gt;Within two and half months, I had made $600 from technical writing. The technical writing earnings brought my earnings close to $1000 in three months for the year.&lt;/p&gt;

&lt;p&gt;After moving to the city, I had gained something that I had always wanted... FREEDOM!!!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Time Freedom.&lt;/li&gt;
&lt;li&gt;Location Freedom.&lt;/li&gt;
&lt;li&gt;Financial Freedom.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#plans-for-2022"&gt;
  &lt;/a&gt;
  Plans for 2022
&lt;/h2&gt;

&lt;p&gt;My plan for 2022 is to crush my goals and become the best version of myself.&lt;/p&gt;

&lt;p&gt;Some of the goals I want to achieve by the end of the year are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make $1000 per month.&lt;/li&gt;
&lt;li&gt;Hit 20K followers on Twitter.&lt;/li&gt;
&lt;li&gt;Get 1000 visitors to my blog every month.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I will make $1000 per month by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Building websites.&lt;/li&gt;
&lt;li&gt;Writing technical articles.&lt;/li&gt;
&lt;li&gt;Creating HTML and CSS templates.&lt;/li&gt;
&lt;li&gt;Selling ebooks.&lt;/li&gt;
&lt;li&gt;Affiliate marketing.&lt;/li&gt;
&lt;li&gt;Sponsored posts.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I will hit 20K followers on Twitter by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creating valuable content on Personal Development.&lt;/li&gt;
&lt;li&gt;Creating valuable content on Web Development.&lt;/li&gt;
&lt;li&gt;Creating valuable content on writing.&lt;/li&gt;
&lt;li&gt;Sharing my story and my wins.&lt;/li&gt;
&lt;li&gt;Engaging with content from other accounts.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I will get 1000 visitors to my blog every month by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Publishing valuable blog posts in my blog.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;My 2021 was about gaining Freedom.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Time Freedom.&lt;/li&gt;
&lt;li&gt;Location Freedom.&lt;/li&gt;
&lt;li&gt;Financial Freedom.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My 2022 will be about crushing my goals and becoming the best version of myself.&lt;/p&gt;

</description>
      <category>motivation</category>
      <category>productivity</category>
      <category>writing</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>What is DNS TTL (Time To Live)?</title>
      <author>Vijay Patel</author>
      <pubDate>Wed, 29 Dec 2021 17:41:55 +0000</pubDate>
      <link>https://dev.to/easyawslearn/what-is-dns-ttl-time-to-live-g87</link>
      <guid>https://dev.to/easyawslearn/what-is-dns-ttl-time-to-live-g87</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-timetolive-ttl"&gt;
  &lt;/a&gt;
  What is time-to-live (TTL)?
&lt;/h2&gt;

&lt;p&gt;Time-to-live (TTL) is a value for the period of time that a packet, or data, should exist on a computer or network before being discarded.&lt;/p&gt;

&lt;p&gt;The meaning of TTL, or packet lifetime, depends on the context. For example, TTL is a value in an Internet Protocol (IP) packet that tells a network router when the packet has been in the network too long and should be discarded.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Here's the full video along with a hands-on demo that's based on TTL (time-to-live)👇👇&lt;/code&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=QEmjX9OaGyU"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hSXnhbQk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xbnyuc6qtztnpqrisd56.png" alt="Image description" width="600" height="320"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-ttl-work"&gt;
  &lt;/a&gt;
  How Does TTL Work?
&lt;/h2&gt;

&lt;p&gt;TTL's basic function revolves around managing information packets in relation to DNS requests. When one of these packets is created and transmitted through the internet, there is a chance that it will pass, continuously, from router to router forever. To prevent this from happening, each packet has a specific TTL or hop limit. It is also possible to examine the TTL log of a data packet to obtain information on how it has moved through the internet over the course of its travels.&lt;/p&gt;

&lt;p&gt;Within each packet, there is a specified place where the TTL value is stored. This is a numerical value, and it indicates how much longer the packet should move around the internet. When a router receives a data packet, it takes away one unit from the TTL count before sending it on to the next destination within the network. This continues to happen until the TTL count within the packet drops all the way down to zero.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-timetolive-in-http"&gt;
  &lt;/a&gt;
  What is time-to-live in HTTP?
&lt;/h2&gt;

&lt;p&gt;In Hypertext Transfer Protocol (HTTP), time-to-live describes the number of seconds it takes for cached web content to return before the webserver has to check again to ensure that the content is "fresh."&lt;/p&gt;

&lt;p&gt;Settings on the webserver define a default value. Still, cache-control tags, which define the kinds of servers, if any, can cache the data, or expired tags, which represent a date and time when the content is stale, can override it in the HyperText Markup Language page headers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-ttl-values"&gt;
  &lt;/a&gt;
  What Are TTL Values?
&lt;/h2&gt;

&lt;p&gt;When you set TTL values for your website, you choose a value in seconds. For example, a TTL value of 600 is the equivalent of 600 seconds or ten minutes.&lt;/p&gt;

&lt;p&gt;The minimum available TTL is usually 30, equivalent to 30 seconds. You could theoretically set a TTL as low as one second. However, most sites use a default TTL of 3600 (one hour). The maximum TTL that you can apply is 86,400 (24 hours).&lt;/p&gt;

&lt;p&gt;Technically, you can set any TTL value between the minimum and maximum parameters. Later in this article, we’ll discuss how you can choose the best time to live value for your site.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-should-you-choose-a-ttl"&gt;
  &lt;/a&gt;
  How Should You Choose a TTL?
&lt;/h2&gt;

&lt;p&gt;Deciding on a suitable TTL for your needs can be challenging. Fortunately, there are some general guidelines that you can follow to see what fits your site best.&lt;br&gt;
We recommend a TTL of 1-24 hours for most sites. Remember that TTL values are measured in seconds, so this is the equivalent of 3,600 to 86,400 seconds.&lt;/p&gt;

&lt;p&gt;This TTL value can reduce loading time, which improves the user experience for your visitors and can decrease your bounce rate. The longer the better is a general rule, but remember to schedule any website maintenance accordingly.&lt;/p&gt;




&lt;p&gt;▬▬▬▬▬▬ WANT TO LEARN MORE? ▬▬▬▬▬▬&lt;br&gt;
Full Terraform tutorial ► &lt;a href="https://bit.ly/2GwK8V2"&gt;https://bit.ly/2GwK8V2&lt;/a&gt;&lt;br&gt;
DevOps Tools, like Ansible ► &lt;a href="https://bit.ly/3iASHuP"&gt;https://bit.ly/3iASHuP&lt;/a&gt;&lt;br&gt;
Docker Tutorial ► &lt;a href="https://bit.ly/3iAT9Jx"&gt;https://bit.ly/3iAT9Jx&lt;/a&gt;&lt;/p&gt;

</description>
      <category>dns</category>
      <category>ttl</category>
      <category>route53</category>
      <category>aws</category>
    </item>
    <item>
      <title>Detectando Root e Jail Broken no seu aplicativo React Native</title>
      <author>Emerson Stark</author>
      <pubDate>Wed, 29 Dec 2021 17:36:28 +0000</pubDate>
      <link>https://dev.to/starkdev/detectando-root-e-jail-broken-no-seu-aplicativo-react-native-4ang</link>
      <guid>https://dev.to/starkdev/detectando-root-e-jail-broken-no-seu-aplicativo-react-native-4ang</guid>
      <description>&lt;h1&gt;
  &lt;a href="#o-que-%C3%A9-root-e-jailbroken"&gt;
  &lt;/a&gt;
  O que é root e jail-broken?
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#root"&gt;
  &lt;/a&gt;
  root
&lt;/h2&gt;

&lt;p&gt;Fazer o root no seu aparelho significa se tornar um superusuário, ou administrador do sistema. Isso implica ter acesso a partes do Android que antes ficavam inacessíveis para um usuário comum. Sim, a grande vantagem é ganhar controle total do seu celular e do seu sistema operacional&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#jailbroken"&gt;
  &lt;/a&gt;
  jail-broken
&lt;/h2&gt;

&lt;p&gt;O jailbreak é uma alteração, um hack, no sistema que permite ao usuário adentrar a raiz do equipamento, tendo acesso a todos os arquivos do iOS. Em termos práticos, isso significa poder personalizar e instalar apps livremente, sem depender da loja oficial da Apple.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#porque-devo-me-preocupar-com-isso"&gt;
  &lt;/a&gt;
  Porque devo me preocupar com isso?
&lt;/h1&gt;

&lt;p&gt;Uma aplicação sendo executada em um dispositivo com os privilégios do usuário root ou jail broken acessíveis pode ter seu fluxo de execução modificado por outro processo sendo executado no mesmo dispositivo.&lt;/p&gt;

&lt;p&gt;Um usuário malicioso pode monitorar as suas requisições, extrair dados salvos no storage do dispositivo, entre outras ações.&lt;/p&gt;

&lt;p&gt;Mas bora resolver isso!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YrHI-yCr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fd3sc4gutyz8u2xjyt5x.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YrHI-yCr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fd3sc4gutyz8u2xjyt5x.jpeg" alt="Image description" width="880" height="528"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#o-que-faz-o-jailmonkey"&gt;
  &lt;/a&gt;
  O que faz o &lt;a href="https://github.com/GantMan/jail-monkey/"&gt;jail-monkey&lt;/a&gt;?
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Identifica se o telefone tem acesso a root ou jail-broken.&lt;/li&gt;
&lt;li&gt;Detecta se o dispositivo possui localização mockada ( Eu sei que você usou isso no jogo Pokemon GO 😏).&lt;/li&gt;
&lt;li&gt;Detecta se o aplicativo está rodando em um SD Card.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Chega de blá blá blá e bora colocar a mão no código.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jEzzNFAx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p4opmon5o8mq4qomyca3.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jEzzNFAx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p4opmon5o8mq4qomyca3.jpeg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vamos iniciar um projeto utilizando o React Native CLI.&lt;/strong&gt;&lt;/p&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; react-native init myApp
 ou
 npx react-native init myApp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Vamos rodar nossa aplicação em um emulador&lt;/strong&gt;&lt;/p&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;// para executar em um dispositivo android
yarn android

// para ios
yarn ios
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Se deu tudo certo no processo de build, você verá algo como:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_IWWNY-g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sqpgr6gd1pxghzuuap0g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_IWWNY-g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sqpgr6gd1pxghzuuap0g.png" alt="Image description" width="600" height="780"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Até agora, nós criamos nosso app e conseguimos rodar ele no nosso dispositivo/ emulador.&lt;/p&gt;

&lt;p&gt;Se você fechar o aplicativo e clicar no ícone na tela inicial do dispositivo, você verá que o projeto vai startar normalmente.&lt;/p&gt;

&lt;p&gt;Agora vamos adicionar a biblioteca do Jail-monkey no projeto.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;// para instalar usando npm
npm i jail-monkey &lt;span class="nt"&gt;--save&lt;/span&gt;

// usando yarn
yarn add jail-monkey
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Feito isso, vamos linkar a biblioteca no nosso projeto.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;OBS: Você só precisa rodar este comando caso esteja utilizando uma versão do react native &amp;lt; 0.60.0&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;react-native &lt;span class="nb"&gt;link&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Em seguida, faça um novo build do seu projeto.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn android
ou
yarn ios 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Beleza, agora nós temos tudo instalado no projeto.&lt;/p&gt;

&lt;p&gt;Vamos configurar a biblioteca agora no nosso aplicativo, para isso, vá até o seu arquivo principal do seu projeto ( no nosso caso é o App.js da raiz do projeto ) e adicione o seguinte código.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nV3aDyWK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kn0scmg2m3hi66okww63.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nV3aDyWK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kn0scmg2m3hi66okww63.png" alt="Image description" width="880" height="416"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vamos ver o que fizermos:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;importamos o BackHandler do próprio React Native para usarmos a função ExitApp.&lt;/li&gt;
&lt;li&gt;importamos a biblioteca do jail-monkey&lt;/li&gt;
&lt;li&gt;criamos uma condição utilizando uma função que retorna se o dispositivo possui root/ jail-broken e fechamos a aplicação.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Ps: No passo 3, você poderia simplesmente criar um modal bonitinho explicando que o usuário não possui a segurança necessária para utilizar a nossa aplicação, fica com uma usabilidade bem melhor ☺️.&lt;/p&gt;

&lt;p&gt;Depois de tudo isso, se você salvar o código, fechar o app e tentar abrir em um emulador android, automaticamente a sua aplicação fechará, isto é por conta do emulador android possuir root nativamente, mas se você testar em um dispositivo fisico, a sua aplicação irá funcionar normalmente.&lt;/p&gt;

&lt;p&gt;Além do exemplo que criamos acima, você pode explorar um pouco dos recursos do jail-monkey e adicionar de acordo com a sua necessidade.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#alguns-metodos-da-api-do-jailmonkey"&gt;
  &lt;/a&gt;
  Alguns metodos da API do Jail-monkey
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Method&lt;/th&gt;
&lt;th&gt;Returns&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isJailBroken&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;is this device jail-broken/rooted.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;canMockLocation&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Can this device fake its GPS location.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;trustFall&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Checks if the device violates either &lt;code&gt;isJailBroken&lt;/code&gt; or &lt;code&gt;canMockLocation&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isDebuggedMode&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Promise&amp;lt;boolean&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Is the application is running in debug mode. Note that this method returns a Promise.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Bom, por hoje é isso, espero que ajude vocês a melhorar a segurança dos aplicativos em React Native. &lt;/p&gt;

&lt;p&gt;Valeu&lt;/p&gt;

</description>
    </item>
    <item>
      <title>peviitor.ro - arhitectura</title>
      <author>Boga Sebastian Nicolae</author>
      <pubDate>Wed, 29 Dec 2021 17:18:50 +0000</pubDate>
      <link>https://dev.to/sebiboga/peviitorro-arhitectura-5dnf</link>
      <guid>https://dev.to/sebiboga/peviitorro-arhitectura-5dnf</guid>
      <description>&lt;p&gt;Arhitectura motorului de cautare &lt;code&gt;peviitor.ro&lt;/code&gt; este simpla.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_ZZvDAfz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvgo1f424jah15opgml7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_ZZvDAfz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvgo1f424jah15opgml7.png" alt="arhitectura aplicatiei" width="825" height="740"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#websiteul-companiei"&gt;
  &lt;/a&gt;
  Website-ul companiei
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;Sursa de date&lt;/code&gt; este sectiunea cariere a website-ului companiei. De aici ne aducem locurile de munca disponibile.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#scraper"&gt;
  &lt;/a&gt;
  Scraper
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;Fiecare website va avea un scraper&lt;/code&gt;. Rolul scraperului este de a prelua informatia de pe website-ul companiei si de a prelucra informatia astfel incat sa respecte standardul acceptat de API. Tot scraperul se ocupa de a trimite datele spre indexul motorului de cautare.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#ui"&gt;
  &lt;/a&gt;
  UI
&lt;/h4&gt;

&lt;p&gt;UI se refera la interfata utilizator. In fiecare versiune incercam sa aducem functionalitati noi. Incercam sa facem aceasta interfata &lt;code&gt;cat mai simpla&lt;/code&gt; nu doar din perspectiva "Usability" ci si din perspectiva scrierii codului.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#api"&gt;
  &lt;/a&gt;
  API
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;Interfata aplicatiei programabila&lt;/code&gt; este expusa pentru ca partea de interfata utilizator sa extraga datele si a le prezenta spre utilizator.&lt;br&gt;
Totodata API-ul este responsabil si de acceptarea sau nu a informatiilor furnizate de catre scraper.&lt;br&gt;
Cu fiecare versiune incercam sa aducem imbunatatiri pe partea de securitate de aceea, API-ul va fi organizat pe versiuni.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#index"&gt;
  &lt;/a&gt;
  Index
&lt;/h4&gt;

&lt;p&gt;Am spus de la inceput index si nu baza de date pentru ca informatiile sunt foarte volatile. Sursa de date este practic website-ul companiei si nu ne propunem sa duplicam datele insa e necesar sa aducem anumite informatii in index pentru ca &lt;code&gt;pe index cautarea se face impecabil de repede&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Cam atat am dorit sa dezvaluim despre arhitectura acestui motor de cautare. Ramane sa detaliem fiecare sectiune odata cu promovarea fiecarei versiuni. Tehnologiile implicate pe fiecare sectiune vor fi explicate in articolele despre &lt;code&gt;versiuni&lt;/code&gt;.&lt;/p&gt;

</description>
      <category>searchengine</category>
      <category>peviitor</category>
      <category>job</category>
      <category>locuridemunca</category>
    </item>
  </channel>
</rss>
