<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>VIIT : Why use this website layout?</title>
      <author>Rupak Dey</author>
      <pubDate>Sun, 03 Oct 2021 06:36:42 +0000</pubDate>
      <link>https://dev.to/deyrupak/viit-why-use-this-website-layout-pip</link>
      <guid>https://dev.to/deyrupak/viit-why-use-this-website-layout-pip</guid>
      <description>&lt;p&gt;&lt;em&gt;Save for later.&lt;/em&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;People scan information and don't read all the content.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ofzq2BfB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8q106147gq2a6eso1svi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ofzq2BfB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8q106147gq2a6eso1svi.png" alt="map"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#so-thats-why-content-type-and-placement-is-important"&gt;
  &lt;/a&gt;
  So that's why content type and placement is important.
&lt;/h5&gt;

&lt;p&gt;&lt;br&gt;Content that appears above the fold is what the user will see first.&lt;/p&gt;

&lt;p&gt;The top of the page should attract users to continue scrolling.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-content-is-faster-to-consume"&gt;
  &lt;/a&gt;
  &lt;em&gt;What content is faster to consume?&lt;/em&gt;
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;V&lt;/strong&gt;ideos give more info than still images.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;I&lt;/strong&gt;mages are easily scannable.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;I&lt;/strong&gt;cons are perceived faster than words.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;T&lt;/strong&gt;ext used to give longer information.

&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6vSOiBdf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/twicyrzns26jkfayai2q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6vSOiBdf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/twicyrzns26jkfayai2q.png" alt="layout"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#are-you-applying-it-to-your-design"&gt;
  &lt;/a&gt;
  &lt;br&gt;Are you applying it to your design?
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;P.S. Want the next post to be something specific? Do let me know in the comments.&lt;/p&gt;

&lt;p&gt;ü§òüèª&lt;br&gt;
&lt;br&gt;&lt;br&gt;
Connect with me : &lt;a href="https://github.com/deyRupak"&gt;Github&lt;/a&gt;&lt;br&gt;
Support me : &lt;a href="https://paypal.me/deyrdx?locale.x=en_GB"&gt;Buy me a coffee!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>design</category>
      <category>productivity</category>
      <category>uiweekly</category>
    </item>
    <item>
      <title>Docker Cheat Sheet - Docker Networks</title>
      <author>Manoj Kumar Patra</author>
      <pubDate>Sun, 03 Oct 2021 06:30:40 +0000</pubDate>
      <link>https://dev.to/manojpatra1991/docker-cheat-sheet-docker-networks-49k4</link>
      <guid>https://dev.to/manojpatra1991/docker-cheat-sheet-docker-networks-49k4</guid>
      <description>&lt;h2&gt;
  &lt;a href="#get-port-details-for-a-container"&gt;
  &lt;/a&gt;
  Get port details for a container:
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker container port &amp;lt;container-name&amp;gt;

&lt;span class="c"&gt;# 80/tcp -&amp;gt; 0.0.0.0:80&lt;/span&gt;
&lt;span class="c"&gt;# 80/tcp -&amp;gt; :::80&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#get-ip-for-container"&gt;
  &lt;/a&gt;
  Get IP for container:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker container inspect &lt;span class="nt"&gt;--format&lt;/span&gt; &lt;span class="s1"&gt;'{{ .NetworkSettings.IPAddress }}'&lt;/span&gt; webhost
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;--format&lt;/code&gt; - option for formatting the output of commands using &lt;strong&gt;Go templates&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#how-networking-happens-with-docker-containers"&gt;
  &lt;/a&gt;
  How networking happens with Docker containers?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oqXUh2Zz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o238wv2cnsanb4cu4uat.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oqXUh2Zz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o238wv2cnsanb4cu4uat.jpg" alt="Docker_Network"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Virtual networks get created when we publish a container. For example, if we publish container &lt;strong&gt;C1&lt;/strong&gt; with &lt;code&gt;80:80&lt;/code&gt;,&lt;br&gt;
it means any traffic coming in at port 80 on the host will be forwarded to port 80 on container &lt;strong&gt;C1&lt;/strong&gt; via the virtual network. Creating another container &lt;strong&gt;C2&lt;/strong&gt; by default, will be put in the same virtual network, which means, &lt;strong&gt;C1&lt;/strong&gt; and &lt;strong&gt;C2&lt;/strong&gt; can communicate freely via this virtual network.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: A host port can only be linked to one container.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bridge&lt;/strong&gt; or &lt;strong&gt;Docker0&lt;/strong&gt; is the default virtual network mapped to the host IP.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#docker-network-cli-commands"&gt;
  &lt;/a&gt;
  Docker Network CLI commands
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#show-all-networks"&gt;
  &lt;/a&gt;
  Show all networks:
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker network &lt;span class="nb"&gt;ls&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#inspect-a-network"&gt;
  &lt;/a&gt;
  Inspect a network:
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker network inspect &amp;lt;network-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#create-a-virtual-network"&gt;
  &lt;/a&gt;
  Create a virtual network:
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker network create &amp;lt;network-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;To use a custom bridge, we can use the &lt;code&gt;--driver&lt;/code&gt; option.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#attach-a-network-to-a-container"&gt;
  &lt;/a&gt;
  Attach a network to a container:
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker network connect &amp;lt;network-name&amp;gt; &amp;lt;container-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#detach-a-network-from-a-container"&gt;
  &lt;/a&gt;
  Detach a network from a container:
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker network disconnect &amp;lt;network-name&amp;gt; &amp;lt;container-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#connect-to-a-network-while-running-a-container"&gt;
  &lt;/a&gt;
  Connect to a network while running a container:
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker container run &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="nt"&gt;--name&lt;/span&gt; &amp;lt;container-name&amp;gt; &lt;span class="nt"&gt;--network&lt;/span&gt; &amp;lt;network-name&amp;gt; &amp;lt;image&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#default-network-types"&gt;
  &lt;/a&gt;
  Default network types
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Bridge&lt;/strong&gt; or &lt;strong&gt;Docker0&lt;/strong&gt; - the default virtual network mapped to the host IP. It allows containers to communicate with each other when running on the same docker host.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;host&lt;/strong&gt; - a special network that attaches the container directly to the host by skipping the virtual network.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;none&lt;/strong&gt; - Only &lt;code&gt;localhost&lt;/code&gt; interface is available in container&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Using Docker networks, we can ensure that:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;related apps are on the same Docker network&lt;/li&gt;
&lt;li&gt;Their inter-communication is restricted to the virtual network&lt;/li&gt;
&lt;li&gt;Traffics can be forwarded from host to container only if we publish the container with &lt;code&gt;--publish&lt;/code&gt; or &lt;code&gt;-p&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#dns"&gt;
  &lt;/a&gt;
  DNS
&lt;/h2&gt;

&lt;p&gt;Containers can communicate with other containers in the same virtual network with host names.&lt;/p&gt;

&lt;p&gt;Docker defaults host name to container's name. However, we can also use aliases.&lt;/p&gt;

&lt;p&gt;To provide network aliases for containers, we can do the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; docker container run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nt"&gt;--network&lt;/span&gt; &amp;lt;network-name&amp;gt; &lt;span class="nt"&gt;--network-alias&lt;/span&gt; &amp;lt;container-network-alias&amp;gt; &amp;lt;image&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, with this containers in the same virtual network can communicate with each other via aliases.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The flag &lt;code&gt;--rm&lt;/code&gt; makes sure the container is deleted permanently on exit.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>docker</category>
      <category>network</category>
      <category>bash</category>
    </item>
    <item>
      <title>8 Best Java EE Online Courses for Java Developers</title>
      <author>javinpaul</author>
      <pubDate>Sun, 03 Oct 2021 06:02:43 +0000</pubDate>
      <link>https://dev.to/javinpaul/8-best-java-ee-online-courses-for-java-developers-4pmj</link>
      <guid>https://dev.to/javinpaul/8-best-java-ee-online-courses-for-java-developers-4pmj</guid>
      <description>&lt;p&gt;&lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;subid=0&amp;amp;offerid=323058.1&amp;amp;type=10&amp;amp;tmpid=14538&amp;amp;RD_PARM1=https%3A%2F%2Fwww.udemy.com%2Fthe-java-ee-course%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--itkkqb-_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1043/1%2AS9yHLboqIoRp-p4DJk59jA.jpeg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello guys, if you want to learn Java EE and looking for best resources then you have come to the right place. Earlier, I have shared &lt;a href="https://dev.to/javinpaul/8-best-online-java-courses-to-learn-programming-in-2021-4clb"&gt;best online courses to learn Java&lt;/a&gt; and in this article, I will share best Java EE courses for both beginners and intermediate Java developers.&lt;/p&gt;

&lt;p&gt;The Java Platform Enterprise Edition 8 or Java EE 8 was released a couple of years ago, along with &lt;a href="http://www.java67.com/2018/01/top-10-java-9-tutorials-and-courses.html"&gt;Java 9&lt;/a&gt; in September 2017. If you are a Java developer or someone who wants to learn Java EE for web development and looking for some courses to kickstart your learning, then you have come to the right place.&lt;/p&gt;

&lt;p&gt;In this article, I am going to share &lt;strong&gt;excellent Java EE courses&lt;/strong&gt; that cover both Java EE 7 and Java EE 8. If you are wondering what Java EE is and what Java EE 8 brings into the table, let me give you a brief overview of Java EE.&lt;/p&gt;

&lt;p&gt;The Java EE is a collection of Java technologies and APIs designed to support "Enterprise" Applications, which can generally be classified as large-scale, distributed, transactional, and highly-available applications designed to support mission-critical business requirements.&lt;/p&gt;

&lt;p&gt;It contains some of the most popular Java technologies you have heard of, like &lt;a href="http://www.java67.com/2018/02/5-free-servlet-jsp-and-jdbc-online-courses-for-java-developers.html"&gt;Servlet&lt;/a&gt;, JSP, EJB, &lt;a href="https://javarevisited.blogspot.com/2018/02/top-5-restful-web-services-with-spring-courses-for-experienced-java-programmers.html"&gt;JAX-RS&lt;/a&gt;, &lt;a href="http://www.java67.com/2018/03/top-5-free-jdbc-courses-for-java.html"&gt;JDBC&lt;/a&gt;, JNDI, JMX, Java Mail, JTA, JTS, JAF, XML, etc.&lt;/p&gt;

&lt;p&gt;Also, the new version of Java EE 8 brings support for Java Servlet 4.0 API with HTTP/2 support, enhanced JSON support including a new JSON binding API, a new REST Reactive Client API, Asynchronous CDI Events, a new portable Security API, Server-Sent Events support (Client &amp;amp; Server-side), and --- most importantly --- support for Java SE 8 new features (like &lt;a href="http://javarevisited.blogspot.sg/2015/03/20-examples-of-date-and-time-api-from-Java8.html"&gt;Date and Time API&lt;/a&gt;, &lt;a href="http://www.java67.com/2014/04/java-8-stream-examples-and-tutorial.html"&gt;Streams API&lt;/a&gt;, and annotations enhancements).&lt;/p&gt;

&lt;p&gt;Another important thing to know about &lt;strong&gt;Java EE 8 was the last release of Java EE from Oracle,&lt;/strong&gt; and now, Oracle has moved Java EE to an open-source foundation (Eclipse Foundation), and it's called Jakarta EE.&lt;/p&gt;

&lt;p&gt;Why did this happen? Well, Oracle thought that moving into an open-source foundation would increase developers' participation, but they wanted to control the Java trademark; hence Java EE becomes &lt;strong&gt;Jakarta EE&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-best-java-ee-courses-for-java-web-developers"&gt;
  &lt;/a&gt;
  8 Best Java EE Courses for Java Web Developers
&lt;/h2&gt;

&lt;p&gt;Until a couple of years ago, I personally liked to read and learn from books, but after I joined a couple of courses on &lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;offerid=323058.9409&amp;amp;type=3&amp;amp;subid=0"&gt;Udemy&lt;/a&gt; and &lt;a href="http://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Flearn"&gt;Pluarlsight&lt;/a&gt; (Netflix for software developers), my perception changed.&lt;/p&gt;

&lt;p&gt;Now, I start with an online course and then read a book to solidify my knowledge further now that you know what Java EE is, let's get into these courses and help you learn Java EE.&lt;/p&gt;

&lt;p&gt;If you are a Java developer working in the Java EE space, then you can benefit from these courses.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-java-enterprise-edition-8-for-beginners-course"&gt;
  &lt;/a&gt;
  1. Java Enterprise Edition 8 for Beginners course
&lt;/h3&gt;

&lt;p&gt;This is a great and most up-to-date course to learn Java EE 8 from scratch. In this course, you will learn Jakarta EE, JPA, CDI, JAX-RS, REST, JWT, JSON-P and JSON-B and more.&lt;/p&gt;

&lt;p&gt;You'll learn what JEE specifications and implementations are and how to use them and understand how the various Java EE APIs work together to make you a productive developer.&lt;/p&gt;

&lt;p&gt;You'll also learn how to write powerful web services using the Java API Restful Web Services (JAX-RS) and create loosely coupled code using dependency injection API (CDI).&lt;/p&gt;

&lt;p&gt;Overall a great course to join if you want to learn Java EE 8 in 2020. It's created by Tim Buchalaka's Learn Programming Academy and already trusted by more than 3600 developers.&lt;/p&gt;

&lt;p&gt;Here is the link to join this course --- &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fjava-enterprise-edition-8%2F"&gt;&lt;strong&gt;Java EE 8 for Beginners&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fjava-enterprise-edition-8%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tOfb-Wl3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/477/1%2ALTwMh6ahKXxLqn9P2zAD4A.png" alt="best Java EE course for beginners"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#2-java-ee-with-vaadin-spring-boot-and-maven"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;subid=0&amp;amp;offerid=323058.1&amp;amp;type=10&amp;amp;tmpid=14538&amp;amp;RD_PARM1=https%3A%2F%2Fwww.udemy.com%2Fjava-ee-with-vaadin-spring-boot-and-maven%2F"&gt;Java EE With Vaadin, Spring Boot, and Maven&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is one of the &lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;subid=0&amp;amp;offerid=323058.1&amp;amp;type=10&amp;amp;tmpid=14538&amp;amp;RD_PARM1=https%3A%2F%2Fwww.udemy.com%2Fjava-ee-with-vaadin-spring-boot-and-maven%2F"&gt;best and most modern Java EE cours&lt;/a&gt;es will find on Udemy. As the title suggests, the course will teach you quite a few technologies, like Vaadin Framework, Spring, Spring Security, Spring Boot, Maven, JPA, JBoss --- WildFly, etc.&lt;/p&gt;

&lt;p&gt;But, most importantly, it follows a top-down approach, i.e. it first shows you the project you are going to build and then explains how you will build that by teaching each and every technology involved in creating that project.&lt;/p&gt;

&lt;p&gt;Even if you are familiar with &lt;a href="http://www.java67.com/2017/11/top-5-free-core-spring-mvc-courses-learn-online.html"&gt;Spring&lt;/a&gt; and &lt;a href="http://www.java67.com/2018/02/6-free-maven-and-jenkins-online-courses-for-java-developers.html"&gt;Maven&lt;/a&gt;, you will improve your understanding of these platforms.&lt;/p&gt;

&lt;p&gt;It's also a CA-comprehensive course, with more than 18 hours of content. You will learn a lot of things like design patterns, best coding practices, and how to create maintainable, robust software.&lt;/p&gt;

&lt;p&gt;As I said at the start of this post, the final project is great and will teach you a lot. It will also give you a chance to apply whatever you have learned from the course.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;subid=0&amp;amp;offerid=323058.1&amp;amp;type=10&amp;amp;tmpid=14538&amp;amp;RD_PARM1=https%3A%2F%2Fwww.udemy.com%2Fjava-ee-with-vaadin-spring-boot-and-maven%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CulGdoTW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/348/0%2AbVPNib2sZkS7ZjUa.jpg" alt="best Udemy course to learn Java EE"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-the-java-ee-course-build-a-java-ee-app-from-scratch"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;subid=0&amp;amp;offerid=323058.1&amp;amp;type=10&amp;amp;tmpid=14538&amp;amp;RD_PARM1=https%3A%2F%2Fwww.udemy.com%2Fthe-java-ee-course%2F"&gt;The Java EE Course: Build a Java EE App From Scratch&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is a great &lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;subid=0&amp;amp;offerid=323058.1&amp;amp;type=10&amp;amp;tmpid=14538&amp;amp;RD_PARM1=https%3A%2F%2Fwww.udemy.com%2Fthe-java-ee-course%2F"&gt;course&lt;/a&gt; for all the developers who love project-based learning --- I know I certainly do. As per my personal experience, I learn most when I do a project and apply whatever theory and practical I have learned from the course, and that's why I recommend this course.&lt;/p&gt;

&lt;p&gt;You will build a full Java EE airline management application from scratch and learn Java EE theory and practice during the process.&lt;/p&gt;

&lt;p&gt;While building this course, you will learn key Java EE technologies, like EJB, to build robust backend and service layers, JPA to interact between applications and databases, servlets and JSP for building controller and user interface, and &lt;a href="https://javarevisited.blogspot.com/2017/02/how-to-consume-json-from-restful-web-services-Spring-RESTTemplate-Example.html#at_pco=smlwn-1.0&amp;amp;at_si=5a54c15f3ed286ce&amp;amp;at_ab=per-2&amp;amp;at_pos=0&amp;amp;at_tot=1"&gt;REST web services&lt;/a&gt; that allow remote applications and JavaScript to interact with an application.&lt;/p&gt;

&lt;p&gt;You will also learn about resource and dependency injections in Java EE, which is important for writing clean code, which is both easier to extend and test.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;subid=0&amp;amp;offerid=323058.1&amp;amp;type=10&amp;amp;tmpid=14538&amp;amp;RD_PARM1=https%3A%2F%2Fwww.udemy.com%2Fthe-java-ee-course%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kmMJPhki--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/348/0%2AH81NQVEteMdWe_FE.jpg" alt="best online course to learn Java EE"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-java-ee-made-easy-patterns-architecture-and-frameworks"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;subid=0&amp;amp;offerid=323058.1&amp;amp;type=10&amp;amp;tmpid=14538&amp;amp;RD_PARM1=https%3A%2F%2Fwww.udemy.com%2Fjava-ee-design-patterns-architecture-and-frameworks%2F"&gt;Java EE Made Easy: Patterns, Architecture, and Frameworks&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is probably the &lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;subid=0&amp;amp;offerid=323058.1&amp;amp;type=10&amp;amp;tmpid=14538&amp;amp;RD_PARM1=https%3A%2F%2Fwww.udemy.com%2Fjava-ee-design-patterns-architecture-and-frameworks%2F"&gt;most popular Java EE course&lt;/a&gt; on Udemy, with more than 5000 students already enrolled in it.&lt;/p&gt;

&lt;p&gt;The course provides a nice overview of all the Java EE technologies, like JPA, JDBC, ORM, JNDI, EJB, JTA, DTO, VO, JAXB, JAX-RS, JAX-WS, AOP, and the dependency injection.&lt;/p&gt;

&lt;p&gt;And, more importantly, you will get an overview of important &lt;a href="https://javarevisited.blogspot.com/2018/02/top-5-java-design-pattern-courses-for-developers.html"&gt;Java EE patterns&lt;/a&gt;, like Front Controller, View Helper, Composite View, Context Object, Intercepting Filter, Domain Model, Facade, DTO/VO, DAO --- &lt;a href="http://javarevisited.blogspot.sg/2013/01/data-access-object-dao-design-pattern-java-tutorial-example.html#axzz4s6N7Y7Gb"&gt;Data Access Object&lt;/a&gt;, and Service Activator.&lt;/p&gt;

&lt;p&gt;The patterns are also grouped by the layer they are used in, which makes it easy for you to remember and use them.&lt;/p&gt;

&lt;p&gt;Overall, this is a perfect course for someone who is developing a &lt;a href="http://www.java67.com/2016/06/3-difference-between-web-server-vs-application-server-vs-servlet-container.html"&gt;web application&lt;/a&gt; with Java EE and wants to understand the big picture, as well as experienced Java developers who want to master Java EE patterns.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;subid=0&amp;amp;offerid=323058.1&amp;amp;type=10&amp;amp;tmpid=14538&amp;amp;RD_PARM1=https%3A%2F%2Fwww.udemy.com%2Fjava-ee-design-patterns-architecture-and-frameworks%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fpK1FvBd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/261/0%2AP2Ft6fCsKS9Iwd6r.jpg" alt="best Udemy course to learn Java EE"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-java-ee-7-fundamentals"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Fjava-ee-7-fundamentals"&gt;Java EE 7 Fundamentals&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Even though Java EE 8 is the latest version, Java EE 7 is still the most popular Java EE version. Most companies are running their enterprise application on Java EE 6 and Java EE 7 with migration to Java EE 8 slowly taking place.&lt;/p&gt;

&lt;p&gt;If you happened to work on the existing Java EE 7 application and wanted to maintain your application better this is the perfect course for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Fjava-ee-7-fundamentals"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fQn1T9z2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/348/0%2ANAV4PtoxpnBIe3eq.jpg" alt="best Pluralsight course to learn Java EE"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Fjava-ee-7-fundamentals"&gt;this course&lt;/a&gt;, you will learn about how the Java EE platform has progressed through its history to the modern platform it is today, the foundations of building a web application in Java EE, and how to interoperate Java EE applications with external services&lt;/p&gt;

&lt;p&gt;It's also one of the most comprehensive courses, created by Antonio Goncalves, who is an authority on Java EE space and also the author of best-seller &lt;a href="https://www.amazon.com/Beginning-Java-EE-Expert-Voice/dp/143024626X?tag=javamysqlanta-20"&gt;Beginning Java EE 7&lt;/a&gt; book.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#6-jakarta-ee-formerly-java-ee-quick-start-course"&gt;
  &lt;/a&gt;
  6. Jakarta EE (formerly Java EE) Quick Start Course
&lt;/h3&gt;

&lt;p&gt;This course is your quick guide to starting enterprise Java development with the Jakarta EE (formerly Java EE) platform. In this course, you'll build a simple Todo app showcasing the 3 canonical Java EE APIs.&lt;/p&gt;

&lt;p&gt;By doing that you'll use the Java Persistence API to query data from a database and use the Java API for RESTful Web Services to create simple web services. You'll also be able to use the Contexts and Dependency Injection (CDI) API to manage dependencies&lt;/p&gt;

&lt;p&gt;Here is the link to join this course --- &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fjakarta-ee-formerly-java-ee-quick-start-course%2F"&gt;&lt;strong&gt;Jakarta EE Quick Start Course&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#7-whats-new-in-java-ee-8"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Fjava-ee-8-whats-new"&gt;What's New in Java EE 8&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Java EE 8 has brought some really cool features like Servlet 4.0 API, HTTP 2.0 support and a new JSON binding API. Apart from that, it also supports those ultra-useful Java SE 8 features, like Stream and new Date and Time API, and there is no better way to learn those features in quick time than joining &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Fjava-ee-8-whats-new"&gt;this course&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this course, you'll first learn about the brand new JSON-B, an API for binding Java objects to &lt;a href="http://www.java67.com/2016/10/3-ways-to-convert-string-to-json-object-in-java.html"&gt;JSON&lt;/a&gt; and vice versa. With very little code, you'll explore how you can generate and consume JSON without any third-party libraries&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Fjava-ee-8-whats-new"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wDINd1jL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/348/0%2ATGErUdlvlRlLikTP.png" alt="best Java EE course on Plurlaisight"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will also explore Java's completely new Security API, improving upon the hard-to-use and often container-specific security mechanisms. &lt;/p&gt;

&lt;p&gt;Additionally, you'll also learn about major updates to Java EE technologies in this release, such as JPA 2.2, CDI 2.0 and JSF 2.3 --- all in just under two hours!&lt;/p&gt;

&lt;p&gt;If you prefer the book and want more comprehensive coverage, then you can also check out the &lt;a href="https://www.amazon.com/Java-Cookbook-applications-technology-development/dp/1788293037?tag=javamysqlanta-20"&gt;&lt;strong&gt;Java EE 8 CookBook&lt;/strong&gt;&lt;/a&gt;, one of my favorite how-to guides to learn Java EE 8.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#8-the-java-ee-course-build-a-java-ee-app-from-scratch"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fthe-java-ee-course%2F"&gt;The Java EE Course - build a Java EE app from scratch&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;If you are looking for a hands-on, project based course to learn Java EE then this course is for you. I was looking for this kind of course for a long time where you can just build a real world, production grade application using Java EE technologies from scratch.&lt;/p&gt;

&lt;p&gt;In this 20-hour long, guided course you will build a full Java EE airline management application from scratch, and learn Java EE theory and practice in the process&lt;/p&gt;

&lt;p&gt;This course provides a complete Java EE learning solution suitable especially for beginners who have limited or no prior Java EE knowledge and experience.&lt;/p&gt;

&lt;p&gt;That's all about some of the &lt;strong&gt;best Java EE courses to learn online&lt;/strong&gt;. If you think Java EE is dead, then you are wrong, it's very much alive and kicking with the new Java EE 8 release. There are also tons of companies using Java EE and they are not going anywhere.&lt;/p&gt;

&lt;p&gt;Other Java and Web Development Resources&lt;br&gt;
If you need more resources, you can also checkout these articles:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="https://javarevisited.blogspot.com/2019/10/the-java-developer-roadmap.html"&gt;The Complete Java Developer RoadMap&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="http://www.java67.com/2017/11/top-5-free-core-spring-mvc-courses-learn-online.html"&gt;5 Free Spring Framework Courses for Java Developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://javarevisited.blogspot.com/2018/05/top-5-courses-to-learn-spring-boot-in.html"&gt;Top 5 Courses to Learn Spring Boot for Java developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="http://javarevisited.blogspot.com/2017/12/top-5-courses-to-learn-big-data-and.html"&gt;5 Courses to Learn Big Data and Apache Spark&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://javarevisited.blogspot.com/2018/02/top-5-java-design-pattern-courses-for-developers.html"&gt;Top 5 Courses to Learn Design Patterns in Java&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://javarevisited.blogspot.com/2018/01/top-5-free-data-structure-and-algorithm-courses-java--c-programmers.html"&gt;5 Free Data Structure and Algorithms Courses&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="http://www.java67.com/2018/02/5-free-react-courses-for-web-developers.html"&gt;5 Free Courses to Learn React JS Framework&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://javarevisited.blogspot.com/2018/02/top-5-online-courses-to-learn-web-development.html"&gt;Top 5 Courses to learn Web Development for Beginners&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thanks, You made it to the end of the article ... Good luck with your Java EE journey! It's certainly not going to be easy, but by following these courses and guides, you are one step closer to becoming the Java web developer you always wanted to be.&lt;/p&gt;

&lt;p&gt;If you like this article, then please share it with your friends and colleagues, and don't forget to follow &lt;a href="https://twitter.com/javinpaul"&gt;javinpaul&lt;/a&gt; on Twitter. I share programming articles, free books, and courses, as well as some coding problems and tech stuff for programmers. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt; - If you are looking for some FREE courses to start with Java EE concepts, You should take a look at my list of &lt;a href="http://www.java67.com/2018/02/5-free-servlet-jsp-and-jdbc-online-courses-for-java-developers.html"&gt;free Servlet and JSP Courses&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>java</category>
      <category>webdev</category>
      <category>javaee</category>
      <category>coding</category>
    </item>
    <item>
      <title>5 Tips to Maximize Productivity Every Developer Must Know</title>
      <author>Tapajyoti Bose</author>
      <pubDate>Sun, 03 Oct 2021 05:53:46 +0000</pubDate>
      <link>https://dev.to/ruppysuppy/5-tips-to-maximize-productivity-every-developer-must-know-491e</link>
      <guid>https://dev.to/ruppysuppy/5-tips-to-maximize-productivity-every-developer-must-know-491e</guid>
      <description>&lt;p&gt;&lt;strong&gt;Programming&lt;/strong&gt; can lead to a &lt;em&gt;high paying career&lt;/em&gt;, but in the &lt;strong&gt;tech industry&lt;/strong&gt; you often have to work &lt;em&gt;long hours&lt;/em&gt; and &lt;em&gt;rise up to challenge&lt;/em&gt; and put in the &lt;strong&gt;immense effort required&lt;/strong&gt;. This article will provide you with &lt;strong&gt;actionable steps&lt;/strong&gt; to take your &lt;strong&gt;productivity levels&lt;/strong&gt; from &lt;em&gt;meh&lt;/em&gt; to &lt;em&gt;through the roof&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uFrB5FRI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwyqlo6fbqq4upee6iyv.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uFrB5FRI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwyqlo6fbqq4upee6iyv.gif" alt="Let's Get Started"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tip-1-nail-the-fundamentals"&gt;
  &lt;/a&gt;
  Tip 1: Nail the Fundamentals
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BnM-HLTv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ksxz2f6uv643kabpwf7.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BnM-HLTv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ksxz2f6uv643kabpwf7.gif" alt="Nailing the Fundamentals"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Often beginners &lt;em&gt;skim through the fundamentals&lt;/em&gt;, thinking the &lt;strong&gt;advanced topics&lt;/strong&gt; are where the &lt;em&gt;fun lies&lt;/em&gt;, then &lt;em&gt;give up too soon&lt;/em&gt; saying the &lt;strong&gt;advanced topics&lt;/strong&gt; are &lt;em&gt;way too hard&lt;/em&gt;. Without the &lt;strong&gt;basics&lt;/strong&gt;, of course grasping the &lt;strong&gt;advanced topics&lt;/strong&gt; will seem out of reach.&lt;/p&gt;

&lt;p&gt;So, even if the &lt;strong&gt;fundamentals&lt;/strong&gt; seem &lt;em&gt;boring&lt;/em&gt; or &lt;em&gt;unimportant&lt;/em&gt; at first, they are &lt;em&gt;extremely essential&lt;/em&gt; in your journey. Learning the &lt;strong&gt;fundamentals&lt;/strong&gt; is an &lt;em&gt;initial investment&lt;/em&gt; that will &lt;em&gt;yield great dividends&lt;/em&gt; in the long run, an &lt;em&gt;investment&lt;/em&gt; your future self will thank you for.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tip-2-you-learn-by-doing-not-watching-videos"&gt;
  &lt;/a&gt;
  Tip 2: You Learn by Doing NOT Watching Videos
&lt;/h1&gt;

&lt;p&gt;Developing &lt;strong&gt;practical skills&lt;/strong&gt; is &lt;strong&gt;crucial&lt;/strong&gt; to fly high in a &lt;em&gt;Career in Programming&lt;/em&gt;. I have seen a lot of my friends &lt;em&gt;watching some tutorials&lt;/em&gt; and &lt;strong&gt;thinking&lt;/strong&gt; &lt;em&gt;they have the necessary skills&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Theoretical skills&lt;/strong&gt; are &lt;em&gt;completely useless&lt;/em&gt; unless you can convert your &lt;em&gt;thoughts into a properly implemented program&lt;/em&gt;. You learn something by &lt;strong&gt;DOING not STUDYING&lt;/strong&gt;. That's also the exact problem with the &lt;strong&gt;education system&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Students are given answers to memorize, not problems to solve&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Another thing to keep in mind is &lt;strong&gt;not to get discouraged easily&lt;/strong&gt;, often if you are taking on &lt;strong&gt;difficult challenges head-on&lt;/strong&gt;, it would definitely take &lt;em&gt;a long time&lt;/em&gt; before you have a &lt;strong&gt;breakthrough&lt;/strong&gt;. For example, just to develop the &lt;strong&gt;algorithm&lt;/strong&gt; to implement &lt;strong&gt;end to end encryption&lt;/strong&gt; (E2EE) for &lt;a href="https://github.com/ruppysuppy/SmartsApp"&gt;&lt;strong&gt;Smartsapp&lt;/strong&gt;&lt;/a&gt; took me 3 months.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tip-3-errors-are-your-friends"&gt;
  &lt;/a&gt;
  Tip 3: Errors are Your Friends
&lt;/h1&gt;

&lt;p&gt;Often when developers, &lt;em&gt;especially beginners&lt;/em&gt;, come across an error, their reaction is somewhat like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tj1zjrn9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kiviizebnvlhwsoxt944.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tj1zjrn9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kiviizebnvlhwsoxt944.gif" alt="Angry"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Instead of losing your mind, if you just go through the &lt;strong&gt;error body&lt;/strong&gt;, often you will find &lt;em&gt;what causes the issue clearly mentioned&lt;/em&gt;, which would help you &lt;em&gt;get rid of errors&lt;/em&gt; &lt;strong&gt;very quickly&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Learning to &lt;strong&gt;debug an application&lt;/strong&gt; is simply the &lt;strong&gt;most important skill&lt;/strong&gt; to master to &lt;em&gt;level up your programming skills&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tip-4-learn-touch-typing"&gt;
  &lt;/a&gt;
  Tip 4: Learn Touch Typing
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Touch Typing&lt;/strong&gt; isn't a &lt;em&gt;mandatory&lt;/em&gt;, but definitely a &lt;em&gt;good skill to have&lt;/em&gt; in your &lt;strong&gt;arsenal&lt;/strong&gt;. It does &lt;strong&gt;significantly improves&lt;/strong&gt; the &lt;em&gt;time you need to type out anything&lt;/em&gt;, and as an &lt;strong&gt;added bonus&lt;/strong&gt;, now you too can &lt;em&gt;look cool in front of friends&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hCAhL0Qq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ymworeb8xz6wh8vcj2nl.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hCAhL0Qq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ymworeb8xz6wh8vcj2nl.gif" alt="Fast Typing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tip-5-breaks-are-important"&gt;
  &lt;/a&gt;
  Tip 5: Breaks are Important
&lt;/h1&gt;

&lt;p&gt;After following all these steps, you &lt;strong&gt;must not&lt;/strong&gt; &lt;em&gt;forget to take breaks&lt;/em&gt;. It allows you to &lt;em&gt;recharge&lt;/em&gt; and also &lt;em&gt;come up with new and creative ideas to solve problems&lt;/em&gt;, thus making not just you &lt;strong&gt;programming better&lt;/strong&gt; but &lt;em&gt;your life in general easier&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Also &lt;em&gt;continuously working&lt;/em&gt; isn't great for your &lt;strong&gt;health&lt;/strong&gt; either, giving rise to &lt;em&gt;issues with your eyes&lt;/em&gt; and &lt;em&gt;spine&lt;/em&gt;. So you are &lt;strong&gt;highly encouraged&lt;/strong&gt; to unwind and take a break from time to time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zUimQCvE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/muih2qna23pz7zq5omdb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zUimQCvE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/muih2qna23pz7zq5omdb.gif" alt="Relax"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;In this article, we went through some tips on how to boost your productivity. Hope it helps you out in your journey. Happing Programming!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h1&gt;

&lt;p&gt;From the upcoming Saturday, I will start releasing Monthly Productivity Blogs. If that sounds interesting, stay tuned on &lt;a href="https://tapajyotibose.medium.com/"&gt;Medium&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to work together? Contact me on &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to see what I am working on? Check out my &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am a freelancer who will start off as a Digital Nomad in mid-2022. Want to catch the journey? Follow me on &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow my blogs for weekly new tidbits on &lt;a href="https://dev.to/ruppysuppy"&gt;Dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These are a few commonly asked questions I get. So, I hope this &lt;strong&gt;FAQ&lt;/strong&gt; section solves your issues.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;I am a beginner, how should I learn Front-End Web Dev?&lt;/strong&gt;&lt;br&gt;
Look into the following articles:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/ruppysuppy/front-end-developer-roadmap-zero-to-hero-4pkf"&gt;Front End Development Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/ruppysuppy/5-projects-to-master-front-end-development-57p"&gt;Front End Project Ideas&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Would you mentor me?&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
Sorry, I am already under a lot of workload and would not have the time to mentor anyone.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Would you like to collaborate on our site?&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
As mentioned in the &lt;em&gt;previous question&lt;/em&gt;, I am in a time crunch, so I would have to pass on such opportunities.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Connect to me on&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.linkedin.com/in/tapajyoti-bose-429a601a0"&gt;LinkedIn&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://tapajyoti-bose.vercel.app"&gt;Portfolio&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>career</category>
      <category>productivity</category>
      <category>discuss</category>
      <category>motivation</category>
    </item>
    <item>
      <title>7+ Developer Tools to Make You Super Productive</title>
      <author>Coder</author>
      <pubDate>Sun, 03 Oct 2021 04:45:40 +0000</pubDate>
      <link>https://dev.to/codezhub/7-developer-tools-to-make-you-super-productive-2ilc</link>
      <guid>https://dev.to/codezhub/7-developer-tools-to-make-you-super-productive-2ilc</guid>
      <description>&lt;p&gt;The best software developers arm themselves with superior knowledge of specific tools that get the job done.&lt;/p&gt;
&lt;p&gt;Pairing with experienced developers leaves you with many tips, tricks, shortcuts, and tools that they have access to and mastered to help them focus on a product‚Äôs business logic.&lt;/p&gt;
&lt;p&gt;Today, I‚Äôll show you 15 developer tools that‚Äôll improve your productivity immensely.¬†&lt;/p&gt;

&lt;p&gt;Let‚Äôs go! üòä&lt;/p&gt;

&lt;h2&gt;
&lt;br&gt;
&lt;a href="https://dev.to/sourcegraph/15-developer-tools-to-make-you-super-productive-2g0a#1-cloudinary"&gt;&lt;/a&gt;1. Cloudinary&lt;span&gt;¬†&lt;/span&gt;&lt;br&gt;
&lt;/h2&gt;
&lt;br&gt;&lt;p&gt;&lt;a href="https://cloudinary.com/"&gt;Cloudinary&lt;/a&gt;¬†is a full-stack media service that stores, transforms, optimizes, and delivers all your media assets with easy-to-use APIs and widgets.&lt;/p&gt;
&lt;p&gt;Cloudinary is an excellent choice if you want to do the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Build a feature/app that stores tons of images and videos.&lt;/li&gt;
&lt;li&gt;Build a UI that allows single and multiple uploads. Cloudinary provides a plug-and-play skinnable UI widget, so you &amp;amp; your team don‚Äôt need to build any UI.&lt;/li&gt;
&lt;li&gt;Make your app and website load faster. Cloudinary delivers media assets insanely quickly via their global CDN!&lt;/li&gt;
&lt;li&gt;Build a feature/app for video delivery and transformation like Instagram. Cloudinary provides several APIs to help with that.&lt;/li&gt;
&lt;li&gt;Build a backend service that crops, manipulates, transforms, reads text from images, extracts captions from videos using AI, compresses and optimizes media files.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cloudinary provides several¬†&lt;a href="https://cloudinary.com/documentation/cloudinary_sdks"&gt;SDKs for different languages and frameworks&lt;/a&gt;¬†to make integration a walk in the park!¬†&lt;/p&gt;

&lt;h2&gt;
&lt;br&gt;
&lt;a href="https://dev.to/sourcegraph/15-developer-tools-to-make-you-super-productive-2g0a#2-sourcegraph"&gt;&lt;/a&gt;2. Sourcegraph&lt;span&gt;¬†&lt;/span&gt;&lt;br&gt;
&lt;/h2&gt;
&lt;br&gt;&lt;p&gt;&lt;a href="https://sourcegraph.com/"&gt;Sourcegraph&lt;/a&gt;¬†is a software tool that allows you to search all of your code. It provides precise code intelligence and insights. With Sourcegraph, you search small, medium and enormous codebases like¬†Linux,¬†Kubernetes,¬†Chrome, etc.&lt;/p&gt;
&lt;p&gt;Sourcegraph is an excellent choice if you want to do the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Search all of your¬†public and private code across several repositories.&lt;/li&gt;
&lt;li&gt;Find all occurrences of code across your organization.&lt;/li&gt;
&lt;li&gt;Search for how other developers use specific API and code blocks across more than two million open source repositories on GitHub and Gitlab.&lt;/li&gt;
&lt;li&gt;Refactor codebase easily and in record time.&lt;/li&gt;
&lt;li&gt;Provide precise code intelligence for all of your code.&lt;/li&gt;
&lt;li&gt;Create real-time dashboards to track the progress of migrations, deprecations, or usage of anything that can be found with a Sourcegraph search.&lt;/li&gt;
&lt;li&gt;Automate large-scale code changes. You can find and modify code across several repositories with a single file‚Äîno need to make several PRs across several code repositories to make a simple change.¬†Sourcegraph Batch changes¬†can do that for you!¬†&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;br&gt;
&lt;a href="https://dev.to/sourcegraph/15-developer-tools-to-make-you-super-productive-2g0a#3-insomnia"&gt;&lt;/a&gt;3. Insomnia&lt;/h2&gt;
&lt;br&gt;&lt;p&gt;&lt;a href="https://insomnia.rest/"&gt;Insomnia&lt;/a&gt;¬†is a software tool that enables you to test API endpoints quickly.&lt;/p&gt;
&lt;p&gt;Insomnia is an excellent choice if you want to do the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Test Rest, Soap, GraphQL and GRPC API endpoints while building.&lt;/li&gt;
&lt;li&gt;Generate API documentation for your codebase.&lt;/li&gt;
&lt;li&gt;Build API pipelines.&lt;/li&gt;
&lt;li&gt;Design APIs using OpenAPI.&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;br&gt;
&lt;a href="https://dev.to/sourcegraph/15-developer-tools-to-make-you-super-productive-2g0a#4-netlify"&gt;&lt;/a&gt;4. Netlify&lt;span&gt;¬†&lt;/span&gt;&lt;br&gt;
&lt;/h2&gt;
&lt;br&gt;&lt;p&gt;&lt;a href="https://www.netlify.com/"&gt;Netlify&lt;/a&gt;¬†is a service that builds and deploys your front-end code quickly. It provides a very efficient workflow for creating apps with many developers.&lt;/p&gt;
&lt;p&gt;Netlify is an excellent choice if you want to do the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Deploy front-end code to the Internet with ease. Build Jamstack apps. Netlify places a massive bet on Jamstack and provides tools and resources to build and develop Jamstack apps.&lt;/li&gt;
&lt;li&gt;Generate new unique and publicly available URLs on every pull request and commit for other developers and QA folks to test what you‚Äôre building on the fly. Serve static assets with fast CDN.&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;br&gt;
&lt;a href="https://dev.to/sourcegraph/15-developer-tools-to-make-you-super-productive-2g0a#5-retool"&gt;&lt;/a&gt;5. Retool&lt;/h2&gt;
&lt;br&gt;&lt;p&gt;&lt;a href="https://retool.com/"&gt;Retool&lt;/a&gt;¬†is a software tool that enables you to build internal tools without writing a line of code.&lt;/p&gt;
&lt;p&gt;Retool is an excellent choice if you want to do the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Build a dashboard / UI internally to monitor and modify data. With Retool, you can connect to your database or any data source and use their drag-and-drop components to build your internal tools remarkably fast.&lt;/li&gt;
&lt;li&gt;Make non-developers have access to the database without setting up a database environment for them.&lt;/li&gt;
&lt;li&gt;Provide customer support with tools to debug customer problems without building a new set of tools for them.¬†&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;br&gt;
&lt;a href="https://dev.to/sourcegraph/15-developer-tools-to-make-you-super-productive-2g0a#6-laravel-forge"&gt;&lt;/a&gt;6. Laravel Forge¬†&lt;/h2&gt;
&lt;br&gt;&lt;p&gt;&lt;a href="https://forge.laravel.com/"&gt;Laravel Forge&lt;/a&gt;¬†is a software service that eliminates the headache of building, managing, fine-tuning, deploying and upgrading servers for PHP applications.&lt;/p&gt;
&lt;p&gt;Laravel Forge is an excellent choice if you want to do the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Be responsible for your servers with minimal or no knowledge of DevOps.&lt;/li&gt;
&lt;li&gt;Deploy and manage Laravel, WordPress, Statamic, PHP, and Database server instances.&lt;/li&gt;
&lt;li&gt;Focus on building applications without the additional headache of managing queue workers and scaling server instances.¬†&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;br&gt;
&lt;a href="https://dev.to/sourcegraph/15-developer-tools-to-make-you-super-productive-2g0a#7-aws-amplify"&gt;&lt;/a&gt;7. AWS Amplify&lt;span&gt;¬†&lt;/span&gt;&lt;br&gt;
&lt;/h2&gt;
&lt;br&gt;&lt;p&gt;&lt;a href="https://aws.amazon.com/amplify"&gt;AWS Amplify&lt;/a&gt;¬†is a set of tools and services that front-end, web and mobile developers can use together or individually to build scalable full-stack applications powered by AWS.&lt;/p&gt;
&lt;p&gt;AWS Amplify is an excellent choice if you want to do the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Deploy static web apps to the Internet in a few clicks.&lt;/li&gt;
&lt;li&gt;Provide non-developers with an admin UI to manage app content.&lt;/li&gt;
&lt;li&gt;Add authentication to your apps without building/managing/writing auth code from scratch.&lt;/li&gt;
&lt;li&gt;Provide a simple mechanism for managing user-generated content for your app in public, protected or private AWS storage buckets.¬†¬†&lt;/li&gt;
&lt;/ul&gt;
&lt;span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/7-best-tools-for-developers-they-cant-live-without-it/&amp;amp;ved=2ahUKEwjSt9PWtq3zAhWtzjgGHfVeDhIQFnoECAQQBQ&amp;amp;usg=AOvVaw1L8LdsK7AZhqLDllCtK7lz"&gt;7 Best Tools For Developers ‚Äì They Can‚Äôt Live Without It&lt;/a&gt;¬†&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/tips-to-become-a-great-programmer/&amp;amp;ved=2ahUKEwivnObwtq3zAhVGwjgGHVhPBT0QFnoECCkQAQ&amp;amp;usg=AOvVaw2TZoEJ1qtcJHCjk5WDoNUU"&gt;Tips to become a great programmer&lt;/a&gt;¬†&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/7-amazing-tips-while-redesigning-your-website/&amp;amp;ved=2ahUKEwiR8ub9tq3zAhVKyzgGHSENCccQFnoECAQQBQ&amp;amp;usg=AOvVaw1MCPezHaMcqtc9wW14T5Lx"&gt;7 Amazing Tips While Redesigning Your Website&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Feel free to drop it in the comment section!&lt;/span&gt;&lt;/span&gt;

</description>
      <category>webdev</category>
      <category>tooling</category>
    </item>
    <item>
      <title>5 Figma plugin for UI/UX developers - part 1</title>
      <author>Tamizh Techie</author>
      <pubDate>Sun, 03 Oct 2021 04:31:29 +0000</pubDate>
      <link>https://dev.to/tamizh_techie/5-figma-plugin-for-ui-ux-developers-part-1-4adc</link>
      <guid>https://dev.to/tamizh_techie/5-figma-plugin-for-ui-ux-developers-part-1-4adc</guid>
      <description>&lt;h2&gt;
  &lt;a href="#color-palettes"&gt;
  &lt;/a&gt;
  Color Palettes
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.figma.com/community/plugin/740832935938649295/Color-Palettes"&gt;https://www.figma.com/community/plugin/740832935938649295/Color-Palettes&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#autoflow"&gt;
  &lt;/a&gt;
  Autoflow
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.figma.com/community/plugin/733902567457592893/Autoflow"&gt;https://www.figma.com/community/plugin/733902567457592893/Autoflow&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#brands-colors"&gt;
  &lt;/a&gt;
  Brands Colors
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.figma.com/community/plugin/740232388085828578/Brands-Colors"&gt;https://www.figma.com/community/plugin/740232388085828578/Brands-Colors&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unsplash"&gt;
  &lt;/a&gt;
  Unsplash
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.figma.com/community/plugin/738454987945972471/Unsplash"&gt;https://www.figma.com/community/plugin/738454987945972471/Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#themer"&gt;
  &lt;/a&gt;
  Themer
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.figma.com/community/plugin/731176732337510831"&gt;https://www.figma.com/community/plugin/731176732337510831&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more updates follow us @&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#telegram-httpstmetamizhtechie"&gt;
  &lt;/a&gt;
  Telegram - &lt;a href="https://t.me/tamizhtechie"&gt;https://t.me/tamizhtechie&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#linkedin-httpswwwlinkedincomintamizhtechie"&gt;
  &lt;/a&gt;
  LinkedIn - &lt;a href="https://www.linkedin.com/in/tamizhtechie/"&gt;https://www.linkedin.com/in/tamizhtechie/&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#website-httpswwwtamizhtechiecom"&gt;
  &lt;/a&gt;
  Website - &lt;a href="https://www.tamizhtechie.com/"&gt;https://www.tamizhtechie.com/&lt;/a&gt;
&lt;/h4&gt;

</description>
      <category>ux</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>uiweekly</category>
    </item>
    <item>
      <title>Scott's Journey on Passing AWS DevOps Engineer Professional Certification</title>
      <author>Scott Hsieh üáπüáº</author>
      <pubDate>Sun, 03 Oct 2021 04:03:54 +0000</pubDate>
      <link>https://dev.to/fantastichsieh/scott-s-journey-on-passing-aws-devops-engineer-professional-certification-2h79</link>
      <guid>https://dev.to/fantastichsieh/scott-s-journey-on-passing-aws-devops-engineer-professional-certification-2h79</guid>
      <description>&lt;p&gt;&lt;a href="https://www.credly.com/badges/77a4fe7a-00dc-4857-929b-d4ba016da532/public_url"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vREWSMOx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6mppnecq39zqtnh3c1pi.png" alt="AWS DevOpe Engineer Professional"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#content-table"&gt;
  &lt;/a&gt;
  Content Table
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#prologue"&gt;Prologue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#official-exam-guide"&gt;Official Exame Guide &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#tips-for-real-exam"&gt;Tips for Real Exam&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#compute"&gt;Compute&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#networking-amp-content-delivery"&gt;Networking &amp;amp; Content Delivery &lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="#developer-tools"&gt;Developer Tools&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#storage"&gt;Storage&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#log"&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#high-availability-fault-tolerance-and-disaster-recover"&gt;High Availability, Fault Tolerance, and Disaster Recover&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#others"&gt;Others&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#implementation-suggestions"&gt;Implementation Suggestions&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#references"&gt;References&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#prologue"&gt;
  &lt;/a&gt;
  Prologue
&lt;/h1&gt;

&lt;p&gt;After passing the &lt;a href="https://www.credly.com/badges/8fdcfe2c-5f7e-4d08-a420-cd49764b332d/public_url"&gt;AWS DAS&lt;/a&gt; in February this year, I'd been fascinating about how to become a professional lazybones&lt;sup&gt;&lt;a href="#ref3"&gt;[3]&lt;/a&gt;&lt;/sup&gt; in spare time apart from &lt;a href="#ref1"&gt;building custom CDK constructs&lt;/a&gt;, &lt;a href="#ref2"&gt;sharing at the AWS Taiwan UG&lt;/a&gt;, internal sharing in my own company, and recording for an external session. All of sudden, I felt gotta keep moving on towards goals after studying the quintessence of lazybones for a while. So, the journey of pursuing the AWS DevOps Engineer Professional Certification began at that moment.&lt;br&gt;&lt;br&gt;
&lt;a href="https://i.giphy.com/media/mEUmeOiT9MCMo/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/mEUmeOiT9MCMo/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#official-exame-guide"&gt;
  &lt;/a&gt;
  Official Exame Guide
&lt;/h1&gt;

&lt;p&gt;Like you will check how many mountain trails you gotta walk through for taking down &lt;a href="#ref4"&gt;the Taipai Grand Trail&lt;/a&gt; and what materials you need to collect so that you could get a &lt;a href="#ref5"&gt;legendary weapon Kudzu&lt;/a&gt; for your ranger in Guild War 2. To get the One Piece of the DOP, you have to evaulaute whether you've had quite some sense what specific enterprise scenarios (cases) are going to show up in this certification and what AWS services you could consider resolving the issues transpired in those cases. From &lt;a href="#ref6"&gt;the website&lt;/a&gt;, you could see:&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Validation on candidates' ability&lt;/strong&gt;  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Implement and manage continuous delivery systems and methodologies on AWS&lt;/li&gt;
&lt;li&gt;Implement and automate security controls, governance processes, and compliance validation&lt;/li&gt;
&lt;li&gt;Define and deploy monitoring, metrics, and logging systems on AWS&lt;/li&gt;
&lt;li&gt;Implement systems that are highly available, scalable, and self-healing on the AWS platform&lt;/li&gt;
&lt;li&gt;Design, manage, and maintain tools to automate operational processes
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Recommended knowledge and experience&lt;/strong&gt;  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Experience developing code in at least one high-level programming language; building highly automated infrastructures; and administering operating systems&lt;/li&gt;
&lt;li&gt;Understanding of modern development and operations processes and methodologies&lt;/li&gt;
&lt;li&gt;Ability to implement and manage continuous delivery systems and methodologies on AWS&lt;/li&gt;
&lt;li&gt;Ability to implement and automate security controls, governance processes, and compliance validation&lt;/li&gt;
&lt;li&gt;Ability to define and deploy monitoring, metrics, and logging systems on AWS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In &lt;a href="#ref7"&gt;the exam guide&lt;/a&gt;, we could see the content expounds more detail into 6 fields that this certification is going to test whether you can respond rapidly towards forementioned enterprise scenarios and understand what AWS services can fulfil the requirements in those cases.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+----------+----------------------------------------------------------+-----+
| Domain 1 | SDLC Automation                                          | 22% |
+----------+----------------------------------------------------------+-----+
| Domain 2 | Configuration Management and Infrastructure as Code      | 19% |
+----------+----------------------------------------------------------+-----+
| Domain 3 | Monitoring and Logging                                   | 15% |
+----------+----------------------------------------------------------+-----+
| Domain 4 | Policies and Standards Automation                        | 10% |
+----------+----------------------------------------------------------+-----+
| Domain 5 | Incident and Event Response                              | 18% |
+----------+----------------------------------------------------------+-----+
| Domain 6 | High Availability, Fault Tolerance, and Disaster Recover | 16% |
+----------+----------------------------------------------------------+-----+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;SDLC Automation&lt;/strong&gt;  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Apply concepts required to automate a CI/CD pipeline&lt;/li&gt;
&lt;li&gt;Determine source control strategies and how to implement them&lt;/li&gt;
&lt;li&gt;Apply concepts required to automate and integrate testing&lt;/li&gt;
&lt;li&gt;Apply concepts required to build and manage artifacts securely&lt;/li&gt;
&lt;li&gt;Determine deployment/delivery strategies (e.g., A/B, Blue/green, Canary, Red/black) and how to
implement them using AWS services&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Configuration Management and Infrastructure as Code&lt;/strong&gt;  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Determine deployment services based on deployment needs&lt;/li&gt;
&lt;li&gt;Determine application and infrastructure deployment models based on business needs&lt;/li&gt;
&lt;li&gt;Apply security concepts in the automation of resource provisioning&lt;/li&gt;
&lt;li&gt;Determine how to implement lifecycle hooks on a deployment&lt;/li&gt;
&lt;li&gt;Apply concepts required to manage systems using AWS configuration management tools and
services&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Monitoring and Logging&lt;/strong&gt;  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Determine how to set up the aggregation, storage, and analysis of logs and metrics&lt;/li&gt;
&lt;li&gt;Apply concepts required to automate monitoring and event management of an environment&lt;/li&gt;
&lt;li&gt;Apply concepts required to audit, log, and monitor operating systems, infrastructures, and
applications&lt;/li&gt;
&lt;li&gt;Determine how to implement tagging and other metadata strategies&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Policies and Standards Automation&lt;/strong&gt;  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Apply concepts required to enforce standards for logging, metrics, monitoring, testing, and security&lt;/li&gt;
&lt;li&gt;Determine how to optimize cost through automation&lt;/li&gt;
&lt;li&gt;Apply concepts required to implement governance strategies&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Incident and Event Response&lt;/strong&gt;  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Troubleshoot issues and determine how to restore operations&lt;/li&gt;
&lt;li&gt;Determine how to automate event management and alerting&lt;/li&gt;
&lt;li&gt;Apply concepts required to implement automated healing&lt;/li&gt;
&lt;li&gt;Apply concepts required to set up event-driven automated actions&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;High Availability, Fault Tolerance, and Disaster Recovery&lt;/strong&gt;  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Determine appropriate use of multi-AZ versus multi-Region architectures&lt;/li&gt;
&lt;li&gt;Determine how to implement high availability, scalability, and fault tolerance&lt;/li&gt;
&lt;li&gt;Determine the right services based on business needs (e.g., RTO/RPO, cost)&lt;/li&gt;
&lt;li&gt;Determine how to design and automate disaster recovery strategies&lt;/li&gt;
&lt;li&gt;Evaluate a deployment for points of failure

&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#tips-for-real-exam"&gt;
  &lt;/a&gt;
  Tips for Real Exam
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#compute"&gt;
  &lt;/a&gt;
  Compute
&lt;/h2&gt;

&lt;p&gt;Such as EC2, Elastic Beanstalk, Lambda, ECS, and Fargate, you need to grasp basic understanding of these services. By saying basic understanding, it doesn‚Äôt mean reading over related official documentations is enough, but at least you gotta equipped with operation experience of those services via the Web Console. Of course, if you work hard enough, deploying the services by CloudFormation (CFN will be used in the rest of the article) or the CDK can be beneficial both to smashing DOP and your own DevOps experience.  &lt;/p&gt;

&lt;p&gt;EC2 can be utilized to become an AP or API server; From scratch, you probably will grow your system gradually from a single functionality based on requirements. During the time, you might still log in the EC2 where your system, or function aggregation, resides via ssh with a key pair to manage the code snippets that support your system or service. Aside from ssh, is there a safer way to log in? Have you ever operated EC2 Instance Connect and Session Manager in AWS Systems Manager? To log in an EC2 server via two forementioned methods, do you know what steps you need to go through on authorization and configuration so that a user can log in via the services?&lt;/p&gt;

&lt;p&gt;As time passes, you might realize that during some specific time spans, requesting number to your service, or server, is large and your server cannot handle this copious amount of requesting. Do you know in this moment you could consider using Elastic Load Balancing and EC2 AUto Scaling to tackle this kind of issue? About launch templates (LT) and launch configuration (LC), can you explain the difference between the two and what scenarios they are suitable? Is there any connection between Auto Scaling Groups (ASG), and LT and LC? What are EC2 Auto Scaling lifecycle hooks? What states are included in the lifecycle hooks? What events, or states,  are followed after the scale-out and scale-in events? If traffic in the coming future cannot be predicted or depicted, among multiple scaling strategies of Auto Scaling, what option you can consider? After grasping all of the scaling strategies, what are their proper usage scenarios? What phenomena will make auto scaling start to work? Can I trigger auto scaling based on some condition? What conditions can I select? If auto scaling is at the scale-in state, before compute instances are going to be terminated, you want to snapshot the instances or create the AMIs, do you know in what state of the lifecycle hooks allows you to define the forementioned custom actions? Or what if there are running compute instances in an ASG, and for regulation purpose, the instances need to be attached the 2nd network interface for connecting to an independent subnet managed by other business unit, what you can do in the lifecycle hooks in order to achieve the requirements? &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o72Br7-H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z45fshm30p4u6y67vi41.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o72Br7-H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z45fshm30p4u6y67vi41.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;em&gt;Introducing Native Support for Predictive Scaling with Amazon EC2 Auto Scaling&lt;sup&gt;&lt;a href="#ref41"&gt;[41]&lt;/a&gt;&lt;/sup&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In terms of Elastic Load Balancing, can you name all of the load balancers&lt;sup&gt;&lt;a href="#ref9"&gt;[9]&lt;/a&gt;&lt;/sup&gt;? In what aspects there is the difference between Application Load Balancer (ALB) and Network Load Balancer (NLB)? In the OSI model, which kind of OSI level for load balancing do they support respectively? If load balancing is required to be integrated with Lambda, what load balancer should be chose?  &lt;/p&gt;

&lt;p&gt;Do you know what things Elastic Beanstalk as a service can do for you automatically? What are Elastic Beanstalk composed of?   Can environment be categorized? If there are multiple kinds of environments, what specific tasks they are especially good at? What is &lt;code&gt;.ebextensions&lt;/code&gt; for? What can it achieve? Can I modify hardware spec of compute instances via &lt;code&gt;.ebextensions&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KJv63X39--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jlxlqwdhuarrr3swx11n.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KJv63X39--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jlxlqwdhuarrr3swx11n.jpeg" alt="Alt Text"&gt;&lt;/a&gt; &lt;em&gt;Model serving in Java with AWS Elastic Beanstalk made easy with Deep Java Library&lt;sup&gt;&lt;a href="#ref28"&gt;[28]&lt;/a&gt;&lt;/sup&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;With micro-service architecture becoming more popular and popular, after assimilating related concepts&lt;sup&gt;&lt;a href="#ref18"&gt;[18]&lt;/a&gt;&lt;/sup&gt;&lt;sup&gt;&lt;a href="#ref27"&gt;[27]&lt;/a&gt;&lt;/sup&gt;&lt;sup&gt;&lt;a href="#ref43"&gt;[43]&lt;/a&gt;&lt;/sup&gt;, its history&lt;sup&gt;&lt;a href="#ref20"&gt;[20]&lt;/a&gt;&lt;/sup&gt;, and what AWS services can assist you in building micro services&lt;sup&gt;&lt;a href="#ref8"&gt;[8]&lt;/a&gt;&lt;/sup&gt;, you'll enter the world of Lambda, ECS, and Fargate. How many phases are there in terms of AWS Lambda execution environment? What programming languages does it support natively, or directly? If a programming language that isn't supported by AWS is preferred to be executed, what method you could consider to achieve the goal? What are the least permissions for an AWS Lambda function to be executed? If integration with other AWS services via Lambda is required, what needs to be done as wishes? If a web server hosted on an EC2 instance with authentication functionality is intended to be migrated to Lambda as serverless service, what components might be changed compared to the original architecture?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l7aP6d_E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4j8b4daaauf2nwqhi77u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l7aP6d_E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4j8b4daaauf2nwqhi77u.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;em&gt;How to get notified on specific Lambda function error patterns using CloudWatch&lt;sup&gt;&lt;a href="#ref29"&gt;[29]&lt;/a&gt;&lt;/sup&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;ECS is for containers, as a managed service, what components are there in ECS? Like task definition, auto scaling, container agent, etc., you're supposed to distinguish components of ECS. Just follow classic examples on the official documentations for hands-on experience, with explanation in the technical documentations and a fabulous late melt with Hokkaido milk. What is the relationship between ECS and ECR? Do they need each other to work, or they can be combined to work together? Is there any one between the services that can execute other task independently?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IPHh9rV6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ustnyvut4ji0adyngyib.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IPHh9rV6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ustnyvut4ji0adyngyib.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;em&gt;Figure in &lt;a href="https://aws.amazon.com/blogs/apn/how-steamhaus-used-aws-well-architected-to-improve-sperry-rails-artificial-intelligence-system/"&gt;How Steamhaus Used AWS Well-Architected to Improve Sperry Rail‚Äôs Artificial Intelligence System&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You still need to manage web servers by deploying your applications or services to ECS, there exists operation cost to some extent. Hence, AWS who captured the customers' need launched AWS Fargate. What differences there are between the ECS container service and AWS Fargate? Why the need of AWS Fargate is getting more and more? When you attempt to figure out carefully, you'll realize what elegant and efficient developing experience is.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aX3LzsIm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/27ltrqurq8n17h9kl1qw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aX3LzsIm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/27ltrqurq8n17h9kl1qw.png" alt="Alt Text"&gt;&lt;/a&gt; Figure in &lt;a href="https://aws.amazon.com/blogs/gametech/game-server-hosting-on-aws-fargate/"&gt;Game Server Hosting on AWS Fargate&lt;/a&gt;  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#networking-amp-content-delivery"&gt;
  &lt;/a&gt;
  Networking &amp;amp; Content Delivery
&lt;/h2&gt;

&lt;p&gt;On the aspect of VPC, you'll also need some understanding, after all, the services mentioned so far are built upon VPC (except Amazon ECS Anywhere, Amazon EKS Anywhere, and AWS Outposts). Like what public subnets, private subnets, route tables, network ACL, and security group (SG) are. What are ENI, CIDR, Internet Gateway, NAT Gateway, and VPC endpoints, etc.? When grasping ENI at the beginning level, you could schedule some time to go deeply about what is the difference among ENI, ENA, and EFA&lt;sup&gt;&lt;a href="#ref36"&gt;[36]&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;About Route53, you're suggested to have sense on how many kinds of DNS records there are, such as A, AAAA, CNAME, Alias records, etc. You gotta at least read through the documentation of routing policies. Geolocation and geo-proximity are all connected to geolocation. What is their difference? What can be achieved via DNS failover? What options can be considered for DNS failover? &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#developer-tools"&gt;
  &lt;/a&gt;
  Developer Tools
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Deployment Models&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
Now we are about to enter into the scope of deployment models. If you look carefully at Point 5 of the SDLC Automation in domain knowledge of the exam guide, you'll see blue/green, canary&lt;sup&gt;&lt;a href="#ref11"&gt;[11]&lt;/a&gt;&lt;/sup&gt;&lt;sup&gt;&lt;a href="#ref38"&gt;[38]&lt;/a&gt;&lt;/sup&gt;, and red/black deployment models. Regarding the blue/green deployment, I personally thought the 2015 speech given by Andy Mui and Vlad Vlasceanu will be a good start&lt;sup&gt;&lt;a href="#ref32"&gt;32&lt;/a&gt;&lt;/sup&gt;. Its content delivered concise and informative information on what possible combinations there are to run through the blue/green deployment on the aspect of EC2 and ECS. Aside from some super helpful comparison, strategies at data level were also suggested, such as when a blue/gree deployment is about to be progressed, if data schema is also going to be changed, what corresponding methods can be implemented?  &lt;/p&gt;

&lt;p&gt;The red/back deployment and blue/green deployment can be regarded as the same deployment model. You could spend some time figuring out their mindset in back and then focus on the blue/green deployment. After all, in &lt;a href="https://www.cncf.io/wp-content/uploads/2020/08/CNCF-Presentation-Template-K8s-Deployment.pdf"&gt;a presentation file titled &lt;em&gt;Deployment Strategies on Kubernetes&lt;/em&gt;&lt;/a&gt; in the CNCF also equals the blue/green deployment and red/black deployment.&lt;/p&gt;

&lt;p&gt;On the aspect of computing, you could see AWS offers numerous selections. How to progress the blue/green deployment for EC2? How about the blue/green deployment via CFN for ECS&lt;sup&gt;&lt;a href="#ref39"&gt;[39]&lt;/a&gt;&lt;/sup&gt;? How to execute a canary deployment for pure Lambda&lt;sup&gt;&lt;a href="#ref33"&gt;[33]&lt;/a&gt;&lt;/sup&gt;? If there is a serverless service combined with Lambda and Amazon API Gateway, a newer version to be deployed is required while visiting the original API should be allowed, what needs to be configured in procedure?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9vuiFH8F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vvnkb64e956dz61furtm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9vuiFH8F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vvnkb64e956dz61furtm.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;em&gt;Blue/Green Deployments with Amazon Elastic Container Service&lt;sup&gt;&lt;a href="#ref16"&gt;[16]&lt;/a&gt;&lt;/sup&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS CloudFormation and AWS Serverless Applicaiton Model&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
You must manipulate CFN, by sorely viewing technical documentation, you might not be able to have quite solid grasp. In CFN, how do you refer to resources in nested stacks? When infrastructure becomes huge, is there any organizing practice that can be followed in terms of stack building? What are &lt;code&gt;cfn-init&lt;/code&gt;, &lt;code&gt;cfn-signal&lt;/code&gt;, &lt;code&gt;cfn-get-metadata&lt;/code&gt;, and &lt;code&gt;cfn-hup&lt;/code&gt; for? What resources support the &lt;code&gt;UpdatePolicy&lt;/code&gt; attribute? With &lt;code&gt;AWS::AutoScaling::AutoScalingGroup&lt;/code&gt;, what other more specific options are provided for managing ASG via CFN? Do you know that custom resources can invoke Lambda functions and AWS APIs? For example, &lt;a href="https://www.linkedin.com/pulse/cloudformation-lambda-backed-custom-resource-d%C3%ADaz-fern%C3%A1ndez/?articleId=6625782528299139073"&gt;making Lambda functions managed by CFN updatable, which are stored in a S3 bucket where versioning is open&lt;/a&gt;, &lt;a href="https://aws.amazon.com/tw/premiumsupport/knowledge-center/cloudformation-s3-notification-lambda/"&gt;configuring event notification to Lambda on an existing S3 bucket&lt;/a&gt; (right now, CDK already supports this scenario), &lt;a href="https://www.wellarchitectedlabs.com/well-architectedtool/300_labs/300_using_wat_with_cloudformation_and_custom_lambda/5_explore_wareview/"&gt;creating and updating AWS well-architected reviews&lt;/a&gt;,  &lt;a href="https://constructs.dev/packages/cdk-comprehend-s3olap/v/0.0.19?lang=typescript"&gt;making the ARN of a Lambda function deployed by &lt;code&gt;AWS::Serverless::Application&lt;/code&gt; visible to the following S3 Object Lambda deployment&lt;/a&gt;, etc. &lt;code&gt;WaitCondition&lt;/code&gt; in CFN can make signals without accessing the Internet&lt;sup&gt;&lt;a href="#ref30"&gt;[30]&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FSH5popG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ukeo6ruukv5f9rdu2dff.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FSH5popG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ukeo6ruukv5f9rdu2dff.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;em&gt;Best practices for organizing larger serverless applications&lt;sup&gt;&lt;a href="#ref12"&gt;12&lt;/a&gt;&lt;/sup&gt;&lt;/em&gt;  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS CodeCommit, AWS CodeBuild, AWS CodeDeploy, and AWS CodePipeline&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
Developers might agree with that git is a popular tool for version control and CodeCommit is a managed service of version control by AWS. To empower developers in a team to execute specific git commands towards a CodeCommit repository, what needs to be set related to permissions? If a Git repository is going to be migrated to CodeCommit, what steps are necessary? If an action in CodePipeline failed, what can be implemented to notify DevOps engineers or related developers? (Not through AWS Chatbot) In a CodePipeline pipeline combined with CodeBuild and CodeDeploy, if the insertion of code testing (function test, unit test, integration test, bra bra) is intended, what you can do to achieve the goal? In a CICD pipeline, what way is feasible to make applications conform to security regulations? How many kinds of events can be listened in CodePipeline? What servcies are used for listening? CodeDeploy can not only assist in deployment for AWS resources but also IDC machines. If we want to deploy to IDC machines via CodeDeploy, what are the prerequisites? How do you build a cross-account CD pipeline? If sensitive information will be accessed in a CICD pipeline, do you know that AWS Systems Manager Parameter Store and AWS Secrets Manager can be adopted pertaining to security concerns? &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C3GXVtya--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0x2htsdazhcuyr2d8udg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C3GXVtya--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0x2htsdazhcuyr2d8udg.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;em&gt;Figure in &lt;a href="https://aws.amazon.com/tw/blogs/devops/ci-cd-on-amazon-eks-using-aws-codecommit-aws-codepipeline-aws-codebuild-and-fluxcd/"&gt;CI/CD on Amazon EKS using AWS CodeCommit, AWS CodePipeline, AWS CodeBuild, and FluxCD&lt;/a&gt;&lt;/em&gt;  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#storage"&gt;
  &lt;/a&gt;
  Storage
&lt;/h2&gt;

&lt;p&gt;How many storage classes are there in S3? What are the differences among these classes? In what circumstances, you should select Intelligent Tiering? And in what situation One-Zone IA will be more suitable? What configuration you need to deal with so that the storage level of objects will be deleted and transitioned according to some time unit? What is ACL? How many kinds of pre-defined S3 ACLs are there? What is the bucket policy of an S3 bucket for? What is the application possibility on S3 object tags&lt;sup&gt;&lt;a href="#ref14"&gt;[14]&lt;/a&gt;&lt;/sup&gt;?&lt;/p&gt;

&lt;p&gt;Amazon RDS and AWS DynamoDB as the solutions for RDBS and NoSQL respectively, what criteria you might consider when it comes to selecting storage place for your data? NoSQL doesn't mean that there is no relation among data, also, it is not an invention to replace RDBS. About this topic, I suggest you could refer to the one-hour speech&lt;sup&gt;&lt;a href="#ref21"&gt;21&lt;/a&gt;&lt;/sup&gt; given by Rick Houlihan as AWS NoSQL Principal Technologist, you'll have a wonderful trip there.  &lt;/p&gt;

&lt;p&gt;What is the functionality of Amazon Aurora Global Database? What are Amazon DynamoDB Global Tables for? Either Auora or DynamoDB, how to do the Multi-AZ and Multi-region backups? What are GSI and LSI? Regarding RDS, for improving read or write throughput, you probably will consider utilizing Amazon ElastiCache, either Memcached or Redis. To achieve the same result, do you know there is a thing called DAX&lt;sup&gt;&lt;a href="#ref23"&gt;23&lt;/a&gt;&lt;/sup&gt;? If you still have time, go check RCU and WCU. If data in DynamoDB is intended to archive to S3 based on some time frequency, what services can be integrated to achieve this&lt;sup&gt;&lt;a href="#ref40"&gt;[40]&lt;/a&gt;&lt;/sup&gt;?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a3tE-9rK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7mv9ouira08a8tl1eqf6.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a3tE-9rK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7mv9ouira08a8tl1eqf6.jpeg" alt="Alt Text"&gt;&lt;/a&gt; Figure in &lt;a href="https://aws.amazon.com/tw/blogs/database/how-to-increase-performance-while-reducing-costs-by-using-amazon-dynamodb-accelerator-dax-and-aws-lambda/"&gt;Use Amazon DynamoDB Accelerator (DAX) from AWS Lambda to increase performance while reducing costs&lt;/a&gt;  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#log"&gt;
  &lt;/a&gt;
  Log
&lt;/h2&gt;

&lt;p&gt;What is the major difference between CloudTrail and CloudWatch? To reach real-time processing on CloudWatch logs, what you can do? Is there any difference between CloudWatch Events and EventBridge? For example, if you want to monitor cross-account launch failure on EC2 instances, what you should do? To record topic, timestamp, resource IP in SES to a log group in CloudWatch, what service can be adopted to achieve the goal? If analyzing log data is intended, is there any functionality in CloudWatch that can help me query? Is there any choice on storage location for logs?  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U8acR2ax--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3xsz47tbjealxlqcbb2b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U8acR2ax--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3xsz47tbjealxlqcbb2b.png" alt="Alt Text"&gt;&lt;/a&gt; Figure in &lt;a href="https://aws.amazon.com/tw/blogs/architecture/bbva-architecture-for-large-scale-macie-implementation/"&gt;BBVA: Architecture for Large-Scale Macie Implementation&lt;/a&gt;  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#high-availability-fault-tolerance-and-disaster-recover"&gt;
  &lt;/a&gt;
  High Availability, Fault Tolerance, and Disaster Recover
&lt;/h2&gt;

&lt;p&gt;With proper understanding on compute, networking, and storage services, you'll start to digest the concepts of high availability, failover, and disaster recovery (DR). About this field, I recommend &lt;em&gt;Reliability Pillar&lt;/em&gt; in the AWS Well-Architected series. It is a book which organizes the concepts pretty much well. At least you need to know how many levels are defined in terms of disaster recovery. What is the definitions of RTO and RPO? In the real world, the people you're discussing with might not understand what the backup &amp;amp; restore is or what the pilot light is. Yet, by talking with time unit, you still can roughly get what level the disaster recovery being discussed belongs to. &lt;/p&gt;

&lt;p&gt;About exam questions related to this field (DR), you will be in hell if you don't have solid grasp of the forementioned AWS services. You not only learn these services' functionalities, you gotta compare responding time on the aspects of backup and relaunch also. By going through this way, you'll be able to resonate in the content in &lt;em&gt;Reliability Pillar&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Take a brief example, There is a company which has infrastructure in three continents. The base is Europe, and Asia and the United States are extended areas. There are analysts in the three continents. They analyze log data via a web application. The data is stored in DynamoDB of Europe and ECS on Fargate with ALB and auto scaling serves their web application. Now, the analyst in Asia and the United States are complaining about slow response time and the speed of specific analysis is starting killing them. How can you modify the infrastructure architecture and then send the anaysts a sincere Bon-Jovi-have-a-nice-day smile?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tL--pp8J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8qr3wixzm2ff9d3fvkdl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tL--pp8J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8qr3wixzm2ff9d3fvkdl.png" alt="Alt Text"&gt;&lt;/a&gt; Figure in &lt;a href="https://aws.amazon.com/tw/blogs/architecture/implementing-multi-region-disaster-recovery-using-event-driven-architecture/"&gt;Implementing Multi-Region Disaster Recovery Using Event-Driven Architecture&lt;/a&gt;  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#others"&gt;
  &lt;/a&gt;
  Others
&lt;/h2&gt;

&lt;p&gt;I suggest you also need some understanding on Amazon ES and AWS Storage Gateway, i.e., what are their functionalities? How the architectures look like? You have to grasp thoses to some extent. AWS OpsWorks can be used to manage instance configuration. What two automation services is it based on? What is the difference among AWS OpsWorks Stacks, AWS OpsWorks for Chef Automate, and AWS OpsWorks for Puppet Enterprise? AWS OpsWorks and AWS Systems Automation can both be taken to execute automation tasks. What is the difference? Amazon Inspector can be helpful on security. What is its difference to Amazon GuardDuty? Except vulnerability assessment on AWS resources according to assessment rules, is there anything else that AWS Inspector can do&lt;sup&gt;&lt;a href="#ref19"&gt;[19]&lt;/a&gt;&lt;/sup&gt;? What does AWS Trusted Advisor do? What is its difference to AWS Config? Apart from that AWS Config rules can work in a single account, if the enablement of AWS Config rules across multiple accounts is required, what needs to be done? If specific actions are intended to be executed automatically after targets are discovered by AWS Config rules, what can be adopted to reach this kind of automation? What is Tag Editor for? What we can do via AWS RAM?  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gW0vyZ4k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4wyvr2dvkcvtoq4pvk13.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gW0vyZ4k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4wyvr2dvkcvtoq4pvk13.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;em&gt;Improve monitoring of AWS Systems Manager Agent&lt;sup&gt;&lt;a href="#ref26"&gt;[26]&lt;/a&gt;&lt;/sup&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rDG-OqYD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f996wd1e9nosx7f5hiwd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rDG-OqYD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f996wd1e9nosx7f5hiwd.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;em&gt;How to visualize multi-account Amazon Inspector findings with Amazon Elasticsearch Service&lt;sup&gt;&lt;a href="#ref37"&gt;[37]&lt;/a&gt;&lt;/sup&gt;&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#implementation-suggestions"&gt;
  &lt;/a&gt;
  Implementation Suggestions
&lt;/h1&gt;

&lt;p&gt;If possible, please get hands-on experience on all the AWS services mentioned above at least via the Web Console. Either they are simple examples (some of them I won't say it's easy, I prefer to take the term of classic to describe) organized by the documentations of AWS services or films on Youtube that were published by passionate developers, all of them are options that you can run through. Like ECS, a beginner example or an auto-scaling example both can be found on the Internet. Furthermore, if time permits, attempt to craft some application examples via CFN or CDK. From the AWS official documentations to &lt;a href="https://github.com/aws-samples"&gt;AWS Samples&lt;/a&gt; to AWS blogs, they all provide CFN templates that you could deploy quickly. Just make your hands dirty, with description on the technical documentations, the ride can reach the final for sure. Lastly, if you still can squeeze somte time by accident, go manipulate CDK to build some applications based on miscellaneous scenarios with any one of the services mentioned above. Following the suggestions, I believe on the road of pursuing DOP, you'll feel safe.  &lt;/p&gt;

&lt;p&gt;As of me, looking to the past, I had experience on the CICD in the IDC and the CICDs with pure AWS solutions. I implemented the latter one with CFN and CDK. I also once built the construct of &lt;a href="https://constructs.dev/packages/cdk-databrew-cicd/v/0.1.36?lang=typescript"&gt;CICD combining AWS Glue DataBrew&lt;/a&gt;. About the compute services, once built them via CFN and CDK also. A project where the front-end and back-end are split. A project with pure back-end. A project for &lt;a href="https://github.com/pahud/cdk-cloudfront-plus"&gt;CloudFront extensions&lt;/a&gt;. For example, like DNS record type that points to an ALB, the application and renewal of ACM certifications, etc. When reading new articles in the AWS blogs, I'll try as much as possible to manipulate their mindset via CFN, if there exist, and then ponder possible variation based on them. It's not that as easy as you might feel when reading through this article, yet it's very similar to leveling up in an online game. From lvl 80 to lvl 81, you just need 36,065,092 exactly that much. It's inescapable.&lt;br&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;In the DOP exam, it's included numerous condensed real scenarios (brief and comprehensive) to test whether you can act properly by given limitations or conditions and tackle the issues. Via grasping the essence of the AWS services and figuring out the solutions built by other developers, you'll be eventually capable of resolving problems swiftly when facing various and diverse of them.  &lt;/p&gt;

&lt;p&gt;About the DOP exam, normally, latest features won't come to you. In computing, such as Lambda container, Amazon ECS Anywhere, Amazon EKS Anywhere, Instance Refresh of EC2 Auto Scaling. In networking, like Amazon Route 53 Resolver DNS Firewall&lt;sup&gt;&lt;a href="#ref25"&gt;[25]&lt;/a&gt;&lt;/sup&gt;; Or like CFN modules&lt;sup&gt;&lt;a href="#ref17"&gt;[17]&lt;/a&gt;&lt;/sup&gt; and CFN registry. DOP usually tests your horizontal level and some will be deep (detail); about the k8s knowledge, you might consider the CKA, CKAD, and CKS created by the CNCF.&lt;/p&gt;

&lt;p&gt;Concerning the SDLC automation, its implementation might differ&lt;sup&gt;&lt;a href="#ref42"&gt;[42]&lt;/a&gt;&lt;/sup&gt; because of industries, enterprise culture, and so on. What DOP tests you mostly focuses on horizontal level and the AWS services. Like unit test, integration test, and static analysis, you won't see in this exam. Regarding their detail, readers can consider joining the &lt;a href="https://www.facebook.com/groups/817976138289434"&gt;DevOps Taiwan&lt;/a&gt; group on Facebook. In addition to annual party, merely watching conversations among DevOps experts may already give you lessons learned. (Of course, not only the forementioned tests will be discussed, trust me, you have a bumper harvest by participating). &lt;/p&gt;

&lt;p&gt;In the end, wanna share I took the exam on the Pearson VUE platform. There will be a proctor who watches you during the exam (shy shy &amp;gt;////&amp;lt;). The available languages are English and Japanese. I chose the English exam and an English proctor, strongly suggest you should bring your personal laptop. Actually, in the guidance of the online exam, it is also suggested that it's better to bring your own laptop. I didn't capture the information and took the company laptop to welcome the exam. And what happened is the anti-virus software in the company laptop didn't give the green light to the VUE online program for exams.&lt;/p&gt;

&lt;p&gt;It took me around one hour to negotiate with the proctor to wait for my colleague (the unit who manages the anti-virus software) coming to take a look but to no avail, the proctor cancelled the exam, and rushed back to my living place to take my personal laptop. The most impressive thing is I purchased the exam at 10:26 AM and chose one which starts at 10:30 AM. (Different proctor in the first exam and second exam). I spent around 2 hours going through 75 questions and checked those which were tagged by me previously in the rest of time. In the last 3 minutes, nothing I could do anymore and submitted my exam. Eventually, I got the ONE PIECE of DOP.&lt;/p&gt;

&lt;p&gt;If anyone who is thinking about taking the exam intends to choose the online way, PLEASE use your personal laptop. Trust me, you'll thank me. If you prefer testing centers, you probably need to evaluate the COVID-19 pandemic situation. By this channel, you also lose the flexibility of going through the exam 4 minutes later right after purchasing. However, you might benefit from the availability of physical little white board. If you'd learned something on taking the DOP exam from this sharing, this article would fulfill its mission. Good luck, fellows!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Day 2 is stasis. Followed by irrelevance. Followed by excruciating, painful decline. Followed by death. And that is why it is always Day 1. ‚Äî Jeff Bezos&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Contruct Hub, &lt;a href="https://constructs.dev/search?q=scott.hsieh&amp;amp;offset=0"&gt;https://constructs.dev/search?q=scott.hsieh&amp;amp;offset=0&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;AWS User Group Taiwan Online Meetup 2021-07, &lt;a href="https://youtu.be/HG8mQ32m970"&gt;https://youtu.be/HG8mQ32m970&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Genshin and the Revelation Online, along with watching bunches of K-dramas and western TV shows with Patrice. The last drama is Vocie 4.
&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Taipei Grand Trail, &lt;a href="https://gisweb.taipei.gov.tw/release/"&gt;https://gisweb.taipei.gov.tw/release/&lt;/a&gt;.
&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Kudzu, &lt;a href="https://wiki.guildwars2.com/wiki/Kudzu"&gt;https://wiki.guildwars2.com/wiki/Kudzu&lt;/a&gt;.
&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;AWS Certified DevOps Engineer ‚Äî Professional, &lt;a href="https://aws.amazon.com/certification/certified-devops-engineer-professional/?nc1=h_ls"&gt;https://aws.amazon.com/tw/certification/certified-devops-engineer-professional/&lt;/a&gt;.
&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;DOP exame guide, &lt;a href="https://d1.awsstatic.com/training-and-certification/docs-devops-pro/AWS-Certified-DevOps-Engineer-Professional_Exam-Guide.pdf"&gt;https://d1.awsstatic.com/training-and-certification/docs-devops-pro/AWS-Certified-DevOps-Engineer-Professional_Exam-Guide.pdf&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Amazon Web Services, Inc. or its affiliates., 2017. &lt;em&gt;Running Containerized Microservices on AWS&lt;/em&gt;. [ebook] Available at: &lt;a href="https://d1.awsstatic.com/whitepapers/DevOps/running-containerized-microservices-on-aws.pdf"&gt;https://d1.awsstatic.com/whitepapers/DevOps/running-containerized-microservices-on-aws.pdf&lt;/a&gt; [Accessed 25 July 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Amazon Web Services, Inc. or its affiliates., 2021. &lt;em&gt;Elastic Load Balancing features&lt;/em&gt;. [online] Amazon Web Services, Inc. Available at: &lt;a href="https://aws.amazon.com/elasticloadbalancing/features/"&gt;https://aws.amazon.com/elasticloadbalancing/features/&lt;/a&gt; [Accessed 7 August 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Amazon Web Services, Inc. or its affiliates, 2021. &lt;em&gt;Error retries and exponential backoff in AWS&lt;/em&gt;. [online] Docs.aws.amazon.com. Available at: &lt;a href="https://docs.aws.amazon.com/general/latest/gr/api-retries.html"&gt;https://docs.aws.amazon.com/general/latest/gr/api-retries.html&lt;/a&gt; [Accessed 31 July 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Ball, D. and Fallahi, K., 2020. &lt;em&gt;AWS CodeDeploy now supports linear and canary deployments for Amazon ECS&lt;/em&gt;. [online] Amazon Web Services. Available at: &lt;a href="https://aws.amazon.com/tw/blogs/containers/aws-codedeploy-now-supports-linear-and-canary-deployments-for-amazon-ecs/"&gt;https://aws.amazon.com/tw/blogs/containers/aws-codedeploy-now-supports-linear-and-canary-deployments-for-amazon-ecs/&lt;/a&gt; [Accessed 8 August 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Beswick, J., 2020. &lt;em&gt;Best practices for organizing larger serverless applications&lt;/em&gt;. [online] Amazon Web Services. Available at: &lt;a href="https://aws.amazon.com/tw/blogs/compute/best-practices-for-organizing-larger-serverless-applications/"&gt;https://aws.amazon.com/tw/blogs/compute/best-practices-for-organizing-larger-serverless-applications/&lt;/a&gt; [Accessed 8 August 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Bing√∂l, S., 2020. &lt;em&gt;Exam Readiness : AWS DevOps Engineer Professional (DOP-C01)&lt;/em&gt;. [online] Medium. Available at: &lt;a href="https://medium.com/aws-certified-user-group-turkey/exam-readiness-aws-devops-engineer-professional-dop-c01-975e22b3f98a"&gt;https://medium.com/aws-certified-user-group-turkey/exam-readiness-aws-devops-engineer-professional-dop-c01-975e22b3f98a&lt;/a&gt; [Accessed 7 August 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Bhattacharya, S., Benjamin, G. and Natarajan, V., 2021. &lt;em&gt;Simplify your data lifecycle by using object tags with Amazon S3 Lifecycle&lt;/em&gt;. [online] Amazon Web Services. Available at: &lt;a href="https://aws.amazon.com/blogs/storage/simplify-your-data-lifecycle-by-using-object-tags-with-amazon-s3-lifecycle/"&gt;https://aws.amazon.com/blogs/storage/simplify-your-data-lifecycle-by-using-object-tags-with-amazon-s3-lifecycle/&lt;/a&gt; [Accessed 8 August 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Chapman, C., 2020. &lt;em&gt;Creating a secure DevOps pipeline for AWS Service Catalog&lt;/em&gt;. [online] Amazon Web Services. Available at: &lt;a href="https://aws.amazon.com/blogs/mt/creating-a-secure-devops-pipeline-for-aws-service-catalog/"&gt;https://aws.amazon.com/blogs/mt/creating-a-secure-devops-pipeline-for-aws-service-catalog/&lt;/a&gt; [Accessed 8 August 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Cowan, J., Sharma, A. and Dalbhanjan, P., 2017. &lt;em&gt;Blue/Green Deployments with Amazon Elastic Container Service&lt;/em&gt;. [online] Amazon Web Services. Available at: &lt;a href="https://aws.amazon.com/tw/blogs/compute/bluegreen-deployments-with-amazon-ecs/"&gt;https://aws.amazon.com/tw/blogs/compute/bluegreen-deployments-with-amazon-ecs/&lt;/a&gt; [Accessed 18 July 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;DeJong, K., 2020. &lt;em&gt;Introducing AWS CloudFormation modules&lt;/em&gt;. [online] Amazon Web Services. Available at: &lt;a href="https://aws.amazon.com/blogs/mt/introducing-aws-cloudformation-modules/"&gt;https://aws.amazon.com/blogs/mt/introducing-aws-cloudformation-modules/&lt;/a&gt; [Accessed 28 July 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Docker Inc., 2021. &lt;em&gt;Configure logging drivers&lt;/em&gt;. [online] Docker Documentation. Available at: &lt;a href="https://docs.docker.com/config/containers/logging/configure/"&gt;https://docs.docker.com/config/containers/logging/configure/&lt;/a&gt; [Accessed 31 July 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Dodge, C. and Quigg, S., 2018. &lt;em&gt;A simpler way to assess the network exposure of EC2 instances: AWS releases new network reachability assessments in Amazon Inspector&lt;/em&gt;. [online] Amazon Web Services. Available at: &lt;a href="https://aws.amazon.com/blogs/security/amazon-inspector-assess-network-exposure-ec2-instances-aws-network-reachability-assessments/"&gt;https://aws.amazon.com/blogs/security/amazon-inspector-assess-network-exposure-ec2-instances-aws-network-reachability-assessments/&lt;/a&gt; [Accessed 1 August 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Hochstein, L., Prytoegrian, Siqueira, D., Basgall, S., Smith, S., Harvey, A. and Berry, C., 2016. &lt;em&gt;Netflix/chaosmonkey: Chaos Monkey is a resiliency tool that helps applications tolerate random instance failures&lt;/em&gt;. [online] GitHub. Available at: &lt;a href="https://github.com/netflix/chaosmonkey"&gt;https://github.com/netflix/chaosmonkey&lt;/a&gt; [Accessed 31 July 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Houlihan, R., 2018. &lt;em&gt;Amazon DynamoDB Deep Dive: Advanced Design Patterns for DynamoDB (DAT401)&lt;/em&gt;. [video] Available at: &lt;a href="https://youtu.be/HaEPXoXVf2k"&gt;https://youtu.be/HaEPXoXVf2k&lt;/a&gt; [Accessed 8 August 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Jayendra‚Äôs Cloud Certification Blog. 2021. &lt;em&gt;AWS Certified DevOps Engineer ‚Äî Professional (DOP-C01) Exam Learning Path&lt;/em&gt;. [online] Available at: &lt;a href="https://jayendrapatil.com/aws-certified-devops-engineer-professional-exam-learning-path/"&gt;https://jayendrapatil.com/aws-certified-devops-engineer-professional-exam-learning-path/&lt;/a&gt; [Accessed 24 May 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Idziorek, J., 2017. &lt;em&gt;Amazon DynamoDB Accelerator (DAX): A Read-Through/Write-Through Cache for DynamoDB&lt;/em&gt;. [online] Amazon Web Services. Available at: &lt;a href="https://aws.amazon.com/blogs/database/amazon-dynamodb-accelerator-dax-a-read-throughwrite-through-cache-for-dynamodb/"&gt;https://aws.amazon.com/blogs/database/amazon-dynamodb-accelerator-dax-a-read-throughwrite-through-cache-for-dynamodb/&lt;/a&gt; [Accessed 8 August 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Intellipaat, 2019. &lt;em&gt;Puppet Tutorial for Beginners | Puppet Tutorial | Intellipaat&lt;/em&gt;. [video] Available at: &lt;a href="https://www.youtube.com/watch?v=kHD4KQKKP5Y"&gt;https://www.youtube.com/watch?v=kHD4KQKKP5Y&lt;/a&gt; [Accessed 3 August 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Ismail, M. and Bentzen, M., 2021. &lt;em&gt;Secure your Amazon VPC DNS resolution with Amazon Route 53 Resolver DNS Firewall&lt;/em&gt;. [online] Amazon Web Services. Available at: &lt;a href="https://aws.amazon.com/blogs/networking-and-content-delivery/secure-your-amazon-vpc-dns-resolution-with-amazon-route-53-resolver-dns-firewall/"&gt;https://aws.amazon.com/blogs/networking-and-content-delivery/secure-your-amazon-vpc-dns-resolution-with-amazon-route-53-resolver-dns-firewall/&lt;/a&gt; [Accessed 7 August 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Lempka, R., 2021. &lt;em&gt;Improve monitoring of AWS Systems Manager Agent&lt;/em&gt;. [online] Amazon Web Services. Available at: &lt;a href="https://aws.amazon.com/blogs/mt/improve-monitoring-of-aws-systems-manager-agent/"&gt;https://aws.amazon.com/blogs/mt/improve-monitoring-of-aws-systems-manager-agent/&lt;/a&gt; [Accessed 7 August 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Lewis, J. and Fowler, M., 2014. &lt;em&gt;Microservices&lt;/em&gt;. [online] martinfowler.com. Available at: &lt;a href="https://martinfowler.com/articles/microservices.html"&gt;https://martinfowler.com/articles/microservices.html&lt;/a&gt; [Accessed 31 July 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Liu, F., 2021. &lt;em&gt;Model serving in Java with AWS Elastic Beanstalk made easy with Deep Java Library&lt;/em&gt;. [online] Amazon Web Services. Available at: &lt;a href="https://aws.amazon.com/tw/blogs/machine-learning/model-serving-in-java-with-aws-elastic-beanstalk-made-easy-with-deep-java-library/"&gt;https://aws.amazon.com/tw/blogs/machine-learning/model-serving-in-java-with-aws-elastic-beanstalk-made-easy-with-deep-java-library/&lt;/a&gt; [Accessed 2 August 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Malhotra, S. and Mathur, R., 2020. &lt;em&gt;How to get notified on specific Lambda function error patterns using CloudWatch&lt;/em&gt;. [online] Amazon Web Services. Available at: &lt;a href="https://aws.amazon.com/blogs/mt/get-notified-specific-lambda-function-error-patterns-using-cloudwatch/"&gt;https://aws.amazon.com/blogs/mt/get-notified-specific-lambda-function-error-patterns-using-cloudwatch/&lt;/a&gt; [Accessed 9 August 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Meyer, C., 2018. &lt;em&gt;Signaling AWS CloudFormation WaitConditions using AWS PrivateLink&lt;/em&gt;. [online] Amazon Web Services. Available at: &lt;a href="https://aws.amazon.com/blogs/mt/signaling-aws-cloudformation-waitconditions-using-aws-privatelink/"&gt;https://aws.amazon.com/blogs/mt/signaling-aws-cloudformation-waitconditions-using-aws-privatelink/&lt;/a&gt; [Accessed 31 July 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Miguelez, B. and Chapman, C., 2020. &lt;em&gt;Standardizing CI/CD pipelines for .NET web applications with AWS Service Catalog&lt;/em&gt;. [online] Amazon Web Services. Available at: &lt;a href="https://aws.amazon.com/tw/blogs/devops/standardizing-cicd-pipelines-net-web-applications-aws-service-catalog/"&gt;https://aws.amazon.com/tw/blogs/devops/standardizing-cicd-pipelines-net-web-applications-aws-service-catalog/&lt;/a&gt; [Accessed 3 August 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Mui, A. and Vlasceanu, V., 2015. (DVO401) &lt;em&gt;Deep Dive into Blue/Green Deployments on AWS&lt;/em&gt;. [video] Available at: &lt;a href="https://youtu.be/aX54mhZbN58"&gt;https://youtu.be/aX54mhZbN58&lt;/a&gt; [Accessed 17 July 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Munns, C., 2017. &lt;em&gt;Implementing Canary Deployments of AWS Lambda Functions with Alias Traffic Shifting&lt;/em&gt;. [online] Amazon Web Services. Available at: &lt;a href="https://aws.amazon.com/tw/blogs/compute/implementing-canary-deployments-of-aws-lambda-functions-with-alias-traffic-shifting/"&gt;https://aws.amazon.com/tw/blogs/compute/implementing-canary-deployments-of-aws-lambda-functions-with-alias-traffic-shifting/&lt;/a&gt; [Accessed 5 August 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Peven, B., 2020. &lt;em&gt;Introducing Instance Refresh for EC2 Auto Scaling&lt;/em&gt;. [online] Amazon Web Services. Available at: &lt;a href="https://aws.amazon.com/blogs/compute/introducing-instance-refresh-for-ec2-auto-scaling/"&gt;https://aws.amazon.com/blogs/compute/introducing-instance-refresh-for-ec2-auto-scaling/&lt;/a&gt; [Accessed 31 July 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Rakesh Singh, 2021. &lt;em&gt;Blue/Green deployment with AWS Developer tools on Amazon EC2 using Amazon EFS to host application source code&lt;/em&gt;. [online] Amazon Web Services. Available at: &lt;a href="https://aws.amazon.com/blogs/devops/blue-green-deployment-with-aws-developer-tools-on-amazon-ec2-using-amazon-efs-to-host-application-source-code/"&gt;https://aws.amazon.com/blogs/devops/blue-green-deployment-with-aws-developer-tools-on-amazon-ec2-using-amazon-efs-to-host-application-source-code/&lt;/a&gt; [Accessed 7 August 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Rathore, A., 2020. &lt;em&gt;AWS Networking ‚Äî ENI, ENA &amp;amp; EFA&lt;/em&gt;. [online] Medium. Available at: &lt;a href="https://medium.com/nerd-for-tech/aws-networking-eni-ena-efa-2db316fdbf85"&gt;https://medium.com/nerd-for-tech/aws-networking-eni-ena-efa-2db316fdbf85&lt;/a&gt; [Accessed 6 August 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Saha, M., 2020. &lt;em&gt;How to visualize multi-account Amazon Inspector findings with Amazon Elasticsearch Service&lt;/em&gt;. [online] Amazon Web Services. Available at: &lt;a href="https://aws.amazon.com/blogs/security/how-to-visualize-multi-account-amazon-inspector-findings-with-amazon-elasticsearch-service/"&gt;https://aws.amazon.com/blogs/security/how-to-visualize-multi-account-amazon-inspector-findings-with-amazon-elasticsearch-service/&lt;/a&gt; [Accessed 1 August 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Sato, D., 2014. &lt;em&gt;bliki: CanaryRelease&lt;/em&gt;. [online] martinfowler.com. Available at: &lt;a href="https://martinfowler.com/bliki/CanaryRelease.html"&gt;https://martinfowler.com/bliki/CanaryRelease.html&lt;/a&gt; [Accessed 31 July 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Sharma, A., Cowan, J., Sosiak, Y., Dalbhanjan, P. and Siri, J., 2017. &lt;em&gt;Reference architecture for doing blue green deployments on ECS&lt;/em&gt;. [online] GitHub. Available at: &lt;a href="https://github.com/aws-samples/ecs-blue-green-deployment"&gt;https://github.com/aws-samples/ecs-blue-green-deployment&lt;/a&gt; [Accessed 31 July 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Wagner, A., 2017. &lt;em&gt;Automatically Archive Items to S3 Using DynamoDB Time to Live (TTL) with AWS Lambda and Amazon Kinesis Firehose&lt;/em&gt;. [online] Amazon Web Services. Available at: &lt;a href="https://aws.amazon.com/tw/blogs/database/automatically-archive-items-to-s3-using-dynamodb-time-to-live-with-aws-lambda-and-amazon-kinesis-firehose/"&gt;https://aws.amazon.com/tw/blogs/database/automatically-archive-items-to-s3-using-dynamodb-time-to-live-with-aws-lambda-and-amazon-kinesis-firehose/&lt;/a&gt; [Accessed 8 August 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;White, E., Horsfield, S. and Sethi, A., 2021. &lt;em&gt;Introducing Native Support for Predictive Scaling with Amazon EC2 Auto Scaling&lt;/em&gt;. [online] Amazon Web Services. Available at: &lt;a href="https://aws.amazon.com/blogs/compute/introducing-native-support-for-predictive-scaling-with-amazon-ec2-auto-scaling/"&gt;https://aws.amazon.com/blogs/compute/introducing-native-support-for-predictive-scaling-with-amazon-ec2-auto-scaling/&lt;/a&gt; [Accessed 8 August 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Wikipedia, 2021. &lt;em&gt;Conway‚Äôs law&lt;/em&gt;. [online] En.wikipedia.org. Available at: &lt;a href="https://en.wikipedia.org/wiki/Conway's_law"&gt;https://en.wikipedia.org/wiki/Conway's_law&lt;/a&gt; [Accessed 31 July 2021].&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;&lt;/a&gt;Wiggins, A., 2017. &lt;em&gt;The Twelve-Factor App&lt;/em&gt;. [online] 12factor.net. Available at: &lt;a href="https://12factor.net/"&gt;https://12factor.net/&lt;/a&gt; [Accessed 31 July 2021].&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>aws</category>
      <category>devops</category>
      <category>career</category>
      <category>certifications</category>
    </item>
    <item>
      <title>Very Beginner Level Version Controlling With Git</title>
      <author>5hfT</author>
      <pubDate>Sun, 03 Oct 2021 03:12:59 +0000</pubDate>
      <link>https://dev.to/mh_shifat/very-beginner-level-version-controlling-with-git-27pj</link>
      <guid>https://dev.to/mh_shifat/very-beginner-level-version-controlling-with-git-27pj</guid>
      <description>&lt;h3&gt;
  &lt;a href="#basic-commands"&gt;
  &lt;/a&gt;
  Basic commands
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;init repository : &lt;code&gt;git init&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;add a file : &lt;code&gt;git add filename&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;add all files : &lt;code&gt;git add .&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;commit : &lt;code&gt;git commit -m "commit message"&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;check status which files you have added/deleted/modified : &lt;code&gt;git status&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;push code : &lt;code&gt;git push origin branch_name&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#full-examples"&gt;
  &lt;/a&gt;
  Full Examples
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#create-a-new-repository"&gt;
  &lt;/a&gt;
  Create a new repository
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Create a repository : Create an empty repository in &lt;a href="https://github.com/"&gt;github&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then open git bash/terminal in your local pc&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;init project : &lt;code&gt;git init&lt;/code&gt; (initializing our repository)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example, let's add something into our repo. Let's add a file named README.md. You can create a file using your GUI(Graphical User Interface). In FileManager, right click on mouse and file or folder creation options will be popped up. Or you can use your shell/bash terminal to create the file.&lt;/p&gt;

&lt;p&gt;As i'm a linux user and taking flex in front of you, I will create the file using my oh-my-zsh(a bash terminal).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;create a file in bash : &lt;code&gt;touch README.md&lt;/code&gt; (this will create a empty file named README.md in the directory you are in now, you can check current directory using &lt;code&gt;pwd&lt;/code&gt; in terminal). You can add some content in it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now we have created a file and we want to add it into our repository. It does exist in our local pc not in github server yet[check if you don't believe me :)].&lt;br&gt;
To upload it we need to follow some stuffs -&amp;gt; ['add','commit','push'].Let's do it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add the file in git : &lt;code&gt;git add README.md&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are curious enough and lazy :D then you must be thinking of 'adding 100 files/folder will fuck our hand and mind!'. Actually we can add all files or files with same extension or file starting or ending with same substring and so on!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add all files in the current dir : &lt;code&gt;git add .&lt;/code&gt; (a dot can save your life :3)&lt;/li&gt;
&lt;li&gt;Commit changes : &lt;code&gt;git commit -m "short but meaningful commit message" -m "description can be added but its optional"&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;According to my previous statement, we need to push the commit but there is a small thing we need to do as we want to connect our local repo with e github server repository we have created at first. So we need to make a link/connection for the first time. Before that we will change/move/rename the branch name. If your are in a terminal you may be notice that the default branch is master now.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GDw61wLw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7wvnk86lbls0omskr4ke.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GDw61wLw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7wvnk86lbls0omskr4ke.png" alt="bash-master"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the screenshot you can see some colorful text.Forgot about the first text &lt;code&gt;(base)&lt;/code&gt; its a different stuff to describe (not related to git). After (base) next things are &lt;code&gt;username@pc_name&amp;gt;working_directory&amp;gt;git_branch_name&lt;/code&gt; accordingly.&lt;br&gt;
We here my branch name is &lt;code&gt;master&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We will change the default branch name to &lt;code&gt;main&lt;/code&gt; according to github's preference.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;rename branch : &lt;code&gt;git branch -M main&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let me describe what we have done here. We just have changed the branch name from master to main. We could have used &lt;code&gt;git branch -m main&lt;/code&gt; but there is a little differences between &lt;code&gt;-m&lt;/code&gt; and &lt;code&gt;-M&lt;/code&gt;. Actually &lt;code&gt;-m&lt;/code&gt; define the changing but there can be a scenario where the branch name &lt;code&gt;main&lt;/code&gt; already exist where we had to force git to change branch name. &lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--force&lt;/code&gt; is used to do something forcefully. &lt;code&gt;-M&lt;/code&gt; is actually a short form of &lt;code&gt;-m -f&lt;/code&gt; here. We will learn a lot about branch command later.&lt;/p&gt;

&lt;p&gt;Now we need to link our local repo with github server somehow !&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git remote add origin https://github.com/your_username/github_repository_name&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;by this command we are creating a origin / we are adding a location of our remote repository where we will push our file or pull files from.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;push code to github : &lt;code&gt;git push origin main&lt;/code&gt; (as our branch name is main)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#working-on-a-repository"&gt;
  &lt;/a&gt;
  Working on a repository
&lt;/h4&gt;

&lt;p&gt;Scenario is we have a repository and we want to contribute in that open source project.&lt;/p&gt;

&lt;p&gt;Link of the repository : &lt;a href="https://github.com/jspw/git-101"&gt;git-101&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First of all we need to clone the repository : &lt;code&gt;git clone https://github.com/jspw/git-101.git&lt;/code&gt; (this will create a folder named git-101 and copy the repository)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If we wish to copy the repo into a folder as our wish, then we can just add the folder name at the end of the command like this &lt;code&gt;git clone repo_url dir_name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now we have cloned the repo and we can add changes as our wish (not exactly your wish though :3).&lt;/p&gt;

&lt;p&gt;Lets assume we have added a file named contributor.md and other files as well. Now we need to add the files or directories.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;add all files : &lt;code&gt;git add .&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;commit changes : &lt;code&gt;git commit -m 'add contributor file'&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;push code : &lt;code&gt;git push origin main&lt;/code&gt; (this is a very beginner level tutorial, actually we never push code into main directly, we will lean this things later)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note :&lt;/strong&gt; I will write intermediate level git commands and uses later. &lt;br&gt;
Follow &lt;a href="https://github.com/jspw/git-101"&gt;git-101&lt;/a&gt; to get update.&lt;/p&gt;

</description>
      <category>github</category>
      <category>git</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>A "Brief" History of the Web Part 3</title>
      <author>Nicholas Mendez</author>
      <pubDate>Sun, 03 Oct 2021 01:53:38 +0000</pubDate>
      <link>https://dev.to/snickdx/a-brief-history-of-the-web-part-3-3k3d</link>
      <guid>https://dev.to/snickdx/a-brief-history-of-the-web-part-3-3k3d</guid>
      <description>&lt;p&gt;It was 2006, AJAX was being widely adopted to build dynamic web experiences. As web apps become more complex, there was a need to make building them simpler. Thus the dawn of the framework wars began.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-first-generation"&gt;
  &lt;/a&gt;
  The First Generation
&lt;/h1&gt;

&lt;p&gt;I can't talk about the first frameworks/libraries without mentioning &lt;a href="https://jquery.com/"&gt;jquery&lt;/a&gt; of course. In this wave, libraries mainly focused providing some UI widgets, DOM manipulation, and AJAX. &lt;a href="https://en.wikipedia.org/wiki/Dojo_Toolkit"&gt;Dojo Toolkit&lt;/a&gt; appears to be the first framework ever released in 2004. jQuery was released in 2006, along with &lt;a href="https://en.wikipedia.org/wiki/MooTools"&gt;mootools&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/YUI_Library"&gt;yui&lt;/a&gt;. However, that fact that you probably only recognized jQuery is testament to its domination.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-second-generation"&gt;
  &lt;/a&gt;
  The Second Generation
&lt;/h1&gt;

&lt;p&gt;In 2009 JavaScript was updated to EcmaScript Version 5, with growing platform capabilities and user expectations a second wave of frameworks began. Frameworks likes Angular in 2009, Backbone JS in 2010, Ember and Meteor in 2011. Two-way data-binding and templating were the features you would typically see in these frameworks. React was released in 2013 and two promising frameworks called Vue and Polymer were released in 2014. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yeWXqwWI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmw9jhvhfupafllahsc0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yeWXqwWI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmw9jhvhfupafllahsc0.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/michaellnorth/status/720030263905005568/photo/1"&gt;Image Credit&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In terms of back-end, and interesting development happened in 2009. &lt;a href="https://en.wikipedia.org/wiki/Node.js"&gt;Nodejs&lt;/a&gt; was released as the first server side runtime for JavaScript. Now you can write your sever-side scripts and your client side code in JavaScript!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-third-generation"&gt;
  &lt;/a&gt;
  The Third Generation
&lt;/h1&gt;

&lt;p&gt;EcmaScript version 6 was released in 2015, this brought many quality of life improvements like arrow functions, template literals, let &amp;amp; const, promises and the fetch API. &lt;/p&gt;

&lt;p&gt;In this generation much attention was paid to state management, building UI components an optimizing their rendering with concepts like virtual DOM in the case of react. In 2015 Ember had a major update and in 2016 Angular JS was 'rebooted' to Angular &lt;a href="https://jaxenter.com/angular-2-0-announcement-backfires-112127.html"&gt;much to the dismay of many dev teams&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Iu8lRyr2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/reiamfs7fa2ll39dwpts.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Iu8lRyr2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/reiamfs7fa2ll39dwpts.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;One may argue that the framework fatigue really &lt;a href="https://www.breck-mckye.com/blog/2014/12/the-state-of-javascript-in-2015/"&gt;began to be felt here&lt;/a&gt;. Many developers were overwhelmed at the amount of diversity and the fear having to relearn a new framework ever so often was real. &lt;/p&gt;

&lt;p&gt;In 2016 interest in React surpassed Angular and Vue's popularity saw steady growth. Popularity in &lt;a href="http://aurelia.io/"&gt;Aurelia&lt;/a&gt; was also on the rise. By 2017 Angular took a clear 3rd place behind Vue and React at the top.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;While there are still new frameworks appearing many took solace that things seem to have settled down at the top. In the next post we shall catch up to the web today.&lt;/p&gt;

&lt;p&gt;Have you been in dev during these years? Perhaps you have been burned by the Angular Upgrade? Did you use Redux with React? Please share!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.logrocket.com/history-of-frontend-frameworks/"&gt;History of Front-End Frameworks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.breck-mckye.com/blog/2014/12/the-state-of-javascript-in-2015/"&gt;The State of JavaScript 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://2016.stateofjs.com/"&gt;The State of JavaScript 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://2017.stateofjs.com/"&gt;The State of JavaScript 2017&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>codenewbie</category>
      <category>javascript</category>
      <category>node</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Recipe of healthy life for programmers</title>
      <author>poudyal_rabin</author>
      <pubDate>Sun, 03 Oct 2021 01:06:05 +0000</pubDate>
      <link>https://dev.to/poudyal_rabin/recipe-of-healthy-life-for-programmers-4h0n</link>
      <guid>https://dev.to/poudyal_rabin/recipe-of-healthy-life-for-programmers-4h0n</guid>
      <description>&lt;p&gt;Being healthy should be the first and foremost goal of any human being. As a programmer, it is even more crucial. Keep aside all of those tasks like building a hobby app, learning new technology, and all. If you are not healthy at all, nothing is going to matter. If you don't have time to invest in your health now, be prepared to waste a huge amount of time and money in the hospital in near future.&lt;/p&gt;

&lt;p&gt;I am also still developing this habit of following a healthy lifestyle. After eating frequently in restaurants and processed foods, I feel like lot of money is being invested in making myself unhealthy. It is quite hard to cut yourself away from the processed foods but you can still try to minimize as much you can. Sometimes during hangouts or parties we consume some food that are really unhealthy for our body and brain. There are few solutions I generally recommend programmers or any professional who work from home to follow. Here are some of the tips I find are useful for me and hope it will be useful for someone else:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;(30mins-1hr) long workout,&lt;/li&gt;
&lt;li&gt;Try something like yoga,&lt;/li&gt;
&lt;li&gt;Practice gratitude (for mental health),&lt;/li&gt;
&lt;li&gt;Cut off negative people,&lt;/li&gt;
&lt;li&gt;Work in chunks - 60mins followed by 10-15min break (but don't use social media on those breaks),&lt;/li&gt;
&lt;li&gt;6 days healthy food,&lt;/li&gt;
&lt;li&gt;Intermittent fasting,&lt;/li&gt;
&lt;li&gt;Drink enough water,&lt;/li&gt;
&lt;li&gt;Protective glasses for screen,&lt;/li&gt;
&lt;li&gt;Some push ups after long time sitting in chair,&lt;/li&gt;
&lt;li&gt;Some back exercises to prevent back pain,&lt;/li&gt;
&lt;li&gt;To avoid burnout you can try something that is different from what you generally do for example learning music,&lt;/li&gt;
&lt;li&gt;Try to cut off sugar if you can,&lt;/li&gt;
&lt;li&gt;Avoid screen 1hr before going to bed,&lt;/li&gt;
&lt;li&gt;No phone after waking up (you can use if after you are done working for sometime on the most important goal of your life)&lt;/li&gt;
&lt;li&gt;Do something quick and easy in the morning to keep you motivated&lt;/li&gt;
&lt;li&gt;Practice katas everyday. It can be programming kata, guitar kata or anything to be more dexterous. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There must be more than these that I would love you hear from you guys. Let me know what you do to keep yourself healthy and motivated. Thanks for reading this post. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>productivity</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Re-rendering in React</title>
      <author>NRF</author>
      <pubDate>Sat, 02 Oct 2021 23:15:06 +0000</pubDate>
      <link>https://dev.to/nrf/re-rendering-in-react-4b55</link>
      <guid>https://dev.to/nrf/re-rendering-in-react-4b55</guid>
      <description>&lt;p&gt;I recently saw the following tweet from &lt;a href="https://www.twitter.com/_georgemoller"&gt;@_georgemoller&lt;/a&gt; which posed an interesting question related to component re-rendering in React:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1dvOINXT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FAiLIt7WQAAM5NT.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--K0o6ch8F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1409915212157833223/OX8dfCpn_normal.jpg" alt="George Moller profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        George Moller
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @_georgemoller
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      ‚ùìReact interview question.&lt;br&gt;&lt;br&gt;When incrementing the count, &amp;lt;SomeComponent /&amp;gt;:&lt;br&gt;&lt;br&gt;a. Will re-render each time&lt;br&gt;b. Won't re-render at all because it doesn't consume the count variable 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      12:41 PM - 30 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1443556666792988672" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1443556666792988672" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1443556666792988672" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;The problem is interesting because, while &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt; is a child component of &lt;code&gt;&amp;lt;App /&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt; does not depend on &lt;code&gt;count&lt;/code&gt; in any way. It does not receive &lt;code&gt;count&lt;/code&gt; as a prop (in fact, &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt; doesn't receive any props) and, as a result, is not affected by &lt;code&gt;count&lt;/code&gt;'s change in value.&lt;/p&gt;

&lt;p&gt;So will &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt; be re-rendered every time the value of &lt;code&gt;count&lt;/code&gt; is updated?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#testing-environment"&gt;
  &lt;/a&gt;
  Testing environment
&lt;/h2&gt;

&lt;p&gt;For testing, I simply created a new project using &lt;code&gt;create-react-app&lt;/code&gt;. After that I proceeded to delete all the extra stuff not needed for this exercise and put the code in &lt;code&gt;App.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;App.js&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nyJrHwVO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kw3zoj3csejeufycabev.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nyJrHwVO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kw3zoj3csejeufycabev.png" alt="code_1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FliL293A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vmqih1lbe7j3ejgdoxzh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FliL293A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vmqih1lbe7j3ejgdoxzh.png" alt="output_1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#verifying-a-rerender"&gt;
  &lt;/a&gt;
  Verifying a re-render
&lt;/h2&gt;

&lt;p&gt;To get to our answer we need a way to verify whether a component was re-rendered or not. The easiest way to do this would be to use the &lt;strong&gt;React Developer Tools&lt;/strong&gt;. These developer tools are available for all major browsers as an extension (except Safari I think).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;After installing the developer tools, right-click anywhere on the page and click &lt;strong&gt;Inspect&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9KW3vb3H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7fhwl1bpamdudbic39v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9KW3vb3H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7fhwl1bpamdudbic39v.png" alt="step_1_1"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Look for &lt;strong&gt;Components&lt;/strong&gt; and open it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oZyzgcEV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lkpypokpqjravml8c2qr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oZyzgcEV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lkpypokpqjravml8c2qr.png" alt="step_1_2"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;This tool shows us all the components in our React application and their relation to each other (children are indented under their parent component). Clicking on a component shows more detail like the values of its state and props.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Click on the settings icon and enable the setting called &lt;em&gt;Highlight updates when components render&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QCkXnNMg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w79dlquvclc4ey0onqdc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QCkXnNMg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w79dlquvclc4ey0onqdc.png" alt="step_1_3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8lc7j9Gd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r2c9o5qkwimy449p4d0o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8lc7j9Gd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r2c9o5qkwimy449p4d0o.png" alt="step_1_4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As the name suggests, enabling this setting means that any component that is rendered/re-rendered will be highlighted.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#time-to-test"&gt;
  &lt;/a&gt;
  Time to test
&lt;/h3&gt;

&lt;p&gt;This is it. Time to press the button. If &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt; is highlighted, it means that &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt; is being re-rendered every time &lt;code&gt;count&lt;/code&gt; is being updated.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LiZCtljb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qh6tdx906le7ms0b5uca.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LiZCtljb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qh6tdx906le7ms0b5uca.gif" alt="step_1_5"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Interesting! Not only &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt; is re-rendered every time the state changes but the text displaying &lt;code&gt;count&lt;/code&gt;'s value and and the &lt;code&gt;&amp;lt;button /&amp;gt;&lt;/code&gt; are also re-rendered.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Every time the state of a component changes, that component and all of its children are re-rendered.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Just to drive this point home, and emphasize the fact that it does not matter where the value of &lt;code&gt;count&lt;/code&gt; is actually displayed, let's consider some additional scenarios.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scenario1"&gt;
  &lt;/a&gt;
  Scenario-1
&lt;/h2&gt;

&lt;p&gt;In this scenario, we will pass the value of count to &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt; and display it from within &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt;. If &lt;code&gt;count&lt;/code&gt; is then updated, the only changing entity is being displayed from within &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;App.js&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w5BzdPxF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pwfbhh8mp4uu5r5x47xi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w5BzdPxF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pwfbhh8mp4uu5r5x47xi.png" alt="code_2"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;I had to introduce a couple of &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags just to keep everything neat.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5bKOXEuf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uz2ipzkc8wqm736wan08.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5bKOXEuf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uz2ipzkc8wqm736wan08.png" alt="step_2_1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, practically speaking, the only thing updating the display every time the increment button is pressed is inside &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt; on line 20. So how will React handle the re-render?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Szx39AZD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/spwn7n5x778pgyjxkh3w.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Szx39AZD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/spwn7n5x778pgyjxkh3w.gif" alt="step_2_2"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Once again all components are being re-rendered. We basically have two child components of &lt;code&gt;&amp;lt;App /&amp;gt;&lt;/code&gt; (&lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;button /&amp;gt;&lt;/code&gt;) and both of them are clearly being re-rendered. This reinforces the point that:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Every time the state of a component changes, that component and all of its children are re-rendered.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since the state of &lt;code&gt;count&lt;/code&gt; belongs to &lt;code&gt;&amp;lt;App /&amp;gt;&lt;/code&gt;, every time &lt;code&gt;count&lt;/code&gt; changes, &lt;code&gt;&amp;lt;App /&amp;gt;&lt;/code&gt; and all of its child components are re-rendered (and the children of those child components as well; I hope that was clear!).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kcEwpQhB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2pgujmweh50epzy0p0nr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kcEwpQhB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2pgujmweh50epzy0p0nr.png" alt="react_render_propagation"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;This brings us to the second scenario.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scenario2"&gt;
  &lt;/a&gt;
  Scenario-2
&lt;/h2&gt;

&lt;p&gt;Since we now know that it makes no difference, let's display the value of &lt;code&gt;count&lt;/code&gt; from within &lt;code&gt;&amp;lt;App /&amp;gt;&lt;/code&gt; instead of &lt;code&gt;&amp;lt;SomeComponent /&amp;gt;&lt;/code&gt; (just like in the original code). Additionally, I've created a bunch of components just to create a hierarchy.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;App.js&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FE7PiRNd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/curqzq4kov1ltpi5rx2w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FE7PiRNd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/curqzq4kov1ltpi5rx2w.png" alt="code_3"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7q4eILya--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/skwteq2syh8facstiyz9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7q4eILya--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/skwteq2syh8facstiyz9.png" alt="step_3_1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By now it should be crystal clear as to what will happen when we change &lt;code&gt;count&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qq2ZA53z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7y9jd4hhqgyqzqojqe8p.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qq2ZA53z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7y9jd4hhqgyqzqojqe8p.gif" alt="step_3_2"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scenario3"&gt;
  &lt;/a&gt;
  Scenario-3
&lt;/h2&gt;

&lt;p&gt;For our last scenario, we'll take the code from scenario-2 and move the &lt;strong&gt;state&lt;/strong&gt; from &lt;code&gt;&amp;lt;App /&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;AnotherChildOfSomeComponent /&amp;gt;&lt;/code&gt;. And since the data flow in React is from parent to child, and not the other way around, we will display (and update) the value of &lt;code&gt;count&lt;/code&gt; from within &lt;code&gt;&amp;lt;AnotherChildOfSomeComponent /&amp;gt;&lt;/code&gt; as well (this makes sense since the whole goal of this exercise is to make &lt;code&gt;count&lt;/code&gt; a part of &lt;code&gt;&amp;lt;AnotherChildOfSomeComponent /&amp;gt;&lt;/code&gt;'s state).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vLx36R50--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gxtjsitdctsqyey1rur1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vLx36R50--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gxtjsitdctsqyey1rur1.png" alt="code_4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O2e0QBND--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d4jt4lzr13ke94e9wwb4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O2e0QBND--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d4jt4lzr13ke94e9wwb4.png" alt="step_4_1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Time to change &lt;code&gt;count&lt;/code&gt; and see React's rendering in action.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PEMyHfzx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oeuofog04zrt2fwwmuup.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PEMyHfzx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oeuofog04zrt2fwwmuup.gif" alt="step_4_2"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;As can be seen, React only re-renders &lt;code&gt;&amp;lt;AnotherChildOfSomeComponent /&amp;gt;&lt;/code&gt; and leaves the rest alone.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Kindly allow me to say it again...&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Every time the state of a component changes, that component and all of its children are re-rendered.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Be very mindful of which component handles the state in a React application. If you put it in the root component (like in the original problem), your &lt;strong&gt;whole application&lt;/strong&gt; will re-render every time that state changes. This can have a serious impact on your application's performance.&lt;/p&gt;

&lt;p&gt;For example, imagine a bunch of data-driven child components that query various APIs. Every time those components are rendered they'll hit those APIs. Now that might be something you intend, but it just might be a side-effect of keeping state in the wrong component.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#follow-me-on-twitter-binrf"&gt;
  &lt;/a&gt;
  Follow me on twitter: &lt;a href="https://www.twitter.com/bi_nrf"&gt;@bi_nrf&lt;/a&gt;
&lt;/h2&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
    </item>
    <item>
      <title>Outgrowing Wordpress &amp; nocode</title>
      <author>ùôπùöäùöúùöòùöó ùôªùöéùöòùö† üë®üèª‚Äçüíª</author>
      <pubDate>Sat, 02 Oct 2021 23:05:57 +0000</pubDate>
      <link>https://dev.to/jasonleowsg/outgrowing-wordpress-nocode-2c6i</link>
      <guid>https://dev.to/jasonleowsg/outgrowing-wordpress-nocode-2c6i</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;Wordpress &amp;amp; nocode is the gateway drug to coding&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Back in 2019, I made a promise to myself that I would really learn how to code that year. Looking back at my journals, I had been making this resolution for the past 2 years before that, but it all but fizzled out after some weeks. I tried going through the tutorials on W3 School, but lost steam after hand-coding two HTML sites. I signed up for a free online course on Python with a local university, but the lecturer was a conceited, disrespectful a**hole, and the course format boring beyond belief. After that, I stopped learning coding altogether for the rest of 2018.&lt;/p&gt;

&lt;p&gt;I‚Äôm frustrated with the false starts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-learn-coding"&gt;
  &lt;/a&gt;
  Why learn coding?
&lt;/h3&gt;

&lt;p&gt;2018 was a year of making products and learning how to build, launch, market them. I managed to make 8 minimum viable products. But because of the mad rush each month to make and launch a product, I didn‚Äôt have bandwidth to learn coding. The timeline was simply too tight to learn how to code, get down to programming my product, debug, and launch. A common maker refrain is ‚ÄúJust use what you know‚Äù, so I went with using what I knew - Wordpress. While the learning from making a product a month was immense and enriching, I fell short on the goal to learn how to code. That was okay at first (not learning coding), because the novelty and fun from being able to finally make products more than made up for that shortfall. &lt;/p&gt;

&lt;p&gt;But after 8 products, I‚Äôm beginning to feel bored. Bored of using the same technology for every product. Bored of the constraints and limitations to the products I can make. It was hard to customize and create more complex, SaaS-type of products. A good example was a job board I made called Public Design Jobs. After it became inefficient to manually scrape and input new jobs into the job board due to sheer volume, I struggled to find Wordpress plugins to automate the scraping and posting on the job board.&lt;/p&gt;

&lt;p&gt;Simply put, my product ambitions had outgrown the tech I know.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wordpress-amp-nocode-is-the-gateway-drug-to-coding"&gt;
  &lt;/a&gt;
  Wordpress &amp;amp; nocode is the gateway drug to coding
&lt;/h3&gt;

&lt;p&gt;In a way, using visual website builders like Wordpress was the gateway drug to me wanting to progress beyond that, and spurred me to start learning coding.&lt;/p&gt;

&lt;p&gt;Being able to make products and website made me catch the maker bug, and after that wanting to learn coding came naturally.&lt;/p&gt;

&lt;p&gt;Now that's a much better way to want to learn coding, isn't it? Instead of saying you need to be computer or digitally literate, get people infected with the desire to create, and everything else will follow. &lt;/p&gt;

&lt;p&gt;Reminds me of this quote by Antoine de Saint‚ÄîExupery, author of The Little Prince:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you want to build a ship, don't drum up the men to gather wood, divide the work and give orders. Instead, teach them to yearn for the vast and endless sea.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;Follow my daily writings on &lt;a href="https://golifelog.com/goals/30"&gt;Lifelog&lt;/a&gt;, where I write about learning to code, goals, productivity, indie hacking and tech for good.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>decodingcoding</category>
    </item>
  </channel>
</rss>
