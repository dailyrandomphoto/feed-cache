<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>6 Steps to publish your Chrome Extension in chrome web store</title>
      <author>vinaynvd</author>
      <pubDate>Sat, 05 Jun 2021 05:56:02 +0000</pubDate>
      <link>https://dev.to/vinaynvd/6-steps-to-publish-your-chrome-extension-in-chrome-web-store-14ah</link>
      <guid>https://dev.to/vinaynvd/6-steps-to-publish-your-chrome-extension-in-chrome-web-store-14ah</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--80z1Te1J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/10000/1%2AzjKjIXqlWgfbSbR_SayHHA.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--80z1Te1J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/10000/1%2AzjKjIXqlWgfbSbR_SayHHA.jpeg" alt="[Web development vector from freepik.com created by upklyak][6 Steps to publish your chrome extension in chrome web store](https://www.freepik.com/vectors/man)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Heya&lt;/em&gt;&lt;/strong&gt;!!&lt;br&gt;
I’m going to show how to &lt;strong&gt;publish our chrome extension&lt;/strong&gt; to the &lt;strong&gt;chrome webstore.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Before that, Please read my part 1 article [&lt;a href="https://vinaynvd72.medium.com/is-it-hard-to-create-a-chrome-extension-using-angular-d9fd6a5740f3"&gt;6 steps to create a Chrome Extension using Angular&lt;/a&gt;] if you haven’t read. Part 1 article covers about creating a chrome extension (&lt;a href="https://chrome.google.com/webstore/detail/browser-notes/goejhefllnefpaocmedbdmfnekhnhien"&gt;browser-notes chrome extension&lt;/a&gt;) &amp;amp; testing it locally.&lt;/p&gt;

&lt;p&gt;Before publishing our extension, I’m going to add a new feature to the chrome extension which we’ve developed in the previous article &amp;amp; then we can publish our extension.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-export-to-html-feature-for-our-browser-notes-extension"&gt;
  &lt;/a&gt;
  Adding “Export to HTML” Feature for our browser notes extension.
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_IcJh4M9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AXbSjjp2QKd9KuuOyQLqiOg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_IcJh4M9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AXbSjjp2QKd9KuuOyQLqiOg.png" alt="Browser notes extension with Export to HTML button (feature)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I’m adding the project’s github repo link &lt;a href="https://github.com/vinaynvd/browser-notes-extension"&gt;here&lt;/a&gt;. You can refer &lt;a href="https://github.com/vinaynvd/browser-notes-extension/blob/main/src/app/components/notes-editor/"&gt;notes-editor component&lt;/a&gt; in this project.&lt;/p&gt;

&lt;p&gt;In this component I’ve added **Export to HTML **button.&lt;br&gt;
You can refer to this path in my repo &lt;a href="https://github.com/vinaynvd/browser-notes-extension/tree/main/src/app/components/notes-editor"&gt;browser-notes-extension/src/app/notes-editor&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When a user clicks Export to HTML button, extension is going to download their copied/typed content in the form of html file. &lt;br&gt;
Also, what ever you type or paste in our extension, It’s going to save in user’s browser local storage.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This extension will use your browser’s local storage to store content&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Now let’s go publishing our chrome extension into the chrome web store.&lt;br&gt;
Here are the 6 steps to publish your Chrome extension successfully in to the chrome webstore.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-register-for-a-google-developer-account"&gt;
  &lt;/a&gt;
  Step 1 : Register for a Google developer account
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;A Developer account&lt;/strong&gt; is a normal google account that is used for &lt;strong&gt;publishing **extensions or apps on **Play Store&lt;/strong&gt; &lt;strong&gt;or Web Store&lt;/strong&gt;. &lt;br&gt;
We need this account to publish our extension in to the chrome webstore. It’s easy to create a developer account, You need to &lt;strong&gt;spend 5$&lt;/strong&gt; as one time signup fee. Then you will be able to &lt;strong&gt;publish&lt;/strong&gt; &lt;strong&gt;up to&lt;/strong&gt; &lt;strong&gt;20&lt;/strong&gt; different &lt;strong&gt;extensions&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-creating-new-item"&gt;
  &lt;/a&gt;
  Step 2 : Creating New Item
&lt;/h2&gt;

&lt;p&gt;Once you are an owner of Google developers account, you can go to your developer’s dashboard. Here’s how it looks&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UhgTeYmp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3840/1%2ASG4RTtdnZ2rMNISKGDan3Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UhgTeYmp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3840/1%2ASG4RTtdnZ2rMNISKGDan3Q.png" alt="Google developer’s dashboard of a user"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To publish our extension, click on new Item. It’s going to ask the zip file of your chrome extension project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DbR0R7oV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AygI8Ols8mV4epxQzRWXMxA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DbR0R7oV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AygI8Ols8mV4epxQzRWXMxA.png" alt="Drop zip file in google developer’s dashboard."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In our Angular application case, we’ve already built our extension in dist directory by running this command &amp;amp; zipped it. You can refer the step 5 of part 1 &lt;a href="https://vinaynvd72.medium.com/is-it-hard-to-create-a-chrome-extension-using-angular-d9fd6a5740f3"&gt;article&lt;/a&gt;.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ng build --prod
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;After generating the build of our extension, you can go to **dist **directory &amp;amp; zip the browser-notes folder. Drag &amp;amp; drop that zip file in Add new item dialog in developers dashboard.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-store-listing"&gt;
  &lt;/a&gt;
  Step 3 : Store Listing
&lt;/h2&gt;

&lt;p&gt;When you’ve successfully added your zip file in step 2. It’s going to take you to store listing page. By default this page is going to read the values like Title, version..etc from the manifest.json file (which is in your zip file).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4AV1BW7O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3656/1%2AfSL5inp9awCIi2pL7K_8Og.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4AV1BW7O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3656/1%2AfSL5inp9awCIi2pL7K_8Og.png" alt="Store listing page of chrome extension."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My extension was rejected when my description was too short &amp;amp; it contains excessive &amp;amp; irrelevant keywords. So I got a mail like this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JJ66u3Lo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2ABon534jCkGz22xEM0bD3lw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JJ66u3Lo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2ABon534jCkGz22xEM0bD3lw.png" alt="Chrome extension rejection mail"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For successful approval of your extension, please note these points&lt;/strong&gt;, &lt;br&gt;
&lt;strong&gt;1. **Need to write a **long explanatory description&lt;/strong&gt;, which was &lt;strong&gt;approved&lt;/strong&gt; for the very next day.&lt;br&gt;
&lt;strong&gt;2.&lt;/strong&gt; We need to have &lt;strong&gt;store icon&lt;/strong&gt; of &lt;strong&gt;128x128 **pixels.&lt;br&gt;
**3.&lt;/strong&gt; Need to provide &lt;strong&gt;at least 1 screenshot&lt;/strong&gt; whose &lt;strong&gt;size **should be **1280x800&lt;/strong&gt; or &lt;strong&gt;600x400&lt;/strong&gt;. You can provide a maximum of 5 screenshots.&lt;br&gt;
&lt;strong&gt;4.&lt;/strong&gt; Need to provide 1 &lt;strong&gt;small promo tile&lt;/strong&gt; of 440x280 size &amp;amp; &lt;strong&gt;Large promo tile&lt;/strong&gt; of size 920x680 &amp;amp; **Marquee promo tile **of size 1400x560.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-4-privacy-practices"&gt;
  &lt;/a&gt;
  Step 4: Privacy practices
&lt;/h2&gt;

&lt;p&gt;After filling form in your store listing page, you’ll be redirected to **Privacy practices **page. Here you need to provide the following information.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Single purpose&lt;/strong&gt; : An extension must have a single purpose that is narrow and easy-to-understand.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Permission justification&lt;/strong&gt; : Are you using the remote code, if Y*&lt;em&gt;es **then provide the **justification&lt;/em&gt;&lt;em&gt;. In our case N&lt;/em&gt;&lt;em&gt;o.
**3. **Data usage *&lt;/em&gt;: What user data do you plan to collect from users now or in the future ? In our case, we collect only website content like text, images, hyperlinks..etc.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Finally you need to check these disclosures in Privacy practices&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--labrHwKp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A7eaNj7kGkhbpIxf9hBfReQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--labrHwKp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A7eaNj7kGkhbpIxf9hBfReQ.png" alt="disclosures to comply with our [Developer Program Policies](https://developer.chrome.com/webstore/program_policies)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-5-payments-amp-distribution"&gt;
  &lt;/a&gt;
  Step 5 : Payments &amp;amp; Distribution
&lt;/h2&gt;

&lt;p&gt;Here in this step, you need to setup your payment, if you want to monetize your extension. Right now, I’m publishing this extension for free.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wv948_DB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3522/1%2AOnJWI1CPb3imDLkmeQ5ACw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wv948_DB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3522/1%2AOnJWI1CPb3imDLkmeQ5ACw.png" alt="Payments &amp;amp; Distribution page in chrome webstore developers dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can select the visibility of your extension to **Public, Private or Unlisted. **Distribution, Here if you want to make your extension available to **All Regions, **you can do that or you can select the countries listed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DAIU_dzR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3006/1%2Aub7IQxhagm-QZ0FYn-fCbA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DAIU_dzR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3006/1%2Aub7IQxhagm-QZ0FYn-fCbA.png" alt="Distribution step with countries."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-6-submit-for-review"&gt;
  &lt;/a&gt;
  Step 6 : Submit for review
&lt;/h2&gt;

&lt;p&gt;This is the final step to submit your chrome extension for review. Here All apps go through an automated review process and in some cases, an app will be published without further manual review. There may be some instances in which a manual review will be required before the app is published based on chrome extension &lt;a href="https://developer.chrome.com/docs/webstore/program_policies/"&gt;program policies&lt;/a&gt;. In some cases, where sensitive permissions are requested, review times and/or approval times may be longer.&lt;/p&gt;

&lt;p&gt;Before hitting &lt;strong&gt;submit for review **button, I suggest hit **Save draft **button first. &lt;br&gt;
Once your application is submitted &amp;amp; their review is done &amp;amp; approved, you will get an **email **like this from **chrome webstore.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HIj5Lrwe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AT13HWrSU7cVnjheyxQ9mOA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HIj5Lrwe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AT13HWrSU7cVnjheyxQ9mOA.png" alt="Chrome extension approved mail after review for publishing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally you can see your extension in chrome webstore, when you hit the **Link to published item.&lt;br&gt;
**Here’s our Browser notes extension published in chrome webstore. &amp;amp; Here’s the &lt;a href="https://chrome.google.com/webstore/detail/browser-notes/goejhefllnefpaocmedbdmfnekhnhien"&gt;Browser notes extension link in chrome web store&lt;/a&gt;. &lt;br&gt;
Yayy!! I already had 5 users &amp;amp; 2 reviews. &lt;br&gt;
Come on!! Don’t feel shy to try our extension too 😉&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j7kI56se--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2138/1%2A2DPh-Oi_r0FgWyID7QS2fQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j7kI56se--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2138/1%2A2DPh-Oi_r0FgWyID7QS2fQ.png" alt="Browser notes extension page in chrome webstore"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Here in this article, we’ve seen how to publish our extension successfully in chrome webstore. Building &amp;amp; publishing chrome extension is easy, Use your creativity &amp;amp; publish your own extension in the web store. &lt;br&gt;
Hope, this article helped you to begin your journey to successfully publish your extension.&lt;/p&gt;

&lt;p&gt;Want to thank me ? Please show your Support &amp;amp; Love by buying me a coffee ☕ by hitting the below link 😃&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/vinaynvd"&gt;https://www.buymeacoffee.com/vinaynvd&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks Alot!! 🙂&lt;/p&gt;

</description>
      <category>chromewebstore</category>
      <category>chromeextension</category>
      <category>publishextension</category>
      <category>publishchromewebstoreextension</category>
    </item>
    <item>
      <title>I made a new JavaScript operator!</title>
      <author>Siddharth</author>
      <pubDate>Sat, 05 Jun 2021 05:38:16 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/i-made-a-new-javascript-operator-ki8</link>
      <guid>https://dev.to/siddharthshyniben/i-made-a-new-javascript-operator-ki8</guid>
      <description>&lt;p&gt;Can you figure out how?&lt;/p&gt;


&lt;div class="runkit-element"&gt;
  &lt;code&gt;
    
  &lt;/code&gt;
  &lt;code&gt;
    
let x = 10;
// The new arrow operator – goes from one number to another
while (x --&amp;gt; 0) { // x goes to 0
  console.log(x)
}

  &lt;/code&gt;
&lt;/div&gt;


</description>
      <category>javascript</category>
    </item>
    <item>
      <title>What a great journey with Dev.to !!</title>
      <author>Rajesh Kumar Yadav</author>
      <pubDate>Sat, 05 Jun 2021 05:14:55 +0000</pubDate>
      <link>https://dev.to/rajeshkumaryadavdotcom/journey-with-dev-to-4iaa</link>
      <guid>https://dev.to/rajeshkumaryadavdotcom/journey-with-dev-to-4iaa</guid>
      <description>&lt;p&gt;Hey, there 👋,&lt;/p&gt;

&lt;p&gt;Thanks for dropping by. I hope you spend a couple minutes reading my articles, today I've completed one month of journey with dev.to and want to express my journey experience with you.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#a-few-lines-about-my-work-and-me"&gt;
  &lt;/a&gt;
  ✋ A few lines about My Work and Me
&lt;/h1&gt;

&lt;p&gt;I am Rajesh, a technology specialist by profession and a technical blogger by passion. I am passionate about knowledge sharing, open-source contributions, connecting to people, and mentoring.&lt;/p&gt;

&lt;p&gt;After spending a decade with software development and web programming, I finally got the wisdom 💡 to start my blog a couple of years ago as &lt;code&gt;DevelopersDiscussion.com&lt;/code&gt; and thereafter I found a great dev community as &lt;code&gt;dev.to&lt;/code&gt; and I started writing here as well, based on my efforts and consistency dev.to has promoted me with a badge and now I'm moderator as well. Believe me or not, blogging is one of the wisest decision I have taken so far. Sharing is indeed the best way to gain knowledge 👨🏻‍🎓.&lt;/p&gt;

&lt;p&gt;I write articles on HTML, CSS, JavaScript, Angular, React, Node.js, XSLT, XML, AWS, Servers, CI/CD, Mobile Web Technologies,  Machine Learning, Software Development, Blogging, and Leadership. If you are interested in any of these, you may find my articles very useful. So please give it a try and follow me for updates.&lt;/p&gt;

&lt;p&gt;You can read more about me at &lt;a href="https://rajeshkumaryadav.com"&gt;RajeshKumarYadav.com&lt;/a&gt; and you can show your support as well.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#why-do-i-need-your-support"&gt;
  &lt;/a&gt;
  🤝 Why do I need your Support?
&lt;/h1&gt;

&lt;p&gt;First of all, Thank You very much 🙏 for reading, liking, commenting on my articles. The biggest motivation behind consistent content creation is &lt;code&gt;YOU&lt;/code&gt;, my readers.&lt;/p&gt;

&lt;p&gt;As you know, writing quality articles takes time and effort. Therefore, if you have enjoyed my articles or it was helpful to you, please consider showing your thanks by buying a coffee for me. It will surely motivate me further to write excellent content in the future 😊.&lt;/p&gt;

&lt;p&gt;You Can click on the &lt;code&gt;Buy Me A Coffee&lt;/code&gt; button at the bottom of the articles.&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/rkycom"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can extend your support by following me on Twitter(@rky_com), &lt;/p&gt;

&lt;p&gt;🙏 Thank You&lt;br&gt;
Thanks for sponsoring &amp;amp; supporting!&lt;/p&gt;

</description>
      <category>devjournal</category>
      <category>motivation</category>
      <category>discuss</category>
    </item>
    <item>
      <title>New At HTML? Watch this if you are new at HTML.</title>
      <author>Angwyn-Developer</author>
      <pubDate>Sat, 05 Jun 2021 04:55:30 +0000</pubDate>
      <link>https://dev.to/angwyndeveloper/new-at-html-watch-this-if-you-are-new-at-html-565j</link>
      <guid>https://dev.to/angwyndeveloper/new-at-html-watch-this-if-you-are-new-at-html-565j</guid>
      <description>&lt;p&gt;if you are new to coding, HTML is the right code for you. because html is very easy and suitable for beginners. first of all the application you need is a code editor, suitable code editor for html is notepad++ (for me, code editor is not necessarily the same, you can use: Notepad, Sublime, Atom, etc) if you want to use notepad++ go to this website : &lt;a href="https://notepad-plus-plus.org/downloads/"&gt;https://notepad-plus-plus.org/downloads/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OK.if you already download the Code Editor, Open the code editor, and Click File &amp;gt; New Or "Ctrl + N" And Save or Save As, Then rename it "index.html" ,so the text file can be a html file, after that u can type your first code :)&lt;/p&gt;

&lt;pre&gt;&lt;span&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;head&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;&amp;lt;html&amp;gt; element to know that the file is html, this element must be on the first line.&lt;/p&gt;

&lt;p&gt;&amp;lt;head&amp;gt; element for the title element, the title element is useful for changing the name of your website website&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;span&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;title&amp;gt;&lt;/span&gt;This Is TITLE.&lt;span&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;if you write the code correctly then the browser title is "This is TITLE".&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Header&lt;/u&gt;&lt;br&gt;
the header element is useful for displaying jumbo/large letters, the header element has many font sizes, there are &amp;lt;h1&amp;gt;, &amp;lt;h2&amp;gt;, &amp;lt;h3&amp;gt;, to &amp;lt;h6&amp;gt;&lt;/p&gt;

&lt;p&gt;Code:&lt;/p&gt;

&lt;pre&gt;&lt;span&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Header Tutorial&lt;span&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;This is Header 1 &lt;span&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;if you typed the code correctly then the result is like this...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p79tuDYT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a1sobeg9w3b63a50q42k.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p79tuDYT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a1sobeg9w3b63a50q42k.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To be continued...&lt;br&gt;
See you in part 2...&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>html</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to make Responsive Website Using HTML CSS JavaScript Step By Step</title>
      <author>fahim kabir</author>
      <pubDate>Sat, 05 Jun 2021 04:27:55 +0000</pubDate>
      <link>https://dev.to/fahimkabir/how-to-make-responsive-website-using-html-css-javascript-step-by-step-1ej2</link>
      <guid>https://dev.to/fahimkabir/how-to-make-responsive-website-using-html-css-javascript-step-by-step-1ej2</guid>
      <description>&lt;p&gt;Hi there 👋,&lt;/p&gt;

&lt;p&gt;Checkout my recently made responsive agency website.&lt;/p&gt;

&lt;p&gt;In this responsive website i have added Home section, about section, feature section, pricing section, contact form &amp;amp; footer. Also have made this complete website responsive using media query.&lt;/p&gt;

&lt;p&gt;For this project I have used these libraries,&lt;br&gt;
▶️ HTML&lt;br&gt;
▶️ CSS&lt;br&gt;
▶️ JavaScript&lt;/p&gt;

&lt;p&gt;Here is the tutorial for this ecommerce website!&lt;br&gt;
Part 1:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/1FoQOProoeI"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Part 2:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/G6JGc9MC96s"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;You can use this to learn or for your portfolio.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Feel free to visit my YouTube channel:&lt;br&gt;
&lt;a href="//www.youtube.com/tech2etc"&gt;@Tech2etc&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Follow me on Instagram where I'm sharing lot's of useful resources!&lt;br&gt;
&lt;a href="https://www.instagram.com/fahimkabir.hamim"&gt;@fahimkabir.hamim&lt;/a&gt; 😉&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How Can Games Help Programmers Be More Productive</title>
      <author>tirth-uhiha-dev</author>
      <pubDate>Sat, 05 Jun 2021 04:26:45 +0000</pubDate>
      <link>https://dev.to/tirthuhihadev/how-can-games-help-programmers-be-more-productive-4k01</link>
      <guid>https://dev.to/tirthuhihadev/how-can-games-help-programmers-be-more-productive-4k01</guid>
      <description>&lt;h1&gt;
  &lt;a href="#hey-there"&gt;
  &lt;/a&gt;
  Hey There,
&lt;/h1&gt;

&lt;p&gt;Tired and exhausted Dev's. I am Tirth here your one and only game blogger here. So today we are going to talk about a little bit off-topic by the way sorry for that. Ok, so I have a question?&lt;br&gt;
So how can games help programmers be more productive??, you must be thinking that &lt;strong&gt;(from your perspective)&lt;/strong&gt; wait what tirth you must be kidding right.&lt;br&gt;
if you know anything else pls comment&lt;br&gt;
No guys I am not joking here's your answer:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#boost-learning-and-memory"&gt;
  &lt;/a&gt;
  Boost Learning and Memory:
&lt;/h3&gt;

&lt;p&gt;A lot of video games require players to learn,memorize and apply various tricks.Player also beed to remember all the instructions given at the start of the game.So programers must be able to learn all the syntax and related sybols of the coding language.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#improve-problemsolving-skills"&gt;
  &lt;/a&gt;
  Improve Problem-Solving Skills:
&lt;/h3&gt;

&lt;p&gt;A great problem solver can make critical decisions in a matter of seconds. In video games, decision-making is often cut down to seconds, and players must make full use of their brain power before proceeding to the next step.Each video game has rules guiding players on what to follow before executing the next move.&lt;br&gt;
You can apply this skill to programming, where you are required to develop a software solution that will solve a real-world problem.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#improve-multitasking-skills"&gt;
  &lt;/a&gt;
  Improve Multitasking Skills:
&lt;/h3&gt;

&lt;p&gt;For example, if the game involves fighting, a player will have to keep monitoring the energy levels of fighters while simultaneously attacking enemies. Without excellent multitasking skills, one is highly likely to fall on the losing end.&lt;br&gt;
Programming will also call for excellent multitasking skills to create solutions to real-world problems. Programmers must be keen and observant to whatever is taking place on their screen and must be able to write code while simultaneously checking for errors.&lt;/p&gt;

&lt;p&gt;So, End of the day it's up to you i have only shown the benifits of gaming in programmers life it also has some cons just don't be be addicted to game it may effect your work.Play games for entertainment.&lt;/p&gt;

&lt;p&gt;If you are still There then do like and follow my dev account i won't take a sec to do that and if you like gaming then do subscribe to youtube channel:&lt;br&gt;
&lt;a href="https://www.youtube.com/channel/UC1sE6NRQT5zbgzq9tRhQRlQ"&gt;My Youtube Channel&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devmeme</category>
      <category>programming</category>
      <category>gamedev</category>
      <category>python</category>
    </item>
    <item>
      <title>::Before and ::After in CSS made easy</title>
      <author>RahulReddy</author>
      <pubDate>Sat, 05 Jun 2021 03:50:14 +0000</pubDate>
      <link>https://dev.to/deraowl/before-and-after-in-css-made-easy-4m27</link>
      <guid>https://dev.to/deraowl/before-and-after-in-css-made-easy-4m27</guid>
      <description>&lt;p&gt;Hello, People&lt;/p&gt;

&lt;p&gt;Today we are going to learn about pseudo-elements, one of the most useful CSS properties.&lt;br&gt;
Pseudo-elements in CSS allow us to add content to a page without adding additional HTML elements.&lt;br&gt;
Seems confusing? Okay, in simple terms.&lt;/p&gt;

&lt;blockquote&gt;Pseudo-elements are like a shadow, which can be seen but not able to touch.&lt;/blockquote&gt;

&lt;p&gt;I can assure you that if you master these topics, you will use them all over your project. Without wasting time let us dive in.&lt;/p&gt;

&lt;h1&gt;::Before&lt;/h1&gt;

&lt;p&gt;Before selector is used to position content before the content of the selected element.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;

&lt;p&gt;We need to add the item with the keyword ::before with the required content property. The content can be any string or even blank.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;     element::before{
      content: "";
     }

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note: before and after pseudo-elements will not work without content property.  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://codepen.io/Archisol/pen/poeLzLR"&gt;https://codepen.io/Archisol/pen/poeLzLR&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;::After&lt;/h1&gt;

&lt;p&gt;The after pseudo-element can be used to position content after the content of the selected element.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;

&lt;p&gt;We need to add the item with the keyword ::after with the required content property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;     element::after{
      content: "";
     }

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://codepen.io/Archisol/pen/JjWLPMZ"&gt;https://codepen.io/Archisol/pen/JjWLPMZ&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: These elements are inline by default&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I Hope, the blog was useful. If there are any queries feel free to ping me on &lt;a href="https://twitter.com/DeRaowl"&gt;Twitter&lt;/a&gt;. &lt;strong&gt;Now as a task you can create the below image&lt;/strong&gt; using before and after pseudo-elements.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pfxvpMz1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622716152574/FjzGLaOXJ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pfxvpMz1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622716152574/FjzGLaOXJ.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The solution can be found here &lt;a href="https://codepen.io/Archisol/pen/QWpmLVK"&gt;Codepen&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more about Pseudo Elements, refer below websites:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements"&gt;MDN Web-Docs&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://css-tricks.com/almanac/selectors/a/after-and-before/"&gt;CSS  Tricks&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>Angular : How to add A fully customizable, one-time password input component in your angular app just in 10 minutes?</title>
      <author>Rajesh Kumar Yadav</author>
      <pubDate>Sat, 05 Jun 2021 03:45:51 +0000</pubDate>
      <link>https://dev.to/rajeshkumaryadavdotcom/angular-how-to-add-a-fully-customizable-one-time-password-input-component-in-your-angular-app-just-in-10-minutes-n29</link>
      <guid>https://dev.to/rajeshkumaryadavdotcom/angular-how-to-add-a-fully-customizable-one-time-password-input-component-in-your-angular-app-just-in-10-minutes-n29</guid>
      <description>&lt;p&gt;&lt;a href="https://i.giphy.com/media/TdpKuX7H1KBvvR2Hpu/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/TdpKuX7H1KBvvR2Hpu/giphy.gif" alt="Image"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;You can use this component in your app and extend it to SMS API, here I will skip API part as it varies from sms provider to provider.  &lt;/p&gt;

&lt;p&gt;Let's begin to learn how to add otp component in your angular app.  &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-1-install-dependency"&gt;
  &lt;/a&gt;
  Step 1 - Install dependency
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt; &lt;span class="nx"&gt;ng&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;otp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#step-2-add-raw-ngotpinputmodule-endraw-to-imports-raw-appmodulets-endraw-something-like"&gt;
  &lt;/a&gt;
  Step 2 - Add &lt;code&gt;NgOtpInputModule&lt;/code&gt; to imports &lt;code&gt;app.module.ts&lt;/code&gt; something like
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;BrowserModule&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@angular/platform-browser&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;NgModule&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@angular/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AppComponent&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./app.component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;NgOtpInputModule&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ng-otp-input&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;NgModule&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; 
&lt;span class="na"&gt;declarations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;AppComponent&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; 
&lt;span class="na"&gt;imports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;BrowserModule&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;NgOtpInputModule&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; 
&lt;span class="na"&gt;bootstrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;AppComponent&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here in your existing app you have to add &lt;code&gt;import { NgOtpInputModule } from 'ng-otp-input'&lt;/code&gt;; near all existing imports and then add imports in &lt;code&gt;NgModule&lt;/code&gt; as &lt;code&gt;NgOtpInputModule&lt;/code&gt; with your existing code.  &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-3-open-your-choice-of-components-ts-html-file-where-you-want-to-add-otp-feature-and-add-below-code-"&gt;
  &lt;/a&gt;
  Step 3 - Open your choice of component's ts html file where you want to add OTP feature and add below code -
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ng&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;otp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onInputChange&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;onOtpChange($event)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;{length:5}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ng-otp-input&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All done, OTP component is added.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Extra Bits&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
When I decided to add this to my own website &lt;a href="https://rajeshkumaryadav.com/#/auth"&gt;https://rajeshkumaryadav.com/#/auth&lt;/a&gt; then I thought of to write config in ts file and pass it in html as below, I will write some more code below which I am using in my website like if all digits are entered then validation should be done etc. If you are happy with default feature you can skip this extra bits part.  &lt;/p&gt;

&lt;p&gt;auth.component.html&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ng&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;otp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;ngOtpInput&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onInputChange&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;onOtpChange($event)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;ngIf&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;showOtpComponent&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;config&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ng-otp-input&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;as my config list is long, I will define it in ts file  &lt;/p&gt;

&lt;p&gt;auth.component.ts&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;otp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;showOtpComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;ViewChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ngOtpInput&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;static&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="nx"&gt;ngOtpInput&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;any&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;allowNumbersOnly&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;isPasswordInput&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;disableAutoFocus&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;placeholder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;inputStyles&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;50px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;50px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt; 

&lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kr"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt; &lt;span class="c1"&gt;// OTP Code onOtpChange(otp) { this.otp = otp; // When all 4 digits are filled, trigger OTP validation method if (otp.length == 4) { this.validateOtp(); } } setVal(val) { this.ngOtpInput.setValue(val); } onConfigChange() { this.showOtpComponent = false; this.otp = null; setTimeout(() =&amp;gt; { this.showOtpComponent = true; }, 0); } validateOtp() { // write your logic here to validate it, you can integrate sms API here if you want } &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please note that in above config, you can make necessary changes as per your requirements.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#live-demo-"&gt;
  &lt;/a&gt;
  Live Demo -
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://rajeshkumaryadav.com/#/auth"&gt;https://rajeshkumaryadav.com/#/auth&lt;/a&gt;  &lt;/p&gt;

</description>
      <category>angular</category>
      <category>webdev</category>
      <category>typescript</category>
      <category>npm</category>
    </item>
    <item>
      <title>Using IAM Service Account Instead Of Instance Profile For EKS Pods</title>
      <author>Vu Dao</author>
      <pubDate>Sat, 05 Jun 2021 02:56:34 +0000</pubDate>
      <link>https://dev.to/vumdao/using-iam-service-account-instead-of-instance-profile-for-eks-pods-262p</link>
      <guid>https://dev.to/vumdao/using-iam-service-account-instead-of-instance-profile-for-eks-pods-262p</guid>
      <description>&lt;h3&gt;
  &lt;a href="#-with-iam-identitybased-policies-you-can-specify-allowed-or-denied-actions-and-resources-as-well-as-the-conditions-under-which-actions-are-allowed-or-denied"&gt;
  &lt;/a&gt;
  &lt;strong&gt;- With IAM identity-based policies, you can specify allowed or denied actions and resources as well as the conditions under which actions are allowed or denied.&lt;/strong&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-for-multiple-services-in-k8s-how-can-we-control-the-permission-of-using-aws-resouce-within-the-pod-the-easiest-way-is-to-use-instance-profile-which-attached-to-the-eks-node-but-that-is-the-worst-way-with-high-risk-of-security-lets-go-through-this-post-to-know-more"&gt;
  &lt;/a&gt;
  &lt;strong&gt;- For multiple services in K8S how can we control the permission of using AWS resouce within the pod. The easiest way is to use instance profile which attached to the EKS node but that is the worst way with high risk of security. Let's go through this post to know more&lt;/strong&gt;
&lt;/h3&gt;




&lt;p&gt;&lt;strong&gt;TL,DR&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-in-this-document"&gt;
  &lt;/a&gt;
  What’s In This Document
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#-Kubernetes-Service-Accounts"&gt;Kubernetes Service Accounts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Verify-the-default-service-account-in-the-eks-cluster"&gt;Verify the default service account in the eks cluster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-IAM-Roles-for-Service-Accounts-(IRSA)"&gt;IAM Roles for Service Accounts (IRSA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-How-to-assign-IAM-roles-to-service-account"&gt;How to assign IAM roles to service account&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Create-EKS-cluster-using-AWS-CDK"&gt;Create EKS cluster using AWS CDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.toCreate-IAM-identity-provider---Type-OpenID-Connect"&gt;Create IAM identity provider - Type OpenID Connect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.toCreate-IAM-Service-Account-Role-bind-with-OIDC-provider"&gt;Create IAM Service Account Role bind with OIDC provider&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#kubernetes-service-accounts"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-Kubernetes-Service-Accounts"&gt;Kubernetes Service Accounts&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A service account is a special type of object that allows you to assign a Kubernetes RBAC role to a pod. A default service account is created automatically for each Namespace within a cluster. When you deploy a pod into a Namespace without referencing a specific service account, the default service account for that Namespace will automatically get assigned to the Pod and the Secret, i.e. the service account (JWT) token for that service account, will get mounted to the pod as a volume at /var/run/secrets/kubernetes.io/serviceaccount.**&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#verify-the-default-service-account-in-the-eks-cluster"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-Verify-the-default-service-account-in-the-eks-cluster"&gt;Verify the default service account in the eks cluster&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Create Pod deployment without service account, here we use &lt;code&gt;aws-cli&lt;/code&gt; image to test &lt;code&gt;s3&lt;/code&gt; permission and then apply
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: aws-test
  name: aws-test
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aws-test
  template:
    metadata:
      labels:
        app: aws-test
    spec:
      containers:
        - image: mikesir87/aws-cli:v1
          name: aws-test
          command: ['sleep', '60']
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Get pod's ENV, expect there's no &lt;code&gt;AWS_ROLE_ARN&lt;/code&gt; and &lt;code&gt;AWS_WEB_IDENTITY_TOKEN_FILE&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl exec aws-test-854c4fb8c-9lpsv -- env |grep AWS
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Get the default token in &lt;code&gt;/var/run/secrets/kubernetes.io/serviceaccount/token&lt;/code&gt;. Decoding the service account token in that directory will reveal the following metadata:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl exec aws-test-854c4fb8c-9lpsv -- cat /var/run/secrets/kubernetes.io/serviceaccount/token
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "iss": "kubernetes/serviceaccount",
  "kubernetes.io/serviceaccount/namespace": "dev",
  "kubernetes.io/serviceaccount/secret.name": "default-token-qvr29",
  "kubernetes.io/serviceaccount/service-account.name": "default",
  "kubernetes.io/serviceaccount/service-account.uid": "d9378593-295f-4be0-a918",
  "sub": "system:serviceaccount:dev:default"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;The default service account has the following permissions to the Kubernetes API.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl describe clusterrole system:discovery
Name:         system:discovery
Labels:       kubernetes.io/bootstrapping=rbac-defaults
Annotations:  rbac.authorization.kubernetes.io/autoupdate: true
PolicyRule:
  Resources  Non-Resource URLs  Resource Names  Verbs
  ---------  -----------------  --------------  -----
             [/api/*]           []              [get]
             [/api]             []              [get]
             [/apis/*]          []              [get]
             [/apis]            []              [get]
             [/healthz]         []              [get]
             [/livez]           []              [get]
             [/openapi/*]       []              [get]
             [/openapi]         []              [get]
             [/readyz]          []              [get]
             [/version/]        []              [get]
             [/version]         []              [get]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;The pod does not have any permissions in AWS services instead it might inherrit from instance profile if we do not block access to instance metadata.&lt;/li&gt;
&lt;li&gt;Next step we will create an IAM role service account which is fedderated by OpenID connector and assumed by &lt;code&gt;AssumeRoleWithWebIdentity&lt;/code&gt;. Sound strange right? let's discover moore.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#iam-roles-for-service-accounts-irsa"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-IAM-Roles-for-Service-Accounts-(IRSA)"&gt;IAM Roles for Service Accounts (IRSA)&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;IRSA is a feature that allows you to assign an IAM role to a Kubernetes service account. It works by leveraging a Kubernetes feature known as Service Account Token Volume Projection. Pods with service accounts that reference an IAM Role call a public OIDC discovery endpoint for AWS IAM upon startup.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When an AWS API is invoked, the AWS SDKs calls &lt;code&gt;sts:AssumeRoleWithWebIdentity&lt;/code&gt; and automatically exchanges the Kubernetes issued token for a AWS role credential.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;EKS Pod Identity Webhook mutates pods with a ServiceAccount with an &lt;code&gt;eks.amazonaws.com/role-arn&lt;/code&gt; annotation by adding a ServiceAccount projected token volume and adding environment variables that configure the AWS SDKs to automatically assume the specified role. In order to work, an OIDC provider is configured in AWS IAM to trust the ServiceAccount tokens. The mutating webhook that runs as part of the EKS control plane injects the AWS Role ARN and the path to a web identity token file into the Pod as environment variables. These values can also be supplied manually.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;AWS_ROLE_ARN=arn:aws:iam::AWS_ACCOUNT_ID:role/IAM_ROLE_NAME
AWS_WEB_IDENTITY_TOKEN_FILE=/var/run/secrets/eks.amazonaws.com/serviceaccount/token
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;The kubelet will automatically rotate the projected token when it is older than 80% of its total TTL, or after 24 hours. The AWS SDKs are responsible for reloading the token when it rotates.**&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vUtXQMnK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/service-account/img/flow.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vUtXQMnK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/service-account/img/flow.png%3Fraw%3Dtrue" alt="Alt-Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-assign-iam-roles-to-service-account"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-How-to-assign-IAM-roles-to-service-account"&gt;How to assign IAM roles to service account&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;First you need EKS cluster to get OpenId connect (OIDC) URL. What is OIDC? OpenID Connect is a simple identity layer on top of the OAuth 2.0 protocol. It allows Clients to verify the identity of the End-User based on the authentication performed by an Authorization Server, as well as to obtain basic profile information about the End-User in an interoperable and REST-like manner.)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create IAM identity provider. IAM identity providers (IdPs) manage user identities outside of AWS. You can establish a trust relationship with an IdP to give external user identities permissions to use AWS resources in your account.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Collect IAM open id connect provider arn and then create an IAM role and set Trust Relationship with Policy Document (limited by condition):&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "Federated": "&amp;lt;open_id_connect_provider_arn&amp;gt;"
      },
      "Action": "sts:AssumeRoleWithWebIdentity",
      "Condition": {
        "StringEquals": {
          "oidc.eks.ap-northeast-2.amazonaws.com/id/&amp;lt;OIDC_PROVIDER_ID&amp;gt;:aud": "sts.amazonaws.com",
          "oidc.eks.ap-northeast-2.amazonaws.com/id/&amp;lt;OIDC_PROVIDER_ID&amp;gt;:sub": "system:serviceaccount:dev:sel-eks-sa"
        }
      }
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Attach necessary policies/ managed policies for the role&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;
  &lt;a href="https://dev.to/vumdao"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zBs_Sbxg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/service-account/img/too_much.jpg%3Fraw%3Dtrue"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;b&gt;NO, the most interesting parts waiting for you - Using AWS CDK to create all of the above and CDK8S to create your yaml files&lt;/b&gt;
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#create-eks-cluster-using-aws-cdk"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-Create-EKS-cluster-using-AWS-CDK"&gt;Create EKS cluster using AWS CDK&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The post is long enough to share EKS CDK code here but the IAM role service account, IAM identiy provider and OIDC need to be in same stack of EKS&lt;/li&gt;
&lt;li&gt;Usind &lt;code&gt;AWS CDK 2.0&lt;/code&gt; to create EKS cluster, EKS admin role, EKS node role both principal is &lt;code&gt;eks.amazonaws.com&lt;/code&gt;, EKS node group, IAM instace profile, OIDC provider, IAM identity provider, IAM service account role for projected service and &lt;code&gt;aws-node&lt;/code&gt; DaemonSet&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
  &lt;a href="https://dev.to/vumdao"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I92Ih_El--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/service-account/img/eks_cdk.jpg%3Fraw%3Dtrue"&gt;
  &lt;/a&gt;
&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from constructs import Construct
from aws_cdk import (
    App, Stack, Environment, Tags, CfnJson, CfnOutput,
    aws_eks as eks,
    aws_ec2 as ec2,
    aws_iam as iam
)
import re


class RunAllAtOnce:
    def __init__(self):
        app = App()
        _env = Environment(region="ap-northeast-2", account=account)
        cluster = EksTestStack(app, 'EksClusterStack', env=_env)
        IamOICProvider(app, 'EksOICIdentityProvider', eks_cluster=cluster.eks_cluster, env=_env)

        app.synth()


class EksTestStack(Stack):
    def __init__(self, scope: Construct, construct_id: str, env, **kwargs) -&amp;gt; None:
        super().__init__(scope, construct_id, env=env, **kwargs)

        self.eks_cluster = None
        self.acc_id = env.account
        statement = EksWorkerRoleStatements(self.acc_id)

        eks_private_vpc = ec2.Vpc(self, "EksPrivateVPC", cidr='10.3.0.0/16', max_azs=2, nat_gateways=1)

        # EKS Admin role
        eks_admin_role = iam.Role(
            self, 'EKSMasterRole', role_name='eks-admin-role', assumed_by=iam.ServicePrincipal("ec2.amazonaws.com")
        )
        eks_admin_role.add_managed_policy(iam.ManagedPolicy.from_aws_managed_policy_name("AmazonS3ReadOnlyAccess"))
        eks_admin_role.add_managed_policy(iam.ManagedPolicy.from_aws_managed_policy_name("IAMFullAccess"))
        eks_admin_role.add_to_policy(statement.admin_statement())

        # EKS Node Role
        node_role = iam.Role(
            self, "EKSNodeRole", role_name='eks-node-role', assumed_by=iam.ServicePrincipal("eks.amazonaws.com")
        )
        node_role.add_managed_policy(iam.ManagedPolicy.from_aws_managed_policy_name("AmazonEKSClusterPolicy"))
        node_role.add_managed_policy(iam.ManagedPolicy.from_aws_managed_policy_name("AmazonEKSWorkerNodePolicy"))
        node_role.add_managed_policy(iam.ManagedPolicy.from_aws_managed_policy_name("AmazonEC2ContainerRegistryReadOnly"))
        node_role.add_managed_policy(iam.ManagedPolicy.from_aws_managed_policy_name("AmazonEKSServicePolicy"))

        # Create EKS cluster
        self.eks_cluster = eks.Cluster(
            scope=self, id='EKSDevCluster',
            vpc=eks_private_vpc,
            default_capacity=0,
            cluster_name='eks-dev',
            masters_role=eks_admin_role,
            core_dns_compute_type=eks.CoreDnsComputeType.EC2,
            version=eks.KubernetesVersion.V1_19,
            role=node_role
        )

        # Worker Role
        worker_role = iam.Role(self, "EKSWorkerRole", role_name='eks-worker-role',
                               assumed_by=iam.ServicePrincipal("ec2.amazonaws.com"))
        attached_policy = ['AmazonEC2ContainerRegistryReadOnly', 'AmazonEKSWorkerNodePolicy']
        for policy in attached_policy:
            worker_role.add_managed_policy(iam.ManagedPolicy.from_aws_managed_policy_name(policy))
        worker_role.add_to_policy(statement.eks_cni())

        ssh_worker_sg = ec2.SecurityGroup(
            self, 'EksWorkerSSHSG',
            vpc=eks_private_vpc,
            description='EKS SSH to worker nodes',
            security_group_name='eks-ssh'
        )
        ssh_worker_sg.add_ingress_rule(ec2.Peer.ipv4('10.3.0.0/16'), ec2.Port.tcp(22), "SSH Access")

        self.eks_cluster.add_nodegroup_capacity(
            id="EksNodeGroup",
            desired_size=1,
            disk_size=20,
            instance_types=[ec2.InstanceType("r5a.xlarge")],
            labels={'role': 'worker', 'type': 'stateless'},
            max_size=2,
            min_size=1,
            nodegroup_name='eks-dev-node-group',
            node_role=worker_role,
            remote_access=eks.NodegroupRemoteAccess(ssh_key_name='dev-t', source_security_groups=[ssh_worker_sg]),
            subnets=ec2.Subnetection(subnet_type=ec2.SubnetType.PRIVATE)
        )


class EksWorkerRoleStatements(object):
    def __init__(self, acc_id) -&amp;gt; None:
        self.acc_id = acc_id

    @staticmethod
    def admin_statement():
        policy_statement = iam.PolicyStatement(
            effect=iam.Effect.ALLOW,
            actions=['*'],
            resources=['*'],
            conditions={'StringEquals': {"aws:RequestedRegion": "ap-northeast-2"}}
        )
        return policy_statement

    @staticmethod
    def eks_cni():
        policy_statement = iam.PolicyStatement(
            effect=iam.Effect.ALLOW,
            actions=[
                "ec2:AssignPrivateIpAddresses",
                "ec2:AttachNetworkInterface",
                "ec2:CreateNetworkInterface",
                "ec2:DeleteNetworkInterface",
                "ec2:DescribeInstances",
                "ec2:DescribeTags",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeInstanceTypes",
                "ec2:DetachNetworkInterface",
                "ec2:ModifyNetworkInterfaceAttribute",
                "ec2:UnassignPrivateIpAddresses",
                "ec2:CreateTags"
            ],
            resources=['*'],
            conditions={'StringEquals': {"aws:RequestedRegion": "ap-northeast-2"}}
        )
        return policy_statement


class IamOICProvider(Stack):
    def __init__(self, scope: Construct, construct_id: str, eks_cluster, env, **kwargs) -&amp;gt; None:
        super().__init__(scope, construct_id, env=env, **kwargs)

        statement = EksWorkerRoleStatements(env.account)
        oidc_url = eks_cluster.cluster_open_id_connect_issuer_url
        iam_oic = iam.OpenIdConnectProvider(
            self, construct_id,
            url=oidc_url,
            client_ids=['sts.amazonaws.com']
        )
        Tags.of(iam_oic).add(key='cfn.eks-dev.stack', value='iam-pid-stack')

        oidc_provider = re.sub("https://", "", oidc_url)

        def string_like(name_space, sa_name):
            string = CfnJson(
                self, f'JsonCondition{sa_name}',
                value={
                    f'{oidc_provider}:sub': f'system:serviceaccount:{name_space}:{sa_name}',
                    f'{oidc_provider}:aud': 'sts.amazonaws.com'
                }
            )
            return string

        oic_role = iam.Role(
            self, 'EksIAMServiceAccountRole',
            role_name='sel-eks-oic-dev-sa',
            assumed_by=iam.FederatedPrincipal(
                federated=f'arn:aws:iam::{env.account}:oidc-provider/{oidc_provider}',
                conditions={'StringEquals': string_like('dev', 'sel-eks-sa')},
                assume_role_action='sts:AssumeRoleWithWebIdentity'
            )
        )

        oic_role.add_managed_policy(iam.ManagedPolicy.from_aws_managed_policy_name('AmazonS3ReadOnlyAccess'))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-iam-service-account-role-bind-with-oidc-provider"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="https://dev.toCreate-IAM-Service-Account-Role-bind-with-OIDC-provider"&gt;Create IAM Service Account Role bind with OIDC provider&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;
  &lt;a href="https://dev.to/vumdao"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S_FHbKmO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/service-account/img/oidc.jpg%3Fraw%3Dtrue"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create Service account using &lt;code&gt;CDK8S&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#!/usr/bin/env python
import os

from constructs import Construct
from cdk8s import App, Chart
from imports import k8s


class CreateNameSpace(Chart):
    def __init__(self, scope: Construct, id: str):
        super().__init__(scope, id)
        k8s.KubeNamespace(
            self, "NameSpace",
            metadata=k8s.ObjectMeta(name='dev')
        )


class ServiceAccount(Chart):
    def __init__(self, scope: Construct, id: str):
        super().__init__(scope, id, namespace='dev')
        k8s.KubeServiceAccount(
            self, "ServiceAccount",
            metadata=k8s.ObjectMeta(
                name='sel-eks-sa',
                annotations={'eks.amazonaws.com/role-arn': 'arn:aws:iam::123456789012:role/sel-eks-oic-dev-sa'}
            )
        )

app = App()
CreateNameSpace(app, "namespace")
ServiceAccount(app, 'serviceaccount')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Test: Use image &lt;code&gt;aws-cli&lt;/code&gt; to test the S3 permission as we attached &lt;code&gt;AmazonS3ReadOnlyAccess&lt;/code&gt; to the IRSA
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: aws-test
  name: aws-test
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aws-test
  template:
    metadata:
      labels:
        app: aws-test
    spec:
      containers:
        - image: mikesir87/aws-cli:v1
          name: aws-test
          command: ['sleep', '60']
      serviceAccountName: sel-eks-sa
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl exec aws-test-7d5c5b6b95-csphv -- env | grep AWS
AWS_DEFAULT_REGION=ap-northeast-2
AWS_REGION=ap-northeast-2
AWS_ROLE_ARN=arn:aws:iam::123456789012:role/eks-oic-dev-sa
AWS_WEB_IDENTITY_TOKEN_FILE=/var/run/secrets/eks.amazonaws.com/serviceaccount/token
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl exec aws-test-7d5c5b6b95-csphv -- aws s3 ls | wc -l
76
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-Conclusion"&gt;Conclusion&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Why using IAM service account instead of instance profile?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There's no global/admin-level role in the cluster that can assume any other role used by apps in the cluster! As such, you never have to worry about a misconfiguration in your cluster granting elevated access to pods.&lt;/li&gt;
&lt;li&gt;The IAM roles for service accounts feature provides the following benefits:&lt;/li&gt;
&lt;li&gt;Least privilege — By using the IAM roles for service accounts feature, you no longer need to provide extended permissions to the node IAM role so that pods on that node can call AWS APIs. You can scope IAM permissions to a service account, and only pods that use that service account have access to those permissions. This feature also eliminates the need for third-party solutions such as kiam or kube2iam.&lt;/li&gt;
&lt;li&gt;Credential isolation — A container can only retrieve credentials for the IAM role that is associated with the service account to which it belongs. A container never has access to credentials that are intended for another container that belongs to another pod.&lt;/li&gt;
&lt;li&gt;Auditability — Access and event logging is available through CloudTrail to help ensure retrospective auditing.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally you get the end but we can now sperate the roles for applications and the eks nodes, and later for more such autoscaler group service and daemonSet node.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;&lt;strong&gt;Reference:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts-technical-overview.html"&gt;https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts-technical-overview.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.github.io/aws-eks-best-practices/security/docs/iam/"&gt;https://aws.github.io/aws-eks-best-practices/security/docs/iam/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/cni-iam-role.html"&gt;https://docs.aws.amazon.com/eks/latest/userguide/cni-iam-role.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/managing-vpc-cni.html#updating-vpc-cni-eks-add-on"&gt;https://docs.aws.amazon.com/eks/latest/userguide/managing-vpc-cni.html#updating-vpc-cni-eks-add-on&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.mikesir87.io/2020/09/eks-pod-identity-webhook-deep-dive/"&gt;https://blog.mikesir87.io/2020/09/eks-pod-identity-webhook-deep-dive/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openid.net/connect/"&gt;https://openid.net/connect/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="https://dev.to/vumdao"&gt;🌠 Blog&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://github.com/vumdao/cdk8s-example"&gt;Github&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://stackoverflow.com/users/11430272/vumdao"&gt;stackoverflow&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://www.linkedin.com/in/vu-dao-9280ab43/"&gt;Linkedin&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://www.linkedin.com/groups/12488649/"&gt;Group&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://www.facebook.com/CloudOpz-104917804863956"&gt;Page&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://twitter.com/VuDao81124667"&gt;Twitter 🌠&lt;/a&gt;
&lt;/h3&gt;

</description>
      <category>aws</category>
      <category>eks</category>
      <category>k8s</category>
      <category>cloudopz</category>
    </item>
    <item>
      <title>日本で働くソフトウェアエンジニアの給与：東京で働く外人エンジニアによる究極のガイド</title>
      <author>Eric Turner</author>
      <pubDate>Sat, 05 Jun 2021 02:29:53 +0000</pubDate>
      <link>https://dev.to/etdev/-485i</link>
      <guid>https://dev.to/etdev/-485i</guid>
      <description>&lt;h2&gt;
  &lt;a href="#%E5%BA%8F%E6%96%87"&gt;
  &lt;/a&gt;
  序文
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://japan-dev.com/blog/software-developer-salaries-in-japan-the-ultimate-guide"&gt;「Software Developer Salaries in Japan: The Ultimate Guide」&lt;/a&gt;を和訳しました！直訳だと伝わりにくい部分は、本質を残しつつ新たに書き直ししましたが、ほとんど原文通りです。私の運営する&lt;a href="https://japan-dev.com"&gt;Japan Dev&lt;/a&gt;が英語話者向けのサイトなので、この記事は元々外国人に向けて執筆しました。そのため、私がこの記事を日本語に翻訳したのがなぜか、不思議に思う方もいるでしょう。&lt;/p&gt;

&lt;p&gt;まず、私がこの記事を執筆した一番の目的は、【日本で働く全てのエンジニアが正当に評価され、高い報酬を得ることが可能だという「希望」を伝える】ことです。&lt;a href="https://japan-dev.com/companies"&gt;Japan Devの会社リスト&lt;/a&gt;は外国人が働きやすい企業を紹介していますが、グローバルかつ革新的なサービスを生み出す企業で良い収入を得て働きたいと考える日本人のためのリストでもあります。&lt;/p&gt;

&lt;p&gt;日本人の皆さんにも、もし現在日本でエンジニアとして働いていて、希望が持てていなかったとしても、先進的な企業でより良い環境で働くことが可能だということを伝えたいと思います。誰でも、諦めずスキルを磨き続ければ、正当な評価をしてくれる会社がきっとあるという希望を持って欲しいと思います。日本で働く全てのエンジニアの皆さんに幸せになってもらいたいと心から思っています。そのためのヒントとしてこのブログが少しでも参考になれば私は幸せです。&lt;/p&gt;

&lt;p&gt;ーーー&lt;/p&gt;

&lt;p&gt;私は日本でソフトウェアエンジニアとして働いており、日本での生活を心から楽しんでいます。私が知っている多くのエンジニアも同じように、日本で働くことを楽しんでいると感じています。そういった幸せな日本在住の外国人エンジニアは、&lt;a href="https://japan-dev.com/companies"&gt;グローバル企業や革新的なスタートアップ&lt;/a&gt;で働いている傾向があり、グローバル基準で考えて比較的高い年収をもらいながら、最新のテクノロジーに挑戦することを楽しんでいます。&lt;/p&gt;

&lt;p&gt;しかし、オンライン上で日本のテックコミュニティを覗いてみると、多くの悪い噂があるため、私たちのような幸せな外国人ソフトウェアエンジニアが日本に存在することはあまり知られていないかもしれません。&lt;/p&gt;

&lt;p&gt;私は、日本で働くことを本当に楽しんでいるエンジニアの１人として、その事をとても残念に思います。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://japan-dev.com/blog/how-to-find-a-job-as-a-software-developer-in-japan"&gt;以前の投稿&lt;/a&gt;では、外国人が働きやすいIT企業を見つけるためのいくつかのヒントを共有しましたが、この投稿では、日本のIT業界で働くにあたり、最大の論点の1つである給与（年収）について深く掘り下げたいと思います。&lt;/p&gt;

&lt;p&gt;この記事では、職務経験ごとの適切な年収レンジを提示し、できるだけ多くのデータを用いてその根拠を示します。この記事のゴールは、この不透明で誤解されやすいトピックのデータを元に明らかにし、できれば日本でソフトウェアエンジニアとして良い給与が得られることを証明することです。&lt;/p&gt;

&lt;p&gt;以下はこのブログの目次です。ピンポイントでデータをお探しの場合はリンクから移動することができます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="#recommended-salary-ranges"&gt;日本で働く外国人のための推奨年収レンジ&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#raw-salary-data"&gt;日本にある50以上の会社のソフトウェアエンジニアの給与データ&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#%E7%9B%AE%E6%AC%A1"&gt;
  &lt;/a&gt;
  目次
&lt;/h2&gt;

&lt;p&gt;この投稿の残りの部分でカバーする内容は次のとおりです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="#average-salary"&gt;日本のIT専門職の平均給与&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#problem-with-averages"&gt;給与における「平均」の問題&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="#being-a-foreigner"&gt;日本で外国人として働くということ&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#it-industry"&gt;日本のIT業界はとてもユニークです&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;  &lt;a href="#prior-work"&gt;過去行われた、外国人開発者の年収調査について&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#recommended-salary-ranges"&gt;外国人ソフトウェアエンジニアとして日本でいくら稼ぐことができますか？&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="#recommended-new-grads"&gt;新卒エンジニア（エントリーレベル）の良い年収とは&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#recommended-mid-career"&gt;中堅エンジニアの年収とは&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#recommended-senior"&gt;シニアエンジニアの年収とは&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;  &lt;a href="#raw-salary-data"&gt;日本で働く外国人エンジニアの給与&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#trending-up"&gt;日本で働くソフトウェアエンジニアの給与は上昇傾向にあります&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="#domestic-companies"&gt;伝統的な日本企業にも変化が訪れています&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;  &lt;a href="#not-all-companies"&gt;すべてのIT企業が高待遇なわけではありません&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#do-your-research"&gt;いい会社で働くためには、まず自分自身で日本のIT企業を研究することが大事です&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#valid-option"&gt;結論：外国人ソフトウェアエンジニアが日本で働くことは、「先進的な企業」であれば、給与面から考えても、良い選択肢です&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#%E6%97%A5%E6%9C%AC%E3%81%AEit%E5%B0%82%E9%96%80%E8%81%B7%E3%81%AE%E5%B9%B3%E5%9D%87%E7%B5%A6%E4%B8%8E"&gt;
  &lt;/a&gt;
  日本のIT専門職の平均給与&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;このデータを見つけるのはそれほど難しくないはずなので、日本全体のソフトウェアエンジニアの平均給与を見てみましょう。予想通り、Googleで検索すると、日本のソフトウェアエンジニア(プログラマーやシステムエンジニアと呼ばれる職種を含む)の平均給与を記載した無数のリソースが見つかります。いくつかの例を見てみましょう。（原文が英語なので、リソースに英語圏のサービスが含まれています。）&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.glassdoor.com/Salaries/tokyo-software-engineer-salary-SRCH_IL.0,5_IM1071_KO6,23.htm"&gt;Glassdoor&lt;/a&gt;によれば、平均年収は年間570万円です。&lt;a href="https://www.payscale.com/research/JP/Job=Software_Engineer/Salary"&gt;Payscale&lt;/a&gt;によると、490万円です。日本のサービスDODAの調査によると、460万円でした。&lt;a href="https://heikinnenshu.jp/it/se.html"&gt;Heikin Nenshu&lt;/a&gt;によると、「システムエンジニア」の平均は550万円です。&lt;/p&gt;

&lt;p&gt;数値は約500万円で収束しているようです。これは全体的なキャリアレベルにおいての年収なので、新卒エンジニアの平均はより低く、より経験豊富なエンジニアはもう少しの年収であることが考えられます。&lt;/p&gt;

&lt;p&gt;総体的に、日本人および外国人を含めた日本で働くソフトウェアエンジニア全体の平均だと考えると、この値はほぼ正確であると思います。&lt;/p&gt;

&lt;p&gt;給与における「平均」の問題&lt;br&gt;
-------------&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;これらの平均データは間違っていません。しかし、外国人がそのデータを鵜呑みにしてはいけません。外国人ソフトウェアエンジニアに絞った平均給与は大分異なるためです。&lt;/p&gt;

&lt;p&gt;日本では&lt;a href="https://stats-japan.com/t/kiji/11639"&gt;48人に1人だけが外国人&lt;/a&gt;です。そして、そのほとんどが周辺のアジア諸国から来ているので、アジア圏以外から来日している外国人は、日本在住外国人の中でも、さらに稀な人材だと言えます。&lt;/p&gt;

&lt;p&gt;では外国人の中でITエンジニアとして働く人は日本にどれくらいいるのでしょうか？日本の厚生労働省における&lt;a href="https://www.mhlw.go.jp/file/04-Houdouhappyou-11655000-Shokugyouanteikyokuhakenyukiroudoutaisakubu-Gaikokujinkoyoutaisakuka/44789gr5.pdf"&gt;最近の報告書&lt;/a&gt;では、52,038人の外国人がIT業界で働いていると述べられています。日本政府による&lt;a href="https://www.meti.go.jp/policy/it_policy/jinzai/houkokusyo.pdf"&gt;別のレポート&lt;/a&gt;では、外国人と日本人全て合わせると、2019年にはIT業界全体で1,045,512人が働いています。つまり、IT業界で働く外国人の割合は、全業界における外国人比率より、少し高いということです。それでもまだ、&lt;strong&gt;わずか5％&lt;/strong&gt;ですが。&lt;/p&gt;

&lt;p&gt;この事実を踏まえると、外国人人口は、日本の平均IT給与のようなマクロレベルの統計の背後にあるデータのごく一部でしかないことは明らかです。ですから、あなたが日本人でないなら、日本の平均IT給与を参考にしてもあまり意味がないと私は考えます。これらの平均値は、外国人ソフトウェアエンジニアに直接関連するものではないため、外国人はそのデータに左右されて、日本でエンジニアとして働く選択を諦めるべきではないと思います。&lt;/p&gt;

&lt;p&gt;良くも悪くも、日本における外国人エンジニアはとてもユニークな存在なのです。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rHnNI7Ze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://japan-dev.sgp1.digitaloceanspaces.com/blog_images/salary/jon-tyson.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rHnNI7Ze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://japan-dev.sgp1.digitaloceanspaces.com/blog_images/salary/jon-tyson.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%E6%97%A5%E6%9C%AC%E3%81%A7%E5%A4%96%E5%9B%BD%E4%BA%BA%E3%81%A8%E3%81%97%E3%81%A6%E5%83%8D%E3%81%8F%E3%81%A8%E3%81%84%E3%81%86%E3%81%93%E3%81%A8"&gt;
  &lt;/a&gt;
  日本で外国人として働くということ
&lt;/h3&gt;

&lt;p&gt;日本で外国人として生きることは、あなたをユニークな存在にします。日本の平均的な外国人エンジニアは、日本人エンジニアとは異なる教育を受けており、キャリアの築き方も違います。そういった異なるバックグラウンドが給与に大きな影響を与えていると考えられます。&lt;/p&gt;

&lt;p&gt;日本の企業は、妥当な理由がなければ外国人エンジニアを雇いません。海外から人材を連れてくるということは、普通に日本人エンジニアを雇うより大きなリスクとコストを伴います。なぜなら、ビザのスポンサーシップや移住支援など追加費用が発生する可能性が高いためです。また、日本語を上手に話せない、もしくは、日本独特の文脈依存度が高いコミュニケーションを理解することは高いハードルなので、せっかくコストをかけて採用しても、日本企業になじめず、母国に戻る可能性があるためです。&lt;/p&gt;

&lt;p&gt;要するに、日本企業が外国人を雇用するには多くのリスクが存在するため、覚悟が必要です。そしてほとんどの日本企業はそのリスクを上回るような、妥当な理由がなければ外国人を積極的に採用しないでしょう。&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%E6%97%A5%E6%9C%AC%E3%81%AEit%E6%A5%AD%E7%95%8C%E3%81%AF%E3%81%A8%E3%81%A6%E3%82%82%E3%83%A6%E3%83%8B%E3%83%BC%E3%82%AF%E3%81%A7%E3%81%99"&gt;
  &lt;/a&gt;
  日本のIT業界はとてもユニークです
&lt;/h3&gt;

&lt;p&gt;日本の先進的な企業には当てはまりませんが、歴史的には日本と世界を比較すると、ソフトウェアエンジニアの仕事範囲に違いがあると思います。それは日本でソフトウェアを開発するエンジニアは、仕様通りのコードを書くことが求められる、いわゆる「SE」（システムエンジニア）と考えられ「SIers」（システムインテグレーター）のような受託開発企業で働くことが多かったためだと考えられます。多くの受託開発会社は、依頼されたシステムを仕様通り開発する下請け、またはさらにその下請けの下請といった多重下請構造の中に置かれてきました。そのような環境ではエンジニアは外注先として考えられてしまうため、裁量を持って革新的なサービスを生み出すことは非常に難しいと思います。&lt;/p&gt;

&lt;p&gt;一方、米国などのIT革新の先行国では、ITを「企業の業務効率を飛躍的に高め、より良いサービスを生み出すコアとなる大事なもの」として高く評価し、積極的にITに投資してきました。そして、ソフトウェアエンジニアはインハウスで雇用されることが多く、非常に重宝されてきました。そういった環境の中では、エンジニア自身が裁量を持って「こういうサービスを世に届けたい」という高い意識をもって開発することが可能となります。そして実際にエンジニア自らが革新的サービスを生み出すことも多くあります。&lt;/p&gt;

&lt;p&gt;このような歴史的な背景に違いがあるため、日本と諸外国では、ソフトウェアエンジニアの扱われ方、仕事の範囲に違いが生まれてきたのではないかと思います。&lt;/p&gt;

&lt;p&gt;また、日本と世界を比較すると、バックグラウンド、特に学歴が異なる傾向があります（たとえばITエンジニアのうち、インド人は72％、アメリカ人は44％がコンピューターサイエンス(CS)もしくはそれに関連した学位を取得していますが、日本人エンジニアは約&lt;a href="https://www.meiji.ac.jp/cip/english/research/opinion/Tomokazu_Hayakawa.html"&gt;23％しかCS関連の学位を持っていません&lt;/a&gt;）。米国（私の出身）では、卒業後に最高給与を得られる仕事に就くという夢を掴むためもっとも人気がある学部の１つが、コンピューターサイエンスです。日本においては、人気がないどころか、コンピューターサイエンスを学位として取得できる大学は非常に少なく、プログラミングは専門学校で学び実務に着く人が多いといった事情があります。日本には「新卒採用」という制度があり、学校卒業後一斉に就職する慣習があり、新卒の場合大卒の給与が専門学校もしくは高卒よりも高く設定されています。そのため、一般的な日本のIT企業の新卒ソフトウェアエンジニアの給与は可もなく不可もなくといったところ、大卒でない人も多い影響からか、企業によっては長時間労働で平均を下回ることもあるかと思います。このように、一般的な日本のIT企業は特別高待遇ではない傾向が高く、歴史的には、優秀な人材が目指す職種ではありませんでした。しかしながら、外国人エンジニアの皆さんは、残念に思う必要はありません。&lt;/p&gt;

&lt;p&gt;日本のIT業界は今、劇的に進化しており、エンジニアを尊重する企業が増えていること、そして総体的に外国人エンジニアは、グローバルIT企業もしくは一部の革新的なスタートアップで働くことが多く、そういった企業において日本の一般的なIT企業の年収レンジはほとんど関係なく、平均給与は高い傾向にあるためです。&lt;/p&gt;

&lt;p&gt;では、このようなバックグランドの違いは給与にどのぐらい影響を与えているのでしょうか？定量化することは非常に困難ですが、ある日本人ブロガーは、同じ技術レベルの場合、外国人エンジニアを雇うために、日本人エンジニア採用に&lt;a href="https://www.exy-jinzai.com/it-g/"&gt;必要な金額より、企業は年間100万円ほどの給与を余分に支払う&lt;/a&gt;ことを覚悟する必要があると述べています。私の周りの外国人エンジニアについて考えてみると、「同じ技術レベル」かはわかりませんが、日本の平均よりも高い年収を得ている人が多いとは感じていました。外国人エンジニアが日本で採用されるためには、企業が多くのリスクを冒しても採用したいと思うような優れた技術が必要だということを考えると、これは理にかなっていると考えます。&lt;/p&gt;

&lt;p&gt;さて、日本国全体の給与データは外国人エンジニアにはあまり関係がありません。では、外国人エンジニアに絞った平均給与を知るためにはどのようなリソースを参照すれば良いのでしょうか。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LYALYI-W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://japan-dev.sgp1.digitaloceanspaces.com/blog_images/salary/cactus.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LYALYI-W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://japan-dev.sgp1.digitaloceanspaces.com/blog_images/salary/cactus.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E9%81%8E%E5%8E%BB%E8%A1%8C%E3%82%8F%E3%82%8C%E3%81%9F%E5%A4%96%E5%9B%BD%E4%BA%BA%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E5%B9%B4%E5%8F%8E%E8%AA%BF%E6%9F%BB%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6"&gt;
  &lt;/a&gt;
  過去行われた、外国人ソフトウェアエンジニアの年収調査について&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;ソフトウェア開発者向けの外国人固有の給与データはほとんどありませんが、完全に存在しないわけではありません。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.tokyodev.com/2020/01/07/japan-developer-salaries/"&gt;TokyoDevを運営するPaul McMahon氏によるブログ&lt;/a&gt;では、外国人エンジニアだけを対象としたアンケートが公開されています。彼は、日本に住んでいる200人以上の外国人エンジニアを対象としたアンケートの結果、平均年収が400万〜1100 万円であったことを公表しています。彼はこの平均年収を経験年数とプログラミング言語別に分類しています（たとえば、GoおよびJava開発者は平均1,000万円）。彼の記事には多角的な洞察が含まれているので、ぜひ目を通すことをお勧めします。&lt;/p&gt;

&lt;p&gt;またバイリンガル人材に特化したいくつかの転職エージェントでは、日本の外国人IT専門職に関するレポートを発行しています。例えば、&lt;a href="https://www.michaelpage.co.jp/sites/michaelpage.co.jp/files/Japan-MP-Salary-Guide-English-2018_0.pdf"&gt;Michael Pageの2018年版給与ガイド&lt;/a&gt;には、Web開発者の平均年収が500万〜1500 万円（ボーナスを除く）と記載されています。同様に、&lt;a href="https://www.hays.co.jp/cs/groups/hays_common/@jp/@content/documents/digitalasset/hays_1808032.pdf"&gt;Hays 2019 Salary Guide&lt;/a&gt;は、開発者が年間500万〜1200万円の年収であったことを公表しています。&lt;/p&gt;

&lt;p&gt;また、私は長年に渡り、多くのソフトウェアエンジニア個人による給与レポートに目を通してきましたが、日本の平均給与をはるかに超えた年収が多いと感じています。一例として、台湾出身のエンジニア&lt;a href="https://juanitofatas.com/finding_jobs_in_japan"&gt;Juanito Fatas&lt;/a&gt;は、彼の周りの日本で働く外国人エンジニアのほとんどが、800万円以上を稼いでいると述べています。&lt;/p&gt;

&lt;p&gt;次のセクションでは、日本で働く外国人ソフトウェアエンジニアの給料として、「良い給与」とは一体どれくらいなのか、経験年数別で考えてみたいと思います。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fu4PQ_1j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://japan-dev.sgp1.digitaloceanspaces.com/blog_images/salary/bank-notes1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fu4PQ_1j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://japan-dev.sgp1.digitaloceanspaces.com/blog_images/salary/bank-notes1.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E6%97%A5%E6%9C%AC%E3%81%A7%E5%A4%96%E5%9B%BD%E4%BA%BA%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%A8%E3%81%97%E3%81%A6%E3%81%84%E3%81%8F%E3%82%89%E7%A8%BC%E3%81%90%E3%81%93%E3%81%A8%E3%81%8C%E3%81%A7%E3%81%8D%E3%81%BE%E3%81%99%E3%81%8B"&gt;
  &lt;/a&gt;
  日本で外国人ソフトウェアエンジニアとしていくら稼ぐことができますか？&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;まず正直に...それは環境やスキルによって大きく変動します。それは、給与に影響を与える多くの要因があるためです。ではここから、それらの要因を取り上げて、経験年数に応じて「良い」と考えられる年収レンジを提示しようと思います。&lt;/p&gt;

&lt;p&gt;給与に影響を与える大きな要因の1つは、日本語スキルです（日本語のスキルが高いほど、より多くの収入が得られる傾向が高いです）。すでに日本在住であれば、ビザの取得や日本文化に馴染めるかどうかといった企業の懸念がなくなるため、面接の機会をより多く得られるでしょう。そしてもちろん、企業が使っている技術との関連性が高いプログラミングの経験があればあるほど優遇されます。&lt;/p&gt;

&lt;p&gt;コンピュータサイエンスのIT分野の学位も役立ちますが、必ずしも必要なわけではなりません。むしろ、日本は大学教育でコンピューターサイエンスを学ぶ環境が確立していないこともあり、CS関連の学位がなく、独学で学んだ人でも優れた経験さえあれば認められやすく、活躍しやすい場所だと感じています。&lt;/p&gt;

&lt;p&gt;外資系企業はすでに成長を遂げ、十分な資金があるため日本に進出している場合が多いので、一般的に日本企業よりも高い報酬を得ることができる可能性が高いです。また、日本に限ったことではありませんが、自分自身の強みを最大限アピールし、&lt;a href="https://www.kalzumeus.com/2012/01/23/salary-negotiation/"&gt;給与交渉する&lt;/a&gt;といったソフトスキルも、得られる年収に大きな影響を与えます。&lt;/p&gt;

&lt;p&gt;上記のすべての点を考慮すると、外国人ソフトウェアエンジニアが目指すべき給与は次のとおりです。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;新卒エンジニア（エントリーレベル）の良い年収とは&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;新卒の場合、400万〜700 万円の年収であれば良い給与だと考えられます。&lt;a href="https://japan-dev.com/companies/indeed"&gt;Indeed&lt;/a&gt;のようなトップ企業は、新卒であっても約1,000万円またはそれ以上支払うことができますが、そのような企業は特別な存在です。その他の外国人が働きやすい企業（つまり、&lt;a href="https://japan-dev.com/companies"&gt;Japan Devで紹介している企業&lt;/a&gt;）は、数年未満の浅い経験であれば、400万〜700 万円のうち前半が多いでしょう。&lt;/p&gt;

&lt;p&gt;新卒者が気をつけるべきこととして、経験がない、もしくは経験が浅い外国人エンジニアを海外から連れてくることは日本企業にとってリスクが高く、突き抜けて優秀な大学のCS学位保持者などでない限り、積極採用したいという日本企業はまだ少ないということです。ですから、まだ海外に住んでいて、上記の年収レンジでオファーが得られない場合は、日本への移住を延期し、代わりに母国でソフトウェアエンジニアとしての経験を積むことをお勧めします。日本にはいつでも来れますから。&lt;/p&gt;

&lt;p&gt;ところで、ブートキャンプの卒業生（またはブートキャンプへの参加を検討している方）のための給与データも存在します。Code Chrysalisの共同設立者であるYan Fanは、&lt;a href="https://codechrysalis.io/"&gt;Code Chrysalis&lt;/a&gt;の卒業生は平均600万円稼いでおり、&lt;a href="https://old.reddit.com/r/japanlife/comments/ajjo9p/the_average_salary_for_a_junior_dev_is_6_m_is/eewo9wk/"&gt;400万円後半から700万円以上までの年収レンジ&lt;/a&gt;が多いと述べています。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;中堅エンジニアの年収とは&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;中堅レベルのソフトウェアエンジニア（2〜5年の経験）は、600万〜1200 万円ほど稼げれば良い年収だといえます。繰り返しになりますが、&lt;a href="https://japan-dev.com/companies/google"&gt;Google&lt;/a&gt;や&lt;a href="https://japan-dev.com/companies/indeed"&gt;Indeed&lt;/a&gt;のような一部の大企業はより多く支払うことができますが、その他ほとんどの企業はこのぐらいのレンジでしょう。&lt;a href="https://japan-dev.com/jobs"&gt;Japan Devで紹介する企業&lt;/a&gt;のほとんどもこれに当てはまりますので、もしそのぐらいの年収を目指している方がいれば、Japan Devをみると選択肢が広がるかと思います。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;シニアエンジニアの年収とは&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;日本のシニアレベルのソフトウェアエンジニア（6〜10年以上の経験）は、800万〜1500 万円の年収を得ることができれば良い年収といえるでしょう。しかし、並外れたスキルを持つシニアエンジニアの最高年収はもっと高くなります。何度も同じ会社を例に上げることは憚られますが、私は実際に&lt;a href="https://japan-dev.com/companies/google"&gt;Google&lt;/a&gt;で3000万円以上（賞与含む）稼ぐエンジニアや、&lt;a href="https://japan-dev.com/companies/indeed"&gt;Indeed&lt;/a&gt;で2240万円の基本年収（株やボーナスを考慮に入れるとおそらくGoogleに近い年収でしょう）を稼ぐプリンシパルエンジニアを知っています。 Japan Devに掲載する企業の多くは、並外れた高いスキルを持つエンジニアに対して、平均年収を大幅に上回る報酬を支払う可能性が高いです。(特に、Japan Devの&lt;a href="https://japan-dev.com/companies"&gt;会社リスト&lt;/a&gt;の一番上に近いもの）&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e1oN9axz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://japan-dev.sgp1.digitaloceanspaces.com/blog_images/salary/bank-notes2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e1oN9axz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://japan-dev.sgp1.digitaloceanspaces.com/blog_images/salary/bank-notes2.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E6%97%A5%E6%9C%AC%E3%81%A7%E5%83%8D%E3%81%8F%E5%A4%96%E5%9B%BD%E4%BA%BA%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E7%B5%A6%E4%B8%8E"&gt;
  &lt;/a&gt;
  日本で働く外国人エンジニアの給与
&lt;/h2&gt;

&lt;p&gt;私はキャリアレベル別の良い年収をデータと共に提示しましたが、もしその給与に納得ができなくても、非難はしません。私はただ日本に興味のあるエンジニアの皆さんにとって、希望となり参考となる事実を紹介することで、日本で働くためのより良い求職活動のサポートをしたいと思っています。ここから先は、以下60を超える給与データのリソース（英語と日本語の混合）をご紹介します。これによって、私が共有した「良い年収」というものが、実際に達成可能であることを示したいと思います。これらすべてにボーナスや株式のインセンティブが含まれているわけではないこと、そして多くが日本人ソフトウェアエンジニアを対象としていることにご留意ください。&lt;/p&gt;

&lt;p&gt;※データの対象は、すべてソフトウェアエンジニアまたは同様のもの（バックエンド、フロントエンド、開発者、iOS / Android、ML、データサイエンスなど）です。詳細について興味がある方は、リンクをご覧ください。&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%E4%BC%9A%E7%A4%BE%E3%81%AE%E5%85%AC%E5%BC%8F%E6%8E%A1%E7%94%A8%E3%83%9A%E3%83%BC%E3%82%B8"&gt;
  &lt;/a&gt;
  会社の公式採用ページ
&lt;/h3&gt;

&lt;p&gt;多くの場合、企業公式の採用サイトが提示している給与データが最良のソースです。データポイントの例を次に示します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.indeed.jobs/career/JobDetail/Full-Stack-Software-Engineer/6840"&gt;Indeed&lt;/a&gt;（インディード）: 960万〜2200万円&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.fastretailing.com/employment/ja/fastretailing/jp/career/it/joblist/detail/?id=850"&gt;Fast Retailing&lt;/a&gt;（ファーストリテイリング）: 580万〜1500万円&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.bebit.co.jp/english/career/software-engineer.html"&gt;beBit&lt;/a&gt;（ビービット）：600万〜1200万円&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://jobs.lever.co/kaizenplatform?by=team"&gt;Kaizen Platform&lt;/a&gt;（カイゼンプラットフォーム）：500万〜1,000万円&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;検索すると、他にもたくさんの例があります。&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#findy%E3%83%95%E3%82%A1%E3%82%A4%E3%83%B3%E3%83%87%E3%82%A3"&gt;
  &lt;/a&gt;
  Findy（ファインディ）
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://findy-code.io/"&gt;Findy&lt;/a&gt;は日本人エンジニアに人気のある求人サイトです。Githubのプロフィールを分析することで、評価と想定される年収を提示してくれます。私は72のスコアを獲得しました。これは想定年収が810万〜910万円に相当し、Githubを改善することで100万〜200万円増やすことができるそうです。仕事のオファーのリストを見ると、あまりデータを公開していない会社の年収レンジがいくつ手に入りました。下記はその例です; これらは、パーソナライズされたデータであるためリンクできませんが、&lt;a href="https://findy-code.io/"&gt;Findyにアカウントを作成する&lt;/a&gt;と似たような結果が表示されるでしょう：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Ubie（ユービー）：600万〜1200万円&lt;/li&gt;
&lt;li&gt;  Medley（メドレー）：600万〜1500万円&lt;/li&gt;
&lt;li&gt;  Medpeer（メドピア）：500万〜1,000万円&lt;/li&gt;
&lt;li&gt;  Repro（リプロ）：540万から1200万円&lt;/li&gt;
&lt;li&gt;  Squeeze（スクイーズ）：600万〜1200万円&lt;/li&gt;
&lt;li&gt;  SmartDrive（スマートドライブ）：600万〜1000万円&lt;/li&gt;
&lt;li&gt;  Raksul（ラクスル）：700万〜900万円&lt;/li&gt;
&lt;li&gt;  Biztex（ビズテックス ）：600万〜900万円&lt;/li&gt;
&lt;li&gt;  Microsoft（マイクロソフト）：650万円以上&lt;/li&gt;
&lt;li&gt;  MNTSTQ（モンテスキュー）：650万〜1000万円&lt;/li&gt;
&lt;li&gt;  Freee（フリー）：500万〜1200万円&lt;/li&gt;
&lt;li&gt;  SmartHR（スマートHR）：500万〜1千万円&lt;/li&gt;
&lt;li&gt;  Speee（スピー）：550万-1千万円&lt;/li&gt;
&lt;li&gt;  Open8（オープンエイト）：650万-1200万円&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この辺りで終わりにしておきますが、Findyにはもっと多くの年収データが存在します。&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%E8%BB%A2%E8%81%B7%E3%83%89%E3%83%A9%E3%83%95%E3%83%88"&gt;
  &lt;/a&gt;
  転職ドラフト
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://job-draft.jp/"&gt;転職ドラフト&lt;/a&gt;は外国人コミュニティではあまり知られていないかもしれません。日本のサイトであり、無料のアカウントを作成する必要がありますが、日本で最も有名な数百のハイテク企業の給与データの宝庫です。一部のトップ企業の年収レンジは次のとおりです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://job-draft.jp/companies/1148"&gt;Merpay&lt;/a&gt;（メルペイ）：780万-1130万円&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://job-draft.jp/companies/890"&gt;LINE&lt;/a&gt;（ライン）：810万〜1300万円&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://job-draft.jp/companies/36"&gt;Recruit Lifestyle&lt;/a&gt;（リクルートライフスタイル）：600万〜1,000万円&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://job-draft.jp/companies/755"&gt;Recruit Marketing Partners&lt;/a&gt;（リクルートマーケティングパートナーズ）：650万〜900万円&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://job-draft.jp/companies/34"&gt;Speee&lt;/a&gt;（スピー）：550万〜1500万円&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://job-draft.jp/companies/1205"&gt;DMM.com&lt;/a&gt;（ディエムエム）：700〜1千万円&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://job-draft.jp/companies/890"&gt;LINE&lt;/a&gt;（ライン）：650万〜1300万円&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://job-draft.jp/companies/168"&gt;Cookpad&lt;/a&gt;（クックパッド）：1000万円&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://job-draft.jp/companies/1211"&gt;LayerX&lt;/a&gt;（レイヤーエックス）：600万-950万円&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://job-draft.jp/companies/264"&gt;Yappli&lt;/a&gt;（ヤプリ）：450万〜1千万円&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://job-draft.jp/companies/232"&gt;Works Applications&lt;/a&gt;（ワークスアプリケーションズ）：600万〜900万円&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://job-draft.jp/companies/54"&gt;Toreta&lt;/a&gt;（トレタ）：480万〜1千万円&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://job-draft.jp/companies/18"&gt;FreakOut&lt;/a&gt;（フリークアウト・ホールディングス）：500万〜1千万円&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ここにリストされているすべての企業が外国人雇用に積極的というわけではありませんが、日本で働くソフトウェアエンジニアの給与が、多くの人が考えるよりも高いという私の主張を理解する助けになることを願っています。&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#openwork%E3%82%AA%E3%83%BC%E3%83%97%E3%83%B3%E3%83%AF%E3%83%BC%E3%82%AF"&gt;
  &lt;/a&gt;
  OpenWork（オープンワーク）
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://vorkers.com/"&gt;OpenWork&lt;/a&gt;（改名前：Vorkers）は「Glassdoor」のような国内版口コミサイトで、日本で最大の給与データベースの1つです。このデータにアクセスするには月額料金を支払う、もしくは勤務経験のある会社のレビューを書く必要があります。また、ITに特化したものではなく、日本のユーザーを対象としているため、外国人を対象としたデータでないことに注意が必要です。そうであっても有用なリソースとなる可能性があります。&lt;/p&gt;

&lt;p&gt;Webサイトのコンテンツがアカウント作成済みユーザーのみアクセス可能なため、データを直接リンクすることはできませんが、いくつかのデータポイントを引用します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Google（グーグル）：1700万円&lt;/li&gt;
&lt;li&gt;  Microsoft（マイクロソフト）：1400万円&lt;/li&gt;
&lt;li&gt;  Amazon（AWS）：1300万円&lt;/li&gt;
&lt;li&gt;  Mercari（メルカリ）：1100万円&lt;/li&gt;
&lt;li&gt;  LINE（ライン）：890万円&lt;/li&gt;
&lt;li&gt;  Voyage Group（ボヤージュグループ）：1000万円&lt;/li&gt;
&lt;li&gt;  VMWare（ブイエムウェア）：1000万円&lt;/li&gt;
&lt;li&gt;  Goldman Sachs（ゴールドマン・サックス）：1500万円&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これらは口コミによるもので、公式の数値ではないことに注意してください。ここでは、可能性を示すために、より高い年収の一部を厳選しています。それでも、データのほとんどは日本のエンジニアからのものであり、さらに高所得者は口コミで給与を公開することが少ないと考えられるので、このデータは実際に実現可能な年収より低いことが考えられます。&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tokyodev%E3%83%88%E3%83%BC%E3%82%AD%E3%83%A7%E3%83%BC%E3%83%87%E3%83%96"&gt;
  &lt;/a&gt;
  TokyoDev（トーキョーデブ）
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.tokyodev.com/"&gt;TokyoDev&lt;/a&gt;のすべてのジョブが給与データを記載しているわけではありませんが、このサイトは外国エンジニアに焦点を当てているため、外国人に特化したデータが手に入ります。Tokyo Devが紹介する求人のほとんどが海外在住でも応募可能で、日本語を必要としません。&lt;/p&gt;

&lt;p&gt;データポイントの例：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.tokyodev.com/jobs/chomp-ruby-on-rails-engineer/"&gt;Chomp&lt;/a&gt;（チャンプ）：500万〜900万円＋ストックオプション&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.tokyodev.com/jobs/degica-ruby-developer-payments/"&gt;Degica&lt;/a&gt;（デジカ）：600万〜1000万円&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#stackoverflow-jobs%E3%82%B9%E3%82%BF%E3%83%83%E3%82%AF%E3%82%AA%E3%83%BC%E3%83%90%E3%83%BC%E3%83%95%E3%83%AD%E3%83%BC%E3%80%80%E3%82%B8%E3%83%A7%E3%83%96%E3%82%BA"&gt;
  &lt;/a&gt;
  Stackoverflow Jobs（スタックオーバーフロー　ジョブズ）
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://stackoverflow.com/jobs"&gt;Stackoverflow Jobs&lt;/a&gt;は、グローバル企業からの求人をメインで紹介しているため、ここで示す給与レンジのほとんどが、英語話者のエンジニアに関してのデータといえます。データポイントの例を次に示します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://stackoverflow.com/jobs/291980/backend-java-software-engineer-paypay-corporation?so=i&amp;amp;pg=1&amp;amp;offset=0&amp;amp;so_medium=Internal&amp;amp;so_source=JobSearch&amp;amp;q=paypay"&gt;PayPay&lt;/a&gt;（ペイペイ）：620万〜1200万円&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#levelsfyi"&gt;
  &lt;/a&gt;
  Levels.fyi
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.levels.fyi/"&gt;Levels.fyi&lt;/a&gt;はGlassdoorに似ています。Googleのような大規模な外資系企業にとっては優れたリソースであり、そのデータは中小企業に限定されています。日本（または東京）を検索して、日本固有のデータポイントまでデータポイントをフィルタリングできます。以下にいくつかのデータポイントを示します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.levels.fyi/salary/Indeed/"&gt;Indeed&lt;/a&gt;（インディード）：1070万〜2000万円&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.levels.fyi/salary/Google/"&gt;Google&lt;/a&gt;（グーグル）：890万〜1700万円&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.levels.fyi/salary/Microsoft/"&gt;Microsoft&lt;/a&gt;（マイクロソフト）：890万〜1700万円&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.levels.fyi/offer.html?entry=9523"&gt;nVidia&lt;/a&gt;（エヌビディア）：1000万円&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.levels.fyi/offer.html?entry=13778"&gt;Rakuten&lt;/a&gt;（楽天）：750万円&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#mp-digital-tech"&gt;
  &lt;/a&gt;
  MP Digital Tech
&lt;/h3&gt;

&lt;p&gt;このサイトは最近更新されていませんが、いくつかの有名な会社の貴重な年収データが掲載されていたので、その例を挙げます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Rakuten（楽天）：600万〜1100万円&lt;/li&gt;
&lt;li&gt;  Mercari（メルカリ）：800万〜1500万円&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#forkwell-jobs%E3%83%95%E3%82%A9%E3%83%BC%E3%82%AF%E3%82%A6%E3%82%A7%E3%83%AB%E3%80%80%E3%82%B8%E3%83%A7%E3%83%96%E3%82%BA"&gt;
  &lt;/a&gt;
  Forkwell Jobs（フォークウェル　ジョブズ）
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://jobs.forkwell.com/en/"&gt;Forkwell Jobs&lt;/a&gt;は、日本のサイトですが、日本企業の年収レンジが多く載っています。特に、スタートアップに焦点を当てています。いくつかのデータポイント：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://jobs.forkwell.com/smartnews/jobs/330"&gt;SmartNews&lt;/a&gt;（スマートニュース）：480〜1200万円&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://jobs.forkwell.com/en/raksul/jobs/4978"&gt;RakSul&lt;/a&gt;（ラクスル）：450〜900万円&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://jobs.forkwell.com/en/rakuten/jobs/2189"&gt;Rakuten&lt;/a&gt;（楽天）：400万〜1千万円&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#%E5%80%8B%E4%BA%BA%E3%81%AB%E3%82%88%E3%82%8B%E3%83%96%E3%83%AD%E3%82%B0"&gt;
  &lt;/a&gt;
  個人によるブログ
&lt;/h3&gt;

&lt;p&gt;本当に熱心に給与データをリサーチする場合、個人によるブログは、優れたリソースになります。ツイッターの詳細検索を活用することをお勧めします（日本語が読めることは、ここで間違いなく役立ちます）。たとえば、[「ITエンジニアの平均給与ランキング」]((&lt;a href="http://nomad-salaryman.com/it-engineer-salary#ITTOP20)%E3%81%AB%E3%81%AF%E4%BB%A5%E4%B8%8B%E3%81%AE%E3%83%87%E3%83%BC%E3%82%BF%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88%E3%81%8C%E5%90%AB%E3%81%BE%E3%82%8C%E3%81%A6%E3%81%84%E3%81%BE%E3%81%97%E3%81%9F%E3%80%82"&gt;http://nomad-salaryman.com/it-engineer-salary#ITTOP20)には以下のデータポイントが含まれていました。&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Recruit（リクルート）：970万円&lt;/li&gt;
&lt;li&gt;  GMO Click Holdings（GMOクリックホールディングス）：850万円&lt;/li&gt;
&lt;li&gt;  CyberAgent（サイバーエージェント）：770万円&lt;/li&gt;
&lt;li&gt;  DeNA（ディー・エヌ・エー）：760万円&lt;/li&gt;
&lt;li&gt;  Gree（グリー）：750万円&lt;/li&gt;
&lt;li&gt;  M3（エムスリー）：730万円&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;IT界隈で注目を浴びた[「Googleを辞めます」]((&lt;a href="https://note.mu/xyx/n/n5d612396ed8f)%E3%81%A8%E3%81%84%E3%81%86%E3%83%96%E3%83%AD%E3%82%B0%E3%81%A7%E3%81%AF%E3%80%81%E6%9D%B1%E4%BA%AC%E3%81%AE%E5%85%83Google%E7%A4%BE%E5%93%A1%E3%81%8B%E3%82%89%E3%81%8C%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E7%B5%A6%E4%B8%8E%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E3%81%AE%E6%83%85%E5%A0%B1%E3%82%92%E5%85%B1%E6%9C%89%E3%81%97%E3%81%A6%E3%81%8F%E3%82%8C%E3%81%BE%E3%81%97%E3%81%9F%E3%80%82%E8%91%97%E8%80%85%E3%81%AFGoogle%E3%81%A7%E3%81%A9%E3%81%AE%E3%82%88%E3%81%86%E3%81%AB2,000%E4%B8%87%E5%86%86%E3%82%92%E7%A8%BC%E3%81%84%E3%81%A0%E3%81%8B%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E8%AA%9E%E3%82%8A%E3%80%81%E3%81%93%E3%81%AE%E3%81%90%E3%82%89%E3%81%84%E3%81%AE%E5%B9%B4%E5%8F%8E%E3%82%92%E5%BE%97%E3%82%8B%E3%81%93%E3%81%A8%E3%81%8C%E3%81%8C%E6%97%A5%E6%9C%AC%E3%81%A7%E5%8F%AF%E8%83%BD%E3%81%A7%E3%81%82%E3%82%8B%E3%81%93%E3%81%A8%E3%82%92%E3%80%81%E5%A4%9A%E3%81%8F%E3%81%AE%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AB%E7%9F%A5%E3%81%A3%E3%81%A6%E3%82%82%E3%82%89%E3%81%84%E3%80%81%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%A8%E3%81%97%E3%81%A6%E6%97%A5%E6%9C%AC%E3%81%A7%E5%83%8D%E3%81%8F%E3%81%93%E3%81%A8%E3%81%AB%E5%B8%8C%E6%9C%9B%E3%82%92%E6%8C%81%E3%81%A3%E3%81%A6%E6%AC%B2%E3%81%97%E3%81%84%E3%81%A8%E3%81%84%E3%81%86%E6%80%9D%E3%81%84%E3%81%A7%E5%85%AC%E9%96%8B%E3%81%97%E3%81%9F%E3%81%9D%E3%81%86%E3%81%A7%E3%81%99%E3%80%82"&gt;https://note.mu/xyx/n/n5d612396ed8f)というブログでは、東京の元Google社員からがエンジニアの給与についての情報を共有してくれました。著者はGoogleでどのように2,000万円を稼いだかについて語り、このぐらいの年収を得ることがが日本で可能であることを、多くのエンジニアに知ってもらい、エンジニアとして日本で働くことに希望を持って欲しいという思いで公開したそうです。&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#glassdoor%E3%82%B0%E3%83%A9%E3%82%B9%E3%83%89%E3%82%A2"&gt;
  &lt;/a&gt;
  Glassdoor（グラスドア）
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://glassdoor.com"&gt;Glassdoor&lt;/a&gt;は、掲載されている企業は大企業中心ですが、口コミ情報が非常に多く、給与情報も多く寄せられています。関係のない条件を除きより的確な情報を得るために、場所によるフィルタリングを必ず行ってください。&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#jobtalk%E3%82%B8%E3%83%A7%E3%83%96%E3%83%88%E3%83%BC%E3%82%AF"&gt;
  &lt;/a&gt;
  Jobtalk（ジョブトーク）
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://jobtalk.jp/"&gt;Jobtalk&lt;/a&gt;では、すべてのデータを見るにはアカウントが必要ですが、サインアップしなくても、多くのデータポイントを見つけることができます。例えば：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://jobtalk.jp/companies/4415222"&gt;SmartNews&lt;/a&gt;（スマートニュース）: 900万円&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#%E3%82%AB%E3%82%A4%E3%82%B7%E3%83%A3%E3%81%AE%E8%A9%95%E5%88%A4"&gt;
  &lt;/a&gt;
  カイシャの評判
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://en-hyouban.com/"&gt;カイシャの評判&lt;/a&gt;は多くの有用なデータがある日本企業の口コミサイトですが、エンジニアを対象にしていないため、データにはかなりのノイズがあるため、注意しなくてはいけません。次に例を示します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://en-hyouban.com/company/10200118252/report/#report01"&gt;Fast Retailing&lt;/a&gt;（ファーストリテイリング）：950万円&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://en-hyouban.com/company/10200118252/report/#report01"&gt;SmartNews&lt;/a&gt;（スマートニュース）：1050万円&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上、今まで紹介させていただいたデータはあくまでそういった事実があるという参考にすぎませんが、日本で働くソフトウェアエンジニアとして良い年収を得ることが可能だという私の主張の根拠を裏付けるデータであると考えます。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gV3GRoXJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://japan-dev.sgp1.digitaloceanspaces.com/blog_images/salary/money.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gV3GRoXJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://japan-dev.sgp1.digitaloceanspaces.com/blog_images/salary/money.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E6%97%A5%E6%9C%AC%E3%81%A7%E5%83%8D%E3%81%8F%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E7%B5%A6%E4%B8%8E%E3%81%AF%E4%B8%8A%E6%98%87%E5%82%BE%E5%90%91%E3%81%AB%E3%81%82%E3%82%8A%E3%81%BE%E3%81%99"&gt;
  &lt;/a&gt;
  日本で働くエンジニアの給与は上昇傾向にあります
&lt;/h2&gt;

&lt;p&gt;もしかすると平均的な日本のIT企業は外国人ユーザーにとって、特別魅力的ではないかもしれません。しかし私は昨今の日本のIT業界は良い方向に向かっていると、とてもポジティブに捉えています。私は2013年から日本でエンジニアとして働いていますが、その間、テクノロジー業界は急速に発展し、スタートアップ経済圏は急速に拡大していると実感しています。そして、私自身が経験と知識を得ることで年収を上げてきたこともあり、若干の主観も入っているかもしれませんが、日本で働くエンジニアの給与が以前より相対的に高くなっていると思います。&lt;/p&gt;

&lt;p&gt;日本での&lt;a href="https://www.meti.go.jp/policy/it_policy/jinzai/houkokusyo.pdf"&gt;エンジニア需要はこれまでになく高く&lt;/a&gt;、需要と供給のギャップは少なくとも今後10年ほどは益々拡大し続けると予測されています。それに伴い、企業が優れたエンジニアの獲得に必死になっているため、引き続きエンジニアの給与は上昇していくと予想されます。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1lpXyNKY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://japan-dev.sgp1.digitaloceanspaces.com/blog_images/salary_guide/japan_developer_deficit.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1lpXyNKY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://japan-dev.sgp1.digitaloceanspaces.com/blog_images/salary_guide/japan_developer_deficit.png" alt="Japan software developer deficit"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;日本におけるソフトウェアエンジニア不足&lt;/p&gt;

&lt;p&gt;上記のグラフは、約30万人のソフトウェアエンジニアが日本で不足するとの予想を示しており、今後数年間にわたって不足人数は毎年増加すると予想されています。これは重要な指標です。 日本には、開発者を直接雇用するのではなく、受託開発会社にシステム開発を丸投げしてきた長い歴史がありますが、より多くの企業がエンジニア採用を増やしているという事実は、企業がソフトウェア開発をより真剣に受け止め、企業内でエンジニアが専門家としてより評価されるようになってきていることを示しています。エンジニアを重宝する企業が増えることで、企業内エンジニアの数も増加していくことが見込まれます。&lt;/p&gt;

&lt;p&gt;以上のグラフからもわかるように、熟練したスキルを持ったソフトウェアエンジニアの需要が高いことは明らかであり、その結果、外国人エンジニアコミュニティが急速に拡大しています。例えば、日本においてブートキャンプはほとんど知られていない存在でしたが、ここ3〜4年で、一気に存在感を増しました（グローバルなブートキャンプでは&lt;a href="https://www.lewagon.com/"&gt;Le Wagon&lt;/a&gt;、&lt;a href="https://www.codechrysalis.io/"&gt;CodeChrysalis&lt;/a&gt;などが今勢いがあると思います）。&lt;a href="https://japan-dev.com"&gt;Japan Dev&lt;/a&gt;、&lt;a href="https://tokyodev.com"&gt;TokyoDev&lt;/a&gt;、&lt;a href="https://tokyotech.com"&gt;TokyoTech&lt;/a&gt;などのような英語中心の外国人コミュニティはより注目されるようになり、ミートアップコミュニティはとても活気づいており、東京ではほぼ毎晩テック関連のイベントが開催されています。&lt;/p&gt;

&lt;p&gt;このような外国人によるテックコミュニティの成長がすべて、日本で働く外国人ソフトウェアエンジニアの給与の増加につながると信じています。&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E4%BC%9D%E7%B5%B1%E7%9A%84%E3%81%AA%E6%97%A5%E6%9C%AC%E4%BC%81%E6%A5%AD%E3%81%AB%E3%82%82%E5%A4%89%E5%8C%96%E3%81%8C%E8%A8%AA%E3%82%8C%E3%81%A6%E3%81%84%E3%81%BE%E3%81%99"&gt;
  &lt;/a&gt;
  伝統的な日本企業にも変化が訪れています
&lt;/h2&gt;

&lt;p&gt;スタートアップの増加に加えて、かなり多くの日本の大手IT企業も、エンジニアの給与引き上げに向けて前進しています。多くの老舗IT企業には年功序列に基づいた厳格な給与レンジや昇給制度がありましたが（日本では一般的でした）それらを廃止し、新卒でも優秀であれば高い給与を得ることができるといった実力主義に基づいた給与構造に移行してきています。例えば、&lt;a href="https://www.bigdata-navi.com/aidrops/1570/"&gt;SONY（ソニー）、NEC（エヌ・イー・シー）、DeNA（ディー・エヌ・エー）など&lt;/a&gt;の大手企業では、AIエンジニアの新卒給与を大幅に上げており、 AIのような先進技術に大きな投資をしています。（AIエンジニアは新卒であっても優秀であれば、年収1,000万円以上稼ぐことが可能です）。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.itmedia.co.jp/news/articles/1911/11/news073.html"&gt;富士通もAIに全力を注いでおり&lt;/a&gt;、優秀なAIエンジニアであれば、年収が最高3000万〜4000万円まで引き上げること発表しました。こういった日本の大手IT企業の動きは、日本のIT業界全体の給与が上昇していることを示す、明確な兆候です。&lt;/p&gt;

&lt;p&gt;スタートアップでもいくつかのトップ企業は、新卒採用から、世界の優秀な人材の獲得に力を入れています。たとえば、Mercari（メルカリ）、TRI-AD（トヨタ・リサーチ・インスティテュート / Toyota Research Institute）、SoftBank（ソフトバンク）などの企業は、世界的IT大企業のトップを続々と輩出しているインドのトップ大学、IITキャンパスでの採用に力を入れ始めています。すでにMicrosoft（マイクロソフト）やUber（ウーバー）など巨大グローバルIT企業がトップエンジニア獲得のため、積極的にIIT卒業者を採用していますが、日本企業がこのグローバル人材獲得競争に参加し始めたことから、日本企業が今後の成長を見据え、世界の優秀な人材を獲得することを重要視していることが考えられます。 100％正直に申し上げると、多くの伝統的日本企業は、平均レベルの外国人エンジニアを積極採用していないと思いますが、そういった日本企業も今後は外国人エンジニアの力が必要だと気づき始め、人種に捉われない優秀な人材の獲得を目指していくことを心から願っています。&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E3%81%99%E3%81%B9%E3%81%A6%E3%81%AEit%E4%BC%81%E6%A5%AD%E3%81%8C%E9%AB%98%E5%BE%85%E9%81%87%E3%81%AA%E3%82%8F%E3%81%91%E3%81%A7%E3%81%AF%E3%81%82%E3%82%8A%E3%81%BE%E3%81%9B%E3%82%93"&gt;
  &lt;/a&gt;
  すべてのIT企業が高待遇なわけではありません
&lt;/h2&gt;

&lt;p&gt;正直なところ、すべての日本のIT企業が本ブログで提示したような高い給与を支払うことができるわけではありません。実際、大半の企業はできないでしょう。事実、先進的なグローバル企業よりもはるかに多く日本伝統的な企業が存在するからです。ですので、このブログで示した年収データは先進的なIT企業に限ったものとなります。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://japan-dev.com"&gt;Japan Devの会社リスト&lt;/a&gt;は、日本にある外国人が働きやすいトップIT企業だけを選別した包括的な優良企業リストであり、私自身が外国人として良い職場を見つけることに苦労してきた経験から、外国人エンジニア達にはもっと効率よく網羅的かつ客観的な情報を取得でき、共有しあえる場を提供したいと考えスタートしました。外国人が働きやすい先進的なIT企業は少なくとも日本国内に100社ほどあり、上記で紹介した年収レンジは、ほとんどすべての企業に当てはまります。&lt;/p&gt;

&lt;p&gt;個人的には、約100社ほどの優れた企業があれば、外国人エンジニアが日本で働くことを十分選択肢として検討できると考えています。特に、異国で生活し、言語を学ぶといった、文化的経験を得ることを大切にしている人たちにとっては。しかし、先進的な企業からオファーを獲得できなければ、エンジニアとして働くために日本に来ることはあまりお勧めできません。&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E3%81%84%E3%81%84%E4%BC%9A%E7%A4%BE%E3%81%A7%E5%83%8D%E3%81%8F%E3%81%9F%E3%82%81%E3%81%AB%E3%81%AF%E3%81%BE%E3%81%9A%E8%87%AA%E5%88%86%E8%87%AA%E8%BA%AB%E3%81%A7%E6%97%A5%E6%9C%AC%E3%81%AEit%E4%BC%81%E6%A5%AD%E3%82%92%E7%A0%94%E7%A9%B6%E3%81%99%E3%82%8B%E3%81%93%E3%81%A8%E3%81%8C%E5%A4%A7%E4%BA%8B%E3%81%A7%E3%81%99"&gt;
  &lt;/a&gt;
  いい会社で働くためには、まず自分自身で日本のIT企業を研究することが大事です
&lt;/h2&gt;

&lt;p&gt;もし日本の企業について自分自身で研究し知見を高め、日本で仕事を見つけるための&lt;a href="https://japan-dev.com/blog/how-to-find-a-job-as-a-software-developer-in-japan"&gt;ベストプラクティス&lt;/a&gt;を実行しても、まだ低い年収のジョブオファーしか獲得できなかった場合は、日本に来ることは良い選択肢ではないかもしれません。日本には数千のIT企業があるため、あなたのスキルレベルがまだ未熟であったとしても、沢山応募し続ければ、標準以下の待遇の企業で良いのであれば、おそらく1つや2つのオファーを得ることができると思いますが、そういった妥協をすることはあまりお勧めしません。&lt;/p&gt;

&lt;p&gt;私の経験則は次のとおりです。経験が浅いエンジニアであっても少なくとも年収400万〜500万円程度のジョブオファーを得られない場合は、日本へ来ることを避けた方が良いかと思います。なぜなら、先のデータで示したように、この金額は先進的な企業で働く、ソフトウェアエンジニアの年収としてほとんど底辺と考えられるためです。この年収を下回るということは、企業がエンジニアを大切にしないカルチャーである可能性が急激に高まります。そのため、時代遅れの技術を使用し汎用的なスキルの向上ができなかったり、長時間労働など、日本企業が生み出してきたネガティブなイメージを体現するような働き方をしなければならない可能性があります。&lt;/p&gt;

&lt;p&gt;もしあなたが一刻も早く日本に来たいため、とにかくどんな仕事のオファーでも受けたいのであれば、もちろん否定はしません。しかし、せっかく日本に興味があったのにも関わらず、来日してから苦労し、日本に失望してしまうことは避けて欲しいと思います。日本に対して悲しいギャップを感じないためにも、平均以下の年収のジョブオファーしか得られない場合は、母国に滞在して、そこでエンジニアとしてさらに経験を積むか、日本語を向上させて、1、2年後にもう一度挑戦した方が良い仕事のオファーを得ることができ、日本で幸せな生活が送れると思います。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r6sICFQY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://japan-dev.sgp1.digitaloceanspaces.com/blog_images/salary/mug.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r6sICFQY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://japan-dev.sgp1.digitaloceanspaces.com/blog_images/salary/mug.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E7%B5%90%E8%AB%96%E5%A4%96%E5%9B%BD%E4%BA%BA%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%8C%E6%97%A5%E6%9C%AC%E3%81%A7%E5%83%8D%E3%81%8F%E3%81%93%E3%81%A8%E3%81%AF%E5%85%88%E9%80%B2%E7%9A%84%E3%81%AA%E4%BC%81%E6%A5%AD%E3%81%A7%E3%81%82%E3%82%8C%E3%81%B0%E7%B5%A6%E4%B8%8E%E9%9D%A2%E3%81%8B%E3%82%89%E8%80%83%E3%81%88%E3%81%A6%E3%82%82%E8%89%AF%E3%81%84%E9%81%B8%E6%8A%9E%E8%82%A2%E3%81%A7%E3%81%99"&gt;
  &lt;/a&gt;
  結論：外国人ソフトウェアエンジニアが日本で働くことは、「先進的な企業」であれば、給与面から考えても、良い選択肢です
&lt;/h2&gt;

&lt;p&gt;日本では外国人ソフトウェアエンジニアとして高い給与の仕事を見つけることができます。そのためには、入念な調査が必要であり、外国人エンジニアの市場レートに見合う年収を支払うことができる、良い会社を選択する必要があります。私は身を以てこれを経験しています。私は、日本でエンジニアとして働くことのネガティブなイメージばかりが先行してしまい、3K労働（きつい、汚い、危険）や過労死といった言葉が一人歩きしてしまっていることを非常に残念に思っています。そして、革新的でエンジニアを尊重する企業が日本に存在するにも関わらず、この過度に誇張されたネガティブな働き方のイメージによって、良い企業の存在がグローバルに活躍するエンジニア達に伝わりにくくなっていることに危機感を持っています。そのため、私の使命は日本のIT業界の事実に基づいたポジティブな側面をきちんと、何度でも伝えていくことだと強く思っています。&lt;/p&gt;

&lt;p&gt;私は、オンライン上で日本のネガティブなイメージ先行の記事を読んだことで、日本という国、文化に興味がありこの国での生活を経験してみたいと考えていた外国人達が来日を断念してしまうのを、とても悲しく思います。そして、彼らに日本で働くことに希望があることを伝えたいと強く願い、このブログを執筆することにしました。日本で働く全てのソフトウェアエンジニアが高い年収を得られるわけではないことは紛れもない事実です。しかしそんなことは関係ありません。なぜなら、あなたに必要なのはあなたに最適なたった１つの仕事だからです。日本の多くの「平均的な」ITの仕事が魅力的でないと感じているのだとしたら、それはそれで構いません。そして、あなたはそのような日本の平均的な年収レンジの仕事に就く必要はありません。いや、むしろ、そんなことはしないで欲しいと思います。あなたが平均以上のスキルを持っているのであれば、それを正当に評価してくれる会社はきっと日本にありますから。&lt;/p&gt;

</description>
      <category>japanese</category>
      <category>career</category>
      <category>salary</category>
      <category>japan</category>
    </item>
    <item>
      <title>Django Signals</title>
      <author>Kritebh Lagan Bibhakar</author>
      <pubDate>Sat, 05 Jun 2021 02:13:46 +0000</pubDate>
      <link>https://dev.to/kritebh/django-signals-3i92</link>
      <guid>https://dev.to/kritebh/django-signals-3i92</guid>
      <description>&lt;p&gt;Signal is one of the useful feature provided by Django, so let's talk about it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is Signal&lt;/li&gt;
&lt;li&gt;How to use Built-in Signal&lt;/li&gt;
&lt;li&gt;How to create a custom one&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-is-signal"&gt;
  &lt;/a&gt;
  What is Signal
&lt;/h3&gt;

&lt;p&gt;Yes, it is the same as you are thinking, as its name suggests "Signal" gives notification to a sender at a specific event.&lt;br&gt;
Let's say you want to get notified every time a guest visited your house.&lt;/p&gt;

&lt;p&gt;You can set up a doorbell which will give you a signal that someone has arrived.&lt;/p&gt;

&lt;p&gt;Django Signals works in the same manner whenever some event happens it sends a signal to do some defined task.&lt;br&gt;
So you can use Signal when many codes are interested in a particular event.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#builtin-signals"&gt;
  &lt;/a&gt;
  Built-in Signals
&lt;/h3&gt;

&lt;p&gt;There are awesome Built-in signals available which you can easily use.&lt;br&gt;
Let's say I want to do something before an instance saved in my Post model.&lt;br&gt;
First of all, I will create a Post model and then import a signal i.e. "pre_save"&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;My models.py files will look like this -
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db.models.signals&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pre_save&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;post_save&lt;/span&gt;  &lt;span class="c1"&gt;#Inbuilt Signals
# Create your models here.
&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__str__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;save_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Pre save"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;pre_save&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;save_post&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# This will trigger after the saving data into Post model
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So when I save something in Post model I get the message "Pre Save"&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v5FFzUvf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ieldpu2xah7fp6jqwa1o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v5FFzUvf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ieldpu2xah7fp6jqwa1o.png" alt="pre_save django signals"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Similarly you can do something after saving an instance using post_save signals.&lt;/p&gt;

&lt;p&gt;Simple...&lt;/p&gt;

&lt;p&gt;Here is the list for all &lt;a href="https://docs.djangoproject.com/en/3.2/ref/signals/"&gt;Built-in Django Signals&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;There is another famous one request_finished which you can use after a request is finished.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#custom-signals"&gt;
  &lt;/a&gt;
  Custom Signals
&lt;/h3&gt;

&lt;p&gt;So far so good but how we can create a custom one.&lt;/p&gt;

&lt;p&gt;wherever you want to use signals you have to import signals and receiver.&lt;/p&gt;

&lt;p&gt;Then create an object of Signals class and then define a sender and receiver.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;views.py file
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;HttpResponse&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.signals&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;request_finished&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.dispatch&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;receiver&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Signal&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Post&lt;/span&gt;

&lt;span class="c1"&gt;# Create your views here.
&lt;/span&gt;&lt;span class="n"&gt;time_stamp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Signal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;providing_args&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'timestamp'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;home&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;time_stamp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;timestamp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"30/05/2021"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Home Page"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;## Custom Signal
&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;receiver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time_stamp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;own_track&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://i.giphy.com/media/zcCGBRQshGdt6/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/zcCGBRQshGdt6/giphy.gif" alt="Easy"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, if you have any suggestions or feedback let me know in the comment.&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

&lt;p&gt;Cover Image - Photo by &lt;a href="https://unsplash.com/@mero_dnt?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Chinh Le Duc&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/signal?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>django</category>
      <category>python</category>
    </item>
    <item>
      <title>La Cheat Sheet complète de Python</title>
      <author> </author>
      <pubDate>Sat, 05 Jun 2021 01:46:55 +0000</pubDate>
      <link>https://dev.to/love_python/la-cheat-sheet-complete-de-python-521p</link>
      <guid>https://dev.to/love_python/la-cheat-sheet-complete-de-python-521p</guid>
      <description>&lt;p&gt;&lt;a href="https://twitter.com/_LovePython"&gt;Suivez-moi sur Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Voici ma CheatSheet complète de Python. Si vous avez des questions ou recommendations n'hésitez pas.&lt;/p&gt;

&lt;p&gt;Convention d'appellation&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Le nom des variables s'écrivent en minuscule_snake
&lt;/span&gt;&lt;span class="n"&gt;first_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Mike'&lt;/span&gt;

&lt;span class="c1"&gt;# Les classes et modules s'écrivent en CamelCase
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;InvoiceDetail&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="c1"&gt;# Les constantes s'écrivent en majuscule
&lt;/span&gt;&lt;span class="n"&gt;MAX_USER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; 

&lt;span class="c1"&gt;# Indentation : 4 espaces
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'hello'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Type de variable&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Mike'&lt;/span&gt; &lt;span class="c1"&gt;# Chaîne
&lt;/span&gt;&lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt; &lt;span class="c1"&gt;# Numérique entier
&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;199.99&lt;/span&gt; &lt;span class="c1"&gt;# Numérique avec décimal
&lt;/span&gt;&lt;span class="n"&gt;is_active&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt; &lt;span class="c1"&gt;# Boolean
&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'red'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'green'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'blue'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# Liste
&lt;/span&gt;&lt;span class="n"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'iPad Pro'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'price'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;199.99&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;# Dictionnaire
&lt;/span&gt;&lt;span class="n"&gt;MAX_USER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="c1"&gt;# Constante
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Conversion entre les types&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Le typage en Python est strict
&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"50"&lt;/span&gt; &lt;span class="c1"&gt;# Retourne un erreur
&lt;/span&gt;
&lt;span class="c1"&gt;# Convertir une chaîne en nombre entier 
&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"50"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 100
&lt;/span&gt;
&lt;span class="c1"&gt;# Convertir un nombre en chaîne de caractères
&lt;/span&gt;&lt;span class="n"&gt;my_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;199.99&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="c1"&gt;# "199.99"
&lt;/span&gt;
&lt;span class="c1"&gt;# Convertir une chaîne en nombre décimal
&lt;/span&gt;&lt;span class="n"&gt;my_number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'21.99'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 21.99
&lt;/span&gt;
&lt;span class="c1"&gt;# Obtenir le type de variable
&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# &amp;lt;class 'str'&amp;gt;
&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# &amp;lt;class 'float'&amp;gt;
&lt;/span&gt;
&lt;span class="c1"&gt;# Vérifier si la chaîne est un nombre
&lt;/span&gt;&lt;span class="n"&gt;isdigit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'8'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# True
&lt;/span&gt;
&lt;span class="c1"&gt;# Vérifier le type de variable
&lt;/span&gt;&lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# True
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Chaînes de caractères&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Declaration
&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Mike'&lt;/span&gt;
&lt;span class="c1"&gt;# ou
&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Mike"&lt;/span&gt;
&lt;span class="c1"&gt;# ou
&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"""Ceci est une chaîne
 de caractère 
multi-lignes"""&lt;/span&gt;

&lt;span class="c1"&gt;# Caractères spéciaux. Ex: \n = Saut de ligne
&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Hello &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;World"&lt;/span&gt;

&lt;span class="c1"&gt;# Les chaîne 'raw' ignore les caractères spéciaux
&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s"&gt;"https:\\example.com\index.html"&lt;/span&gt;

&lt;span class="c1"&gt;# Convertir en minuscule
&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# mike
&lt;/span&gt;
&lt;span class="c1"&gt;# Convertir en majuscule
&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# MIKE
&lt;/span&gt;
&lt;span class="c1"&gt;# Convertir la première lettre en majuscule
&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# Mike
&lt;/span&gt;
&lt;span class="c1"&gt;# Convertir la première lettre de chaque mots en majuscule
&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'mike taylor'&lt;/span&gt;
&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# Mike Taylor
&lt;/span&gt;
&lt;span class="c1"&gt;# Utilisation des méthodes à la chaîne (Une après l'autre)
&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'MIKE'&lt;/span&gt;
&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# Mike
&lt;/span&gt;
&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Mike'&lt;/span&gt;

&lt;span class="c1"&gt;# Vérifier si commence par une chaîne spécifique ?
&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'M'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# true
&lt;/span&gt;
&lt;span class="c1"&gt;# Vérifier si se termine par une chaîne spécifique ?
&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;endswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'ke'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# true
&lt;/span&gt;
&lt;span class="c1"&gt;# Renvois le nombre de caractère
&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 4
&lt;/span&gt;
&lt;span class="c1"&gt;# Concaténation de chaine de caractère
&lt;/span&gt;&lt;span class="n"&gt;full_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;first_name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;' '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;last_name&lt;/span&gt;

&lt;span class="c1"&gt;# Les chaînes formatés, remplacent le contenu des expressions entre les {} par leur valeur.
&lt;/span&gt;&lt;span class="n"&gt;full_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;last_name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;

&lt;span class="c1"&gt;# Enlève les espaces blanc au début et à la fin
&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;' this is a text with white space '&lt;/span&gt;
&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 

&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Mike'&lt;/span&gt;
&lt;span class="c1"&gt;# Retourne le premier caractère
&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# M
&lt;/span&gt;
&lt;span class="c1"&gt;# Retourne le dernier caractère
&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# e
&lt;/span&gt;
&lt;span class="c1"&gt;# Retourne une chaîne partiel
&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# ik
&lt;/span&gt;
&lt;span class="c1"&gt;# Remplace une partie de la chaîne par une autre chaîne
&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'M'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'P'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Pike
&lt;/span&gt;
&lt;span class="c1"&gt;# Trouve une chaîne dans la chaîne (retourne la # de la position ou -1 si pas trouvé)
&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'k'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 2
&lt;/span&gt;
&lt;span class="c1"&gt;# Convertir une liste en chaîne de caractères
&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'red'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'green'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'blue'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="s"&gt;', '&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 'red, green, blue'
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fonctions communes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Imprimer dans la console
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Hello World'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Impression multiple
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Hello'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'World'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Hello World
&lt;/span&gt;
&lt;span class="c1"&gt;# Impression multiple
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="s"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# ----------
&lt;/span&gt;
&lt;span class="c1"&gt;# Imprimer le contenu de la variable formaté
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pprint&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pprint&lt;/span&gt;
&lt;span class="n"&gt;pprint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Saisir un entrée fait par le clavier
&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'What is your name? '&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Aléatoire (entre 0 et 1)
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt; 
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;# 0.26230234411558273
&lt;/span&gt;
&lt;span class="c1"&gt;# Aléatoire entre x et y
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# 5
&lt;/span&gt;
&lt;span class="c1"&gt;# Arrondir
&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;4.5&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# 5
&lt;/span&gt;
&lt;span class="c1"&gt;# Arrondir avec précision décimal
&lt;/span&gt;&lt;span class="n"&gt;solution&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;12.9582&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 12.96
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Exécution conditionnel&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'x is 4'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'x is between 6 and 10'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'x is 5 or greater than 10'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Retourne True si contenu dans la liste 
&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'red'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'green'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'blue'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'yellow'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;'blue'&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="c1"&gt;# Retourne False si PAS contenu dans la liste 
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;'white'&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="c1"&gt;# Opérateur Ternary
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'y = 10'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'y != 10'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 

&lt;span class="c1"&gt;# Opérateur Ternary (version courte)
&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Valid'&lt;/span&gt;
&lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;is_valid&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s"&gt;"Not valid"&lt;/span&gt; 

&lt;span class="c1"&gt;# Expression Falsy, retourne toujours False
&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="c1"&gt;# Expression Truthy, retourne toujours True
&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;zero&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; 

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Execution des boucles&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Boucle sur une liste
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Boucle avec un index
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Intervalle
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;  &lt;span class="c1"&gt;#0..9
&lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="c1"&gt;#5..9
&lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Boucle: While loop
&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# exit loop
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="c1"&gt;# Jump to next while
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;continue&lt;/span&gt;

    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="c1"&gt;# Boucle: For loop (dictionnaire)
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;my_dict&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# List comprehension: 
# values = [(expression) for (value) in (collection)]
&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# List comprehension avec conditionnel
# values = [expression for value in collection if condition]
&lt;/span&gt;&lt;span class="n"&gt;even_squares&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;List et Tuple&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Créer une liste
&lt;/span&gt;&lt;span class="n"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'orange'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'apple'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'melon'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Ajouter à une Liste
&lt;/span&gt;&lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'banana'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Retourne le nombre d'élément dans une liste
&lt;/span&gt;&lt;span class="n"&gt;nb_items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Supprimer l'élément no x
&lt;/span&gt;&lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;   &lt;span class="c1"&gt;# supprime 'apple'
&lt;/span&gt;
&lt;span class="c1"&gt;# Accès directe à partir d'une position x
&lt;/span&gt;&lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="c1"&gt;# premier item
&lt;/span&gt;&lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# desnier item
&lt;/span&gt;
&lt;span class="c1"&gt;# Retoune une partie d'une liste: my_list[start:finish:step] 
&lt;/span&gt;&lt;span class="n"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="c1"&gt;# premier 3 items
&lt;/span&gt;&lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;  &lt;span class="c1"&gt;# dernier 2 items
&lt;/span&gt;&lt;span class="n"&gt;copy_fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;[:]&lt;/span&gt; &lt;span class="c1"&gt;# copie la liste
&lt;/span&gt;
&lt;span class="c1"&gt;# Retourne une list inversé
&lt;/span&gt;&lt;span class="n"&gt;revserve_fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;#Créer une list à partir d'une chaîne de caractères
&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'red, green, blue'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;', '&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Concatenation de deux listes
&lt;/span&gt;&lt;span class="n"&gt;color1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'red'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'blue'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;color2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'green'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'yellow'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;color3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;color1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;color2&lt;/span&gt;

&lt;span class="c1"&gt;# Concatenation de deux listes en utilisant la technique 'unpacking'
&lt;/span&gt;&lt;span class="n"&gt;color3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;color1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;color2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Assignation multiple
&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'iPhone'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;599&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;#Créer une liste de type TUPLE (lecture seul)
&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'red'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'green'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'blue'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Trier une liste
&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# ['blue', 'green', 'red']
&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# ['red', 'green', 'blue']
&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# ['red', 'blue', 'green']
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Dictionnaire&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Créer une dictionnaire (vide)
&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="c1"&gt;# Créer une dictionnaire avec clé et valeur
&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'iPadPro'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Accès au dictionnaire par une clé
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;# iPadPro
&lt;/span&gt;
&lt;span class="c1"&gt;# Accès au dictionnaire avec fonction 'get'
&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Si clé existe pas alors retourne 'None'
&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'default value'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Si clé existe pas alors retourne une valeur par défaut
&lt;/span&gt;
&lt;span class="c1"&gt;# Adding a new key/value
&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'description'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Modern mobile device"&lt;/span&gt;

&lt;span class="c1"&gt;# Obtenir une liste des clés d'un dictionnaire
&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# ['id', 'name', 'description']
&lt;/span&gt;
&lt;span class="c1"&gt;# Obtenir une liste des valeurs d'un dictionnaire
&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# ['100', 'iPadPro', 'Modern mobile device']
&lt;/span&gt;
&lt;span class="c1"&gt;# Créer une liste de dictionnaire
&lt;/span&gt;&lt;span class="n"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'iPadPro'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'iPhone 12'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Charger'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Accès à une liste de dictionnaire
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;# Charger
&lt;/span&gt;
&lt;span class="c1"&gt;# Recherche dans une liste de dictionnaire
&lt;/span&gt;&lt;span class="n"&gt;items_match&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# [{'id': 300, 'name': 'Charger'}]
&lt;/span&gt;
&lt;span class="c1"&gt;# Somme dans une liste de dictionnaire
&lt;/span&gt;&lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'price'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fonctions&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Créer une fonction
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;say_hello&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Hello World'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Fonction avec arguments (et valeur par défaut)
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;say_hello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'no name'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Hello &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 

&lt;span class="c1"&gt;# Fonction avec arguments (et valeur optionnel)
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;say_hello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Hello &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Hello World'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Appel d'une fonction
&lt;/span&gt;&lt;span class="n"&gt;say_hello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Mike'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Hello Mike
&lt;/span&gt;
&lt;span class="c1"&gt;# Appel d'une fonction avec un argument nommé
&lt;/span&gt;&lt;span class="n"&gt;say_hello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Mike'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 

&lt;span class="c1"&gt;# Fonction retournant une valeur
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt;

&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 30
&lt;/span&gt;
&lt;span class="c1"&gt;# Fonction avec un nombres indéterminé d'arguments (*args)
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;say_hello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Hello &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Fonction avec un nombres indéterminé d'arguments de type keyword (**kwargs)
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;say_hello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'age'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;say_hello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Mike'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Fonction Lambda (syntax abbrégé)
&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# 30
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Date et heure&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timedelta&lt;/span&gt;

&lt;span class="c1"&gt;# Retourne la date et l'heure courante
&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# Créer un object date et time courant
&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2020&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Dec 31 2020
&lt;/span&gt;
&lt;span class="c1"&gt;# Addition de date et d'heure (weeks, days, hours, minutes, seconds) 
&lt;/span&gt;&lt;span class="n"&gt;new_year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;days&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Jan 1 2021
&lt;/span&gt;
&lt;span class="c1"&gt;# Convertir une date en chaîne de caractère
&lt;/span&gt;&lt;span class="n"&gt;new_year&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'%Y/%m/%d %H %M %S'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 2021/01/01 00 00 00 
&lt;/span&gt;&lt;span class="n"&gt;new_year&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'%A, %b %d'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Friday, Jan 01
&lt;/span&gt;
&lt;span class="c1"&gt;# Extraire l'année et le mois d'une date
&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new_year&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="c1"&gt;# 2021
&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new_year&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt; &lt;span class="c1"&gt;# 01
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Gestion des fichiers&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Lecture d'un fichier
&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'demo.txt'&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Écriture d'un fichier
&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'settings.txt'&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'w'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"MAX_USER = 100"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Est-ce que le fichier existe?
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;
&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'templates/index.html'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# True/False
&lt;/span&gt;
&lt;span class="c1"&gt;# Exportation en CSV
&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;csv&lt;/span&gt;
&lt;span class="n"&gt;csv_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'export.csv'&lt;/span&gt;
&lt;span class="n"&gt;csv_columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# ['id', 'name']
&lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csv_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'w'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;csvfile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;writer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DictWriter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csvfile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fieldnames&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;csv_columns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;writer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writeheader&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;writer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writerow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Gestion des exceptions et erreurs&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;age_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Your age? '&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;age_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Please enter a numeric value"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Your age is saved!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Programmation orienté objet&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Créer une classe
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="c1"&gt;# Créer un attribue
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;nb_products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nb_products&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 0
&lt;/span&gt;
&lt;span class="c1"&gt;# Créer un nouvel instance
&lt;/span&gt;&lt;span class="n"&gt;product_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# Créer un attribue d'instance
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;

&lt;span class="c1"&gt;# Créer un instance avec des attribues
&lt;/span&gt;&lt;span class="n"&gt;product_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'iPadPro'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;699.99&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;product_2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'iPhone12'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;799.99&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;product_1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# iPadPro
&lt;/span&gt;
&lt;span class="c1"&gt;# Créer un méthode sur l'instance
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;display_price&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Price : &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;product_1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display_price&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="c1"&gt;# Méthode de classe
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# ... 
&lt;/span&gt;    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="nb"&gt;classmethod&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_default&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# Créer une instance 
&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Product'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# nom par défaut, prix par défaux
&lt;/span&gt;
&lt;span class="n"&gt;product_3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_default&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 

&lt;span class="c1"&gt;# Méthode statique
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# ... 
&lt;/span&gt;    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="nb"&gt;staticmethod&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;trunc_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nb_char&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;nb_char&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;'...'&lt;/span&gt; 

&lt;span class="n"&gt;product_3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;trunc_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'This is a blog'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# This i... 
&lt;/span&gt;
&lt;span class="c1"&gt;# Héritage
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;WebProduct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;web_code&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;web_code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;web_code&lt;/span&gt;

&lt;span class="c1"&gt;# Convention de nom pour variable d'instance 
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;

&lt;span class="c1"&gt;# Getter et setter
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="nb"&gt;property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;price&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__price&lt;/span&gt;

    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setter&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;price&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;

&lt;span class="c1"&gt;# Mixins
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Mixin1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;"Mixin1"&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Mixin2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;"Mixin2"&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Mixin2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Mixin1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BaseClass&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MyClass&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# Mixin2
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Si vous aimez ce genre de post et vous aimeriez en lire d'autre, suivez-moi sur dev.to ou &lt;a href="https://twitter.com/_LovePython"&gt;suivez-moi sur Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>french</category>
      <category>python</category>
      <category>django</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
