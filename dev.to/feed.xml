<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Keep track of your books üìöusing this template</title>
      <author>Sarthak Sharma</author>
      <pubDate>Fri, 09 Jul 2021 11:38:12 +0000</pubDate>
      <link>https://dev.to/xenoxdev/keep-track-of-your-books-using-this-template-4m14</link>
      <guid>https://dev.to/xenoxdev/keep-track-of-your-books-using-this-template-4m14</guid>
      <description>&lt;p&gt;Hey folks üëãüèº&lt;/p&gt;

&lt;p&gt;We just launched another Product on Product Hunt. It's a notion template that lets you keep track of all your awesome books in one place. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#notion-library-template"&gt;
  &lt;/a&gt;
  Notion Library Template
&lt;/h3&gt;

&lt;p&gt;In this template you can write summaries, prioritize text, remember your favorites, and make reading productive - like never before.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/UUrIxYcX5As"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#track-your-books"&gt;
  &lt;/a&gt;
  Track your books
&lt;/h3&gt;

&lt;p&gt;Got the reading bug? This feature-rich Notion template lets you keep track of all your awesome books in one place. Write summaries, prioritize text, remember your favorites, and make reading productive - like never before.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7sZGOfED--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a4ckrt2jaxskocyrzp5q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7sZGOfED--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a4ckrt2jaxskocyrzp5q.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#save-and-organize-books"&gt;
  &lt;/a&gt;
  Save and organize books
&lt;/h3&gt;

&lt;p&gt;You can save your books in a section and add descriptions and genres so that you have an easier time accessing them according to your mood.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---RxVBD_X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og9y1jnjqoqfb9c3d12s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---RxVBD_X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og9y1jnjqoqfb9c3d12s.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mark-books-as-favorite"&gt;
  &lt;/a&gt;
  Mark books as favorite
&lt;/h3&gt;

&lt;p&gt;You can mark your book as favorite So that you can track your reading pattern and understand what genre among books you really like the best&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k0xPXkqa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/96lewr08dctocliane0z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k0xPXkqa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/96lewr08dctocliane0z.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#archive-books"&gt;
  &lt;/a&gt;
  Archive books
&lt;/h3&gt;

&lt;p&gt;Remove from sight the books you have already finished reading, but still keep them safe if you ever want to access them later.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sort-books-by-language"&gt;
  &lt;/a&gt;
  Sort books by language
&lt;/h3&gt;

&lt;p&gt;What better way to learn languages than by reading interesting books? Easily arrange your books according to language and access your books faster.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eh-Ly2QQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u25ysl6i1h5knjtei47q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eh-Ly2QQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u25ysl6i1h5knjtei47q.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sort-books-by-status"&gt;
  &lt;/a&gt;
  Sort books by status
&lt;/h3&gt;

&lt;p&gt;Reading 10 books at a time? Always know where you left off with the in-built status tracker.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#view-owned-books"&gt;
  &lt;/a&gt;
  View owned books
&lt;/h3&gt;

&lt;p&gt;Rented a book or bought one? Keep rented ones on priority, read them faster, and save money!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-dictionary-of-unfamiliar-words"&gt;
  &lt;/a&gt;
  A dictionary of unfamiliar words
&lt;/h3&gt;

&lt;p&gt;This amazing feature is especially for those who're learning a new language. Sharpen your vocabulary while reading through juicy chapters!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l0FQTCCe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ckxdjpok9m8i3ig3wuxu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l0FQTCCe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ckxdjpok9m8i3ig3wuxu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rate-books"&gt;
  &lt;/a&gt;
  Rate books
&lt;/h3&gt;

&lt;p&gt;Sort out which authors seem to tickle your funny bone better than the rest! Being a book critic was never easier!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-summaries"&gt;
  &lt;/a&gt;
  Add summaries
&lt;/h3&gt;

&lt;p&gt;Reading for a school project or a work-related presentation? Create summaries and refresh key points at a glance. Brush up on a topic any time you want.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#crossplatform-syncs"&gt;
  &lt;/a&gt;
  Cross-platform syncs
&lt;/h3&gt;

&lt;p&gt;Sync your books with other third-party apps that you use to track your book reading progress. This library really is all-in-one!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#want-one"&gt;
  &lt;/a&gt;
  Want One?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/cIW1XzYs2fYK5EneDA/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/cIW1XzYs2fYK5EneDA/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;&lt;em&gt;Here is your link&lt;/em&gt;&lt;/strong&gt; üëâ &lt;a href="https://prototion.com/notion-dashboard/Notion-Library-5A7h4Lk3yuL08kuA"&gt;&lt;strong&gt;&lt;em&gt;Notion Library&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are on Producthunt today. Go show some love hereüî•&lt;br&gt;
&lt;a href="https://www.producthunt.com/posts/notion-library-2"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---t4FGDZp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fnm5lk4b4doswq9a2iey.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Let's build an Android Quiz Application with Appwrite</title>
      <author>Damodar Lohani</author>
      <pubDate>Fri, 09 Jul 2021 11:20:45 +0000</pubDate>
      <link>https://dev.to/appwrite/let-s-build-an-android-quiz-application-with-appwrite-3kn1</link>
      <guid>https://dev.to/appwrite/let-s-build-an-android-quiz-application-with-appwrite-3kn1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-appwrite"&gt;
  &lt;/a&gt;
  ü§î What is Appwrite?
&lt;/h2&gt;

&lt;p&gt;In case you‚Äôre new to Appwrite, Appwrite is an new open-source, end-to-end, backend server for front-end and mobile developers that allows you to build apps much faster. Its goal is to abstract and simplify common development tasks behind REST APIs and tools, helping you to build advanced apps faster.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#appwrite-for-android"&gt;
  &lt;/a&gt;
  ü§ñ Appwrite for Android
&lt;/h2&gt;

&lt;p&gt;Appwrite provides &lt;strong&gt;sleek REST APIs&lt;/strong&gt; for various common features that are required for mobile application development such as a &lt;strong&gt;database&lt;/strong&gt;, &lt;strong&gt;storage&lt;/strong&gt;, &lt;strong&gt;cloud functions&lt;/strong&gt;, &lt;strong&gt;authentication&lt;/strong&gt; etc. so that we as a developer can focus on our application rather than on backend implementation. This makes Appwrite very suitable for those of us who want to build Android applications. And with the latest release, Appwrite now has an &lt;strong&gt;official Android SDK&lt;/strong&gt; to make it even easier to use Appwrite in our Android applications. In this tutorial we'll build a simple android quiz application using Appwrite. So let's get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  üìù Prerequisites
&lt;/h2&gt;

&lt;p&gt;In order to continue with this tutorial, you need to have an Appwrite console that you can access and have permission to create a project or already have an existing project. If you have not already installed Appwrite, please do so. Installing Appwrite is really simple following Appwrite's official &lt;a href="https://appwrite.io/docs/installation"&gt;installation docs&lt;/a&gt;. Installation should be done in less than 2 minutes. Once installed login to your console and &lt;strong&gt;create a new Project&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup-database"&gt;
  &lt;/a&gt;
  üíæ Setup Database
&lt;/h2&gt;

&lt;p&gt;In the Appwrite console, let's select the project that we will be using for our Android app. If you don't have a project yet, you can easily create one by clicking on the &lt;strong&gt;Create Project&lt;/strong&gt; button. Once inside, select &lt;strong&gt;Database&lt;/strong&gt; from the left sidebar. Once on the database page click on the &lt;strong&gt;Add Collection&lt;/strong&gt; button and inside the dialog set the collection name to &lt;strong&gt;Questions&lt;/strong&gt; and then click the &lt;strong&gt;Create&lt;/strong&gt; button. This will then create a collection and you will be redirected to the new collection's page where we can define rules for our collection. Define the following rules and click on the &lt;strong&gt;Update&lt;/strong&gt; button.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Question&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;label: Question&lt;/li&gt;
&lt;li&gt;Key: question&lt;/li&gt;
&lt;li&gt;Rule Type: Text&lt;/li&gt;
&lt;li&gt;Required: true&lt;/li&gt;
&lt;li&gt;Array: false&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Options&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;label: Options&lt;/li&gt;
&lt;li&gt;Key: options&lt;/li&gt;
&lt;li&gt;Rule Type: Text&lt;/li&gt;
&lt;li&gt;Required: true&lt;/li&gt;
&lt;li&gt;Array: true&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Answer&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;label: Answer&lt;/li&gt;
&lt;li&gt;Key: answer&lt;/li&gt;
&lt;li&gt;Rule Type: Text&lt;/li&gt;
&lt;li&gt;Required: true&lt;/li&gt;
&lt;li&gt;Array: false&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_2NDuDuU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rliaqicn2z3b43afm2b1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_2NDuDuU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rliaqicn2z3b43afm2b1.png" alt="Questions Collection"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you can navigate to the &lt;strong&gt;Documents&lt;/strong&gt; tab and using the &lt;strong&gt;Add Document&lt;/strong&gt; button, add as many questions with options and answers as you like for your quiz application. Make sure to add a few questions so that we can easily fetch and build our quiz application in Android.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup-android-project-and-dependencies"&gt;
  &lt;/a&gt;
  ‚öôÔ∏è Setup Android Project and Dependencies
&lt;/h2&gt;

&lt;p&gt;Using Android Studio, create a new Android Application project choosing the &lt;strong&gt;Empty Activity&lt;/strong&gt; template. Once the project is created, in your app's root level &lt;code&gt;build.gradle(.kts)&lt;/code&gt; file,  add the &lt;code&gt;mavenCentral()&lt;/code&gt; repository in order to fetch the Appwrite Android SDK.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight groovy"&gt;&lt;code&gt;&lt;span class="n"&gt;repositories&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;      
    &lt;span class="n"&gt;mavenCentral&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, add the dependency to your app's &lt;code&gt;build.gradle(.kts)&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight groovy"&gt;&lt;code&gt;&lt;span class="n"&gt;implementation&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"io.appwrite:sdk-for-android:0.1.0"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#%EF%B8%8F-add-android-platform"&gt;
  &lt;/a&gt;
  ‚ûïÔ∏è Add Android Platform
&lt;/h2&gt;

&lt;p&gt;To initialize your SDK and start interacting with Appwrite services, you need to add a new Android platform to your project. To add a new platform, go to your Appwrite console, select your project (create one if you haven't already), and click the 'Add Platform' button on the project Dashboard.&lt;/p&gt;

&lt;p&gt;From the options, choose to add a new Android platform and add your app credentials.&lt;/p&gt;

&lt;p&gt;Add your app name and package name. Your package name is generally the &lt;code&gt;applicationId&lt;/code&gt; in your app-level &lt;code&gt;build.gradle&lt;/code&gt; file. You may also find your package name in your &lt;code&gt;AndroidManifest.xml&lt;/code&gt; file. By registering a new platform, you are allowing your app to communicate with the Appwrite API.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#build-activity-and-layout"&gt;
  &lt;/a&gt;
  ‚öíÔ∏è Build Activity and Layout
&lt;/h2&gt;

&lt;p&gt;Add new activity by going to &lt;code&gt;File&amp;gt;New&amp;gt;Activity&amp;gt;Empty Activity&lt;/code&gt; and name it &lt;strong&gt;QuizActivity&lt;/strong&gt;. This will create &lt;code&gt;QuizActivity.kt&lt;/code&gt; and &lt;code&gt;activity_quiz.xml&lt;/code&gt; files in their respective folders.&lt;/p&gt;

&lt;p&gt;Now, open your &lt;code&gt;app/src/main/res/layout/activity_main.xml&lt;/code&gt; and update the layout as following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;androidx.constraintlayout.widget.ConstraintLayout&lt;/span&gt; &lt;span class="na"&gt;xmlns:android=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res/android"&lt;/span&gt;
    &lt;span class="na"&gt;xmlns:app=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res-auto"&lt;/span&gt;
    &lt;span class="na"&gt;xmlns:tools=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/tools"&lt;/span&gt;
    &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
    &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
    &lt;span class="na"&gt;android:background=&lt;/span&gt;&lt;span class="s"&gt;"@color/darkslategray"&lt;/span&gt;
    &lt;span class="na"&gt;tools:context=&lt;/span&gt;&lt;span class="s"&gt;".MainActivity"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;TextView&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_marginBottom=&lt;/span&gt;&lt;span class="s"&gt;"16dp"&lt;/span&gt;
        &lt;span class="na"&gt;android:fontFamily=&lt;/span&gt;&lt;span class="s"&gt;"sans-serif-medium"&lt;/span&gt;
        &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Demo Quiz With Android"&lt;/span&gt;
        &lt;span class="na"&gt;android:textColor=&lt;/span&gt;&lt;span class="s"&gt;"@color/darkgray"&lt;/span&gt;
        &lt;span class="na"&gt;android:textSize=&lt;/span&gt;&lt;span class="s"&gt;"24sp"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintBottom_toTopOf=&lt;/span&gt;&lt;span class="s"&gt;"@+id/btnPlay"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintEnd_toEndOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintStart_toStartOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;Button&lt;/span&gt;
        &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/btnPlay"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
        &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Play Now"&lt;/span&gt;
        &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"@style/buttonStyle"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintBottom_toBottomOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintLeft_toLeftOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintRight_toRightOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintTop_toTopOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/androidx.constraintlayout.widget.ConstraintLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, open &lt;code&gt;app/src/main/java/com/example/demoquizwithandroid/MainActivity.kt&lt;/code&gt; and update the &lt;code&gt;onCreate&lt;/code&gt; function like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;onCreate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Bundle&lt;/span&gt;&lt;span class="p"&gt;?)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;onCreate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nf"&gt;setContentView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;activity_main&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;button&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;btnPlay&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setOnClickListener&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;intent&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Intent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;QuizActivity&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nf"&gt;startActivity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, open &lt;code&gt;app/src/main/res/layout/activity_quiz.xml&lt;/code&gt; and update the layout to the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;androidx.constraintlayout.widget.ConstraintLayout&lt;/span&gt; &lt;span class="na"&gt;xmlns:android=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res/android"&lt;/span&gt;
    &lt;span class="na"&gt;xmlns:app=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res-auto"&lt;/span&gt;
    &lt;span class="na"&gt;xmlns:tools=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/tools"&lt;/span&gt;
    &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
    &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
    &lt;span class="na"&gt;android:padding=&lt;/span&gt;&lt;span class="s"&gt;"24dp"&lt;/span&gt;
    &lt;span class="na"&gt;android:background=&lt;/span&gt;&lt;span class="s"&gt;"@color/darkslategray"&lt;/span&gt;
    &lt;span class="na"&gt;tools:context=&lt;/span&gt;&lt;span class="s"&gt;".QuizActivity"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;TextView&lt;/span&gt;
        &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/questionNumber"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_marginTop=&lt;/span&gt;&lt;span class="s"&gt;"16dp"&lt;/span&gt;
        &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Question 5/15"&lt;/span&gt;
        &lt;span class="na"&gt;android:textSize=&lt;/span&gt;&lt;span class="s"&gt;"32sp"&lt;/span&gt;
        &lt;span class="na"&gt;android:textStyle=&lt;/span&gt;&lt;span class="s"&gt;"bold"&lt;/span&gt;
        &lt;span class="na"&gt;android:textColor=&lt;/span&gt;&lt;span class="s"&gt;"@color/darkgray"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintStart_toStartOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintTop_toTopOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;ImageView&lt;/span&gt;
        &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/dashedLine"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"4dp"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_marginTop=&lt;/span&gt;&lt;span class="s"&gt;"16dp"&lt;/span&gt;
        &lt;span class="na"&gt;android:src=&lt;/span&gt;&lt;span class="s"&gt;"@drawable/dashed_line"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintTop_toBottomOf=&lt;/span&gt;&lt;span class="s"&gt;"@id/questionNumber"&lt;/span&gt;
        &lt;span class="na"&gt;android:layerType=&lt;/span&gt;&lt;span class="s"&gt;"software"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;TextView&lt;/span&gt;
        &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/question"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"0dp"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"0dp"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_marginTop=&lt;/span&gt;&lt;span class="s"&gt;"16dp"&lt;/span&gt;
        &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Question"&lt;/span&gt;
        &lt;span class="na"&gt;android:textColor=&lt;/span&gt;&lt;span class="s"&gt;"@color/white"&lt;/span&gt;
        &lt;span class="na"&gt;android:textSize=&lt;/span&gt;&lt;span class="s"&gt;"26sp"&lt;/span&gt;
        &lt;span class="na"&gt;android:textStyle=&lt;/span&gt;&lt;span class="s"&gt;"bold"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintBottom_toTopOf=&lt;/span&gt;&lt;span class="s"&gt;"@+id/options"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintEnd_toEndOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintStart_toStartOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintTop_toBottomOf=&lt;/span&gt;&lt;span class="s"&gt;"@+id/dashedLine"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;RadioGroup&lt;/span&gt;
        &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/options"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"0dp"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_marginBottom=&lt;/span&gt;&lt;span class="s"&gt;"24dp"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintBottom_toTopOf=&lt;/span&gt;&lt;span class="s"&gt;"@+id/btnNext"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintEnd_toEndOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintStart_toStartOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;RadioButton&lt;/span&gt;
            &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/option1"&lt;/span&gt;
            &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"@style/optionRadioButton"&lt;/span&gt;
            &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
            &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
            &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Option 1"&lt;/span&gt;
            &lt;span class="na"&gt;tools:layout_editor_absoluteX=&lt;/span&gt;&lt;span class="s"&gt;"116dp"&lt;/span&gt;
            &lt;span class="na"&gt;tools:layout_editor_absoluteY=&lt;/span&gt;&lt;span class="s"&gt;"75dp"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;RadioButton&lt;/span&gt;
            &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/option2"&lt;/span&gt;
            &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"@style/optionRadioButton"&lt;/span&gt;
            &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
            &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
            &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Option 2"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;RadioButton&lt;/span&gt;
            &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/option3"&lt;/span&gt;
            &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"@style/optionRadioButton"&lt;/span&gt;
            &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
            &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
            &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Option 3"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;RadioButton&lt;/span&gt;
            &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/option4"&lt;/span&gt;
            &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"@style/optionRadioButton"&lt;/span&gt;
            &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
            &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
            &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Option 4"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/RadioGroup&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;Button&lt;/span&gt;
        &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/btnNext"&lt;/span&gt;
        &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"@style/buttonStyle"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_marginBottom=&lt;/span&gt;&lt;span class="s"&gt;"8dp"&lt;/span&gt;
        &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Next"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintBottom_toBottomOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintEnd_toEndOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintStart_toStartOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/androidx.constraintlayout.widget.ConstraintLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-view-model"&gt;
  &lt;/a&gt;
  üë©‚Äçüîß Create View Model
&lt;/h2&gt;

&lt;p&gt;Create &lt;code&gt;app/src/main/java/com/example/demoquizwithandroid/QuizViewModel.kt&lt;/code&gt; and update it with following code. Make sure to replace &lt;code&gt;YOUR_APPWRITE_ENDPOINT&lt;/code&gt;, &lt;code&gt;YOUR_PROJECT_ID&lt;/code&gt; and &lt;code&gt;YOUR_QUESTIONS_COLLECTION_ID&lt;/code&gt; with your values which can all be found in your Appwrite console.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;android.content.Context&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;android.util.Log&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;androidx.lifecycle.LiveData&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;androidx.lifecycle.MutableLiveData&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;androidx.lifecycle.ViewModel&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;androidx.lifecycle.viewModelScope&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;io.appwrite.Client&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;io.appwrite.exceptions.AppwriteException&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;io.appwrite.services.Database&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;kotlinx.coroutines.launch&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.json.JSONArray&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.json.JSONObject&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;QuizViewModel&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;ViewModel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;collectionId&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"YOUR_QUESTIONS_COLLECTION_ID"&lt;/span&gt; &lt;span class="c1"&gt;// Replace with your own questions collection id that we created above&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;db&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="nf"&gt;lazy&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Database&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;_questions&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;MutableLiveData&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;JSONArray&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;().&lt;/span&gt;&lt;span class="nf"&gt;apply&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;lateinit&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;client&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Client&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;questions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;LiveData&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;JSONArray&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_questions&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;selectedQuestion&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;MutableLiveData&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;().&lt;/span&gt;&lt;span class="nf"&gt;apply&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;correct&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;MutableLiveData&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;().&lt;/span&gt;&lt;span class="nf"&gt;apply&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setEndpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"YOUR_APPWRITE_ENDPOINT"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Replace with your own endpoint&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"YOUR_PROJECT_ID"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Replace with your project id&lt;/span&gt;
        &lt;span class="nf"&gt;getQuestions&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;getQuestions&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;viewModelScope&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;launch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;response&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;listDocuments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;collectionId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;json&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;?:&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;
                &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;que&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;JSONObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;_questions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;postValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;que&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"documents"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nc"&gt;JSONArray&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;AppwriteException&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nc"&gt;Log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;e&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Get questions"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For this to work you also need to add following dependencies to your &lt;code&gt;app/build.gradle&lt;/code&gt; file. These are the dependencies required for &lt;code&gt;LiveData&lt;/code&gt; and &lt;code&gt;ViewModel&lt;/code&gt; to work.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight groovy"&gt;&lt;code&gt;&lt;span class="n"&gt;dependencies&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;implementation&lt;/span&gt; &lt;span class="s1"&gt;'androidx.appcompat:appcompat:1.3.0'&lt;/span&gt;
    &lt;span class="n"&gt;implementation&lt;/span&gt; &lt;span class="s1"&gt;'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'&lt;/span&gt;
    &lt;span class="n"&gt;implementation&lt;/span&gt; &lt;span class="s1"&gt;'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally update &lt;code&gt;app/src/main/java/com/example/demoquizwithandroid/QuizActivity.kt&lt;/code&gt; with the following code and build your application&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;QuizActivity&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;AppCompatActivity&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;lateinit&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;QuizViewModel&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;currentQuestion&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;JSONObject&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;onCreate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Bundle&lt;/span&gt;&lt;span class="p"&gt;?)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;onCreate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nf"&gt;setContentView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;activity_quiz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;viewModel&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ViewModelProvider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;QuizViewModel&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;questions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;questions&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;questions&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;selectedQuestion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
                    &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;TextView&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;questionNumber&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Question ${(index+1)}/${questions.length()}"&lt;/span&gt;
                    &lt;span class="n"&gt;currentQuestion&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;questions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nc"&gt;JSONObject&lt;/span&gt;

                    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;options&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;currentQuestion&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"options"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nc"&gt;JSONArray&lt;/span&gt;
                    &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;TextView&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;question&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;currentQuestion&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"question"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                    &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;RadioButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;option1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                    &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;RadioButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;option2&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;option3&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;RadioButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;option3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;option4&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;RadioButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;option4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;length&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                            &lt;span class="n"&gt;option4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                            &lt;span class="n"&gt;option3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                        &lt;span class="n"&gt;option3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;visibility&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;View&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;VISIBLE&lt;/span&gt;
                        &lt;span class="n"&gt;option4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;visibility&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;View&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;VISIBLE&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="n"&gt;option3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;visibility&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;View&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;GONE&lt;/span&gt;
                        &lt;span class="n"&gt;option4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;visibility&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;View&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;GONE&lt;/span&gt;

                    &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;btnNext&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;setOnClickListener&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;onNextClicked&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;onNextClicked&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currentQuestion&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;
        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;rbGroup&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;RadioGroup&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;RadioGroup&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;rbSelected&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;RadioButton&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rbGroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;checkedRadioButtonId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;
        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rbSelected&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="n"&gt;currentQuestion&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"answer"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;correct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;postValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;correct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;inc&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;rbGroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;clearCheck&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;selectedQuestion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;questions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;length&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;//show complete dialog&lt;/span&gt;
            &lt;span class="nc"&gt;Log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Quiz complete"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Quiz complete"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;alertDialog&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;AlertDialog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Builder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setTitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Quiz complete"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Score: ${viewModel.correct.value!!} / ${viewModel.questions.value!!.length()}"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setNeutralButton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Done"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;DialogInterface&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;OnClickListener&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
                    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;intent&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Intent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;MainActivity&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;addFlags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Intent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;FLAG_ACTIVITY_CLEAR_TOP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;addFlags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Intent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;FLAG_ACTIVITY_NEW_TASK&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="nf"&gt;startActivity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="n"&gt;alertDialog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;selectedQuestion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;postValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;selectedQuestion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;inc&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We should now have our complete quiz application which should look as follows.&lt;/p&gt;

&lt;p&gt;
   &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NjKfi1Kc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlf2kxgkkvku2n0oco6l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NjKfi1Kc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlf2kxgkkvku2n0oco6l.png"&gt;&lt;/a&gt;
  &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--57PnRnBd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e5h4c1pve8heu515nrc5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--57PnRnBd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e5h4c1pve8heu515nrc5.png"&gt;&lt;/a&gt; 
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  ü•Ç Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope you enjoyed building this Quiz Application with Appwrite and Android. Let's us know if you have any feedback and suggestions. Can't wait for the community to build awesome apps with Appwrite and Android.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learn-more"&gt;
  &lt;/a&gt;
  üéì Learn More
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://appwrite.io/getting-started-with-android"&gt;Getting Started With Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/appwrite/playground-for-android"&gt;Android Playground&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/appwrite/demo-quiz-with-android"&gt;Demo Quiz Application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://appwrite.io/docs"&gt;Appwrite Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>android</category>
      <category>opensource</category>
      <category>tutorial</category>
      <category>discuss</category>
    </item>
    <item>
      <title>The programming languages I like and why I like them</title>
      <author>Deepu K Sasidharan</author>
      <pubDate>Fri, 09 Jul 2021 11:19:06 +0000</pubDate>
      <link>https://dev.to/deepu105/the-programming-languages-i-like-and-why-i-like-them-385o</link>
      <guid>https://dev.to/deepu105/the-programming-languages-i-like-and-why-i-like-them-385o</guid>
      <description>&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://deepu.tech/languages-i-like-and-why/"&gt;deepu.tech&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Being a polyglot developer is fun. You are not married to a single language/ecosystem and you have a diverse tool-belt to choose from based on the issue at hand. But still, you are going to have favorites based on your experience with different languages and their ecosystem.&lt;/p&gt;

&lt;p&gt;In my career, spanning 11+ years, I have worked with many programming languages. The first programming language I encountered was Basic when I was in school, but I won't count that since I didn't pay any attention and I didn't understand it back then.&lt;/p&gt;

&lt;p&gt;Later when I was in college I had a mandatory computer science class, I was doing Electrical and Electronic Engineering, and there I first came across C, C++, and Java. But again It was just basics and I wasn't very interested and I just studied enough to clear the paper.&lt;/p&gt;

&lt;p&gt;Later, I was running a blog about motorcycles and I started dabbling with WordPress, Flash, ActionScript, and JavaScript.&lt;/p&gt;

&lt;p&gt;I first programming language I actually learned with an interest was &lt;a href="https://en.wikipedia.org/wiki/Scheme_(programming_language)"&gt;Scheme&lt;/a&gt;, It was a training language used in my first job as an IT Intern/Trainee and that got me hooked and in few months I started learning Java and JavaScript.&lt;/p&gt;

&lt;p&gt;I became quite good at Java and JS and really was enjoying working with those and If you have asked me back then, I would have said that Java and JS were the greatest languages out there.&lt;/p&gt;

&lt;p&gt;So for a pretty good part of my career, I was coding in Java and JavaScript and later TypeScript. I did work with a bit of Groovy, Python, and Scala but I didn't like those languages much and I had no interest in learning any new languages at that point.&lt;/p&gt;

&lt;p&gt;A few years ago when Golang was all the rage, I moved to a project that was built in Go and hence started looking into Go. It was extremely easy to learn and I really liked working with it (for a while).&lt;/p&gt;

&lt;p&gt;Rust was quite new at that point and I wanted to try it out but got around to it only a year later and I was in love with it.&lt;/p&gt;

&lt;p&gt;In the past two years, I also worked with Kotlin, PHP, Ruby, and C# as well occasionally. But I wasn't very impressed with Ruby and PHP.&lt;/p&gt;

&lt;p&gt;So without further adieu, these are my favorite programming languages in order.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-rust"&gt;
  &lt;/a&gt;
  1. Rust
&lt;/h1&gt;

&lt;p&gt;Rust is currently my most favorite language. It's so much fun to work with and I love the challenge of rethinking how you write code. You know, as they say, it sparks joy when you work with it. Rust is truly a modern and powerful programming language.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--XkDzhPMG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1278304200947089416/XocBIsMa_normal.jpg" alt="Deepu K Sasidharan ( ‡¥¶‡µÄ‡¥™‡µÅ, ‡Æ§‡ØÄ‡Æ™‡ØÅ, ‡§¶‡•Ä‡§™‡•Ç ) profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Deepu K Sasidharan ( ‡¥¶‡µÄ‡¥™‡µÅ, ‡Æ§‡ØÄ‡Æ™‡ØÅ, ‡§¶‡•Ä‡§™‡•Ç )
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/deepu105"&gt;@deepu105&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/hashtag/java"&gt;#java&lt;/a&gt;: I'll provide you memory safety but you must pay performance penalty for abstractions and the runtime&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/C"&gt;#C&lt;/a&gt;++: I'll provide you zero cost abstractions, but you must pay with memory safety&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/Rust"&gt;#Rust&lt;/a&gt;: hold my üç∫
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      22:11 PM - 08 Jul 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1413259371472109573" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1413259371472109573" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1413259371472109573" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Rust would be my go-to for systems programming, embedded, CLIs, OS tools, WebAssembly, and so on. I guess the only place I won't use Rust would be serious monolithic web application development as the ecosystem is not mature for that yet.&lt;/p&gt;

&lt;p&gt;I wrote in detail about what I like and dislike about Rust in &lt;a href="https://deepu.tech/my-second-impression-of-rust/"&gt;this post&lt;/a&gt;, but I'll summarize it here for the casual skimmers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#likes"&gt;
  &lt;/a&gt;
  üòç Likes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/my-second-impression-of-rust/#safety"&gt;&lt;strong&gt;Safe by default&lt;/strong&gt;&lt;/a&gt;: Rust is memory safe, thread-safe, type-safe, and null safe&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/my-second-impression-of-rust/#zero-cost-abstractions"&gt;&lt;strong&gt;Zero cost abstractions&lt;/strong&gt;&lt;/a&gt;: Write in any programming style without worrying about the added performance penalty&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/my-second-impression-of-rust/#fearless-concurrency"&gt;&lt;strong&gt;Awesome concurrency&lt;/strong&gt;&lt;/a&gt;: Great support for multi-threading, parallelism, and asynchronous programming&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/my-second-impression-of-rust/#community-tooling--ecosystem"&gt;&lt;strong&gt;Great tooling out of the box&lt;/strong&gt;&lt;/a&gt;: Cargo, Clippy, Rustfmt, and so on. It's the best tooling ecosystem I have come across. Testing, building, bootstrapping, benchmarking, linting and more included out of the box.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Immutable by default&lt;/strong&gt;: You need to declare mutable operations explicitly&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Built-in functional programming abstractions&lt;/strong&gt;: Monad like iterators, optional, chaining, and so on&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://blog.logrocket.com/macros-in-rust-a-tutorial-with-examples/#typesofmacrosinrust"&gt;&lt;strong&gt;Macros&lt;/strong&gt;&lt;/a&gt;: Powerful metaprogramming that can be used to define custom language features, code reusability, and so on&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Excellent community&lt;/strong&gt;: Fast-growing, active, and really supportive community&lt;/li&gt;
&lt;li&gt;Superfast, as fast as or sometimes even faster than C/C++&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;No heavy runtime&lt;/strong&gt;: No garbage collection and so on. There is a very small runtime for panics and stuff, but IMO it's negligible&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Excellent language features&lt;/strong&gt;: Pattern matching, generics, iterators, traits, expressions, and so on&lt;/li&gt;
&lt;li&gt;Hands down the best compiler out there. You have to try it to appreciate it.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fast growing and being widely adopted&lt;/strong&gt;: Rust is going places. There are a lot of big names(Google, Microsoft, AWS, Apple, and so on) adopting it and hence cementing its place. It's also finding footing outside of systems programming like embedded, web assembly, web development, game development, and so on. Once the ecosystems for different use cases mature, I see great potential for Rust to be a great general-purpose language without any major compromise.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Native images&lt;/strong&gt;: It's so easy to build native images with Rust, no special setup required. Cargo supports building for your favorite platform out of the box.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#dislikes"&gt;
  &lt;/a&gt;
  üò© Dislikes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/first-impression-of-rust/#complexity"&gt;&lt;strong&gt;Complexity&lt;/strong&gt;&lt;/a&gt;: Being an amalgamation of many languages, Rust does feel more complex than many other languages. I especially would have preferred to not have multiple ways to do the same thing.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Learning curve&lt;/strong&gt;: Rust is not the easiest language to learn, especially if you are a beginner or if you are used to working only in one language like Java, C#, or Python. But if you are polyglot and already familiar with a few languages like C/C++, Java, TS, and Go, you will feel quite at home with Rust. There are some advanced concepts like borrowing and lifetimes that take some getting used to and practice to grasp.&lt;/li&gt;
&lt;li&gt;Ecosystem is not mature enough for many use cases. I would love to use Rust for web application development but the ecosystem for that is still very young and you are gonna have a hard time compared to something like Java or C#&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#2-java"&gt;
  &lt;/a&gt;
  2. Java
&lt;/h1&gt;

&lt;p&gt;Java isn't cool like Rust or feature-rich like JavaScript but it makes up for all that by having one of the most stable, battle-tested, and rich ecosystems.&lt;/p&gt;

&lt;p&gt;So if I would start my own company with a web application as the product, I would 100% go with JVM on the backend with either Java or Kotlin, and of course I will build it using &lt;a href="https://www.jhipster.tech/"&gt;JHipster&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you like Java, it's hard not to like Kotlin. It feels like a modern version of Java and building Android apps using Kotlin was a nice experience. Unlike Scala, Kotlin doesn't go overboard with all the complexity and implicit stuff.&lt;/p&gt;

&lt;p&gt;I might choose Kotlin over Java if building a new web app and if the team has experience with Kotlin.&lt;/p&gt;

&lt;p&gt;Also, Java is close to my heart as it's the programming language that jump-started my career.&lt;/p&gt;

&lt;p&gt;Here is what I like and dislike about Java&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#likes"&gt;
  &lt;/a&gt;
  üòç Likes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Ecosystem&lt;/strong&gt;: The biggest strength of Java is its ecosystem. There are great frameworks and libraries for everything you can think of and most of these solutions are extremely stable with a lot of community and support. In reality, the ecosystem is whats keeping Java popular and growing.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Experienced community&lt;/strong&gt;: Java has a very mature and experienced community so even if you are a beginner there is a lot of resources to help you&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Great tooling&lt;/strong&gt;: There are a lot of great tools out there for Java. IDEs like IntelliJ, Eclipse, NetBeans offer some of the best developer experiences, and build tools like Gradle and Maven are so powerful and feature-rich. There are also profilers, linters, and so on.&lt;/li&gt;
&lt;li&gt;Built-in &lt;a href="https://deepu.tech/functional-programming-in-java-for-beginners/"&gt;functional programming abstractions&lt;/a&gt;: Monad like iterators, streams, optional, functional interfaces, and so on&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fairly easy to learn&lt;/strong&gt;: Java is not very complex and hence is fairly easy to learn and get started even with its boilerplate.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#dislikes"&gt;
  &lt;/a&gt;
  üò© Dislikes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Boilerplate&lt;/strong&gt;: Java needs too much boilerplate. There is no nice way to say this. Compared to other languages in its league, Java feels too verbose. Lambdas have made it more digestible but there are other JVM languages like Kotlin or Scala that have got this part right. I really wish Java gets there one day where you don't have to write 20 lines of code to read a file.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Not so modern&lt;/strong&gt;: Language features in Java are, let's just say it doesn't spark joy, it's improving but if you are used to few other languages, then there is a lot to wish for, and compared to its peers Java feels old even though its just as old as JS, Ruby or Python&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Baggage&lt;/strong&gt;: Java has great backward compatibility but that also means baggage. there is a lot of such baggage in Java and it's holding the language back in my humble opinion.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Virtual machine&lt;/strong&gt;: JVM was a great idea when Java was introduced as portability was not easy back then but in today's IT landscape containers and native images have made portability easy and that makes a Java Virtual Machine redundant. JVM still provides a lot of valuable features but it also takes up resources and space whereas languages like Go or Rust can just build tiny native binaries that can be deployed using docker to get better performance with less resource usage than a Java app running on JVM.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#3-typescriptjavascript"&gt;
  &lt;/a&gt;
  3. TypeScript/JavaScript
&lt;/h1&gt;

&lt;p&gt;Most Java developers hate JavaScript but I have a &lt;a href="https://deepu.tech/reflections-on-javascript/"&gt;love-hate relationship&lt;/a&gt; with it. JavaScript is one of the quirkiest languages around and like it or not it's the de-facto for the web and it gets the job done.&lt;/p&gt;

&lt;p&gt;I like TypeScript a lot more than JavaScript and find it way nicer to work with than JS. So TS and by extension JS would tie with Java for the second spot for me.&lt;/p&gt;

&lt;p&gt;TS/JS is still my go-to for quick scripting and building client-side apps and mobile apps (ReactNative/PWA)&lt;/p&gt;

&lt;p&gt;I wrote in detail about what I like and dislike about JS in this post, here is the summary&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#likes"&gt;
  &lt;/a&gt;
  üòç Likes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/reflections-on-javascript/#dynamic--extremely-flexible"&gt;&lt;strong&gt;Flexible&lt;/strong&gt;&lt;/a&gt;: The dynamic nature of JS/TS makes it extremely flexible and powerful. It's also very forgiving language. If you know what you are doing, there is literally nothing you cant get done. Of course, the flexibility comes with its own price.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/reflections-on-javascript/#biggest-community"&gt;&lt;strong&gt;Community&lt;/strong&gt;&lt;/a&gt;: JavaScript has the biggest community among programming languages. It's active, mature, and thriving. It's a huge strength as it helps beginners and experts alike in solving problems and improving the ecosystem on the whole.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Ecosystem&lt;/strong&gt;: JS has a huge ecosystem with a lot of libraries and frameworks. You will find anything you could imagine as a library. The ecosystem is so big that it has started to become an issue in terms of "yet another framework syndrome".&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Asynchronous programming&lt;/strong&gt;: JS has one of the best ecosystems for asynchronous programming. It's so easy to write async code with Promises and async/await and it has become the de-facto way of programming in JS these days.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Great tooling&lt;/strong&gt;: JS has great tooling, thanks to NodeJS and its ecosystem. IDEs like VS Code, Atom, Webstorm, and so on provide great JS support. There are also so many wonderful tools like Webpack, Rollup, Jest, and so on.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/functional-programming-in-typescript/"&gt;&lt;strong&gt;Functional programming&lt;/strong&gt;&lt;/a&gt;: JS is multi-paradigm and has a lot of support for functional programming. It's a great fit for functional programming.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/reflections-on-javascript/#beginner-friendly-but-also-powerful"&gt;&lt;strong&gt;Easy to learn&lt;/strong&gt;&lt;/a&gt;: JS is a simple language to learn and get started. It's one of the most beginner-friendly languages and communities out there. Of course, there is complex stuff in JS but you don't need to know that to get started.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;NodeJS&lt;/strong&gt;: NodeJS was the best thing to happen for software development. It not just revolutionized the JS world but also inspired other languages to take note and be more developer-friendly and build easy-to-use tooling and ecosystem. You can see this inspiration in Rust, Golang, and so on.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;TypeScript&lt;/strong&gt;: TS is another best thing that happened to JS. It provides an answer to a lot of JS issues that bother people and makes it possible to use JS in a more developer-friendly way on a huge codebase.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#dislikes"&gt;
  &lt;/a&gt;
  üò© Dislikes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/reflections-on-javascript/#fragmentation-browser-implementations-version-compatibility"&gt;&lt;strong&gt;Fragmentation&lt;/strong&gt;&lt;/a&gt;: This is the biggest issue with JS. There are standards and there is vendors and that's the perfect recipe for disaster. Most of the time a JS developer spends used to be to make it work across different browsers and platforms. The demise of IE has made this better but hey I heard Safari is the next IE so there is that.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/reflections-on-javascript/#error-prone-a-side-effect-of-flexibility"&gt;&lt;strong&gt;Error-prone&lt;/strong&gt;&lt;/a&gt;: This is the side effect of being too flexible. JS code is extremely error-prone and unmanageable in huge code bases. TypeScript makes this much much better but still, it's so easy to shoot in your own foot with JS.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/reflections-on-javascript/#yet-another-framework-syndrome"&gt;&lt;strong&gt;Framework overload&lt;/strong&gt;&lt;/a&gt;: Too many frameworks for the same thing, too many libraries for the same thing, and libraries for doing extremely trivial stuff like left-padding :( Competition is good but IMO what we have in the JS ecosystem is just too much. It causes mental drain and unnecessary fragmentation in the community.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Over-engineering in the ecosystem&lt;/strong&gt;: I have been doing JS for over 11 years now and I'm noticing a clear trend of over-engineering in the ecosystem. Look at the JS build tooling for example it has been over-engineered to the extend that setting that up feels like a project in itself.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#4-go"&gt;
  &lt;/a&gt;
  4. Go
&lt;/h1&gt;

&lt;p&gt;Go is the simplest language I have worked with and the easiest to learn. I like Golang for quickly putting something together and Go code is quite easy to read. &lt;/p&gt;

&lt;p&gt;But I would choose Rust over go for large codebase since Go becomes annoying due to its limited features after a while especially on large codebases. IMO go is still ideal for building small system utilities and microservices.&lt;/p&gt;

&lt;p&gt;I wrote in detail about what I like and dislike about Go in &lt;a href="https://deepu.tech/reflection-on-golang/"&gt;this post&lt;/a&gt;, here is the summary&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#likes"&gt;
  &lt;/a&gt;
  üòç Likes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/reflection-on-golang/#simplicity"&gt;&lt;strong&gt;Simplicity&lt;/strong&gt;&lt;/a&gt;: Go is extremely simple. You could technically learn it in a day or two. It's easy to get started and be productive in Go. It's also easy to read and debug as there is only one way of doing anything so you know what is going on without having to ask the person who wrote the code. It's the easiest language for beginners as well.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/reflection-on-golang/#tooling"&gt;&lt;strong&gt;Built-in tooling and style guide&lt;/strong&gt;&lt;/a&gt;: Go provides built-in tooling for all the basic stuff like dependency management, testing, build and so on. It also has an opinionated formatter that saves a lot of time.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/reflection-on-golang/#goroutines--channels"&gt;&lt;strong&gt;Goroutines&lt;/strong&gt;&lt;/a&gt;: Goroutines are awesome. It's so easy to use and intuitive and the best concurrency experience you can find.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Native images&lt;/strong&gt;: It's so easy to build native images with Go, no special setup required. It supports building for your favorite platform out of the box.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#dislikes"&gt;
  &lt;/a&gt;
  üò© Dislikes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/reflection-on-golang/#simplicity-1"&gt;&lt;strong&gt;Simplicity&lt;/strong&gt;&lt;/a&gt;: Go's simplicity is really nice when you are getting started but it starts to feel like an annoyance once you start writing more Go code. If you come from another language, you soon start to yearn for features like generics, error handling, default values, and so on. Keeping code DRY is a challenge in Go due to the lack of generics. IMO Go would be a great language if it had generics. Also, I dread writing &lt;code&gt;if err != nil&lt;/code&gt; in Go.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Boilerplate&lt;/strong&gt;: Side effect of Go being too simple. In large codebases, you would be repeating stuff like finding an item from an array or map so many times that the boilerplate is just too much after a while.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/reflection-on-golang/#weird-interface-construct"&gt;&lt;strong&gt;Implicit interfaces&lt;/strong&gt;&lt;/a&gt;: May it's just me. I don't like implicit interface implementations. It just feels wrong and confusing to me.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;These are my personal favorites among programming languages and doesn't mean the likes and dislikes would apply to anyone. make your own conclusions but do use the language before making a judgment about it.&lt;/p&gt;

&lt;p&gt;In today's IT landscape, being a polyglot developer is becoming a requirement. And personally, I believe that being a polyglot makes you a better programmer and software engineer. I previously wrote about &lt;a href="https://deepu.tech/how-to-be-an-effective-polyglot-developer/"&gt;how to be an effective polyglot developer&lt;/a&gt;, do check it out if you are interested.&lt;/p&gt;




&lt;p&gt;If you like this article, please leave a like or a comment.&lt;/p&gt;

&lt;p&gt;You can follow me on &lt;a href="https://twitter.com/deepu105"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/deepu05/"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@tama66"&gt;Peter Herrmann&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/old-computer"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>rust</category>
      <category>go</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Beautiful NPM Icon packages for your next web project</title>
      <author>Yeow Zi Qin</author>
      <pubDate>Fri, 09 Jul 2021 10:45:52 +0000</pubDate>
      <link>https://dev.to/ziqinyeow/beautiful-npm-icon-packages-for-your-next-web-project-5266</link>
      <guid>https://dev.to/ziqinyeow/beautiful-npm-icon-packages-for-your-next-web-project-5266</guid>
      <description>&lt;h2&gt;
  &lt;a href="#my-favourite"&gt;
  &lt;/a&gt;
  My Favourite
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;These are my favourite npm icon packages&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Icon pack&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;How to install&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://boxicons.com/"&gt;Boxicons&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install boxicons --save&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://boxicons.com/usage/"&gt;Website&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://remixicon.com/"&gt;Remix Icon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install remixicon --save&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/Remix-Design/RemixIcon"&gt;Github&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://icons.modulz.app/"&gt;Radix Icon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install @modulz/radix-icons&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/radix-ui/icons"&gt;Github&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#recommended"&gt;
  &lt;/a&gt;
  Recommended
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;These are the recommended npm icon packages&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Icon pack&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;How to install&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://icons.coreui.io/icons/"&gt;CoreUI Icon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install @coreui/icons@next --save&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://icons.coreui.io/docs/getting-started/introduction/"&gt;Website&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://teenyicons.com/"&gt;Teenyicons&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm i teenyicons&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/teenyicons/teenyicons"&gt;Github&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://icons.getbootstrap.com/"&gt;Bootstrap Icon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm i bootstrap-icons&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://icons.getbootstrap.com/#install"&gt;Website&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://feathericons.com/"&gt;Feather Icon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install feather-icons --save&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/feathericons/feather"&gt;Github&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://primer.style/octicons/"&gt;Octicons&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install @primer/octicons&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://primer.style/octicons/guidelines/usage"&gt;Website&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://ikonate.com/"&gt;Ikonate&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install ikonate&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mikolajdobrucki/ikonate"&gt;Github&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://css.gg/app"&gt;CSS.gg icon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install css.gg&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/astrit/css.gg"&gt;Github&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://phosphoricons.com/"&gt;Phosphor Icon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm i phosphor-icons&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/phosphor-icons/phosphor-icons"&gt;Github&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;p&gt;Hope you are getting excited!üòé&lt;/p&gt;

&lt;p&gt;Further Research:&lt;br&gt;
&lt;a href="https://shapedfonts.com/iconclub/"&gt;ShapeFonts&lt;/a&gt;&lt;br&gt;
&lt;a href="https://wweb.dev/resources/free-icon-sets/"&gt;WWEB.dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading, see you in the next post.&lt;/p&gt;

</description>
      <category>npm</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Reusable Collapsible Component with ReactJS</title>
      <author>Hugo Ferreira</author>
      <pubDate>Fri, 09 Jul 2021 10:35:04 +0000</pubDate>
      <link>https://dev.to/huferr/reusable-collapsible-component-with-reactjs-ao4</link>
      <guid>https://dev.to/huferr/reusable-collapsible-component-with-reactjs-ao4</guid>
      <description>&lt;p&gt;Welcome, here's a guide teaching you how to create a simple and useful Reusable Collapsible Component, with ReactJS.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Observation: I created this post considering that you know the basics of ReactJS. If you see anything wrong, please tell me!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You can see it working at CodePen: &lt;a href="https://codepen.io/huferr/pen/NWjNLMy"&gt;https://codepen.io/huferr/pen/NWjNLMy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's start by creating a functional component and call it &lt;code&gt;Collapsible&lt;/code&gt;. It will return some HTML elements, which will structure our layout.&lt;/p&gt;

&lt;p&gt;For this case, let's set:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A &lt;code&gt;div&lt;/code&gt; element, which will keep all the elements bellow;&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;button&lt;/code&gt; element, responsible for toggling the content visibility;&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;div&lt;/code&gt; element, which will handle our content.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, to make this component &lt;strong&gt;reusable&lt;/strong&gt;, we have to pass some properties to it, to make this component accept data from outside, not having to change its structure every time. &lt;/p&gt;

&lt;p&gt;For this we'll set the &lt;em&gt;props: children&lt;/em&gt; and &lt;em&gt;label&lt;/em&gt;, by doing &lt;em&gt;props destructuring&lt;/em&gt;, it means you don't have to call "props.children" or "props.label" every time you want to use these props. You only have to pass the prop names inside a curly brackets in the function.&lt;/p&gt;

&lt;p&gt;Let's see what we've done so far:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./styles.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Collapsible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'toggle'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Collapsible&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OK, we have our button, that will make the content appear and disappear and we have our div with that content.&lt;/p&gt;

&lt;p&gt;First thing, to make the content toggle, we'll need to set a CSS class (.show) to style how it's going to appear on our screen, and an other class (.content) to make it disappear:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.content&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#686868&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.show&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, the magic is on the &lt;code&gt;display&lt;/code&gt; property. When the div has the &lt;code&gt;.show&lt;/code&gt; class, the content will be displayed!&lt;/p&gt;

&lt;p&gt;Now, to make the toggle effect when click on the button, let's use the useState Hook! With this, let's set isOpen and setIsOpen, initializing with &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Obs.: Do it in the same Collapsible component.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./styles.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Collapsible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isOpen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsOpen&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Good! Now, with the &lt;code&gt;onClick&lt;/code&gt; event in the button, let's pass a simple arrow function, setting the &lt;code&gt;isOpen&lt;/code&gt; true or false, according to its previous state (if &lt;code&gt;isOpen === false&lt;/code&gt;, set to &lt;code&gt;true&lt;/code&gt; and vice-versa), using &lt;strong&gt;!&lt;/strong&gt;, the logical "not" operator in javascript. See it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'toggle'&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setIsOpen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isOpen&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, to bind this event with the content, let's use a ternary operator in the content div class. So, isOpen === true ? use 'content and show' classes (content appears), isOpen === false ? use only 'content' (content disappears). See it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isOpen&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;content show&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;content&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we have a &lt;strong&gt;Reusable Collapsible Component&lt;/strong&gt;! You can change the label and children (content) prop, where the component will stay:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-1"&gt;
  &lt;/a&gt;
  Example 1
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Collapsible&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Click Here'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Profile&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Dashboard&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Logout&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Collapsible&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#example-2"&gt;
  &lt;/a&gt;
  Example 2
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;     &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Collapsible&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Animals'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Cat&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Dog&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Cow&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Collapsible&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#results"&gt;
  &lt;/a&gt;
  Results
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8cjuo9X1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dkqpwk9djozlnamheu1o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8cjuo9X1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dkqpwk9djozlnamheu1o.png" alt="Results"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;OTHER OBSERVATION: The purpose of this post was to show the functionality, so, sorry for the bad styling haha!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Done! Thanks for reading this content, I hope it helps you in some way and, if you notice something wrong, feel free to help me leaving a comment bellow or find me on &lt;a href="https://twitter.com/thehuferr"&gt;twitter&lt;/a&gt; !&lt;/p&gt;

&lt;p&gt;You can also find me at:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/huferr"&gt;Github&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/hugo-ferreira-it/"&gt;Linkedin&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
    </item>
    <item>
      <title>How To COLLECT PAYMENTS With STRIPE + NEXT.Js (Step-By-Step Tutorial)</title>
      <author>Gr√©gory D'Angelo</author>
      <pubDate>Fri, 09 Jul 2021 10:32:49 +0000</pubDate>
      <link>https://dev.to/alterclass/how-to-collect-payments-with-stripe-next-js-step-by-step-tutorial-859</link>
      <guid>https://dev.to/alterclass/how-to-collect-payments-with-stripe-next-js-step-by-step-tutorial-859</guid>
      <description>&lt;h2&gt;
  &lt;a href="#how-to-collect-payments-with-stripe-nextjs-stepbystep-tutorial"&gt;
  &lt;/a&gt;
  How to COLLECT PAYMENTS with STRIPE + NEXT.js (Step-by-Step Tutorial)
&lt;/h2&gt;

&lt;p&gt;Today, we gonna learn &lt;strong&gt;how to collect payments from our e-commerce website using Stripe&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;More precisely, we gonna look at how to use Stripe Checkout to easily and securely accept payments from our e-commerce website built with the Next.js framework.&lt;/p&gt;

&lt;p&gt;And as you'll see, it will only take a few minutes of your time to sell your products online and, more importantly, get paid! So without further ado, let's dive into it.&lt;/p&gt;

&lt;p&gt;Watch the video on &lt;a href="https://youtu.be/0T8PcO6WDnE"&gt;Youtube&lt;/a&gt; or keep reading.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/0T8PcO6WDnE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table of content
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-are-we-building"&gt;What are we building?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#set-up-your-stripe-account--nextjs-app"&gt;Set up your Stripe account + Next.js app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#create-your-products-on-the-stripe-dashboard"&gt;Create your products on the Stripe dashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#load-stripe-in-your-nextjs-app"&gt;Load Stripe in your Next.js app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#create-a-nextjs-api-endpoint-to-create-a-stripe-checkout-session"&gt;Create a Next.js API endpoint to create a Stripe checkout session&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#create-a-nextjs-api-endpoint-to-retrieve-a-checkout-session"&gt;Create a Next.js API endpoint to retrieve a checkout session&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#redirect-the-user-to-the-stripe-checkout-page"&gt;Redirect the user to the Stripe checkout page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#create-a-webhooknextjs-api-endpoint-to-handle-stripe-events"&gt;Create a webhook+Next.js API endpoint to handle Stripe events&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#create-the-success-page"&gt;Create the success page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#thank-you"&gt;Thank-you&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-are-we-building"&gt;
  &lt;/a&gt;
  What are we building?
&lt;/h2&gt;

&lt;p&gt;Processing payments is an essential part of any e-commerce website. Stripe is a toolkit and an API used by millions of businesses to accepts payments, manage customers, handle recurring subscriptions, and more.&lt;/p&gt;

&lt;p&gt;It is very popular amongst startups because it is developer-friendly. And as you'll see, it only takes a few steps to collect payments from your React or Next.js applications using the Stripe API and toolkit.&lt;/p&gt;

&lt;p&gt;So, in this article, we gonna use our existing Next.js website and focus on the Stripe integration from the front-end side to the back-end. &lt;/p&gt;

&lt;p&gt;However, I'm not going to show you how to build the Next.js e-commerce website from scratch, but you can find the &lt;a href="https://github.com/AlterClassIO/ecommerce-nextjs-stripe-checkout"&gt;source code on Github&lt;/a&gt;. So check this out!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4W5_nbPr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.s3.eu-west-3.amazonaws.com/myplantshop.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4W5_nbPr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.s3.eu-west-3.amazonaws.com/myplantshop.png" alt="My Plant Shop - Next.js app powered by Stripe"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you'd like to learn more about Next.js, check out &lt;a href="https://screencasts.alterclass.io/courses/build-a-serverless-jamstack-micro-blogging-app-using-nextjs-tailwind-css-and-faunadb"&gt;my FREE course here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, in this article, we gonna cover:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;How to &lt;strong&gt;set up our Stripe account and our Next.js app&lt;/strong&gt; to collect payments&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Create the products&lt;/strong&gt; we want to sell in the Stripe dashboard&lt;/li&gt;
&lt;li&gt;Learn how to &lt;strong&gt;create a checkout session&lt;/strong&gt; from our Next.js API and &lt;strong&gt;redirect the user to the Stripe Checkout page&lt;/strong&gt; from our user interface so we can collect the payment details such as the user email address and the card's details&lt;/li&gt;
&lt;li&gt;Learn how to &lt;strong&gt;handle Stripe events&lt;/strong&gt; using webhooks and our Next.js API.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;üöÄ Let's go!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#set-up-your-stripe-account-nextjs-app"&gt;
  &lt;/a&gt;
  Set up your Stripe account + Next.js app
&lt;/h2&gt;

&lt;p&gt;Before we get started, make sure to install the &lt;a href="https://www.npmjs.com/package/stripe"&gt;Stripe&lt;/a&gt; and the &lt;a href="https://www.npmjs.com/package/@stripe/stripe-js"&gt;@stripe/stripe-js&lt;/a&gt; libraries into your Next.js project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nom install --save stripe @stripe/stripe-js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then you need to create an account on &lt;a href="https://stripe.com"&gt;stripe.com&lt;/a&gt;. But don't worry, it's entirely free. You don't have to provide you credit cards or anything. You just need to click the sign-in button at the top, and you should be good to go.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FWat8vZV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.s3.eu-west-3.amazonaws.com/stripe%2Bwebsite.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FWat8vZV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.s3.eu-west-3.amazonaws.com/stripe%2Bwebsite.png" alt="Stripe's website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you are registered, you should be redirected to your Stripe dashboard. So the first thing we're going to need here is our Stripe API keys to query the Stripe API. So click on the &lt;code&gt;developers&lt;/code&gt; link in the sidebar and click &lt;a href="https://dashboard.stripe.com/test/apikeys"&gt;API keys&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XpCKia9j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.s3.eu-west-3.amazonaws.com/stripe%2Bapi%2Bkeys.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XpCKia9j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.s3.eu-west-3.amazonaws.com/stripe%2Bapi%2Bkeys.png" alt="Stripe API keys"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As we can see here, we have two API keys.&lt;/p&gt;

&lt;p&gt;The first one is the &lt;strong&gt;publishable key&lt;/strong&gt; that you need to identify your account with Stripe.&lt;/p&gt;

&lt;p&gt;The second one is the &lt;strong&gt;secret key&lt;/strong&gt;. So be careful with this one. You should keep it confidential and don't publish it on your Github account, for example.&lt;/p&gt;

&lt;p&gt;Also, note that here we are using Stripe in test mode, meaning that everything we will do is for demonstration only. It can be used to test our application and our payment flow end-to-end to make sure everything is working fine before deploying to production.&lt;/p&gt;

&lt;p&gt;By the way, when you turn on the live mode in Stripe, you will get two new API keys. So make sure to use the right keys for the right environment.&lt;/p&gt;

&lt;p&gt;All right, with that being said, copy your keys and go back to your code editor. &lt;/p&gt;

&lt;p&gt;Inside your Next.js project, create a new file called &lt;code&gt;.env.local&lt;/code&gt; and create the following environment variables:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_...
STRIPE_SECRET_KEY=sk_test_...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-your-products-on-the-stripe-dashboard"&gt;
  &lt;/a&gt;
  Create your products on the Stripe dashboard
&lt;/h2&gt;

&lt;p&gt;So before going further with our Next.js application, go back to your Stripe dashboard, as we'll create the products we want to sell. &lt;/p&gt;

&lt;p&gt;From here, click on &lt;a href="https://dashboard.stripe.com/test/products?active=true"&gt;products&lt;/a&gt;, an &lt;a href="https://dashboard.stripe.com/test/products/create"&gt;add product&lt;/a&gt; to create a new product. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cwbF1FIk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.s3.eu-west-3.amazonaws.com/stripe%2Bcreate%2Bnew%2Bproduct.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cwbF1FIk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.s3.eu-west-3.amazonaws.com/stripe%2Bcreate%2Bnew%2Bproduct.png" alt="Stripe - Create a new product"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, type in the name of your first product, upload an image for your product and set the price and the currency.&lt;/p&gt;

&lt;p&gt;Finally, click \"save and add more\" to add the second product. And repeat those steps for every product you'd like to sell. &lt;/p&gt;

&lt;p&gt;When you are done creating all your products, copy each product's API ID. We're going to use this ID from within our application and pass it to Stripe with our API requests to tell Stripe which products the user wants to buy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LA6I101J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.s3.eu-west-3.amazonaws.com/stripe%2Bproduct.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LA6I101J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.s3.eu-west-3.amazonaws.com/stripe%2Bproduct.png" alt="Stripe - Product's API ID"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#load-stripe-in-your-nextjs-app"&gt;
  &lt;/a&gt;
  Load Stripe in your Next.js app
&lt;/h2&gt;

&lt;p&gt;We are all set! So go back to your code editor. &lt;/p&gt;

&lt;p&gt;The first thing we're going to need is to load Stripe into our Next.js application. So inside a &lt;code&gt;get-stripe.js&lt;/code&gt; file, load the loading wrapper &lt;code&gt;loadStripe&lt;/code&gt; from the &lt;code&gt;stripe-js&lt;/code&gt; library.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// get-stripe.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;loadStripe&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@stripe/stripe-js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then create a variable to store the Stripe instance we are about to retrieve, and create a function named &lt;code&gt;getStripe&lt;/code&gt; for doing so.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// get-stripe.js&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;stripePromise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getStripe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside this function, make sure that we don't have already loaded Stripe. In that case, retrieve a Stripe instance by calling &lt;code&gt;loadStripe&lt;/code&gt; and pass in your Stripe publishable key using the environment variable we created earlier. And then, return the Stripe instance from that function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// get-stripe.js&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getStripe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;stripePromise&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;stripePromise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;loadStripe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;stripePromise&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, don't forget to export as default the &lt;code&gt;getStripe&lt;/code&gt; function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;getStripe&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-a-nextjs-api-endpoint-to-create-a-stripe-checkout-session"&gt;
  &lt;/a&gt;
  Create a Next.js API endpoint to create a Stripe checkout session
&lt;/h2&gt;

&lt;p&gt;All right! Now, before using the &lt;code&gt;getStripe&lt;/code&gt; function from within our Next.js application, we will create the API endpoints we need to create a Stripe checkout session and retrieve the data from a checkout session using its session ID.&lt;/p&gt;

&lt;p&gt;So start by creating a new folder named &lt;code&gt;api&lt;/code&gt; under the &lt;code&gt;pages&lt;/code&gt; folder. And then, within this folder, create another folder called &lt;code&gt;checkout_sessions&lt;/code&gt; and create a file named &lt;code&gt;index.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So inside this file, we will create the API endpoint we need to create a Stripe checkout session.&lt;/p&gt;

&lt;p&gt;What is great about Next.js is that we don't have to create and set up our own Node.js server to create those API endpoints. Instead, we can do everything inside the same project, and Next.js would create and serve those API endpoints.&lt;/p&gt;

&lt;p&gt;So, start by importing the Stripe module from &lt;code&gt;stripe&lt;/code&gt; and then instantiate a new Stripe instance using your secret key from the &lt;code&gt;STRIPE_SECRET_KEY&lt;/code&gt; environment variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// /pages/api/checkout_sessions/index.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Stripe&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;stripe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stripe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Stripe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;STRIPE_SECRET_KEY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, create an async &lt;code&gt;handler&lt;/code&gt; function and export it as default.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// /pages/api/checkout_sessions/index.js&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This handler function accepts two arguments, the HTTP request, and the HTTP response.&lt;/p&gt;

&lt;p&gt;This is the only function that we need to create an API endpoint with Next.js. So within this function, make sure the request that we're receiving is an HTTP &lt;code&gt;POST&lt;/code&gt; request. Otherwise, return of &lt;code&gt;405&lt;/code&gt; status code to the client that initiated that request.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// /pages/api/checkout_sessions/index.js&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Allow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;405&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Method Not Allowed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, if we get a &lt;code&gt;POST&lt;/code&gt; request, we will handle everything inside a &lt;code&gt;try-catch&lt;/code&gt; block. Finally, we return a &lt;code&gt;500&lt;/code&gt; status code to the client if we catch an error.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// /pages/api/checkout_sessions/index.js&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Otherwise, we create our checkout session using Stripe and pass inside the &lt;code&gt;create&lt;/code&gt; function all the session's options. &lt;/p&gt;

&lt;p&gt;Here, we set the mode to \"payment\", we enable \"card\" as the only payment method (check out the Stripe documentation for more payment methods), we pass all the line items the user wants to buy, and finally, we set the success URL and the cancel URL.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// /pages/api/checkout_sessions/index.js&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checkout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;payment&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;payment_method_types&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;card&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="na"&gt;line_items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
      &lt;span class="nx"&gt;success_url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;origin&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/success?session_id={CHECKOUT_SESSION_ID}`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;cancel_url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;origin&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/cart`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;success_url&lt;/code&gt; will be used by Stripe to redirect the user once his payment has been successful. Here we use &lt;code&gt;/success&lt;/code&gt; for this URL and pass the current checkout session ID as a query parameter. &lt;/p&gt;

&lt;p&gt;If the user cancels his payment from this Stripe checkout session, we redirect him to his shopping cart page, &lt;code&gt;/cart&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;By the way, don't forget to return the newly created sessions to the client.&lt;/p&gt;

&lt;p&gt;And that's it for this API endpoint.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-nextjs-api-endpoint-to-retrieve-a-checkout-session"&gt;
  &lt;/a&gt;
  Create a Next.js API endpoint to retrieve a checkout session
&lt;/h2&gt;

&lt;p&gt;Now let's create a second API endpoint to retrieve a checkout session using its session ID.&lt;/p&gt;

&lt;p&gt;So create a new file inside the &lt;code&gt;checkout_sessions&lt;/code&gt; folder and call it &lt;code&gt;[id].js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Once again, load Stripe inside that file and use your Stripe secret key to create a new instance.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// /pages/api/checkout_sessions/[id].js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Stripe&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;stripe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stripe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Stripe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;STRIPE_SECRET_KEY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Export as default an async handler function and retrieve the ID from the query parameter of the request.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// /pages/api/checkout_sessions/[id].js&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use a &lt;code&gt;try-catch&lt;/code&gt; block, and if something goes wrong, return of &lt;code&gt;500&lt;/code&gt; status code to the client.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// /pages/api/checkout_sessions/[id].js&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then check the value of the ID to make sure that it starts with &lt;code&gt;cs_&lt;/code&gt;. Otherwise, throw an error.&lt;/p&gt;

&lt;p&gt;But if the ID is valid, retrieve the checkout sessions using Stripe by passing in the sessions ID and return it to the client.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// /pages/api/checkout_sessions/[id].js&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cs_&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Incorrect CheckoutSession ID.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;checkout_session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checkout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;retrieve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;checkout_session&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All right! So we're done with our API endpoints.&lt;/p&gt;

&lt;p&gt;Let's keep going with our user interface.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#redirect-the-user-to-the-stripe-checkout-page"&gt;
  &lt;/a&gt;
  Redirect the user to the Stripe checkout page
&lt;/h2&gt;

&lt;p&gt;So now, inside our shopping cart page, we're going to implement a function called &lt;code&gt;redirectToCheckout&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// /pages/cart.js&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;redirectToCheckout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;  
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This function is called when the user clicks on a button from this page to pay for its order. &lt;/p&gt;

&lt;p&gt;So inside that function, start by creating the Stripe checkout sessions using &lt;a href="https://www.npmjs.com/package/axios"&gt;&lt;code&gt;axios&lt;/code&gt;&lt;/a&gt; to perform a &lt;code&gt;POST&lt;/code&gt; request to the &lt;code&gt;/api/checkout_sessions&lt;/code&gt; API endpoint we just created.&lt;/p&gt;

&lt;p&gt;And once we get the response from the server, we can retrieve the ID of the newly created checkout session.&lt;/p&gt;

&lt;p&gt;Don't forget to pass the line items to the body of the request. Below, I'm iterating over the items inside the user's shopping cart, and for each item, I'm just passing its ID and quantity.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note that the key for the ID is actually named &lt;strong&gt;price&lt;/strong&gt; and NOT &lt;strong&gt;id&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// /pages/cart.js&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;redirectToCheckout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Create Stripe checkout&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/checkout_sessions&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cartDetails&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(([&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;quantity&lt;/span&gt; &lt;span class="p"&gt;}])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;})),&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt; 
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So when we have created this checkout session successfully, we can redirect the user to the corresponding checkout page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// /pages/cart.js&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;redirectToCheckout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;

  &lt;span class="c1"&gt;// Redirect to checkout&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stripe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getStripe&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;redirectToCheckout&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;sessionId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-a-webhooknextjs-api-endpoint-to-handle-stripe-events"&gt;
  &lt;/a&gt;
  Create a webhook+Next.js API endpoint to handle Stripe events
&lt;/h2&gt;

&lt;p&gt;So now that we're able to create a checkout session and accept payments using the Stripe checkout page, we still need to implement one more thing.&lt;/p&gt;

&lt;p&gt;Indeed as all the payments are handled by Stripe outside of our application, we need to implement a webhook to listen to a Stripe event to know when Stripe has successfully processed a payment.&lt;/p&gt;

&lt;p&gt;For that, we need to go back to our Stripe dashboard and create a webhook endpoint.&lt;/p&gt;

&lt;p&gt;So from within your dashboard, click on the developers' link and then &lt;a href="https://dashboard.stripe.com/test/webhooks"&gt;webbooks&lt;/a&gt;. From here, click on \"Add endpoint\", enter the URL of your application and add &lt;code&gt;/api/webhook&lt;/code&gt;, which is the Next.js API endpoint we are about to create just after that.&lt;/p&gt;

&lt;p&gt;Finally, select the event we want to listen to and choose &lt;code&gt;checkout.session.completed&lt;/code&gt;, which is the event that Stripe will send to the endpoint URL once a session has been completed successfully. In other words, when the user has successfully paid for its order.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PIi0P6lt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.s3.eu-west-3.amazonaws.com/stripe%2Bnew%2Bwebhook.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PIi0P6lt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.s3.eu-west-3.amazonaws.com/stripe%2Bnew%2Bwebhook.png" alt="Stripe - Create webook"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then click \"Add endpoint\" to actually create this endpoint.&lt;/p&gt;

&lt;p&gt;From here, copy your webhook signing secret, go back to your application, and create a new environment variable called &lt;code&gt;STRIPE_WEBHOOK_SECRET&lt;/code&gt; inside the &lt;code&gt;.env.local&lt;/code&gt; file, and pass the value you just copied.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_...
STRIPE_SECRET_KEY=sk_test_...
STRIPE_WEBHOOK_SECRET=whsec_...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, create a new folder under the &lt;code&gt;api/&lt;/code&gt; folder and call it &lt;code&gt;webhook&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Inside this folder, create a new file named &lt;code&gt;index.js&lt;/code&gt; that we will use to implement our webhook API endpoint.&lt;/p&gt;

&lt;p&gt;Inside this file, import the Stripe module from &lt;code&gt;stripe&lt;/code&gt; and the &lt;code&gt;buffer&lt;/code&gt; method from the &lt;code&gt;micro&lt;/code&gt; npm package. You can install this package with &lt;code&gt;npm install micro&lt;/code&gt;. We are going to use this package/method to retrieve the raw body from the request.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// /pages/api/webhook/index.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Stripe&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;stripe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;buffer&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;micro&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stripe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Stripe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;STRIPE_SECRET_KEY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then export a &lt;code&gt;config&lt;/code&gt; object with the following key/value to tell Next.js not to parse the body of the request because we need the raw data of that body to verify the webhook event signature. Why is it important? Because we need to make sure the webhook event was actually sent by Stripe and not by a malicious third party.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// /pages/api/webhook/index.js&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;api&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;bodyParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, as usual, export as default an async handler function and check that we received a &lt;code&gt;POST&lt;/code&gt; request. Otherwise, return of &lt;code&gt;405&lt;/code&gt; status code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// /pages/api/webhook/index.js&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Allow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;405&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Method Not Allowed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then create a new variable named event to store the webhook event data, and use a &lt;code&gt;try-catch&lt;/code&gt; block to catch any errors that could occur.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// /pages/api/webhook/index.js&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`‚ùå Error message: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Webhook Error: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Allow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;405&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Method Not Allowed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, retrieve the Stripe event by verifying its signature using the raw body of the request and your webhook secret key.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// /pages/api/webhook/index.js&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rawBody&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;signature&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;stripe-signature&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

      &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;webhooks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;constructEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;rawBody&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
        &lt;span class="nx"&gt;signature&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;STRIPE_WEBHOOK_SECRET&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once everything has been successfully processed, we could add our business logic.&lt;/p&gt;

&lt;p&gt;In our example, we just log a message to the console but feel free to add any business logic you need here, such as sending an email to the customer.&lt;/p&gt;

&lt;p&gt;And don't forget to acknowledge receipt of the event.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// /pages/api/webhook/index.js&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Successfully constructed event&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;‚úÖ Success:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// Handle event type (add business logic here)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;checkout.session.completed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`üí∞  Payment received!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`ü§∑‚Äç‚ôÄÔ∏è Unhandled event type: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Return a response to acknowledge receipt of the event.&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;received&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-the-success-page"&gt;
  &lt;/a&gt;
  Create the success page
&lt;/h2&gt;

&lt;p&gt;For the last step of this article, we will create the success page that Stripe will use to redirect the user back to our application when he has successfully paid for his order.&lt;/p&gt;

&lt;p&gt;So inside a &lt;code&gt;success.js&lt;/code&gt; file, create a new React component called &lt;code&gt;Success&lt;/code&gt; and export it as default.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// /pages/success.js&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Success&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Success&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then if you remember, we included the checkout session's id inside the query parameter of the success URL. So, use the &lt;code&gt;useRouter&lt;/code&gt; hook from &lt;code&gt;next/router&lt;/code&gt; to retrieve this id.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// /pages/success.js&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Success&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;query&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;session_id&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRouter&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once we've got this id, we could perform a &lt;code&gt;GET&lt;/code&gt; request to &lt;code&gt;/api/checkout_sessions/${session_id}&lt;/code&gt; using the &lt;code&gt;useSWR&lt;/code&gt; hook from the &lt;a href="https://github.com/vercel/swr"&gt;&lt;code&gt;swr&lt;/code&gt;&lt;/a&gt; package.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// /pages/success.js&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Success&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;query&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;session_id&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRouter&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useSWR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`/api/checkout_sessions/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;fetcher&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once we have that, we can create a side effect using the &lt;code&gt;useEffect&lt;/code&gt; hook from React to shoot some fireworks onto the screen and clear the shopping cart. And finally, return the UI of this page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// /pages/success.js&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Success&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;shootFireworks&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="nx"&gt;clearCart&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* Your UI here */&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  Thank you!
&lt;/h2&gt;

&lt;p&gt;All right, guys, that's it for today. &lt;/p&gt;

&lt;p&gt;I hope you enjoyed this article (or &lt;a href="https://youtu.be/0T8PcO6WDnE"&gt;video&lt;/a&gt;). If you have any questions, please let me know in the comments. And don't forget to like my &lt;a href="https://youtu.be/0T8PcO6WDnE"&gt;video on Youtube&lt;/a&gt; and &lt;a href="https://www.youtube.com/channel/UCn858neTm5-bPjl6-wznR2g?sub_confirmation=1"&gt;subscribe&lt;/a&gt; to support the AlterClass channel. &lt;/p&gt;

&lt;p&gt;Thank you so much!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/0T8PcO6WDnE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>react</category>
      <category>nextjs</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>7 dev tools powered by AI to improve developer productivity</title>
      <author>Quod AI</author>
      <pubDate>Fri, 09 Jul 2021 10:09:32 +0000</pubDate>
      <link>https://dev.to/quod_ai_blog/7-dev-tools-powered-by-ai-to-improve-developer-productivity-304k</link>
      <guid>https://dev.to/quod_ai_blog/7-dev-tools-powered-by-ai-to-improve-developer-productivity-304k</guid>
      <description>&lt;p&gt;A developer‚Äôs capabilities can improve exponentially with the tools they use. It is not enough just to know a programming language or a framework, but also the tools that come with it. A lot of the dev tools have been created by developers to solve their own productivity lapses while coding. In today‚Äôs article, we will look at 7 dev tools powered by AI that are definitely going to up your productivity while coding.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--teOJr3cH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://platform-cdn.sharethis.com/img/facebook.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--teOJr3cH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://platform-cdn.sharethis.com/img/facebook.svg" alt="facebook sharing button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This article was originally posted at: &lt;a href="https://www.quod.ai/post/7-dev-tools-powered-by-ai-to-improve-developer-productivity"&gt;https://www.quod.ai/post/7-dev-tools-powered-by-ai-to-improve-developer-productivity&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fhPyaFiE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://platform-cdn.sharethis.com/img/twitter.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fhPyaFiE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://platform-cdn.sharethis.com/img/twitter.svg" alt="twitter sharing button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--40zjcJrZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://platform-cdn.sharethis.com/img/linkedin.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--40zjcJrZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://platform-cdn.sharethis.com/img/linkedin.svg" alt="linkedin sharing button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AlkB7haK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e81f4d6be25b3dd29fd8fa_AI.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AlkB7haK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e81f4d6be25b3dd29fd8fa_AI.jpg" alt="7 dev tools powered by AI to improve developer productivity"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ai-python-docstring-generator-amp-quod-ai-code-commenter"&gt;
  &lt;/a&gt;
  AI Python Docstring Generator &amp;amp; Quod AI Code Commenter
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;AI Python Docstring Generator&lt;/strong&gt; is a VSCode extension to generate docstrings for Python functions. It is forked from the popular Docstring Generator extension for VSCode and uses NLP to summarize the content of a function into a docstring. This extension cannot be run on its own; you also need to set up the model inference server which can be run as a Docker image.¬†&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Free. Install from&lt;/em&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=graykode.ai-docstring"&gt;&lt;em&gt;VSCode marketplace&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. You‚Äôll also need to install the inference server.&lt;/em&gt;¬†&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quod AI Code Commenter&lt;/strong&gt; is another VSCode extension that can quickly generate comments for any code snippet. Just highlight the code and click ‚ÄúGenerate comments''. Quod AI‚Äôs extension works out of the box after installing it from the VSCode marketplace.¬† It supports languages beyond Python like Java, JavaScript, TypeScript and Ruby.¬†&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Free. Install from&lt;/em&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=quodai-extension.vscode-extension#review-details"&gt;&lt;em&gt;VSCode marketplace&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Eyn8JvoI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e811f492b5c8f5d9f075fb_L1nTww-555nAZLXfvS7uVSiOPJfLFaBEbTXECh3S6emcF9I-aQjPaDUehCHhqRLtnp1J_FYaL-pIDdGcm6C9vUmCepxsHCG3MVqZot9IVAbSc41APHKtwedx74mAzQZooxpc5SeR.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Eyn8JvoI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e811f492b5c8f5d9f075fb_L1nTww-555nAZLXfvS7uVSiOPJfLFaBEbTXECh3S6emcF9I-aQjPaDUehCHhqRLtnp1J_FYaL-pIDdGcm6C9vUmCepxsHCG3MVqZot9IVAbSc41APHKtwedx74mAzQZooxpc5SeR.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#github-copilot"&gt;
  &lt;/a&gt;
  &lt;a href="https://copilot.github.com/"&gt;GitHub Copilot&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;GitHub recently announced a brand new addition to their GitHub ecosystem called Copilot. It is your very own pair programmer that works on AI. It codes along with you and can suggest lines of code or even entire functions. GitHub says it has been trained on billions of lines of public code and is available as a VSCode extension. It is currently in technical preview and will support several languages and frameworks.¬†&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tuef6vxq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e811f5f9d9a80ffcc659a6_LgOJdGa203L-SCQXxas0TfvK1p5zCuHJqY_YSSKoqRhbjXEBIL1ogoqaSWlE-GJplQxr1NTAUnBaBuxX7SZcfX8k3zhEc2hhFz8gDBp59OO8Kqmu73-IRqSmDaL0dKQleYJjVtkZ.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tuef6vxq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e811f5f9d9a80ffcc659a6_LgOJdGa203L-SCQXxas0TfvK1p5zCuHJqY_YSSKoqRhbjXEBIL1ogoqaSWlE-GJplQxr1NTAUnBaBuxX7SZcfX8k3zhEc2hhFz8gDBp59OO8Kqmu73-IRqSmDaL0dKQleYJjVtkZ.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Sign up for the waiting list at&lt;/em&gt; &lt;a href="https://copilot.github.com/"&gt;&lt;em&gt;https://copilot.github.com/&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quod-ai-code-search-for-github-and-jira"&gt;
  &lt;/a&gt;
  Quod AI Code Search for Github and JIRA
&lt;/h2&gt;

&lt;p&gt;Quod AI Code Search is an AI-powered Chrome extension that automatically searches for code from Git repositories or from Jira issues. It uses the title and description of the issue and automatically finds matches in your Git repository.&lt;/p&gt;

&lt;p&gt;In addition to search, the extension also helps you navigate code files more easily with its code intelligence menu. After enabling it, you‚Äôll find an outline of all the functions in the file along with topics and tags.¬†&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1tPj12-a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e811fa027798b0f09a82cc_X2z5RZUDbhBcF0iGbagTTaF2-PDi82EvTUYxVVNrL1tI_ZsX-MsJ1Qtbz_AIK2wo_bDcuG72yANdbZ_D4wdqMlBqwd45nYUSskR-1ZEFuQSOdtWvyT9RTCvz5QaWv_P9tC8qajLQ.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1tPj12-a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e811fa027798b0f09a82cc_X2z5RZUDbhBcF0iGbagTTaF2-PDi82EvTUYxVVNrL1tI_ZsX-MsJ1Qtbz_AIK2wo_bDcuG72yANdbZ_D4wdqMlBqwd45nYUSskR-1ZEFuQSOdtWvyT9RTCvz5QaWv_P9tC8qajLQ.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check out the example above which shows how to find if an account is registered in the sample JHipster code repository analyzed using the Quod AI Chrome extension. Imagine having a very large file and not knowing where to start looking for something. With this extension, search is simplified and the answer is presented to you within seconds.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Free. Install from the&lt;/em&gt; &lt;a href="https://chrome.google.com/webstore/detail/quod-ai-automatic-code-se/meglmkkpdmcimaaknnmllpbnnclnnipn?hl=en"&gt;&lt;em&gt;Chrome store&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#kite"&gt;
  &lt;/a&gt;
  Kite
&lt;/h2&gt;

&lt;p&gt;Kite is a code completion tool that uses AI models trained over 25 million files to predict completions. It supports over 16 different languages and 16 code editors making it a very versatile option for any developer. The code completion is also context-aware which means that it recommends code based on the other variable and functions that you‚Äôre writing from.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Free. Install from the Kite&lt;/em&gt; &lt;a href="https://www.kite.com/"&gt;&lt;em&gt;website&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5xCKnRjW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e811f3db08141a7e3301fe_x1SV2mEO_iv1ceemaIoJGb3upkXtJWhpFGCvvOIL-svxGjr78My9OHM4oWLnr3Su3IhFuLH9Arx9yfu5Mu5m4pi4SaG_3eDmaIustQ-Sb8qRBVSY7Ey40UOJv_GkGNKQ0OPIpvB6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5xCKnRjW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e811f3db08141a7e3301fe_x1SV2mEO_iv1ceemaIoJGb3upkXtJWhpFGCvvOIL-svxGjr78My9OHM4oWLnr3Su3IhFuLH9Arx9yfu5Mu5m4pi4SaG_3eDmaIustQ-Sb8qRBVSY7Ey40UOJv_GkGNKQ0OPIpvB6.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tabnine-ai-code-completion"&gt;
  &lt;/a&gt;
  Tabnine AI Code Completion
&lt;/h2&gt;

&lt;p&gt;Tabnine is an AI code completion tool and is a direct competitor of Kite. They boast that they are the world‚Äôs leading AI code completion tool with over 1 million developers using it actively. The code completion from Tabnine is very good as it studies publicly available code and uses deep learning to predict completions. Their website has really cool video snippets that show how good the tool is and how effective it is at predicting code. Definitely a lifesaver for developers. Their free tier has only 50 code completions a day, which is a letdown and they do not have student plans as well. The Pro plan gives you unlimited code completions and a lot more advanced features but comes at $12 per month per user.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Free (limited usage). Install from&lt;/em&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=TabNine.tabnine-vscode"&gt;&lt;em&gt;VSCode marketplace&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MlFffhSF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e811f35c0fe5e1e0c7a002_ynDbguezOpMdX-5nnoDCYRSzK-3S-U33QFnYuWA_ytemPXASLeM1dEyuvkjuyJHXLyNpXsrIxzLVpo9DCPyc7hO7yoJMsP8Ce7J6yiAPq3MdNNzGz2hksB6-2ze-TMXkcb-c5rl6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MlFffhSF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e811f35c0fe5e1e0c7a002_ynDbguezOpMdX-5nnoDCYRSzK-3S-U33QFnYuWA_ytemPXASLeM1dEyuvkjuyJHXLyNpXsrIxzLVpo9DCPyc7hO7yoJMsP8Ce7J6yiAPq3MdNNzGz2hksB6-2ze-TMXkcb-c5rl6.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#debuild"&gt;
  &lt;/a&gt;
  Debuild
&lt;/h2&gt;

&lt;p&gt;Debuild is a tool that is made from the OpenAI GPT-3 API. GPT-3 is OpenAI‚Äôs first commercial product that provides an API to developers to build very powerful applications using the GPT-3 model. The GPT-3 model is latest OpenAI model, and its most powerful yet, powered by 175 billion parameters.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YJ03Pscb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e81219db0814598e330289_sxgSFeU1YEZ3DFhgFRRNQ4eZVT0WH7GBVDDbjRZ2CEeik4HtiUzWP8CGhkuj-yVltePnxxKjLDONjUAIaSRc0x9bIuPLHfyiJuO5zT4qL2t4I2KISKsDa7eicO7dd2nNKjJaMnBE.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YJ03Pscb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://uploads-ssl.webflow.com/5e733294d7b5a568ffa60a00/60e81219db0814598e330289_sxgSFeU1YEZ3DFhgFRRNQ4eZVT0WH7GBVDDbjRZ2CEeik4HtiUzWP8CGhkuj-yVltePnxxKjLDONjUAIaSRc0x9bIuPLHfyiJuO5zT4qL2t4I2KISKsDa7eicO7dd2nNKjJaMnBE.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Typing in what you require in plain english will produce the output that you want in code along with the ready-to-use application. There is very little information available about how it works exactly, but you need to sign up and use a Google form to input what you want to build. This tool is still in very early stages of its development and might not be very polished.¬†&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Free. Sign up for the waiting list at&lt;/em&gt; &lt;a href="https://debuild.co/"&gt;&lt;em&gt;debuild.co&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>ai</category>
      <category>javascript</category>
      <category>python</category>
    </item>
    <item>
      <title>GitHub Copilot: All you need to know</title>
      <author>Ayushi Rawat </author>
      <pubDate>Fri, 09 Jul 2021 09:44:32 +0000</pubDate>
      <link>https://dev.to/ayushi7rawat/github-copilot-all-you-need-to-know-2a9i</link>
      <guid>https://dev.to/ayushi7rawat/github-copilot-all-you-need-to-know-2a9i</guid>
      <description>&lt;p&gt;Hello reader! &lt;/p&gt;

&lt;p&gt;Microsoft subsidiary GitHub launched Copilot to power pair programming with AI. In this blog post, I will share all you need to know about it.&lt;/p&gt;

&lt;p&gt;You can refer to my &lt;strong&gt;YouTube video Tutorial&lt;/strong&gt; to see a working tutorial for better understanding and a step-by-step guide of the same. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/RZmp6IPN0xw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-will-be-covered-in-this-blog"&gt;
  &lt;/a&gt;
  What will be covered in this Blog
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="mf"&gt;1.&lt;/span&gt; &lt;span class="n"&gt;What&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;GitHub&lt;/span&gt; &lt;span class="n"&gt;Copilot&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;
&lt;span class="mf"&gt;2.&lt;/span&gt; &lt;span class="n"&gt;How&lt;/span&gt; &lt;span class="n"&gt;does&lt;/span&gt; &lt;span class="n"&gt;GitHub&lt;/span&gt; &lt;span class="n"&gt;Copilot&lt;/span&gt; &lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;
&lt;span class="mf"&gt;3.&lt;/span&gt; &lt;span class="n"&gt;How&lt;/span&gt; &lt;span class="n"&gt;good&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;GitHub&lt;/span&gt; &lt;span class="n"&gt;Copilot&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;
&lt;span class="mf"&gt;4.&lt;/span&gt; &lt;span class="n"&gt;Does&lt;/span&gt; &lt;span class="n"&gt;GitHub&lt;/span&gt; &lt;span class="n"&gt;Copilot&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="n"&gt;perfect&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;
&lt;span class="mf"&gt;5.&lt;/span&gt; &lt;span class="n"&gt;Will&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;shared&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;
&lt;span class="mf"&gt;6.&lt;/span&gt; &lt;span class="n"&gt;Availability&lt;/span&gt;
&lt;span class="mf"&gt;7.&lt;/span&gt; &lt;span class="n"&gt;How&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;You&lt;/span&gt; &lt;span class="n"&gt;contribute&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;
&lt;span class="mf"&gt;8.&lt;/span&gt; &lt;span class="n"&gt;Ownership&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Let's get started!&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-github-copilot"&gt;
  &lt;/a&gt;
  What is GitHub Copilot?
&lt;/h2&gt;

&lt;p&gt;GitHub Copilot is an AI pair programmer. GitHub Copilot is powered by a new AI system developed by OpenAI Codex and is coming soon to Visual Studio Code. It aims to help Programmers code faster. It basically draws context from the code you‚Äôre working on, suggesting whole lines or entire functions.&lt;/p&gt;

&lt;p&gt;OpenAI Codex has a broad knowledge of how people use code and is significantly more capable than GPT-3 in code generation&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-github-copilot-work"&gt;
  &lt;/a&gt;
  How does GitHub Copilot work?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Uec3J81v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625813279327/aoeDJjsCS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uec3J81v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625813279327/aoeDJjsCS.png" alt="github_copilot.png"&gt;&lt;/a&gt;&lt;br&gt;
It can suggest complete lines of code or entire functions by analyzing how you code. GitHub Copilot can assemble code from user comments and predicts your code by just reading the function name you have declared. It allows you to cycle through alternative suggestions and manually edit the suggested code. It autofill repetitive code, or create unit tests for your methods. &lt;/p&gt;

&lt;p&gt;The GitHub Copilot editor extension sends your comments and code to the GitHub Copilot service, which then uses OpenAI Codex to synthesize and suggest code. it actually works by reading through all the open-source code on the GitHub repos worldwide and then collect the data and tries to find the best possible code related to it! It is said to work great with repetitive code patterns so users can let it generate the rest of the code. The AI assistant can also help you learn a new programming language.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-good-is-github-copilot"&gt;
  &lt;/a&gt;
  How good is GitHub Copilot?
&lt;/h2&gt;

&lt;p&gt;The technology is truly promising.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Copilot helps developers to quickly discover alternative ways to solve problems, write tests, and explore new APIs without having to tediously tailor a search for answers on sites like Stack Overflow and across the internet,&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;says Friedman.&lt;/p&gt;

&lt;p&gt;It said to have been tested against a set of Python functions that have good test coverage in open source repos by blanking out the function bodies and asked GitHub Copilot to fill them in. The model got this right 43% of the time on the first try, and 57% of the time when allowed 10 attempts. And it‚Äôs getting smarter all the time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#does-github-copilot-write-perfect-code"&gt;
  &lt;/a&gt;
  Does GitHub Copilot write perfect code?
&lt;/h2&gt;

&lt;p&gt;No. GitHub Copilot tries to understand your intent and to generate the best code it can, but the code it suggests may not always work or even make sense. ‚ÄúGitHub Copilot draws context from the code you‚Äôre working on, suggesting whole lines or entire functions,‚Äù GitHub CEO &lt;a href="https://www.linkedin.com/in/natfriedman/"&gt;Nat Friedman&lt;/a&gt; explained in a &lt;a href="https://github.blog/2021-06-29-introducing-github-copilot-ai-pair-programmer/"&gt;blog post&lt;/a&gt; introducing the technology. The algorithm consistently improves by recording whether each suggestion is accepted or not. &lt;/p&gt;

&lt;p&gt;In order to make the most out of it, it is suggested to divide the code into smaller functions, provide meaningful function names, parameters, and docstrings.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#will-your-private-code-be-shared-with-other-users"&gt;
  &lt;/a&gt;
  Will your private code be shared with other users?
&lt;/h2&gt;

&lt;p&gt;No. They claim to use telemetry data, including information about which suggestions users accept or reject, to improve the model. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#availability"&gt;
  &lt;/a&gt;
  Availability
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--javfjozw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625813310374/II2ZmUf4t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--javfjozw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625813310374/II2ZmUf4t.png" alt="Screenshot_5.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For now, GitHub Copilot will only be made available to use in Visual Studio Code and the access is limited to a small group of testers. The preview version is available for free. The preview version is already installed by 88,783 coders.&lt;/p&gt;

&lt;p&gt;The technical preview works well for Python, JavaScript, TypeScript, Ruby and Go but the final version will work with a broader set of frameworks and languages. It will be used to learn how people use GitHub Copilot and what it takes to operate it at scale. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-you-contribute"&gt;
  &lt;/a&gt;
  How can You contribute?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dyqvJ12n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625813391060/lqBeVXx5J.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dyqvJ12n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625813391060/lqBeVXx5J.png" alt="Screenshot_3.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The best way to contribute is to sign up for the technical preview. Access is limited to a small group of testers during the technical preview of GitHub Copilot, so you can Join the GitHub Copilot waitlist &lt;a href="https://github.com/features/copilot/signup"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TnXyvphL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625813408515/r46S2eERc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TnXyvphL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625813408515/r46S2eERc.png" alt="Screenshot_4.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You only need to answer a simple question regarding how often do you use Visual Studio Code, accept the terms and conditions and you are good to go. The number of spots for the technical preview is limited, so sign up today!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gGqDng43--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625813417991/4vZWq1PI-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gGqDng43--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625813417991/4vZWq1PI-.png" alt="Screenshot_2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub states that the current preview phase is restricted because of the ‚Äústate-of-the-art AI hardware‚Äù required for the project. Once the free preview phase is over, the company plans to build a commercial version, which should be ‚Äúavailable as broadly as possible‚Äù. &lt;/p&gt;

&lt;p&gt;About sharing code snippets on Social media, GitHub says:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Please use &lt;a href="https://twitter.com/hashtag/GitHubCopilot"&gt;#GitHubCopilot&lt;/a&gt; when you post so we can see what you produce!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#ownership"&gt;
  &lt;/a&gt;
  Ownership
&lt;/h2&gt;

&lt;p&gt;GitHub assigns rights to the person writing the code, so the user becomes responsible for the suggestions it generates and code created with Copilot. It belongs to you, and you obtain the sole ownership of the code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#will-github-copilot-affect-developer-jobs"&gt;
  &lt;/a&gt;
  Will GitHub Copilot affect developer jobs?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://copilot.github.com/"&gt;Copilot&lt;/a&gt; autocompletes code snippets, suggests new lines of code, and can even write whole functions based on the description provided. It adapts to the way you write code and helps you complete the work faster. The technology will enable existing engineers to be more productive, reducing manual tasks and helping them focus on interesting work. It only suggests a piece of code, it still needs to be reviewed and tested manually like you normally do with every other code. &lt;/p&gt;

&lt;p&gt;It is very interesting to observe how events will now unfold and what the future holds for us but regardless, I do not think that it will replace developer jobs anytime soon. What do you think of this? Share your thoughts in the comment box below.&lt;/p&gt;

&lt;p&gt;That's it. And with that, it's a wrap! I hope you found the article useful and now you can start building some projects with API!&lt;/p&gt;

&lt;p&gt;I create content about &lt;strong&gt;Career, Blogging, Programming, and Productivity&lt;/strong&gt;, If this is something that interests you, please share the article with your friends and connections. You can also subscribe to my newsletter to get updates every time I write something!&lt;/p&gt;

&lt;p&gt;Thank you for reading, If you have reached so far, please like the article, It will encourage me to write more such articles. Do share your valuable suggestions, I appreciate your honest feedback!&lt;/p&gt;

&lt;p&gt;I would strongly recommend you to Check out the &lt;a href="https://www.youtube.com/watch?v=jAOkWehMF6E"&gt;YouTube video&lt;/a&gt; of the same and &lt;strong&gt;don't forget to subscribe to my Channel&lt;/strong&gt;. I would love to connect with you at &lt;a href="https://twitter.com/ayushi7rawat"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/ayushi7rawat/"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You should definitely check out my other Blogs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/python-39-all-you-need-to-know"&gt;Python 3.9: All You need to know&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/github-cli-10-all-you-need-to-know"&gt;GitHub CLI 1.0: All you need to know&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/how-to-make-your-own-google-chrome-extension-1"&gt;How to make your own Google Chrome Extension&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/run-javascript-from-python"&gt;Run Javascript from Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/automate-whatsapp-using-python"&gt;Automate WhatsApp using Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/automate-cowin-vaccine-slots-availablity-using-python"&gt;Automate Cowin Vaccine slots Availability using Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/what-is-competitive-programming-or-beginners-guide"&gt;What is Competitive Programming&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://copilot.github.com/"&gt;https://copilot.github.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=GitHub.copilot"&gt;https://marketplace.visualstudio.com/items?itemName=GitHub.copilot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.blog/2021-06-29-introducing-github-copilot-ai-pair-programmer/"&gt;https://github.blog/2021-06-29-introducing-github-copilot-ai-pair-programmer/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See you in my next Blog article, Take care!!&lt;/p&gt;

</description>
      <category>github</category>
      <category>webdev</category>
      <category>machinelearning</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>9+ Online eBay Clone eCommerce Script Alternative</title>
      <author>Aleyda Cohen</author>
      <pubDate>Fri, 09 Jul 2021 09:37:07 +0000</pubDate>
      <link>https://dev.to/aleydacohen/9-online-ebay-clone-ecommerce-script-alternative-4m1n</link>
      <guid>https://dev.to/aleydacohen/9-online-ebay-clone-ecommerce-script-alternative-4m1n</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HSKc0y-9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qptql0nc5ieuj5opypf6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HSKc0y-9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qptql0nc5ieuj5opypf6.png" alt="eBay Clone"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With the help of this great &lt;a href="https://www.clonedaddy.com/ebay-clone-script"&gt;eBay clone&lt;/a&gt; script, you can sell your items and invite other sellers to list their items available to be purchased on your website. However, providing a space for buying and selling different items is a long way from being the lone feature or function. &lt;/p&gt;

&lt;p&gt;While some people think &lt;a href="https://www.amazon.com/"&gt;Amazon&lt;/a&gt; is winning the eBay versus Amazon war, eBay is now one of the biggest names in ecommerce with over 171 million active users and 1 billion items listed. Taking everything into account, sellers search for alternatives to eBay for some reasons. Some need to expand their successful business beyond eBay. Others might be tiring of it and need to move to something new. &lt;/p&gt;

&lt;p&gt;This modern and versatile &lt;a href="https://www.ebay.com/"&gt;eBay&lt;/a&gt; like Website script comes with numerous features and functions that can make your business successful. Our comprehensive turn-key arrangement is an easy to use marketplace platform, which will permit the user to place banners and other types of advertising to increase your revenue. We comes with a uninterrupted and secure payment alternative, which will help the two buyers and sellers. &lt;/p&gt;

&lt;p&gt;Speed and ease of use are among the best qualities of the platform when it comes to managing the system as an admin. You needn't bother with any technical knowledge to work with us. The admin panel of the platform is easy to use and permits you to customize your auction website according to your requirement. The customization should be possible both in terms of content and in the design and structure. &lt;/p&gt;

&lt;p&gt;Here are a few features to convince you of the versatility of this great software: &lt;br&gt;
‚Ä¢ Seller verification on different platforms to ensure reliability. &lt;br&gt;
‚Ä¢ Advanced search alternatives to return speedy and accurate results. &lt;br&gt;
‚Ä¢ The script maintains Multi-language and multi-currency to help you to extend your business to non-English speaking users. &lt;br&gt;
‚Ä¢ Social sharing choices to drive more traffic towards your website. &lt;br&gt;
‚Ä¢ Social sign-in features to save time during signup. &lt;br&gt;
‚Ä¢ The software can handle an unlimited number of items and users. &lt;/p&gt;

&lt;p&gt;Besides these features, the platform permits you to develop the design that best suits your affiliation. You won't ever arrived behind schedule of space, regardless of how speedy your enterprise is growing as you can deploy it in the cloud server rapidly. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-ebay-entrepreneurs-alternative"&gt;
  &lt;/a&gt;
  The eBay Entrepreneur's Alternative
&lt;/h2&gt;

&lt;p&gt;Presently, with no further ado, here are the best 11 eBay selling alternatives of 2021. &lt;br&gt;
‚Ä¢ Amazon &lt;br&gt;
‚Ä¢ Etsy &lt;br&gt;
‚Ä¢ Rakuten &lt;br&gt;
‚Ä¢ Newegg &lt;br&gt;
‚Ä¢ Bonanza &lt;br&gt;
‚Ä¢ Mercari &lt;br&gt;
‚Ä¢ Ebid &lt;br&gt;
‚Ä¢ Ruby Lane &lt;br&gt;
‚Ä¢ Ecrater &lt;br&gt;
‚Ä¢ Alibaba &lt;/p&gt;

&lt;p&gt;Above are the best 11 other sites like eBay for sellers in-depth and overview other notable mentions. While some of these alternatives presumably won't be a great fit for every merchant, we guarantee you'll find no less than one that could be a profitable alternative for your business. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-your-own-marketplace"&gt;
  &lt;/a&gt;
  Create Your Own Marketplace
&lt;/h3&gt;

&lt;p&gt;Is it time to expand beyond established marketplace and create one of your own? As you see from the synopsis above, numerous marketplaces are successful when selling to niche markets. The experience can be better to consumers with a more curated synopsis of items or services. &lt;/p&gt;

&lt;p&gt;In the event that you feel that there's an untapped or underserved niche market, there are choices to create your own marketplace. The present sellers can take advantage of maturing shopping truck software that makes it possible to create your very own site. &lt;/p&gt;

&lt;p&gt;Building an ecommerce platform like eBay needs the involvement of experts. Starting a website like eBay isn't easy, it requires more important steps. Here are the essential steps to be followed to create the eBay clone. &lt;br&gt;
‚Ä¢ Decide your Target Market &lt;br&gt;
‚Ä¢ Create Your Business Name &lt;br&gt;
‚Ä¢ Choose the Domain &lt;br&gt;
‚Ä¢ Select A Web Host &lt;br&gt;
‚Ä¢ Get an eBay Clone Software &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-ebay-clone-ecommerce-script-improve-your-online-presence"&gt;
  &lt;/a&gt;
  How eBay Clone eCommerce Script Improve Your Online Presence?
&lt;/h2&gt;

&lt;p&gt;The main purpose of using eBay clone &lt;a href="https://www.clonedaddy.com/ecommerce-script"&gt;eCommerce script&lt;/a&gt; is that it can improve the most essential components of your ecommerce business and furthermore add advanced functions as below that automates your online e-commerce store. &lt;/p&gt;

&lt;p&gt;Get On demand eBay shopping truck Software at a reasonable expense. We have a significantly experienced tech team that provides eBay Like app development service for both the platform, &lt;a href="https://www.android.com/"&gt;android&lt;/a&gt;, and &lt;a href="https://www.apple.com/ios/"&gt;ios&lt;/a&gt;. Its never beyond the point where it is possible to help up your business.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>webdev</category>
      <category>discuss</category>
      <category>ebay</category>
    </item>
    <item>
      <title>Should we go Serverless?! </title>
      <author>Parth Khanna</author>
      <pubDate>Fri, 09 Jul 2021 09:14:11 +0000</pubDate>
      <link>https://dev.to/parthkhanna07/should-we-go-serverless-3l6o</link>
      <guid>https://dev.to/parthkhanna07/should-we-go-serverless-3l6o</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H2f-qM3y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/267vuth6soa7rc5p228a.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H2f-qM3y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/267vuth6soa7rc5p228a.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Introduction&lt;/strong&gt;&lt;br&gt;
Serverless computing offers a number of advantages over traditional cloud-based or server-centric infrastructure. By using a serverless architecture,  developers can focus on their core product instead of worrying about managing and operating servers or runtimes, either in the cloud or on-premises. This reduced overhead lets developers reclaim time and energy that can be spent on developing great products which scale and that are reliable.Serverless services like &lt;a href="https://aws.amazon.com/lambda/"&gt;AWS Lambda&lt;/a&gt; come with automatic scaling, built-in high availability, and a pay-for-value billing model. Lambda is an event-driven compute service that enables you to run code in response to events from over 200 natively-integrated AWS and SaaS sources - all without managing any servers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is serverless computing?&lt;/strong&gt;&lt;br&gt;
Serverless computing is a method of providing backend services on an as-used basis. A serverless provider allows users to write and deploy code without the hassle of worrying about the underlying infrastructure. A company that gets backend services from a serverless vendor is charged based on their computation and does not have to reserve and pay for a fixed amount of bandwidth or number of servers, as the service is auto-scaling. Note that despite the name serverless, physical servers are still used but developers do not need to be aware of them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of serverless computing&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Cost Benefits:-&lt;/strong&gt;  Serverless computing allows developers to purchase backend services on a flexible ‚Äòpay-as-you-go‚Äô basis, meaning that developers only have to pay for the services they use. This is like switching from a cell phone data plan with a monthly fixed limit, to one that only charges for each byte of data that actually gets used.&lt;br&gt;
&lt;strong&gt;No server management is necessary:-&lt;/strong&gt; Although 'serverless' computing does actually take place on servers, developers never have to deal with the servers. They are managed by the vendor. This can reduce the investment necessary in DevOps, which lowers expenses, and it also frees up developers to create and expand their applications without being constrained by server capacity.&lt;br&gt;
&lt;strong&gt;‚ÄúGreener‚Äù hosting and computing:-&lt;/strong&gt; Companies that host data centers or their own servers need to run their servers at all times. Think about all the huge data centers and the physical resources needed to build these centers. Think about the energy needed to keep them running. The good thing about serverless architecture is that you can buy servers on demand when you need it. This can reduce the resources needed to keep various companies online.&lt;br&gt;
&lt;strong&gt;Quick deployments and updates are possible:-&lt;/strong&gt; Using a serverless infrastructure, there is no need to upload code to servers or do any backend configuration in order to release a working version of an application. Developers can very quickly upload bits of code and release a new product. They can upload code all at once or one function at a time, since the application is not a single monolithic stack but rather a collection of functions provisioned by the vendor.&lt;br&gt;
&lt;strong&gt;Happier customers:-&lt;/strong&gt; This will depend on the company in question. Serverless architecture can potentially lead to happier customers. A company that can draw up new servers and ship features faster means that customers can access these new features. Nobody wants to wait an entire year for small fixes. Through serverless, you don‚Äôt have to worry about infrastructure. You can release logic and features quickly that will improve the user experience.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Serverless architecture&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;AWS Lambda:-&lt;/strong&gt; With Lambda, you can run code for virtually any type of application or backend service - all with zero administration. Just upload your code as a ZIP file or container image, and Lambda automatically and precisely allocates compute execution power and runs your code based on the incoming request or event, for any scale of traffic. You can set up your code to automatically trigger from over 200 AWS services and SaaS applications or call it directly from any web or mobile app. You can write Lambda functions in your favorite language (Node.js, Python, Go, Java, and more) and use both serverless and container tools, such as AWS SAM or Docker CLI, to build, test, and deploy your functions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon API Gateway:-&lt;/strong&gt; Amazon API Gateway is a fully managed service that makes it easy for developers to create, publish, maintain, monitor, and secure APIs at any scale. APIs act as the "front door" for applications to access data, business logic, or functionality from your backend services. Using API Gateway, you can create RESTful APIs and WebSocket APIs that enable real-time two-way communication applications. API Gateway supports containerized and serverless workloads, as well as web applications.&lt;br&gt;
API Gateway handles all the tasks involved in accepting and processing up to hundreds of thousands of concurrent API calls, including traffic management, CORS support, authorization and access control, throttling, monitoring, and API version management. API Gateway has no minimum fees or startup costs. You pay for the API calls you receive and the amount of data transferred out and, with the API Gateway tiered pricing model, you can reduce your cost as your API usage scales.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon S3:-&lt;/strong&gt; Amazon Simple Storage Service (Amazon S3) is an object storage service that offers industry-leading scalability, data availability, security, and performance. This means customers of all sizes and industries can use it to store and protect any amount of data for a range of use cases, such as data lakes, websites, mobile applications, backup and restore, archive, enterprise applications, IoT devices, and big data analytics. Amazon S3 provides easy-to-use management features so you can organize your data and configure finely-tuned access controls to meet your specific business, organizational, and compliance requirements. Amazon S3 is designed for 99.999999999% (11 9's) of durability, and stores data for millions of applications for companies all around the world.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon RDS:-&lt;/strong&gt; Amazon Relational Database Service (Amazon RDS) makes it easy to set up, operate, and scale a relational database in the cloud. It provides cost-efficient and resizable capacity while automating time-consuming administration tasks such as hardware provisioning, database setup, patching and backups. It frees you to focus on your applications so you can give them the fast performance, high availability, security and compatibility they need.&lt;br&gt;
Amazon RDS is available on several &lt;a href="https://aws.amazon.com/rds/instance-types/"&gt;database instance types&lt;/a&gt; - optimized for memory, performance or I/O - and provides you with six familiar database engines to choose from, including &lt;a href="https://aws.amazon.com/rds/aurora/"&gt;Amazon Aurora&lt;/a&gt;, &lt;a href="https://aws.amazon.com/rds/postgresql/"&gt;PostgreSQL&lt;/a&gt;, &lt;a href="https://aws.amazon.com/rds/mysql/"&gt;MySQL&lt;/a&gt;, &lt;a href="https://aws.amazon.com/rds/mariadb/"&gt;MariaDB&lt;/a&gt;, &lt;a href="https://aws.amazon.com/rds/oracle/"&gt;Oracle Database&lt;/a&gt;, and &lt;a href="https://aws.amazon.com/rds/sqlserver/"&gt;SQL Server&lt;/a&gt;. You can use the &lt;a href="https://aws.amazon.com/dms/"&gt;AWS Database Migration Service&lt;/a&gt; to easily migrate or replicate your existing databases to Amazon RDS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disadvantages of serverless computing?&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Testing and debugging become more challenging:-&lt;/strong&gt; It is difficult to replicate the serverless environment in order to see how code will actually perform once deployed. Debugging is more complicated because developers do not have visibility into backend processes, and because the application is broken up into separate, smaller functions.&lt;br&gt;
&lt;strong&gt;Serverless computing introduces new security concerns:-&lt;/strong&gt; When vendors run the entire backend, it may not be possible to fully vet their security, which can especially be a problem for applications that handle personal or sensitive data. Because companies are not assigned their own discrete physical servers, serverless providers will often be running code from several of their customers on a single server at any given time. This issue of sharing machinery with other parties is known as 'multitenancy' ‚Äì think of several companies trying to lease and work in a single office at the same time. Multitenancy can affect application performance and, if the multi-tenant servers are not configured properly, could result in data exposure. &lt;br&gt;
&lt;strong&gt;Serverless architectures are not built for long-running processes:-&lt;/strong&gt; This limits the kinds of applications that can cost-effectively run in a serverless architecture. Because serverless providers charge for the amount of time code is running, it may cost more to run an application with long-running processes in a serverless infrastructure compared to a traditional one.&lt;br&gt;
&lt;strong&gt;Performance may be affected:-&lt;/strong&gt; Because it's not constantly running, serverless code may need to 'boot up' when it is used. This startup time may degrade performance. However, if a piece of code is used regularly, the serverless provider will keep it ready to be activated ‚Äì a request for this ready-to-go code is called a 'warm start.' A request for code that hasn't been used in a while is called a 'cold start.'&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;br&gt;
Serverless, despite the confusing name, is a style of architecture where we rely on running our own server-side systems as part of our applications to a smaller extent than usual.The term ‚Äòserverless‚Äô is somewhat misleading, as there are still servers providing these backend services, but all of the server space and infrastructure concerns are handled by the vendor. Serverless means that the developers can do their work without having to worry about servers at all.&lt;br&gt;
Serverless computing continues to evolve as serverless providers come up with solutions to overcome some of its drawbacks. One of these drawbacks is cold starts.&lt;br&gt;
Typically when a particular serverless function has not been called in a while, the provider shuts down the function to save energy and avoid over-provisioning. The next time a user runs an application that calls that function, the serverless provider will have to spin it up fresh and start hosting that function again. This startup time adds significant latency, which is known as a ‚Äòcold start‚Äô.&lt;br&gt;
Once the function is up and running it will be served much more rapidly on subsequent requests (warm starts), but if the function is not requested again for a while, the function will once again go dormant. This means the next user to request that function will experience a cold start. Up until fairly recently, cold starts were considered a necessary trade-off of using serverless functions.&lt;br&gt;
As more and more of the drawbacks of using serverless get addressed and the popularity of edge computing grows, we can expect to see serverless architecture becoming more widespread.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Acknowledgements&lt;/strong&gt;&lt;br&gt;
Thanks to the Serverless community, especially those whose content I link to in this article.&lt;br&gt;
&lt;a href="https://martinfowler.com/articles/serverless.html"&gt;Source 1&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.cloudflare.com/en-gb/learning/serverless/what-is-serverless/"&gt;Source 2&lt;/a&gt;&lt;/p&gt;

</description>
      <category>serverless</category>
      <category>aws</category>
    </item>
    <item>
      <title>‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶∞‡ßÅ‡¶ü (Digital Root)</title>
      <author>Prince Billy Graham Karmoker</author>
      <pubDate>Fri, 09 Jul 2021 08:59:53 +0000</pubDate>
      <link>https://dev.to/princebillygk/digital-root-5dpj</link>
      <guid>https://dev.to/princebillygk/digital-root-5dpj</guid>
      <description>&lt;p&gt;‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶ï‡ßá ‡¶è‡¶ï‡¶§‡ßç‡¶∞‡ßá ‡¶¨‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶∞ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü ‡¶¨‡¶ø‡¶∂‡¶ø‡¶∑‡ßç‡¶ü ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶á ‡¶∞‡ßÇ‡¶™‡¶æ‡¶®‡ßç‡¶§‡¶∞ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶ï‡ßç‡¶∞‡¶ø‡ßü‡¶æ‡¶ï‡ßá‡¶á ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶∞‡ßÅ‡¶ü ‡¶¨‡¶≤‡ßá‡•§ ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£‡¶É&lt;/p&gt;

&lt;p&gt;173 ‡¶è‡¶∞ ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶∞‡ßÅ‡¶ü ‡¶®‡¶ø‡¶∞‡ßç‡¶£‡ßü:&lt;/p&gt;

&lt;p&gt;1 + 7 + 3 = 11&lt;br&gt;
1 + 1 = 2&lt;/p&gt;

&lt;p&gt;‡¶â‡¶§‡ßç‡¶§‡¶∞‡¶É 2&lt;/p&gt;

&lt;p&gt;9256987 ‡¶è‡¶∞ ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶∞‡ßÅ‡¶ü ‡¶®‡¶ø‡¶∞‡ßç‡¶£‡ßü&lt;/p&gt;

&lt;p&gt;9 + 2 + 5 + 6 + 9 + 9 + 7 = 46&lt;br&gt;
4 + 6 = 10&lt;br&gt;
1 + 0 = 1&lt;/p&gt;

&lt;p&gt;‡¶â‡¶§‡ßç‡¶§‡¶∞‡¶É 1&lt;/p&gt;

&lt;p&gt;‡¶è‡¶á‡¶≠‡¶æ‡¶¨‡ßá ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶∞‡ßÅ‡¶ü ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶™‡¶¶‡ßç‡¶ß‡¶§‡¶ø‡¶ï‡ßá Naive method ‡¶¨‡¶≤‡¶æ ‡¶π‡ßü‡•§ ‡¶Ø‡¶æ ‡¶™‡ßç‡¶∞‡ßã‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ‡¶ø‡¶ô‡ßü‡ßá‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶¨‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶∞ ‡¶≤‡ßÅ‡¶™ ‡¶ö‡¶æ‡¶≤‡¶ø‡ßü‡ßá ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü (‡¶®‡¶ø‡¶ú‡ßá ‡¶ï‡¶∞‡ßã)&lt;/p&gt;

&lt;p&gt;‡¶è‡¶¨‡¶æ‡¶∞ ‡¶Ü‡¶∏ ‡¶Ü‡¶∞‡ßá‡¶ï‡¶ü‡¶ø ‡¶∏‡¶π‡¶ú ‡¶™‡¶¶‡ßç‡¶ß‡¶§‡¶ø ‡¶ö‡¶ø‡¶®‡ßç‡¶§‡¶æ ‡¶ï‡¶∞‡¶ø&lt;/p&gt;

&lt;p&gt;DigitalRoot(1) = 1&lt;br&gt;
DigitalRoot(2) = 2&lt;br&gt;
DigitalRoot(3) = 3&lt;/p&gt;

&lt;p&gt;... ... ...&lt;/p&gt;

&lt;p&gt;DigtalRoot(9) = 9&lt;/p&gt;

&lt;p&gt;DigitalRoot(10) =1 + 0 -&amp;gt; 1&lt;br&gt;
DigtalRoot(11) = 1 + 1 -&amp;gt; 2&lt;br&gt;
DigitalRoot(12) = 1 + 2 -&amp;gt; 3&lt;br&gt;
DigitalRoot(13) = 1 + 3 = 4&lt;/p&gt;

&lt;p&gt;... ... ...&lt;/p&gt;

&lt;p&gt;DigitalRoot(18) = 1 + 8 = 9&lt;/p&gt;

&lt;p&gt;... ... ...&lt;/p&gt;

&lt;p&gt;‡¶ï‡¶ø ‡¶¶‡ßá‡¶ñ‡¶§‡ßá ‡¶™‡ßá‡¶≤‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶Ø‡¶¶‡¶ø ‡¶™‡¶∞ ‡¶™‡¶∞ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶∞ digital root ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶•‡¶æ‡¶ï‡¶ø ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶¨‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶∞ ‡ßß, ‡ß®, ‡ß©, ‡ß™, ‡ß´, ‡ß¨, ‡ß≠ , ‡ßÆ, ‡ßØ ‡¶è‡¶á ‡¶Æ‡¶æ‡¶® ‡¶ó‡ßÅ‡¶≤‡ßã ‡¶™‡¶∞ ‡¶™‡¶∞ ‡¶¨‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶∞ ‡¶Ü‡¶∏‡¶õ‡ßá‡•§ ‡¶Ö‡¶∞‡ßç‡¶•‡¶æ‡ßé ‡¶∂‡ßá‡¶∑‡¶¨‡¶æ‡¶∞ ‡¶Æ‡¶æ‡¶® ‡ßØ ‡¶Ü‡¶∏‡¶æ‡¶∞ ‡¶™‡¶∞ ‡¶Ü‡¶¨‡¶æ‡¶∞‡¶ì ‡ßß ‡¶•‡ßá‡¶ï‡ßá ‡¶Æ‡¶æ‡¶® ‡¶Ü‡¶∏‡¶æ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡¶ö‡ßç‡¶õ‡ßá‡•§ ‡¶è‡¶ï‡¶á ‡¶ï‡¶æ‡¶ú ‡¶Ü‡¶Æ‡¶æ‡¶∞‡¶æ ‡ßØ ‡¶¶‡ßç‡¶¨‡¶æ‡¶∞‡¶æ ‡¶≠‡¶æ‡¶ó ‡¶ï‡¶∞‡ßá ‡¶≠‡¶æ‡¶ó‡¶∂‡ßá‡¶∑ ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø‡•§ ‡¶§‡¶¨‡ßá ‡¶Ø‡¶ñ‡¶® ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶≠‡¶æ‡¶ó‡¶∂‡ßá‡¶∑ ‡ß¶ ‡¶Ü‡¶∏‡¶¨‡ßá ‡¶§‡¶¨‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶∞‡ßÅ‡¶ü ‡¶ï‡ßá ‡ßØ ‡¶ß‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§ ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶Ø‡¶¶‡¶ø ‡ß¶ ‡¶è‡¶∞ ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶∞‡ßÅ‡¶ü ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶¨‡¶≤‡ßá ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶≠‡¶æ‡¶ó‡¶∂‡ßá‡¶∑ ‡ß¶ ‡¶π‡¶≤‡ßá‡¶ì ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶∞‡ßÅ‡¶ü ‡ß¶ ‡¶á ‡¶π‡¶¨‡ßá‡•§&lt;/p&gt;

&lt;p&gt;1 mod 9 = 1&lt;br&gt;
2 mod 2 = 2&lt;br&gt;
...&lt;br&gt;
9 mod 9 = 0 (‡ß¶ ‡¶ï‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶∞‡¶æ ‡ßØ ‡¶ß‡¶∞‡¶¨)&lt;/p&gt;

&lt;p&gt;10 mod 9 = 1&lt;br&gt;
11 mod 9 = 2&lt;br&gt;
12 mod 9 = 3 &lt;br&gt;
13 mod 9 = 4&lt;br&gt;
...&lt;br&gt;
18 mod 9 = 0 (9)&lt;br&gt;
... ... ...&lt;/p&gt;

&lt;p&gt;‡¶Ö‡¶∞‡ßç‡¶•‡¶æ‡ßé ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶∞‡ßÅ‡¶ü ‡¶®‡¶ø‡¶∞‡ßç‡¶£‡ßü‡ßá‡¶∞ ‡¶∏‡ßÇ‡¶§‡ßç‡¶∞‡¶ü‡¶ø ‡¶π‡¶¨‡ßá:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BSYC7qXi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zi95xv0vpbuc7jqlvzl1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BSYC7qXi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zi95xv0vpbuc7jqlvzl1.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Python code snippet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‡¶Ø‡¶æ‡¶∞ Big(o) Complexity: O(1)&lt;/p&gt;

</description>
      <category>python</category>
      <category>problem</category>
      <category>bangla</category>
    </item>
    <item>
      <title>How to Create a SaaS MVP and Succeed</title>
      <author>Codica</author>
      <pubDate>Fri, 09 Jul 2021 08:32:25 +0000</pubDate>
      <link>https://dev.to/codicacom/how-to-create-a-saas-mvp-and-succeed-40g1</link>
      <guid>https://dev.to/codicacom/how-to-create-a-saas-mvp-and-succeed-40g1</guid>
      <description>&lt;p&gt;&lt;em&gt;The article was initially published on &lt;a href="https://www.codica.com/blog/how-to-create-mvp-for-saas/"&gt;Codica blog&lt;/a&gt;.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;Until the late 90th, we had to install various software on our PCs: for working with documents, messaging, or task management. Every new piece of software took up space on a hard drive. An update could take several hours or even a whole day since it needed tons of resources, our skills, and hard drive space. &lt;/p&gt;

&lt;p&gt;Gladly, these days are in the past. It has become possible due to SaaS products and cloud computing boost. The recent forecasts state that the SaaS market will reach $623 billion by 2023. &lt;/p&gt;

&lt;p&gt;We have researched the SaaS domain future and came up with a guide on how to start a cloud solution, and discussed why starting with an MVP is crucial.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#saas-market-overview-and-perspectives"&gt;
  &lt;/a&gt;
  SaaS market: overview and perspectives
&lt;/h1&gt;

&lt;p&gt;A SaaS product is a cloud application that offers its services to all users via the Internet. &lt;br&gt;
Instead of downloading an app, all users access it from a web browser on a desktop or from their smartphones.&lt;/p&gt;

&lt;p&gt;Below are the main types of SaaS products with the key market shapers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rLO49nR1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ifvaw7h9sq0zgnwbl6fm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rLO49nR1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ifvaw7h9sq0zgnwbl6fm.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Trello, Jira, Asana - productivity software;&lt;/li&gt;
&lt;li&gt;SalesForce CRM, HubSpot CRM, SAP - customer relationship management software (CRM systems);&lt;/li&gt;
&lt;li&gt;Joomla, WooCommerce - content management systems (CMS);&lt;/li&gt;
&lt;li&gt;Shopify Plus, BigCommerce - eCommerce software.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;SaaS market overview&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;While COVID-19 had a massive negative influence on many businesses, its influence on the SaaS domain was not so bad. Only 27% of the companies claim a negative impact, while 40% claim from little to no negative influence. &lt;/p&gt;

&lt;p&gt;Here comes the three key SaaS facts by FinancesOnline to keep an eye on. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z0jZSUPF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zlxf7cnv0sp7lsz0dids.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z0jZSUPF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zlxf7cnv0sp7lsz0dids.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://financesonline.com/saas-statistics/"&gt;FinancesOnline&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The future of SaaS: chaos or a solution for every need?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On the one hand, the Internet connection is getting faster and more reliable, and even more SaaS startups are expected to reach the market. The majority of the businesses say that after 2022 they will use SaaS to cover over 80% of their software needs. So, this market is growing really fast.&lt;/p&gt;

&lt;p&gt;On the other hand, there are so many similar SaaS tools on the market now. Such a diversity confuses users and even causes a kind of SaaS chaos. It‚Äôs getting pretty hard to choose a cloud solution.  &lt;/p&gt;

&lt;p&gt;So, that‚Äôs next? There are many options here. For example, big SaaS names start to collaborate to help their end-users. For instance, Figma claimed the integrations with GitLab recently. Of course, these collaborations don't solve the problem of chaos in full but prove brands‚Äô awareness and desire to support the users.&lt;/p&gt;

&lt;p&gt;Bottom line: We are witnessing a real boost in the SaaS market now and it‚Äôs not going to slow down. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#minimum-viable-product-for-saas"&gt;
  &lt;/a&gt;
  Minimum viable product for SaaS
&lt;/h1&gt;

&lt;p&gt;What is a SaaS MVP about? It‚Äôs an early product version, ready to be put on the market. It has must-have features only and brings real value for its end-users.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benefits of MVP for a SaaS startup&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Even if you totally love your product idea, don‚Äôt hurry. &lt;a href="https://www.codica.com/blog/why-saas-startups-fail/"&gt;SaaS startups tend to fail&lt;/a&gt;. Statistics state that over 90% of SaaS startups stop working during the first 5 years. So do some research, check the market, and probe your idea with the minimal valuable product first. &lt;/p&gt;

&lt;p&gt;To help you in your MVP journey, we have collected the main advantages of &lt;a href="https://www.codica.com/services/mvp-development/"&gt;MVP for SaaS&lt;/a&gt; startups.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VkNp5SwI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/049w9ajez8clc52pcq6i.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VkNp5SwI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/049w9ajez8clc52pcq6i.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tech stack for a cloud MVP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Try to make your solution scalable for developers, and secure, and performing for both with no bells and whistles. Some useful tips to follow:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Consider open-source tools;&lt;/li&gt;
&lt;li&gt;Choose fast &lt;a href="https://www.codica.com/blog/saas-product-development-with-ruby-on-rails/"&gt;prototyping with Ruby on Rails&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Use free databases; &lt;/li&gt;
&lt;li&gt;Benefit from available solutions, e.g., Ruby gems; &lt;/li&gt;
&lt;li&gt;Don‚Äôt forget about load testing.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#guide-how-to-create-a-successful-saas-product"&gt;
  &lt;/a&gt;
  Guide: how to create a successful SaaS product
&lt;/h1&gt;

&lt;p&gt;When we talk about &lt;a href="https://www.codica.com/services/mvp-development/"&gt;MVP development&lt;/a&gt;, we usually follow the best practices. SaaS solutions are not an exception. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Competitive research.&lt;/strong&gt; Know your market, your competitors, and where you can provide more value to users. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Customer's pains and needs.&lt;/strong&gt; Listen to your end-users challenges, and they will help you out to create a product they need. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features set&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Choose only the required functionality for your MVP.&lt;/strong&gt; Have a look at these popular principles to avoid unnecessary work:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Pareto_principle"&gt;Pareto Principle&lt;/a&gt; or 80% to 20% rule. This rule helps to concentrate on 20% of must-have functionality and avoid 80% of the functions not being used. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.productplan.com/glossary/moscow-prioritization/"&gt;The MoSCoW method&lt;/a&gt; prioritizes the features from &lt;strong&gt;M&lt;/strong&gt; - Must-have features to &lt;strong&gt;S&lt;/strong&gt; - Should have and &lt;strong&gt;C&lt;/strong&gt; - Could have, and finally to &lt;strong&gt;W&lt;/strong&gt; - Won't have ones.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Choosing the Pricing Model&lt;/strong&gt;&lt;br&gt;
The pricing model in SaaS is a method to set the desired price for a solution. Among the top popular SaaS models are per-user pricing, tiered pricing, per-storage pricing, and pay as you go. All come with their Pros and Cons. We have created a &lt;a href="https://www.codica.com/blog/saas-pricing/"&gt;top 8 SaaS Pricing Models: Ultimate Guide 2021&lt;/a&gt; to assist you in picking the needed model. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Prototyping and MVP Development&lt;/strong&gt;&lt;br&gt;
Probe your idea with a working ‚Äòdraft‚Äô, a prototype. Once done, move to creating the ready-to-the-market MVP version.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Feedback gathering.&lt;/strong&gt; Don‚Äôt waste your time with untested ideas. Always listen to your end-users and their feedback.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-influences-the-cost-of-saas-mvp"&gt;
  &lt;/a&gt;
  What influences the cost of SaaS MVP
&lt;/h1&gt;

&lt;p&gt;There is no average cost for all SaaS solutions. The price always depends on many factors, including the project scope, tech stack, and the development team‚Äôs expertise. Let‚Äôs find out what influences the final cost in detail.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Tech stack&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can create an MVP using any popular framework. Our top three are Ruby on Rails (back-end), and React.js, or Vue.js (front-end). As for the Rails framework, it offers free open-source libraries, gems. There are over &lt;a href="https://rubygems.org/stats"&gt;167,000 gems&lt;/a&gt; now for different ready solutions. Using these solutions, you can speed up the development thus saving costs. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Number of features&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Consider only the must-have features for your MVP solution with no extras. More does not mean better. It will cost you extra and won‚Äôt bring value to users so will be a waste of resources and time.  &lt;/p&gt;

&lt;p&gt;Team‚Äôs expertise in &lt;a href="https://www.codica.com/services/saas-development/"&gt;SaaS development&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;When you work with SaaS experts, you will benefit from the vast expertise of the developers who have delivered many cloud solutions. &lt;/p&gt;

&lt;p&gt;This way, you can count on both an accurate estimate, expert advice, and quality app development on time and on budget.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Prices in different locations&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When we are talking about the prices or hourly rates, the calculations will depend on the location and the level of the development team. Below we have collected recent web development rates for three popular locations. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MthRT4kl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xuy812ng6hqvpkgdq6u4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MthRT4kl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xuy812ng6hqvpkgdq6u4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In order to estimate the final cost, you should consider all these factors. If you struggle to do it yourself or need advice, consider an &lt;a href="https://www.codica.com/blog/choosing-saas-application-development-company/"&gt;experienced SaaS development team&lt;/a&gt;. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final thoughts
&lt;/h1&gt;

&lt;p&gt;With the world‚Äôs shift to remote work, the SaaS domain proved its numerous benefits for businesses. Even if you did not consider cloud products before, it‚Äôs high time to move in this direction. On the bright side, you can use some ready solutions, and start off with a product MVP. &lt;/p&gt;

&lt;p&gt;Looking for a trusted &lt;a href="https://www.codica.com/services/saas-development/"&gt;SaaS development company&lt;/a&gt;? Consider the Codica team. If you start a new cloud-based app or need to manage an existing one, Codica team is here to share expertise in cloud solutions. We will help you solve all development pains, and assist your business to stand out from competitors. &lt;/p&gt;

&lt;p&gt;For more information about building a SaaS MVP visit our blog and read the article: &lt;a href="https://www.codica.com/blog/how-to-create-mvp-for-saas/"&gt;How to Build an MVP for a SaaS Startup: Practical Tips&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>saas</category>
      <category>mvp</category>
      <category>cloud</category>
    </item>
  </channel>
</rss>
