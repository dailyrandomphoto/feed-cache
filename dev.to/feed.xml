<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Keep Save your money üíµ, and Let's get a üëë Premium Courses for free as a üë©‚Äçüéìüë®‚Äçüéì university student</title>
      <author>Dzun N</author>
      <pubDate>Sun, 09 May 2021 22:33:08 +0000</pubDate>
      <link>https://dev.to/dzun_n/keep-save-your-money-and-let-s-get-a-premium-courses-for-free-as-a-university-student-m5p</link>
      <guid>https://dev.to/dzun_n/keep-save-your-money-and-let-s-get-a-premium-courses-for-free-as-a-university-student-m5p</guid>
      <description>&lt;p&gt;As student, we would pay out for getting premium courses to get study out of school. But how about you have access to many courses/resources for free that others have to pay for. It's a great opportunity to gain some edge, learn tools that are highly in demand while not spending any money.&lt;/p&gt;

&lt;p&gt;The greatest package, you can access as a student is &lt;a href="https://education.github.com/pack"&gt;GitHub Student Developer Pack&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#github-student-developer-pack"&gt;
  &lt;/a&gt;
  GitHub Student Developer Pack
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EpxUnQjT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/twwariw2df4a4phj7aiv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EpxUnQjT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/twwariw2df4a4phj7aiv.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-i-register-it-"&gt;
  &lt;/a&gt;
  How do I register it ?
&lt;/h2&gt;

&lt;p&gt;You don't have to bother about it. If you have an academic email address Github recognize, access is granted immediately. Besides great deals on learning platform, you also get a bunch of other great deals. So check that out!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#frontend-masters"&gt;
  &lt;/a&gt;
  &lt;a href="https://frontendmasters.com/welcome/github-student-developers/"&gt;Frontend Masters&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P0XPL27W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ipf3kzfuosohljt1oyn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P0XPL27W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ipf3kzfuosohljt1oyn.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The best deal in the GitHub student package is definitely  &lt;strong&gt;6 months&lt;/strong&gt;  of free access to  &lt;strong&gt;Frontend Masters&lt;/strong&gt;. It is worth between  &lt;strong&gt;200-250 USD&lt;/strong&gt;  and the content there is just awesome. If you wanna step up your web development skills, this is the platform you should use.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-camp"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.datacamp.com/"&gt;Data Camp&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RIIY1QZp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x2eyclhb3whhsnbd9z5n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RIIY1QZp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x2eyclhb3whhsnbd9z5n.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;If you are more interested in the world of data, you can get  &lt;strong&gt;3 months&lt;/strong&gt;  access to Data Camp. There you can learn Python, SQL, or R and really get a good grasp of advanced concepts. This content is worth  &lt;strong&gt;75 USD&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#educativeio"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.educative.io/github-students"&gt;Educative.io&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SGKwwh8O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llooekji04wyhkjc6cto.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SGKwwh8O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llooekji04wyhkjc6cto.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Another great platform with several famous courses that might help you land a dream job. Their System Design course is highly popular and you can get  &lt;strong&gt;3 months&lt;/strong&gt;  for free worth over  &lt;strong&gt;100 USD&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nexttech"&gt;
  &lt;/a&gt;
  &lt;a href="https://next.tech/github-students"&gt;next.tech&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h0hoSjFo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3adl76p35xgydek0su70.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h0hoSjFo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3adl76p35xgydek0su70.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Next Tech provides cloud computing environments that are accessible from the browser ‚Äï no downloads required. Students around the world use Next Tech so they don't have to install software themselves when they work on a programming project. This lets them focus on the coding and not on the annoying software set up!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#one-month"&gt;
  &lt;/a&gt;
  &lt;a href="https://onemonth.com/github/students"&gt;One Month&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LrKb37rA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t7nhuxt4dh8lcbtw25yf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LrKb37rA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t7nhuxt4dh8lcbtw25yf.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;One Month's online coding courses teach you exactly what you need to learn to code quickly. Learn Python, HTML, JavaScript and more in just 30 days.&lt;/p&gt;

&lt;p&gt;Over 120,000 students have used One Month's computer programming courses to launch their side hustles, level up their careers, and build things they couldn‚Äôt even imagine before. Our online coding bootcamps include certification, human support, and the change to create real-world projects that you can use for applying to jobs or attracting new clients.&lt;/p&gt;

&lt;p&gt;We invite all  &lt;a href="https://education.github.com/pack"&gt;Github Student Developer Pack&lt;/a&gt;  members to enjoy One Month‚Äôs online coding courses free for 30-days.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#interview-cake"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.interviewcake.com/github-students"&gt;Interview Cake&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qwJKpIN_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ty6lh2pp53oqpkymnx3l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qwJKpIN_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ty6lh2pp53oqpkymnx3l.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Students get access to  &lt;a href="https://www.interviewcake.com/table-of-contents"&gt;our full coding interview prep course&lt;/a&gt;  for 3 weeks FREE. Get ready to ace your coding interview with practice questions, tutorials, and data structures and algorithms review.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#go-rails"&gt;
  &lt;/a&gt;
  &lt;a href="https://gorails.com/github-students"&gt;Go Rails&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j8pBuwC1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cbqp146ugndm52rr92q0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j8pBuwC1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cbqp146ugndm52rr92q0.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Tutorials for web developers learning Ruby, Rails, Javascript, Turbolinks, Stimulus.js, Vue.js, and more. GoRails for GitHub Students 12 months of free access to GoRails for students&lt;br&gt;&lt;br&gt;
enrolled in the  &lt;a href="https://education.github.com/?utm_source=github+gorails"&gt;GitHub Student Developer Pack&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>github</category>
      <category>student</category>
    </item>
    <item>
      <title>Aqui est√° um tutorial de useState (ou quase)</title>
      <author>Paulo Alenquer</author>
      <pubDate>Sun, 09 May 2021 22:12:24 +0000</pubDate>
      <link>https://dev.to/palenquer/aqui-esta-um-tutorial-de-usestate-ou-quase-1m3j</link>
      <guid>https://dev.to/palenquer/aqui-esta-um-tutorial-de-usestate-ou-quase-1m3j</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8c91ke8T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8m64nayc4xxagczx92wt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8c91ke8T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8m64nayc4xxagczx92wt.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sempre que algu√©m se depara com o React pela primeira vez, se assusta com os seus hooks e funcionalidades, n√£o √© mesmo? Eu mesmo sinto medo de alguns hooks e j√° fui dormir chorando v√°rias vezes por conta de alguns deles.&lt;/p&gt;

&lt;p&gt;Mas fica tranquilo que pelo menos o useState eu posso tentar te ensinar de uma forma simples como se voc√™ estivesse no ensino fundamental pela primeira vez.&lt;/p&gt;

&lt;p&gt;Em React n√≥s temos v√°rios hooks e um deles √© o useState, esse pra mim √© o mais simples de entender e aplicar, ent√£o vamos ver como que ele funciona.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#criando-e-iniciando-o-usestate"&gt;
  &lt;/a&gt;
  Criando e iniciando o useState
&lt;/h2&gt;

&lt;p&gt;O que √© o useState? useState √© um hook do React a qual nos retorna um array com dois elementos, sendo o primeiro o nosso estado e o segundo uma fun√ß√£o para alterar o nosso estado. Al√©m disso, podemos passar como argumento, um estado inicial para o nosso estado. N√£o entendeu ainda? relaxa que eu vou te explicar. &lt;em&gt;Veja no exemplo abaixo:&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Aqui n√≥s temos o &lt;code&gt;state&lt;/code&gt; que √© o estado, o &lt;code&gt;setState&lt;/code&gt; que √© a fun√ß√£o para alterar o valor do nosso estado e o &lt;code&gt;useState(0)&lt;/code&gt; que √© o valor inicial do nosso estado, nesse caso √© o &lt;code&gt;0&lt;/code&gt; (poderia ser qualquer outro valor, como uma &lt;em&gt;string&lt;/em&gt;, &lt;em&gt;boolean&lt;/em&gt; ou um &lt;em&gt;array &lt;del&gt;de lingui√ßas artesanais&lt;/del&gt;&lt;/em&gt;).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#utilizando-o-usestate-na-pr%C3%A1tica"&gt;
  &lt;/a&gt;
  Utilizando o useState na pr√°tica
&lt;/h2&gt;

&lt;p&gt;Para entender melhor como funciona o useState, precisamos tamb√©m entende-lo na pr√°tica. E pra isso vou mostrar um exemplo de useState para fazer um contador simplesz√£o.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ignore os classNames&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RzeTcGDY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n2su1yhixdusg607lzq4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RzeTcGDY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n2su1yhixdusg607lzq4.png" alt="Screenshot_1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aqui temos um exemplo de um estado que est√° recebendo um valor inicial de &lt;code&gt;0&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCounter&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;e uma fun√ß√£o logo abaixo que ir√° acrescentar &lt;code&gt;1&lt;/code&gt; para nosso estado toda vez que o bot√£o for clicado&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;addCounter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setCounter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;(para exibir o estado na tela √© s√≥ adicionar um &lt;code&gt;{}&lt;/code&gt; no seu HTML com o estado dentro, no exemplo √© o h1).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r8MUoLXl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nvftcoob73l4u6d30y63.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r8MUoLXl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nvftcoob73l4u6d30y63.png" alt="Screenshot_2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ao clicar no bot√£o (finge que foi clicado duas vezes), automaticamente nosso estado foi exibido na p√°gina com o n√∫mero &lt;code&gt;2&lt;/code&gt;, gra√ßas a nossa fun√ß√£ozinha chamada &lt;code&gt;addCounter&lt;/code&gt; que acrescentou 2 vezes.&lt;/p&gt;

&lt;p&gt;CONSEGUIMOS, UHUL! criamos um contadorzinho super simples e funcional com o &lt;strong&gt;useState&lt;/strong&gt;! Agora √© s√≥ praticar com outros exemplos que eu tenho certeza que voc√™ vai se sair super bem! ‚ù§Ô∏è&lt;/p&gt;

</description>
      <category>react</category>
      <category>hooks</category>
      <category>usestate</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Changing text colour based on 

background colour luminosity </title>
      <author>Jamie Mc Manus</author>
      <pubDate>Sun, 09 May 2021 21:07:22 +0000</pubDate>
      <link>https://dev.to/jamiemcmanus/changing-text-colour-based-on-background-colour-luminosity-4cf2</link>
      <guid>https://dev.to/jamiemcmanus/changing-text-colour-based-on-background-colour-luminosity-4cf2</guid>
      <description>&lt;h5&gt;
  &lt;a href="#scenario"&gt;
  &lt;/a&gt;
  Scenario
&lt;/h5&gt;

&lt;p&gt;You decide to let the users of your application set the preferred colour of an item - this could anything from a simple card to an list item on a Kanban board.  This is a straightforward feature and common enough but it can wreak havoc on any foreground text that we place over it, like what happens if our text is white and they choose a light colour ? &lt;/p&gt;

&lt;p&gt;Your text will have the visibility of a ghost üëª.&lt;/p&gt;

&lt;p&gt;This isn't good. Our foreground text is gone and its because we gave the user an input in the application style, but fear not, the battle hasn't been lost yet.   &lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#le-solution"&gt;
  &lt;/a&gt;
  Le Solution
&lt;/h5&gt;

&lt;p&gt;What if we could check how dark / bright the colour the user selected is ? &lt;br&gt;
We could change the colour of the foreground text dynamically to be visible. To do this we need to find the Luminosity of the background colour, which is a measure of how bright or dark a hue is. &lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h5&gt;

&lt;p&gt;Create a Service folder in your project and create a new class &lt;code&gt;Luminosity.cs&lt;/code&gt; . Within this class we'll keep our helper methods for the task.&lt;br&gt;
We need to first get the luminance of the background colour , then using this value return a colour between white and black. The Luminance will be a double  between 0 (black) and 1(white), and we'll then translate this into an RGB value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System.Collections.Generic&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System.Drawing&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System.Linq&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System.Web&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;sampleproject.Services&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Luminosity&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="nf"&gt;GetLuminosity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;colour&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;//Convert html colour to Color Object&lt;/span&gt;
            &lt;span class="n"&gt;Color&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ColorTranslator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;FromHtml&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;colour&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="c1"&gt;//Get the Luminancce value from the converted color.    &lt;/span&gt;
            &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;luminance&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.299&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="m"&gt;0.587&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="m"&gt;0.114&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;luminance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nf"&gt;GetColour&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;colour&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;luminance&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;GetLuminosity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;colour&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="c1"&gt;// Translate the luminance to RGB values &lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Convert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToInt32&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;luminance&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;  &lt;span class="s"&gt;$"rgb(&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;,&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;,&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;)"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;


    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#razor-view"&gt;
  &lt;/a&gt;
  Razor View
&lt;/h5&gt;

&lt;p&gt;Now within the Razor View we can use the helper method to change the value of the foreground text.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;@using&lt;/span&gt; &lt;span class="n"&gt;sampleproject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Services&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;ViewBag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Title&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Index"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;Layout&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"~/Views/Shared/_Layout.cshtml"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="err"&gt;="&lt;/span&gt;&lt;span class="nc"&gt;card&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="s"&gt;"&amp;gt;
&lt;/span&gt;    &lt;span class="nf"&gt;@foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"background-color:"&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Primarycolor&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="s"&gt;";color:"&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="n"&gt;Luminosity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetColour&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Primarycolor&lt;/span&gt;&lt;span class="p"&gt;)+&lt;/span&gt;&lt;span class="s"&gt;";"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 

        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="err"&gt;="&lt;/span&gt;&lt;span class="nc"&gt;card&lt;/span&gt;&lt;span class="s"&gt;" style="&lt;/span&gt;&lt;span class="n"&gt;@style&lt;/span&gt;&lt;span class="s"&gt;"&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;.....&lt;/span&gt;&lt;span class="n"&gt;card&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;
       &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#the-result"&gt;
  &lt;/a&gt;
  The Result
&lt;/h5&gt;

&lt;p&gt;With the above code we should get a result roughly like the below.&lt;br&gt;&lt;br&gt;
The colour of the foreground text should always be on the opposite end of the scale to the background text. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NvYcekSf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ewmc8lu6ydx7pzv1m2e9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NvYcekSf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ewmc8lu6ydx7pzv1m2e9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#credits"&gt;
  &lt;/a&gt;
  Credits
&lt;/h6&gt;

&lt;p&gt;&lt;small&gt;Cover Photo by &lt;a href="https://unsplash.com/@ruvimnogaphoto?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Ruvim Noga&lt;/a&gt; on &lt;a href="https://unsplash.com/license?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;br&gt;
  &lt;/small&gt;&lt;/p&gt;

</description>
      <category>csharp</category>
      <category>css</category>
      <category>dotnet</category>
    </item>
    <item>
      <title>Simple Ways To Spice Up Website Anchors and Buttons</title>
      <author>James Sinkala</author>
      <pubDate>Sun, 09 May 2021 20:59:42 +0000</pubDate>
      <link>https://dev.to/xinnks/simple-ways-to-spice-up-website-anchors-and-buttons-5d1o</link>
      <guid>https://dev.to/xinnks/simple-ways-to-spice-up-website-anchors-and-buttons-5d1o</guid>
      <description>&lt;p&gt;I haven't been working explicitly with CSS as much as I would have liked to for the past couple weeks but either way on today's post I'm going to share with you some simple ways to spice up your website's links and/or buttons with CSS.&lt;/p&gt;

&lt;p&gt;Also to keep myself involved with CSS more I'll make this the first of many posts to come specifically on CSS, which will be part of a series yet to be named, that I'll be adding short content to regularly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#shine-by-effect"&gt;
  &lt;/a&gt;
  Shine By Effect
&lt;/h2&gt;

&lt;p&gt;For lack of a better word I guess shine-by serves an understandable name for what occurs visually with this effect. An example of this effect is shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wdVk7oZd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dk66woyjaqjus4fbwk64.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wdVk7oZd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dk66woyjaqjus4fbwk64.gif" alt="Button shine through effect"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's break it down.&lt;/p&gt;

&lt;p&gt;Two things happen as this effect is triggered on hover, one, the color of the button's text and it's background changes, and two, a band of light passes through from left to right simulating a "shine-by" effect.&lt;/p&gt;

&lt;p&gt;Here goes the HTML.&lt;br&gt;
Starting with the button.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button rounded outlined section-marker"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item-sparkle-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item-sparkle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt; Services &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Followed by the anchor&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"anchor rounded outlined section-marker"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item-sparkle-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item-sparkle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt; Services &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And finally the styles.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Archivo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nc"&gt;.main&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;justify&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nc"&gt;.outlined&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#141316&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nc"&gt;.rounded&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nc"&gt;.anchor&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;.button&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;.5em&lt;/span&gt; &lt;span class="n"&gt;-&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.5em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.75rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#141316&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nc"&gt;.anchor&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nc"&gt;.button&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nc"&gt;.button&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;.anchor&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#141316&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ffffff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.item-sparkle-wrapper&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.section-marker&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;.item-sparkle-wrapper&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;.item-sparkle&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;.item-sparkle-wrapper&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;.item-sparkle&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;skewX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-15deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;shine-by&lt;/span&gt; &lt;span class="m"&gt;.3s&lt;/span&gt; &lt;span class="m"&gt;0s&lt;/span&gt; &lt;span class="n"&gt;ease-in-out&lt;/span&gt; &lt;span class="n"&gt;forwards&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;shine-by&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;110%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You can also use CSS's background-gradient to animate the ray of light passing by from left to right as shown in the following comment:&lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/erichsia7"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Oa2qGgq7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--du7TszHZ--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/575134/4adecf41-10ed-47a2-95c5-1899369480b5.jpeg" alt="erichsia7 profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/erichsia7"&gt;
        &lt;span class="comment-username"&gt;EricHsia7&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;‚Ä¢&lt;/span&gt;

&lt;a href="https://dev.to/erichsia7/comment/1b888" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Feb 7
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;Maybe this method can also.&lt;br&gt;
.div {&lt;br&gt;
width:100px;&lt;br&gt;
height:30px;&lt;br&gt;
background: rgb(227,227,227);&lt;br&gt;
background: linear-gradient(90deg, rgba(227,227,227,1) 0%, rgba(182,182,182,1) 7%, rgba(182,182,182,1) 13%, rgba(227,227,227,1) 25%);&lt;br&gt;
background-size:900%;&lt;br&gt;
background-position: 100% 0%;&lt;br&gt;
animation: animation 1.8s;&lt;br&gt;
animation-iteration-count: infinite;&lt;br&gt;
animation-timing-function: ease-in-out;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;@keyframes animation {&lt;br&gt;
   0% {&lt;br&gt;
     background-position: 100% 0%;&lt;br&gt;
   }&lt;br&gt;
   99.99% {&lt;br&gt;
     background-position: -30% 0%;&lt;br&gt;
   }&lt;br&gt;
   100% {&lt;br&gt;
   background-position: 100% 0%;&lt;br&gt;
   }&lt;br&gt;
}&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;And that's all for the "shine-by" effect.&lt;br&gt;
Use it in your projects or better yet get creative and make it more visually stunning to bring your links and anchors to life.&lt;br&gt;
But don't overdo it, simplicity is key.&lt;/p&gt;

&lt;p&gt;Let the anchors shine.&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Let's Get You Started With React Native (If You're A React Developer)!</title>
      <author>Mohmed Ishak</author>
      <pubDate>Sun, 09 May 2021 20:56:03 +0000</pubDate>
      <link>https://dev.to/ishakmohmed/let-s-get-you-started-with-react-native-if-you-re-a-react-developer-8ja</link>
      <guid>https://dev.to/ishakmohmed/let-s-get-you-started-with-react-native-if-you-re-a-react-developer-8ja</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YS2O4G-l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m4ul1uztiuw1wf40p59i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YS2O4G-l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m4ul1uztiuw1wf40p59i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I know that you know React. I know that you don't know React Native. In this post, let's get you started with React Native.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-react-native"&gt;
  &lt;/a&gt;
  What's React Native?
&lt;/h3&gt;

&lt;p&gt;A cross-platform (native*) mobile development JavaScript framework made on top of React, so it resembles React in a lot of ways.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-i-wanna-learn-flutternative-development-using-javakotlinswift"&gt;
  &lt;/a&gt;
  But I wanna learn Flutter/Native development using Java/Kotlin/Swift...
&lt;/h3&gt;

&lt;p&gt;Cool. Why don't you just try making a "Hello, world!" app by following the rest of the post.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Disclaimer: I'll teach you how to make a React Native app using Expo CLI (in my opinion a great productivity tool, but has it's fair share of haters too). &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1:
&lt;/h5&gt;

&lt;p&gt;Install Expo globally.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt; &lt;span class="nx"&gt;expo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;cli&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2:
&lt;/h5&gt;

&lt;p&gt;Download Expo Go in your phone to view the app (it has hot reloading too).&lt;br&gt;
App Store: &lt;a href="https://apps.apple.com/us/app/expo-go/id982107779"&gt;https://apps.apple.com/us/app/expo-go/id982107779&lt;/a&gt;&lt;br&gt;
Play Store: &lt;a href="https://play.google.com/store/apps/details?id=host.exp.exponent&amp;amp;hl=en&amp;amp;gl=US"&gt;https://play.google.com/store/apps/details?id=host.exp.exponent&amp;amp;hl=en&amp;amp;gl=US&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3:
&lt;/h5&gt;

&lt;p&gt;Initialize a new project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;expo&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt; &lt;span class="nx"&gt;myproject&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#step-4"&gt;
  &lt;/a&gt;
  Step 4:
&lt;/h5&gt;

&lt;p&gt;Choose a workflow. I recommend managed workflow (blank) for starters. With this workflow, you'll have pure JavaScript project without the underlying Android and iOS codes, so your experience will be similar to building React apps on web. &lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#step-5"&gt;
  &lt;/a&gt;
  Step 5:
&lt;/h5&gt;

&lt;p&gt;Type this in App.js.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;View&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;StyleSheet&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-native&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;View&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myStyle&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Hello&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;world&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;sky&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/View&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;styles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;StyleSheet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;myStyle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="na"&gt;fontWeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bold&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Explanation: In React Native, there are no divs or heading tags. Instead we've got React Native components such as Text and View (equivalent to div in React). As for the styles, we need to import StyleSheet and define our CSS styles there, just like how we'd do it in React. In CSS, you'd write font-weight (kebab case) and in React/React Native, the equivalent is fontWeight (camel case). I assume you know this already.&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#step-6"&gt;
  &lt;/a&gt;
  Step 6:
&lt;/h5&gt;

&lt;p&gt;Run the project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#step-7"&gt;
  &lt;/a&gt;
  Step 7:
&lt;/h5&gt;

&lt;p&gt;Expo Developer Tools will be launched on your browser. From your Expo Go app in your phone, scan the provided QR code. Make sure your phone and computer are on the same network. &lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#done"&gt;
  &lt;/a&gt;
  Done!
&lt;/h5&gt;

&lt;p&gt;As you can see, React Native is very similar to React. Of course, when it comes to cross-platform mobile app development, there are so much of arguments. Some of them include "Flutter Vs. React Native", "Is Cross-Platform Mobile Dev Worth It", and so on. My advice to you is that if you know React already, it wouldn't hurt to learn React Native too. If anything, you can totally forget React Native and move on with your programming journey. &lt;/p&gt;

</description>
      <category>reactnative</category>
      <category>react</category>
      <category>mobile</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Text Outline Effect CSS</title>
      <author>James </author>
      <pubDate>Sun, 09 May 2021 20:54:55 +0000</pubDate>
      <link>https://dev.to/mayjaz/text-outline-effect-css-4f9d</link>
      <guid>https://dev.to/mayjaz/text-outline-effect-css-4f9d</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/mayjaz/embed/poeJaPX?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
    </item>
    <item>
      <title>QR Code Generator Website</title>
      <author>Bibek</author>
      <pubDate>Sun, 09 May 2021 20:52:38 +0000</pubDate>
      <link>https://dev.to/bibekkakati/qr-code-generator-website-gmo</link>
      <guid>https://dev.to/bibekkakati/qr-code-generator-website-gmo</guid>
      <description>&lt;p&gt;How can we generate a QR Code for any content in JavaScript?&lt;/p&gt;

&lt;p&gt;Check out this article: &lt;a href="https://blog.bibekkakati.me/generate-qr-code-in-javascript"&gt;Generate QRCode&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.bibekkakati.me/generate-qr-code-in-javascript"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gxcSNyP2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vescaka0h2njptfo3g91.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>node</category>
    </item>
    <item>
      <title>How to organize your design's file in Figma
</title>
      <author>raoufbelakhdar</author>
      <pubDate>Sun, 09 May 2021 20:23:34 +0000</pubDate>
      <link>https://dev.to/raoufbelakhdar/how-to-organize-your-design-s-file-in-figma-2cea</link>
      <guid>https://dev.to/raoufbelakhdar/how-to-organize-your-design-s-file-in-figma-2cea</guid>
      <description>&lt;p&gt;When it comes to design in Figma, you have the option to create your design on a single page and stack all your UI elements in a single area, or you can use pages to divide items to make your design clear and less saturated.&lt;/p&gt;

&lt;p&gt;Frequently, our files grow in size as a result of the components and iterations of the projects we make. It is important to maintain order. Otherwise, we risk being disoriented inside our file and make collaboration with our teammates difficult.&lt;/p&gt;

&lt;p&gt;One thing that helps avoid this situation is the Figma's page feature. To keep your stuff organized, you can build pages within your file. You might, for example, create a page dedicated to your components, another for the design screens, and a separate page for each design iteration.&lt;/p&gt;

&lt;p&gt;Here in this short post, I will use the &lt;a href="https://figmaland.com/uikit/essential-ui-pro"&gt;Essential UI Pro&lt;/a&gt; Figma file as an example to show you how I use pages to organize my design.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#essential-ui-pro"&gt;
  &lt;/a&gt;
  Essential UI Pro
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---s2_XLIx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tphaybuo946xex23ad7w.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---s2_XLIx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tphaybuo946xex23ad7w.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
The &lt;a href="https://figmaland.com/uikit/essential-ui-pro"&gt;Essential UI Pro&lt;/a&gt; is an Ui Kit, with 500+ Figma and HTML components, Ui Elements, pre-built layouts and more. Consequently, when I created the &lt;a href="https://figmaland.com/uikit/essential-ui-pro"&gt;Essential UI Kit&lt;/a&gt;, I knew it would be a massive file with hundreds of UI elements. Since I was creating this file not just for myself, but also to make it available to other designers and creatives, I had to consider the file's organization carefully.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-essential-ui-pro-file-structure"&gt;
  &lt;/a&gt;
  The Essential UI Pro File Structure
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://figmaland.com/uikit/essential-ui-pro"&gt;Essential UI Pro&lt;/a&gt; file is divided into six main pages: the index page, the components page, the elements page, the web/app screens page, the assets page, and the workshop page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E9FVcD2G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e20pygoj3c5rr4q1pczm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E9FVcD2G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e20pygoj3c5rr4q1pczm.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-the-index-page"&gt;
  &lt;/a&gt;
  1 - The index page
&lt;/h2&gt;

&lt;p&gt;When my clients and team members open the file, this is the first thing they see. I only make this page for the preview thumbnail in order to make a good first impression on my clients. I also included a list of all the external resources that were used in this file. For example, all of the icons, font faces, and stock images used in this file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YC0e2WmY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1s0kw00h33t7uvc806vx.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YC0e2WmY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1s0kw00h33t7uvc806vx.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
I strongly advise you to include an index page in your design's files where you can provide a preview look and quick information about your design.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-the-components-page"&gt;
  &lt;/a&gt;
  2 - The components page
&lt;/h2&gt;

&lt;p&gt;This is where I design and organize all of my components, from simple buttons to complex nav bars. It enables me to easily access any components I require.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UNz6p2Pf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/035nqd9422yw0og4h7cu.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UNz6p2Pf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/035nqd9422yw0og4h7cu.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
You will create many components in any design project, so consider devoting a special space for your Components inside your file.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-the-elements-page"&gt;
  &lt;/a&gt;
  3 - The elements page
&lt;/h2&gt;

&lt;p&gt;This page is dedicated to more complex UI elements such as headers, call to actions, and footers. I make multiple versions of each UI element so that when I begin composing the pages of my website, I will have more options.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HtxNscb8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o8upw8buvdv6um3ykee1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HtxNscb8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o8upw8buvdv6um3ykee1.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-the-web-pages-app-screens-page"&gt;
  &lt;/a&gt;
  4 - The web pages/ app screens page
&lt;/h2&gt;

&lt;p&gt;On this page, I create all of my app screens and web pages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MvRqsfEc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/784koa7e278h1gc6xj8i.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MvRqsfEc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/784koa7e278h1gc6xj8i.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-the-assets-page"&gt;
  &lt;/a&gt;
  5 - The Assets page
&lt;/h2&gt;

&lt;p&gt;This page contains a collection of color palettes and typography styles that I have used or will likely use in the design.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E240MYtP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ylmm9m9mu18vt86xuwn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E240MYtP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ylmm9m9mu18vt86xuwn.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-the-workshop-page"&gt;
  &lt;/a&gt;
  6 - The workshop page
&lt;/h2&gt;

&lt;p&gt;This is where the design magic takes place. In this page, I design and prototype the entire app or website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HOV6kVS8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ljtgc390e3q7rut4cno4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HOV6kVS8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ljtgc390e3q7rut4cno4.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By using these six basic pages, I will have a strong structure across my design's file. This makes it easier for me and my team to navigate the file. Maintain clarity even if the file grows significantly in size.&lt;/p&gt;

&lt;p&gt;That‚Äôs all about Figma's file structure, we've covered how to use pages for better file organization.&lt;/p&gt;

&lt;p&gt;I hope you found this short tip helpful. Thank you so much for your time and soon I will be back with a few short tips.&lt;/p&gt;

</description>
      <category>figmatips</category>
      <category>figmadesign</category>
      <category>tutorial</category>
      <category>uikit</category>
    </item>
    <item>
      <title> Beginner, Great! What I got from KubeCon [Virtual]</title>
      <author>Rahul Krishna K A</author>
      <pubDate>Sun, 09 May 2021 20:08:33 +0000</pubDate>
      <link>https://dev.to/krak7602/beginner-great-what-i-got-from-kubecon-virtual-3982</link>
      <guid>https://dev.to/krak7602/beginner-great-what-i-got-from-kubecon-virtual-3982</guid>
      <description>&lt;p&gt;Being a beginner is a one time opportunity. Ask doubts, attend sessions. For a beginner more than the talks (of course the talks are awesome) the community is what's important. Engage with the community, be open to people. Meeting so many great people at once can be a bit hard (especially for an introvert like me) but understand that they are ready to help you more than you think. But you need to take the initiative and ask.&lt;br&gt;
Getting started with Cloud Native projects and contributing are easier than one might think. &lt;a href="https://gist.github.com/dims/bb219a4a8d9cb88dc2a2dc1f11a537c6"&gt;Here&lt;/a&gt; are some resources to get you started.&lt;br&gt;
Between the 101s (for beginners or someone wanting to start out something new), maintainer tracks (everyone can get something out of it), hallway track for meeting amazing people and all, picking one or two to highlight can be difficult. The content is open for everyone and will be released after a few days at &lt;a href="https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA"&gt;CNCF's YouTube channel&lt;/a&gt;. Also checkout &lt;a href="http://cloudnative.tv"&gt;cloudnative.tv&lt;/a&gt; for some amazing content.&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>community</category>
      <category>opensource</category>
    </item>
    <item>
      <title>7 Good Reasons To Start Blogging As a Developer</title>
      <author>Kingsley Ubah</author>
      <pubDate>Sun, 09 May 2021 20:02:12 +0000</pubDate>
      <link>https://dev.to/ubahthebuilder/7-good-reasons-to-start-blogging-as-a-developer-2of3</link>
      <guid>https://dev.to/ubahthebuilder/7-good-reasons-to-start-blogging-as-a-developer-2of3</guid>
      <description>&lt;p&gt;You probably think the sole job of a web developer is to create websites and web applications. If so, you are unfortunately &lt;strong&gt;not the only one&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Anytime I tell any of my friends I am a web developer their first response is: &lt;em&gt;‚ÄúOh so you make websites?‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It‚Äôs not just about designing and coding websites, or setting up databases and all of those &lt;strong&gt;technical stuffs&lt;/strong&gt;. Though that is the main function of a web developer.&lt;/p&gt;

&lt;p&gt;I believe that there are many facets to web development, and one of them is &lt;strong&gt;technical writing and blogging&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Technical writing to me serves as the bridge between the &lt;strong&gt;technical world&lt;/strong&gt; and the &lt;strong&gt;artistic world&lt;/strong&gt;. Writing allows you explain complex technical terms in a digestible and form to the audience. It allows you apply your artistic ingenuity in the process to of sharing your knowledge. When you apply your art to your process of sharing knowledge, it is more likely to be understood better.&lt;/p&gt;

&lt;p&gt;Blogging is an activity I would recommend every developer considers at some point, and here are some good reasons I think so:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#it-makes-you-a-better-teacher"&gt;
  &lt;/a&gt;
  It Makes You a Better Teacher
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CgfFWoPX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aqq7irf203yf5bv7du7t.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CgfFWoPX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aqq7irf203yf5bv7du7t.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Blogging is all about putting thoughts into words and sentences. Technical Blogging is all about &lt;strong&gt;putting technical concepts into sentences&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;The later is considerable harder for this reason because you are translating a different language, one is not easily understood by the human mind like say, English Language.&lt;br&gt;
Thus, it takes considerably more effort and practise to seamlessly convey your information in a digestible way to your audience. &lt;/p&gt;

&lt;p&gt;This action challenges you into finding a better and more artful way of teaching them to their comprehension.&lt;/p&gt;

&lt;p&gt;For example, constant blogging has made me better at using analogies to teach and my audience always praise me for that. In other words, it made me a better teacher.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-actually-get-better-at-writing"&gt;
  &lt;/a&gt;
  You Actually Get Better At Writing
&lt;/h3&gt;

&lt;p&gt;Just because you‚Äôre writing something technical doesn‚Äôt mean you aren‚Äôt using English.&lt;br&gt;
&lt;em&gt;The best way to learn or master anything is with constant practise.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When you write articles consistently, you are also (inadvertently) training yourself to get better in generic writing. I am a testament of this. &lt;/p&gt;

&lt;p&gt;When I started out, my writing was horrendous. Maybe it‚Äôs still bad as of now, but I have surely gotten better at it!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you write more you get better, whether you realize it or not.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-boost-your-career"&gt;
  &lt;/a&gt;
  You Boost your Career
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kl-u2qyd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620589741221/WaVcGv7-B.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kl-u2qyd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620589741221/WaVcGv7-B.jpeg" alt="pexels-oleg-magni-2058128 (1).jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let‚Äôs be honest, there is more to web development than just hacking code. In fact, a lot of ‚Äúdevelopers‚Äù actually make the bulk of their income  from &lt;strong&gt;technical writing&lt;/strong&gt;, and that is a path I am quite interested in taking.&lt;/p&gt;

&lt;p&gt;But enough of me.&lt;/p&gt;

&lt;p&gt;You can actually boost your career by writing articles. There is a job known as DevRel (&lt;strong&gt;developer relations&lt;/strong&gt;).  As the name implies, the developer relates with the users of his or her company‚Äôs product. &lt;/p&gt;

&lt;p&gt;And guess what? He relates with &lt;strong&gt;words&lt;/strong&gt;, not &lt;strong&gt;code&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-learn-how-to-type-faster"&gt;
  &lt;/a&gt;
  You Learn How to Type Faster
&lt;/h3&gt;

&lt;p&gt;This may not be an obvious reason, but writing articles regularly increases your typing speed by at least 10 percent.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It increased mine by over 100 percent!&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;It also helps you get familiar with the positions of your keyboard. &lt;strong&gt;No more typing like a snail!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You don‚Äôt need me to remind you of the wonders this could do to your productivity as a developer.&lt;/p&gt;

&lt;p&gt;Another reason you should definitely consider writing more.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Let‚Äôs take a slight break from the non-technical part. If you want to learn the technical part of web development from ground up, I highly recommend  &lt;a href="https://gumroad.com/a/834147443"&gt;HTML To React By SleeplessYogi.&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#you-get-to-try-new-words"&gt;
  &lt;/a&gt;
  You Get To Try New Words
&lt;/h3&gt;

&lt;p&gt;Words make you sound smarter. There are over 170,000 words in your typical English Dictionary.&lt;/p&gt;

&lt;p&gt;If you are like me, who is always curious in discovering and applying new words, then writing is a &lt;strong&gt;perfect&lt;/strong&gt; way to do just that.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-connect-deeper-with-your-audience"&gt;
  &lt;/a&gt;
  You Connect Deeper With Your Audience
&lt;/h3&gt;

&lt;p&gt;Let‚Äôs be honest, no one would enjoy reading a blocks of code just like that. &lt;strong&gt;That‚Äôs drab!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Humans are naturally artistic. We appreciate a good work of art. &lt;/p&gt;

&lt;p&gt;A brilliant way of connecting deeper with your audience is by using the right words in the right context. The only way you can master this skill is by writing consistently.&lt;/p&gt;

&lt;p&gt;With articles, you can relate far more information to your audience in a way that they can &lt;strong&gt;deeply understand and connect with you&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-grow-a-loyal-audience-from-scratch"&gt;
  &lt;/a&gt;
  You Grow A Loyal Audience From Scratch
&lt;/h3&gt;

&lt;p&gt;After you have written and produced content constantly for a long period of time, people start to note you for your way of writing. &lt;/p&gt;

&lt;p&gt;Your content is shared, words go around are more people start to find you and appreciate your work. &lt;/p&gt;

&lt;p&gt;And with time, you amass a legion of audience who could go on to support your work. &lt;br&gt;
All these is possible only you engage more in writing as a software developer.&lt;/p&gt;

&lt;p&gt;As you can see, the benefits of starting a blog as a software developer are huge.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Would you want to miss out on all these opportunities?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you enjoyed this article and want to support me, feel free to buy me my favourite fruit:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/ubahthebuilder"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kc5Aqnyc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520pineapple%26emoji%3D%25F0%259F%258D%258D%26slug%3Dubahthebuilder%26button_colour%3De0b51a%26font_colour%3D000000%26font_family%3DCookie%26outline_colour%3D000000%26coffee_colour%3DFFDD00"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank you for your time and see you soon!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Message Queue Service using Kafka</title>
      <author>Chandraprakash Soni</author>
      <pubDate>Sun, 09 May 2021 19:18:00 +0000</pubDate>
      <link>https://dev.to/icpsoni/message-queue-service-using-kafka-2bli</link>
      <guid>https://dev.to/icpsoni/message-queue-service-using-kafka-2bli</guid>
      <description>&lt;p&gt;In this article, we are going to create a Message Queue Service using Kafka and KafkaJS, somewhere similar to SQS, and we will make sure that messages are processed exactly once, in the exact order that they are sent. We will also implement the redelivery mechanism to make sure that if something fails in our business logic, we can add it to the queue again.&lt;br&gt;
&lt;strong&gt;Find the source code on Github:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://github.com/icpsoni/kafka-message-queue"&gt;https://github.com/icpsoni/kafka-message-queue&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1: Get Kafka&lt;/strong&gt;&lt;br&gt;
Download Kafka and extract it from here, and navigate to the directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ tar -xzf &amp;lt;file_name&amp;gt;.tgz
$ cd &amp;lt;file_name&amp;gt;tec
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2: Start the Kafka Environment&lt;/strong&gt;&lt;br&gt;
NOTE: Your local environment must have Java 8+ installed.&lt;br&gt;
Run the following commands to start ZooKeeper:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Start the ZooKeeper service
# Note: Soon, ZooKeeper will no longer be required by Apache Kafka.
$ bin/zookeeper-server-start.sh config/zookeeper.properties
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open another terminal session and run Kafka Broker service using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Start the Kafka broker service
$ bin/kafka-server-start.sh config/server.properties
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once all services have successfully launched, you will have a basic Kafka environment running and ready to use.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3: Create a Topic to Store our Queue Messages&lt;/strong&gt;&lt;br&gt;
With the following command, we will create a topic called ‚Äúmessage-queue‚Äù in our Kafka.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ bin/kafka-topics.sh --create --topic message-queue --bootstrap-server localhost:9092
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To check the created topic use this command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ bin/kafka-topics.sh --describe --topic message-queue --bootstrap-server localhost:9092
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can create a topic with any number of partitions, In here we are using 1 partition only.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#creating-services-using-kafkajs"&gt;
  &lt;/a&gt;
  Creating Services Using KafkaJS
&lt;/h2&gt;

&lt;p&gt;We basically need 3 things to make our queue system work perfectly.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Sending Events to Kafka Queue topic.&lt;/li&gt;
&lt;li&gt;Subscribing to the topic and reading the Queue Message.&lt;/li&gt;
&lt;li&gt;Handling the redelivery.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#kafkaconfigjs"&gt;
  &lt;/a&gt;
  kafka-config.js
&lt;/h3&gt;

&lt;p&gt;The following snippet contains the basic config of Kafka that we need for our queue system.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Using KafkaJs nodejs library
import { Kafka } from 'kafkajs';

// kafka broker running on localhost:9092 default port
const kafkaBroker = 'localhost:9092';

// kafka topic used for queue messages
export const kafkaTopic = 'message-queue';

// kafka client with basic config
export const KafkaClient = new Kafka({
  brokers: [kafkaBroker]
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#producerjs"&gt;
  &lt;/a&gt;
  producer.js
&lt;/h3&gt;

&lt;p&gt;This service will send messages to the Kafka topic we created earlier. We can use &lt;code&gt;sendMessageToQueue&lt;/code&gt; function and pass the message object which needs to be sent to Kafka.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { KafkaClient } from './index.js';
import { kafkaTopic } from "./kafka-config";

export const sendMessageToQueue = async (message) =&amp;gt; {
  const producer = KafkaClient.producer();
  await producer.connect();
  await producer.send({
    topic: kafkaTopic,
    messages: [
      {
        value: message // Your message data goes here
      }
    ]
  });
  // Disconnect producer once message sending is done.
  await producer.disconnect();
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#messagequeuejs"&gt;
  &lt;/a&gt;
  message-queue.js
&lt;/h3&gt;

&lt;p&gt;This is our main service that takes care of receiving the messages from the Kafka queue doing the business logic and handling the redelivery if something goes wrong in business logic.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { sendMessageToQueue } from "./producer.js";
import { KafkaClient, kafkaTopic, kafkaGroupId } from "./kafka-config.js";

export const consumeMessage = async () =&amp;gt; {
  // Creating a Consumer Instance
  const consumer = KafkaClient.consumer({
    groupId: kafkaGroupId,
  });

  await consumer.connect();
  // Subscribing to out Kafka topic
  await consumer.subscribe({ topic: kafkaTopic, fromBeginning: true});

  await consumer.run({
    autoCommit: false, // It won't commit message acknowledge to kafka until we don't do manually
    eachMessage: async ({ topic, partition, message}) =&amp;gt; {
      const messageData = message.value.toString();
      try {
        // Do the business Logic
        console.info('Received Message', messageData);
      } catch (error) {
        console.error(error);
        // Resending message to kafka queue for redelivery
        await sendMessageToQueue(messageData);
      } finally {
        const offset = +message.offset + 1;
        // Committing the message offset to Kafka
        await consumer.commitOffsets([{topic: kafkaTopic, partition, offset: offset.toString()}]);
      }
    }
  });
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Download the source&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Bonus: It contains test sample files too.&lt;/em&gt;&lt;br&gt;
&lt;a href="https://github.com/icpsoni/kafka-message-queue"&gt;https://github.com/icpsoni/kafka-message-queue&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://kafka.apache.org/quickstart"&gt;https://kafka.apache.org/quickstart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kafka.js.org/docs/getting-started"&gt;https://kafka.js.org/docs/getting-started&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>kafka</category>
      <category>sqs</category>
      <category>queue</category>
      <category>javascript</category>
    </item>
    <item>
      <title>API To Spice Up Your Website or Client's Website</title>
      <author>Elijah Trillionz</author>
      <pubDate>Sun, 09 May 2021 19:02:31 +0000</pubDate>
      <link>https://dev.to/elijahtrillionz/api-to-spice-up-your-website-or-client-s-website-4287</link>
      <guid>https://dev.to/elijahtrillionz/api-to-spice-up-your-website-or-client-s-website-4287</guid>
      <description>&lt;p&gt;Have you built a business website or portfolio for a client? Or are you currently making one? Do you have a personal website or portfolio? Here is an API to spice up that website.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#spurwing"&gt;
  &lt;/a&gt;
  &lt;a href="https://spurwing.io"&gt;Spurwing&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://spurwing.io"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ukp2JKzE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/spurwing.png" alt="Spurwing.io" title="Spurwing.io"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Spurwing is a web app for scheduling and calendar management. It also has an API for easy integration on your application.&lt;/p&gt;

&lt;p&gt;What is &lt;strong&gt;Spurwing&lt;/strong&gt; really about?&lt;/p&gt;

&lt;p&gt;Spurwing manages your schedules as a business person, freelancer, doctor, therapist, educationist, CEO, etc.&lt;/p&gt;

&lt;p&gt;Your clients can book an appointment with you through your website. And all of your appointment activities are managed in your Spurwing dashboard.&lt;/p&gt;

&lt;p&gt;So as a developer who is making a website for a client. Let's say your client is a Therapist, with your client's website, clients can book an appointment with your client with just a few clicks thanks to you.&lt;/p&gt;

&lt;p&gt;With such a tool as Spurwing, you're not going to have a static calendar showing the days your client is available (since the publishing of the website).&lt;/p&gt;

&lt;p&gt;Instead, you'll have a dynamic calendar. As such your client can go on a one-week vacation and it will reflect on your client's website.&lt;/p&gt;

&lt;p&gt;Brilliant! Right? I call it, having a static website with a dynamic feature.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#here-is-how-it-works"&gt;
  &lt;/a&gt;
  Here is How it Works
&lt;/h2&gt;

&lt;p&gt;From here henceforth, I am assuming you (the developer or whoever you are reading this) as the owner of the website:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You integrate the API on the proposed website&lt;/li&gt;
&lt;li&gt;Visitors or clients can book an appointment with you.&lt;/li&gt;
&lt;li&gt;You can accept or decline meetings on your Spurwing dashboard.&lt;/li&gt;
&lt;li&gt;Your client (who just booked) will get an instant notification (via e-mail or SMS) on accepted or declined meetings.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Trust me, there is a lot of good stuff they offer. But we will break the above steps into features Spurwing offers that will enable you to achieve the purpose (&lt;em&gt;booking appointment&lt;/em&gt;).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-security"&gt;
  &lt;/a&gt;
  1. Security
&lt;/h3&gt;

&lt;p&gt;This is a very important aspect that you should consider for such a tool. You wouldn't want nobody to know about your schedules right? Especially when you are international. Knowing your schedules is like knowing your next movement.&lt;/p&gt;

&lt;p&gt;Not to worry as all your data is encrypted and stored at &lt;a href="https://www.imperva.com/learn/data-security/soc-2-compliance/"&gt;SOC 2&lt;/a&gt; certified facilities and fully audit logged.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://www.imperva.com/learn/data-security/soc-2-compliance/"&gt;SOC 2&lt;/a&gt; is an auditing procedure that ensures your service providers securely manage your data to protect the interests of your organization and the privacy of its clients.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.imperva.com/learn/data-security/soc-2-compliance/"&gt;SOC 2&lt;/a&gt; defines criteria for managing customer based data based on five trust service principles i.e &lt;strong&gt;Security&lt;/strong&gt;, &lt;strong&gt;Availability&lt;/strong&gt;, &lt;strong&gt;Processing Integrity&lt;/strong&gt;, &lt;strong&gt;Confidentiality&lt;/strong&gt; and &lt;strong&gt;Privacy.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-api-or-opensource-widget"&gt;
  &lt;/a&gt;
  2. API or Open-Source Widget:
&lt;/h3&gt;

&lt;p&gt;With Spurwing you can either integrate with its &lt;a href="https://github.com/Spurwing/Appointment-Scheduling-Widgets"&gt;open-source widget&lt;/a&gt; or create from scratch with its &lt;a href="https://docs.spurwing.io/"&gt;API&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What and How do I mean?&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#spurwing-api"&gt;
  &lt;/a&gt;
  Spurwing API
&lt;/h4&gt;

&lt;p&gt;The API is a great way to integrate into your website. It is packed full with enough endpoints for maximal use. With this API, you can&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#gtgt-create-list-and-delete-appointment-types"&gt;
  &lt;/a&gt;
  &lt;a href="https://docs.spurwing.io/docs/spurwing/reference/SpurWing.v1.yaml/paths/~1appointment_types/get"&gt;&amp;gt;&amp;gt; Create, List and Delete Appointment types:&lt;/a&gt;
&lt;/h5&gt;

&lt;p&gt;An appointment type is like saying the type of meeting you accept. Say you're Elon Musk your appointment types could be business, bitcoin investment, motivational speech, family, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://spurwing.io"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yb7a8TmU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/spurwing-appointment-type.png" alt="spurwing-appointment-type" title="spurwing-appointment-type"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It can be more than one of course. Appointment types are about recurring activities or meetings in your line of work.&lt;/p&gt;

&lt;p&gt;With these endpoints, your clients can specify which type of meeting He/She intends to have with you.&lt;/p&gt;

&lt;p&gt;Each appointment type has a time interval that indicates how long you intend that kind of meeting to last. It can be in 60 minutes, 720 minutes (that feels like a lifetime though), or as short as 15 minutes.&lt;/p&gt;

&lt;p&gt;With these endpoints, you can also specify the contact types through which the meeting will be conducted. See the &lt;a href="https://docs.spurwing.io/docs/spurwing/reference/SpurWing.v1.yaml/paths/~1appointment_types/post"&gt;documentation&lt;/a&gt; to know the available contact types and how to use them.&lt;/p&gt;

&lt;p&gt;As the owner of the account, you can specify which options are suitable for you for that particular meeting type. If you only want to be contacted by one means, that is the only means that will reflect on your site.&lt;/p&gt;

&lt;p&gt;With the API, &lt;em&gt;you can also &lt;code&gt;Get&lt;/code&gt; a specific appointment type as well as update an appointment type.&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#gtgt-create-list-and-delete-appointments"&gt;
  &lt;/a&gt;
  &lt;a href="https://docs.spurwing.io/docs/spurwing/reference/SpurWing.v1.yaml/paths/~1appointments/get"&gt;&amp;gt;&amp;gt; Create, List and Delete Appointments&lt;/a&gt;
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://spurwing.io"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tkpqiPJy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/spurwing-appointments.png" alt="spurwing-appointments" title="spurwing-appointments"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Appointments can be individual appointments or group appointments. With these endpoints, you can &lt;strong&gt;create&lt;/strong&gt;, &lt;strong&gt;list&lt;/strong&gt; or &lt;strong&gt;delete&lt;/strong&gt; a  1 on 1 video chat appointment or in-person group appointment. See &lt;a href="https://docs.spurwing.io/docs/spurwing/reference/SpurWing.v1.yaml/paths/~1appointments/post"&gt;docs&lt;/a&gt; for more details and instruction.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can also *&lt;/em&gt;&lt;code&gt;Get&lt;/code&gt;** a specific appointment as well as &lt;strong&gt;update&lt;/strong&gt; an appointment.*&lt;/p&gt;

&lt;p&gt;In creating an appointment there is another endpoint that does the same job as this endpoint. In fact, the demo schedule in the Spurwing homepage uses the other endpoint.&lt;/p&gt;

&lt;p&gt;The other endpoint is the &lt;a href="https://docs.spurwing.io/docs/spurwing/reference/SpurWing.v1.yaml/paths/~1bookings~1complete_booking/post"&gt;complete-booking appointment&lt;/a&gt;. The complete-booking appointment lets you create a booking for a client on behalf of that client. That means it will create a client account for that client (or attendee now).&lt;/p&gt;

&lt;p&gt;The complete-booking appointment also enforces availability unlike the formal. It makes sure you are available before creating the appointment.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#gtgt-create-list-and-delete-availability-objects"&gt;
  &lt;/a&gt;
  &lt;a href="https://docs.spurwing.io/docs/spurwing/reference/SpurWing.v1.yaml/paths/~1availabilities/get"&gt;&amp;gt;&amp;gt; Create, List and Delete Availability Objects&lt;/a&gt;
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://spurwing.io"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3iQ1dI7g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/spurwing-availability-objects.png" alt="Spurwing-availability-objects" title="Spurwing-availability-objects"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When are you available Mr. Elon Musk?&lt;/strong&gt; With these endpoints, you can &lt;strong&gt;create&lt;/strong&gt; a recurring availability or a one-time availability. You can also &lt;strong&gt;list&lt;/strong&gt; and &lt;strong&gt;delete&lt;/strong&gt; them.&lt;/p&gt;

&lt;p&gt;Let's say you're usually available from Monday to Friday (recurring availability). This week you decided to create a special time for your clients on Saturday, only this week (one-time availability).&lt;/p&gt;

&lt;p&gt;For recurring availability, you can specify the start and end times daily. And by that, I don't mean you do it daily. I mean how you want it to run daily. It's a one-time setup and a recurring availability.&lt;/p&gt;

&lt;p&gt;It can also be &lt;strong&gt;updated&lt;/strong&gt; of course and you can also &lt;strong&gt;&lt;code&gt;Get&lt;/code&gt;&lt;/strong&gt; a specific availability object. You should see &lt;a href="https://docs.spurwing.io/docs/spurwing/reference/SpurWing.v1.yaml/paths/~1availabilities/post"&gt;docs&lt;/a&gt; for more.&lt;/p&gt;

&lt;p&gt;These are the most endpoints we can take for now. Check the others on the &lt;a href="https://docs.spurwing.io/"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All of Spurwing's endpoints can be tested in its documentation. You don't need to create a new project first or use Postman (or the new Thunder Client) to get familiar with the endpoints. It's called &lt;em&gt;Practive as you learn.&lt;/em&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#spurwing-opensource-widget"&gt;
  &lt;/a&gt;
  Spurwing Open-Source Widget:
&lt;/h4&gt;

&lt;p&gt;Almost everything you can do with the API can be done with your Spurwing dashboard. You can set up your appointment types, availability, contact types, book appointments with past clients, etc.&lt;/p&gt;

&lt;p&gt;The one thing you should not do is what the complete-booking endpoint does (stated above) though it is possible to do so. As we have first said, the complete-booking endpoint creates makes a booking on behalf of the client.&lt;/p&gt;

&lt;p&gt;As Elon you'd say to your clients (on your website); "Hey! Here is my Spurwing's email &amp;amp; password, log in, got to the dashboard, and book an appointment with me".&lt;/p&gt;

&lt;p&gt;Or you could say "Hey, you want to book an appointment with me send me your name, email, and phone number and I will do it myself". That's suicidal.&lt;/p&gt;

&lt;p&gt;To solve this, you can either use one of the API's endpoints (as discussed above) or use Spurwing's open-source widget.&lt;/p&gt;

&lt;p&gt;You can actually book meetings with your past clients (already recognized clients of yours, usually saved in Spurwing), but it's not the best if you're going to do it manually. I mean you have an API and an Open-Source widget for that.&lt;/p&gt;

&lt;p&gt;The open-source widget is a simple link (it's in your dashboard) with your provider_id (a form of id) that your clients will use to book an appointment with you.&lt;/p&gt;

&lt;p&gt;All of your appointment types, availability are handled within this widget. In booking an appointment with you, with this widget, your clients can&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#select-an-appointment-type"&gt;
  &lt;/a&gt;
  Select an Appointment Type
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://spurwing.io"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TEAppWiK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/spurwing_open-source-widget-appointment-type.png" alt="spurwing-open-source-widget-appointment-type" title="spurwing-open-source-widget-appointment-type"&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Recall that I created the listed appointment types (in the image above) in my Spurwing dashboard. And I did specify phone call or video call as the contact type for each of them. I also specified the time interval in minutes.&lt;/p&gt;

&lt;p&gt;Now all of that is reflected in this widget, such that my client can select the type of meeting, the contact type, as well as see the time interval I accept for such meeting.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#select-date-and-time"&gt;
  &lt;/a&gt;
  Select Date and Time
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://spurwing.io"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A6qg_3w9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/spurwing_open-source-widget-date-and-time-original.png" alt="spurwing_open-source-widget-date-and-time-original" title="spurwing_open-source-widget-date-and-time-original"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I believe you can see the light blue indicator on each day showing I am available all day. Now there is a little issue here that I would have loved to point out, but it will confuse those who don't have an account yet.&lt;/p&gt;

&lt;p&gt;The issue is not a big deal though, it's just a caution. If you have created an account and you want me to tell you, hit me up in the comment section.&lt;/p&gt;

&lt;p&gt;Now when I am not available, it will show that I am not available. So that should tell you that this widget uses the complete-booking appointment endpoint (as discussed in the API section).&lt;/p&gt;

&lt;p&gt;One cool thing I should mention is timezones. Looking up at the image (yeah the one with very low contrast), just below the Month, Day, and Year; you will find my timezone. With Spurwing timezone is well handled.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#submit-their-contact-information"&gt;
  &lt;/a&gt;
  Submit their Contact Information
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://spurwing.io"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7o30-MbP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/spurwing_open-source-widget-confirm-information.png" alt="spurwing_open-source-widget-confirm-information" title="spurwing_open-source-widget-confirm-information"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is where your clients submit their information and boom, they are booked. Now you will have to confirm or deny their meetings on your Spurwing dashboard.&lt;/p&gt;

&lt;p&gt;Every new client is indexed in your dashboard, you get to see all your clients. An existing client that books an appointment is regarded as an existing client (an already recognized client).&lt;/p&gt;

&lt;p&gt;The uniqueness is the email. With the email, they recognize an already &lt;strong&gt;&lt;em&gt;existing client&lt;/em&gt;&lt;/strong&gt;. This is achieved with the complete-booking endpoint as specified in the docs. So don't worry if you're not going to use the open-source widget.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-fully-branded"&gt;
  &lt;/a&gt;
  3. Fully Branded
&lt;/h3&gt;

&lt;p&gt;With Spurwing, you can brand your business without any Spurwing watermark. Emails sent to your clients when they book will contain your brand and not theirs.&lt;/p&gt;

&lt;p&gt;You can see that even in the widget, there is no Spurwing logo or any 'Made with love by Spurwing' text. It's plainly about your business.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-easy-peasy"&gt;
  &lt;/a&gt;
  4. Easy peasy
&lt;/h3&gt;

&lt;p&gt;Spurwing's dashboard is very easy to work with. There is a calendar that shows your schedule (a very detailed calendar).&lt;/p&gt;

&lt;p&gt;The good thing is, Spurwing is synced with Google Calendar, Outlook, and iCal, so you can likewise view your schedules using any of those calendars.&lt;/p&gt;

&lt;p&gt;These are some of the features I can post now, there are several others but I don't want this article to be too long. You can visit their website at spurwing.io to see more.&lt;/p&gt;

&lt;p&gt;Though there is one thing, I'd like to add i.e &lt;a href="https://www.spurwing.io/blog"&gt;&lt;strong&gt;Spurwing's blog&lt;/strong&gt;&lt;/a&gt;. It's a great place where they share ideas, tips, and tutorials about their services. You should check it out.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Introduce this feature to your clients and they'll love it. It's a major aspect of their business's growth. And on your path as a developer, integrating the API or open-source widget is just easy.&lt;/p&gt;

&lt;p&gt;There is this idea that I have for this appointment booking and scheduling. If you've been following me, you'd remember I created an &lt;a href="https://dev.to/elijahtrillionz/building-a-project-with-javascript-objects-1dn"&gt;appointment booking app with purely JavaScript Accessors&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I wanted to use it with this API, but after lots of review and sketching, I saw that using the API seems like not using any API at all.&lt;/p&gt;

&lt;p&gt;What I intended to do was have a Spurwing account that can handle multiple accounts (as seen in &lt;a href="https://github.com/Elijah-trillionz/appointment-booking-app"&gt;this project&lt;/a&gt;). After all of my sketching, the one question I kept asking myself is 'What's the role of Spurwing?'.&lt;/p&gt;

&lt;p&gt;I may make it just for practice but not for production, it's best to create an individual Spurwing account.&lt;/p&gt;

&lt;p&gt;Alright, that's it for today. If you found this article helpful, kindly like and share. If you'd like to say another article from me, please do &lt;a href="https://buymeacoffee.com"&gt;buy a coffee&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>webdev</category>
      <category>discuss</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
