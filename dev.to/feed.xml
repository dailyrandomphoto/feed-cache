<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Release v1.1 of my product!ü•≥</title>
      <author>Ayan S</author>
      <pubDate>Fri, 06 Aug 2021 16:46:41 +0000</pubDate>
      <link>https://dev.to/madebyayan/release-v1-1-of-my-product-555k</link>
      <guid>https://dev.to/madebyayan/release-v1-1-of-my-product-555k</guid>
      <description>&lt;p&gt;Focus Wall is a tool that lets you keep all your todos right in your wallpaper.&lt;/p&gt;

&lt;p&gt;Since the initial release of Focus Wall, there have been a slew of changes made to it!&lt;/p&gt;

&lt;p&gt;The biggest of them being Notifications!&lt;/p&gt;

&lt;p&gt;You can now get notification for todos that have an upcoming deadline, so you never miss another deadline. Not only that, but you can also customize as to when you'd like to receive your notification, whether it be at the deadline, a few minutes prior or several days before it, it's all upto you!&lt;/p&gt;

&lt;p&gt;When  you're done with a task, you can now choose to hide it from the wallpaper so it doesn't distract you from the things that you need to do next.&lt;/p&gt;

&lt;p&gt;Along with these, a variety of new wallpaper backgrounds have been added so you can further customize the experience to your taste.&lt;/p&gt;

&lt;p&gt;You can also now see the number of number items in each lists with a glance so you know exactly how many things you need to focus on.&lt;/p&gt;

&lt;p&gt;Apart from these new features, several bugs that had been identified or reported have now been fixed to provide a better experience to you in your productivity journey.&lt;/p&gt;

&lt;p&gt;With these new changes to Focus Wall, a Lite version of the app has also been released for people who'd like to give it a try and dive into Focus Wall. You can check it out here: &lt;a href="https://madebyayan.itch.io/focuswall-lite"&gt;madebyayan.itch.io/focuswall-lite&lt;/a&gt;&lt;/p&gt;

</description>
      <category>update</category>
      <category>productivity</category>
      <category>todo</category>
      <category>wallpaper</category>
    </item>
    <item>
      <title>Deploy Strapi on AWS/GCP/Digital Ocean using Porter</title>
      <author>Trevor Shim</author>
      <pubDate>Fri, 06 Aug 2021 16:39:42 +0000</pubDate>
      <link>https://dev.to/porter/deploy-strapi-on-aws-gcp-digital-ocean-using-porter-185l</link>
      <guid>https://dev.to/porter/deploy-strapi-on-aws-gcp-digital-ocean-using-porter-185l</guid>
      <description>&lt;h1&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://porter.run"&gt;Porter&lt;/a&gt; is a Platform as a Service (PaaS) that runs in your own cloud provider. It brings the convenience of platforms like Heroku, Netlify, and Vercel into a cloud provider of your choice. Under the hood, Porter runs on top of a Kubernetes cluster but abstracts away its complexity to the extent that you don't even have to know that it's running on Kubernetes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sl832hQu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gbk9cevvor7amkjygo05.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sl832hQu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gbk9cevvor7amkjygo05.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a quick guide on how to deploy &lt;a href="https://strapi.io"&gt;Strapi&lt;/a&gt; to a Kubernetes cluster in AWS/GCP/DO using Porter. This guide uses PostgresDB by default - to customize your database settings, modify the files in &lt;code&gt;/app/config/env/production&lt;/code&gt; in the &lt;a href="https://github.com/porter-dev/strapi"&gt;example repository&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#quick-deploy"&gt;
  &lt;/a&gt;
  Quick Deploy
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Create an account on &lt;a href="https://dashboard.getporter.dev"&gt;Porter&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.porter.run/docs/getting-started-with-porter-on-aws"&gt;One-click provision a Kubernetes cluster&lt;/a&gt; in a cloud provider of your choice, or &lt;a href="https://docs.porter.run/docs/cli-documentation#connecting-to-an-existing-cluster"&gt;connect an existing cluster&lt;/a&gt; if you have one already.&lt;/li&gt;
&lt;li&gt;Fork &lt;a href="https://github.com/porter-dev/strapi"&gt;this repository&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;From the &lt;a href="https://dashboard.getporter.dev/launch"&gt;Launch tab&lt;/a&gt;, navigate to &lt;strong&gt;Web Service &amp;gt; Deploy from Git Repository&lt;/strong&gt;. Then select the forked repository and &lt;code&gt;Dockerfile&lt;/code&gt; in the root directory.&lt;/li&gt;
&lt;li&gt;Configure the port to &lt;code&gt;1337&lt;/code&gt; and set environment variable to &lt;code&gt;NODE_ENV=production&lt;/code&gt;. Depending on your database settings, you might want to add more environment variables. More on this in the section below.&lt;/li&gt;
&lt;li&gt;Set the assigned resources to Strapi's &lt;a href="https://strapi.io/documentation/developer-docs/latest/setup-deployment-guides/deployment.html#general-guidelines"&gt;recommended settings&lt;/a&gt; (i.e. 2048Mi RAM, 1000 CPU), then hit deploy!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5-GYqXWR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yem2y6d5gi4gik45on99.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5-GYqXWR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yem2y6d5gi4gik45on99.png" alt="Screen Shot 2021-08-06 at 11.25.41 AM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploying-postgresdb"&gt;
  &lt;/a&gt;
  Deploying PostgresDB
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Strapi instance deployed through Porter connects to a PostgresDB by default. You can connect Strapi instance deployed on Porter to any external database, but it is also possible to connect to a database that is deployed on Porter. Follow &lt;a href="https://docs.getporter.dev/docs/postgresdb"&gt;this guide to deploy a PostgresDB instance to your cluster in one click&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;After the database has been deployed, navigate to the &lt;strong&gt;Environment Variables&lt;/strong&gt; tab of your deployed Strapi instance. Configure the following environment variables:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NODE_ENV=production
DATABASE_HOST=
DATABASE_PORT=5432
DATABASE_NAME=
DATABASE_USERNAME=
DATABASE_PASSWORD=
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To determine what the correct environment variables are in order to connect to the deployed database, &lt;a href="https://docs.getporter.dev/docs/postgresdb#connecting-to-the-database"&gt;see this guide&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#development"&gt;
  &lt;/a&gt;
  Development
&lt;/h1&gt;

&lt;p&gt;To develop, clone the &lt;a href="https://github.com/porter-dev/strapi"&gt;example repository&lt;/a&gt; to your local environment and run &lt;code&gt;npm install &amp;amp;&amp;amp; npm run develop;&lt;/code&gt; from the &lt;code&gt;app&lt;/code&gt; directory. Porter will automatically handle CI/CD and propagate your changes to production on every push to the repository.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#questions"&gt;
  &lt;/a&gt;
  Questions?
&lt;/h1&gt;

&lt;p&gt;Join the &lt;a href="https://discord.gg/FaaFjb6DXA"&gt;Porter Discord community&lt;/a&gt; if you have any questions or need help.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>cms</category>
      <category>strapi</category>
      <category>node</category>
    </item>
    <item>
      <title>Measuring Developers Isn‚Äôt Tyranny </title>
      <author>Nick Hodges</author>
      <pubDate>Fri, 06 Aug 2021 16:38:38 +0000</pubDate>
      <link>https://dev.to/nickhodges/measuring-developers-isn-t-tyranny-2nm5</link>
      <guid>https://dev.to/nickhodges/measuring-developers-isn-t-tyranny-2nm5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#measuring-developers-isnt-tyranny"&gt;
  &lt;/a&gt;
  Measuring Developers Isn‚Äôt Tyranny
&lt;/h2&gt;

&lt;p&gt;Informing someone that you want to ‚Äúmeasure‚Äù them is not a great way to start a conversation. Software developers, like all people, tend to look unfavorably upon having their performance closely measured. But measuring developers is one of the hottest trends for companies around the globe. So is it tyranny to measure people?&lt;/p&gt;

&lt;p&gt;People are quick to note that numbers don‚Äôt tell the whole story and can become defensive at the notion their productivity should be quantified somehow. This resistance can become even more entrenched when teams become stacked against each other.&lt;/p&gt;

&lt;p&gt;Many leaders ‚Äî &lt;a href="https://www.youtube.com/watch?v=mTYPIxG5Esc"&gt;like Netflix‚Äôs Kathryn Koehler &lt;/a&gt;‚Äî believe we should absolutely avoid stack ranking of individuals and teams. After all, the human elements of teams ‚Äî communication, coordination, leadership ‚Äî can all affect the speed or perceived productivity of a team or process, so how can you quantify that?&lt;/p&gt;

&lt;p&gt;Thankfully, plenty of tools exist to enable a data-driven approach to the development process. With the right approach, these tools can be used to enhance any individual‚Äôs or team‚Äôs performance. Beyond performance, when applied correctly, these tools can bring about more harmonious alignment between leadership and employees.&lt;/p&gt;

&lt;p&gt;But first, why do we measure?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-measure-at-all"&gt;
  &lt;/a&gt;
  Why measure at all?
&lt;/h2&gt;

&lt;p&gt;It‚Äôs important to remember that &lt;a href="https://refactoring.fm/p/why-you-should-measure-your-development"&gt;measuring is just a tool &lt;/a&gt;‚Äî it can be used for both good and for evil. An effective leadership team understands this basic fact. The cool thing about metrics is that they provide insight that might otherwise be difficult to obtain. Employees should note that good leadership will use metrics merely to inform their decisions, not solely drive them.&lt;/p&gt;

&lt;p&gt;As a basic rule, it is difficult to improve something that is not measured.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"I started with the really basic observation that I believe you cannot be sure that you‚Äôre improving something if you don‚Äôt measure it, right? I mean, think of trying to lose weight without weighing yourself."&lt;/em&gt; -Luca Rossi, from the &lt;a href="https://open.spotify.com/episode/3Rz970JfT6lYdAVNRZvRMz?si=wFgoIHxLTQWI6JBQJtZn9g&amp;amp;dl_branch=1"&gt;Dev Interrupted Podcast at 4:31&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/3Rz970JfT6lYdAVNRZvRMz"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Measuring creates a foundation ‚Äî a benchmark ‚Äî which can be built upon. Once this foundation is established, organizations can begin to set goals. If you can set goals, you can rally a team; and if you can rally a team, you can achieve your product goals. This all becomes easier when you adopt a quantitative approach to your process. Success flows from the foundational element that measuring provides.&lt;/p&gt;

&lt;p&gt;Lastly, there exists a psychological benefit to measuring: namely, that people implicitly understand that metrics which are measured are important. After all, no one measures something they don‚Äôt care about. That which leadership identifies as measurable naturally informs employees what metrics leadership thinks are important. The very act of deciding to measure something telegraphs your intentions. Inversely, the opposite is also true: people tend to believe what is not measured is not important.&lt;/p&gt;

&lt;p&gt;All of this means leadership should be careful to identify what metrics are important because they define your organization and its behavior.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-should-be-measured"&gt;
  &lt;/a&gt;
  What should be measured?
&lt;/h2&gt;

&lt;p&gt;First, an organization must decide what metrics are worthy and whether or not they are actionable. A lean approach is best here. Decide what does and does not matter to you, and then move confidently in that direction.&lt;/p&gt;

&lt;p&gt;So what metrics are worthy to an engineering team?&lt;/p&gt;

&lt;p&gt;There are many valid metrics which include things like &lt;em&gt;&lt;a href="https://linearb.io/blog/5-ways-to-deliver-and-accelerate-engineering-velocity/"&gt;Velocity&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;&lt;a href="https://linearb.io/blog/what-is-branch-coverage/"&gt;Branch Coverage&lt;/a&gt;&lt;/em&gt;, and &lt;em&gt;&lt;a href="https://linearb.io/cycle-time/"&gt;Cycle Time&lt;/a&gt;&lt;/em&gt;, but one of the most interesting metrics we care about at LinearB is the Pull Request. In fact, &lt;a href="https://devinterrupted.com/pesky-pull-request-totally-worth-it/"&gt;it‚Äôs kind of our thing&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A pull request has two major goals: the first is to improve the quality of code before you release it, while the second is to share knowledge between the team about the code base.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devinterrupted.com/pesky-pull-request-totally-worth-it/"&gt;Pull Requests are great&lt;/a&gt; because they let your team have control over what goes into git; they let people comment about what and why things were done a certain way; and they can serve as permanent documentation about a chunk of code that can be useful down the road.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hqXcpQj7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2Am32SNRAQP5f_WKIA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hqXcpQj7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2Am32SNRAQP5f_WKIA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we at LinearB were to recommend one metric to start measuring, it would be Pull Request Size. Measuring PR Size ‚Äî and using that measurement to encourage smaller Pull Requests ‚Äî will help drastically lower Cycle Time. It will encourage all kinds of good behavior around code reviews, and it will prove that metrics can have a positive impact on business outcomes.&lt;/p&gt;

&lt;p&gt;Once you have identified the best metrics to track for your success, you will need to go about making sure they last. Here it is best to maintain a lean approach, avoiding large upfront investments of time or money.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-make-metrics-stick"&gt;
  &lt;/a&gt;
  How to make metrics stick
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yn3ZUVSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ma035yrvfkmlbjq1mapx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yn3ZUVSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ma035yrvfkmlbjq1mapx.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"And you should, as a leader, as a manager, you should make people feel that you care. There is no substitute for that."&lt;/em&gt; ‚Äî Luca Rossi, from the &lt;a href="https://open.spotify.com/episode/3Rz970JfT6lYdAVNRZvRMz?si=wFgoIHxLTQWI6JBQJtZn9g&amp;amp;dl_branch=1"&gt;Dev Interrupted Podcast at 21:10&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have all worked at a company where a change was decided, people were excited to see the change and then, after a couple of months, everyone has forgotten about it. Metrics are no different. Once a company makes the decision to align itself with a metric it must make the effort for it to last.&lt;/p&gt;

&lt;p&gt;It‚Äôs often best to start small. In the beginning, it is best to maintain a lean approach, avoiding large upfront investments of time or money. With small actionable change in mind, there are two ways to approach metrics adoption:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;In a &lt;strong&gt;top-down approach&lt;/strong&gt; you ‚Äòll want to speak with your senior developers early on. Give them strategic input to help them figure out the best way to implement metrics into your dev team. An engineering leader can then explain how the metrics fit into the company‚Äôs strategic direction and convey that message clearly to employees. It is important to get buy-in from your employees because they are the ones building value, and further discovering what can and should be measured. When done correctly, the top-down approach will have managers saying, ‚ÄúWow, I‚Äôve always wanted to measure this. Now I can.‚Äù&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In a &lt;strong&gt;bottom-up approach&lt;/strong&gt;, it‚Äôs all about making your team understand what you want to achieve. Provide them with the initiative to build value so they understand why and how they are being measured. For instance, most developers can relate to a bad pull request experience ‚Äî one that takes way too long or one that has a poor review and causes issues during production. People understand that a good code review should be both fast and accurate. So by starting small with a metric that is already understood, you will gain buy-in from your team. When done correctly, the bottom-up approach will have employees saying, ‚ÄúWow, we didn‚Äôt think we could measure this, and it‚Äôs actually valuable.‚Äù&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;How you approach adjusting for change in the long-term is up to you. In an ideal world, both the top-down and bottom-up approaches would be utilized simultaneously.&lt;/p&gt;

&lt;p&gt;Most importantly, your people should know that you care and that you value their feedback.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bottom-line"&gt;
  &lt;/a&gt;
  Bottom Line
&lt;/h2&gt;

&lt;p&gt;To achieve future goals a development team should know where it started. Metrics provide that benchmark. They are a foundation on which future success and business alignment can be built.&lt;/p&gt;

&lt;p&gt;Furthermore, in engineering, just as in life, tiny improvements are staggering when tracked continuously over a period of months and years. These gains boost team confidence and collaboration.&lt;/p&gt;

&lt;p&gt;Because with continual improvement, people feel as if they are working within a team and working &lt;em&gt;as a team&lt;/em&gt;. When things go right, and everyone improves together, bonds are formed.&lt;/p&gt;

&lt;p&gt;And of course, if you want to learn more about &lt;a href="https://linearb.io/wp-content/uploads/2020/05/17-Metrics-for-Modern-Dev-Leaders.pdf"&gt;LinearB‚Äôs metrics &lt;/a&gt;or find out what our customers already know, you can &lt;a href="https://linearb.io/demo/?utm_source=Referrals&amp;amp;utm_medium=devinterrupted.com&amp;amp;utm_campaign=devinterrupted%20referrals"&gt;book a free demo of LinearB &lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I included a few quotes from Luca Rossi above. He has a great blog for those who are passionate about engineering. You can check it out here: &lt;a href="https://refactoring.fm/"&gt;https://refactoring.fm/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XxsGziL8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z0vtjbhh1fqf0binhjeu.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XxsGziL8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z0vtjbhh1fqf0binhjeu.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you haven't already heard&lt;/strong&gt;, Dev Interrupted is hosting &lt;strong&gt;INTERACT&lt;/strong&gt;: An interactive, community-driven, digital conference on September 30th - by engineering leaders, for engineering leaders. 1 day, 10 speakers, 100s of engineers and engineering leaders, all free.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#register-now"&gt;
  &lt;/a&gt;
  &lt;a href="https://devinterrupted.com/event/interact/"&gt;Register Now&lt;/a&gt;
&lt;/h2&gt;

</description>
      <category>management</category>
      <category>motivation</category>
      <category>monitoring</category>
      <category>leadership</category>
    </item>
    <item>
      <title>Learning Python- Intermediate course: Day 4, Summary of the week, Guidelines for Recursion and high-level questions.</title>
      <author>Aatmaj</author>
      <pubDate>Fri, 06 Aug 2021 16:36:35 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-day-4-summary-of-the-week-guidelines-for-recursion-and-high-level-questions-445</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-day-4-summary-of-the-week-guidelines-for-recursion-and-high-level-questions-445</guid>
      <description>&lt;h2&gt;
  &lt;a href="#today-we-will-study-principles-of-recursion-and-then-solve-questions-related-to-recursion-this-is-the-continuation-of-the-last-part-so-in-case-you-have-missed-that-one-make-sure-to-have-a-quick-check-here"&gt;
  &lt;/a&gt;
  Today we will study principles of recursion and then solve questions related to recursion. This is the continuation of the last part, so in case you have missed that one, make sure to have a quick check &lt;a href="https://dev.to/aatmaj/learning-python-intermediate-course-day-3-recursion-in-python-41ff"&gt;here&lt;/a&gt;
&lt;/h2&gt;




&lt;h3&gt;
  &lt;a href="#summary-of-the-week"&gt;
  &lt;/a&gt;
  Summary of the week-
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/aatmaj/learning-python-intermediate-course-day-1-user-defined-functions-1kg7"&gt;Day 1&lt;/a&gt; We learnt how to make user defined functions. User defined functions are custom  functions designed by the programmer. They provide code reusability and flexibility while solving complicated problems. All this was backed up with two sample questions and one conceptual exercise.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/aatmaj/learning-python-intermediate-course-day-2-returning-values-from-methods-4bhn"&gt;Day 2&lt;/a&gt; We learnt how to return values from functions. By breaking complicated operations into functions, we can make the code more compact and flexible. This is possible because we can return data-types back to the function call. Returning multiple values is invalid, but we can return a list which can hold the values. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/aatmaj/learning-python-intermediate-course-day-3-recursion-in-python-41ff"&gt;Day 3&lt;/a&gt; We studied recursion in Python. We implemented it by calling the function from inside it. We then solved some good questions related to recursion.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#guidelines-for-using-recursion"&gt;
  &lt;/a&gt;
  Guidelines for using recursion.
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Recursion is a tool to allow programmer to concentrate on the key step of an algorithm, without initially having to worry about how to couple that step with the others.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Recursion is basically breaking apart a problem into parts, solving a single part and the while problem gets solved magically. &lt;/p&gt;

&lt;p&gt;Consider an example. We want to find the shortest path to a city. So first, we find shortest paths to all it's neighboring cities, and then choose the route which is smallest. And how do we find the shortest path to the neighboring cities? Well in the same way! This is the beauty of recursion. We can address a complicated problem by making smaller replicas to the main problem on and forever! This is known as the travelling salesman problem, which we solved using recursion.&lt;/p&gt;

&lt;p&gt;We first start any problem by asking &lt;em&gt;"How can this problem be divided into parts?"&lt;/em&gt; Once we have a simple short step to solve a mini-problem of the same type, applying it to a larger problem is easy.&lt;/p&gt;

&lt;p&gt;Finally we need to decide a stopping rule to prevent the recursion from running indefinitely. For example in the above problem, we stop when we reach to the city from where we have to start.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#exercises"&gt;
  &lt;/a&gt;
  Exercises
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The &lt;em&gt;Greatest Common Divisor&lt;/em&gt; (GCD) of two positive integers is the largest integer that divides both of the two integers. Thus, the GCD of 8 and 12 is 4, the GCD of 9 and 18 is 9, and the GCD of 16 and 25 is 1. Write a recursive function namd &lt;code&gt;GCD (x,y)&lt;/code&gt; that implements this &lt;em&gt;division algorithm&lt;/em&gt;: if y=0, then the GCD of x and y is x; otherwise the GCD of x and y is the same as the GCD of y and x%y. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The binomial coefficients may be defined by the following recurrence relation, which is the idea of the pascal's triangle.&lt;br&gt;
&lt;code&gt;C(n,0)=1 and C(n,n)=1 for n&amp;gt;=0&lt;/code&gt;&lt;br&gt;
&lt;code&gt;C(n,k)=C(n-1,k)+C(n-1,k-1) for n&amp;gt;k&amp;gt;0&lt;/code&gt;&lt;br&gt;
Write a recursive function which will generate C(n,k) by using the above formula&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;em&gt;Ackermann's function&lt;/em&gt;, defined as follows, is a standered device to determine how well recursion is implemented in any device.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A(0,n)=n+1                for n&amp;gt;=0
A(m,0)=A(m-1,1)           for m&amp;gt;0
A(m,n)=A(m-1,A(m,n-1))    for m&amp;gt;0 and n&amp;gt;0 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Yes, the above exercises are a bit difficult. But the key is finding C(n,k) or A(m,n) and directly implementing it. The rest is just about when to stop the recursion conditions. All the best for solving them! Solving these exercises will make you all fluent with recursion and it's problem solving  principles.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#all-answers-here"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/Aatmaj-Zephyr/Learning-Python"&gt;All Answers here&lt;/a&gt;
&lt;/h3&gt;




&lt;p&gt;&lt;em&gt;A bit about the course&lt;/em&gt;&lt;br&gt;
I know, I am going a bit slow for some of you.  But this is for the benifit of those who are here for the first time. This week was a gentle intro to user defined functions. In the coming weeks, I will cover all the details of the language. For those who already know coding basics, they can just skim through the blog and mull upon the exercises. The exercises provided will strengthen and reinforce the concepts. Moreover they are directly taken or similar to past coding tests from the interview panel...&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Epilogue&lt;/em&gt;- We all know that neither me nor you have ever seen each other. Learning in remote environment is a difficult, and teaching is perhaps even more difficult. Teaching is never a one-way process. When a teacher teaches with pattern, he/she expects that the student must respond back. Either with doubts, remarks or nods of approval.&lt;br&gt;
But friends, being remote, we cannot interact with each other. The only way we can connect is through the comments below. So I urge everyone to comment on the posts. Currently I am in doubt whether you all are understanding me or not. Should I speed up the pace or maybe explain more clearly? I am not getting any feedback from you. Any doubts, discussions, remarks or even a simple hi from you is a great source of motivation for me. So I look forward to your comments below...üòä&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;For those who have not yet made account in Dev.to, you can have a free easy sign-up using your mail or GitHub accounts. I would suggest the budding developers to create your GitHub free account right away. You would require to register sooner or later anyways&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•&lt;br&gt;
Follow me on GitHub for updates.........&lt;/p&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>What was your win this week?</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 06 Aug 2021 16:36:16 +0000</pubDate>
      <link>https://dev.to/devteam/what-was-your-win-this-week-2ek3</link>
      <guid>https://dev.to/devteam/what-was-your-win-this-week-2ek3</guid>
      <description>&lt;p&gt;Hey there!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Looking back on your week, what was something you're proud of?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;All wins count ‚Äî big or small üéâ&lt;/p&gt;

&lt;p&gt;Examples of 'wins' include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting a new project&lt;/li&gt;
&lt;li&gt;Fixing a tricky bug&lt;/li&gt;
&lt;li&gt;Trying out a fun new activity... or whatever else might spark joy ‚ù§Ô∏è &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Hope you have a fantastic weekend!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/KEG5UtvXUD7WPIhhuy/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/KEG5UtvXUD7WPIhhuy/giphy.gif" alt="Astronaut striking a victory pose"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>Setting up Prometheus and Grafana on Orange Pi Zero</title>
      <author>Rajitha Gunathilake</author>
      <pubDate>Fri, 06 Aug 2021 16:28:36 +0000</pubDate>
      <link>https://dev.to/rizkyrajitha/setting-up-prometheus-and-grafana-on-orange-pi-zero-5e8n</link>
      <guid>https://dev.to/rizkyrajitha/setting-up-prometheus-and-grafana-on-orange-pi-zero-5e8n</guid>
      <description>&lt;p&gt;Hi everyone,&lt;/p&gt;

&lt;p&gt;This is a tutorial I am going to walk through how to install and configure an Orange Pi Zero with &lt;a href="https://prometheus.io/"&gt;Prometheus&lt;/a&gt;  and  &lt;a href="https://grafana.com/"&gt;Grafana&lt;/a&gt; for monitoring hardware.&lt;/p&gt;

&lt;p&gt;I am using &lt;a href="http://www.orangepi.org/orangepizero/"&gt;Orange pi zero&lt;/a&gt; in this tutorial with AllWinner H2 Quad-core processor.&lt;/p&gt;

&lt;p&gt;Let's start by updating the Orange pi.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt-get update
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I first installed downloaded the Prometheus from their &lt;a href="https://github.com/prometheus/prometheus/releases/tag/v2.28.1"&gt;github&lt;/a&gt; release. because my orangepi is base on arm7 architecture I downloaded the respective archive. here &lt;code&gt;-OL&lt;/code&gt; in the curl will redirect if need and save the output file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;-OL&lt;/span&gt; https://github.com/prometheus/prometheus/releases/download/v2.28.1/prometheus-2.28.1.linux-armv7.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;after downloading the image extract it to a folder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;tar&lt;/span&gt; &lt;span class="nt"&gt;-xzvf&lt;/span&gt; prometheus-2.29.0-rc.0.linux-armv7.tar.gz prometheus-2.29.0-rc.0.linux-armv7/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;next, I copied the Prometheus binary to the &lt;code&gt;/usr/local/bin/&lt;/code&gt; because that I generally where your binary files live in.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;prometheus-2.29.0-rc.0.linux-armv7/
&lt;span class="nb"&gt;cp &lt;/span&gt;prometheus /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;after all that was set up, I created a service file for &lt;code&gt;systemd&lt;/code&gt; to configure Prometheus as a service in &lt;code&gt;/etc/systemd/system/&lt;/code&gt;.&lt;br&gt;
this directory is where we write &lt;code&gt;systemd&lt;/code&gt; unit files. there are many places among this one but this I a conventional directory that is best suited in this scenario.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo nano /etc/systemd/system/prometheus.service&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[Unit]
Description=Prometheus monitoring
Wants=network-online.target
After=network-online.target

[Service]
Type=simple
ExecStart=/usr/local/bin/prometheus \
                    --config.file /home/batman/prometheus/prometheus.yml \
                    --web.route-prefix=/ \
                    --web.external-url=http://rizky.lab/prometheus
Restart=always

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;in this file, I have added the &lt;code&gt;ExecStart&lt;/code&gt; path to the Prometheus binary. here I also added some more arguments to configure Prometheus, because I want to run Prometheus behind an Nginx reverse proxy. and also added the config file in path &lt;code&gt;/home/batman/prometheus/prometheus.yml&lt;/code&gt; so make sure you have the default &lt;code&gt;prometheus.yml&lt;/code&gt; (comes with the &lt;code&gt;tar&lt;/code&gt; archive) file in the specified path.&lt;/p&gt;



&lt;p&gt;after that is done. I restarted the systemd daemon and then enable the service.&lt;br&gt;
enabling service will make sure that this service will run after a reboot. it might do many other things behind the back but I notice this when I used this service without enabling it.&lt;br&gt;
next stared Prometheus.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl daemon-reload
&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl &lt;span class="nb"&gt;enable &lt;/span&gt;prometheus
&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl restart prometheus
&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl status prometheus
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;next, we can start installing the &lt;a href="https://github.com/prometheus/node_exporter/releases/tag/v1.2.0"&gt;node_exporter&lt;/a&gt; for orange pi&lt;br&gt;
here also, I looked the same way, searched for the &lt;code&gt;armv7&lt;/code&gt; architecture binary.&lt;br&gt;
just as before download extract and copy it to the &lt;code&gt;/usr/local/bin/&lt;/code&gt; directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;-OL&lt;/span&gt; https://github.com/prometheus/node_exporter/releases/download/v1.2.0/node_exporter-1.2.0.linux-armv7.tar.gz
&lt;span class="nb"&gt;tar&lt;/span&gt; &lt;span class="nt"&gt;-xzvf&lt;/span&gt; node_exporter-1.2.0.linux-armv7.tar.gz node_exporter-1.2.0.linux-armv7/
&lt;span class="nb"&gt;cd &lt;/span&gt;node_exporter-1.2.0.linux-armv7/
&lt;span class="nb"&gt;sudo cp &lt;/span&gt;node_exporter  /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;next, I repeated the same steps for creating the unit file for systemd.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo nano /etc/systemd/system/nodeexporter.service&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[Unit]
Description=node exporter for node monitoring
Wants=network-online.target
After=network-online.target

[Service]
Type=simple
ExecStart=/usr/local/bin/node_exporter
Restart=always

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;after setting up the node_exporter , reload systemd daemon and restarted node_exporter.&lt;br&gt;
keep in mind the service will name after the name of the service file. here node_exporter service will be recognized as nodeexporter because I named the unit file &lt;code&gt;nodeexporter.service&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl daemon-reload
&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl &lt;span class="nb"&gt;enable &lt;/span&gt;nodeexporter
&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl restart nodeexporter
&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl status nodeexporter
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;now that we have all in place, next add this nodeexporter to Prometheus as a target. to do that we need to edit the&lt;br&gt;
&lt;code&gt;prometheus.yml&lt;/code&gt; file we specified earlier. I appended the following to the &lt;code&gt;prometheus.yml&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;job_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;node_exporter"&lt;/span&gt;

  &lt;span class="na"&gt;static_configs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;targets&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;localhost:9100"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;after that restart, Prometheus to catch up with new changes. you can see the change at this point if you visit Prometheus via its opened port.&lt;/p&gt;

&lt;p&gt;after that, I set up &lt;a href="//grafana.com/"&gt;Grafana&lt;/a&gt; for the monitoring dashboard.&lt;/p&gt;

&lt;p&gt;For Grafana, it's a bit different than the last approach, hence it could be installed with apt.&lt;br&gt;
I pretty much followed they're &lt;a href="https://grafana.com/docs/grafana/latest/installation/debian/"&gt;offcial documentation&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;wget &lt;span class="nt"&gt;-q&lt;/span&gt; &lt;span class="nt"&gt;-O&lt;/span&gt; - https://packages.grafana.com/gpg.key | &lt;span class="nb"&gt;sudo &lt;/span&gt;apt-key add -
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"deb https://packages.grafana.com/oss/deb stable main"&lt;/span&gt; | &lt;span class="nb"&gt;sudo tee&lt;/span&gt; &lt;span class="nt"&gt;-a&lt;/span&gt; /etc/apt/sources.list.d/grafana.list
&lt;span class="nb"&gt;sudo &lt;/span&gt;apt-get update
&lt;span class="nb"&gt;sudo &lt;/span&gt;apt-get &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-y&lt;/span&gt; grafana
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl demon-reload
&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl &lt;span class="nb"&gt;enable &lt;/span&gt;grafana-server
&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl start grafana-server
systemctl status grafana-server
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;hereafter setting up everything I need to alter come configurations in the &lt;code&gt;grafana.ini&lt;/code&gt; file to allow Grafana to access behind a reverse proxy.&lt;br&gt;
this Grafana file lives in &lt;code&gt;/etc/grafana&lt;/code&gt; directory by default.&lt;/p&gt;

&lt;p&gt;in that configuration we have to set &lt;code&gt;domain&lt;/code&gt; , &lt;code&gt;root_url&lt;/code&gt; and &lt;code&gt;serve_from_sub_path&lt;/code&gt; options.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ini"&gt;&lt;code&gt;&lt;span class="nn"&gt;[server]&lt;/span&gt;
&lt;span class="c"&gt;# The public facing domain name used to access grafana from a browser
&lt;/span&gt;&lt;span class="py"&gt;domain&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;rizky.lab&lt;/span&gt;

&lt;span class="c"&gt;# The full public facing url you use in browser, used for redirects and emails
# If you use reverse proxy and sub path specify full url (with sub path)
# ;root_url = %(protocol)s://%(domain)s:%(http_port)s/
&lt;/span&gt;&lt;span class="py"&gt;root_url&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;%(protocol)s://%(domain)s:%(http_port)s/grafana/&lt;/span&gt;

&lt;span class="c"&gt;# Serve Grafana from subpath specified in `root_url` setting. By default it is set to `false` for compatibility reasons.
&lt;/span&gt;&lt;span class="py"&gt;serve_from_sub_path&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;true&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;after setting this up, restart Grafana to pick up with the latest changes.&lt;/p&gt;

&lt;p&gt;now as the last step configure the Nginx as the reverse proxy to access our all mighty Grafana dashboard.&lt;/p&gt;

&lt;p&gt;here I previously configured a site as &lt;code&gt;rizky.lab&lt;/code&gt; , so I am editing that to suit the needs, but you can try any way you like.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight conf"&gt;&lt;code&gt;&lt;span class="n"&gt;server&lt;/span&gt; {
  &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt; &lt;span class="n"&gt;default_server&lt;/span&gt;;
  &lt;span class="n"&gt;listen&lt;/span&gt; [::]:&lt;span class="m"&gt;80&lt;/span&gt; &lt;span class="n"&gt;default_server&lt;/span&gt;;

  &lt;span class="n"&gt;root&lt;/span&gt; /&lt;span class="n"&gt;var&lt;/span&gt;/&lt;span class="n"&gt;www&lt;/span&gt;/&lt;span class="n"&gt;rizky&lt;/span&gt;.&lt;span class="n"&gt;lab&lt;/span&gt;;

  &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;.&lt;span class="n"&gt;html&lt;/span&gt;;

  &lt;span class="n"&gt;server_name&lt;/span&gt; &lt;span class="n"&gt;rizky&lt;/span&gt;.&lt;span class="n"&gt;lab&lt;/span&gt;;

         &lt;span class="n"&gt;location&lt;/span&gt; /&lt;span class="n"&gt;prometheus&lt;/span&gt;/ {
                &lt;span class="n"&gt;proxy_pass&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;://&lt;span class="n"&gt;localhost&lt;/span&gt;:&lt;span class="m"&gt;9090&lt;/span&gt;/;
        }


        &lt;span class="n"&gt;location&lt;/span&gt; /&lt;span class="n"&gt;grafana&lt;/span&gt;/ {
                &lt;span class="n"&gt;proxy_pass&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;://&lt;span class="n"&gt;localhost&lt;/span&gt;:&lt;span class="m"&gt;3000&lt;/span&gt;/;
        }

        &lt;span class="n"&gt;location&lt;/span&gt; / {

                &lt;span class="n"&gt;try_files&lt;/span&gt; $&lt;span class="n"&gt;uri&lt;/span&gt; $&lt;span class="n"&gt;uri&lt;/span&gt;/ =&lt;span class="m"&gt;404&lt;/span&gt;;
        }

        &lt;span class="c"&gt;# Proxy Grafana Live WebSocket connections.
&lt;/span&gt;        &lt;span class="n"&gt;location&lt;/span&gt; /&lt;span class="n"&gt;grafana&lt;/span&gt;/&lt;span class="n"&gt;api&lt;/span&gt;/&lt;span class="n"&gt;live&lt;/span&gt; {
                &lt;span class="n"&gt;proxy_http_version&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;.&lt;span class="m"&gt;1&lt;/span&gt;;
                &lt;span class="n"&gt;proxy_set_header&lt;/span&gt; &lt;span class="n"&gt;Upgrade&lt;/span&gt; $&lt;span class="n"&gt;http_upgrade&lt;/span&gt;;
                &lt;span class="n"&gt;proxy_set_header&lt;/span&gt; &lt;span class="n"&gt;Connection&lt;/span&gt; &lt;span class="s2"&gt;"Upgrade"&lt;/span&gt;;
                &lt;span class="n"&gt;proxy_set_header&lt;/span&gt; &lt;span class="n"&gt;Host&lt;/span&gt; $&lt;span class="n"&gt;http_host&lt;/span&gt;;
                &lt;span class="n"&gt;proxy_pass&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;://&lt;span class="n"&gt;localhost&lt;/span&gt;:&lt;span class="m"&gt;3000&lt;/span&gt;/;
        }

}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and after all that, we can access the all mighty Grafana Dashboard, and configure it as you wish.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pGe7CDzs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kzwobntu88og2s8axpuu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pGe7CDzs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kzwobntu88og2s8axpuu.png" alt="Grafana Dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading-till-the-end"&gt;
  &lt;/a&gt;
  Thanks for reading till the end üôå
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#cheers"&gt;
  &lt;/a&gt;
  Cheers ü•Ç
&lt;/h3&gt;

</description>
      <category>grafana</category>
      <category>prometheus</category>
      <category>devops</category>
      <category>orangepi</category>
    </item>
    <item>
      <title>Animated Tab Bar Using Html Css Js</title>
      <author>Innocent Coder</author>
      <pubDate>Fri, 06 Aug 2021 16:12:52 +0000</pubDate>
      <link>https://dev.to/innocentcoder/animated-tab-bar-using-html-css-js-58bn</link>
      <guid>https://dev.to/innocentcoder/animated-tab-bar-using-html-css-js-58bn</guid>
      <description>&lt;p&gt;Motion Design Interaction for a bottom toolbar using the cutout that came in Material Design 2.0 for the call to action buttons (or FAB). This is mixture of both the bottom toolbar and the bottom tab bar.&lt;/p&gt;

&lt;p&gt;Download Source Code:- &lt;a href="https://bit.ly/3xtBqew"&gt;https://bit.ly/3xtBqew&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#html-code"&gt;
  &lt;/a&gt;
  HTML Code
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;menu class="menu"&amp;gt;

    &amp;lt;button class="menu__item active" style="--bgColorItem: #ff8c00;" &amp;gt;
      &amp;lt;svg class="icon" viewBox="0 0 24 24"&amp;gt;
        &amp;lt;path d="M3.8,6.6h16.4"/&amp;gt;
        &amp;lt;path d="M20.2,12.1H3.8"/&amp;gt;
        &amp;lt;path d="M3.8,17.5h16.4"/&amp;gt;
      &amp;lt;/svg&amp;gt;
    &amp;lt;/button&amp;gt;

    &amp;lt;button class="menu__item" style="--bgColorItem: #f54888;"&amp;gt;
      &amp;lt;svg class="icon" viewBox="0 0 24 24"&amp;gt;
        &amp;lt;path  d="M6.7,4.8h10.7c0.3,0,0.6,0.2,0.7,0.5l2.8,7.3c0,0.1,0,0.2,0,0.3v5.6c0,0.4-0.4,0.8-0.8,0.8H3.8
        C3.4,19.3,3,19,3,18.5v-5.6c0-0.1,0-0.2,0.1-0.3L6,5.3C6.1,5,6.4,4.8,6.7,4.8z"/&amp;gt;
        &amp;lt;path  d="M3.4,12.9H8l1.6,2.8h4.9l1.5-2.8h4.6"/&amp;gt;
      &amp;lt;/svg&amp;gt;
    &amp;lt;/button&amp;gt;

    &amp;lt;button class="menu__item" style="--bgColorItem: #4343f5;" &amp;gt;
      &amp;lt;svg class="icon" viewBox="0 0 24 24"&amp;gt;
      &amp;lt;path  d="M3.4,11.9l8.8,4.4l8.4-4.4"/&amp;gt;
      &amp;lt;path  d="M3.4,16.2l8.8,4.5l8.4-4.5"/&amp;gt;
      &amp;lt;path  d="M3.7,7.8l8.6-4.5l8,4.5l-8,4.3L3.7,7.8z"/&amp;gt;
    &amp;lt;/button&amp;gt;

    &amp;lt;button class="menu__item" style="--bgColorItem: #e0b115;" &amp;gt; 
      &amp;lt;svg class="icon" viewBox="0 0 24 24" &amp;gt;
        &amp;lt;path  d="M5.1,3.9h13.9c0.6,0,1.2,0.5,1.2,1.2v13.9c0,0.6-0.5,1.2-1.2,1.2H5.1c-0.6,0-1.2-0.5-1.2-1.2V5.1
          C3.9,4.4,4.4,3.9,5.1,3.9z"/&amp;gt;
        &amp;lt;path  d="M4.2,9.3h15.6"/&amp;gt;
        &amp;lt;path  d="M9.1,9.5v10.3"/&amp;gt;
    &amp;lt;/button&amp;gt;

    &amp;lt;button class="menu__item" style="--bgColorItem:#65ddb7;"&amp;gt;
      &amp;lt;svg class="icon" viewBox="0 0 24 24" &amp;gt;
        &amp;lt;path  d="M5.1,3.9h13.9c0.6,0,1.2,0.5,1.2,1.2v13.9c0,0.6-0.5,1.2-1.2,1.2H5.1c-0.6,0-1.2-0.5-1.2-1.2V5.1
          C3.9,4.4,4.4,3.9,5.1,3.9z"/&amp;gt;
        &amp;lt;path  d="M5.5,20l9.9-9.9l4.7,4.7"/&amp;gt;
        &amp;lt;path  d="M10.4,8.8c0,0.9-0.7,1.6-1.6,1.6c-0.9,0-1.6-0.7-1.6-1.6C7.3,8,8,7.3,8.9,7.3C9.7,7.3,10.4,8,10.4,8.8z"/&amp;gt;
      &amp;lt;/svg&amp;gt;
    &amp;lt;/button&amp;gt;

    &amp;lt;div class="menu__border"&amp;gt;&amp;lt;/div&amp;gt;

  &amp;lt;/menu&amp;gt;

  &amp;lt;div class="svg-container"&amp;gt;
    &amp;lt;svg viewBox="0 0 202.9 45.5" &amp;gt;
      &amp;lt;clipPath id="menu" clipPathUnits="objectBoundingBox" transform="scale(0.0049285362247413 0.021978021978022)"&amp;gt;
        &amp;lt;path  d="M6.7,45.5c5.7,0.1,14.1-0.4,23.3-4c5.7-2.3,9.9-5,18.1-10.5c10.7-7.1,11.8-9.2,20.6-14.3c5-2.9,9.2-5.2,15.2-7
          c7.1-2.1,13.3-2.3,17.6-2.1c4.2-0.2,10.5,0.1,17.6,2.1c6.1,1.8,10.2,4.1,15.2,7c8.8,5,9.9,7.1,20.6,14.3c8.3,5.5,12.4,8.2,18.1,10.5
          c9.2,3.6,17.6,4.2,23.3,4H6.7z"/&amp;gt;
      &amp;lt;/clipPath&amp;gt;
    &amp;lt;/svg&amp;gt;
  &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#css-code"&gt;
  &lt;/a&gt;
  CSS Code
&lt;/h1&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;html {

    box-sizing: border-box;
    --bgColorMenu : #1d1d27;
    --duration: .7s;    

}

html *,
html *::before,
html *::after {

    box-sizing: inherit;

}

body{

    margin: 0;
    display: flex;
    height: 100vh;
    overflow: hidden;
    align-items: center;
    justify-content: center;
    background-color: #ffb457;
    -webkit-tap-highlight-color: transparent;
    transition: background-color var(--duration);

}

.menu{

    margin: 0;
    display: flex;
    /* Works well with 100% width  */
    width: 32.05em;
    font-size: 1.5em;
    padding: 0 2.85em;
    position: relative;
    align-items: center;
    justify-content: center;
    background-color: var(--bgColorMenu);

}

.menu__item{

    all: unset;
    flex-grow: 1;
    z-index: 100;
    display: flex;
    cursor: pointer;
    position: relative;
    border-radius: 50%;
    align-items: center;
    will-change: transform;
    justify-content: center;
    padding: 0.55em 0 0.85em;
    transition: transform var(--timeOut , var(--duration));

}

.menu__item::before{

    content: "";
    z-index: -1;
    width: 4.2em;
    height: 4.2em;
    border-radius: 50%;
    position: absolute;
    transform: scale(0);
    transition: background-color var(--duration), transform var(--duration);

}


.menu__item.active {

    transform: translate3d(0, -.8em , 0);

}

.menu__item.active::before{

    transform: scale(1);
    background-color: var(--bgColorItem);

}

.icon{

    width: 2.6em;
    height: 2.6em;
    stroke: white;
    fill: transparent;
    stroke-width: 1pt;
    stroke-miterlimit: 10;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-dasharray: 400;

}

.menu__item.active .icon {

    animation: strok 1.5s reverse;

}

@keyframes strok {

    100% {

        stroke-dashoffset: 400;

    }

}

.menu__border{

    left: 0;
    bottom: 99%;
    width: 10.9em;
    height: 2.4em;
    position: absolute;
    clip-path: url(#menu);
    will-change: transform;
    background-color: var(--bgColorMenu);
    transition: transform var(--timeOut , var(--duration));

}

.svg-container {

    width: 0;
    height: 0;
}


@media screen and (max-width: 50em) {
    .menu{
        font-size: .8em;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#js-code"&gt;
  &lt;/a&gt;
  JS Code
&lt;/h1&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;

"use strict"; 

const body = document.body;
const bgColorsBody = ["#ffb457", "#ff96bd", "#9999fb", "#ffe797", "#cffff1"];
const menu = body.querySelector(".menu");
const menuItems = menu.querySelectorAll(".menu__item");
const menuBorder = menu.querySelector(".menu__border");
let activeItem = menu.querySelector(".active");

function clickItem(item, index) {

    menu.style.removeProperty("--timeOut");

    if (activeItem == item) return;

    if (activeItem) {
        activeItem.classList.remove("active");
    }


    item.classList.add("active");
    body.style.backgroundColor = bgColorsBody[index];
    activeItem = item;
    offsetMenuBorder(activeItem, menuBorder);


}

function offsetMenuBorder(element, menuBorder) {

    const offsetActiveItem = element.getBoundingClientRect();
    const left = Math.floor(offsetActiveItem.left - menu.offsetLeft - (menuBorder.offsetWidth  - offsetActiveItem.width) / 2) +  "px";
    menuBorder.style.transform = `translate3d(${left}, 0 , 0)`;

}

offsetMenuBorder(activeItem, menuBorder);

menuItems.forEach((item, index) =&amp;gt; {

    item.addEventListener("click", () =&amp;gt; clickItem(item, index));

})

window.addEventListener("resize", () =&amp;gt; {
    offsetMenuBorder(activeItem, menuBorder);
    menu.style.setProperty("--timeOut", "none");
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Note:-&lt;/strong&gt; visit my youtube channel for frontend tutorials&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;subscribe to my youtube channel :-&lt;/strong&gt; &lt;a href="https://www.youtube.com/channel/UCR64vQptythbJ1SmI-ub0Rg"&gt;https://www.youtube.com/channel/UCR64vQptythbJ1SmI-ub0Rg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resent post :-&lt;/strong&gt; &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/innocentcoder" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RGJ5NE5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ICZsIDfS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/620705/764eb964-ecd2-4875-90c2-142dfc2f639c.jpg" alt="innocentcoder"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/innocentcoder/best-6-free-icons-pack-for-web-dev-and-designer-3064" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Best 6 Free Icons Pack For Web Dev And Designer&lt;/h2&gt;
      &lt;h3&gt;Innocent Coder „Éª Jul 1 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Should You Really Learn Vanilla JavaScript Before React?</title>
      <author>Nico Zerpa (he/him)</author>
      <pubDate>Fri, 06 Aug 2021 16:08:07 +0000</pubDate>
      <link>https://dev.to/nicozerpa/should-you-really-learn-vanilla-javascript-before-react-3lec</link>
      <guid>https://dev.to/nicozerpa/should-you-really-learn-vanilla-javascript-before-react-3lec</guid>
      <description>&lt;p&gt;"Learn the basics before you learn React", they say. But if you're a beginner who's learning with React first, you probably start to worry. You might start asking if you're learning everything the wrong way.&lt;/p&gt;

&lt;p&gt;The thing is, &lt;strong&gt;if you're learning React before the basics, chances are that you're doing it right.&lt;/strong&gt; And that's because it all boils down to your personal learning style.&lt;/p&gt;

&lt;p&gt;Basically, &lt;strong&gt;devs can learn things in two ways: bottom-up and top-down.&lt;/strong&gt; A bottom-up learner feels more comfortable learning the basics (i.e. JavaScript, HTML, or CSS) first. They only start learning the libraries after they feel confident with the fundamentals.&lt;/p&gt;

&lt;p&gt;On the other hand, a top-down learner prefers learning the frameworks first. The framework patterns help them learn the fundamental libraries and languages under the hood.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-your-learning-style"&gt;
  &lt;/a&gt;
  What's Your Learning Style?
&lt;/h2&gt;

&lt;p&gt;And now, the question is: what's the best learning style for you? Of course, there's no one-size-fits-all answer, you'll have to find the answer for yourself.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The best way to find out is to try both approaches, and check which method helped you learn better.&lt;/strong&gt; Or if you're already trying to learn things and you're facing too many challenges, try the opposite approach.&lt;/p&gt;

&lt;p&gt;The only caveat here is: some top-down learners might put off learning the fundamentals, even after they became proficient with the framework. I strongly recommend that you &lt;strong&gt;don't put off learning the fundamentals.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Learning the basics helps you a lot when you have to find and fix bugs in your code. No matter if you learn them before or after, what counts is that you do know them.&lt;/p&gt;




&lt;p&gt;Become a Better JavaScript Developer! My newsletter has easy, actionable steps to level up your JavaScript skills, right to your inbox. &lt;a href="https://nicozerpa.com/newsletter"&gt;Click here to subscribe&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Day 2: Validate Pin, Square Every Digits and String Repeat</title>
      <author>Kingsley Ubah</author>
      <pubDate>Fri, 06 Aug 2021 15:40:41 +0000</pubDate>
      <link>https://dev.to/ubahthebuilder/day-2-validate-pin-square-every-digits-and-string-repeat-jfj</link>
      <guid>https://dev.to/ubahthebuilder/day-2-validate-pin-square-every-digits-and-string-repeat-jfj</guid>
      <description>&lt;p&gt;Hi guys!&lt;/p&gt;

&lt;p&gt;Welcome to the Friday edition of our coding challenge. In today's edition, we are going to be solving three every simple challenges.&lt;/p&gt;

&lt;p&gt;For those of who you are just joining today, time for a brief introduction. My name is Kingsley Ubah, 21 year old web developer who loves learning and sharing what he knows.&lt;/p&gt;

&lt;p&gt;In this weekly coding challenge, I will be taking out coding problems from CodeWars and sharing a step-by-step tutorial on how exactly I was able to solve it on my first trial. &lt;/p&gt;

&lt;p&gt;Everyone is then welcome to share his or her own version of the solutions. I do this every Mondays, Wednesdays and Fridays.&lt;/p&gt;

&lt;p&gt;For today, we are going to be solving three simple challenges:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Square Every Digits&lt;/li&gt;
&lt;li&gt;String Repeat&lt;/li&gt;
&lt;li&gt;Validate Pin&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Without further ado, let's dive in!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#square-every-digits"&gt;
  &lt;/a&gt;
  Square Every Digits
&lt;/h3&gt;

&lt;p&gt;The first coding challenge is going to be simple. We are expected to create a function which takes in number as parameter, squares every single digit in the number and then return them in a concatenated form.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;squareDigits&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2323&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      &lt;span class="c1"&gt;// 4949&lt;/span&gt;
&lt;span class="nx"&gt;squareDigits&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9999&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      &lt;span class="c1"&gt;// 81818181&lt;/span&gt;
&lt;span class="nx"&gt;squareDigits&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6498&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      &lt;span class="c1"&gt;// 36168164&lt;/span&gt;
&lt;span class="nx"&gt;squareDigits&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9999&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      &lt;span class="c1"&gt;// 81818181&lt;/span&gt;
&lt;span class="nx"&gt;squareDigits&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1111&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      &lt;span class="c1"&gt;//   1111&lt;/span&gt;
&lt;span class="nx"&gt;squareDigits&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3412&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      &lt;span class="c1"&gt;// 91614&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fun, right?&lt;/p&gt;

&lt;p&gt;I pulled this test out of a 7 kyu challenge on CodeWars.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  SOLUTION
&lt;/h4&gt;

&lt;p&gt;As usual, the first step I always take when solving a coding problem is to break down the problem smaller chunks and then outlining the solutions into logical steps, representing each of these steps in pseudocode.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-1-converting-the-number-to-string-and-splitting-them"&gt;
  &lt;/a&gt;
  STEP 1: Converting the Number To String and Splitting them
&lt;/h4&gt;

&lt;p&gt;In JavaScript, there is no easy way to get each digit in a number separetely. To achieve this in an easy way, we will need to covert the number to a string. This is because it far easier to extract each digits if they were in a string format. We do this with the .toString() String Method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;squareDigits&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;digits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that operation, we will need to split the two &lt;code&gt;stringed&lt;/code&gt; numbers into an array of strings, we do this with the split() method, passing in a closed set of quotes. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-2-loop-through-the-array-of-stringed-digits-and-square-each-digit"&gt;
  &lt;/a&gt;
  STEP 2: Loop through the Array of stringed digits and Square each digit
&lt;/h4&gt;

&lt;p&gt;First, we will need to create a variable and pass an empty string to it. &lt;/p&gt;

&lt;p&gt;Why? Because when you add (with +) a number to a string, that number becomes part of the string. For example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;22&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="c1"&gt;// "22" is a string&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;morestring&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 22 is a number&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;moreString&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// "2222" instead of 44&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will need this behaviour when joining the squared digits together, as you will come to see.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let added = ''

digits.forEach(function (digit) { 
let squared = Number(digit) * Number(digit)

added = added + squared;
})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After create the variable and passing in an empty string, we then loop through the array of digits. For every single digit encountered, we:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Covert that digit which was previously a string to a number&lt;/li&gt;
&lt;li&gt;Multiple that single digit against itself (aka squaring) and pass it to a variable&lt;/li&gt;
&lt;li&gt;Concatenate the number to the added variable which if you recall, holds an empty string. This will trigger the string concatenation behavior I had explained earlier.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#step-3-covert-the-concatenated-string-to-number-and-return"&gt;
  &lt;/a&gt;
  STEP: 3 Covert the concatenated string to Number and return
&lt;/h4&gt;

&lt;p&gt;At this point, we have already gotten each digit, shared it, and joined it to the previously squared digit.&lt;/p&gt;

&lt;p&gt;Final thing to do is to convert the string back to it's original number type and return that from the function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;added&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thats all!&lt;/p&gt;

&lt;p&gt;Here is the full program:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;squareDigits&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;digits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;added&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;

&lt;span class="nx"&gt;digits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;digit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;squared&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;digit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;digit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;added&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;added&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;squared&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;added&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;squareDigits&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1212&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#results"&gt;
  &lt;/a&gt;
  RESULTS
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uDto7aWQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628260623021/QFHXofFLE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uDto7aWQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628260623021/QFHXofFLE.png" alt="js fIDDLE SQUARE.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0qdum-_a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628260635412/fKuGeZpu4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0qdum-_a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628260635412/fKuGeZpu4.png" alt="JSFIDDLESQUARE2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#repeat-the-string"&gt;
  &lt;/a&gt;
  Repeat the String
&lt;/h3&gt;

&lt;p&gt;The second challenge is probably the easiest problem you could every encounter anywhere but I chose it to highlight a string method which i believe could be very useful when building your own projects.&lt;/p&gt;

&lt;p&gt;In this challenge, we are expected to create a function which takes in two parameters: a number &lt;code&gt;n&lt;/code&gt; and a string &lt;code&gt;s&lt;/code&gt;, and repeats the giving string &lt;code&gt;s&lt;/code&gt; exactly &lt;code&gt;n&lt;/code&gt; number of times.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;repeatStr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Me&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;// "MeMeMeMe"&lt;/span&gt;
&lt;span class="nx"&gt;repearStr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1111&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="c1"&gt;// "11111111111111111111"&lt;/span&gt;
&lt;span class="nx"&gt;repeatStr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;you&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="c1"&gt;// "you"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Without further ado, lets dive in!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  SOLUTION
&lt;/h4&gt;

&lt;p&gt;The solution to these requres just one step. We achieve what we want, we have one simple string method to utilize: &lt;code&gt;repeat()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This method takes in as a number as an argument and returns the string value repeated to exactly that amount, exactly what we needed:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;repeatStr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#results"&gt;
  &lt;/a&gt;
  RESULTS
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mLy6bPT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628260576814/LcpIxWrYE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mLy6bPT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628260576814/LcpIxWrYE.png" alt="JSFIDDLEREPEAT1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SSzVvjwW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628260590335/Znwk5RK22b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SSzVvjwW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628260590335/Znwk5RK22b.png" alt="jsfiddlerepeat2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#validate-pin-code"&gt;
  &lt;/a&gt;
  Validate Pin Code
&lt;/h3&gt;

&lt;p&gt;The third and final challenge is something we all are familiar with. If you have a Bank ATM card, you are aware that the pin code should be four or six characters and consists only of numbers. In this chaalnege, we are expected to create a function which returns true if those conditions are met and false otherwise.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;validatePin("12345") // false
validatePin("2134") // true
validatePin("a345") // false
validatePin("222134") // true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let tackle this.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  SOLUTION
&lt;/h5&gt;

&lt;p&gt;First, we need to convert the string to Number. Then we create a &lt;code&gt;returnValue&lt;/code&gt; variable which will hold our final return value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;validatePin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;numPin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;returnValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's something to know. Assuming our pin had a letter in it, then the Number(pin) call will return a &lt;code&gt;NaN&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;let n = "a1234"&lt;br&gt;
let type = Number(n)&lt;/p&gt;

&lt;p&gt;console.log(type) //NaN&lt;/p&gt;

&lt;p&gt;Next, we create nested if statements: First, to check if the pin is &lt;code&gt;NaN&lt;/code&gt;, that is has a letter in it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;isNaN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numPin&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nx"&gt;returnValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, in the next two conditonals, we check if pin doesn't has 4 or 6 numbers. If true, we set value to false. Otherwise we set value to true:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;returnValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nx"&gt;returnValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;returnValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After everything, we now return the &lt;code&gt;returnValue&lt;/code&gt;variable which holds the accurate boolean result for our function.&lt;/p&gt;

&lt;p&gt;Here's the full program:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;validatePin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;numPin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;returnValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;isNaN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numPin&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nx"&gt;returnValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;returnValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nx"&gt;returnValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;returnValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#result"&gt;
  &lt;/a&gt;
  RESULT
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gHePxvTy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628263796489/lYJqmvJve.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gHePxvTy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628263796489/lYJqmvJve.png" alt="jsFIDDLEVALID.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kdz4k_----/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628263815027/XGDJ714Ej.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kdz4k_----/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628263815027/XGDJ714Ej.png" alt="JSFIDDLEVALI.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;That's it. I hope you learned something new from this challenge.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you have a better way of solving these problems, please put it down in the comments. I'd love to check it out. If you have any suggestions, I'd also love to hear it!&lt;/p&gt;

&lt;p&gt;As i said in the beginning, I will be doing this every Mondays, Wednesdays and Fridays. Follow/Subscribe to this blog to be updated. I will be tackling a new challenge in public on Friday.&lt;/p&gt;

&lt;p&gt;Until then, friends!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;P/S: If you are learning JavaScript, I recently created an eBook which teaches 50 topics in hand-written notes. Check it out  &lt;a href="//gum.co/js-50"&gt;here &lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title> SQLite: A tool that allows creating databases from the terminal  </title>
      <author>Danilsa Caraballo</author>
      <pubDate>Fri, 06 Aug 2021 14:43:05 +0000</pubDate>
      <link>https://dev.to/danilsa0109/sqlite-a-tool-that-allows-creating-databases-from-the-terminal-78j</link>
      <guid>https://dev.to/danilsa0109/sqlite-a-tool-that-allows-creating-databases-from-the-terminal-78j</guid>
      <description>&lt;p&gt;I had learned how to create a table for a new database using tools like Excel, Matlab, My sql and table plus.&lt;/p&gt;

&lt;p&gt;Now, with &lt;code&gt;SQLite&lt;/code&gt; I can create the databases in a very practical way, it is similar to &lt;code&gt;Mysql&lt;/code&gt;, so today I a practical example, comparing &lt;code&gt;Mysql&lt;/code&gt; with &lt;code&gt;SQLite&lt;/code&gt;,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We must be in the folder where we will create the database:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To &lt;code&gt;SQLite&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HiHNF_ze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cn0e16op9ytt6ow195ha.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HiHNF_ze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cn0e16op9ytt6ow195ha.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;in the case of &lt;code&gt;Mysql&lt;/code&gt;, you must find the location of the program to be able to execute it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew search mysql
//or
./mysql -u root -p
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Open the tool, giving name to database:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To &lt;code&gt;SQLite&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;~ sqlite3 mydatabase
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;in the case of &lt;code&gt;Mysql&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~ create database mydatabase
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Create new table, taking into account the type of the column:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;SQLite&lt;/code&gt; and &lt;code&gt;Mysql&lt;/code&gt; are the same&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~ use mydatabase
~ create table dataUsers(
          Id integer primary key,
          Name text,
          Last_name text,
          age integer,
          Cell integer 
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;insert the data:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;SQLite&lt;/code&gt; and&lt;code&gt;Mysql&lt;/code&gt; are the same&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;insert into dataUsers(0001,'Ema','Garces', 21, 0573033333055 );

//or

insert into dataUsers( Name text,Last_name text, age real, Cell integer ) VALUES (0001,'Ema','Garces', 21, 0573033333055);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Show table:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To &lt;code&gt;SQLite&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~ .mode {mode of choice}
~ select * from dataUsers; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;there are several view modes to display the table:&lt;br&gt;
ascii, box, csv, column, html, insert, line, list, tabs, tcl, etc.&lt;/p&gt;

&lt;p&gt;in the case of &lt;code&gt;Mysql&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~ show tables;
~ describe dataUsers;
~ select * from dataUsers; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Bonus: Connect to database with table plus&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;6.1 open table plus:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xiu_pP3O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vt87wz16b9dfm9ciao33.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xiu_pP3O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vt87wz16b9dfm9ciao33.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
6.2 create new connection:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OS6E0268--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zephts7lzwp4wdf8e531.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OS6E0268--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zephts7lzwp4wdf8e531.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IJ0egRpR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebtrbb2rpmnegmwmu7ii.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IJ0egRpR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebtrbb2rpmnegmwmu7ii.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
6.3 name the connection and find the location of the database:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iP3qZxTH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ez76pif8qw90un2xkxl1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iP3qZxTH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ez76pif8qw90un2xkxl1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Top 5 Must-have VS Code extensions</title>
      <author>Archit Sharma</author>
      <pubDate>Fri, 06 Aug 2021 14:37:59 +0000</pubDate>
      <link>https://dev.to/iarchitsharma/top-5-must-have-vs-code-extensions-229k</link>
      <guid>https://dev.to/iarchitsharma/top-5-must-have-vs-code-extensions-229k</guid>
      <description>&lt;p&gt;&lt;strong&gt;Visual Studio Code is the most popular code editor or IDE (Integrated Development Environment) currently. It's a lightweight source code editor, open-source and easy to use.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Visual Studio Code extensions makes the life of developer's much easier just like &lt;a href="https://dev.to/iarchitsharma/visual-studio-code-keyboard-shortcuts-for-windows-1fhh"&gt;VS Code keyboard shortcuts&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#here-is-a-list-of-top-5-must-have-extensions-"&gt;
  &lt;/a&gt;
  Here is a list of top 5 must have extensions :-
&lt;/h5&gt;

&lt;h2&gt;
  &lt;a href="#1-beautify"&gt;
  &lt;/a&gt;
  1. Beautify
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dmEPBZYj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o4v2gro21hqyoxzky74x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dmEPBZYj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o4v2gro21hqyoxzky74x.png" alt="Beautify extension VS Code"&gt;&lt;/a&gt;&lt;br&gt;
When it comes to must-have extensions Beautify top's the list. This extension beautify your javascript files, JSON, CSS, Sass, and HTML. The unformatted code in these files is converted into formatted, readable code by this extension.&lt;br&gt;
This extension enables running js-beautify in VS Code, AND honouring any .jsbeautifyrc file in the open file's path tree to load your code styling. Run with F1 Beautify (to beautify a selection) or F1 Beautify file.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-snippets-pack"&gt;
  &lt;/a&gt;
  2. Snippets Pack
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JPVdbeym--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qtsgkdef0mncetne9jye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JPVdbeym--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qtsgkdef0mncetne9jye.png" alt="Snippet extension VS Code"&gt;&lt;/a&gt;&lt;br&gt;
Snippets help you write repetitive code easily and quickly. However, this might not be enough. You can simply install an extension that includes a bunch of useful snippets according to your programming language.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-bracket-pair-colorizer"&gt;
  &lt;/a&gt;
  3. Bracket pair colorizer
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bLpZAjaU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ei67du62d3jhp89s5ix8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bLpZAjaU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ei67du62d3jhp89s5ix8.jpg" alt="Bracket pair colorizer"&gt;&lt;/a&gt;&lt;br&gt;
This extension allows matching brackets to be identified with colours. The user can define which characters to match, and which colours to use. It adds color to each set of opening and closing brackets, making it easier to identify each set of brackets. It's up to you to decide whether you'd like to add this feature to VS Code or not. However, it's a popular tool and many developers find it useful.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-live-sass-compiler"&gt;
  &lt;/a&gt;
  4. Live Sass Compiler
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o5JX3-Fs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ei2duwaqpofel08hngml.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o5JX3-Fs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ei2duwaqpofel08hngml.jpg" alt="Live Sass Compiler VS Code extension"&gt;&lt;/a&gt;&lt;br&gt;
Live Sass Compiler Extension helps you to compile/transpile your SASS/SCSS files to CSS files at realtime with live browser reload.&lt;br&gt;
This extension is helpful for web developers while developing web pages with Sass.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-live-server"&gt;
  &lt;/a&gt;
  5. Live server
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CnyDAAi9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c6z5ig8e4zegedkn8jt4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CnyDAAi9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c6z5ig8e4zegedkn8jt4.png" alt="Live server VS code extension"&gt;&lt;/a&gt;&lt;br&gt;
The live-server extension automates the reload for you. After installing it, an automated localhost will be able to run in your browser, which you can start with a single button.&lt;br&gt;
This is one of the most helpful extension for web developers.&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>productivity</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Vue Academy #4: v-for directive</title>
      <author>CodeOzz</author>
      <pubDate>Fri, 06 Aug 2021 14:27:43 +0000</pubDate>
      <link>https://dev.to/codeozz/vue-academy-4-v-for-directive-4l7k</link>
      <guid>https://dev.to/codeozz/vue-academy-4-v-for-directive-4l7k</guid>
      <description>&lt;p&gt;Welcome to the new vue academy ! It will be a list of lot of article on vue! I have 2.5 years of experience in this and I can teach a few thing about this !&lt;/p&gt;

&lt;p&gt;With vue you can use some directives, today we will see &lt;code&gt;v-for&lt;/code&gt; in details !&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-"&gt;
  &lt;/a&gt;
  What is ?
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;v-for&lt;/code&gt; is a directive use to render a list of items based on an array or an object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
        &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"item in toto"&lt;/span&gt;
        &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="si"&gt;}}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;toto&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;first&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;second&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;third&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this component we will have three div as below üëá&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;first
second
third
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also get the current index of the iterated item&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
        &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"(item, index) in toto"&lt;/span&gt;
        &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        {{ item }} {{ index }}
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It works also with object ! If we replace &lt;code&gt;toto: [ 'first', 'second', 'third' ]&lt;/code&gt; by an object like &lt;code&gt;toto: { a: 1, b: 2, c: 3 }&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;We have üëá&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1
2
3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also access to the current key !&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
        &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"(item, attribute) in toto"&lt;/span&gt;
        &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        {{ item }} {{ attribute }}
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-raw-key-endraw-attribute"&gt;
  &lt;/a&gt;
  The &lt;code&gt;key&lt;/code&gt; attribute
&lt;/h3&gt;

&lt;p&gt;With the example above, you can ask what is this &lt;code&gt;:key&lt;/code&gt; value?&lt;/p&gt;

&lt;p&gt;In vue, &lt;code&gt;:key&lt;/code&gt; is used in all components, if the key is changed, the component will be reload (destroy and created hook will be triggered). It a simply way to reload properly a component !&lt;/p&gt;

&lt;p&gt;In general you don't need to handle this attribute, but in the &lt;code&gt;v-for&lt;/code&gt;, &lt;code&gt;key&lt;/code&gt; is &lt;code&gt;MANDATORY&lt;/code&gt; !&lt;/p&gt;

&lt;p&gt;And why ?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To give Vue a hint so that it can track each node‚Äôs identity, and thus reuse and reorder existing elements, you need to provide a unique key attribute for each item.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I advise you to never use &lt;code&gt;index&lt;/code&gt; as key attribute, always use a unique ID. The answer is not complicated to illustrate, imagine again an array with 1000 items, you delete the second item, so the &lt;code&gt;length&lt;/code&gt; of the iterated array will be changed, and &lt;em&gt;all&lt;/em&gt; index of &lt;em&gt;all&lt;/em&gt; items will changed, so &lt;em&gt;all&lt;/em&gt; components will be reload !&lt;/p&gt;

&lt;p&gt;If you use a unique id by item, and you delete the second item, the other component will be &lt;strong&gt;not reload&lt;/strong&gt; since &lt;strong&gt;all of the key is not changed&lt;/strong&gt; !&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vfor-with-vif"&gt;
  &lt;/a&gt;
  v-for with v-if
&lt;/h3&gt;

&lt;p&gt;You should &lt;strong&gt;NEVER&lt;/strong&gt; use &lt;code&gt;v-for&lt;/code&gt; with &lt;code&gt;v-if&lt;/code&gt;, since when they exist on the same node, &lt;code&gt;v-for&lt;/code&gt; has a higher priority than &lt;code&gt;v-if&lt;/code&gt;. That means the &lt;code&gt;v-if&lt;/code&gt; will be run on each iteration of the loop separately !&lt;/p&gt;

&lt;p&gt;Let's go through an example !&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
        &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"item in numberList"&lt;/span&gt;
        &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"isEven(item)"&lt;/span&gt;
        &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="si"&gt;}}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;numberList&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;isEven&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For each iteration we will execute the &lt;code&gt;isEven&lt;/code&gt; function !&lt;/p&gt;

&lt;p&gt;How to avoid this?&lt;/p&gt;

&lt;p&gt;Two solutions based on the context:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;First&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We need to filter some value in your array ! &lt;/p&gt;

&lt;p&gt;Use &lt;code&gt;computed&lt;/code&gt; property  and iterate it !&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
        &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"evenItem in evenList"&lt;/span&gt;
        &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"evenItem"&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;evenItem&lt;/span&gt; &lt;span class="si"&gt;}}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;numberList&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;computed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;evenList&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;isEven&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we filter the array before iterate it ! We don't need to use &lt;code&gt;v-if&lt;/code&gt; !&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Second&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I need to display the items only if the array size is equal to 5 for exemple.&lt;/p&gt;

&lt;p&gt;You can just add an other balise that will wrap the &lt;code&gt;v-for&lt;/code&gt;, it will contain the &lt;code&gt;v-if&lt;/code&gt; !&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"numberList.length === 5"&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
           &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"item in numberList"&lt;/span&gt;
           &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="si"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="si"&gt;}}&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;v-for&lt;/code&gt; is used to show array or object keys, you need to always use a unique id as &lt;code&gt;key&lt;/code&gt; attribute.&lt;/p&gt;

&lt;p&gt;Never use &lt;code&gt;v-for&lt;/code&gt; with &lt;code&gt;v-if&lt;/code&gt;, depending on the current context you have other possibilities !&lt;/p&gt;

&lt;p&gt;If you want to have nice article to read about web dev, you can subscribe to my &lt;strong&gt;FREE newsletter&lt;/strong&gt; at this url -&amp;gt; &lt;a href="https://codeoz.substack.com/welcome"&gt;https://codeoz.substack.com/welcome&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And you can follow me on :&lt;/p&gt;

&lt;p&gt;Twitter : &lt;a href="https://twitter.com/code__oz"&gt;https://twitter.com/code__oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Github: &lt;a href="https://github.com/Code-Oz"&gt;https://github.com/Code-Oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And if you want to buy me a coffee :D -&amp;gt; &lt;a href="https://www.buymeacoffee.com/CodeoZ"&gt;https://www.buymeacoffee.com/CodeoZ&lt;/a&gt;&lt;/p&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>typescript</category>
    </item>
  </channel>
</rss>
