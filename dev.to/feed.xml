<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Year 2 of the Art of Destroying a USB</title>
      <author>Jonyk56</author>
      <pubDate>Thu, 30 Dec 2021 23:53:33 +0000</pubDate>
      <link>https://dev.to/jonyk56/year-2-of-the-art-of-destroying-a-usb-e1m</link>
      <guid>https://dev.to/jonyk56/year-2-of-the-art-of-destroying-a-usb-e1m</guid>
      <description>&lt;p&gt;Whaddup folks! It's that time of year again where I do the very very very terrible decision of going to a shooting range and explosives field to destroy USBS and man this year was fun, I got to mess with A C I D and a few toxic folks from tiktok (No you won't get my tiktok, ever) to give suggestions on how to destroy, mangle, melt and vaporize my USBS this year... those were some terrible choices, glad I brought earplugs haha.&lt;/p&gt;

&lt;p&gt;So first off, I decided I'd use music to my advantage and I got a very special type of chemical in my posession that quite literally acts like an acid when you sing or play a Bb next to it.&lt;/p&gt;

&lt;p&gt;For the rest of my USBS, I decided I'd go ahead and use a sniper rifle on half, and explode the rest using low grade C4 (learned my lesson from last year using high grade!) and man was that fun!&lt;/p&gt;

&lt;p&gt;I can't say too much about the rest but I will probably post an image or two to twitter later!&lt;/p&gt;

&lt;p&gt;Jonyk5 OUT!&lt;/p&gt;

&lt;p&gt;(&lt;a href="https://twitter.com/Jonyk5_dev"&gt;Ma Twitta&lt;/a&gt;)&lt;/p&gt;

</description>
    </item>
    <item>
      <title>December Developer Digest: A year in review</title>
      <author>Dawn Lambeth</author>
      <pubDate>Thu, 30 Dec 2021 23:18:48 +0000</pubDate>
      <link>https://dev.to/stripe/december-developer-digest-a-year-in-review-pbi</link>
      <guid>https://dev.to/stripe/december-developer-digest-a-year-in-review-pbi</guid>
      <description>&lt;p&gt;📩 We're sharing our most recent developer digest here on DEV! If you're interested in subscribing to monthly developer updates, sign up &lt;a href="https://go.stripe.global/dev-digest"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C-0wFJ7S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XRaNCJc4--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/kwi5h27a7elyignm8iie.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C-0wFJ7S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XRaNCJc4--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/kwi5h27a7elyignm8iie.png" alt="Horizontal rule" width="818" height="3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2021-wrapup"&gt;
  &lt;/a&gt;
  2021 wrap-up
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--atvy6lwQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/w0XmZSAABqyRVo4ynamYp-oPyWE8Mxk5gpLAqzvj6w0DN784jpEmg8ZQ09KaLPmTCYIpwiuPV75SLlEr_vwdPGU0kBPDzbJ2n37M-XRE1p8XZeh1zxXASe1jDvoVJeA41xzODw5S" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--atvy6lwQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/w0XmZSAABqyRVo4ynamYp-oPyWE8Mxk5gpLAqzvj6w0DN784jpEmg8ZQ09KaLPmTCYIpwiuPV75SLlEr_vwdPGU0kBPDzbJ2n37M-XRE1p8XZeh1zxXASe1jDvoVJeA41xzODw5S" alt="2021 wrap-up: a year in review" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this special edition of the Developer Digest, we’re highlighting some of the most important product releases, video series, and community contributions of 2021. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stay-updated"&gt;
  &lt;/a&gt;
  Stay updated
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Payment Element:&lt;/strong&gt; The new &lt;a href="https://stripe.com/docs/payments/payment-element?utm_medium=earned-email&amp;amp;utm_source=338e&amp;amp;utm_campaign=GLOBAL_4487&amp;amp;utm_content=b109&amp;amp;utm_term=705b934c1264"&gt;Payment Element&lt;/a&gt; lets you build a custom payment flow that supports &lt;a href="https://stripe.com/docs/payments/payment-methods/integration-options?utm_medium=earned-email&amp;amp;utm_source=338e&amp;amp;utm_campaign=GLOBAL_4487&amp;amp;utm_content=b109&amp;amp;utm_term=705b934c1264"&gt;18+ payment methods&lt;/a&gt; with a single integration. Once integrated, you can add additional payment methods with no front-end changes. Explore our &lt;a href="https://stripe.com/docs/payments/quickstart?utm_medium=earned-email&amp;amp;utm_source=338e&amp;amp;utm_campaign=GLOBAL_4487&amp;amp;utm_content=b109&amp;amp;utm_term=705b934c1264"&gt;code samples&lt;/a&gt; or learn how to &lt;a href="https://stripe.com/docs/payments/payment-element/migration?utm_medium=earned-email&amp;amp;utm_source=338e&amp;amp;utm_campaign=GLOBAL_4487&amp;amp;utm_content=b109&amp;amp;utm_term=705b934c1264"&gt;migrate from an existing integration&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Payment Links:&lt;/strong&gt; Use &lt;a href="https://stripe.com/docs/payments/payment-links?utm_medium=earned-email&amp;amp;utm_source=338e&amp;amp;utm_campaign=GLOBAL_4487&amp;amp;utm_content=b109&amp;amp;utm_term=705b934c1264"&gt;Payment Links&lt;/a&gt; to sell a product or subscription in minutes. Create a full payment page in just a few clicks and embed the link or share it with your customers—no code required. &lt;a href="https://www.youtube.com/watch?v=RXuPWuI7JXE"&gt;Learn how to set up a payment link&lt;/a&gt; in our video or &lt;a href="https://dashboard.stripe.com/payment-links/create?utm_medium=earned-email&amp;amp;utm_source=338e&amp;amp;utm_campaign=GLOBAL_4487&amp;amp;utm_content=b109&amp;amp;utm_term=705b934c1264"&gt;get started now&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stripe Tax:&lt;/strong&gt; &lt;a href="https://stripe.com/docs/tax?utm_medium=earned-email&amp;amp;utm_source=338e&amp;amp;utm_campaign=GLOBAL_4487&amp;amp;utm_content=b109&amp;amp;utm_term=705b934c1264"&gt;Stripe Tax&lt;/a&gt; simplifies tax calculation and collection. If you’re looking to incorporate Stripe Tax into your integration or learn more about the three steps you need to get started, &lt;a href="https://youtu.be/3psLlebNl5w/"&gt;watch our guide on YouTube&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stripe for VS Code:&lt;/strong&gt; With our &lt;a href="https://stripe.com/docs/stripe-vscode?utm_medium=earned-email&amp;amp;utm_source=338e&amp;amp;utm_campaign=GLOBAL_4487&amp;amp;utm_content=b109&amp;amp;utm_term=705b934c1264"&gt;VS Code extension&lt;/a&gt;, you can stream logs and webhook events from the Stripe API to your local development machine, quickly access the API reference by hovering over resource methods, easily get started with one of &lt;a href="https://github.com/stripe-samples"&gt;Stripe’s sample apps&lt;/a&gt;, and much more. &lt;a href="https://www.youtube.com/watch?v=fATvgUMWLzU"&gt;Learn more&lt;/a&gt; in our video or &lt;a href="https://stripe.com/docs/stripe-vscode?utm_medium=earned-email&amp;amp;utm_source=338e&amp;amp;utm_campaign=GLOBAL_4487&amp;amp;utm_content=b109&amp;amp;utm_term=705b934c1264#installation"&gt;get started now&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stripe React Native SDK:&lt;/strong&gt; The official &lt;a href="https://github.com/stripe/stripe-react-native"&gt;Stripe React Native SDK&lt;/a&gt; is now in public beta to help you build delightful payment experiences using React Native. Watch our video guides on &lt;a href="https://www.youtube.com/watch?v=qiEwO_UrOro"&gt;adding the SDK to a React Native app&lt;/a&gt; and &lt;a href="https://www.youtube.com/watch?v=SH2bi-1MUNM"&gt;accepting a payment&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learn"&gt;
  &lt;/a&gt;
  Learn
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Developer Foundations series:&lt;/strong&gt;  In this video series, you'll learn the fundamentals of topics like authentication, making requests, adding metadata, and more. Check out the playlist for &lt;a href="https://www.youtube.com/watch?v=8Db0nTVlKM0&amp;amp;list=PLy1nL-pvL2M50RmP6ie-gdcSnfOuQCRYk"&gt;&lt;/a&gt;&lt;a href="https://www.youtube.com/watch?v=8Db0nTVlKM0&amp;amp;list=PLy1nL-pvL2M50RmP6ie-gdcSnfOuQCRYk"&gt;Ruby&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=gRvlMeBks6k&amp;amp;list=PLy1nL-pvL2M55YVn0mGoQ5r-39A1-ZypO"&gt;Python&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=CeufP46S5BI&amp;amp;list=PLy1nL-pvL2M6cUbiHrfMkXxZ9j9SGBxFE"&gt;PHP&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=R5RoYDEIhCI&amp;amp;list=PLy1nL-pvL2M5xNIuNapwmABwEy2uifAlY"&gt;Node&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=oJRPV07bVS0&amp;amp;list=PLy1nL-pvL2M5eqpSBR9KL7K0lcnWo0V0a"&gt;Go&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=t4iJ07E_tA8&amp;amp;list=PLy1nL-pvL2M5TnSGVjEHTTMgdnnHi-KPg"&gt;Java&lt;/a&gt;, or &lt;a href="https://www.youtube.com/watch?v=N20T0rXAWsc&amp;amp;list=PLy1nL-pvL2M4cNNoUtjWevYSci4ubsbhC"&gt;.NET&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Global payment video series&lt;/strong&gt;: Watch our &lt;a href="https://www.youtube.com/playlist?list=PLy1nL-pvL2M5naBTFxHkj3TNGFhHkVRSu"&gt;series of videos&lt;/a&gt; that walks through how to get started accepting payments on Stripe using local payment methods.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stripe Postman video series:&lt;/strong&gt; Learn how to use the new &lt;a href="https://www.postman.com/stripedev/workspace/stripe-developers/overview"&gt;Stripe Postman collection&lt;/a&gt; to try API requests without writing any code. You can now learn how to &lt;a href="https://youtu.be/Mxsmcsvhq9s"&gt;install the collection&lt;/a&gt;, set up &lt;a href="https://youtu.be/ZFJ_z8v35e8"&gt;authentication&lt;/a&gt;, make &lt;a href="https://youtu.be/5SzRdPuZVR0"&gt;basic&lt;/a&gt; and &lt;a href="https://youtu.be/EsOLI6h9XBY"&gt;advanced&lt;/a&gt; requests, &lt;a href="https://youtu.be/9sIkxX2CiE8"&gt;paginate lists&lt;/a&gt;, send &lt;a href="https://youtu.be/DPDsCo3sh98"&gt;versions&lt;/a&gt; and &lt;a href="https://youtu.be/PyOWJliOpjE"&gt;metadata&lt;/a&gt;, &lt;a href="https://youtu.be/1Uyeouge66U"&gt;expand responses&lt;/a&gt;, and work with &lt;a href="https://youtu.be/wTHgZji6zHk"&gt;idempotency keys&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#community"&gt;
  &lt;/a&gt;
  Community
&lt;/h2&gt;

&lt;p&gt;Thank you to our top open-source contributor of 2021: &lt;a href="https://github.com/hibariya"&gt;hibariya&lt;/a&gt;.   &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=385cpCpGRC0"&gt;Build a full stack ecommerce store&lt;/a&gt; with Next.js, Strapi, Magic, and Stripe [video from &lt;a href="https://www.youtube.com/channel/UCMguCMq25nEqlHlr17iINNw"&gt;Alex the Entreprenerd&lt;/a&gt;]
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/385cpCpGRC0"&gt;
&lt;/iframe&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://blog.billflow.io/ultimate-stripe-tax-guide-for-saas/"&gt;Ultimate Stripe Tax Guide for SaaS&lt;/a&gt; [blog post from Ben Sears of &lt;a href="https://www.billflow.io/"&gt;Billflow&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=XnjA8PlwFIc"&gt;Stripe integration for eCommerce app in React Native &amp;amp; AWS Amplify&lt;/a&gt; [video from &lt;a href="https://www.youtube.com/channel/UCYSa_YLoJokZAwHhlwJntIA"&gt;Vadim Savin&lt;/a&gt; of &lt;a href="https://www.notjust.dev/"&gt;notJustDevelopment&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Learn how to &lt;a href="https://www.youtube.com/watch?v=P0Udy2Gi7n8"&gt;set up subscription payments with Stripe, Next.js, and Firebase&lt;/a&gt; [video from &lt;a href="https://www.youtube.com/channel/UCJae_agpt9S3qwWNED0KHcQ"&gt;Jarrod Watts&lt;/a&gt;]
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/P0Udy2Gi7n8"&gt;
&lt;/iframe&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#stay-connected"&gt;
  &lt;/a&gt;
  Stay connected
&lt;/h2&gt;

&lt;p&gt;💬 &lt;a href="https://twitter.com/stripedev"&gt;Follow us at @StripeDev on Twitter&lt;/a&gt; for updates and answers to your developer questions. Let us know what you’re working on with the Stripe API!&lt;br&gt;
👾 &lt;a href="https://stripe.com/go/developer-chat"&gt;Join the Stripe Discord server&lt;/a&gt; to chat live with other developers.&lt;br&gt;
📺 &lt;a href="https://www.youtube.com/stripedevelopers"&gt;Subscribe to Stripe Developers on YouTube&lt;/a&gt; for office hours, live streams, and online technical workshops.&lt;br&gt;
📚 &lt;a href="https://dev.to/stripe"&gt;Add us on DEV&lt;/a&gt; for how-to articles and past editions of this developer digest.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C-0wFJ7S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XRaNCJc4--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/kwi5h27a7elyignm8iie.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C-0wFJ7S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XRaNCJc4--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/kwi5h27a7elyignm8iie.png" alt="Horizontal rule" width="818" height="3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What would you like to see more (or less) of? Let us know by replying to this email. If you have questions, comments, or need help with code, we’re here to help &lt;a href="https://support.stripe.com/contact/login"&gt;via email&lt;/a&gt;, or on &lt;a href="https://stripe.com/go/developer-chat"&gt;Discord&lt;/a&gt;, &lt;a href="https://twitter.com/StripeDev"&gt;Twitter&lt;/a&gt;, and &lt;a href="https://stackoverflow.com/tags/stripe-payments/info"&gt;Stack Overflow&lt;/a&gt;. View our &lt;a href="https://github.com/stripe-samples"&gt;code samples&lt;/a&gt; on GitHub.&lt;/p&gt;

&lt;p&gt;—The Stripe team&lt;/p&gt;

</description>
    </item>
    <item>
      <title>2021 reflections and what's next in 2022</title>
      <author>Anuradha</author>
      <pubDate>Thu, 30 Dec 2021 23:12:24 +0000</pubDate>
      <link>https://dev.to/anuradhakumari/2021-reflections-and-whats-next-in-2022-4jha</link>
      <guid>https://dev.to/anuradhakumari/2021-reflections-and-whats-next-in-2022-4jha</guid>
      <description>&lt;p&gt;&lt;em&gt;&lt;a href="https://www.anuradhakumari.com/blog/2021-year-in-review"&gt;Originally published at anuradhakumari.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Hi everyone, today is the last day of year 2021 and I wanted to do a year end review and also share my plans for the next year with you all.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2021-plans-and-goals"&gt;
  &lt;/a&gt;
  2021 plans and goals
&lt;/h2&gt;

&lt;p&gt;Amidst all the chaos of pandemic that 2020 brought upon us, I did not plan extensively for 2021 but instead I focused on a theme.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I wanted the year of 2021 to be my year of YES.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I decided to not hesitate when new opportunities come up and go for exploring new things in life.&lt;/p&gt;

&lt;p&gt;There were three high-level things which I wrote to focus on 1st January 2021 in my journal, they were: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Health&lt;/li&gt;
&lt;li&gt;Career&lt;/li&gt;
&lt;li&gt;Growth &lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#health"&gt;
  &lt;/a&gt;
  Health
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#in-2021"&gt;
  &lt;/a&gt;
  In 2021
&lt;/h3&gt;

&lt;p&gt;I had multiple health issues and I wanted to focus on improving it. &lt;/p&gt;

&lt;p&gt;What did I do about it? &lt;/p&gt;

&lt;p&gt;I did meditation, walking and kept my diet in check for most of the days. And also took consultation from a Doctor whose medication turned out to be effective for me. &lt;/p&gt;

&lt;p&gt;As of today my health conditions have improved by around 70% and it is a huge win for me. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#for-2022"&gt;
  &lt;/a&gt;
  For 2022
&lt;/h3&gt;

&lt;p&gt;My first and most important goal again is to focus on my health. &lt;/p&gt;

&lt;p&gt;Everything else is secondary.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#career"&gt;
  &lt;/a&gt;
  Career
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#in-2021"&gt;
  &lt;/a&gt;
  In 2021
&lt;/h3&gt;

&lt;p&gt;I wanted to take my career to next level and get a relocation job. &lt;/p&gt;

&lt;p&gt;I started my job search in Jan 2021, accepted the job offer for my current company in April and then moved to Netherlands in end of September.&lt;/p&gt;

&lt;p&gt;This was not an easy decision for me. &lt;/p&gt;

&lt;p&gt;I was pretty anxious and scared, this was a huge step for my life and I was pushing myself way out of my comfort zone. &lt;/p&gt;

&lt;p&gt;But today I can say proudly that I'm glad that I took this decision and did not step back due to the fear of unknown. &lt;/p&gt;

&lt;p&gt;I just tried to &lt;em&gt;live by my theme of saying yes&lt;/em&gt; to every opportunity that I felt could be a good step for me instead of doubting myself. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#for-2022"&gt;
  &lt;/a&gt;
  For 2022
&lt;/h3&gt;

&lt;p&gt;I plan to take my career to even more heights by exploring new technologies and working towards being a better developer and developer advocate.&lt;/p&gt;

&lt;p&gt;I specifically want to explore more and more about accessibility and continue sharing my learnings and spread more awareness about it in the tech community.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#growth"&gt;
  &lt;/a&gt;
  Growth
&lt;/h2&gt;

&lt;p&gt;The third focus for me was on growth - in whatever I was already doing. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#in-2021"&gt;
  &lt;/a&gt;
  In 2021
&lt;/h3&gt;

&lt;p&gt;I wanted to do more conferences and grow my technical expertise. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#speaking-in-events"&gt;
  &lt;/a&gt;
  Speaking in events
&lt;/h4&gt;

&lt;p&gt;I aimed to participate in at least one event per month and I ended up speaking at 20 events in 2021. &lt;/p&gt;

&lt;p&gt;Among these were two workshops for college students where I taught web development and React JS. &lt;/p&gt;

&lt;p&gt;I also spoke at JS World conference which was attended by around 50,000 people and it is the biggest conference I have ever been part of till now. &lt;/p&gt;

&lt;p&gt;I also got the chance to &lt;a href="https://www.anuradhakumari.com/talks"&gt;speak at some amazing events&lt;/a&gt; like Google I/O extended UK and Ireland event, at DevFest India, Next JS conference and React India conference. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#mcing-at-conferences"&gt;
  &lt;/a&gt;
  MCing at conferences
&lt;/h4&gt;

&lt;p&gt;I also wanted to try hosting an event and I got an opportunity to &lt;a href="https://twitter.com/miracle_404/status/1468908365250273283"&gt;MC at the GraphQL Galaxy conference&lt;/a&gt; in December 2021. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#for-2022"&gt;
  &lt;/a&gt;
  For 2022
&lt;/h3&gt;

&lt;p&gt;I absolutely loved being Master of Ceremonies and for 2022, I would like to MC for more events. &lt;/p&gt;

&lt;p&gt;For speaking apsirations, in 2022, my goal is to deliver talks in few in-person conferences (of course only if the travelling is safe). &lt;/p&gt;

&lt;p&gt;I would like to meet more people in tech in person and I also want to try giving a keynote talk at a conference.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wins-in-2021"&gt;
  &lt;/a&gt;
  Wins in 2021
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#gde-and-mde"&gt;
  &lt;/a&gt;
  GDE and MDE
&lt;/h3&gt;

&lt;p&gt;Among my most favourite wins of 2021 is that I became a Google Developers Expert for Web technologies and also a Cloudinary Media Developer Expert. &lt;/p&gt;

&lt;p&gt;These titles definitely boost my confidence and motivate me to contribute more and more towards helping the developer community. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#started-youtube-channel"&gt;
  &lt;/a&gt;
  Started YouTube Channel
&lt;/h3&gt;

&lt;p&gt;And last but not the least, I wanted to start my YouTube channel but I procrastinated for almost 11 months out of 12 months in 2021 before actually starting &lt;a href="https://www.youtube.com/channel/UCzv8q9-tSIQuTDzgB1BgXMQ"&gt;my YouTube channel&lt;/a&gt; on 29 November 2021. &lt;/p&gt;

&lt;p&gt;I have posted three videos on my channel till now and in 2022 my plan is to create a lot more content on YouTube channel.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reading-books"&gt;
  &lt;/a&gt;
  Reading books
&lt;/h3&gt;

&lt;p&gt;I also did a lot of reading in 2021. I started with a goal of reading 15 books and I ended up reading &lt;a href="https://www.goodreads.com/review/list/105616872-anuradha-kumari?ref=nav_mybooks&amp;amp;shelf=read"&gt;21 books in 2021&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Now for 2022 I want to make a reading a daily habit, even if it's just for 30 minutes daily but I would like to start my day with reading a book. &lt;/p&gt;

&lt;p&gt;And my goal for 2022 is reading at least 25 books. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#journaling"&gt;
  &lt;/a&gt;
  Journaling
&lt;/h3&gt;

&lt;p&gt;In 2021, one of the best things I did was to &lt;a href="https://twitter.com/miracle_404/status/1457316830477959178?s=20"&gt;journal daily&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;So I have my whole 2021 written out at a high level in my journal and due to this I was able to reflect throughout my days in the year.&lt;/p&gt;

&lt;p&gt;I like to go back to it and re-read on the days I am feeling low and I try to remind myself that it's okay I'm doing good and that i do not need to push myself a lot. &lt;/p&gt;

&lt;p&gt;I have prompts written in my journal to take rest, breathe and just pause for some time. &lt;/p&gt;

&lt;p&gt;This was very effective for me, and I would continue this journaling habit in 2022 as well. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#people-and-connections"&gt;
  &lt;/a&gt;
  People and connections
&lt;/h3&gt;

&lt;p&gt;I met some wonderful people from different parts of the world, and made new friends ❤️.&lt;/p&gt;




&lt;p&gt;So these were my reflections for year 2021 - on what were my goals and wins and also what I plan to do in 2022 on a very high level. &lt;/p&gt;

&lt;p&gt;Now I would also like to take some moments to share what did not went well and what learnings I have to take from 2021 into the New Year 2022. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-did-not-went-well-in-2021"&gt;
  &lt;/a&gt;
  What did not went well in 2021
&lt;/h2&gt;

&lt;p&gt;A few things which did not work for me were:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;despite not having a good health, I was still not able to meditate and exercise consistently and hence I had some really tough days both physically and mentally.&lt;/li&gt;
&lt;li&gt;I wanted to write more technical blogs but I was not able to contribute much via the writing medium.&lt;/li&gt;
&lt;li&gt;I had so many plans for my YouTube channel, but they are yet to be executed.&lt;/li&gt;
&lt;li&gt;I struggled with the sudden drop in the temperature when I moved from India to Netherlands. It was pretty harsh encounter and I had a tough time adapting to the new climate. Also, some of the experiences would have gone smoother if I had planned better. But it's all good now.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#inconsistency"&gt;
  &lt;/a&gt;
  Inconsistency
&lt;/h3&gt;

&lt;p&gt;I see inconsistency in my habits and due to this I have seen some of my plans drop and also I have procrastinated and started something is very late.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-my-learnings-takeaways-from-these"&gt;
  &lt;/a&gt;
  What are my learnings/ takeaways from these?
&lt;/h2&gt;

&lt;p&gt;I'm trying currently to meditate daily and go out for walks and runs at least three times a week because I want to be in good health.&lt;/p&gt;

&lt;p&gt;I'm also trying to plan out my days and weeks so that I stay consistent and do not procrastinate on what I want to do.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#theme-for-2022"&gt;
  &lt;/a&gt;
  Theme for 2022
&lt;/h2&gt;

&lt;p&gt;I would also like to share with you my theme for the year 2022. &lt;/p&gt;

&lt;p&gt;And it will be the &lt;strong&gt;year of saying NO.&lt;/strong&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-do-i-want-to-say-no-to"&gt;
  &lt;/a&gt;
  What do I want to say no to?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;I want to say no to devaluing myself. I often play myself down, and my achievements, and it diminishes my confidence. I just don't want to do that anymore.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I also want to say no to the self-deprecating thoughts which always holds me back from doing something new.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I also want to say no to apologising for dreaming big and going all in on whatever I want to achieve.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I often feel that I am not doing good enough and in 2022, I want to say no to this feeling of not feeling competent enough.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;And I want to say no to anything and everything that can have a negative impact on my physical and mental well being.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#towards-a-better-year"&gt;
  &lt;/a&gt;
  Towards a better year
&lt;/h2&gt;

&lt;p&gt;So, these were some of my reflections of the year that 2021 was and what goals I have in mind for the year 2022. &lt;/p&gt;

&lt;p&gt;Do let me know in comments what are some of the goals and plans that you have made for year 2022. &lt;/p&gt;

&lt;p&gt;I pray for the pandemic to end this year. &lt;strong&gt;Let’s welcome the new year with hope of good health, blessings and happiness for everyone.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Happy New Year! Take care, stay safe and healthy!&lt;/p&gt;

</description>
      <category>yearinreview</category>
      <category>reflections</category>
      <category>life</category>
    </item>
    <item>
      <title>Getting started with gatsby cloud</title>
      <author>Kumar Kalyan </author>
      <pubDate>Thu, 30 Dec 2021 23:04:50 +0000</pubDate>
      <link>https://dev.to/kumarkalyan/getting-started-with-gatsby-cloud-119b</link>
      <guid>https://dev.to/kumarkalyan/getting-started-with-gatsby-cloud-119b</guid>
      <description>&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;Gatby js is on of the most fastest static site generator open source  web framework made by combining React Graphql and web pack  and today we gonna learn how to create a gatsby site  and deploying  it to gatsby cloud &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Although this  article is beginner friendly but it’s better for the readers to have basic knowledge of Javascript &amp;amp; JSON(JavaScript object notation), Html , css, React styling components  to understand the topics that will be explained &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Latest version of Nodejs and npm&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Basic knowledge if git and Github&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;gatsby cli &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;gatsby cloud account&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Code editor(I am using vs code )&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#the-most-important"&gt;
  &lt;/a&gt;
  the most important
&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The patience to read the full article &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  setup
&lt;/h2&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install node js &lt;a href="https://nodejs.dev/download"&gt;link&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install git and git bash from &lt;a href="https://git-scm.com/downloads"&gt;link&lt;/a&gt;&lt;br&gt;
= Now open the terminal and use &lt;br&gt;
&lt;code&gt;npm install -g gatsby-cli&lt;/code&gt;&lt;br&gt;
This will install gatsby cli globally on your local machine  &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now open the terminal follow the steps &lt;br&gt;
Type &lt;code&gt;gatsby new&lt;/code&gt;&lt;br&gt;
Enter an site name "Gatsby Tutorial" (By default it will show &lt;code&gt;My Gatsby Site&lt;/code&gt;)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kmB51anJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1px4lan11djzzkmqxf6g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kmB51anJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1px4lan11djzzkmqxf6g.png" alt="create" width="880" height="462"&gt;&lt;/a&gt;&lt;br&gt;
We will now use any modification in this tutorial&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z5SUrS80--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1f6jgdp0kv8b70omhtri.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z5SUrS80--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1f6jgdp0kv8b70omhtri.png" alt="clone" width="880" height="442"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Schrsubs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a4xy21p0kupy7dnzdnjv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Schrsubs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a4xy21p0kupy7dnzdnjv.png" alt="done" width="880" height="461"&gt;&lt;/a&gt;&lt;br&gt;
Our gatsby project is successfully created now use &lt;br&gt;
&lt;code&gt;cd &amp;lt;project name &amp;gt;&lt;/code&gt; then hit &lt;code&gt;gatsby develop&lt;/code&gt; to see our changes locally at &lt;code&gt;localhost:8000&lt;/code&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rfJl6r7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z91rs1hson11u05cjyql.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rfJl6r7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z91rs1hson11u05cjyql.png" alt="develop" width="880" height="534"&gt;&lt;/a&gt;&lt;br&gt;
now let's navigate to our project folder in our code editor &lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iCyMrf11--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s22j3msqdlf2km9wit20.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iCyMrf11--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s22j3msqdlf2km9wit20.png" alt="navigate" width="237" height="325"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;this is how our gatsby file structure looks like &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c_CrPsmE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70c1y4jtl66xubervqp4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c_CrPsmE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70c1y4jtl66xubervqp4.png" alt="localhost" width="880" height="479"&gt;&lt;/a&gt;&lt;br&gt;
this is how our project looks locally &lt;/p&gt;

&lt;p&gt;Now we are done with our setup , so let's make cahnges to our project . In the begining lets's delete all the markup and let's start from scratch&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4ZCD-moq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ymtnffkcv7pn3spyh4xp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ZCD-moq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ymtnffkcv7pn3spyh4xp.png" alt="reder" width="549" height="363"&gt;&lt;/a&gt;&lt;br&gt;
Here the &lt;code&gt;Indexpage&lt;/code&gt; will render all the hml markup written within the  tag (you can also use &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; here instead of &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;)&lt;br&gt;
Now let's add some html and see what happens to our page&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import * as React from 'react';
const IndexPage = () =&amp;gt; {
  return (
    &amp;lt;main&amp;gt;
      &amp;lt;title&amp;gt;My Gatsby tutorial&amp;lt;/title&amp;gt;
      &amp;lt;h1&amp;gt;Hi, there I am gatsby app&amp;lt;/h1&amp;gt;
      &amp;lt;h4&amp;gt;
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Et ducimus
        labore magni facere est autem eum provident expedita laudantium. Magni
        vitae quia impedit delectus quo iste aliquam rerum, ipsa natus. Lorem
        ipsum dolor sit amet, consectetur adipisicing elit. Consequatur ex
        accusantium deleniti et sint perspiciatis similique deserunt, molestias
        nam, quas cumque id! Esse necessitatibus animi eos quibusdam sunt ad
        dignissimos! Lorem ipsum, dolor sit amet consectetur adipisicing elit.
        Soluta itaque delectus in, inventore, voluptatem at ab beatae pariatur
        magni eum omnis! Voluptatum quo dicta nostrum. Sit numquam
        exercitationem asperiores quibusdam.
        &amp;lt;br /&amp;gt;
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Doloremque,
        necessitatibus? Sunt dolorem corporis provident vero molestiae. Natus
        inventore velit assumenda quis accusantium beatae, quaerat molestias
        sapiente quos? Atque, quia saepe.
        &amp;lt;hr /&amp;gt;
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima
        assumenda veniam distinctio delectus molestiae, itaque nemo cupiditate
        sint sequi ad, dolorum asperiores magnam accusamus. Molestiae dicta
        alias recusandae nostrum numquam.
      &amp;lt;/h4&amp;gt;
    &amp;lt;/main&amp;gt;
  );
};

export default IndexPage;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E0k-N-kR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l39uh49wge2hs627cbsr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E0k-N-kR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l39uh49wge2hs627cbsr.png" alt="demo1" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now lets add some styles&lt;br&gt;
for styling purpose we will define style objects lets see&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import * as React from 'react';
let sytles = {
  mainStyle: {
    color: 'blue',
    padding:'30px',
    font:"Arial, Helvetica, sans-serif"
   },
};
const IndexPage = () =&amp;gt; {
  return (
    &amp;lt;main style={sytles.mainStyle}&amp;gt;
      &amp;lt;title&amp;gt;My Gatsby tutorial&amp;lt;/title&amp;gt;
      &amp;lt;h1&amp;gt;Hi, there I am gatsby app&amp;lt;/h1&amp;gt;
      &amp;lt;h4&amp;gt;
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Et ducimus
        labore magni facere est autem eum provident expedita laudantium. Magni
        vitae quia impedit delectus quo iste aliquam rerum, ipsa natus. Lorem
        ipsum dolor sit amet, consectetur adipisicing elit. Consequatur ex
        accusantium deleniti et sint perspiciatis similique deserunt, molestias
        nam, quas cumque id! Esse necessitatibus animi eos quibusdam sunt ad
        dignissimos! Lorem ipsum, dolor sit amet consectetur adipisicing elit.
        Soluta itaque delectus in, inventore, voluptatem at ab beatae pariatur
        magni eum omnis! Voluptatum quo dicta nostrum. Sit numquam
        exercitationem asperiores quibusdam.
        &amp;lt;br /&amp;gt;
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Doloremque,
        necessitatibus? Sunt dolorem corporis provident vero molestiae. Natus
        inventore velit assumenda quis accusantium beatae, quaerat molestias
        sapiente quos? Atque, quia saepe.
        &amp;lt;hr /&amp;gt;
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima
        assumenda veniam distinctio delectus molestiae, itaque nemo cupiditate
        sint sequi ad, dolorum asperiores magnam accusamus. Molestiae dicta
        alias recusandae nostrum numquam.
      &amp;lt;/h4&amp;gt;
    &amp;lt;/main&amp;gt;
  );
};

export default IndexPage;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we have defined a variable named &lt;code&gt;styles&lt;/code&gt; and within it we have defied a property named &lt;code&gt;main style&lt;/code&gt; and we are passing it as an expression to in the style attribute.&lt;/p&gt;

&lt;p&gt;now let's add some images to our application&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import * as React from 'react';
let sytles = {
  mainStyle: {
    color: 'blue',
    padding:'30px',
    font:"Arial, Helvetica, sans-serif"
   },
   imagsStyle:{
     width:"400px",
     radius:"10px"
   }
};
const IndexPage = () =&amp;gt; {
  return (
    &amp;lt;main style={sytles.mainStyle}&amp;gt;
      &amp;lt;title&amp;gt;My Gatsby tutorial&amp;lt;/title&amp;gt;
      &amp;lt;h1&amp;gt;Hi, there I am gatsby app&amp;lt;/h1&amp;gt;
      &amp;lt;h4&amp;gt;
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Et ducimus
        labore magni facere est autem eum provident expedita laudantium. Magni
        vitae quia impedit delectus quo iste aliquam rerum, ipsa natus. Lorem
        ipsum dolor sit amet, consectetur adipisicing elit. Consequatur ex
        accusantium deleniti et sint perspiciatis similique deserunt, molestias
        nam, quas cumque id! Esse necessitatibus animi eos quibusdam sunt ad
        dignissimos! Lorem ipsum, dolor sit amet consectetur adipisicing elit.
        Soluta itaque delectus in, inventore, voluptatem at ab beatae pariatur
        magni eum omnis! Voluptatum quo dicta nostrum. Sit numquam
        exercitationem asperiores quibusdam.
        &amp;lt;br /&amp;gt;
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Doloremque,
        necessitatibus? Sunt dolorem corporis provident vero molestiae. Natus
        inventore velit assumenda quis accusantium beatae, quaerat molestias
        sapiente quos? Atque, quia saepe.
        &amp;lt;hr /&amp;gt;
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima
        assumenda veniam distinctio delectus molestiae, itaque nemo cupiditate
        sint sequi ad, dolorum asperiores magnam accusamus. Molestiae dicta
        alias recusandae nostrum numquam.
      &amp;lt;/h4&amp;gt;
      &amp;lt;img src={'https://picsum.photos/200/300'} alt="an image" style={sytles.imagsStyle} /&amp;gt;
    &amp;lt;/main&amp;gt;
  );
};

export default IndexPage;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we are ready with our gatsby app. let's deploy it to gatsby cloud &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deployment"&gt;
  &lt;/a&gt;
  Deployment
&lt;/h2&gt;

&lt;p&gt;create a git repo and push your code to gihub &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bUQiFijX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o0d5khr20rp5hurq4469.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bUQiFijX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o0d5khr20rp5hurq4469.png" alt="git push" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
now we have pushed our code to github &lt;br&gt;
open your gatsby cloud dashboard and click on &lt;code&gt;add a site&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JhmuVz8h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/reh0dmq3290h9tms8com.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JhmuVz8h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/reh0dmq3290h9tms8com.png" alt="gatsby cloud" width="880" height="379"&gt;&lt;/a&gt;&lt;br&gt;
 now choose your repo and click on import&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FyYOCeJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5fvlc16ksnmxopiozirf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FyYOCeJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5fvlc16ksnmxopiozirf.png" alt="choose" width="880" height="411"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;now click on next as we don't have any configurations&lt;br&gt;
&lt;a href="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qbswacru1z44cuku90sm.png"&gt;next&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and then click on build site&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ezRSEmUL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f8nyw7kacly16d8nm73k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ezRSEmUL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f8nyw7kacly16d8nm73k.png" alt="build" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
see how fast it is , deployed in just 0.26 seconds &lt;br&gt;
you can checkout my site here &lt;br&gt;
&lt;a href="https://gatsbytutorialmain64558.gatsbyjs.io/"&gt;my site&lt;/a&gt; &lt;br&gt;
and &lt;a href="https://github.com/kum9748ar/gatsby-tutorial-"&gt;github repo&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;so this was all about creating a basic gatsby js application and deploying to gatsby js cloud. If you love this article share it with your peers and don't hesitate to hit a ❤️ .&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect"&gt;
  &lt;/a&gt;
  Connect
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://linktr.ee/kumarkalyan"&gt;&lt;br&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wgrai2sU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.jsdelivr.net/npm/simple-icons%40v3/icons/twitter.svg" width="24" height="24"&gt;&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

</description>
      <category>gatsby</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Remote pair programming - What are YOUR best practices? 🧑‍💻👩🏽‍💻</title>
      <author>Pascal Thormeier</author>
      <pubDate>Thu, 30 Dec 2021 22:47:05 +0000</pubDate>
      <link>https://dev.to/thormeier/remote-pair-programming-what-are-your-best-practices-592e</link>
      <guid>https://dev.to/thormeier/remote-pair-programming-what-are-your-best-practices-592e</guid>
      <description>&lt;p&gt;The certain situation the world has been in for the past almost two years has affected a lot of us devs all around the globe. This hasn't stopped us from delivering amazing software and do good deeds though - Au contraire! Think of global remote hackathons, local efforts to create services that help people in need, providing schools with old laptops, the list goes on. &lt;/p&gt;

&lt;p&gt;Arguably, the tech industry has adapted rather quickly. Video calls became a widespread norm, employees of some companies, like Twitter, &lt;a href="https://blog.twitter.com/en_us/topics/company/2020/keeping-our-employees-and-partners-safe-during-coronavirus"&gt;can now work from home forever if they want&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(As a little disclaimer: I'll use the word "remote" in this post to describe non-onsite things in general, even if you're in the same town as your peers.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;With the new remote situation came a few hurdles, though. And in this post I want to discuss some of these hurdles, and more specifically, how to overcome them. A specific topic I'd like to look at today is &lt;strong&gt;pair programming&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Pair programming is a very helpful technique. It helps to onboard new team members to an existing application, give juniors an opportunity to learn from more senior devs (and vice versa!), discussing ideas and concepts. A popular approach to pair programming involves two roles: A driver and a navigator. While the driver is doing the actual coding, the navigator tries to keep the overview and give directions to the driver. Both people get to discuss their ideas and find the best solution together.&lt;/p&gt;

&lt;p&gt;From my experience, two people are usually working on the same computer. They come up with a plan together, write down open questions and then get going. I've done this with peers for weeks on end. However, the remote situation has made pair programming rather rare, at least in my team. It can be rather tedious. Screen sharing works, don't get me wrong, but it's easier to point on something on screen with your finger than to figure out the lines (and read them aloud at the same time!) of some blurry editor while the other person is scrolling along. I've played around with IntelliJ's pair programming feature for a bit, but not everyone uses IntelliJ either. For me, coding together on the same machine still feels a lot more productive.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So, what are your experiences? What tools do you use? What are your best practices when it comes to remote pair programming?&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;I hope you enjoyed reading this article as much as I enjoyed writing it! If so, leave a&lt;/em&gt; ❤️ &lt;em&gt;or a&lt;/em&gt; 🦄&lt;em&gt;! I write tech articles in my free time and like to drink coffee every once in a while.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you want to support my efforts,&lt;/em&gt; &lt;a href="http://buymeacoffee.com/pthormeier"&gt;&lt;em&gt;you can offer me a coffee&lt;/em&gt; ☕&lt;/a&gt; &lt;em&gt;or&lt;/em&gt; &lt;a href="https://twitter.com/pthormeier"&gt;&lt;em&gt;follow me on Twitter&lt;/em&gt; 🐦&lt;/a&gt;&lt;em&gt;!&lt;/em&gt; &lt;em&gt;You can also support me directly via &lt;a href="https://www.paypal.me/pthormeier"&gt;Paypal&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://buymeacoffee.com/pthormeier"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kc4mYYLu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/x55hp6jopwyy161d8e2u.png" alt="Buy me a coffee button" width="262" height="60"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>productivity</category>
      <category>discuss</category>
      <category>programming</category>
    </item>
    <item>
      <title>Create a blog using Next.js and Markdown/MDX</title>
      <author>usedevjet</author>
      <pubDate>Thu, 30 Dec 2021 21:42:13 +0000</pubDate>
      <link>https://dev.to/usedevjet/create-a-blog-using-nextjs-and-markdownmdx-4pem</link>
      <guid>https://dev.to/usedevjet/create-a-blog-using-nextjs-and-markdownmdx-4pem</guid>
      <description>&lt;p&gt;In this article, we are going to learn how to build a blog and or add a blog section to an already existing &lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt; project. To create the content of the blog we are going to be using an extension of the Markdown syntax: &lt;a href="https://mdxjs.com/"&gt;MDX&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When using Markdown in a website, there is always a compile step in which all the syntax markdown is converted into the HTML that the browser can understand. The problem with using plain Markdown is that you are limited to the handful amount of HTML elements that markdown is aware of. With MDX, you can extend those elements with your custom &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; components. It looks something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;import {Chart} from './snowfall.js'
export const year = 2018

&lt;span class="gh"&gt;# Last year's snowfall In {year}, the snowfall was above average.&lt;/span&gt;

It was followed by a warm spring which caused flood conditions in many of the nearby rivers.
&lt;span class="nt"&gt;&amp;lt;Chart&lt;/span&gt; &lt;span class="na"&gt;year=&lt;/span&gt;&lt;span class="s"&gt;{year}&lt;/span&gt; &lt;span class="na"&gt;color=&lt;/span&gt;&lt;span class="s"&gt;"#fcb32c"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this post, we're going to show you two ways of integrating MDX into your project to create blog pages. The traditional way is the one with which we are going to get started, and a &lt;a href="#bonus"&gt;bonus to show you how to get the job done in no time&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-our-app"&gt;
  &lt;/a&gt;
  Setting up our app
&lt;/h2&gt;

&lt;p&gt;First, you'll need to have Node.js installed on your computer. For this project we used Node.js 16 but anything up to 10.3 is going to be okay.&lt;br&gt;
If you have already created your app and just want to add the blog section to it, skip this section, otherwise, create your app with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-next-app app-name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This should generate a new Next.js app that follows the following folder structure&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;src
├── components
├── pages
|  ├── index.js
|  └── _app.js
├── next.config.js
├── package.json
├── README.md
└── yarn.lock
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-the-necessary-files"&gt;
  &lt;/a&gt;
  Create the necessary files
&lt;/h2&gt;

&lt;p&gt;Now that we have an app to work with, let's get started with the routes and components that are going to make up our blog:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;pages/blog&lt;/code&gt; - where our blog posts are stored&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;pages/blog/index.js&lt;/code&gt; - the page that lists all the blog posts that we have written and later redirects our readers to the corresponding pages&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;pages/blog/post-1/index.mdx&lt;/code&gt; - a simple example post&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;next.config.js&lt;/code&gt; - to work with mdx we have to tell nextjs how to work with the mdx pages, that's done here.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;utils/getAllPosts.js&lt;/code&gt; - to retrieve all the blog posts data from the &lt;code&gt;pages/blog&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;components/BlogPost.js&lt;/code&gt; - the blog post itself&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;components/PostCard.js&lt;/code&gt; - a simple card to display post meta data used to index all posts &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can start opening and creating these files, we'll come back later. First, we need to install the required dependencies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-the-necessary-dependencies"&gt;
  &lt;/a&gt;
  Install the necessary dependencies
&lt;/h2&gt;

&lt;p&gt;To enable MDX in our app, we need to install the &lt;code&gt;@mdx-js/loader&lt;/code&gt; library. To do so navigate to the root folder and in a console run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install @mdx-js/loader
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's generic to mdx, now we have to add a dependency exclusive to the nextjs framework. Just like before run the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install @next/mdx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are fundamental to the functionality that we want to provide. For our case we also want to add some styling with &lt;a href="https://tailwindcss.com/"&gt;Tailwindcss&lt;/a&gt; so install:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init -p
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add the paths to all of your template files in your &lt;code&gt;tailwind.config.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./pages/**/*.{js,ts,jsx,tsx}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/**/*.{js,ts,jsx,tsx}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add the &lt;code&gt;@tailwind&lt;/code&gt; directives for each of Tailwind's layers to your &lt;code&gt;./styles/globals.css&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;utilities&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We'll also we using the &lt;a href="https://tailwindcss.com/docs/typography-plugin"&gt;Tailwind CSS Typography plugin&lt;/a&gt; so let's install it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install @tailwindcss/typography --save-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And add it to your &lt;code&gt;tailwdind.config.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//…&lt;/span&gt;
&lt;span class="nx"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@tailwindcss/typography&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="c1"&gt;//…&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#add-mdx-support"&gt;
  &lt;/a&gt;
  Add mdx support
&lt;/h2&gt;

&lt;p&gt;By default, Next.js will just pick &lt;code&gt;.js&lt;/code&gt; and &lt;code&gt;.jsx&lt;/code&gt; files as routes from our pages directory, that's why we need to edit the &lt;code&gt;next.config.js&lt;/code&gt;, to make all our content visible to Next.js.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;withMDX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@next/mdx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)({&lt;/span&gt;
  &lt;span class="na"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;mdx&lt;/span&gt;&lt;span class="se"&gt;?&lt;/span&gt;&lt;span class="sr"&gt;$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;withMDX&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;pageExtensions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jsx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;md&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mdx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now Next.js can not only render the &lt;code&gt;js&lt;/code&gt; and &lt;code&gt;jsx&lt;/code&gt; files inside our pages directory but also &lt;code&gt;.md&lt;/code&gt; and &lt;code&gt;.mdx&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fetch-the-blog-posts"&gt;
  &lt;/a&gt;
  Fetch the blog posts
&lt;/h2&gt;

&lt;p&gt;To render our &lt;code&gt;pages/blog/index.js&lt;/code&gt; we'll need an array with all the pages that we've written and the links to them. To create it, in our &lt;code&gt;utils/getAllPosts.js&lt;/code&gt; file add the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;importAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="sr"&gt;index&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;mdx$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;}));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;importAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../pages/blog/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;mdx$/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#building-the-components"&gt;
  &lt;/a&gt;
  Building the components
&lt;/h2&gt;

&lt;p&gt;Now that we have an array containing all the information about our pages, we are ready to create the &lt;code&gt;pages/blog/index.js&lt;/code&gt; page so that users can navigate trough them, but first let's abstract our posts cards in the PostCard component&lt;/p&gt;

&lt;p&gt;The PostCard component is just the component that we'll use to render metadata about the post and create a link straight to the post. You will later learn how to create the metadata for each post, but for now let's asume that we already have it. So in &lt;code&gt;components/PostCard.js&lt;/code&gt; add:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;next/link&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PostCard&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;post&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;article&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"my-4"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-xl font-bold text-center text-gray-900"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"mt-4 mb-6"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-center prose-p"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"mt-2 text-center"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-sm text-gray-800"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;
            &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-sm text-gray-800"&lt;/span&gt;
            &lt;span class="na"&gt;role&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"img"&lt;/span&gt;
            &lt;span class="na"&gt;aria&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"one coffee"&lt;/span&gt;
          &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            ☕ &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readTime&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; min read&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"flex justify-center"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Link&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/blog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"font-bold text-blue-500"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-sm underline uppercase"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Read more&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Link&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;article&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In case you want to add the styles yourself here is the unstyled version:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;next/link&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PostCard&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;post&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;article&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;☕ &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readTime&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; min read&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Link&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/blog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Read more&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Link&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;article&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have how to render each post card, we can take all the posts information that we retrived with getAllPosts and render them all togheter in the &lt;code&gt;blog/index.js&lt;/code&gt; page to let the reader explore the available posts. Let's do it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;PostCard&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../components/PostCard&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../utils/getAllPosts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"max-w-3xl min-h-screen mx-auto"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"px-4 py-12"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-3xl font-bold text-center"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Blog&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"mt-4 text-lg text-center text-gray-800"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            All the lastest Devjet news from the devjet team itself
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"px-4"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;hr&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-gray-300"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;PostCard&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;post&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
              &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;hr&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-gray-300"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the unstyled version:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;PostCard&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../components/PostCard&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../utils/getAllPosts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Blog&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;hr&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;PostCard&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;post&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;hr&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Good news!! we are almost there. We just have to create the BlogPost component and write some content.&lt;br&gt;
Now, we previously talked about the metadata that each post would carry on, here is where we define it. Each post is going to look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;BlogPost&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../../components/BlogPost&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;MdxCodeBlock&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../../components/MyMdxComponents&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Create your blog with Next.js and MDX&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque maximus pellentesque dolor non egestas. In sed tristique elit. Cras vehicula, nisl vel ultricies gravida, augue nibh laoreet arcu, et tincidunt augue dui non elit. Vestibulum semper posuere magna.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Dec 04, 2021&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;readTime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BlogPost&lt;/span&gt; &lt;span class="na"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;BlogPost&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;

&lt;span class="nx"&gt;Lorem&lt;/span&gt; &lt;span class="nx"&gt;ipsum&lt;/span&gt; &lt;span class="nx"&gt;dolor&lt;/span&gt; &lt;span class="nx"&gt;sit&lt;/span&gt; &lt;span class="nx"&gt;amet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;consectetur&lt;/span&gt; &lt;span class="nx"&gt;adipiscing&lt;/span&gt; &lt;span class="nx"&gt;elit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Quisque&lt;/span&gt; &lt;span class="nx"&gt;maximus&lt;/span&gt; &lt;span class="nx"&gt;pellentesque&lt;/span&gt; &lt;span class="nx"&gt;dolor&lt;/span&gt; &lt;span class="nx"&gt;non&lt;/span&gt; &lt;span class="nx"&gt;egestas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;In&lt;/span&gt; &lt;span class="nx"&gt;sed&lt;/span&gt; &lt;span class="nx"&gt;tristique&lt;/span&gt; &lt;span class="nx"&gt;elit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Cras&lt;/span&gt; &lt;span class="nx"&gt;vehicula&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;nisl&lt;/span&gt; &lt;span class="nx"&gt;vel&lt;/span&gt; &lt;span class="nx"&gt;ultricies&lt;/span&gt; &lt;span class="nx"&gt;gravida&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;augue&lt;/span&gt; &lt;span class="nx"&gt;nibh&lt;/span&gt; &lt;span class="nx"&gt;laoreet&lt;/span&gt; &lt;span class="nx"&gt;arcu&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;et&lt;/span&gt; &lt;span class="nx"&gt;tincidunt&lt;/span&gt; &lt;span class="nx"&gt;augue&lt;/span&gt; &lt;span class="nx"&gt;dui&lt;/span&gt; &lt;span class="nx"&gt;non&lt;/span&gt; &lt;span class="nx"&gt;elit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Vestibulum&lt;/span&gt; &lt;span class="nx"&gt;semper&lt;/span&gt; &lt;span class="nx"&gt;posuere&lt;/span&gt; &lt;span class="nx"&gt;magna&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="nx"&gt;Sed&lt;/span&gt; &lt;span class="nx"&gt;vehicula&lt;/span&gt; &lt;span class="nx"&gt;libero&lt;/span&gt; &lt;span class="nx"&gt;pulvinar&lt;/span&gt;
&lt;span class="nx"&gt;tincidunt&lt;/span&gt; &lt;span class="nx"&gt;ligula&lt;/span&gt; &lt;span class="nx"&gt;non&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;luctus&lt;/span&gt; &lt;span class="nx"&gt;massa&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Vestibulum&lt;/span&gt; &lt;span class="nx"&gt;ante&lt;/span&gt; &lt;span class="nx"&gt;ipsum&lt;/span&gt; &lt;span class="nx"&gt;primis&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;faucibus&lt;/span&gt; &lt;span class="nx"&gt;orci&lt;/span&gt; &lt;span class="nx"&gt;luctus&lt;/span&gt; &lt;span class="nx"&gt;et&lt;/span&gt; &lt;span class="nx"&gt;ultrices&lt;/span&gt; &lt;span class="nx"&gt;posuere&lt;/span&gt; &lt;span class="nx"&gt;cubilia&lt;/span&gt; &lt;span class="nx"&gt;Curae&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;Maecenas&lt;/span&gt; &lt;span class="nx"&gt;arcu&lt;/span&gt; &lt;span class="nx"&gt;purus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;aliquam&lt;/span&gt; &lt;span class="nx"&gt;ac&lt;/span&gt; &lt;span class="nx"&gt;molestie&lt;/span&gt; &lt;span class="nx"&gt;ac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;luctus&lt;/span&gt; &lt;span class="nx"&gt;eget&lt;/span&gt; &lt;span class="nx"&gt;sem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Sed&lt;/span&gt; &lt;span class="nx"&gt;pellentesque&lt;/span&gt; &lt;span class="nx"&gt;massa&lt;/span&gt; &lt;span class="nx"&gt;eros&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;condimentum&lt;/span&gt; &lt;span class="nx"&gt;commodo&lt;/span&gt; &lt;span class="nx"&gt;ligula&lt;/span&gt; &lt;span class="nx"&gt;cursus&lt;/span&gt; &lt;span class="nx"&gt;ut&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Mauris&lt;/span&gt; &lt;span class="nx"&gt;sit&lt;/span&gt; &lt;span class="nx"&gt;amet&lt;/span&gt; &lt;span class="nx"&gt;molestie&lt;/span&gt; &lt;span class="nx"&gt;ipsum&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Nullam&lt;/span&gt; &lt;span class="nx"&gt;venenatis&lt;/span&gt; &lt;span class="nx"&gt;est&lt;/span&gt; &lt;span class="nx"&gt;at&lt;/span&gt; &lt;span class="nx"&gt;purus&lt;/span&gt; &lt;span class="nx"&gt;mollis&lt;/span&gt; &lt;span class="nx"&gt;consectetur&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Phasellus&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;ipsum&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;quam&lt;/span&gt; &lt;span class="nx"&gt;ullamcorper&lt;/span&gt; &lt;span class="nx"&gt;aliquet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Nunc&lt;/span&gt; &lt;span class="nx"&gt;gravida&lt;/span&gt; &lt;span class="nx"&gt;bibendum&lt;/span&gt; &lt;span class="nx"&gt;placerat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="err"&gt;##&lt;/span&gt; &lt;span class="nx"&gt;My&lt;/span&gt; &lt;span class="nx"&gt;Headline&lt;/span&gt;

&lt;span class="nx"&gt;Fusce&lt;/span&gt; &lt;span class="nx"&gt;lacinia&lt;/span&gt; &lt;span class="nx"&gt;mauris&lt;/span&gt; &lt;span class="nx"&gt;vel&lt;/span&gt; &lt;span class="nx"&gt;massa&lt;/span&gt; &lt;span class="nx"&gt;tincidunt&lt;/span&gt; &lt;span class="nx"&gt;dignissim&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Proin&lt;/span&gt; &lt;span class="nx"&gt;tempus&lt;/span&gt; &lt;span class="nx"&gt;nunc&lt;/span&gt; &lt;span class="nx"&gt;sed&lt;/span&gt; &lt;span class="nx"&gt;efficitur&lt;/span&gt; &lt;span class="nx"&gt;porta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Nunc&lt;/span&gt; &lt;span class="nx"&gt;ornare&lt;/span&gt; &lt;span class="nx"&gt;tellus&lt;/span&gt; &lt;span class="nx"&gt;scelerisque&lt;/span&gt; &lt;span class="nx"&gt;velit&lt;/span&gt; &lt;span class="nx"&gt;euismod&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ut&lt;/span&gt; &lt;span class="nx"&gt;mollis&lt;/span&gt; &lt;span class="nx"&gt;diam&lt;/span&gt; &lt;span class="nx"&gt;tristique&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Phasellus&lt;/span&gt; &lt;span class="nx"&gt;vel&lt;/span&gt; &lt;span class="nx"&gt;diam&lt;/span&gt; &lt;span class="nx"&gt;egestas&lt;/span&gt; &lt;span class="nx"&gt;augue&lt;/span&gt; &lt;span class="nx"&gt;ullamcorper&lt;/span&gt; &lt;span class="nx"&gt;gravida&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Sed&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="nx"&gt;mattis&lt;/span&gt; &lt;span class="nx"&gt;ligula&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="nx"&gt;suscipit&lt;/span&gt; &lt;span class="nx"&gt;nisl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Ut&lt;/span&gt; &lt;span class="nx"&gt;placerat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MdxCodeBlock&lt;/span&gt;
  &lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`const helloWorld = 'hello world'`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;javascript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;BlogPost&lt;/code&gt; component is the one in charge of rendering each single post, and receives as parameter the metadata and the post content. Here is the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ArrowNarrowLeftIcon&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@heroicons/react/solid&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;next/link&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;BlogPost&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"max-w-3xl min-h-screen px-4 mx-auto mb-14"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"mt-4 mb-10 cursor-pointer"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Link&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"/blog"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"flex items-center"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;ArrowNarrowLeftIcon&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"h-4 mr-2"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
              Back to blog
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Link&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"py-10"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-3xl font-bold text-center"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"mt-2 text-sm text-center text-gray-800"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;role&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"img"&lt;/span&gt; &lt;span class="na"&gt;aria&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"one coffee"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              ☕ &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readTime&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; min read&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;hr&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"my-10 text-gray-300"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;article&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"max-w-3xl mx-auto prose text-justify"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;article&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And without any styles&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;next/link&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;BlogPost&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Link&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"/blog"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Back to blog&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Link&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;role&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"img"&lt;/span&gt; &lt;span class="na"&gt;aria&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"one coffee"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          ☕ &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readTime&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; min read&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;hr&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;article&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;article&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it!! Your blog is done, just open a console and run &lt;code&gt;npm run dev&lt;/code&gt; to explore it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-how-to-get-the-job-done-in-no-time"&gt;
  &lt;/a&gt;
  Bonus: How to get the job done in no time
&lt;/h2&gt;

&lt;p&gt;If you've been following along the tutorial, you've probably notice how much work it all takes. Even more keeping in mind the fact that our blog is still missing a lot of very common features like sharing options, a search bar, commentary section, posts clasification, newsletter, etc. &lt;/p&gt;

&lt;p&gt;What if i tell you that you integrate all these features and more in minutes instead of hours, just run a couple of commands and get a bunch on code injected in your project codebase to cover all these common solutions. You don't just save a lot of time and resources but also, given the fact that you are in control of the code, there's nothig stopping you from customizing every single bit of it to meet your goals and allow you to focus on what trully makes you unique.&lt;/p&gt;

&lt;p&gt;The tool that allows you to do all that and more is &lt;a href="https://www.usedevjet.com"&gt;devjet&lt;/a&gt; and here we show you how to use it to recreate all the code that we've described along this post and even add more feeatures.&lt;br&gt;
For now we are gonna stick to the blog generators, but feel free to explore the entire catalogue at &lt;a href="https://www.usedevjet.com/#modules"&gt;usedevjet.com/#modules&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Just like with &lt;code&gt;create-next-app&lt;/code&gt; we first have to create our boilerplate app, in this case with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;devjet new nextjs [appname]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that nextjs is not the only base that we can use, there are other very great frameworks as well, like vue or react or nuxt among others.&lt;/p&gt;

&lt;p&gt;We are gonna end up with a codebase similar to the one generated by &lt;code&gt;create-next-app&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now to add our blog pages we just have to get into the project folder and type in the console &lt;code&gt;devjet add blog-mdx&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;devjet add blog-mdx
  ? Do you want to use styled components? - No
  ? Where do you want to store your blog posts? - pages/blog
  ? Do you want us to create an example blog or you prefer the docs? - yes
  ✓ Installed dependencies
  ✓ Created pages/blog folder
  ✓ Added utils/devjet/getAllPosts.js
  ✓ Added components/devjet/PostCard.js
  ✓ Added pages/blog/index.js
  ✓ Added components/devjet/BlogPost.js
  ✓ Edited next.config.js
  ✓ Created pages/blog/post-1 folder (example)
  ✓ Added pages/blog/post-1/index.mdx  (example)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's all you need to do to either create a blog from the scratch or add it to your already existing project.&lt;/p&gt;

&lt;p&gt;Also note that in this case we only generated the logic, just in case that you want to add the styles yourself but we also provide some beatifull premade components to make your work even easier.&lt;/p&gt;

&lt;p&gt;The best part, that's not all you can do with devjet's generators, there are hundreds of applications!! Focusing on the blog thematic, these are some generators that you may be interested in:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;devjet add mailchimp&lt;/code&gt; To create a &lt;a href="https://mailchimp.com/"&gt;mailchimp&lt;/a&gt; newsletter and let your users get notified when you write new posts &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;devjet add google-analytics&lt;/code&gt; Use &lt;a href="https://analytics.google.com/"&gt;google analytics&lt;/a&gt; get information about your users behaivoir and improve their expirience&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;devjet add algolia&lt;/code&gt; To use &lt;a href="https://www.algolia.com/"&gt;algolia&lt;/a&gt; as a search engine for your posts&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;devjet add google-ads&lt;/code&gt; To monetize your blog with &lt;a href="https://ads.google.com/"&gt;google ads&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;devjet add auth&lt;/code&gt; Add authentication with diferent providers like &lt;a href="https://firebase.google.com/"&gt;firebase&lt;/a&gt; or &lt;a href="https://auth0.com/"&gt;auth0&lt;/a&gt; and let them save posts&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;devjet add share&lt;/code&gt; Components to let your users share your content and even comment on it.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;devjet add blog-mdx-prismjs&lt;/code&gt; Highlight your code blocks with &lt;a href="https://prismjs.com/"&gt;prismjs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;And much much more&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this tutorial we've learned how to create a blog in Nextjs using MDX to add the capability to use custom React components in the markdown syntax. We've also learned that when it comes to web development, "reinventing the wheel" typically takes a lot of time for wich we may have a better use, and so discovered that &lt;a href="https://www.usedevjet.com"&gt;devjet&lt;/a&gt; can help us be much more efficient by generating a lot of the code necessary to achive our gols and surpase them. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>nextjs</category>
      <category>lowcode</category>
    </item>
    <item>
      <title>🤬 What’s your opinion on Linters, Testers, and Prettiers?</title>
      <author>William McGonagle</author>
      <pubDate>Thu, 30 Dec 2021 21:36:37 +0000</pubDate>
      <link>https://dev.to/williammcgonagle/whats-your-opinion-on-linters-testers-and-prettiers-3f1j</link>
      <guid>https://dev.to/williammcgonagle/whats-your-opinion-on-linters-testers-and-prettiers-3f1j</guid>
      <description>&lt;p&gt;I’ve been working on a project recently and a bunch of people suggested that I should start using a testing system. This testing system was working for a while but then someone else suggested that I should start using a linter. The linter ended up breaking all of my testing code, and before long I had spend nearly three hours getting them working together. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/fairfield-programming/backend-server/"&gt;Here was the project if you want to check it out&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After that, I was told that the code was inconsistently formatted, so I needed to add a prettier system. All of my engineers are now telling me that they have lost countless man-hours battling against this new integration system.&lt;/p&gt;

&lt;p&gt;So, I’m getting rid of it. My entire linter system, code grading, beautifier, etc. is gone. And, I’m replacing it with &lt;a href="https://github.com/fairfield-programming/eaf-linter/"&gt;my own solution&lt;/a&gt;- if you want something done right, you have to do it yourself. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I want to hear what struggles you have had with your “systems to boost efficiency”, or if you think I am completely wrong and should shut up.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>discuss</category>
      <category>productivity</category>
    </item>
    <item>
      <title>What’s the best programming language to learn first?</title>
      <author>Erin Schaffer</author>
      <pubDate>Thu, 30 Dec 2021 21:30:39 +0000</pubDate>
      <link>https://dev.to/educative/whats-the-best-programming-language-to-learn-first-24oi</link>
      <guid>https://dev.to/educative/whats-the-best-programming-language-to-learn-first-24oi</guid>
      <description>&lt;p&gt;As a beginner programmer, it’s difficult to decide which programming language to learn first. The software development industry is fast-paced, and the market is constantly changing. There are over 700 programming languages in use, and each of those languages has its own advantages, disadvantages, and use cases. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;So, how do you decide where to begin?&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;Well, the good news is that learning &lt;em&gt;any&lt;/em&gt; language will open up doors and create new opportunities for you. In this article, we’ll explore the different types of programming languages, along with how to choose the best first language for your personal and professional goals. Then, we’ll give an overview of some of the most popular languages in use today.&lt;/p&gt;

&lt;p&gt;Let’s get started!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We’ll cover&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#programmingtypes"&gt;Different types of programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#choosingprogramminglanguage"&gt;Choosing the right programming language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#popularprogramminglanguages"&gt;Popular programming languages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nextsteps"&gt;Wrapping up and next steps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#different-types-of-programming"&gt;
  &lt;/a&gt;
  Different types of programming
&lt;/h2&gt;

&lt;p&gt;Programming languages are used to connect instructions to computers or machines. There are so many different programming languages with different functions. These languages can be categorized based on their functionalities. Popular programming language types include:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#highlevel"&gt;
  &lt;/a&gt;
  High-level
&lt;/h3&gt;

&lt;p&gt;High-level programming languages have strong abstractions from the details of the computer. High-level languages are considered easier to understand and learn because they typically use simple syntax, have better readability, and automate areas of computing systems to make programming easier.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lowlevel"&gt;
  &lt;/a&gt;
  Low-level
&lt;/h3&gt;

&lt;p&gt;Low-level programming languages have little to no abstraction from the instruction set architecture of a computer. These languages are typically described as “closer to the hardware.” They can convert to machine code without an interpreter or compiler. They’re considered to have a steeper learning curve than high-level languages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#generalpurpose"&gt;
  &lt;/a&gt;
  General-purpose
&lt;/h3&gt;

&lt;p&gt;General-purpose programming languages are designed to build software in a variety of application domains. These languages lack special features for particular domains.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scripting"&gt;
  &lt;/a&gt;
  Scripting
&lt;/h3&gt;

&lt;p&gt;Scripting languages are programming languages that are interpreted. They’re typically interpreted at runtime rather than compiled. They use a series of commands that can be executed without being compiled. All scripting languages are programming languages, but not all programming languages are scripting languages. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#imperative"&gt;
  &lt;/a&gt;
  Imperative
&lt;/h3&gt;

&lt;p&gt;Imperative programming uses statements to change the state of a program. Imperative programs give commands to the computer to execute. It focuses on explaining &lt;em&gt;how&lt;/em&gt; programs operate. Imperative languages can be broken down into the following subcategories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Procedural&lt;/strong&gt;: Procedural programming languages are based on the concept of procedural calls. These languages follow and carry out a set of ordered steps.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Object-oriented&lt;/strong&gt;: Object-oriented programming languages are based on the concept of &lt;em&gt;objects&lt;/em&gt;, which contain data or code. Object-oriented programs are created by objects that interact with each other. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Parallel&lt;/strong&gt;: Parallel programming languages carry out processes simultaneously. With parallel programming, tasks are typically broken down into several sub-tasks that can be executed independently with all of the results combined afterward. Parallel programming is closely related to and frequently used alongside &lt;em&gt;concurrent programming&lt;/em&gt;. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#declarative"&gt;
  &lt;/a&gt;
  Declarative
&lt;/h3&gt;

&lt;p&gt;Declarative programming is typically defined as “any style of programming that is &lt;em&gt;not&lt;/em&gt; imperative.” Declarative programs are non-imperative and describe their desired results without clearly defining commands or steps to be executed. They describe &lt;em&gt;what&lt;/em&gt; the program must accomplish, rather than &lt;em&gt;how&lt;/em&gt; to accomplish it. Declarative languages can be broken down into the following subcategories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Logic&lt;/strong&gt;: Logic programming languages are based on formal logic. Logical programs consist of a set of sentences in a logical order that expresses facts and rules about problem domains.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Functional&lt;/strong&gt;: Functional programming languages apply and compose functions. Function definitions are trees of expressions that map values to other values. In functional programming, functions can be bound to names, passed as arguments, and returned from other functions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Database&lt;/strong&gt;: Database programming languages define and access database information. With database programs, we can control access to data, define and update data, and search for information within our database management system (DBMS).&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#choosing-the-right-programming-language"&gt;
  &lt;/a&gt;
  Choosing the right programming language
&lt;/h2&gt;

&lt;p&gt;There are a few things to take into consideration when choosing a language to learn, or even when deciding on which language to use for a new project. I think the first essential question to ask yourself is: &lt;em&gt;what am I learning a programming language for?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Are you interested in getting into programming? Are you wanting to learn programming as a hobby or just for fun? Are you trying to switch career paths? Do you want to build a website from the ground up? Do you want to design your own mobile application? Do you want to learn the most in-demand, popular language on the market? The questions are endless!&lt;/p&gt;

&lt;p&gt;In short, your personal reasons for learning a language will help guide which language is best for you to learn. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#can-i-choose-the-wrong-programming-language"&gt;
  &lt;/a&gt;
  Can I choose the &lt;em&gt;wrong&lt;/em&gt; programming language?
&lt;/h3&gt;

&lt;p&gt;At the end of the day, learning &lt;em&gt;any&lt;/em&gt; programming language will teach you valuable and transferable skills in the software industry. While all programming languages have their differences, they share similar underlying principles. With any language, you’ll learn more about fundamental programming concepts, computer science, hardware, software, etc. &lt;/p&gt;

&lt;p&gt;It’s also important to remember that you can learn multiple programming languages. Many developers move between different languages throughout the course of their careers. If you end up not aligning with your first language, you can always move on to another one. Once you learn your first language, it’s typically a lot easier to learn another one. Don’t stress yourself out when trying to pick your first language. &lt;/p&gt;

&lt;p&gt;That being said, it’s important to consider what your goals are and what you’re working on when choosing a language. For example, if you want to build an iOS application, a good language option would be Swift, if you want to program a website, you’d want to learn languages like HTML and CSS, and so on.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#popular-programming-languages"&gt;
  &lt;/a&gt;
  Popular programming languages
&lt;/h2&gt;

&lt;p&gt;In this section, we’ll explore a compilation of some of the most popular programming languages to help you get an idea of what language would be best suited for you and your needs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#java"&gt;
  &lt;/a&gt;
  Java
&lt;/h3&gt;

&lt;p&gt;Java is a general-purpose, object-oriented, high-level programming language. It’s commonly used as the server-side language for back-end development tasks, including Android application development, big data applications, mobile app development, game development, and more. It’s a relatively simple language that uses automatic memory allocation and garbage collection. It offers class-based object-oriented programming (OOP) and enables reusable code. Java is platform-independent and multi-threaded.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  JavaScript
&lt;/h3&gt;

&lt;p&gt;JavaScript is an interpreted, object-oriented, high-level language. Unlike Java, it’s not class-based. JavaScript is widely used in front-end web development alongside HTML and CSS to build dynamic web pages. JavaScript is a very fast language because it can be run in the client-side browser. It’s known for its simple syntax and rich libraries, frameworks, and technologies, including React, Angular, and Node.js.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#python"&gt;
  &lt;/a&gt;
  Python
&lt;/h3&gt;

&lt;p&gt;​Python is an interpreted, object-oriented, high-level scripting language. It’s widely used in artificial intelligence, machine learning, data science and data analysis, and web development. Python provides rich libraries that include features such as web services tools, operating system interfaces, and more. These features add a lot of functionality to the language, which is one of the reasons why Python is so popular. Many developers recommend that beginner coders &lt;a href="https://www.educative.io/blog/how-to-learn-python-in-5-easy-steps"&gt;learn Python&lt;/a&gt; as their first programming language because of its simple syntax, readability, and extensivity.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#swift"&gt;
  &lt;/a&gt;
  Swift
&lt;/h3&gt;

&lt;p&gt;Swift is an open-source, multi-paradigm language developed by Apple. It’s mainly used for iOS development and macOS development. It integrates Objective-C’s object-oriented model and includes a framework infrastructure, debugger, and an advanced compiler. Swift is known for its simple syntax, scalability, and safety features. Your Swift projects can be extended with new features whenever necessary, which makes them easy to scale.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#golang"&gt;
  &lt;/a&gt;
  Golang
&lt;/h3&gt;

&lt;p&gt;Golang, or &lt;em&gt;Go&lt;/em&gt;, is an open-source, general-purpose, and compiled programming language created by Google. It’s a statically-typed and imperative language that includes features of object-oriented programming. Go is &lt;em&gt;hybrid&lt;/em&gt;, using the best features of many languages in a clear, expressive way. It’s used for all different types of software development solutions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#c"&gt;
  &lt;/a&gt;
  C
&lt;/h3&gt;

&lt;p&gt;The C programming language is general-purpose, imperative, and procedural. It’s widely used for scripting system apps and Windows, UNIX, and Linux operating systems. It’s also used for embedded systems, desktop applications, browsers, and databases. C is a low-level language, so it’s “closer to the hardware.” C is a base language for many other languages, so learning it will help you learn and understand other languages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#c"&gt;
  &lt;/a&gt;
  C++
&lt;/h3&gt;

&lt;p&gt;C++ is a general-purpose, generic, object-oriented language. Its portability allows you to easily run your programs on any interface or operating system. For example, if you write a program in Linux and want to switch to Windows, the transition will be smooth. It’s commonly used for video game development, back-end development, and graphical user interface (GUI) applications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sql"&gt;
  &lt;/a&gt;
  SQL
&lt;/h3&gt;

&lt;p&gt;SQL, or &lt;em&gt;structured query language&lt;/em&gt;, is a domain-specific language used to manage data in relational databases. It’s the standard language for relational database management systems (RDMS) like MySQL, Postgres, and Microsoft SQL Server. It allows you to embed within other languages using SQL modules, libraries, and pre-compilers. It’s a valuable language for web developers, data scientists and analysts, and even some non-technical roles, such as business analysts, marketers, and more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scala"&gt;
  &lt;/a&gt;
  Scala
&lt;/h3&gt;

&lt;p&gt;The Scala programming language combines functional programming and object-oriented programming into one language. It was designed to improve upon Java, so you can call Java methods, inherit from Java classes, and more. Scala is commonly used for strong static systems, machine learning, data science, finance applications, distributed applications, and more. It’s in high demand and is becoming increasingly popular.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#php"&gt;
  &lt;/a&gt;
  PHP
&lt;/h3&gt;

&lt;p&gt;PHP is an open-source server-side scripting language that’s similar to C. It’s widely used for web development and to create dynamic web pages. It’s also used in command-side scripting and GUI design. PHP is known to be beginner-friendly and widely applicable, as it can be used on any operating system or database.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kotlin"&gt;
  &lt;/a&gt;
  Kotlin
&lt;/h3&gt;

&lt;p&gt;Kotlin is an open-source, statically-typed programming language that can transpile to Java bytecode to run on the Java Virtual Machine (JVM) or Android. Currently, Kotlin is most widely used for Android app development and server-side applications. It can also be used to write web applications by transpiling to JavaScript. Learning Kotlin can help you quickly learn other modern languages like TypeScript, Scala, and Swift because they share many common concepts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#html-and-css"&gt;
  &lt;/a&gt;
  HTML and CSS
&lt;/h3&gt;

&lt;p&gt;HTML and CSS are popular languages for front-end developers. HTML is a markup language that’s used to structure web pages and their content. CSS is a style sheet language used to describe the presentation of documents written in markup languages like HTML. The two languages work together alongside JavaScript to build interactive websites.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up-and-next-steps"&gt;
  &lt;/a&gt;
  Wrapping up and next steps
&lt;/h2&gt;

&lt;p&gt;Whether you’re just getting started or you’re just wanting to learn a new programming language, Educative is here to help. Our curated courses and tutorials help you master new coding languages and skills and prepare you for real-world software development. Our courses are hands-on, including interactive code widgets directly in your web browser. Get started with a new language today with one of our &lt;strong&gt;&lt;em&gt;From Scratch&lt;/em&gt;&lt;/strong&gt;  courses. Some options include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/courses/learn-java-from-scratch"&gt;Learn Java from Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/courses/learn-cpp-from-scratch"&gt;Learn C++ from Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/courses/learn-scala-from-scratch"&gt;Learn Scala from Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Happy learning!&lt;/em&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#continue-learning-about-programming"&gt;
  &lt;/a&gt;
  Continue learning about programming
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/algorithms-101-check-string-palindrome"&gt;Algorithms 101: How to check if a string is a palindrome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/what-is-an-api"&gt;Beginner API deep dive: What is an API?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/hardware-vs-software-components-computer"&gt;Computer science 101: Hardware vs software components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/performance-testing-tutorial-gatling-jenkins"&gt;Performance testing tutorial: Automation, Gatling, and Jenkins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
      <category>python</category>
    </item>
    <item>
      <title>Trending Python Projects of the week</title>
      <author>Juan Benitez </author>
      <pubDate>Thu, 30 Dec 2021 21:30:24 +0000</pubDate>
      <link>https://dev.to/juanbenitezdev/trending-python-projects-of-the-week-24j9</link>
      <guid>https://dev.to/juanbenitezdev/trending-python-projects-of-the-week-24j9</guid>
      <description>&lt;p&gt;I wanted to make a compilation of some of the nicest Python projects that have gained popularity on GitHub this week.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sqlmodel"&gt;
  &lt;/a&gt;
  SQLModel
&lt;/h2&gt;

&lt;p&gt;As his creator defined, SQLModel is a Python library for interacting with SQL databases. It is based on Python type hints, and it uses &lt;a href="https://pydantic-docs.helpmanual.io/"&gt;Pydantic&lt;/a&gt; and &lt;a href="https://www.sqlalchemy.org/"&gt;SQLAlchemy&lt;/a&gt; internally. We can argue that SQLModel is just a layer on top of Pydantic and SQLAlchemy.&lt;/p&gt;

&lt;p&gt;SQLModel was created by the same person who created &lt;a href="https://fastapi.tiangolo.com/"&gt;FastAPI&lt;/a&gt;, so you can expect a pleasant and flawless integration between both.&lt;/p&gt;

&lt;p&gt;Although SQLModel was launched no more than 4 months ago (at the time of writing this), it already offers many features, and some others are already being developed, I encourage you to give it a try.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tiangolo/sqlmodel"&gt;Github Repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sqlmodel.tiangolo.com/"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#python-fire"&gt;
  &lt;/a&gt;
  Python Fire
&lt;/h2&gt;

&lt;p&gt;Python Fire is a library designed by Google for automatically generating command-line interfaces (CLIs) from absolutely any Python object, so basically you can create a Python method and generate a CLI from it.&lt;/p&gt;

&lt;p&gt;Here are some examples,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;fire&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"World"&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Hello %s!"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;fire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fire&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After import &lt;code&gt;fire&lt;/code&gt;, we can use it to generate a CLI from &lt;code&gt;greeting&lt;/code&gt; in this case.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;  &lt;span class="c1"&gt;# Hello World!
&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Juan&lt;/span&gt;  &lt;span class="c1"&gt;# Hello Juan!
&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;help&lt;/span&gt;  &lt;span class="c1"&gt;# Shows usage information.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I think this library is really helpful for debugging, developing some Python scripts.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/google/python-fire"&gt;Github Repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/python-fire/blob/master/docs/using-cli.md"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you like to play with CLIs, you should try &lt;a href="https://github.com/tiangolo/typer"&gt;Typer&lt;/a&gt;, another great tool for building CLIs with Python.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sherlock"&gt;
  &lt;/a&gt;
  Sherlock
&lt;/h2&gt;

&lt;p&gt;This is simple, a Python script for searching usernames across several social networks, how cool is that huh?&lt;/p&gt;

&lt;p&gt;I tried with my username and there are some sites that I don’t know about, I should look into that…&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GgF1vBtR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lkxdvpr6qt44l8fvcobb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GgF1vBtR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lkxdvpr6qt44l8fvcobb.png" alt="sherlock" width="811" height="368"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sherlock-project/sherlock"&gt;Github Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#changedetectionio"&gt;
  &lt;/a&gt;
  changedetection.io
&lt;/h2&gt;

&lt;p&gt;This is a tool for monitoring websites and get notifications when they change, so if you want to be on top of new information on the sites you like the most, give it a try. &lt;/p&gt;

&lt;p&gt;Some use cases for this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Governmental department updates (changes are often only on their websites)&lt;/li&gt;
&lt;li&gt;Products and services have a change in pricing&lt;/li&gt;
&lt;li&gt;New software releases, security advisories when you're not on their mailing list.&lt;/li&gt;
&lt;li&gt;Festivals with changes&lt;/li&gt;
&lt;li&gt;Real estate listing changes&lt;/li&gt;
&lt;li&gt;COVID-19 related news from government websites&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The best part about changedetection is that it is open source and you can self-host it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dgtlmoon/changedetection.io"&gt;Github Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope you like this list and leave a comment if you have used some of these tools or if you know about other Python projects gaining popularity.&lt;/p&gt;

</description>
      <category>python</category>
      <category>webdev</category>
      <category>programming</category>
      <category>opensource</category>
    </item>
    <item>
      <title>A beginner's guide to the Elixir programming language</title>
      <author>Erin Schaffer</author>
      <pubDate>Thu, 30 Dec 2021 21:22:55 +0000</pubDate>
      <link>https://dev.to/educative/a-beginners-guide-to-the-elixir-programming-language-1p34</link>
      <guid>https://dev.to/educative/a-beginners-guide-to-the-elixir-programming-language-1p34</guid>
      <description>&lt;p&gt;If you're looking to learn a new programming language, I recommend checking out Elixir. Elixir is a process-oriented, functional programming language that runs on the Erlang virtual machine (BEAM). The language was influenced by Ruby. This inspiration can be seen and felt in Elixir's ecosystem and tooling options. Elixir is known to be easy to learn and widely applicable within the software development industry. &lt;/p&gt;

&lt;p&gt;In this beginner's tutorial, I'll walk you through the Elixir language and discuss its use cases, tools, syntax, and much more.&lt;/p&gt;

&lt;p&gt;Let's get started!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We’ll cover&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#elixirprogramming"&gt;What is Elixir?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#elixirvserlang"&gt;Elixir vs Erlang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#elixirusesandtools"&gt;Elixir features, tools, and uses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#elixirfunctionalprogramming"&gt;Intro to Elixir functional programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#elixircode"&gt;Let's look at some Elixir code!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#nextsteps"&gt;Next steps&lt;/a&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-elixir"&gt;
  &lt;/a&gt;
  What is Elixir?
&lt;/h2&gt;

&lt;p&gt;Elixir is a general-purpose, functional, concurrent programming language created by José Valim. Valim worked on the Ruby on Rails team, and he decided to create Elixir after experiencing issues when trying to improve the performance of Ruby on Rails. His goal was to create a language that could &lt;strong&gt;run on top of Erlang’s VM&lt;/strong&gt;, BEAM, and that could be compatible with the Erlang ecosystem.&lt;/p&gt;

&lt;p&gt;The Elixir syntax &lt;strong&gt;shares many similarities with the Ruby syntax&lt;/strong&gt; and is widely used to build fault-tolerant, scalable, and maintainable applications. The language provides scalability, concurrency, fault tolerance, and low latency. &lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#elixir-vs-erlang"&gt;
  &lt;/a&gt;
  Elixir vs Erlang
&lt;/h3&gt;

&lt;p&gt;Elixir is built on top of Erlang and runs on the Erlang VM. The two languages do share certain similarities, but they also have some different applications and use cases. &lt;/p&gt;

&lt;p&gt;Both languages support &lt;strong&gt;concurrency and fault tolerance&lt;/strong&gt;. You could safely choose &lt;em&gt;either&lt;/em&gt; language to build a large distributed system with high availability, but Elixir has a reputation for running faster than Erlang. Elixir gets the Open Telecom Platform (OTP) from Erlang, which is Erlang’s standard library used for concurrent programming.&lt;/p&gt;

&lt;p&gt;If you want the freedom to work with different databases and frameworks, Erlang may be the better choice. Elixir is limited in database and framework support. However, if you want the &lt;strong&gt;flexibility to work with different cloud platforms&lt;/strong&gt;, Elixir is the better option. Elixir supports many cloud platforms, while Erlang only supports a few.&lt;/p&gt;

&lt;p&gt;There are also some &lt;strong&gt;notable syntax differences&lt;/strong&gt; between Elixir and Erlang:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Erlang has certain operators that Elixir does not. In Erlang, logical &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;or&lt;/code&gt; operators are available, but they aren’t available in Elixir. &lt;/li&gt;
&lt;li&gt;In Erlang, we use a colon &lt;code&gt;:&lt;/code&gt; to invoke a function using the respective module, and in Elixir we use &lt;code&gt;.&lt;/code&gt; to invoke a function.&lt;/li&gt;
&lt;li&gt;In Elixir, we can assign variables more than once, but in Erlang, we can’t assign variables more than once. Doing so would result in an error during execution.&lt;/li&gt;
&lt;li&gt;In Elixir, default values for arguments are always defined, but in Erlang, they aren’t.
Overall, both languages are reliable and maintainable. In recent years, Elixir has become the preferred language of the two due to its advanced support, simple syntax, and scalability.

&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#elixir-features-tools-and-uses"&gt;
  &lt;/a&gt;
  Elixir features, tools, and uses
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#elixir-features-and-tools"&gt;
  &lt;/a&gt;
  Elixir features and tools
&lt;/h3&gt;

&lt;p&gt;Elixir has many great features such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Elixir compiles to bytecode for the Erlang VM&lt;/li&gt;
&lt;li&gt;Metaprogramming with macros and polymorphism via protocols&lt;/li&gt;
&lt;li&gt;Emphasis on higher-order functions and recursion&lt;/li&gt;
&lt;li&gt;Lazy and async collections with streams&lt;/li&gt;
&lt;li&gt;Pattern matching&lt;/li&gt;
&lt;li&gt;Built-in tooling for things like remote debugging, dependency management, code compilation, and more&lt;/li&gt;
&lt;li&gt;Elixir is dynamically typed, so all types are checked at runtime rather than at compilation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The language also has a solid set of web development tools such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Mix&lt;/strong&gt;: Mix is a build tool that allows you to create projects, run tests, manage tasks, and much more.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;IEx&lt;/strong&gt;: IEx, Elixir’s interactive shell, provides you with many features like auto-complete, debugging, code reloading, and more.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Phoenix&lt;/strong&gt;: Phoenix is known to be one of the best web frameworks. It’s based on the MVC architecture just like Ruby on Rails.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#elixir-uses"&gt;
  &lt;/a&gt;
  Elixir uses
&lt;/h3&gt;

&lt;p&gt;Elixir is great for web applications of any size, web APIs (such as JSON or GraphQL), event-driven systems, distributed systems, internet of things, embedded systems, and much more. Many top companies use Elixir:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Discord&lt;/strong&gt;: Discord used Elixir to build their service and in 2017 successfully handled five million concurrent users and millions of events per second.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Moz&lt;/strong&gt;: Moz used Elixir on their backend to decrease their disk space and improve the speed of their API.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Pinterest&lt;/strong&gt;: Pinterest uses Elixir for its notification system to minimize the number of servers they use and clean up their code. Elixir helped them improve the performance of their notification system to deliver 14,000 per second.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Adobe&lt;/strong&gt;: Adobe used Elixir to build a client/cloud app for collaborative photography workflows.

&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#intro-to-elixir-functional-programming"&gt;
  &lt;/a&gt;
  Intro to Elixir functional programming
&lt;/h2&gt;

&lt;p&gt;Elixir is a functional programming language. With functional languages like Elixir, we can make better use of our CPU multi-cores and write shorter and more explicit code. To better understand functional programming, I should first introduce the following fundamental principles: &lt;strong&gt;immutability&lt;/strong&gt;, &lt;strong&gt;functions&lt;/strong&gt;, and &lt;strong&gt;declarative code&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In functional programming, all values created in the program are immutable. By default, each function has a stable value, which means that lock mechanisms aren’t needed. This simplifies parallel work. Immutability is showing up more in conventional programming languages. These languages typically provide the immutable mechanism by giving an immutable data type alternative or a method to turn a value immutable. &lt;/p&gt;

&lt;p&gt;Next, let’s talk about functions. In functional programming, functions are the &lt;strong&gt;primary tools for building programs&lt;/strong&gt;. It decreases the complexity of building large apps when functions have the following properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Immutable values&lt;/li&gt;
&lt;li&gt;The result of the function is only affected by the function’s arguments&lt;/li&gt;
&lt;li&gt;The function doesn’t generate effects beyond the returned values&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These functions are also known as &lt;strong&gt;pure functions&lt;/strong&gt;. There are more complex and unpredictable functions, which are known as &lt;strong&gt;impure functions&lt;/strong&gt;. In functional programming, values are always passed explicitly between functions, which makes the inputs and outputs clear. Functions can also be used in arguments and results of functions.&lt;/p&gt;

&lt;p&gt;Finally, let’s take a quick look at declarative code. Declarative programming focuses on &lt;strong&gt;&lt;em&gt;what&lt;/em&gt; is necessary to solve a problem&lt;/strong&gt;, instead of &lt;em&gt;how&lt;/em&gt; to solve a problem (which is what we see with imperative programming). In general, declarative code is typically more clear and concise than imperative code. With more clear and concise code, we run into fewer problems (like bugs!).&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#lets-look-at-some-elixir-code"&gt;
  &lt;/a&gt;
  Let's look at some Elixir code!
&lt;/h3&gt;

&lt;p&gt;Now, we’ll take some time to look at some very basic Elixir code from the &lt;a href="https://elixir-lang.org/getting-started/introduction.html"&gt;elixir-lang official documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#strings"&gt;
  &lt;/a&gt;
  Strings
&lt;/h4&gt;

&lt;p&gt;Elixir &lt;strong&gt;uses UTF-8 to encode strings&lt;/strong&gt;. UTF-8 is a variable-width character encoding that uses one to four eight-bit bytes to store each code point. Strings are surrounded by double quotes, like &lt;code&gt;”this”&lt;/code&gt;. Let’s take a look at a simple &lt;code&gt;Hello, World!&lt;/code&gt; in Elixir:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;IO.puts("Hello, World!")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#atoms"&gt;
  &lt;/a&gt;
  Atoms
&lt;/h4&gt;

&lt;p&gt;Atoms are constants whose values are their own names. In other languages, they are called &lt;em&gt;symbols&lt;/em&gt;. They’re typically used to enumerate over distinct values:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;iex&amp;gt; :cat
:cat
iex&amp;gt; :dog
:dog
iex&amp;gt; :fish
:fish
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#booleans"&gt;
  &lt;/a&gt;
  Booleans
&lt;/h4&gt;

&lt;p&gt;Elixir supports the booleans &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;iex&amp;gt; true
true
iex&amp;gt; true == false
false
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#arithmetic-operations"&gt;
  &lt;/a&gt;
  Arithmetic operations
&lt;/h4&gt;

&lt;p&gt;Let’s take a look at a couple of arithmetic operations in Elixir:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;iex&amp;gt; 2 + 2
4
iex&amp;gt; 10 * 2
20
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In Elixir, the divide operator &lt;code&gt;/&lt;/code&gt; always returns as a float:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;iex&amp;gt; 8 / 2
4.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#keyword-lists"&gt;
  &lt;/a&gt;
  Keyword lists
&lt;/h4&gt;

&lt;p&gt;When we have a list of tuples and the first item of the tuple is an atom, we can call it a &lt;em&gt;keyword list&lt;/em&gt;. Here’s an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;iex&amp;gt; list = [{:c, 1}, {:d, 2}]
[c: 1, d: 2]
iex&amp;gt; list == [c: 1, d: 2]
true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#modules-and-functions"&gt;
  &lt;/a&gt;
  Modules and functions
&lt;/h4&gt;

&lt;p&gt;In Elixir, functions are grouped into modules. An example of a module is the &lt;code&gt;String&lt;/code&gt; module. Here’s an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;iex&amp;gt; String.length("elixir")
6
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Other modules include compilation, scripted mode, function capturing, default arguments, and more.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next steps
&lt;/h2&gt;

&lt;p&gt;Congrats on taking your first steps with Elixir! It’s a functional and dynamic language used for building scalable and maintainable web applications. Elixir has a reputation for being fun and easy to learn, and there’s an active Elixir community where you can interact with other Elixir programmers. There are many companies looking for Elixir developers, meaning there are plenty of job opportunities available if you want to pick up this exciting language. There’s still so much to learn about Elixir programming, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Recursion&lt;/li&gt;
&lt;li&gt;Higher-order functions&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/introduction-metaprogramming-elixir"&gt;Metaprogramming&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To get started learning Elixir, check out Educative’s course &lt;a href="https://www.educative.io/courses/functional-programming-elixir"&gt;&lt;strong&gt;Learn Functional Programming with Elixir&lt;/strong&gt;&lt;/a&gt;. In this curated course, you’ll learn the fundamentals of Elixir, advanced concepts, and how to design an app using Elixir and functional programming principles. &lt;br&gt;
&lt;em&gt;Happy learning!&lt;/em&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#learn-about-other-popular-programming-languages"&gt;
  &lt;/a&gt;
  Learn about other popular programming languages
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/web-development-in-python"&gt;A complete guide to web development in Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/learn-java-from-scratch"&gt;Learn Java from scratch with these easy steps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/level-up-javascript-coding-challenges"&gt;Level up your JavaScript skills with 10 coding challenges&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
      <category>elixir</category>
    </item>
    <item>
      <title>#1 - Codewars 100 days challenge</title>
      <author>Cesar Del rio</author>
      <pubDate>Thu, 30 Dec 2021 21:18:59 +0000</pubDate>
      <link>https://dev.to/cesar__dlr/1-codewars-100-days-challenge-59f8</link>
      <guid>https://dev.to/cesar__dlr/1-codewars-100-days-challenge-59f8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-points-of-reflection-8-kyu"&gt;
  &lt;/a&gt;
  #1 - Points of reflection (8 kyu)
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Instructions:&lt;/strong&gt;&lt;br&gt;
"Point reflection" or "point symmetry" is a basic concept in geometry where a given point, P, at a given position relative to a mid-point, Q has a corresponding point, P1, which is the same distance from Q but in the opposite direction.&lt;/p&gt;

&lt;p&gt;Task&lt;br&gt;
Given two points P and Q, output the symmetric point of point P about Q. Each argument is a two-element array of integers representing the point's X and Y coordinates. Output should be in the same format, giving the X and Y coordinates of point P1. You do not have to validate the input.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;My notes:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DiJ5ZZ9D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/81if59dbm9yldwfykkz1.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DiJ5ZZ9D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/81if59dbm9yldwfykkz1.jpeg" alt="Image description" width="880" height="1101"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;My solution:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function symmetricPoint(p, q) {
  return [2*q[0]-p[0], 2*q[1]-p[1] ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Explanation&lt;/strong&gt;&lt;br&gt;
I found the formula for getting the P1 coordinate, the formula is P1(2Qx - Px, 2Qy - Py), then I just passed this formula with the array index positions and returned the result as an array&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Cesardlr"&gt;My Github&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/cesar__dlr"&gt;My twitter&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.codewars.com/kata/57bfea4cb19505912900012c"&gt;Solve this Kata&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>100daysofcode</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Pycraft Progress report #6</title>
      <author>Tom Jebbo</author>
      <pubDate>Thu, 30 Dec 2021 21:18:25 +0000</pubDate>
      <link>https://dev.to/pycraftdev/pycraft-progress-report-6-51fl</link>
      <guid>https://dev.to/pycraftdev/pycraft-progress-report-6-51fl</guid>
      <description>&lt;p&gt;&lt;em&gt;This is transferred roughly weekly from my Twitter profile (here: &lt;a href="https://twitter.com/PycraftDev"&gt;https://twitter.com/PycraftDev&lt;/a&gt;) to here on Dev! This is for the week beginning the 20th of December!&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You can find the latest release of Pycraft (v0.9.3) here: &lt;a href="https://github.com/PycraftDeveloper/Pycraft"&gt;https://github.com/PycraftDeveloper/Pycraft&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can find the latest developer preview of Pycraft (v0.9.4-1) here: &lt;a href="https://github.com/PycraftDeveloper/Pycraft/tree/Pycraft-v0.9.4-1"&gt;https://github.com/PycraftDeveloper/Pycraft/tree/Pycraft-v0.9.4-1&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can find the latest feature preview for Pycraft (v0.9.5-0) here: &lt;a href="https://github.com/PycraftDeveloper/Pycraft/tree/Pycraft-v0.9.5-0"&gt;https://github.com/PycraftDeveloper/Pycraft/tree/Pycraft-v0.9.5-0&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can also find the latest documentation for Pycraft here: &lt;a href="https://python-pycraft.readthedocs.io/en/pycraft-v0.9.3/"&gt;https://python-pycraft.readthedocs.io/en/pycraft-v0.9.3/&lt;/a&gt; &lt;br&gt;
&lt;em&gt;although be aware there is a lot of changes occurring here, and the link may be subject to change.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#december-20th-2021"&gt;
  &lt;/a&gt;
  December 20th - 2021
&lt;/h2&gt;

&lt;p&gt;Updates! I've been making lots of progress today, I've fixed a lot of bugs and improved the benchmarks section of the program, as it's probably one of the least efficient areas, and there are a lot of really basic things that can be quickly changed that'll make a big difference, but that aside I've had proof today that the update detector code works perfectly (as numpy released an update today), and I've also published the first draft of the documentation today (to as far as I've got) I've written 10,000 words roughly, and I've gone through about 4 of the modules, so I'm making progress, and it's really detailed where necessary, so I hope it'll be helpful, and naturally each update will take less time to write! Lots of progress all around today!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#december-21st-2021"&gt;
  &lt;/a&gt;
  December 21st - 2021
&lt;/h2&gt;

&lt;p&gt;Well, I have good news, I've finished 2 more modules and am well over half way through one as I speak, the documentation is at least 16, 000 words long at present. The last module I completed I'd say that more than half of the documentation was skipped because it was already known, the solution is working well. I've also been working on bug fixes for Pycraft v0.9.4 as I go through writing the documentation, I've found a few, especially in the benchmark and character customer GUI, and have plans to heavily optimise the benchmark process, I've already been working really hard to improve its effectiveness in this update. Just to note, the documentation I'm writing is for Pycraft v0.9.3 as it's the one currently published and after every release of Pycraft, there will be a very brief pause from development to update the documentation. I've also updated the folks over at Dev, and I have plans to share more content there, but all my time currently is dedicated to Pycraft's documentation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#december-22nd-2021"&gt;
  &lt;/a&gt;
  December 22nd - 2021
&lt;/h2&gt;

&lt;p&gt;Today saw the addition of a new method to install Pycraft, using Pipenv, this was brought forward and added by HarryFBP (&lt;a href="https://github.com/HenryFBP"&gt;https://github.com/HenryFBP&lt;/a&gt;) so a massive shoutout there! I've also spent today fixing more bugs in Pycraft, and also work on the documentation for Pycraft, I've published the progress made since I started now on read the docs here: &lt;a href="https://python-pycraft.readthedocs.io/en/pycraft-v0.9.3/"&gt;https://python-pycraft.readthedocs.io/en/pycraft-v0.9.3/&lt;/a&gt; but once I've finished writing it, I need to restructure the documentation, because it’s too big to render in GitHub wikis, and not very efficient, so I'll be breaking it down into separate files, instead of loading the whole documentation at once! I've also got plans to change the structure of the documentation internally as at present the link (&lt;a href="https://python-pycraft.readthedocs.io/en/pycraft-v0.9.3/"&gt;https://python-pycraft.readthedocs.io/en/pycraft-v0.9.3/&lt;/a&gt;) will break the moment I release Pycraft v0.9.4 and its documentation (more updates to GitHub in Pycraft v0.9.4-1 and onwards coming with work on the installer!) so I'll need to fix that somehow. I have finished all the way from the Achievements to Credits (alphabetically) and managed the entire credits menu, and half the one before it in a day, it's one of the larger programs, lots of the files with "utils" on the end will be shorter and quicker. Settings, main and home screen, will probably need a few days each but I'm not sure yet! I aim to be about 45 percent done by Christmas.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#december-23rd-2021"&gt;
  &lt;/a&gt;
  December 23rd - 2021
&lt;/h2&gt;

&lt;p&gt;I'm excited to announce, that I've finished the module "DisplayUtils" in documentation, so expect to see that published tomorrow, also I'm aware that the documentation I published previously was the one before the spell check but in addition, I've been working on animations for Pycraft, this will arrive in Pycraft v0.9.5 with the new start menu (thanks &lt;a class="mentioned-user" href="https://dev.to/demirdogukan"&gt;@demirdogukan&lt;/a&gt;!) and will feature fading in and out of GUIs, and more! I'll share an early prototype tomorrow, there are a few bugs to iron out, but don't worry I’m focusing on the documentation and Pycraft v0.9.4, but I want Pycraft v0.9.5 to be quick based on how delayed Pycraft v0.9.4 could be, but I don't want to introduce loads of bugs and issues.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#december-24th-2021"&gt;
  &lt;/a&gt;
  December 24th - 2021
&lt;/h2&gt;

&lt;p&gt;I've been going through the 'DisplayUtils' module, and it's very long and there is a lot of repeated code, I'm figuring out a way to simplify the whole process, but adding in resize support to Pycraft was a nightmare, in addition I've been going through the documentation, fixing spelling and adding more details where they might be necessary... I've so been working really hard on a text wrapper for Pycraft, I have since the start of December, because I’d make a solution but then I'd test it, and there may be a few scenarios where it doesn't work well, so then it's back to tweaking it, but I think I'm close, and being able to do this will massively help the credits, 3D game engine and benchmark GUIs where there is large blocks of text to render, which will also mean they are easier to work on and update (I need to update the credits and this should make that a bit easier). I've also as you may have seen, shared a demo of the transition animation between different menus in the GUI, that I've only worked on for a few hours and am very pleased with the result, after the documentation is finished, I'll work on the installer, and then there are a few GUIs that need a bit of optimisation, which I'm noticing as I go through the documentation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#december-25th-2021"&gt;
  &lt;/a&gt;
  December 25th - 2021
&lt;/h2&gt;

&lt;p&gt;Pycraft progress update time (yes, I did work on Christmas day, but only for a few hours), today saw tweaks to the documentation, and I've published my current progress to read the docs, and restructured the documentation slightly behind the scenes so now when I update the project it should update the documentation suitably with the release of Pycraft v0.9.4! I've also fixed numerous bugs with the game, and removed lines of code that are now irrelevant, and tested the game with higher refresh rates.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#december-26th-2021"&gt;
  &lt;/a&gt;
  December 26th - 2021
&lt;/h2&gt;

&lt;p&gt;lots of progress made today, more work on the documentation, tweaking some lines, planning a way to restructure the documentation so that the entire documentation isn't loaded at one time (because it's really, I’d big) and also, I've been planning on a way to do the same thing for the GitHub wikis page. I've also been investigating the cause of the issue, and have narrowed it down to 2 lines, and I think I am close to a potential fix, this has been a really frustrating bug and I'll be grateful to be rid of it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#december-27th-2021"&gt;
  &lt;/a&gt;
  December 27th - 2021
&lt;/h2&gt;

&lt;p&gt;Pycraft v0.9.4, the most current update, will feature many things, as a part of that the error screen has been changed heavily simplifying the process to avoid complications and more possible errors, this has been done to help development for the rest of Pycraft, now with details about where the error occurred, this has been done so the project now works with long error messages and the project is simplified somewhat. I fear this may have introduced lots of bugs because it's such a global change but as far as I'm aware, there are no bugs of any kind in Pycraft, but testing will not stop and lots of testing has still to be completed before I come even slightly close to a release in the dev branch of Pycraft v0.9.4-1, which is likely on the cards before the new year, in addition on the bug front, the issue with transitioning between the 2D and 3D game engines and the process being really slow and unresponsive has been fixed, and I've learned a bit more about the bug and will know how to fix it in future in addition to that, I've also cleaned up a few un-needed functions and images, no work on the documentation today, although that will resume soon after the next dev release of Pycraft. I've also today added a new feature to the Visual-Music program, but no update to that is planned now for some time, unless a serious bug occurs there. I've also shortened the 3D game engines basic commands library (either "base" in Pycraft v0.9.3, or "GameEngineWindowUtils" in Pycraft v0.9.4) and done a lot more behind the scene, I've been planning lots as I write documentation, and now I'm finished implementing new features for this stage in Pycraft v0.9.4, but will do bug fixes and then release to the dev channel, then I'll be working on the documentation as I plan the installer, then in the new year. Once the plan for the installer is done and hopefully the documentation is too, I'll be ready to work on that, then I'll be ready to release Pycraft v0.9.4 soon after that! Also, this is a "messy" long update, when we get onto Pycraft v0.9.5 and others, progress will be more linear and less spread out and much more interesting!&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>programming</category>
      <category>python</category>
      <category>opensource</category>
      <category>gamedev</category>
    </item>
  </channel>
</rss>
