<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Smallest Goat Breed | Which is smaller pygmy goat or Nigerian goat?</title>
      <author>ak khan</author>
      <pubDate>Tue, 11 Jan 2022 15:06:05 +0000</pubDate>
      <link>https://dev.to/akkhan/smallest-goat-breed-which-is-smaller-pygmy-goat-or-nigerian-goat-18cj</link>
      <guid>https://dev.to/akkhan/smallest-goat-breed-which-is-smaller-pygmy-goat-or-nigerian-goat-18cj</guid>
      <description>&lt;p&gt;Which is a smaller pygmy or Nigerian goat?&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://happychickensfarm.com/smallest-goat-breed/"&gt;Smallest Goat Breed&lt;/a&gt; such as the pygmy (smallest meat breed), Nigerian Dwarf (smallest dairy breed), and the pygora (smallest fiber breed) are going to be your best bets.&lt;br&gt;
Pygmy goats and Nigerian Dwarfs may look very similar to a newbie. Pygmy goats are often stockier, and also tend to have shorter legs, even though they can be the same height and weight. These goats are slender, and their legs are longer, thinner, and slender. These days, pygmy goats are quite popular both as pets and as livestock. They have a small size and a unique body structure, so people love them. They’re &lt;a href="https://happychickensfarm.com/smallest-goat-breed/"&gt;smallest breed of goat&lt;/a&gt; and also friendly, besides having an attractive appearance.&lt;/p&gt;

&lt;p&gt;These tiny goats are known as Nigerian Dwarfs. Similarly, they’re miniature dairy goats that originated in West Africa. According to different organizations, Nigerian Dwarfs are taller on average for does, and they are taller on average for bucks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#are-pygmy-goats-smaller-than-nigerian-dwarf-goats"&gt;
  &lt;/a&gt;
  Are pygmy goats smaller than Nigerian dwarf goats?
&lt;/h2&gt;

&lt;p&gt;Nigerian dwarfs and pygmies differ in a number of ways. Despite their different sizes (though Nigerian dwarfs are slightly smaller) and personalities, the goats are very similar and &lt;a href="https://happychickensfarm.com/smallest-goat-breed/"&gt;smallest goat breed in the world&lt;/a&gt;. The Nigerian dwarf typically has a different color combination than a pygmy goat. Blue eyes are also a possibility. Pygmy goats live for 10 to 15 years on average. ‘McGinty’, who died in Hayling Island, Hampshire, was the oldest goat in the world. ‘Daisy’ will eclipse him in just three years, said Paul Caygill, 53, the owner of Daisy’s maze. It happened in 2003 when he was 22 years and 5 months old.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Smallest Goat Breed Pygmy Goat for Sale IN UK&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A goat-keeper must obtain a CPH Number (holding number) and a HERD Number, according to the law. Regardless of how many goats are kept in the back garden, this rule still applies. Taking ownership of a home requires you to apply for this &lt;a href="https://happychickensfarm.com/smallest-goat-breed/"&gt;teacup smallest goat breed&lt;/a&gt;. Your local DEFRA office will be able to provide you with them for free.&lt;br&gt;
Females and whole males are about £250. Wethers can be had for £150-£185 and females for considerably more. There is a significant difference in price for faulted females. You can buy pygmy here in UK.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>career</category>
    </item>
    <item>
      <title>How many meetings do you have per week?</title>
      <author>Ben Halpern</author>
      <pubDate>Tue, 11 Jan 2022 14:41:43 +0000</pubDate>
      <link>https://dev.to/ben/how-many-meetings-do-you-have-per-week-3gp9</link>
      <guid>https://dev.to/ben/how-many-meetings-do-you-have-per-week-3gp9</guid>
      <description>&lt;p&gt;And how has this changed from job to job or role to role for you?&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>career</category>
    </item>
    <item>
      <title>Healthcare Technology Trends and Digital Innovations in 2022</title>
      <author>OleksiiTsymbal</author>
      <pubDate>Tue, 11 Jan 2022 14:29:12 +0000</pubDate>
      <link>https://dev.to/oleksiitsymbal/healthcare-technology-trends-and-digital-innovations-in-2022-b6o</link>
      <guid>https://dev.to/oleksiitsymbal/healthcare-technology-trends-and-digital-innovations-in-2022-b6o</guid>
      <description>&lt;p&gt;With 2021 well behind us, COVID-19’s presence still continues to linger around the world. Of all the industries that have been forever changed by the impacts of the global pandemic, healthcare arguably has changed the most. With significant advances in technology and methods necessary to support the high demand of access to healthcare and growing digitization of protected health information, the healthcare industry has evolved in novel ways to continue to deliver the same exceptional quality of service.&lt;/p&gt;

&lt;p&gt;As we press on into the future, it’s critical to remain mindful of the trends driving healthcare technology in 2022. Although legacy software and infrastructure is critical to the success of modern hospitals and care centers, it’s important that we consider how those systems can integrate with newer technologies or how they may eventually be replaced with more reliable systems. The focus should be on improving performance, productivity, efficiency, and security without sacrificing reliability or accessibility.&lt;/p&gt;

&lt;p&gt;If you’re ready to explore the tech innovations driving the healthcare industry towards digital transformation this year, let’s take a look at the most important technologies that have the potential to transform your organization.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#trend-1-artificial-intelligence-ai-in-healthcare"&gt;
  &lt;/a&gt;
  Trend #1: Artificial Intelligence (AI) in Healthcare
&lt;/h2&gt;

&lt;p&gt;Across multiple industries, artificial intelligence has made great waves as a useful technology in 2022, especially for healthcare.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ais-role-against-covid19"&gt;
  &lt;/a&gt;
  AI’S ROLE AGAINST COVID-19
&lt;/h3&gt;

&lt;p&gt;The global pandemic has had a profound impact on our society, but cutting-edge technology has helped us stay ahead of the curve. In fact, a company from Toronto, Canada was able to predict that COVID-19 would spread worldwide. By scanning 100,000 media sources in over 65 different languages daily, their application called &lt;a href="https://bluedot.global"&gt;BlueDot&lt;/a&gt; can ascertain dangerous outbreaks in what is nearly real time.&lt;/p&gt;

&lt;p&gt;A great deal of progress was also made with &lt;a href="https://academic.oup.com/bib/article/22/6/bbab320/6354025"&gt;machine learning advances&lt;/a&gt; in the development of vaccines. By using machine learning to help identify protein fragments, the &lt;a href="https://academic.oup.com/bib/article/22/6/bbab320/6354025"&gt;vaccines for COVID-19&lt;/a&gt; have been developed in much shorter periods of time than ever before.&lt;/p&gt;

&lt;p&gt;AI has also been helpful in analyzing crowd temperature data. This makes thermal screening a much more viable option for identifying potentially symptomatic individuals. Advances in AI-powered facial recognition have also made it viable toward identifying individuals even if they are wearing a face mask. It can also detect if the user is wearing a mask in the areas where it’s mandatory.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ai-in-diagnosis-amp-drug-development"&gt;
  &lt;/a&gt;
  AI IN DIAGNOSIS &amp;amp; DRUG DEVELOPMENT
&lt;/h3&gt;

&lt;p&gt;Artificial intelligence has plenty of applications outside of treating and responding to the pandemic. AI is incredibly helpful for improving efficiency with information processing and decision making. In the healthcare industry, machine learning is extremely helpful for the development of new pharmaceuticals and the efficiency of diagnosis processes.&lt;/p&gt;

&lt;p&gt;For those being treated for the effects of COVID-19, AI is helping &lt;a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8099790/"&gt;analyze CT scans&lt;/a&gt; to detect pneumonia. Microsoft developed &lt;a href="https://www.microsoft.com/en-us/research/project/medical-image-analysis/"&gt;Project InnerEye&lt;/a&gt;, a radiotherapy AI tool. This dramatically speeds up the process of 3D contouring of the patient, bringing time to completion down to minutes instead of hours. The project is open source on GitHub. &lt;a href="https://www.microsoft.com/en-us/research/project/project-hanover/"&gt;Project Hanover&lt;/a&gt; is another Microsoft AI system meant to catalog biomedical research papers from PubMed. This helps reduce time for cancer diagnosis and assists with deciding on which drugs should be used for each patient.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ai-in-mental-health"&gt;
  &lt;/a&gt;
  AI IN MENTAL HEALTH
&lt;/h3&gt;

&lt;p&gt;Artificial intelligence innovations don’t just apply to physical health. MIT and Harvard University researchers &lt;a href="https://news.mit.edu/2020/covid-19-impact-mental-health-1105"&gt;have utilized machine learning&lt;/a&gt; to track trends and mental health in correlation to the COVID-19 pandemic. By using an AI model, they were able to analyze thousands of online Reddit messages to find that topics of suicidality and loneliness had nearly doubled over a period of time. This has the potential to transform our understanding of the mental health of larger populations.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#natural-language-processing"&gt;
  &lt;/a&gt;
  NATURAL LANGUAGE PROCESSING
&lt;/h3&gt;

&lt;p&gt;Chatbots have the potential to improve the efficiency of telehealth. Researchers at UCLA combined chatbot technologies with AI systems to create a &lt;a href="https://www.uclahealth.org/radiology/body.cfm?id=697&amp;amp;action=detail&amp;amp;ref=98"&gt;Virtual Interventional Radiologist&lt;/a&gt; (VIR). This was intended to help patients self-diagnose themselves and for assisting doctors in diagnosing those patients. Chatbots powered by Natural Language Processing aren’t ready to provide primary diagnosis, but they can be used to assist in the process. They are also well equipped to help obtain information from patients before proper treatment can begin.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-key-to-ai-in-healthcare-data"&gt;
  &lt;/a&gt;
  THE KEY TO AI IN HEALTHCARE: DATA
&lt;/h3&gt;

&lt;p&gt;The most important element that powers artificial intelligence’s success in healthcare is data. More specifically, training data. Software powered by machine learning will never outperform the quality of its training dataset. The higher the quality and breadth of the data we give to the model, the better it will perform. It’s essential that your AI team is composed of experienced software developers and data scientists that can work together to produce the best results.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#trend-2-telemedicine-and-the-evolution-of-remote-care"&gt;
  &lt;/a&gt;
  Trend #2: Telemedicine and the Evolution of Remote Care
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.jotform.com/what-is-telemedicine/"&gt;Telehealth&lt;/a&gt; has come a &lt;a href="https://purple.ai/blogs/patient-experience-the-future-of-healthcare/"&gt;long way&lt;/a&gt; since the beginning of the pandemic in 2020. In 2022, care providers regularly have video conference meetings with patients over the Internet to discuss concerns and give advice. The infrastructure to support this has vastly improved. Telehealth is expected to grow to $185.6 billion by 2026. With that in mind, what lies in store for the future?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#complying-with-regulations"&gt;
  &lt;/a&gt;
  COMPLYING WITH REGULATIONS
&lt;/h3&gt;

&lt;p&gt;Before we consider that possibility, one of the most important issues with telehealth is HIPAA compliance. Although some restrictions were relaxed during the height of the pandemic in 2020, it’s important for care providers to consider the applications that they are using to communicate with their patients. Are they secure and certified to handle private health information?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#webrtc-for-video-conferencing"&gt;
  &lt;/a&gt;
  WEBRTC FOR VIDEO CONFERENCING
&lt;/h3&gt;

&lt;p&gt;In many instances, a more dedicated solution is required that can more specifically adhere to legal privacy requirements. If you need a dedicated telemedicine app, one of the most important technologies that will be needed is WebRTC, an open-source API-based system that connects web browsers and mobile applications and allows for transmitting audio, video, and data. This is especially helpful for teleconferencing features.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cloud-hosting-and-data-storage"&gt;
  &lt;/a&gt;
  CLOUD HOSTING AND DATA STORAGE
&lt;/h3&gt;

&lt;p&gt;Storing data in most cloud storage services is relatively secure, but not necessarily compliant with government regulations on protected health information. HIPAA compliant cloud hosting solutions are critical for maintaining functionality and efficiency for any healthcare operation needing electronic health records (EVR).&lt;/p&gt;

&lt;p&gt;However, teleconferencing and data hosting aren’t the only features that may be useful for your organization. Other features like security, location services, appointment management, secure messaging, healthcare provider reviews, visit history, and wearable integration are all potentially useful features.&lt;/p&gt;

&lt;p&gt;Some applications may need to store fitness data from consumer devices such as Google Fit and Apple HealthKit. Being able to maintain these integrations in a secure and efficient manner can benefit the patient and caregiver greatly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#trend-3-extended-reality-in-healthcare-settings"&gt;
  &lt;/a&gt;
  Trend #3: Extended Reality in Healthcare Settings
&lt;/h2&gt;

&lt;p&gt;Extended reality, a blanket term including augmented reality, virtual reality, and mixed reality, has a great deal of potential in the healthcare industry. From assisting surgery to aiding telehealth applications, AR and VR technologies can improve the healthcare industry substantially.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#augmented-reality-and-mixed-reality-in-healthcare"&gt;
  &lt;/a&gt;
  AUGMENTED REALITY AND MIXED REALITY IN HEALTHCARE
&lt;/h2&gt;

&lt;p&gt;Augmented reality and mixed reality are useful in a variety of healthcare settings. One of the most popular and useful forms of this technology is the use of mixed reality headsets like Microsoft Hololens 2 by &lt;a href="https://healthtechmagazine.net/article/2021/03/collaboration-and-preparation-what-mixed-reality-surgery-affords-operating-room"&gt;surgeons&lt;/a&gt;. The headset can provide heads up information to the surgeon while allowing them to use both of their hands during the procedure.&lt;/p&gt;

&lt;p&gt;Not only can these surgeries be enriched by this heads up information, but it can be a collaborative and remote effort and assist in training purposes. The head-mounted camera view of the headset can enable other doctors to observe the surgery and offer advice. The ‘holographic’ nature of the device can be used to enrich training as well. Similar applications are possible with on the rise AR headsets. More specialized software solutions will also be necessary to expand its use to different types of surgeries into the future.&lt;/p&gt;

&lt;p&gt;AR isn’t just restricted to headsets and operating rooms. The technology can also be used to help nurses &lt;a href="https://www.accuvein.com/why-accuvein/ar/"&gt;find veins&lt;/a&gt; to draw blood from.&lt;/p&gt;

&lt;p&gt;Augmented reality development relies heavily upon artificial intelligence and specialized sensors to function. Whether you’re developing for mobile devices or other kinds of hardware, appropriate data and software expertise will be required. AR developers focus heavily upon leveraging AI with the software frameworks of target hardware to make these products successful.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#metaverse-future-or-hype"&gt;
  &lt;/a&gt;
  METAVERSE: FUTURE OR HYPE?
&lt;/h3&gt;

&lt;p&gt;There is a big debate about whether Facebook’s rebrand to Meta and the focus on social virtual reality experiences is justified. Ultimately whether or not this is something that you are willing to invest in is up to you. Even if the metaverse is vastly overblown, there is some &lt;a href="https://venturebeat.com/2021/07/04/21-ways-medical-digital-twins-will-transform-healthcare/"&gt;potential&lt;/a&gt; for virtual reality in healthcare settings.&lt;/p&gt;

&lt;p&gt;One of the most useful applications of VR in healthcare that is in use right now is training. Creating virtual training situations for doctors can help them improve their skills and prepare for operations. VR can also be used in some contexts for treatment. For example, The Virtual Reality Medical Center uses VR therapy to help those suffering from phobias like fear of heights and PTSD.&lt;/p&gt;

&lt;p&gt;Maplewood Senior Living in Connecticut also has a VR therapy program for the elderly that can help them unlock past memories and improve emotional wellbeing.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/4Fs0oYAK96o"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Meta’s shift toward cartoon-style meetings might become useful for VR therapy, but the effectiveness of this in place of traditional teleconferencing remains to be seen. However, some technologies in this space such as spatial audio have potential to improve the effectiveness of telehealth systems by providing a more immersive digital experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#trend-4-iot-and-wearables-in-healthcare"&gt;
  &lt;/a&gt;
  Trend #4: IoT and Wearables in Healthcare
&lt;/h2&gt;

&lt;p&gt;With wearables and IoT technologies becoming more popular, their potential in the healthcare industry has grown significantly. For applications in telemedicine and telehealth technologies many have come to call this trend in micro processing the Internet of Medical Things.&lt;/p&gt;

&lt;p&gt;There were &lt;a href="https://iot-analytics.com/number-connected-iot-devices/"&gt;11.3 billion IoT devices&lt;/a&gt; connected at the start of 2021. The global IoT medical devices market is &lt;a href="https://www.globenewswire.com/news-release/2021/08/24/2285269/28124/en/Global-IoT-Medical-Devices-Markets-2021-2026-Rising-Focus-on-Active-Patient-Engagement-and-Patient-Centric-Care-Delivery.html"&gt;projected&lt;/a&gt; to reach USD 94.2 billion by 2026 from USD 26.5 billion in 2021. With the healthcare industry becoming increasingly more connected through these technologies, IoT cannot be ignored.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wearables"&gt;
  &lt;/a&gt;
  WEARABLES
&lt;/h3&gt;

&lt;p&gt;One of the most important innovations in the healthcare industry is the advancement of wearable technology. The ability to monitor the status of a patient throughout the day remotely or for an individual to monitor their own status is incredibly valuable. A survey conducted by &lt;a href="https://www2.deloitte.com/us/en/insights/industry/technology/technology-media-and-telecom-predictions/2022/wearable-technology-healthcare.html"&gt;Deloitte&lt;/a&gt; found that 39% of users had a smartwatch. With consumer smartwatches becoming more widely available, their potential to be used for healthcare applications should be noted.&lt;/p&gt;

&lt;p&gt;One of the most basic things that a smartwatch can provide that can be useful for monitoring a person’s health is heart rate. However, this is not the only thing that a smartwatch can measure. These devices can also monitor physical health with pedometers and blood oxygen saturation. Low blood oxygen saturation is difficult to detect without specialized sensors. Since this can be a life-threatening condition, smartwatches with this sensor can save lives.&lt;/p&gt;

&lt;p&gt;Smartwatches are also improving in their ability to measure blood vitals in their users. Photoplethysmography (PPG) is an optical technology that can measure variations in blood volume and composition. Since it has been miniaturized for use on smartwatches, it can provide users with more data than ever about their blood vitals. Healthcare providers can use this data to help advise patients and complete diagnoses.&lt;/p&gt;

&lt;p&gt;Smartwatches aren’t the only wearable that has potential for the healthcare industry. Bio patches and &lt;a href="https://www.aarp.org/health/conditions-treatments/info-2020/smart-hearing-aid-features.html"&gt;smart hearing aids&lt;/a&gt; have similar levels of impact. Bio patches can provide a better understanding of a person’s vitals without the use of a smartwatch. Artificial intelligence can also be used to improve noise isolation of hearing aids.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#smart-pills"&gt;
  &lt;/a&gt;
  SMART PILLS
&lt;/h3&gt;

&lt;p&gt;One of the most profound applications for IoT technology in healthcare is the &lt;a href="https://www.zdnet.com/article/smart-pills-and-the-future-of-medicine-insights-from-your-insides/"&gt;concept of a smart pill&lt;/a&gt;, which transforms The Internet of Things into &lt;a href="https://www.analyticssteps.com/blogs/internet-bodies-everything-you-need-know"&gt;The Internet of Bodies&lt;/a&gt;. Smart pills are edible electronics that not only serve as pharmaceuticals, but can provide care providers with valuable information about patients. The first smart pill &lt;a href="https://www.fda.gov/news-events/press-announcements/fda-approves-pill-sensor-digitally-tracks-if-patients-have-ingested-their-medication"&gt;approved by the FDA&lt;/a&gt; was released in 2017.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-iomt-solutions"&gt;
  &lt;/a&gt;
  CREATING IOMT SOLUTIONS
&lt;/h3&gt;

&lt;p&gt;With the industry trending toward using numerous microcontrollers in unison, getting all of these computers to communicate with each other can be challenging. Another obstacle that needs to be overcome is that almost every manufacturer uses their own proprietary protocol to get their devices to talk to each other. This can make integration difficult.&lt;/p&gt;

&lt;p&gt;Connectivity can also be an issue, as many environmental factors can disrupt communications. In order to overcome this, buffering methods on local microcontrollers need to become more robust. Security is always a concern as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#trend-5-healthcare-privacy-and-security-in-2022"&gt;
  &lt;/a&gt;
  Trend #5: Healthcare Privacy and Security in 2022
&lt;/h2&gt;

&lt;p&gt;Beyond the scope of efficiency and quality of care, privacy and security take critical priority in the healthcare industry. In February of 2021, Kroger pharmacy data was exposed in a data breach through Accellion’s FTA secure file-transfer service. They’re not the only ones. According to HealthITSecurity.com, over 550 organizations suffered data breaches last year that affected over 40 million people.&lt;/p&gt;

&lt;p&gt;Ensuring your organization is HIPAA compliant is an essential first step toward avoiding costly data breaches. If you are serving patients internationally, it may be a good idea to consider the regulations of the General Data Protection Regulation (GDPR) in the European Union.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The HIPAA regulation covers a great range of activities and it even covers some that are not mentioned in the act directly. Electronic signatures that are used in online forms quite often are a great example of that. They are not mentioned in the regulation but covered entities have to ensure that they are using &lt;a href="https://www.jotform.com/blog/hipaa-electronic-signature/"&gt;HIPAA compliant e-signature services&lt;/a&gt; as these services will store data that is considered PHI for authorization and authentication purposes.&lt;br&gt;
Erman Ergun, Healthcare Content Manager, JotForm&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Some healthcare providers are able to use software like Facetime and Skype to communicate with patients that may not be fully compliant with government regulations. Although the Office for Civil Rights (OCR) of the Department of Health and Human Services (HHS) in the United States has previously announced relaxed enforcement policies for organizations during the public health emergency, it’s important not to rely on that discretion. Eventually as the pandemic continues to subside, enforcement will go back to normal. Getting ahead of the curve can help avoid steep fines in the future.&lt;/p&gt;

&lt;p&gt;Although compliant video conferencing software already exists, sometimes a more customized solution needs to be created. This is especially the case if existing data infrastructure does not integrate well with available options. More importantly, if a healthcare provider wants to use an existing system to exchange ePHI with patients through third party software, they will have to obtain a business associate exception with the vendor which can be tedious and difficult.&lt;/p&gt;

&lt;p&gt;There still is no guarantee that the third-party program can fully protect patient data. In addition, keeping information secure through remote doctor calls is difficult. ePHI data must be transmitted in structured formats, and these calls can make the process complicated.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#trend-6-organ-care-technology-amp-bioprinting"&gt;
  &lt;/a&gt;
  Trend #6: Organ Care Technology &amp;amp; Bioprinting
&lt;/h2&gt;

&lt;p&gt;With the world’s transplantation market size predicted to reach &lt;a href="https://www.grandviewresearch.com/press-release/global-transplantation-market"&gt;$26.5 billion by 2028&lt;/a&gt;, organ transplants are certainly an important part of the healthcare industry. According to Matthew J Everly, about &lt;a href="https://pubmed.ncbi.nlm.nih.gov/19708444/"&gt;2,000 heart transplants&lt;/a&gt; take place in the United States every year. However, it’s estimated that over &lt;a href="https://medalerthelp.org/blog/organ-donation-statistics/"&gt;50,000 people&lt;/a&gt; need a heart transplant. What can be done to help all of these people suffering from heart disease?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#improving-organ-care-technology-extending-time-for-organ-evaluation-and-transport"&gt;
  &lt;/a&gt;
  IMPROVING ORGAN CARE TECHNOLOGY: EXTENDING TIME FOR ORGAN EVALUATION AND TRANSPORT
&lt;/h3&gt;

&lt;p&gt;One of the approaches to this issue is to improve organ care technology. This means taking care of the organ while it’s outside of the body. &lt;a href="https://www.thelantern.com/2021/08/wexner-medical-center-uses-new-heart-preservation-technology-in-clinical-trial/"&gt;The Organ Care System&lt;/a&gt; developed by Transmedics is a great example which is in use by the Ohio State University’s Wexner Medical Center. This device can keep a heart, lung, or liver outside of the body for several hours through proper care, heat, and provision of important nutrients.&lt;/p&gt;

&lt;p&gt;It’s possible that the future of this technology may depend on artificial intelligence to automatically take action without a doctor’s intervention to preserve the organ for longer periods of time.&lt;/p&gt;

&lt;p&gt;Perhaps more importantly, machine learning may be able to better determine if an organ being preserved is suitable for transplantation or not. The faster that this can be determined, the more quickly a life could be saved.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bioprinting-creating-new-organs"&gt;
  &lt;/a&gt;
  BIOPRINTING: CREATING NEW ORGANS
&lt;/h3&gt;

&lt;p&gt;In addition to keeping organs alive outside of the body, other options should also be explored. Although it may sound like science fiction, &lt;a href="https://interestingengineering.com/the-science-fiction-world-of-3d-printed-organs"&gt;3D printed organs&lt;/a&gt; are a very real, although developing, technology that has already made its way into clinical testing. Ears, corneas, bones, and skin are all organs in clinical testing for 3D bioprinting.&lt;/p&gt;

&lt;p&gt;The process is not too different from traditional 3D printing. First a digital model of the tissue must be created. Careful attention needs to be paid to the resolution and matrix structure, as the materials used in the printing process are quite literally living cells called &lt;a href="https://pubmed.ncbi.nlm.nih.gov/29492503/"&gt;bioink&lt;/a&gt;. They then need to test the organ’s functionality with stimulation.&lt;/p&gt;

&lt;p&gt;One of the ways that rejection of an organ can be prevented is by using the cells of the patient requiring transplantation. These cells can be grown in a culture and then cultivated into the bioink necessary for printing.&lt;/p&gt;

&lt;p&gt;Bioprinting has been done &lt;a href="https://www.popularmechanics.co.za/science/bioprinted-blood-vessels/"&gt;in the past&lt;/a&gt; but has not yet hit the mainstream. It’s possible that through AI analysis of organs and of recipient patient characteristics, organs can be better engineered to be compatible with their new hosts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#future-of-healthcare-technology"&gt;
  &lt;/a&gt;
  Future of Healthcare Technology
&lt;/h2&gt;

&lt;p&gt;As 2022 rolls forward, healthcare technology will continue to improve in every area. Although security will improve across the industry, threats are always evolving that must be dealt with through prevention rather than response. Quality and efficiency of care will continue to improve due to groundbreaking and evolving technologies like artificial intelligence, machine learning, and extended reality.&lt;/p&gt;

</description>
      <category>healthcare</category>
      <category>ai</category>
      <category>metaverse</category>
      <category>iot</category>
    </item>
    <item>
      <title>Airbnb Search App with Testing Data from MongoDB</title>
      <author>Dylan Oh</author>
      <pubDate>Tue, 11 Jan 2022 14:29:00 +0000</pubDate>
      <link>https://dev.to/ohdylan/airbnb-search-app-with-testing-data-from-mongodb-nh4</link>
      <guid>https://dev.to/ohdylan/airbnb-search-app-with-testing-data-from-mongodb-nh4</guid>
      <description>&lt;h3&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h3&gt;

&lt;p&gt;This is a simple full stack demo app that was built with:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Frontend: React, Material UI, Google Maps Javascript API&lt;br&gt;
Backend: Express (Node.js), MongoDB Atlas&lt;br&gt;
Database: MongoDB&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This app makes use of the sample data sets of Airbnb, provided by MongoDB. It demonstrates the use case of geoWithin operator to perform geographical search in a smooth and fast way. Wanted to create an autocomplete (real time retrieval of database index field), but came across this available test dataset from the documentation (&lt;a href="https://docs.atlas.mongodb.com/atlas-search/geoWithin/"&gt;geoWithin - MongoDB Atlas&lt;/a&gt;), and found out that this geoWithin is more powerful than I thought. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h3&gt;

&lt;p&gt;In this app, user can search type in the keyword and pin the desired location (right click on the map), and while you type, it is retrieving data on the pre-indexed fields from MongoDB and presenting them as suggestions to the users. Creating different types of index fields were easy, as I found on YouTube the exactly thing that I wanted to do.&lt;/p&gt;

&lt;p&gt;Basically, both the search filters (keyword and the location selected) were combined to produce the search results. If you right click and select the location, it will try to find in a circle shape (you can define in your GeoJSON), and with a radius of 10km (you can also define thsi in GeoJSON). By providing keywords, it will further filter down those properties that match the "name" field of the property. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;E-Commerce Creation / Own Adventure&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/OhDylan"&gt;
        OhDylan
      &lt;/a&gt; / &lt;a href="https://github.com/OhDylan/airbnb-data-app"&gt;
        airbnb-data-app
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Airbnb Search App with Testing Data from MongoDB&lt;/h1&gt;
&lt;h3&gt;
About&lt;/h3&gt;
&lt;p&gt;This is a simple full stack demo app that was built with:&lt;/p&gt;
&lt;blockquote&gt;
&lt;h6&gt;
&lt;strong&gt;Frontend&lt;/strong&gt;: React, Material UI, Google Maps Javascript API&lt;/h6&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;h6&gt;
&lt;strong&gt;Backend&lt;/strong&gt;: Express (Node.js), MongoDB Atlas&lt;/h6&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;h6&gt;
&lt;strong&gt;Database&lt;/strong&gt;: MongoDB&lt;/h6&gt;
&lt;/blockquote&gt;
&lt;p&gt;This app makes use of the sample data sets of Airbnb, provided by MongoDB. It demonstrates the use case of geoWithin operator to perform geographical search in a smooth and fast way. Wanted to create an autocomplete (real time retrieval of database index field), but came across this available test dataset from the documentation (&lt;a href="https://docs.atlas.mongodb.com/atlas-search/geoWithin/" rel="nofollow"&gt;geoWithin - MongoDB Atlas&lt;/a&gt;), and found out that this geoWithin is more powerful than I thought.&lt;/p&gt;
&lt;h3&gt;
Demo&lt;/h3&gt;
&lt;p&gt;In this app, user can search type in the keyword and pin the desired location (right click on the map), and while you type, it is retrieving data on the pre-indexed fields from MongoDB and presenting them as…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/OhDylan/airbnb-data-app"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;Click on the link to check out this demo app:&lt;br&gt;
&lt;a href="https://airbnb-app-data-app-frontend.vercel.app"&gt;Live Demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JaaJH9Rq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aypmhhj0yttd4m2wuib2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JaaJH9Rq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aypmhhj0yttd4m2wuib2.gif" alt="Image description" width="367" height="206"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/B8kn69IMOQg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>atlashackathon</category>
      <category>javascript</category>
      <category>react</category>
      <category>mongodb</category>
    </item>
    <item>
      <title>Introduction to middleware in Express</title>
      <author>Naftali Murgor</author>
      <pubDate>Tue, 11 Jan 2022 14:13:40 +0000</pubDate>
      <link>https://dev.to/naftalimurgor/middleware-in-express-1kn5</link>
      <guid>https://dev.to/naftalimurgor/middleware-in-express-1kn5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;This tutorial will learn about middleware and how to middleware makes Express powerful and extensible.&lt;/p&gt;

&lt;p&gt;What is middleware? A middleware is a function that intercepts requests and or responses as they get in/out of your Express application. Middleware has access to request and response objects. &lt;/p&gt;

&lt;p&gt;Middleware functions can run any code, modify the &lt;code&gt;request(req)/response(res)&lt;/code&gt; objects, and has access to the request/response cycle&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-use-a-middlware-in-express"&gt;
  &lt;/a&gt;
  How to use a Middlware in Express
&lt;/h3&gt;

&lt;p&gt;Middlewares can be used as:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Application-wide - a middleware enabled for the entire application&lt;/li&gt;
&lt;li&gt;Router level middleware&lt;/li&gt;
&lt;li&gt;Error handling middlware&lt;/li&gt;
&lt;li&gt;3rd Party middlware&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#1-applicationwide-middleware"&gt;
  &lt;/a&gt;
  1. Application-wide Middleware
&lt;/h4&gt;

&lt;p&gt;Application-wide middleware are middleware enabled for the entire application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;middlwareFn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// for every request, middlewareFn will always be executed&lt;/span&gt;
&lt;span class="c1"&gt;// it's a middleware enable application-wide&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;middlwareFn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#2-router-level-middleware"&gt;
  &lt;/a&gt;
  2. Router Level middleware
&lt;/h4&gt;

&lt;p&gt;Router level middleware work the same as application-wide except that they are bound to an instance of &lt;code&gt;express.Router()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Say you have set up a router like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;
&lt;span class="c1"&gt;// instance of router&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;// declare a middleware function&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;logHTTPMethod&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Method: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// enable the middleware&lt;/span&gt;
&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;logHTTPMethod&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;logHTTpMethod&lt;/code&gt; middleware will be enabled for &lt;code&gt;router&lt;/code&gt; instance an will be run for all requests that are handle inside &lt;code&gt;router&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To enable &lt;code&gt;logHTTPMethod&lt;/code&gt;, we will pass the function as an argument after &lt;code&gt;router.METHOD()&lt;/code&gt; like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// code ommitted&lt;/span&gt;
&lt;span class="c1"&gt;// for every request to /accounts resource, we run logHTTPMethod&lt;/span&gt;
&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/accounts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;logHTTPMethod&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// route logic&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#3-errorhandling-middlware"&gt;
  &lt;/a&gt;
  3. Error-handling Middlware
&lt;/h4&gt;

&lt;p&gt;Error-handling middleware are similar to other middleware except that the signature is different.&lt;/p&gt;

&lt;p&gt;In Error-handling middware, signature require 4 arguments instead of 3.&lt;br&gt;
Parameters for Error-handling middleware: &lt;code&gt;(err, req, res, next)&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// code omitted&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ErrorHandler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Internal server Error&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ErrorHandler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// code omitted&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#4-3rd-party-middleware"&gt;
  &lt;/a&gt;
  4. 3rd Party middleware
&lt;/h4&gt;

&lt;p&gt;A 3rd party middlware is packaged as an npm module and can be installed as a dependency using &lt;code&gt;yarn&lt;/code&gt; or &lt;code&gt;npm&lt;/code&gt;&lt;br&gt;
A good example is a middleware that provides logging capabilities like &lt;code&gt;morgan&lt;/code&gt; or cookie parsing functionalities like &lt;code&gt;cookie-parser&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To use &lt;code&gt;morgan&lt;/code&gt; to log request info to the console(standard output):&lt;/p&gt;

&lt;p&gt;Add &lt;code&gt;morgan&lt;/code&gt; as a dependency:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;yarn&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="nx"&gt;morgan&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Import the dependency:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;morgan&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;morgan&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;morgan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;tiny&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// will log request info everytime a request is made to the application.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;Middleware is a function that has access to request (req), response (res) objects. The signature for using middleware is app.use(middlewareFn). Where app is an instance of Express or Router class.&lt;br&gt;
In our next article, create a tiny Express application to demonstrate:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Routing&lt;/li&gt;
&lt;li&gt;Middleware&lt;/li&gt;
&lt;li&gt;Route params &amp;amp; Route queries&lt;/li&gt;
&lt;li&gt;Authentication &amp;amp; Authorization&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We shall build a tiny e-commerce application, with a Nextjs powered front-end.&lt;/p&gt;

&lt;p&gt;Until next week, Adios!&lt;/p&gt;




&lt;p&gt;Found this article helpful? You may follow my handle on twitter &lt;a href="https://twitter.com/nkmurgor"&gt;@nkmurgor&lt;/a&gt; where I tweet about interesting topics on web development.&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Integration testing tool for DynamoDB</title>
      <author>Valentin BEGGI</author>
      <pubDate>Tue, 11 Jan 2022 13:49:11 +0000</pubDate>
      <link>https://dev.to/kumo/integration-testing-tool-for-dynamodb-59kb</link>
      <guid>https://dev.to/kumo/integration-testing-tool-for-dynamodb-59kb</guid>
      <description>&lt;p&gt;Integration testing in serverless architectures can be challenging. Testing specific outcomes within managed services is cumbersome. &lt;a href="https://github.com/Theodo-UK/sls-test-tools"&gt;sls-test-tools&lt;/a&gt; provides a range of utilities, setup, teardown and assertions to make it easier to write effective and high quality integration tests for Serverless Architectures on AWS.&lt;/p&gt;

&lt;p&gt;I’m happy to announce that sls-test-tools now ships with new DynamoDB assertions!&lt;/p&gt;

&lt;p&gt;Let's jump in a quick example 🏃‍♂️ !&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#function-to-test"&gt;
  &lt;/a&gt;
  1️⃣ Function to test
&lt;/h2&gt;

&lt;p&gt;Let's consider a simple Lambda function that uploads client transaction data to DynamoDB.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xLFgFm_8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcbz8weo05o0qcsuxtid.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xLFgFm_8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcbz8weo05o0qcsuxtid.png" alt="Architecture" width="880" height="327"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;DynamoDBClient&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@aws-sdk/client-dynamodb&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;DynamoDBDocumentClient&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;PutCommand&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@aws-sdk/lib-dynamodb&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;TransactionEvent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;clientName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nl"&gt;transactionData&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ddbDocClient&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;DynamoDBDocumentClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;DynamoDBClient&lt;/span&gt;&lt;span class="p"&gt;({}));&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;TransactionEvent&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;clientName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;transactionData&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;ddbDocClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;PutCommand&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;TableName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sells&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;PK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;clientName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;SK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;toISOString&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
        &lt;span class="nx"&gt;transactionData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Transaction saved !&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, the function just makes a single "put" call to DynamoDB using the AWS SDK. In our integration test we want to make sure that the data has indeed been written to Dynamo.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#writing-the-test"&gt;
  &lt;/a&gt;
  2️⃣ Writing the test!
&lt;/h2&gt;

&lt;p&gt;We will be using sls-test-tools new assertion &lt;code&gt;toExistInDynamoTable&lt;/code&gt;.&lt;br&gt;
The integration testing can be done in 3 phases:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Triggering the initial event 🔥. In our scenario we call our lambda handler but we could also imagine sending an event in an Event Bus, uploading a file to S3...&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Asserting the expected behavior ✅. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cleaning what has been created 🧹. This step is very important in order to keep tests idempotent.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Following these three steps, the integration test implementation would be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;DocumentClient&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;aws-sdk/clients/dynamodb&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;MockDate&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mockdate&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AWSClient&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sls-test-tools&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./uploadTransactionDataToDynamo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sells data upload integration testing&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="na"&gt;documentClient&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DocumentClient&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;AWSClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DocumentClient&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mockDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2022-01-01T00:00:00.000Z&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;MockDate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mockDate&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;clientName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;transactionData&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;someData&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="nx"&gt;afterAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// 🧹 clean what you've created&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;documentClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;TableName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sells&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;PK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;SK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;mockDate&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;should upload transaction data to Dynamo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// 🔥 trigger the initial event&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// ✅ assert the functional behavior you are testing&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;PK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;SK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;mockDate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;toExistInDynamoTable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sells&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All sls-test-tools assertions can of course be inverted using &lt;code&gt;expect(..).not&lt;/code&gt;.&lt;/p&gt;




&lt;p&gt;You can use those assertions on all type of DynamoDB table, on a composite primary index table containing a partition key &lt;code&gt;PK&lt;/code&gt; and a sort key &lt;code&gt;SK&lt;/code&gt; like in the previous example, as well as in simpler table where primary index is only a partition key.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;should upload transaction data to Dynamo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;PK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;toExistInDynamoTable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sells&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;documentClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;TableName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sells&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;PK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;SK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;mockDate&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#whats-next-"&gt;
  &lt;/a&gt;
  3️⃣ What's next !
&lt;/h2&gt;

&lt;p&gt;Our team is working on typing sls-test-tools and on adding more custom jest assertions. We are also writing a more exhaustive article on Serverless integration testing, please feel free to subscribe so you can be notified when it will come out!&lt;/p&gt;

&lt;p&gt;⭐️⭐️⭐️ Happy 2️⃣0️⃣2️⃣2️⃣ ⭐️⭐️⭐️&lt;/p&gt;

&lt;p&gt;For more background about sls-test-tools, you can check out these two articles:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/serverless-transformation/bridge-integrity-integration-testing-%5B%E2%80%A6%5Degy-for-eventbridge-based-serverless-architectures-b73529397251"&gt;https://medium.com/serverless-transformation/bridge-integrity-integration-testing-[…]egy-for-eventbridge-based-serverless-architectures-b73529397251&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/serverless-transformation/announcing-the-alpha-release-of-sls-t%5B%E2%80%A6%5Dbring-simplicity-to-serverless-integration-testing-a5a5ccabde43"&gt;https://medium.com/serverless-transformation/announcing-the-alpha-release-of-sls-t[…]bring-simplicity-to-serverless-integration-testing-a5a5ccabde43&lt;/a&gt; &lt;/p&gt;

</description>
      <category>serverless</category>
      <category>testing</category>
      <category>typescript</category>
      <category>aws</category>
    </item>
    <item>
      <title>Metamask authentication in NextJS with Third Web</title>
      <author>Anurag</author>
      <pubDate>Tue, 11 Jan 2022 13:33:55 +0000</pubDate>
      <link>https://dev.to/byteslash/metamask-authentication-in-nextjs-with-third-web-55ff</link>
      <guid>https://dev.to/byteslash/metamask-authentication-in-nextjs-with-third-web-55ff</guid>
      <description>&lt;p&gt;Hey There! What's up!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/zSHERzpaQ9x8k/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/zSHERzpaQ9x8k/giphy.gif" alt="hello" width="500" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So Web3 has been in total hype these days, and a lot of developers have been trying out web3 lately, including me. &lt;/p&gt;

&lt;p&gt;And, Authentication is one of the most skeptical parts of a Full Stack application! And in Web 3.0, this flow is managed by wallets, and Metamask is the most popular among them. &lt;/p&gt;

&lt;p&gt;So, in this article, I'm going to show how you can integrate Metamask auth with ThirdWeb in NextJS!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#demo-of-what-we-are-building-today"&gt;
  &lt;/a&gt;
  Demo of what we are building today:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.loom.com/share/d28cd1093e8046a8b9475777d3bf65ac"&gt;Demo&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-a-new-nextjs-app"&gt;
  &lt;/a&gt;
  Installing a new NextJS app
&lt;/h3&gt;

&lt;p&gt;First, create a NextJS app. I'm also using Tailwind CSS as my UI preference. You can use anything that you like.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="kd"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;tailwindcss&lt;/span&gt; &lt;span class="nx"&gt;metamask&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;auth&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#clear-up-the-boilerplate"&gt;
  &lt;/a&gt;
  Clear up the boilerplate
&lt;/h4&gt;

&lt;p&gt;Now, clear up the boilerplate in the &lt;code&gt;index.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#installing-the-dependencies"&gt;
  &lt;/a&gt;
  Installing the dependencies
&lt;/h4&gt;

&lt;p&gt;Now, we will install the only required dependency for this app, &lt;code&gt;@3rdweb/hooks&lt;/code&gt;. Go ahead and install &lt;code&gt;@3rdweb/hooks&lt;/code&gt; in your project directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# for npm
npm i @3rdweb/hooks

# for yarn
yarn add @3rdweb/hooks
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#setting-up-the-third-web-provider"&gt;
  &lt;/a&gt;
  Setting up the Third Web Provider
&lt;/h3&gt;

&lt;p&gt;Now, we are going to set up the &lt;code&gt;ThirdwebWeb3Provider&lt;/code&gt; in our &lt;code&gt;_app.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../styles/globals.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ThirdwebWeb3Provider&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@3rdweb/hooks&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;regenerator-runtime/runtime&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pageProps&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;supportedChainIds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;80001&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;connectors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;injected&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;ThirdwebWeb3Provider&lt;/span&gt;
      &lt;span class="na"&gt;supportedChainIds&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;supportedChainIds&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;connectors&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;connectors&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Component&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;pageProps&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;ThirdwebWeb3Provider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, first, we are going to import the provider and &lt;code&gt;regenerator-runtime/runtime&lt;/code&gt; at the top of the script.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ThirdwebWeb3Provider&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@3rdweb/hooks&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;regenerator-runtime/runtime&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, in the main function, we are specifying the &lt;code&gt;supportedChainIds&lt;/code&gt; and &lt;code&gt;connectors&lt;/code&gt;. You might be wondering what are these.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;supportedChainIds&lt;/code&gt; contains a list of networks that are supported by our app. Here, &lt;code&gt;80001&lt;/code&gt; is for &lt;code&gt;Mumbai Testnet Network&lt;/code&gt; and &lt;code&gt;4&lt;/code&gt; is for &lt;code&gt;Rinkeby Testnet Network&lt;/code&gt;. You can check the list of all networks and their Chain Ids  &lt;a href="https://dev.toLink"&gt;here&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;&lt;code&gt;connectors&lt;/code&gt; is basically all the wallet providers we want to support. Here, &lt;code&gt;injected&lt;/code&gt; is for Metamask wallet. This will be used when we are actually making the function to connect wallet.&lt;/p&gt;

&lt;p&gt;Next, we are wrapping our whole app in &lt;code&gt;ThirdwebWeb3Provider&lt;/code&gt; with &lt;code&gt;supportedChainIds&lt;/code&gt; and &lt;code&gt;connectors&lt;/code&gt; props to specify the configuration.&lt;/p&gt;

&lt;p&gt;That's it for the &lt;code&gt;_app.js&lt;/code&gt; file.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#making-a-ui-in-the-raw-indexjs-endraw-file"&gt;
  &lt;/a&gt;
  Making a UI in the &lt;code&gt;index.js&lt;/code&gt; file
&lt;/h3&gt;

&lt;p&gt;Now, let's first make a UI for the login flow.&lt;/p&gt;

&lt;p&gt;Head over to &lt;code&gt;index.js&lt;/code&gt; file and make a simple &lt;code&gt;button&lt;/code&gt; to connect wallet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"flex flex-col items-center justify-center min-h-screen py-2 bg-slate-100"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;
          &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"px-4 py-2 rounded-md bg-purple-600 cursor-pointer hover:bg-purple-500 text-xl font-semibold duration-100 text-white"&lt;/span&gt;
        &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          Connect Wallet
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point, you will have a basic UI like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ekyF8qMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641906515845/FMDlG49IA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ekyF8qMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641906515845/FMDlG49IA.png" alt="Screenshot (3).png" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#building-the-connect-wallet-functionality"&gt;
  &lt;/a&gt;
  Building the connect wallet functionality
&lt;/h3&gt;

&lt;p&gt;Now, let's build the &lt;code&gt;connect wallet&lt;/code&gt; functionality.&lt;/p&gt;

&lt;p&gt;First, we will import the &lt;code&gt;useWeb3&lt;/code&gt; hook from &lt;code&gt;@3rdweb/hooks&lt;/code&gt; in our &lt;code&gt;index.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useWeb3&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@3rdweb/hooks&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, inside the &lt;code&gt;Home&lt;/code&gt; component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const { connectWallet, address, error } = useWeb3();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we are going to assign the &lt;code&gt;connectWallet&lt;/code&gt; to the connect wallet button:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"px-4 py-2 rounded-md bg-purple-600 cursor-pointer hover:bg-purple-500 text-xl font-semibold duration-100 text-white"&lt;/span&gt;
&lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;connectWallet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;injected&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      Connect Wallet
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we are passing &lt;code&gt;injected&lt;/code&gt; as a param to the &lt;code&gt;connectWallet&lt;/code&gt; function. If your remember from the above steps, this is used to specify that we are going to use Metamask to authenticate user.&lt;/p&gt;

&lt;p&gt;Now, at this point, you will have a working connect wallet button.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#displaying-user-address"&gt;
  &lt;/a&gt;
  Displaying user address:
&lt;/h4&gt;

&lt;p&gt;Now, in the &lt;code&gt;Home&lt;/code&gt; component, we are going to check if the user is authenticated and then render component based on that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"flex flex-col items-center justify-center min-h-screen py-2 bg-slate-100"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"px-2 py-1 rounded-full bg-gray-200 hover:bg-gray-300 font-mono font-medium cursor-pointer duration-100"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;
        &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"px-4 py-2 rounded-md bg-purple-600 cursor-pointer hover:bg-purple-500 text-xl font-semibold duration-100 text-white"&lt;/span&gt;
        &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;connectWallet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;injected&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Connect Wallet
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#error-handling"&gt;
  &lt;/a&gt;
  Error handling:
&lt;/h4&gt;

&lt;p&gt;Sometimes, the app may not work cause of errors, so in that case, we can use the &lt;code&gt;error&lt;/code&gt; object and log its value.&lt;/p&gt;

&lt;p&gt;Below our &lt;code&gt;useWeb3&lt;/code&gt; hook:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;connectWallet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useWeb3&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it! We have done it!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3o6fJ1BM7R2EBRDnxK/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3o6fJ1BM7R2EBRDnxK/giphy.gif" alt="congrats" width="498" height="243"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>blockchain</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Rustifying my terminal</title>
      <author>mainrs</author>
      <pubDate>Tue, 11 Jan 2022 13:27:52 +0000</pubDate>
      <link>https://dev.to/mainrs/rustifying-my-terminal-3883</link>
      <guid>https://dev.to/mainrs/rustifying-my-terminal-3883</guid>
      <description>&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@davidboca?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;David Boca&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/rust?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Rust has been one of my favorites for around 3 years now. A lot of people started to write CLI tools that either replace or enhance on the experience that your favorites like &lt;code&gt;sed&lt;/code&gt; or &lt;code&gt;ls&lt;/code&gt; provide.&lt;/p&gt;

&lt;p&gt;This post is a short introduction to which CLIs I have installed and can recommend!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bat"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/sharkdp/bat"&gt;bat&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Probably one of the more known ones, &lt;code&gt;bat&lt;/code&gt; is an enhanced version of &lt;code&gt;cat&lt;/code&gt; that supports syntax highlighting out of the box.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--awmz1Kqe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jd5gvrowtxv3hb863omz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--awmz1Kqe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jd5gvrowtxv3hb863omz.png" alt="Image showing the output of running  raw `bat thefuck/conf.py` endraw  inside of thefuck's repository" width="880" height="535"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exa"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/ogham/exa"&gt;exa&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;exa&lt;/code&gt; is a modern replacement for &lt;code&gt;ls&lt;/code&gt;. It supports colored output, icons and has builtin support for git. It can show you the status of your files inside your repository and even use your &lt;code&gt;.gitignore&lt;/code&gt; file to hide content. &lt;code&gt;exa&lt;/code&gt; comes with better defaults and installing it is easy, since it's a single binary available for Linux, macOS and Windows.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4l0JVto0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cyjihblav42vbhs0c2as.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4l0JVto0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cyjihblav42vbhs0c2as.png" alt="Image showing the output of running  raw `exa -lbF --git --icons` endraw  inside of thefuck's repository" width="880" height="535"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ripgrep"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/BurntSushi/ripgrep"&gt;ripgrep&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;ripgrep&lt;/code&gt; is a more powerful and user-friendly alternative to tools like &lt;code&gt;grep&lt;/code&gt;. It does a recursive search on your current directory and finds all occurances of a given string or regex. It comes with a lot of CLI flags that you can use to tailor your search and provides nicer output using colors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--heIW5MAF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qfun4u8qjxmu6655f4py.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--heIW5MAF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qfun4u8qjxmu6655f4py.png" alt="Image showing an the output when running  raw `ripgrep xdg` endraw  iside of thefuck's repository" width="880" height="535"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tokei"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/XAMPPRocky/tokei"&gt;tokei&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;tokei&lt;/code&gt; does one thing and it does it good: counting the lines of code inside a given project!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qvjcGANZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/onm7tj4ls0565xj1vyye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qvjcGANZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/onm7tj4ls0565xj1vyye.png" alt="Image shows the output when running  raw `tokei` endraw  inside of thefuck's repository" width="880" height="535"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#zoxide"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/ajeetdsouza/zoxide"&gt;zoxide&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;zoxide&lt;/code&gt; remembers the folders you &lt;code&gt;cd&lt;/code&gt; into and allows you to fuzzy match onto them. The tool creates a ranking of the directories you visit, sorting them by the number of visits in descending order. When doing a fuzzy match, it chooses the directory with the highest match. The only caviat is that you have to use the &lt;code&gt;z&lt;/code&gt; command instead of &lt;code&gt;cd&lt;/code&gt;. But what are aliases for? 🤷.&lt;/p&gt;

&lt;p&gt;For example, my NixOS configuration is inside a folder called &lt;code&gt;nixos-config&lt;/code&gt;. It's the only folder I visited that contais &lt;code&gt;os&lt;/code&gt;. I can instantly switch to the folder by typing &lt;code&gt;z os&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#notable-mentions"&gt;
  &lt;/a&gt;
  Notable mentions
&lt;/h2&gt;

&lt;p&gt;Although I do not use the following CLIs that often, I still wanted to mention them:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/dandavison/delta"&gt;delta&lt;/a&gt;, a sane version of &lt;code&gt;git --diff&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bootandy/dust"&gt;dust&lt;/a&gt;, a CLI to help you find those folders that bloat your filesystem.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are a lot more cool CLIs out there, but these are the ones I do recommend and use frequently! If you happen to use other tools, let me know in the comments!&lt;/p&gt;

</description>
      <category>rust</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Become a master of the database using Appwrite's new query API</title>
      <author>Bradley Schofield</author>
      <pubDate>Tue, 11 Jan 2022 13:24:57 +0000</pubDate>
      <link>https://dev.to/appwrite/become-a-master-of-the-database-using-appwrites-new-query-api-5ge4</link>
      <guid>https://dev.to/appwrite/become-a-master-of-the-database-using-appwrites-new-query-api-5ge4</guid>
      <description>&lt;p&gt;With Appwrite 0.12, we made Appwrite harder, better, faster, stronger with many new additions to the Database! One of these recent changes is the Query API which has been completely rewritten to give you unparalleled control over your database queries using Appwrite.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-appwrite"&gt;
  &lt;/a&gt;
  🤔 What is Appwrite?
&lt;/h2&gt;

&lt;p&gt;If you're wondering what Appwrite is, you're missing out! &lt;a href="https://appwrite.io/"&gt;Appwrite&lt;/a&gt; is open source backend-as-a-service that abstracts all the complexity involved in building a modern application by providing you with a set of REST APIs for your core backend needs. Appwrite handles user authentication and authorization, file storage, real-time APIs, cloud functions, webhooks and the subject of today, databases.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-changed"&gt;
  &lt;/a&gt;
  👀 So what changed?
&lt;/h2&gt;

&lt;p&gt;In Appwrite 0.12, the syntax for queries has been rewritten to make it easier and provide greater control to developers. In all our SDKs we have introduced a new &lt;code&gt;Query&lt;/code&gt; class to abstract all the logic behind query creation. The new &lt;code&gt;Query&lt;/code&gt; class enables IDE auto-completion and makes it easier to develop your project without having to constantly refer to the documentation to see what queries are available to you. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-i-use-the-query-class"&gt;
  &lt;/a&gt;
  🧑‍💻 How do I use the Query class?
&lt;/h2&gt;

&lt;p&gt;Using the &lt;code&gt;Query&lt;/code&gt; class is easy! When using an API endpoint that supports queries, you pass an array of &lt;code&gt;Queries&lt;/code&gt; instead of the previously used strings.&lt;/p&gt;

&lt;p&gt;For example, if we had a movies collection, and wanted to search for &lt;code&gt;Avatar&lt;/code&gt; in the movie &lt;code&gt;title&lt;/code&gt;, we can now use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Database&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Query&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;appwrite&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;database&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Database&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;movies&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Avatar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see here, we are using the Query class's &lt;code&gt;.equal&lt;/code&gt; function, which checks for values that &lt;strong&gt;exactly match&lt;/strong&gt; the provided one within the attribute you specify ( &lt;code&gt;title&lt;/code&gt; in this case ).&lt;/p&gt;

&lt;p&gt;You can also search for multiple values within these queries, equivalent to a database &lt;code&gt;OR&lt;/code&gt; command. Let's say we'd like to search for movies with &lt;code&gt;Avatar&lt;/code&gt; or &lt;code&gt;Scott Pilgrim vs the World&lt;/code&gt; in the &lt;code&gt;title&lt;/code&gt;. The code would look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;movies&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Avatar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Scott Pilgrim vs the World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, what about &lt;code&gt;AND&lt;/code&gt; conditions? They are simple. Just add them to the main array of queries.&lt;/p&gt;

&lt;p&gt;For instance, if we were to search for movies released &lt;em&gt;after 2010&lt;/em&gt; but &lt;em&gt;before 2020&lt;/em&gt;, the query would look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;movies&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;greater&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;year&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lesser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;year&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2020&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There's also the &lt;code&gt;greaterEqual&lt;/code&gt; and &lt;code&gt;lesserEqual&lt;/code&gt; queries. These are exactly the same as the &lt;code&gt;greater&lt;/code&gt; and &lt;code&gt;lesser&lt;/code&gt; queires, but also check for equality. For instance, we could rewrite the above query to also include results from 2010 and 2020 as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;movies&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;greaterEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;year&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lesserEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;year&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2020&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also use the &lt;code&gt;search&lt;/code&gt; query to search for a substring within a string. For instance, if we wanted to search for movies with &lt;code&gt;Lord of the rings&lt;/code&gt; in the &lt;code&gt;title&lt;/code&gt;, we could use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;movies&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lord of the rings&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;When using a search query, please ensure that you have created a &lt;a href="https://appwrite.io/docs/database#indexes"&gt;Fulltext index&lt;/a&gt; for the attribute you're querying for.  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are also &lt;code&gt;notEqual&lt;/code&gt; queries. This is the opposite of the &lt;code&gt;equal&lt;/code&gt; function. If you wanted to search for movies that we not called &lt;code&gt;Avatar&lt;/code&gt;, you could use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;movies&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;notEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Avatar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Not only that, but you can also combine &lt;code&gt;AND&lt;/code&gt; with &lt;code&gt;OR&lt;/code&gt; like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;movies&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;greater&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;year&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;actors&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Adam Sandler&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Steve Buscemi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code will get all the movies after 2010 that has either Adam Sandler or Steve Buscemi.&lt;/p&gt;

&lt;p&gt;As you can see, the possibilities are endless with Queries, and there are loads of them to use. You can look at all possible operations in our &lt;a href="https://appwrite.io/docs/database#querying-documents"&gt;querying guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To use queries, you must have correctly set indexes on your attributes so Appwrite can efficiently search through your records. You can learn more about &lt;a href="https://appwrite.io/docs/database#indexes"&gt;supported indexes in Appwrite&lt;/a&gt; in our docs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  🎬 Conclusion
&lt;/h2&gt;

&lt;p&gt;As you can see, the new Query API is undoubtedly easier to use however that's not the only advantage of this new API! It also allows new &lt;code&gt;OR&lt;/code&gt; queries and is significantly faster in &lt;a href="https://dev.to/appwrite/appwrite-012-database-improvements-3kmh"&gt;benchmarks&lt;/a&gt;. The revamped Query API is just one of the many changes in Appwrite 0.12! Check out the full changelog &lt;a href="https://github.com/appwrite/appwrite/releases/0.12.0"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We'd love to hear your feedback on how we can make Appwrite better. Feel free to hop onto our &lt;a href="https://appwrite.io/discord"&gt;Discord server&lt;/a&gt; or start a &lt;a href="https://github.com/appwrite/appwrite/discussions"&gt;Github discussion&lt;/a&gt; to let us know how you're using Appwrite!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learn-more"&gt;
  &lt;/a&gt;
  📚 Learn more
&lt;/h2&gt;

&lt;p&gt;You can use following resources to learn more and get help regarding Appwrite and it's services&lt;/p&gt;

&lt;p&gt;🚀 &lt;a href="https://github.com/appwrite"&gt;Appwrite Github&lt;/a&gt;&lt;br&gt;
📜 &lt;a href="https://appwrite.io/docs"&gt;Appwrite Docs&lt;/a&gt;&lt;br&gt;
💬 &lt;a href="https://appwrite.io/discord"&gt;Discord Community&lt;/a&gt;&lt;/p&gt;

</description>
      <category>database</category>
      <category>appwrite</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Introduction to Operational Analytics</title>
      <author>Adit Modi</author>
      <pubDate>Tue, 11 Jan 2022 13:21:05 +0000</pubDate>
      <link>https://dev.to/aws-builders/introduction-to-operational-analytics-2fm</link>
      <guid>https://dev.to/aws-builders/introduction-to-operational-analytics-2fm</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Operational analytics refers to inter-disciplinary techniques and methodologies that aim to improve day-to-day business performance in terms of increasing efficiency of internal business processes and improving customer experience and value. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Business analysts used the traditional analytics systems to recognize the business trends and identify the decisions. But by using the operational analytics systems, they can initiate such business actions based on the recommendations that the systems provide. They can also automate the execution processes to reduce the human errors. This makes the system go beyond being descriptive to being more prescriptive and even being predictive in nature.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Enterprises often have diverse and complex IT infrastructure. Challenges arise when trying to identify sources to extract from or identify what operational data captures the state of an analytics application. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Traditionally this data came from logging information emanating from different parts of the system. Modern environments include trace and metric data along with log data. Trace data captures the user request for resources as it passes through different systems all the way to the destination and the response back to the user. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Metric data contain various measurements that provide insight into the health or operational state of these systems. The combination of these form a rich set of diverse operational data that analytics application can be built on.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H4ryFwMt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vy7x097z2ipn01axpy0g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H4ryFwMt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vy7x097z2ipn01axpy0g.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Architecture Options for Building an Analytics Application on AWS&lt;/strong&gt; is a Series containing different articles that cover the key scenarios that are common in many analytics applications and how they influence the design and architecture of your analytics environment in AWS. These series present the assumptions made for each of these scenarios, the common drivers for the design, and a reference architecture for how these scenarios should be implemented.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Operational analytics is the process of using data analysis and business intelligence to improve efficiency and streamline everyday operations in real time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A subset of business analytics, operational analytics is supported by data mining, artificial intelligence, and machine learning. It requires a robust team of business and data analysts. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#characteristics"&gt;
  &lt;/a&gt;
  Characteristics
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Discoverability&lt;/strong&gt;: The ability of the system to make operational data available for consumption. This involves discovering multiple disparate types of data available within an application that can be used for various ad hoc explorations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Observability&lt;/strong&gt;: The ability to understand internal state from the various signal outputs in the system. By providing a holistic view of these various signals along with a meaningful inference it becomes easy understand how healthy and well performant the overall system is.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;User centricity&lt;/strong&gt;: Each analytics application should address a well-defined operational scope and solve a particular problem at hand. Users of the system often won’t understand or care about the analytics process but only see the value the result.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Agility&lt;/strong&gt;: The system must be flexible enough to accommodate changing needs of an analytics application and offer necessary control to bring in additional data with low overhead.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#reference-architecture"&gt;
  &lt;/a&gt;
  Reference architecture
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m_worBWi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f3cfyqfmz2nkq83a5hxf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m_worBWi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f3cfyqfmz2nkq83a5hxf.png" alt="Image description" width="797" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Operational analytics reference architecture&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Operational data&lt;/strong&gt;: Operational data originates from various points in the environment and systems. It consists of log data including systems logs, machine logs, applications logs, events logs, audit and other logs; metric data systems metrics, resource utilization metrics, application performance metrics; trace data including request-response profile and other telemetric data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Transformation and ingestion&lt;/strong&gt;: This represents a layer that collects the operational data and performs additional dissection or enrichment or other transformation before being ingested into Amazon OpenSearch Service. These include decoration data from additional sources or transforming the data into form required for indexing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Indexing&lt;/strong&gt;: OpenSearch Service performs indexing of incoming transformed data and makes it available for near-real time searching.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Visualization&lt;/strong&gt;: This layer brings in all the operational data present in the system into a single pane of glass in the forms of graphs, visualization, and other dashboards for the particular analytics application.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Downstream application&lt;/strong&gt;: OpenSearch Service also allows operational data indexed to be available for machine learning, alerting, and reporting application. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
  &lt;a href="#configuration-notes"&gt;
  &lt;/a&gt;
  Configuration notes
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Choose data model before ingestion&lt;/strong&gt;: When bringing data in from disparate sources, especially from structured systems into structureless systems such as OpenSearch, special care must be taken to ensure that the chosen data model provides a frictionless search experience for users.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Decide what data fields will be searchable&lt;/strong&gt;: By default, Amazon OpenSearch Service indexes all data fields. This might not be desirable in situations like fully or partially matching on numeric data types.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Use tiered storage&lt;/strong&gt;: The value of operational data or any timestamped data generally decreases with the age of the data. Moving aged data into tiered storage can save significant operational cost. Summarized rollups that can condense the data also can help address storage cost.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Monitor all involved components&lt;/strong&gt;: Monitor all involved components with metrics in Amazon CloudWatch.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Hope this guide gives you an Introduction to Operational Analytics, explains the Characteristics and Reference Architecture for Operational Analytics.&lt;/p&gt;

&lt;p&gt;Let me know your thoughts in the comment section 👇&lt;br&gt;
And if you haven't yet, make sure to follow me on below handles:&lt;/p&gt;

&lt;p&gt;👋 &lt;strong&gt;connect with me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🤓 &lt;strong&gt;connect with me on &lt;a href="https://twitter.com/adi_12_modi"&gt;Twitter&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🐱‍💻 &lt;strong&gt;follow me on &lt;a href="https://github.com/AditModi"&gt;github&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
✍️ &lt;strong&gt;Do Checkout &lt;a href="https://aditmodi.hashnode.dev"&gt;my blogs&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Like, share and follow me 🚀 for more content.&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__497987"&gt;
  
    .ltag__user__id__497987 .follow-action-button {
      background-color: #000000 !important;
      color: #fa6c00 !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/aditmodi" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FYJrtrA_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--mUzXbt1U--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/497987/edde8513-7308-4a4d-9592-2be160d074d2.png" alt="aditmodi image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/aditmodi"&gt;Adit Modi&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/aditmodi"&gt;Cloud Engineer | AWS Community Builder | 8x AWS Certified | 3x Azure Certified | Author of Cloud Tech , DailyDevOps &amp;amp; BigDataJournal | DEV moderator&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;





&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/wellarchitected/latest/analytics-lens/operational-analytics.html"&gt;Reference Guide&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>bigdata</category>
      <category>analytics</category>
    </item>
    <item>
      <title>How Can I lower my GitHub Actions Costs?</title>
      <author>Melih Ekinci</author>
      <pubDate>Tue, 11 Jan 2022 13:17:38 +0000</pubDate>
      <link>https://dev.to/pankod/how-can-i-lower-my-github-action-costs-1dm0</link>
      <guid>https://dev.to/pankod/how-can-i-lower-my-github-action-costs-1dm0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#how-can-i-lower-my-github-actions-costs"&gt;
  &lt;/a&gt;
  How can I lower my GitHub Actions costs?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/features/actions"&gt;GitHub Actions&lt;/a&gt; charges per minutes spent on CI. There is no charge for the initial 3000 minutes for Team users; once the 3k threshold is passed, pricing is based on the OS used while no fees are charged for open-source projects. If you use your own build runner, there is no charge for it, including private projects. But using your own build runner can incur maintenance costs.&lt;/p&gt;

&lt;p&gt;The pay per minute is a great model because even if you use a lot of CI, you can get the CI service for affordable prices if you optimize your CI processes. Unfortunately, GitHub Actions does not illustrate in detail the minutes used up by your workflows or by the steps pertaining to these workflows when you are working on a project. &lt;/p&gt;

&lt;p&gt;Take a minute of your time to subscribe to &lt;a href="https://meercode.io"&gt;&lt;strong&gt;Meercode.io&lt;/strong&gt;&lt;/a&gt; to get a detailed report of your previous activities on CI, categorized according to the organization, repository, workflow, and workflow step.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-is-realtime-monitoring-important-for-your-devops-processes"&gt;
  &lt;/a&gt;
  Why is real-time monitoring important for your DevOps processes?
&lt;/h2&gt;

&lt;p&gt;The single most important KPI for almost anyone working in a DevOps role is the state of their CI processes. If you have a well-functioning process, this will save you the burden of daily operations. If your CI processes are not working properly and you want to follow it in real-time, you may be up a gum tree. You might want to do the tracking with an internal tool, whose development process can take way too much time, or turn to open-source solutions. You could also try creating your own monitoring tool by using a few of the open-source solutions out there, which is also bound to take up so much of your time.&lt;/p&gt;

&lt;p&gt;What if we told you about a product that allows monitoring of CI status? Did you know that in just 1 minute you can share the status of your CI processes with yourself, your development teams, and your manager? &lt;strong&gt;Meercode&lt;/strong&gt; gives you all of that. You can easily share weekly detailed emails, custom dashboards, and all with the whole team!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#track-your-multiple-ci-products-from-a-single-screen"&gt;
  &lt;/a&gt;
  Track your multiple CI products from a single screen!
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--msTcbvgo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/voijnt9jgwn43d8aa52s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--msTcbvgo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/voijnt9jgwn43d8aa52s.png" alt="Dashboard" width="880" height="389"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Does your company use GitHub Action, GitLab, Buddy, etc. for your Web/API development CI processes? Or are you having your CI processes transferred from GitLab CI to GitHub Actions? Or are you using a different product for Mobile CI? No need to switch back and forth between multiple screens! &lt;a href="https://meercode.io"&gt;&lt;strong&gt;Meercode.io&lt;/strong&gt;&lt;/a&gt; allows you to keep track of multiple CI tools, get weekly reports, get a detailed view of your usage, and create different dashboards for different teams in a single interface. Spare a minute for &lt;a href="https://meercode.io"&gt;&lt;strong&gt;Meercode.io&lt;/strong&gt;&lt;/a&gt; to see it all. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IwXxWF9b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wu3u77o60iv5gbs8rqv7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IwXxWF9b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wu3u77o60iv5gbs8rqv7.png" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T6kHIlAY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/anp4qz0fnllxwog82e9d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T6kHIlAY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/anp4qz0fnllxwog82e9d.png" alt="Image description" width="880" height="576"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A great tool for teams and offices based in different locations. Get a handle on your DevOps metrics effortlessly with &lt;a href="https://meercode.io"&gt;&lt;strong&gt;Meercode.io&lt;/strong&gt;&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>devops</category>
      <category>ci</category>
      <category>github</category>
      <category>githubactions</category>
    </item>
    <item>
      <title>Uncomfortable with your theme? Just make one</title>
      <author>Heaven Aldrico</author>
      <pubDate>Tue, 11 Jan 2022 13:09:00 +0000</pubDate>
      <link>https://dev.to/ldriko/uncomfortable-with-your-theme-just-make-one-4i7k</link>
      <guid>https://dev.to/ldriko/uncomfortable-with-your-theme-just-make-one-4i7k</guid>
      <description>&lt;p&gt;Can't find the right theme? or maybe you found one but suddenly found out there's something wrong about the theme and make you feel uncomfortable. It might even affect your productivity&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--upgdzbO_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b62m4s28zex1g0krhqvo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--upgdzbO_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b62m4s28zex1g0krhqvo.gif" alt="Uncomfortable" width="480" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well just make one. Yeah it's easier than I thought.&lt;/p&gt;

&lt;p&gt;I'm not gonna give you a tutorial that &lt;strong&gt;already&lt;/strong&gt; has been made, an information about how easy is it is just enough so &lt;a href="https://code.visualstudio.com/api/working-with-extensions/publishing-extension"&gt;here is the link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And I just made one myself combining ayu's color scheme and my own prefered colors. &lt;a href="https://marketplace.visualstudio.com/items?itemName=HeavenAldrico.aldrico-s"&gt;Here check it out&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W1sWruQ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ldriko/aldrico-s/blob/main/images/sample.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W1sWruQ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ldriko/aldrico-s/blob/main/images/sample.png%3Fraw%3Dtrue" alt="Sample" width="880" height="630"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading my first article. Please share your thoughts or share your own theme in the comment below thanks! &lt;/p&gt;

</description>
      <category>beginners</category>
      <category>productivity</category>
      <category>vscode</category>
    </item>
  </channel>
</rss>
