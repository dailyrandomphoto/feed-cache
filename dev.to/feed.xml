<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>A Curated List of Free APIs For Your Next Project</title>
      <author>Yogesh Chavan</author>
      <pubDate>Sat, 26 Jun 2021 07:28:34 +0000</pubDate>
      <link>https://dev.to/myogeshchavan97/a-curated-list-of-free-apis-for-your-next-project-48n5</link>
      <guid>https://dev.to/myogeshchavan97/a-curated-list-of-free-apis-for-your-next-project-48n5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#public-apis"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RmqOPOmo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/0527eabfca2d19681db42c7f73fadb6f/raw/63360612791e83957cfdbeb3507dbbe7f3b7ef59/public_apis.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RmqOPOmo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/0527eabfca2d19681db42c7f73fadb6f/raw/63360612791e83957cfdbeb3507dbbe7f3b7ef59/public_apis.png" alt="Public APIs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This GitHub repository contains a ton of free APIs related to various categories like Games, News, Weather, Food &amp;amp; Drink etc. So don't miss this out!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#chuck-norris-jokes-api"&gt;
  &lt;/a&gt;
  &lt;a href="https://api.chucknorris.io/"&gt;Chuck Norris Jokes API&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VnEqoj4M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/0527eabfca2d19681db42c7f73fadb6f/raw/63360612791e83957cfdbeb3507dbbe7f3b7ef59/chucknorris.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VnEqoj4M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/0527eabfca2d19681db42c7f73fadb6f/raw/63360612791e83957cfdbeb3507dbbe7f3b7ef59/chucknorris.png" alt="Chuck Norris"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a free JSON API for hand-curated Chuck Norris facts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#genius-api"&gt;
  &lt;/a&gt;
  &lt;a href="https://genius.com/developers"&gt;Genius API&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5F737IR0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/0527eabfca2d19681db42c7f73fadb6f/raw/63360612791e83957cfdbeb3507dbbe7f3b7ef59/genius.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5F737IR0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/0527eabfca2d19681db42c7f73fadb6f/raw/63360612791e83957cfdbeb3507dbbe7f3b7ef59/genius.png" alt="Genius API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using this API you can search for song lyrics and their meanings.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#github-jobs-api"&gt;
  &lt;/a&gt;
  &lt;a href="https://jobs.github.com/api"&gt;GitHub Jobs API&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IiQmHn25--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/0527eabfca2d19681db42c7f73fadb6f/raw/63360612791e83957cfdbeb3507dbbe7f3b7ef59/github_jobs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IiQmHn25--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/0527eabfca2d19681db42c7f73fadb6f/raw/63360612791e83957cfdbeb3507dbbe7f3b7ef59/github_jobs.png" alt="GitHub Jobs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The GitHub Jobs API allows you to search, and view a list of jobs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Check out my &lt;a href="https://dev.to/myogeshchavan97/build-an-amazing-job-search-app-using-react-42p"&gt;this article&lt;/a&gt; to build a Job Search App using React from Scratch.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#star-wars-api"&gt;
  &lt;/a&gt;
  &lt;a href="https://swapi.dev/"&gt;Star wars API&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J1Tzl4Ep--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/0527eabfca2d19681db42c7f73fadb6f/raw/63360612791e83957cfdbeb3507dbbe7f3b7ef59/star_wars.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J1Tzl4Ep--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/0527eabfca2d19681db42c7f73fadb6f/raw/63360612791e83957cfdbeb3507dbbe7f3b7ef59/star_wars.png" alt="Star wars API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using this API, you can get all star wars related data like Planets, Spaceships, Vehicles, People etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#giphy-api"&gt;
  &lt;/a&gt;
  &lt;a href="https://developers.giphy.com/"&gt;Giphy API&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JoPi9VAY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/0527eabfca2d19681db42c7f73fadb6f/raw/63360612791e83957cfdbeb3507dbbe7f3b7ef59/giphy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JoPi9VAY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/0527eabfca2d19681db42c7f73fadb6f/raw/63360612791e83957cfdbeb3507dbbe7f3b7ef59/giphy.png" alt="Giphy API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A great searchable list of the world's largest GIF library.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#omdb-api"&gt;
  &lt;/a&gt;
  &lt;a href="http://www.omdbapi.com/"&gt;OMDB API&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OLPRLVXh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/0527eabfca2d19681db42c7f73fadb6f/raw/63360612791e83957cfdbeb3507dbbe7f3b7ef59/omdb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OLPRLVXh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/0527eabfca2d19681db42c7f73fadb6f/raw/63360612791e83957cfdbeb3507dbbe7f3b7ef59/omdb.png" alt="OMDB API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An API to access a list of movies and related information about them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#spotify-api"&gt;
  &lt;/a&gt;
  &lt;a href="https://developer.spotify.com/documentation/web-api/"&gt;Spotify API&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pwp9zn5x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/0527eabfca2d19681db42c7f73fadb6f/raw/63360612791e83957cfdbeb3507dbbe7f3b7ef59/spotify.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pwp9zn5x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/0527eabfca2d19681db42c7f73fadb6f/raw/63360612791e83957cfdbeb3507dbbe7f3b7ef59/spotify.png" alt="Spotify API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A web API to get a list of music artists, albums, and tracks, directly from the Spotify Data Catalogue.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Check out my &lt;a href="https://dev.to/myogeshchavan97/how-to-create-a-spotify-music-search-&amp;lt;br&amp;gt;%0Aapp-in-react-328m"&gt;this article&lt;/a&gt; to understand how to Create a Spotify Music Search App in React from Scratch.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recipe-api"&gt;
  &lt;/a&gt;
  &lt;a href="https://developer.edamam.com/"&gt;Recipe API&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ex3aGKjJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/0527eabfca2d19681db42c7f73fadb6f/raw/63360612791e83957cfdbeb3507dbbe7f3b7ef59/recipe_api.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ex3aGKjJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/0527eabfca2d19681db42c7f73fadb6f/raw/63360612791e83957cfdbeb3507dbbe7f3b7ef59/recipe_api.png" alt="Recipe API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A list of APIs with nutritional analysis, a food database lookup, and recipe searches.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#meal-api"&gt;
  &lt;/a&gt;
  &lt;a href="https://themealdb.com/"&gt;Meal API&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sTznO-g4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/0527eabfca2d19681db42c7f73fadb6f/raw/63360612791e83957cfdbeb3507dbbe7f3b7ef59/meal_api.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sTznO-g4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/0527eabfca2d19681db42c7f73fadb6f/raw/63360612791e83957cfdbeb3507dbbe7f3b7ef59/meal_api.png" alt="Meal API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An amazing API for a list of recipes from around the world.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#marvel-api"&gt;
  &lt;/a&gt;
  &lt;a href="https://developer.marvel.com/"&gt;Marvel API&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kf5OEIuu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/0527eabfca2d19681db42c7f73fadb6f/raw/63360612791e83957cfdbeb3507dbbe7f3b7ef59/marval_api.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kf5OEIuu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/0527eabfca2d19681db42c7f73fadb6f/raw/63360612791e83957cfdbeb3507dbbe7f3b7ef59/marval_api.png" alt="Marval API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;API to access information about Marvel's library of comics.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading!
&lt;/h3&gt;

&lt;p&gt;Check out my recently published &lt;a href="https://master-redux.yogeshchavan.dev/"&gt;Mastering Redux&lt;/a&gt; course.&lt;/p&gt;

&lt;p&gt;In this course, you will learn:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Basic and advanced Redux&lt;/li&gt;
&lt;li&gt;How to manage the complex state of array and objects&lt;/li&gt;
&lt;li&gt;How to use multiple reducers to manage complex redux state&lt;/li&gt;
&lt;li&gt;How to debug Redux application&lt;/li&gt;
&lt;li&gt;How to use Redux in React using react-redux library to make your app reactive.&lt;/li&gt;
&lt;li&gt;How to use redux-thunk library to handle async API calls and much more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and then finally we'll build a complete &lt;a href="https://www.youtube.com/watch?v=2zaPDfCKAvM"&gt;food ordering app&lt;/a&gt; from scratch with stripe integration for accepting payments and deploy it to the production.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3w0DGum"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Taa9-Eif--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/98ae4f4ead57fde8d47fcf7641220b72/raw/c3e4265df4396d639a7938a83bffd570130483b1/banner.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Want to stay up to date with regular content regarding JavaScript, React, Node.js? &lt;a href="https://www.linkedin.com/in/yogesh-chavan97/"&gt;Follow me on LinkedIn&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/myogeshchavan97"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xG4nnUnu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-yellow.png"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>codenewbie</category>
      <category>node</category>
    </item>
    <item>
      <title>MLH INIT - Quick Guide to Participate 🤩 and Win Swag🎁</title>
      <author>Suraj Vishwakarma</author>
      <pubDate>Sat, 26 Jun 2021 07:25:30 +0000</pubDate>
      <link>https://dev.to/basecampxd/mlh-init-quick-guide-to-participate-and-win-swag-cpi</link>
      <guid>https://dev.to/basecampxd/mlh-init-quick-guide-to-participate-and-win-swag-cpi</guid>
      <description>&lt;p&gt;One of the biggest hackathons organizers, MLH is comping up with a global event called MLH INIT.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-mlh-init"&gt;
  &lt;/a&gt;
  What is MLH INIT?
&lt;/h2&gt;

&lt;p&gt;MLH INIT is a weeklong celebration starting on June 27th to July 5th, of hackers from around the world where they come together to hack, learn &amp;amp; have a hell lot of fun 🔥 Complete Daily &amp;amp; Weekly challenges to earn points &amp;amp; climb the leaderboard. Oh, did I mentioned about the exclusive MLH swags &amp;amp; stickers you'll be getting? 😍&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sounds-fun-how-do-i-register-myself"&gt;
  &lt;/a&gt;
  Sounds fun! How do I register myself?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;That's easy! Just follow these steps:&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-register-at-httpshackpacinit"&gt;
  &lt;/a&gt;
  1. Register at &lt;a href="https://hackp.ac/init"&gt;https://hackp.ac/init&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#2-join-the-guild-at-httpsdiscordmlhio"&gt;
  &lt;/a&gt;
  2. Join the Guild at &lt;a href="https://discord.mlh.io/"&gt;https://discord.mlh.io/&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Fill in all the details &amp;amp; Select &lt;strong&gt;&lt;code&gt;Basecamp Community&lt;/code&gt;&lt;/strong&gt; under &lt;strong&gt;Guild Membership&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Joining a guild has a lot of benefits and will also work as your support system if you get stuck in any challenge. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-join-our-discord-at-httpbitlybasecampdiscord"&gt;
  &lt;/a&gt;
  3. Join our Discord at &lt;a href="http://bit.ly/basecamp-discord"&gt;http://bit.ly/basecamp-discord&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Our discord server is one stop shop for all your MLH INIT announcements and a great welcoming community.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-complete-swag-form-at-httpshackpacinitswag"&gt;
  &lt;/a&gt;
  4. Complete Swag form at &lt;a href="https://hackp.ac/INITswag"&gt;https://hackp.ac/INITswag&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;In case you're not interested in swags, feel free to skip this step.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-submit-your-address-httpshackpacaddress"&gt;
  &lt;/a&gt;
  5. Submit your address &lt;a href="https://hackp.ac/address"&gt;https://hackp.ac/address&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Address is required to send you the swags. In case you're not interested in swags, feel free to skip this step.&lt;/p&gt;

&lt;p&gt;In case you get stuck somewhere while registering, let us know by dropping a comment on this blog, we'll help you out.&lt;/p&gt;

&lt;p&gt;Get excited! 🤩 We'll see you there 😉&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>hackathon</category>
      <category>beginners</category>
      <category>javascript</category>
    </item>
    <item>
      <title>MLH INIT - Calling out all the hackers 🤩 Win Swags &amp; Stickers 🎁</title>
      <author>Rishabh Singh ⚡</author>
      <pubDate>Sat, 26 Jun 2021 07:18:17 +0000</pubDate>
      <link>https://dev.to/mindninjax/mlh-init-calling-out-all-the-hackers-win-swags-stickers-4m3e</link>
      <guid>https://dev.to/mindninjax/mlh-init-calling-out-all-the-hackers-win-swags-stickers-4m3e</guid>
      <description>&lt;p&gt;One of the biggest hackathons organizers, MLH is comping up with a global event called MLH INIT.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-mlh-init"&gt;
  &lt;/a&gt;
  What is MLH INIT?
&lt;/h2&gt;

&lt;p&gt;MLH INIT is a weeklong celebration starting on June 27th to July 5th, of hackers from around the world where they come together to hack, learn &amp;amp; have a hell lot of fun 🔥 Complete Daily &amp;amp; Weekly challenges to earn points &amp;amp; climb the leaderboard. Oh, did I mentioned about the exclusive MLH swags &amp;amp; stickers you'll be getting? 😍&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sounds-fun-how-do-i-register-myself"&gt;
  &lt;/a&gt;
  Sounds fun! How do I register myself?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;That's easy! Just follow these steps:&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-register-at-httpshackpacinit"&gt;
  &lt;/a&gt;
  1. Register at &lt;a href="https://hackp.ac/init"&gt;https://hackp.ac/init&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#2-join-the-guild-at-httpsdiscordmlhio"&gt;
  &lt;/a&gt;
  2. Join the Guild at &lt;a href="https://discord.mlh.io/"&gt;https://discord.mlh.io/&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Fill in all the details &amp;amp; Select &lt;strong&gt;&lt;code&gt;Basecamp Community&lt;/code&gt;&lt;/strong&gt; under &lt;strong&gt;Guild Membership&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Joining a guild has a lot of benefits and will also work as your support system if you get stuck in any challenge. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-join-our-discord-at-httpbitlybasecampdiscord"&gt;
  &lt;/a&gt;
  3. Join our Discord at &lt;a href="http://bit.ly/basecamp-discord"&gt;http://bit.ly/basecamp-discord&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Our discord server is one stop shop for all your MLH INIT announcements and a great welcoming community.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-complete-swag-form-at-httpshackpacinitswag"&gt;
  &lt;/a&gt;
  4. Complete Swag form at &lt;a href="https://hackp.ac/INITswag"&gt;https://hackp.ac/INITswag&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;In case you're not interested in swags, feel free to skip this step.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-submit-your-address-httpshackpacaddress"&gt;
  &lt;/a&gt;
  5. Submit your address &lt;a href="https://hackp.ac/address"&gt;https://hackp.ac/address&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Address is required to send you the swags. In case you're not interested in swags, feel free to skip this step.&lt;/p&gt;

&lt;p&gt;In case you get stuck somewhere while registering, let us know by dropping a comment on this blog, we'll help you out.&lt;/p&gt;

&lt;p&gt;Get excited! 🤩 We'll see you there 😉&lt;/p&gt;

</description>
      <category>hackathons</category>
      <category>programming</category>
      <category>swags</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Build your own J.A.R.V.I.S in Python [Full Code + Video] </title>
      <author>The Nerdy Dev</author>
      <pubDate>Sat, 26 Jun 2021 06:39:21 +0000</pubDate>
      <link>https://dev.to/thenerdydev/build-your-own-j-a-r-v-i-s-in-pyhon-full-code-video-4o1b</link>
      <guid>https://dev.to/thenerdydev/build-your-own-j-a-r-v-i-s-in-pyhon-full-code-video-4o1b</guid>
      <description>&lt;p&gt;In this article, we will learn how to create a &lt;strong&gt;Feature Rich Virtual Assistant&lt;/strong&gt; in Python. We will be adding following features to this project : &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-time-reporting"&gt;
  &lt;/a&gt;
  1. Time Reporting
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#2-taking-screenshot"&gt;
  &lt;/a&gt;
  2. Taking Screenshot
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#3-performing-google-search"&gt;
  &lt;/a&gt;
  3. Performing Google Search
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#4-opening-a-specific-website"&gt;
  &lt;/a&gt;
  4. Opening a Specific Website
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#5-searching-on-wikipedia"&gt;
  &lt;/a&gt;
  5. Searching on Wikipedia
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#6-listen-to-jokes"&gt;
  &lt;/a&gt;
  6. Listen to Jokes
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#7-desktop-notifications-for-covid19-statistics"&gt;
  &lt;/a&gt;
  7. Desktop Notifications for COVID-19 Statistics.
&lt;/h3&gt;

&lt;p&gt;Here is the code for the complete project :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;speech_recognition&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;sr&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyttsx3&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;webbrowser&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;wikipedia&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyjokes&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyautogui&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;plyer&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;notification&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bs4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;

&lt;span class="n"&gt;engine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pyttsx3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;voices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;engine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'voices'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;engine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'voice'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;voices&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;input_query&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;recognizer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Recognizer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;sr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Microphone&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'recognition is on....'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;recognizer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pause_threshold&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.7&lt;/span&gt;
        &lt;span class="n"&gt;voice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;recognizer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;recognizer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recognize_google&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;voice&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'this is the query that was made....'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'An exception occurred'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;report_time&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'%I:%M %p'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;speak_va&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transcribed_query&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;engine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;say&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transcribed_query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;engine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;runAndWait&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;make_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;activate_va&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;user_query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;input_query&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'user query ....'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;'time'&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;user_query&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;report_time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"the current time is &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;speak_va&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"the current time is &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="s"&gt;'open website'&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;user_query&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;speak_va&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s"&gt;"Please type the name of the website that you want to open (specify the full url) &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;website_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;website_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;webbrowser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s"&gt;'C:/Program Files (x86)/Google/Chrome/Application/chrome.exe %s'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;website_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;speak_va&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;website_name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; opened."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="s"&gt;'wikipedia'&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;user_query&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;speak_va&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Searching on Wikipedia"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;user_query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user_query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'wikipedia'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;wikipedia&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sentences&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;speak_va&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="s"&gt;'joke'&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;user_query&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;random_joke&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pyjokes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_joke&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random_joke&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;speak_va&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random_joke&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="s"&gt;'screenshot'&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;user_query&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pyautogui&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screenshot&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'screenshot.png'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;speak_va&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Screenshot taken.'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="s"&gt;'search'&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;user_query&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;speak_va&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"What do you want me to search for (please type) ? "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;search_term&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;search_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"https://www.google.com/search?q=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;search_term&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
        &lt;span class="n"&gt;webbrowser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s"&gt;'C:/Program Files (x86)/Google/Chrome/Application/chrome.exe %s'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;search_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;speak_va&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"here are the results for the search term: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;search_term&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="s"&gt;'covid stats'&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;user_query&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;html_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;make_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'https://www.worldometers.info/coronavirus/'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="c1"&gt;# print(html_data)
&lt;/span&gt;      &lt;span class="n"&gt;soup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'html.parser'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;total_global_row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'tr'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'class'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'total_row'&lt;/span&gt;&lt;span class="p"&gt;})[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;total_cases&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;total_global_row&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'td'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;get_text&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="n"&gt;new_cases&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;total_global_row&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'td'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;get_text&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="n"&gt;total_recovered&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;total_global_row&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'td'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;get_text&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'total cases : '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total_cases&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'new cases'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new_cases&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;
      &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'total recovered'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total_recovered&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;notification_message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;" Total cases : &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;total_cases&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt; New cases : &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;new_cases&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt; Total Recovered : &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;total_recovered&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
      &lt;span class="n"&gt;notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;notify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"COVID-19 Statistics"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;notification_message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;speak_va&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"here are the stats for COVID-19"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;activate_va&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#watch-on-youtube"&gt;
  &lt;/a&gt;
  Watch on YouTube
&lt;/h3&gt;

&lt;p&gt;If you want to follow along with me, check the video here : &lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/XWQXMncxg4k"&gt;
&lt;/iframe&gt;
 &lt;/p&gt;




&lt;p&gt;Follow me on:&lt;br&gt;
👉 Twitter: &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt;&lt;br&gt;
👉 Instagram: &lt;a href="https://instagram.com/thenerdydev"&gt;https://instagram.com/thenerdydev&lt;/a&gt;&lt;br&gt;
👉 YouTube: &lt;a href="https://youtube.com/thenerdydev"&gt;https://youtube.com/thenerdydev&lt;/a&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>python</category>
      <category>programming</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Build a social media website with Next JS, TailwindCss and Firebase in 8 days</title>
      <author>Naman vyas</author>
      <pubDate>Sat, 26 Jun 2021 06:34:16 +0000</pubDate>
      <link>https://dev.to/namanvyas/build-a-social-media-website-with-next-js-tailwindcss-and-firebase-in-8-days-2j65</link>
      <guid>https://dev.to/namanvyas/build-a-social-media-website-with-next-js-tailwindcss-and-firebase-in-8-days-2j65</guid>
      <description>&lt;p&gt;Hello Everyone,&lt;/p&gt;

&lt;p&gt;So around one month ago i created a simple social media site because i was bored and after publishing i got a good response by many peoples and 100+ users registered on website.&lt;/p&gt;

&lt;p&gt;So i thought why don't update and make a proper website. Also it's a good project for my resume so 8 days ago i started creating this project called &lt;strong&gt;Noob&lt;/strong&gt; and today I'm gonna make that project public so check it out and write your review :)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Website is still in development, Working on&lt;/strong&gt;&lt;br&gt;
+Comment System&lt;br&gt;
+Follow System&lt;br&gt;
+Notification's&lt;/p&gt;

&lt;p&gt;Website Link : &lt;a href="https://noob.study"&gt;noob.study&lt;/a&gt;&lt;br&gt;
Github Link : &lt;a href="https://github.com/NV404/noob"&gt;Github.com/NV404/noob&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/NV404"&gt;
        NV404
      &lt;/a&gt; / &lt;a href="https://github.com/NV404/noob"&gt;
        noob
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Simple Social-Media website build with Next Js, Tailwind css and Firebase
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/a235e1b5fd6730cb0d6fd360668beaf795b8667610d9de3cc24e1bbf928d0956/68747470733a2f2f736f6369616c6966792e6769742e63692f4e563430342f4e6f6f622f696d6167653f6465736372697074696f6e3d31266465736372697074696f6e4564697461626c653d53696d706c65253230536f6369616c2d4d65646961253230776562736974652532306275696c64253230776974682532304e6578742532304a732532432532305461696c77696e64253230637373253230616e64253230466972656261736525323026666f6e743d526f6b6b697474266c616e67756167653d31266c6f676f3d68747470732533412532462532467261772e67697468756275736572636f6e74656e742e636f6d2532464e563430342532466e6f6f622532466d61696e2532467075626c69632532466c6f676f2e706e67266f776e65723d31267061747465726e3d436861726c696525323042726f776e267468656d653d4461726b"&gt;&lt;img src="https://camo.githubusercontent.com/a235e1b5fd6730cb0d6fd360668beaf795b8667610d9de3cc24e1bbf928d0956/68747470733a2f2f736f6369616c6966792e6769742e63692f4e563430342f4e6f6f622f696d6167653f6465736372697074696f6e3d31266465736372697074696f6e4564697461626c653d53696d706c65253230536f6369616c2d4d65646961253230776562736974652532306275696c64253230776974682532304e6578742532304a732532432532305461696c77696e64253230637373253230616e64253230466972656261736525323026666f6e743d526f6b6b697474266c616e67756167653d31266c6f676f3d68747470732533412532462532467261772e67697468756275736572636f6e74656e742e636f6d2532464e563430342532466e6f6f622532466d61696e2532467075626c69632532466c6f676f2e706e67266f776e65723d31267061747465726e3d436861726c696525323042726f776e267468656d653d4461726b" alt="noob"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
How to get started? &lt;/h2&gt; 
&lt;p&gt;You can refer to the following articles on &lt;strong&gt;&lt;em&gt;basics of Git and Github and also contact the Project Mentors, in case you are stuck&lt;/em&gt;&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://help.github.com/en/github/getting-started-with-github/fork-a-repo"&gt;Forking a Repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/en/desktop/contributing-to-projects/creating-a-pull-request"&gt;Cloning a Repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://opensource.com/article/19/7/create-pull-request-github" rel="nofollow"&gt;How to create a Pull Request&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://towardsdatascience.com/getting-started-with-git-and-github-6fcd0f2d4ac6" rel="nofollow"&gt;Getting started with Git and GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Running locally in development mode&lt;/h2&gt;
&lt;p&gt;To get started, just clone the repository and run &lt;code&gt;npm install &amp;amp;&amp;amp; npm run dev&lt;/code&gt;:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;git clone https://github.com/NV404/Emote.git
npm install
npm run dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: If you are running on Windows run install --noptional flag (i.e. &lt;code&gt;npm install --no-optional&lt;/code&gt;) which will skip installing fsevents.&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/NV404/noob"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;&lt;strong&gt;Share Your Thoughts.&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Feel free to contribute.&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Star the Repo If you like&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>nextjs</category>
      <category>tailwindcss</category>
      <category>firebase</category>
    </item>
    <item>
      <title>🤔How to avoid stress during coding? </title>
      <author>Chetan Atrawalkar👉CA.</author>
      <pubDate>Sat, 26 Jun 2021 06:27:44 +0000</pubDate>
      <link>https://dev.to/chetan_atrawalkar/how-to-avoid-stress-during-coding-56f1</link>
      <guid>https://dev.to/chetan_atrawalkar/how-to-avoid-stress-during-coding-56f1</guid>
      <description>&lt;p&gt;&lt;strong&gt;Do you want to know how to dealing with stress while coding?&lt;/strong&gt;&lt;br&gt;
Here's some tips to do when you're feeling stressful and make mood relax.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Do Some Light Stretching&lt;/strong&gt;&lt;br&gt;
Stretching can be an effective strategy for preventing and alleviating stress. One way that it does so is by lengthening the muscles to relieve tension. Most of us experience a good deal of stress in our daily lives, especially us software developers during coding time. There never seems to be enough time in the day! And that stress builds up without our realizing it, creating physical and mental stiffness. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6KmLDmPf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/chetan-ca/image/upload/v1624679969/Dev/1_vsrnvf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6KmLDmPf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/chetan-ca/image/upload/v1624679969/Dev/1_vsrnvf.png" alt="stretching"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;2. Step Outside And Explore Nature&lt;/strong&gt;&lt;br&gt;
Being in nature, or even viewing scenes of nature, reduces anger, fear, and stress and increases pleasant feelings. Exposure to nature not only makes you feel better emotionally, it contributes to your physical wellbeing, reducing blood pressure, heart rate, muscle tension, and the production of stress hormones. It may even reduce mortality, according to scientists such as public health researchers.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vA4lcFfA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/chetan-ca/image/upload/v1624679969/Dev/2_kfpryp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vA4lcFfA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/chetan-ca/image/upload/v1624679969/Dev/2_kfpryp.png" alt="Nature"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;3. Play Your Favourite Video Games&lt;/strong&gt;&lt;br&gt;
Video games are engaging and enjoyable, which reduces stress. Gaming results in dopamine secretion, which makes you feel good. Video games present a challenge and reward you for overcoming it, which leads to feelings of competence. Gaming can create a flow state, which is similar to meditation. Video games give you instant rewards, which help to reduce the stress of achieving long term goals.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7iIghVXD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/chetan-ca/image/upload/v1624679969/Dev/3_xmjbqv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7iIghVXD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/chetan-ca/image/upload/v1624679969/Dev/3_xmjbqv.png" alt="Video Games"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;4. Call A Family Members Or Friends&lt;/strong&gt;&lt;br&gt;
When you’re feeling stressed, take a break to call a friend or your family member and talk about your problems. Good relationships with friends and loved ones are important to any healthy lifestyle. They’re especially important when you’re under a lot of stress. A reassuring voice, even for a minute, can put everything in perspective.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SiceaKYL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/chetan-ca/image/upload/v1624679968/Dev/4_qlpisd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SiceaKYL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/chetan-ca/image/upload/v1624679968/Dev/4_qlpisd.png" alt="call a friend"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;5. Read A Book That Inspires You&lt;/strong&gt;&lt;br&gt;
Research has shown that reading fiction is more effective at reducing stress than listening to music, sipping tea, and taking a walk. In fact, stress levels were shown to be reduced by 68 percent after reading. While your brain is engaged in the story, your heart rate slows down and muscles relax. Because there is so much work for your brain to do, reading is a very effective way to focus your energy and improve your concentration.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wHXE5JHH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/chetan-ca/image/upload/v1624679968/Dev/5_j2yqkh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wHXE5JHH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/chetan-ca/image/upload/v1624679968/Dev/5_j2yqkh.png" alt="Read book"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;6. Meet Up With Your Best Friend&lt;/strong&gt;&lt;br&gt;
During stressful times, being around a best friend decreases levels of the stress hormones. Having good friends and a strong social support network can relieve stress. One study published in the Annals of Behavioral Medicine found that people who discussed difficult times in their lives had a lower pulse and blood pressure when they had a friend by their side.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zaoqJI_r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/chetan-ca/image/upload/v1624679968/Dev/6_u3kzbf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zaoqJI_r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/chetan-ca/image/upload/v1624679968/Dev/6_u3kzbf.png" alt="Meet Up With friend"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;7. Eat Your Favourite Snacks&lt;/strong&gt;&lt;br&gt;
Most of time developers continuously write codes and feel stressful, so this time take a break and eat a favourite snacks or stress relief food. While there are many ways to cope with stress, one strategy is to eat stress-fighting foods. Like Chocolate, nuts, yogurt, fatty fish, banana, carrots etc.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y737uV8J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/chetan-ca/image/upload/v1624679968/Dev/7_cbptyh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y737uV8J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/chetan-ca/image/upload/v1624679968/Dev/7_cbptyh.png" alt="food"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope you like this tips please drop your comments about your thoughts and suggest more tips if you know.&lt;br&gt;
For more content follow me on &lt;br&gt;
Instagram &lt;a class="mentioned-user" href="https://dev.to/chetan"&gt;@chetan&lt;/a&gt;
.fullstack&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>career</category>
    </item>
    <item>
      <title>Create Promises with Timeout Error in Typescript</title>
      <author>Nikos Anifantis</author>
      <pubDate>Sat, 26 Jun 2021 06:23:21 +0000</pubDate>
      <link>https://dev.to/nikosanif/create-promises-with-timeout-error-in-typescript-fmm</link>
      <guid>https://dev.to/nikosanif/create-promises-with-timeout-error-in-typescript-fmm</guid>
      <description>&lt;p&gt;&lt;sup&gt;&lt;em&gt;Cover Photo by &lt;a href="https://unsplash.com/@macroman?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Immo Wegmann&lt;/a&gt; on &lt;a href="https://unsplash.com/"&gt;Unsplash&lt;/a&gt;.&lt;/em&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-problem-thinking"&gt;
  &lt;/a&gt;
  The Problem 🤔
&lt;/h2&gt;

&lt;p&gt;Sometimes we create promises that take too long to finish and we don't want to wait. For example, if we want to make a request and the response takes 20 seconds to finish and for any reason we may want to throw an error in the first 5 seconds and proceed to the next code block.&lt;/p&gt;

&lt;p&gt;In this article, we will see how to implement a promise which throws an error after a specific time span. It supports typings with the power of Typescript and accepts a custom error to be thrown when the time comes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementation-rocket"&gt;
  &lt;/a&gt;
  Implementation 🚀
&lt;/h2&gt;

&lt;p&gt;First of all, we create a new promise that rejects an error after a time span in milliseconds. The return type of the timeout promise is &lt;code&gt;never&lt;/code&gt; which represents the type of values that never occur. For instance, &lt;code&gt;never&lt;/code&gt; is the return type for a function expression or an arrow function expression that always throws an exception or one that never returns.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// create a promise that rejects in milliseconds&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;never&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next step is to use &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/race"&gt;Promise.race()&lt;/a&gt; which returns a &lt;code&gt;Promise&lt;/code&gt; that fulfills or rejects as soon as one of the promises in an iterable fulfills or rejects, with the value or reason from that promise. Here you can see that we have used &lt;code&gt;&amp;lt;T&amp;gt;&lt;/code&gt; generic type that it will be defined in our final function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;race&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;anyPromise&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;anyOtherPromise&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Great, we saw all code blocks, let's see the full implementation below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;promiseWithTimeout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;timeoutError&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Promise timed out&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// create a promise that rejects in milliseconds&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;never&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="c1"&gt;// returns a race between timeout and the passed promise&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;race&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, we have created a function that accepts the following arguments:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;promise&lt;/code&gt;: our actual promise&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ms&lt;/code&gt;: the maximum time in milliseconds which we want to wait&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;timeoutError&lt;/code&gt;: (optional) we may pass a custom error to throw after timeout&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;You can find the final source code in stackblitz:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://stackblitz.com/edit/promise-with-timeout-rwt8ye?embed=1&amp;amp;&amp;amp;" width="100%" height="500"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion-whitecheckmark"&gt;
  &lt;/a&gt;
  Conclusion ✅
&lt;/h2&gt;

&lt;p&gt;Hooray, we made it to the end! I hope you enjoyed this post and do not wait for time consuming promises any more 😆.&lt;/p&gt;

&lt;p&gt;Please support this article with your ❤️ 🦄 🔖 to help it spread to a wider audience. 🙏&lt;/p&gt;

&lt;p&gt;Also, don’t hesitate to contact me if you have any questions leaving here your comments or Twitter DMs &lt;a href="https://twitter.com/nikosanif"&gt;@nikosanif&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>javascript</category>
      <category>node</category>
      <category>learning</category>
    </item>
    <item>
      <title>You don't have to type all your manage.py or django-admin commands by hand anymore! Here's Django command auto complete hack</title>
      <author>Ratul Roy</author>
      <pubDate>Sat, 26 Jun 2021 04:49:35 +0000</pubDate>
      <link>https://dev.to/phase_seven/you-don-t-have-to-type-all-your-manage-py-or-django-admin-commands-by-hand-anymore-here-s-django-command-auto-complete-hack-2ife</link>
      <guid>https://dev.to/phase_seven/you-don-t-have-to-type-all-your-manage-py-or-django-admin-commands-by-hand-anymore-here-s-django-command-auto-complete-hack-2ife</guid>
      <description>&lt;p&gt;If you're like me then you love the terminal and everything about it. One thing that make the terminal experiences smooth is the &lt;code&gt;Tab&lt;/code&gt; button autocomplete. Writing recognizable amount of the command or it's parameters and hitting &lt;code&gt;Tab&lt;/code&gt; saves me a lot of time. But in the case of django I had to spell out &lt;code&gt;runserver&lt;/code&gt; or &lt;code&gt;makemigrations&lt;/code&gt; every time I initiated a dev server.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RjPVa1v0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ow5ys9i5cscng6pag0u.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RjPVa1v0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ow5ys9i5cscng6pag0u.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
So I've enable Django commands auto complete  and here's how you can do it too.&lt;br&gt;
open up your &lt;code&gt;.bashrc&lt;/code&gt; file with your favorite text editor. You'll find it at &lt;code&gt;~/.bashrc&lt;/code&gt;. Then add the following at the end of your file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Django autocomplete start&lt;/span&gt;
_django_completion&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;COMPREPLY&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt; &lt;span class="nv"&gt;COMP_WORDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;COMP_WORDS&lt;/span&gt;&lt;span class="p"&gt;[*]&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
                   &lt;span class="nv"&gt;COMP_CWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$COMP_CWORD&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
                   &lt;span class="nv"&gt;DJANGO_AUTO_COMPLETE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1 &lt;span class="nv"&gt;$1&lt;/span&gt; &lt;span class="si"&gt;)&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;complete&lt;/span&gt; &lt;span class="nt"&gt;-F&lt;/span&gt; _django_completion &lt;span class="nt"&gt;-o&lt;/span&gt; default manage.py django-admin

_python_django_completion&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;COMP_CWORD&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt; &lt;span class="nt"&gt;-ge&lt;/span&gt; 2 &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then
        &lt;/span&gt;&lt;span class="nb"&gt;local &lt;/span&gt;&lt;span class="nv"&gt;PYTHON_EXE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;COMP_WORDS&lt;/span&gt;&lt;span class="p"&gt;[0]##*/&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$PYTHON_EXE&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; | &lt;span class="nb"&gt;grep&lt;/span&gt; &lt;span class="nt"&gt;-qE&lt;/span&gt; &lt;span class="s2"&gt;"python([3-9]&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="s2"&gt;[0-9])?"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then
            &lt;/span&gt;&lt;span class="nb"&gt;local &lt;/span&gt;&lt;span class="nv"&gt;PYTHON_SCRIPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;COMP_WORDS&lt;/span&gt;&lt;span class="p"&gt;[1]##*/&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;if &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$PYTHON_SCRIPT&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; | &lt;span class="nb"&gt;grep&lt;/span&gt; &lt;span class="nt"&gt;-qE&lt;/span&gt; &lt;span class="s2"&gt;"manage&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="s2"&gt;py|django-admin"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then
                &lt;/span&gt;&lt;span class="nv"&gt;COMPREPLY&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt; &lt;span class="nv"&gt;COMP_WORDS&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;COMP_WORDS&lt;/span&gt;&lt;span class="p"&gt;[*]&lt;/span&gt;:1&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;
                               &lt;span class="nv"&gt;COMP_CWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$((&lt;/span&gt; COMP_CWORD-1 &lt;span class="k"&gt;))&lt;/span&gt;
                               &lt;span class="nv"&gt;DJANGO_AUTO_COMPLETE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1 &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;COMP_WORDS&lt;/span&gt;&lt;span class="p"&gt;[*]&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt; &lt;span class="si"&gt;)&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;fi
        fi
    fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# Support for multiple interpreters.&lt;/span&gt;
&lt;span class="nb"&gt;unset &lt;/span&gt;pythons
&lt;span class="k"&gt;if &lt;/span&gt;&lt;span class="nb"&gt;command&lt;/span&gt; &lt;span class="nt"&gt;-v&lt;/span&gt; whereis &amp;amp;&amp;gt;/dev/null&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then
    &lt;/span&gt;&lt;span class="nv"&gt;python_interpreters&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;whereis python | &lt;span class="nb"&gt;cut&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s2"&gt;" "&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt; 2-&lt;span class="si"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for &lt;/span&gt;python &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$python_interpreters&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
        &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$python&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="k"&gt;*&lt;/span&gt;&lt;span class="nt"&gt;-config&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;pythons&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;pythons&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="p"&gt;##*/&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
    &lt;span class="k"&gt;done
    &lt;/span&gt;&lt;span class="nb"&gt;unset &lt;/span&gt;python_interpreters
    &lt;span class="nv"&gt;pythons&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$pythons&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; | &lt;span class="nb"&gt;tr&lt;/span&gt; &lt;span class="s2"&gt;" "&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; | &lt;span class="nb"&gt;sort&lt;/span&gt; &lt;span class="nt"&gt;-u&lt;/span&gt; | &lt;span class="nb"&gt;tr&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="s2"&gt;" "&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else
    &lt;/span&gt;&lt;span class="nv"&gt;pythons&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;python
&lt;span class="k"&gt;fi

&lt;/span&gt;&lt;span class="nb"&gt;complete&lt;/span&gt; &lt;span class="nt"&gt;-F&lt;/span&gt; _python_django_completion &lt;span class="nt"&gt;-o&lt;/span&gt; default &lt;span class="nv"&gt;$pythons&lt;/span&gt;
&lt;span class="nb"&gt;unset &lt;/span&gt;pythons

&lt;span class="c"&gt;# Django autocomplete end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Save the file and you're all done! And yes it was THIS EASY! To work at your already opened terminal just type &lt;code&gt;reset&lt;/code&gt; and enter. Or &lt;code&gt;source ~/.bashrc&lt;/code&gt; would do the trick too!&lt;/p&gt;

</description>
      <category>python</category>
      <category>django</category>
      <category>bash</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Linked Lists Questions: Add Two Numbers as LinkedList</title>
      <author>Kathan Vakharia</author>
      <pubDate>Sat, 26 Jun 2021 04:28:29 +0000</pubDate>
      <link>https://dev.to/kathanvakharia/linked-lists-questions-add-two-numbers-as-linkedlist-379o</link>
      <guid>https://dev.to/kathanvakharia/linked-lists-questions-add-two-numbers-as-linkedlist-379o</guid>
      <description>&lt;p&gt;In this series of posts, I will discuss coding questions on the &lt;code&gt;LinkedList&lt;/code&gt; Data structure. &lt;br&gt;
The posts in this series will be organized in the following way,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Question Link ❓&lt;/li&gt;
&lt;li&gt;Possible Explanation 📝&lt;/li&gt;
&lt;li&gt;Documented C++ Code 🧹&lt;/li&gt;
&lt;li&gt;Time and Space Complexity Analysis ⌛🌌&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#the-question"&gt;
  &lt;/a&gt;
  The Question
&lt;/h2&gt;

&lt;p&gt;You are given two &lt;strong&gt;non-empty&lt;/strong&gt; linked lists representing two non-negative integers. The digits are stored in &lt;strong&gt;reverse&lt;/strong&gt; order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://leetcode.com/problems/add-two-numbers/#"&gt;https://leetcode.com/problems/add-two-numbers/#&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 Give yourself atleast 15-20 mins to figure out the solution :)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#explanation"&gt;
  &lt;/a&gt;
  Explanation
&lt;/h2&gt;

&lt;p&gt;Visualize how you used to do addition in your elementary school.&lt;/p&gt;

&lt;p&gt;First create a dummynode whose &lt;code&gt;next&lt;/code&gt; pointer will hold our resulting linkedlist. Make a &lt;code&gt;temp&lt;/code&gt; pointer point to it. (it will be used for appending the resulting nodes)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;📒 The resulting linkedlist is also in reversed order&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then iterate through both the list, untill we reach the end in &lt;strong&gt;both&lt;/strong&gt; the lists and there's no &lt;em&gt;carry&lt;/em&gt; left.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;At every iteration, perform the arithmetic that we do while adding digits and calculate the resulting digit. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a newnode with value of resulting digit and append it to the end of our resulting linkedlist. (Notice the usecase of modulo operator).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  C++ Code
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#definition-of-linkedlist"&gt;
  &lt;/a&gt;
  Definition of LinkedList
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Definition for singly-linked list.&lt;/span&gt;
&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;ListNode&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;ListNode&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;ListNode&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;nullptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="n"&gt;ListNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;nullptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="n"&gt;ListNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ListNode&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include &amp;lt;bits/stdc++.h&amp;gt;
#include "../linkedlist.h"
&lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/*
-Time:O(max(n1, n2))
-Space:O(max(n1,n2))
*/&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="c1"&gt;//! Here we have to return the reversed list only&lt;/span&gt;
    &lt;span class="n"&gt;ListNode&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;addTwoNumbers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ListNode&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ListNode&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;l2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="n"&gt;ListNode&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ListNode&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;ListNode&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;//starting carry is zero&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;carry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;//go through both lists and create a new node untill&lt;/span&gt;
        &lt;span class="c1"&gt;//nodes exist in any of the lists or carry is 1&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nb"&gt;nullptr&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;l2&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nb"&gt;nullptr&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;carry&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;

            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nb"&gt;nullptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="n"&gt;l1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l2&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nb"&gt;nullptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;l2&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="n"&gt;l2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;l2&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;carry&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;carry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//updating carry for next digit sum&lt;/span&gt;

            &lt;span class="c1"&gt;//note: We take modulo with 10&lt;/span&gt;
            &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ListNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#complexity-analysis"&gt;
  &lt;/a&gt;
  Complexity Analysis
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;n1&lt;/em&gt; and &lt;em&gt;n2&lt;/em&gt; are sizes of given linkedlists. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#time-complexity-omaxn1-n2"&gt;
  &lt;/a&gt;
  Time Complexity: O(max(n1, n2))
&lt;/h3&gt;

&lt;p&gt;Since we have to travel both the lists completely.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#space-complexity-omaxn1-n2"&gt;
  &lt;/a&gt;
  Space Complexity: O(max(n1, n2))
&lt;/h3&gt;

&lt;p&gt;Same reason as above. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;🔍Concretely both complexities will be &lt;strong&gt;O(max(n1, n2) + 1)&lt;/strong&gt; by taking the end-carry into account but asymptotically, it doesn't matter.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>algorithms</category>
      <category>coding</category>
      <category>datastructures</category>
      <category>cpp</category>
    </item>
    <item>
      <title>useEffect - React Hooks Series</title>
      <author>Pratap Sharma</author>
      <pubDate>Sat, 26 Jun 2021 04:24:25 +0000</pubDate>
      <link>https://dev.to/pratap2210/useeffect-react-hooks-series-3agd</link>
      <guid>https://dev.to/pratap2210/useeffect-react-hooks-series-3agd</guid>
      <description>&lt;p&gt;Welcome back to the series of &lt;strong&gt;React Hooks&lt;/strong&gt;. In part one of the series, I wrote about the useState react hook.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Series path&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pratapsharma.in/use-state-react-hook"&gt;useState&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;useEffect&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-raw-useeffect-endraw-hook"&gt;
  &lt;/a&gt;
  What is &lt;code&gt;useEffect&lt;/code&gt; hook?
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;useEffect hook&lt;/code&gt; lets you perform side effects in functional components.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#few-examples-of-side-effects"&gt;
  &lt;/a&gt;
  Few examples of side effects
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Data fetching&lt;/li&gt;
&lt;li&gt;Setting up a subscription&lt;/li&gt;
&lt;li&gt;Manually changing the DOM in React&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are familiar with &lt;code&gt;React class lifecycle&lt;/code&gt; methods, you can think of &lt;code&gt;useEffect hook&lt;/code&gt; as &lt;code&gt;componentDidMount&lt;/code&gt;, &lt;code&gt;componentDidUpdate&lt;/code&gt; and &lt;code&gt;componentWillUnmount&lt;/code&gt; combined.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-does-raw-useeffect-endraw-hook-do"&gt;
  &lt;/a&gt;
  What does &lt;code&gt;useEffect&lt;/code&gt; hook do?
&lt;/h2&gt;

&lt;p&gt;By using this &lt;code&gt;hook&lt;/code&gt;, you let React know that your component needs to perform something &lt;strong&gt;after rendering&lt;/strong&gt; of the component. React will remember the function which you passed and react call it &lt;strong&gt;after performing the DOM updates&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In this &lt;em&gt;effect&lt;/em&gt; we can do many things like setting document title, fetch some data from an API, setting event listeners.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#does-useeffect-run-after-every-rerender"&gt;
  &lt;/a&gt;
  Does useEffect run after every re-render?
&lt;/h2&gt;

&lt;p&gt;Yes! By default, the effect runs both after the first render and after every update of the component. Rather than thinking in terms of &lt;strong&gt;mounting&lt;/strong&gt; and &lt;strong&gt;updating&lt;/strong&gt;, you might find it simpler to think that &lt;strong&gt;effects&lt;/strong&gt; happen &lt;strong&gt;after render&lt;/strong&gt;. React &lt;strong&gt;guarantees&lt;/strong&gt; the DOM has been updated by the time it runs the effects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h2&gt;

&lt;p&gt;Let's change the document title for better understanding.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-class-component"&gt;
  &lt;/a&gt;
  Using class component
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ExampleComponent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//After rendering&lt;/span&gt;
  &lt;span class="nx"&gt;componentDidMount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Updating the title in componentDidMount&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;//After updating&lt;/span&gt;
  &lt;span class="nx"&gt;componentDidMount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Updating the title in componentDidMount&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Setting the title&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;ExampleComponent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#using-functional-component"&gt;
  &lt;/a&gt;
  Using functional component
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ExampleComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Setting title using useEffect&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Setting the title using useEffect hook&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In &lt;strong&gt;function component&lt;/strong&gt;, you have to define one &lt;strong&gt;useEffect&lt;/strong&gt; function instead of &lt;strong&gt;componentDidMount&lt;/strong&gt; and &lt;strong&gt;componentDidUpdate&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-deeper"&gt;
  &lt;/a&gt;
  Getting deeper
&lt;/h2&gt;

&lt;p&gt;Now we know what &lt;strong&gt;useEffect&lt;/strong&gt; is. Let us try to understand it deeper. &lt;strong&gt;useEffect&lt;/strong&gt; function accepts two-parameter. i) A function which gets called on every update/re-rendering. ii) An array of dependencies value on which the function has to get called.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The useEffect below will always get called on rendering and updating of the component.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;I will be called each time the component renders and re-renders&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;The useEffect below will get called only once. i.e. the first time it renders. It is equivalent to &lt;strong&gt;componentDidMount&lt;/strong&gt;. The second parameter &lt;code&gt;[]&lt;/code&gt; is called the dependencies array. An empty array means no dependency.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;I will be called only once when the component is mounted&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;The useEffect below will get called each time the value of &lt;strong&gt;name&lt;/strong&gt; is changed. It is like &lt;strong&gt;componentDidUpdate&lt;/strong&gt;.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;I will be called only once when the component is mounted&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;If we want to do any clean-ups before the component is unmounted.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// some tasks&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;I do cleanups&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;will first run on component mount then, will run before useEffect and lastly before unmounting&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping up
&lt;/h2&gt;

&lt;p&gt;I want to thank you for going through the part two of my React Hooks series, in case you missed part one please check it out here(hyperlink)&lt;/p&gt;

&lt;p&gt;If you have any questions, comments, corrections I would look forward to it. Thank you for making it this far.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Series path&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pratapsharma.in/use-state-react-hook"&gt;useState&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;useEffect&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;💌 If you'd like to receive more tutorials in your inbox, you can sign up for the newsletter &lt;a href="https://pratap.substack.com"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Custom Check Box | Css</title>
      <author>Prince Jaiswal</author>
      <pubDate>Sat, 26 Jun 2021 03:46:57 +0000</pubDate>
      <link>https://dev.to/princejaiswal/custom-check-box-css-5fib</link>
      <guid>https://dev.to/princejaiswal/custom-check-box-css-5fib</guid>
      <description>&lt;p&gt;Made A Custom CheckBox With Css &amp;amp; Used Jquery , BootStrap FrameWork .&lt;/p&gt;

&lt;p&gt;Demo - &lt;a href="https://knolcoder.github.io/custom_checkbox/"&gt;See Demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download - &lt;a href="https://github.com/knolcoder/custom_checkbox.git"&gt;Download&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>webdev</category>
    </item>
    <item>
      <title>50+ Shortcut links for Developers productivity</title>
      <author>programmer-list</author>
      <pubDate>Sat, 26 Jun 2021 02:25:31 +0000</pubDate>
      <link>https://dev.to/programmerlist/50-shortcut-links-for-developers-productivity-19pm</link>
      <guid>https://dev.to/programmerlist/50-shortcut-links-for-developers-productivity-19pm</guid>
      <description>&lt;p&gt;A designer's work process is loaded with expected digressions, interferences and setting switches. Yet, the idea of programming makes getting to and keeping up continuous stream states basic. Fortunately, a ton advanced instruments can assist designers with doing that, attempting to secure their space for profound thought and make more useful work processes. Here's our pick of the best usefulness devices for engineers starting at 2021.&lt;/p&gt;

&lt;p&gt;So here in this post we're giving you 52 shortcut links to most of the website. You can book mark it for future use. &lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://react.new"&gt;http://react.new&lt;/a&gt; - React project inside Sandbox&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://ts.new"&gt;http://ts.new&lt;/a&gt; - Typescript project inside Sandbox&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://js.new"&gt;http://js.new&lt;/a&gt; - JavaScript project inside Sandbox&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://vue.new"&gt;http://vue.new&lt;/a&gt; - Vue project inside Sandbox&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://ng.new"&gt;http://ng.new&lt;/a&gt; - Angular project inside Sandbox&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://svelte.new"&gt;https://svelte.new&lt;/a&gt; - New svelte project inside Sandbox&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://ts.new"&gt;https://ts.new&lt;/a&gt; - New typescript project inside sandbox&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://repl.new"&gt;https://repl.new&lt;/a&gt; - Create a new bash script with repl&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://deploy.new"&gt;http://deploy.new&lt;/a&gt; -Deply new vercel project from Repo or template&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://discord.new"&gt;http://discord.new&lt;/a&gt; - New discord server&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://glitch.new"&gt;http://glitch.new&lt;/a&gt; - new glitch project&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://interview.new"&gt;http://interview.new&lt;/a&gt; - New hackerearth interview page&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://repo.new"&gt;http://repo.new&lt;/a&gt; - New github repo&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://gist.new"&gt;http://gist.new&lt;/a&gt; - New github Gist&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://ionic.new"&gt;http://ionic.new&lt;/a&gt; - New ionic project&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://pen.new"&gt;http://pen.new&lt;/a&gt; - New codepen project&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://design.new"&gt;http://design.new&lt;/a&gt; - New canva design&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cards.new"&gt;https://cards.new&lt;/a&gt; - Create new card inside Canva&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://background.new"&gt;https://background.new&lt;/a&gt; - Create Zoom background on Canva&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://link.new"&gt;http://link.new&lt;/a&gt; - New bit.ly Link&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://playlist.new"&gt;http://playlist.new&lt;/a&gt; - New spotify playlist&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://invoice.new"&gt;http://invoice.new&lt;/a&gt; - New stripe invoice&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://notion.new"&gt;http://notion.new&lt;/a&gt; - New Notion page&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://flutter.new"&gt;http://flutter.new&lt;/a&gt; - New flutter project in Dartpad&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://doc.new"&gt;http://doc.new&lt;/a&gt; - New google document&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://sheet.new"&gt;http://sheet.new&lt;/a&gt; - New google sheet&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://slide.new"&gt;http://slide.new&lt;/a&gt; - New google slide&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://form.new"&gt;http://form.new&lt;/a&gt; - New google form&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://meet.new"&gt;http://meet.new&lt;/a&gt; - New google meeting&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://cal.new"&gt;http://cal.new&lt;/a&gt; - New google calender event&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://keep.new"&gt;http://keep.new&lt;/a&gt; - New google keep note&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hn.new"&gt;https://hn.new&lt;/a&gt; - Create new hashnode blogpost&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://story.new"&gt;https://story.new&lt;/a&gt; - Create new medium blogpost&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://sell.new"&gt;https://sell.new&lt;/a&gt; - Sell your product&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://task.new"&gt;https://task.new&lt;/a&gt; - New asana task&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://prezi.new"&gt;https://prezi.new&lt;/a&gt; - beautiful presentation with Prezi&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://shopify.new"&gt;https://shopify.new&lt;/a&gt; - New shopify store with one click&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://resume.new"&gt;https://resume.new&lt;/a&gt; - Create new resume in second&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://buffer.new"&gt;https://buffer.new&lt;/a&gt; - New buffer projects&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://landingpage.new"&gt;https://landingpage.new&lt;/a&gt; - Create and design new landing page for your project&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://jobs.new"&gt;https://jobs.new&lt;/a&gt; - post new job listing&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://jobs.new"&gt;https://jobs.new&lt;/a&gt; - Find new job&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://try.new"&gt;https://try.new&lt;/a&gt; - Cretae custom QR code&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://re.new"&gt;https://re.new&lt;/a&gt; - Generate new email reponses&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://payement.new"&gt;https://payement.new&lt;/a&gt; - Send payment using stripe&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://product.new"&gt;https://product.new&lt;/a&gt; - Create new product in your stripe catalog&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://blog.new"&gt;https://blog.new&lt;/a&gt; - Create new blog on WP&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://post.new"&gt;https://post.new&lt;/a&gt; - Create new post on WP&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://file.new"&gt;https://file.new&lt;/a&gt; - Create quick note and collaborate with friends&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://code.new"&gt;https://code.new&lt;/a&gt; - Learn to code with realtime interactive coding sessions&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://trello.new"&gt;https://trello.new&lt;/a&gt; - Create a new trello board&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;At times, performing multiple tasks is needed throughout everyday life. For instance, when you are coding, composing reports or doing some exploration. Realizing the right easy routes permits you to effectively discover the tab you need in under a second. &lt;/p&gt;

&lt;p&gt;Its a well known fact that utilizing easy routes makes you more productive at doing certain undertakings on your PC, since you're not superfluously going after a mouse constantly. When you get familiar with the parcel of them, you'll notice a lift to efficiency.&lt;/p&gt;

&lt;p&gt;Thank you for Reading🚀&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
