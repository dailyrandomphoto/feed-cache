<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>React and its Lifecycle Methods Explained</title>
      <author>Gedalya Krycer</author>
      <pubDate>Sun, 20 Dec 2020 09:07:41 +0000</pubDate>
      <link>https://dev.to/gedalyakrycer/react-and-its-lifecycle-methods-explained-1589</link>
      <guid>https://dev.to/gedalyakrycer/react-and-its-lifecycle-methods-explained-1589</guid>
      <description>&lt;h1&gt;
  &lt;a href="#overview" class="anchor"&gt;
  &lt;/a&gt;
  Overview
&lt;/h1&gt;

&lt;p&gt;I started to write this just about Lifecycle Methods but realized that an intro about React might be helpful. &lt;/p&gt;

&lt;p&gt;When I began learning React, I jumped into the syntax without fully understanding the methodologies behind them. So perhaps this will benefit someone else in the same boat. &lt;/p&gt;

&lt;p&gt;While this is by no means an all-inclusive or exhaustive introduction, below are some things I found helpful in understanding this powerful library and it's lifecycle methods.&lt;/p&gt;

&lt;p&gt;Of course, feel free to &lt;a href="#lifecycle"&gt;jump straight to the lifecycle&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;So... what is React? &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#intro-to-react" class="anchor"&gt;
  &lt;/a&gt;
  Intro to React
&lt;/h2&gt;

&lt;p&gt;React, is an amazing front-end JS library that allows you to build super performant single-page applications, with tremendous efficiency. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-singlepage-application" class="anchor"&gt;
  &lt;/a&gt;
  What is a single-page application?
&lt;/h3&gt;

&lt;p&gt;These are web applications that only serve one HTML file. Even if the user can navigate to 5 different pages, filled with loads of content — only one HTML file is provided by the server. (React is not limited to this setup, but it is most known for it.)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-is-that-possible" class="anchor"&gt;
  &lt;/a&gt;
  How is that possible?
&lt;/h3&gt;

&lt;p&gt;This is accomplished by updating the DOM (what you see in the browser) in a continuous and intelligent way, while leveraging JavaScript to write most of the site's code. 1 HTML file and a load of very thoughtful JavaScript makes the website...just...React. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Glad to be the first one to make that joke. 😜)&lt;/em&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ok-but-how-is-that-possible" class="anchor"&gt;
  &lt;/a&gt;
  Ok, but how is THAT possible?
&lt;/h3&gt;

&lt;p&gt;Among other things, React has a few very important tricks up its sleeve.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#jsx"&gt;JSX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#components"&gt;Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#props"&gt;Props&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#state"&gt;State&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vd"&gt;The Virtual DOM&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#jsx" class="anchor"&gt;
  &lt;/a&gt;
  &lt;a&gt;&lt;/a&gt; JSX
&lt;/h4&gt;

&lt;p&gt;JSX is Javascript hybrid language that lets you write HTML, CSS, and JavaScript seamlessly on the same line, with only minor syntax changes. (🤯)  &lt;/p&gt;

&lt;p&gt;React then renders and compiles the JSX into standard HTML/CSS/JS for the browser to read. &lt;/p&gt;

&lt;p&gt;For me personally, JavaScript didn't really click until I started writing JSX and saw the structure and functionality come together...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;section&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;paginationState&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;New Dev Work&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;More Dev Work&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"justify-content-around"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;projects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;project&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;DevProjectCard&lt;/span&gt;
                &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                &lt;span class="na"&gt;img&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;section&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#components" class="anchor"&gt;
  &lt;/a&gt;
  &lt;a&gt;&lt;/a&gt; Components
&lt;/h4&gt;

&lt;p&gt;Components are a way to break up JSX and pure JS (like API calls) into separate files. &lt;em&gt;&lt;a href="https://dev.to/hiowenluke/why-we-should-split-long-code-into-small-functions-or-files-5gjl"&gt;Modularization&lt;/a&gt;&lt;/em&gt; and &lt;em&gt;&lt;a href="https://www.youtube.com/watch?v=VtF6aebWe58"&gt;Separation of Concerns&lt;/a&gt;&lt;/em&gt; are concepts that fit nicely here.&lt;/p&gt;

&lt;p&gt;While the concept of components is not unique to React, it is pretty synonymous with it. The idea is to have many small/lean component files, that each holds a little bit of feature-specific code. These are then combined together, creating more complex layouts. &lt;/p&gt;

&lt;p&gt;The benefit? Components can be reused in multiple places and their styles/functionality can travel with them. This can mean less coding and maintenance in the long run. &lt;/p&gt;

&lt;p&gt;In the example above, the &lt;code&gt;&amp;lt;DevProjectCard /&amp;gt;&lt;/code&gt; block of code was a component. It represents another file that holds code (JSX) on how the Dev Project Card should look and function. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#props" class="anchor"&gt;
  &lt;/a&gt;
  &lt;a&gt;&lt;/a&gt; Props
&lt;/h4&gt;

&lt;p&gt;Now that the application is divided up into bite-sized components, we need a way to pass information between them. This is where Props come in. &lt;/p&gt;

&lt;p&gt;Props take information from a parent component and pass it down to a child component. &lt;/p&gt;

&lt;p&gt;This means children components can focus on just providing structure for information but do not need to worry about &lt;strong&gt;what&lt;/strong&gt; the actual info is. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;(It is important to note that props can only travel down. A child component can't pass information back up to its parent.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In our example, &lt;code&gt;&amp;lt;DevProjectCard /&amp;gt;&lt;/code&gt; provides a way for an image and title to look in some sort of UI card element. But we are using props &lt;code&gt;img={}&lt;/code&gt; and &lt;code&gt;title={}&lt;/code&gt; to pass down what the actual image and title should be. By not hardcoding the information into &lt;code&gt;&amp;lt;DevProjectCard /&amp;gt;&lt;/code&gt;, this component can be used in more places and ways.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;DevProjectCard&lt;/span&gt;
  &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
  &lt;span class="na"&gt;img&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Note: The above example is using a &lt;code&gt;.map()&lt;/code&gt; array method to create multiple &lt;code&gt;&amp;lt;DevProjectCard /&amp;gt;&lt;/code&gt; components, each with unique images and titles. The &lt;code&gt;key={}&lt;/code&gt; is actually not a prop, but a method that is required on dynamically generated mapped lists in React.&lt;/em&gt; &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#state" class="anchor"&gt;
  &lt;/a&gt;
  &lt;a&gt;&lt;/a&gt; State
&lt;/h4&gt;

&lt;p&gt;Another essential way to handle information and functionality in React is by using something called State.&lt;/p&gt;

&lt;p&gt;State lets you temporarily store unique information within a component. As soon as the page is refreshed, the state is removed. But until that point, it is a powerful way to quickly control functionality and content. &lt;/p&gt;

&lt;p&gt;For example, perhaps we have a button that loads more Dev Project Cards to the page. Using state, we can store a value of &lt;code&gt;true&lt;/code&gt; when that button is clicked. &lt;/p&gt;

&lt;p&gt;Then we can reference that state in an HTML headline to dynamically show different text if that state is true or false.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;paginationState&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;New Dev Work&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;More Dev Work&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#virtual-dom" class="anchor"&gt;
  &lt;/a&gt;
  &lt;a&gt;&lt;/a&gt; Virtual DOM
&lt;/h4&gt;

&lt;p&gt;The Virtual DOM is a copy of the real DOM the browser uses. This is where everything we have talked about so far comes together!&lt;/p&gt;

&lt;p&gt;The real DOM is pretty slow to update and when you change something in the layout, the whole page needs to re-paint. &lt;/p&gt;

&lt;p&gt;Instead, React uses this Virtual DOM to compare against the real DOM, seeing if any components have changed. It uses changes in states and props as signals that something is now different.&lt;/p&gt;

&lt;p&gt;If a state and/or prop has changed, React uses the Virtual DOM to only update the component(s) that were affected. This means the real DOM does not need to refresh the entire page if one or two things changed. Again 🤯!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-how-does-it-know-to-do-this" class="anchor"&gt;
  &lt;/a&gt;
  But how does it know to do this?
&lt;/h3&gt;

&lt;p&gt;Ok deep breath...So we write powerful JSX in well-organized components, that control their functionality with state and speak to other components with props — all of which is updated for the user via the Virtual DOM...whew. How does the Virtual DOM know when to check for changes in states and props???&lt;/p&gt;

&lt;p&gt;React checks for these changes at strategic points and these are called Lifecycle Methods. 🎉&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#lifecycle-methods" class="anchor"&gt;
  &lt;/a&gt;
  &lt;a&gt;&lt;/a&gt; Lifecycle Methods
&lt;/h2&gt;

&lt;p&gt;Lifecycle methods are how React compares the current code against the virtual and real DOMs. It dictates what code should be assessed and at what point. &lt;/p&gt;

&lt;p&gt;Before going further it's important to note, that React originally started with using &lt;strong&gt;Class-based&lt;/strong&gt; components. These handle state and pass down props to &lt;strong&gt;Presentation&lt;/strong&gt; (or dumb) components that only display the content. Lifecycle Methods are specifically used in Class-based components.  &lt;/p&gt;

&lt;p&gt;With the release of &lt;code&gt;version 16.8&lt;/code&gt; React introduced a new toolset called &lt;strong&gt;Hooks&lt;/strong&gt;. Hooks allow you to turn presentational components into functional components that have all the power of their class-based counterparts, but with (usually) less code needed. &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;useEffect&lt;/code&gt; hook replaces all lifecycle methods and I will cover it at the end as well. However, many applications still use class-based components, so it is important to understand their lifecycle methods. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#it-is-lifecycle-method-time" class="anchor"&gt;
  &lt;/a&gt;
  It is lifecycle method time!
&lt;/h3&gt;

&lt;p&gt;Below are the three I use the most, but there are more that are less commonly used. In the end, I will include a link to their documentation for further exploration. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#componentdidmount" class="anchor"&gt;
  &lt;/a&gt;
  componentDidMount()
&lt;/h4&gt;

&lt;p&gt;This will execute any code inside of it, directly after a component is mounted in the DOM. One of many use cases for this is making an API call for new data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;componentDidMount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://api.website/users&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#componentdidupdate" class="anchor"&gt;
  &lt;/a&gt;
  componentDidUpdate()
&lt;/h4&gt;

&lt;p&gt;This will execute code directly after a component has been updated through state or props. &lt;/p&gt;

&lt;p&gt;A common example is recalling an API that was set up in &lt;code&gt;componentDidMount()&lt;/code&gt; to see if there is new data. However, this can lead to infinite loops or at least unintentional network calls. &lt;/p&gt;

&lt;p&gt;To prevent this, &lt;code&gt;componentDidUpdate()&lt;/code&gt;provides the optional &lt;code&gt;prevState&lt;/code&gt; and &lt;code&gt;prevProps&lt;/code&gt; arguments to check if the last versions are different. If they are the same, the code won't be run again and nothing will be re-rendered.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;componentDidUpdate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prevProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;prevProps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://api.website/users&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Often times the same code will be run in both methods. &lt;code&gt;componentDidMount()&lt;/code&gt; will set it up and &lt;code&gt;componentDidUpdate&lt;/code&gt; will check for changes. (This is something hooks streamlines.) Because of this, it can be helpful to place the duplicate code into a helper function and call it in both methods.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Funtion is called when component mounts&lt;/span&gt;
&lt;span class="nx"&gt;componentDidMount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fetchUsers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// React will call the function if there is a change&lt;/span&gt;
&lt;span class="nx"&gt;componentDidUpdate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prevProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;prevProps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fetchUsers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Helper Function&lt;/span&gt;
&lt;span class="nx"&gt;fetchUsers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://api.website/users&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#componentwillunmount" class="anchor"&gt;
  &lt;/a&gt;
  componentWillUnmount()
&lt;/h4&gt;

&lt;p&gt;This will call right before a component is unmounted and destroyed. &lt;/p&gt;

&lt;p&gt;It can be used to stop timers and canceling network requests that were first called in &lt;code&gt;componentDidMount()&lt;/code&gt;. This helps prevent memory leakage. &lt;/p&gt;

&lt;p&gt;You never call &lt;code&gt;this.setState()&lt;/code&gt; in this method, because that instance of the component will never be rendered again. This can throw off React from reading the state correctly. &lt;/p&gt;

&lt;p&gt;In the example below we telling Axios to eject some interceptors that were set up to handle global errors.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;componentWillUnmount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;interceptors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;eject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reqInterceptor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;interceptors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;eject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resInterceptor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#hooks-rip-lifecycle-methods" class="anchor"&gt;
  &lt;/a&gt;
  Hooks! (RIP Lifecycle Methods?)
&lt;/h3&gt;

&lt;p&gt;As mentioned, with the release of &lt;code&gt;version 16.8&lt;/code&gt; React introduced &lt;strong&gt;Hooks&lt;/strong&gt;. Class-based components were no longer needed to handle state and updating the Virtual DOM. A new age of coding in React was introduced with functional components and their "import-as-needed" hook counterparts. &lt;/p&gt;

&lt;p&gt;In one block of code, the &lt;code&gt;useEffect&lt;/code&gt; hook replaced the functionality of &lt;code&gt;componentWillMount()&lt;/code&gt;, &lt;code&gt;componentWillUpdate()&lt;/code&gt; and &lt;code&gt;componentWillUnmount()&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#useeffect" class="anchor"&gt;
  &lt;/a&gt;
  useEffect
&lt;/h4&gt;

&lt;p&gt;In its simplest form, &lt;code&gt;useEffect&lt;/code&gt;takes in a call back function and runs on every render, mimicking the &lt;code&gt;componentDidMount()&lt;/code&gt; and &lt;code&gt;componentDidUpdate()&lt;/code&gt; methods. &lt;/p&gt;

&lt;p&gt;Every time the &lt;code&gt;useEffect&lt;/code&gt; runs, it creates a new function behind the scenes, tying it to that particular render.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;This runs everytime the component renders.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;code&gt;useEffect&lt;/code&gt; also takes an array as a second parameter. If left empty this will run its code one time when the component mounts.  (&lt;code&gt;componentDidMount()&lt;/code&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;This runs when the component mounts.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The array can also hold one or more props and state values. React compares the last render to this value(s) and if they haven't changed, will skip the effect.  But if the value(s) have changed to what was last rendered, the effect will run again. (Just like &lt;code&gt;prevState&lt;/code&gt; and &lt;code&gt;prevProps&lt;/code&gt;.)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setUsers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="c1"&gt;// reruns when props updates &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The callback function can also return its own function. This is used to clean up any side effects previously run, to prevent memory leaks. Such as subscribing to a network request. (Just like &lt;code&gt;componentWillUnmount()&lt;/code&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="nx"&gt;setUsers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;interceptors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;eject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reqInterceptor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;code&gt;useEffect&lt;/code&gt; also lets you separate concerns, by having multiple &lt;code&gt;useEffect&lt;/code&gt; hooks on the same component. For example, one handles users being changed on props and the other handles animations being triggered.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setUsers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; 

&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;triggerTitleAnimation&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#you-did-it" class="anchor"&gt;
  &lt;/a&gt;
  You did it! 😄
&lt;/h2&gt;

&lt;p&gt;Nice job sticking through the end. Together we went through what makes React so performant. &lt;/p&gt;

&lt;p&gt;JSX combines HTML, CSS, and JavaScript to make writing code more seamless than ever. Components segment code into separate files and use props to speak to each other. State stores content and can be used to trigger functionality. Together Props and State are used to update the Virtual DOM, which creates a super-fast browsing experience. &lt;/p&gt;

&lt;p&gt;All of this is managed through Lifecycle methods and their modern hook counterpart, the &lt;code&gt;useEffect&lt;/code&gt; hook.&lt;/p&gt;

&lt;p&gt;I hope this has helped clarify how some of React works and enables you to create something cool. Happy coding! 🤓&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#further-reading" class="anchor"&gt;
  &lt;/a&gt;
  Further Reading
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/docs/react-component.html"&gt;React Documentation on Lifecycle Methods&lt;/a&gt;&lt;br&gt;
&lt;a href="https://reactjs.org/docs/hooks-effect.html"&gt;React Documentation on Hooks&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.udemy.com/course/react-the-complete-guide-incl-redux/"&gt;React The Complete Guide&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>lifecycle</category>
    </item>
    <item>
      <title>The Ultimate Beginner’s Guide to GraphQL: Part 2 – Organization, Parameters, more Queries, and Mutations</title>
      <author>The Javascript Ninja</author>
      <pubDate>Sun, 20 Dec 2020 01:49:03 +0000</pubDate>
      <link>https://dev.to/thejavascriptninja/the-ultimate-beginner-s-guide-to-graphql-part-2-organization-parameters-more-queries-and-mutations-42fi</link>
      <guid>https://dev.to/thejavascriptninja/the-ultimate-beginner-s-guide-to-graphql-part-2-organization-parameters-more-queries-and-mutations-42fi</guid>
      <description>&lt;p&gt;Hi everyone! Welcome back to part 2 of &lt;strong&gt;The Ultimate Beginner’s Guide to GraphQL&lt;/strong&gt; tutorial series. Before we start, if you haven’t seen &lt;a href="https://thejavascriptninja.com/the-ultimate-beginners-guide-to-graphql/"&gt;part 1&lt;/a&gt;, you might want to check it out &lt;a href="https://thejavascriptninja.com/the-ultimate-beginners-guide-to-graphql/"&gt;here&lt;/a&gt;. This tutorial will build off the concepts learned in &lt;a href="https://thejavascriptninja.com/the-ultimate-beginners-guide-to-graphql/"&gt;part 1&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With all that said, I wanted to go more in-depth about something I only briefly mentioned in part 1: the GraphQL infrastructure. This is an important part of learning how GraphQL works, and what makes it so awesome.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-graphql-infrastructure" class="anchor"&gt;
  &lt;/a&gt;
  The GraphQL Infrastructure
&lt;/h1&gt;

&lt;p&gt;To get a better understanding of the advantages and disadvantages of GraphQL, I created this handy little infographic:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QDUaOj1C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/thejavascriptninja.com/wp-content/uploads/2020/12/gql-page-001-copy-scaled.jpg%3Fresize%3D768%252C1920%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QDUaOj1C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/thejavascriptninja.com/wp-content/uploads/2020/12/gql-page-001-copy-scaled.jpg%3Fresize%3D768%252C1920%26ssl%3D1" alt="graphql_infographic"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alright! Hopefully that gives you a little insight into the inner workings of GraphQL, and helps you understand some of the operations at a deeper level.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#organizing-the-code" class="anchor"&gt;
  &lt;/a&gt;
  Organizing the Code
&lt;/h1&gt;

&lt;p&gt;Unfortunately, before we get to the fun stuff in this tutorial, we do have to work through the boring stuff. This means working on organizing our code.&lt;/p&gt;

&lt;p&gt;If you don’t remember, we used our standard server code and made some significant changes to the &lt;code&gt;index.js&lt;/code&gt; file in &lt;a href="https://thejavascriptninja.com/the-ultimate-beginners-guide-to-graphql/"&gt;part 1&lt;/a&gt; of the tutorial. I’d recommend reading that part first so you’ll be up-to-date on what we’re doing. After completing part 1, the code in our index.js file should look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const port = process.env.port || 3000;
const express = require('express');
const ejs = require('ejs');
const layouts = require('express-ejs-layouts');
const app = express();

app.set('view engine', 'ejs');
app.use(express.static('public'));
app.use(layouts);

const homeController = require('./controllers/homeController.js');
app.get('/', homeController.renderIndex);

const { gql } = require('apollo-server-express');
const schema = gql`
  type Query {
    getUsers: User
  }
  type User {
    id: Int!
    username: String!
    email: String!
    password: String!
  }
`;

let users = [
  {
    id:1,
    username:'The Javascript Ninja',
    email:'contact@thejavascriptninja.com',
    password:'its-a-secret'
  },
  {
    id:2,
    username:'The Javascript Ninjas Best Friend',
    email:'contact@thejavascriptninja.com',
    password:'its-a-secret'
  },
]

const resolvers = {
  Query: {
    getUsers: _ =&amp;gt; 'Hello World'
  }
}

const { ApolloServer } = require('apollo-server-express');
const serve = new ApolloServer({
  typeDefs: schema,
  resolvers: resolvers,
});
serve.applyMiddleware({ app });

const server = app.listen(port, () =&amp;gt; {
  console.log(`🚀 Server listening on port ${port}`);
});
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;For a full explanation, read &lt;a href="https://thejavascriptninja.com/the-ultimate-beginners-guide-to-graphql/"&gt;part 1&lt;/a&gt;. Otherwise, note that the code above will create a GraphQL server alongside our express server, and define a simple query to execute. Don’t leave yet – read on. We’ll be expanding this database model later in the tutorial.&lt;/p&gt;

&lt;p&gt;Since we’ll be greatly expanding the code in our &lt;code&gt;index.js&lt;/code&gt; file, it might do us some good to split it up between other files. This will reduce the amount of clutter in our main file, and keep our project file organized.&lt;/p&gt;

&lt;p&gt;To organize our code, we can move our &lt;code&gt;schema&lt;/code&gt; and &lt;code&gt;resolvers&lt;/code&gt; objects to separate files. This may seem a little overkill at first, but after we expand them, it will be totally necessary.&lt;/p&gt;

&lt;p&gt;To do this, first, create a &lt;code&gt;models&lt;/code&gt; folder at the root level of your project. We will still want everything in our project to correspond with &lt;a href="https://thejavascriptninja.com/what-is-the-mvc/"&gt;MVC formatting&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Then, in our new &lt;code&gt;models&lt;/code&gt; folder, we’ll create the files &lt;code&gt;schema.js&lt;/code&gt; and &lt;code&gt;resolvers.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Next, in &lt;code&gt;schema.js&lt;/code&gt;, cut and paste the &lt;code&gt;schema&lt;/code&gt; object from index.js:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const { gql } = require('apollo-server-express');
const schema = gql`
  type Query {
    getUsers: User
  }
  type User {
    id: Int!
    username: String!
    email: String!
    password: String!
  }
`;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Then, in &lt;code&gt;resolvers.js&lt;/code&gt;, cut and paste the &lt;code&gt;resolvers&lt;/code&gt; object and &lt;code&gt;users&lt;/code&gt; array from &lt;code&gt;index.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let users = [
  {
    id:1,
    username:'The Javascript Ninja',
    email:'contact@thejavascriptninja.com',
    password:'its-a-secret'
  },
  {
    id:2,
    username:'The Javascript Ninjas Best Friend',
    email:'contact@thejavascriptninja.com',
    password:'its-a-secret'
  },
];

const resolvers = {
  Query: {
    getUsers: _ =&amp;gt; users;
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Then, modify &lt;code&gt;index.js&lt;/code&gt; so it looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const port = process.env.port || 3000;
const express = require('express');
const ejs = require('ejs');
const layouts = require('express-ejs-layouts');
const app = express();

app.set('view engine', 'ejs');
app.use(express.static('public'));
app.use(layouts);

const homeController = require('./controllers/homeController.js');
app.get('/', homeController.renderIndex);

const schema = require('./models/schema.js');
const resolvers = require('./models/resolvers.js');

const { ApolloServer } = require('apollo-server-express');
const serve = new ApolloServer({
  typeDefs: schema,
  resolvers: resolvers,
});
serve.applyMiddleware({ app });

const server = app.listen(port, () =&amp;gt; {
  console.log(`🚀 Server listening on port ${port}`);
});
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Awesome! Now our code is all nice and organized. All that we’ve done above is just sort our &lt;code&gt;resolvers&lt;/code&gt; and &lt;code&gt;schema&lt;/code&gt; objects into modules so they don’t all clutter up the same file.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#writing-more-advanced-queries-with-parameters" class="anchor"&gt;
  &lt;/a&gt;
  Writing More Advanced Queries With Parameters
&lt;/h1&gt;

&lt;p&gt;Alright, now it’s time to work on the meat of GraphQL: querying. Querying is arguably the biggest and most important part of GraphQL (partly because the QL stands for Query Language). But, with all that said, it’s time to focus on writing more advanced query functions. The queries we wrote in part 1 were great, but they couldn’t do much and left a lot to be desired.&lt;/p&gt;

&lt;p&gt;In a realistic situation, your GraphQL query is probably going to return a lot of data. There are multiple reasons why this could be bad:&lt;/p&gt;

&lt;p&gt;• It’s hard to comprehend&lt;br&gt;
• It will drastically slow down the site&lt;br&gt;
• It’s impossible to filter through or perform operations on&lt;/p&gt;

&lt;p&gt;As you can see, none of these options are good in the slightest. That’s why it’s important to write better queries by filtering through data to return only what we need, not the entire database. We can do this by adding query parameters.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#adding-in-some-parameters" class="anchor"&gt;
  &lt;/a&gt;
  Adding In Some Parameters
&lt;/h3&gt;

&lt;p&gt;To add some parameters to our query, navigate to your &lt;code&gt;schema.js&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Then, let’s add some parameters to the &lt;code&gt;getUsers&lt;/code&gt; query in the &lt;code&gt;Query&lt;/code&gt; type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const { gql } = require('apollo-server-express');
const schema = gql`
  type Query {
    getUsers(id:Int, username:String, email:String, password:String): User
  }
  type User {
    id: Int!
    username: String!
    email: String!
    password: String!
  }
`;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;As you can see, we added all the arguments we wanted available to the &lt;code&gt;getUsers&lt;/code&gt; query. The reason I’ve added these arguments is so I’ll be able to filter through different users by these specific fields. There are no exclamation points after the object types in the parameters because I want all parameters to be optional.&lt;/p&gt;

&lt;p&gt;However, before we can successfully execute our query with these parameters, we need to make some edits to our resolvers.&lt;/p&gt;

&lt;p&gt;Go to &lt;code&gt;resolvers.js&lt;/code&gt;. Let’s update our &lt;code&gt;getUsers&lt;/code&gt; resolver. Right now, it looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let users = [
  {
    id:1,
    username:'The Javascript Ninja',
    email:'contact@thejavascriptninja.com',
    password:'its-a-secret'
  },
  {
    id:2,
    username:'The Javascript Ninjas Best Friend',
    email:'contact@thejavascriptninja.com',
    password:'its-a-secret'
  },
];

const resolvers = {
  Query: {
    getUsers: _ =&amp;gt; 'Hello World'
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Pretty lame, huh? Right now, this lame resolver can only return our pre-set array of objects. And even at that, we can’t even filter the results in our query.&lt;/p&gt;

&lt;p&gt;Well, it’s time for things to change. Update &lt;code&gt;resolvers.js&lt;/code&gt; so it looks like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let users = [
  {
    id:1,
    username:'The Javascript Ninja',
    email:'contact@thejavascriptninja.com',
    password:'its-a-secret'
  },
  {
    id:2,
    username:'The Javascript Ninjas Best Friend',
    email:'contact@thejavascriptninja.com',
    password:'its-a-secret'
  },
];

const resolvers = {
  Query: {
    getUsers: (parent, args) =&amp;gt; {
      if (args.id) {
        return users.filter(user =&amp;gt; user.id === args.id);
      } else if (args.username) {
        return users.filter(user =&amp;gt; user.username === args.username);
      } else if (args.email) {
        return users.filter(user =&amp;gt; user.email === args.email);
      } else if (args.password) {
        return users.filter(user =&amp;gt; user.password === args.password);
      } else {
        return users;
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Wow – Big improvement. However, there’s a lot going on; let me explain it for you:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; First, the &lt;code&gt;getUsers&lt;/code&gt; method takes in two parameters: &lt;code&gt;parent&lt;/code&gt;, and &lt;code&gt;args&lt;/code&gt;. It is important that &lt;code&gt;args&lt;/code&gt; be the second parameter, otherwise you will get an error.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Second, we make a long &lt;code&gt;if&lt;/code&gt; statement. First, we check if the arguments &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;username&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt;, or &lt;code&gt;password&lt;/code&gt; were provided to filter through the data. If no parameters were provided, we return all the data in the users array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; If parameters were provided with the query, we filter through the data in the &lt;code&gt;users&lt;/code&gt; array with the &lt;code&gt;array.filter()&lt;/code&gt; method. Then, we return matching data – if there is any.&lt;/p&gt;

&lt;p&gt;Now, let’s test our new-and-improved query. Run your server and navigate to &lt;code&gt;localhost:3000/graphql&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_YPd7yTs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/thejavascriptninja.com/wp-content/uploads/2020/12/Screen-Shot-2020-12-16-at-8.43.32-PM.png%3Fresize%3D768%252C331%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_YPd7yTs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/thejavascriptninja.com/wp-content/uploads/2020/12/Screen-Shot-2020-12-16-at-8.43.32-PM.png%3Fresize%3D768%252C331%26ssl%3D1" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, enter the following query into the box on the left:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;query {
  getUsers(id:1) {
    id
    username
    email
    password
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This should retrieve all data for the user with an id equal to 1.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fJsyK1rU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/thejavascriptninja.com/wp-content/uploads/2020/12/Screen-Shot-2020-12-16-at-8.48.17-PM.png%3Fresize%3D768%252C331%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fJsyK1rU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/thejavascriptninja.com/wp-content/uploads/2020/12/Screen-Shot-2020-12-16-at-8.48.17-PM.png%3Fresize%3D768%252C331%26ssl%3D1" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#graphql-mutations" class="anchor"&gt;
  &lt;/a&gt;
  GraphQL Mutations
&lt;/h1&gt;

&lt;p&gt;The next big part of GraphQL is modifying data in the database. This includes adding and deleting users, in our scenario. Fortunately, GraphQL provides an easy way for us to do this: mutations.&lt;/p&gt;

&lt;p&gt;In a brief summary, mutations are just like GraphQL queries, except they modify data. In order to make a mutation, we can define a mutation type just like we did a &lt;code&gt;Query&lt;/code&gt; type in our schema.&lt;/p&gt;

&lt;p&gt;Modify your schema in &lt;code&gt;schema.js&lt;/code&gt; to look like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const { gql } = require('apollo-server-express');
const schema = gql`
  type Query {
    getUsers(id:Int, username:String, email:String, password:String): User
  }
  type Mutation {
    createUser(username:String, email:String, password:String): User
  }
  type User {
    id: Int!
    username: String!
    email: String!
    password: String!
  }
`;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;As you can see, mutations don’t look very different from queries. Of course, you can always get more advanced; these mutations are on a very basic level.&lt;/p&gt;

&lt;p&gt;In the &lt;code&gt;Mutation&lt;/code&gt; type above, we define a &lt;code&gt;createUser&lt;/code&gt; mutation. This mutation takes in 3 parameters: &lt;code&gt;username&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt;, and &lt;code&gt;password&lt;/code&gt;. The reason we’re not going to provide the &lt;code&gt;id&lt;/code&gt; property is because we want the &lt;code&gt;id&lt;/code&gt; to be defined by the computer, whether randomly or in order, not manually.&lt;/p&gt;

&lt;p&gt;In order to put our mutation into effect, we’ll need to make some edits to our resolvers. Look at the new resolvers below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let users = [
  {
    id:1,
    username:'The Javascript Ninja',
    email:'contact@thejavascriptninja.com',
    password:'its-a-secret'
  },
  {
    id:2,
    username:'The Javascript Ninjas Best Friend',
    email:'contact@thejavascriptninja.com',
    password:'its-a-secret'
  },
];
const resolvers = {
  Query: {
    getUsers: (parent, args) =&amp;gt; {
      if (args.id) {
        return users.filter(user =&amp;gt; user.id === args.id);
      } else if (args.username) {
        return users.filter(user =&amp;gt; user.username === args.username);
      } else if (args.email) {
        return users.filter(user =&amp;gt; user.email === args.email);
      } else if (args.password) {
        return users.filter(user =&amp;gt; user.password === args.password);
      } else {
        return users;
      }
    }
  },
  Mutation: {
    createUser: (parent, args) =&amp;gt; {
      let newUser = {
        id: users.length + 1,
        username: args.username,
        email: args.email,
        password: args.password
      };
      users.push(newUser);
      return newUser;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;As you can see, in our resolver, we have a new property after the &lt;code&gt;Query&lt;/code&gt; property! This is the &lt;code&gt;Mutation&lt;/code&gt; property. In the &lt;code&gt;Mutation&lt;/code&gt; property, we have the &lt;code&gt;createUser&lt;/code&gt; method. This is so far our first mutation. In the &lt;code&gt;createUser&lt;/code&gt; method we do 3 things:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Create a &lt;code&gt;newUser&lt;/code&gt; object. In this object, we set the &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;username&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt;, and &lt;code&gt;password&lt;/code&gt; of our new user.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Add the &lt;code&gt;newUser&lt;/code&gt; object to the database. In reality, we would add the &lt;code&gt;newUser&lt;/code&gt; to the database. However, since we’re just using a dummy database model, we just use &lt;code&gt;array.push()&lt;/code&gt; to add the &lt;code&gt;newUser&lt;/code&gt; to our &lt;code&gt;users&lt;/code&gt; array.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Return the &lt;code&gt;newUser&lt;/code&gt;. This is pretty straightforward. We just return the &lt;code&gt;newUser&lt;/code&gt; object as a result of the mutation.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#running-our-first-mutation" class="anchor"&gt;
  &lt;/a&gt;
  Running our First Mutation
&lt;/h1&gt;

&lt;p&gt;Now that we’ve got our mutation all done, it’s time to run. (Yes, that rhymes 😀). In order to run our mutation, start your server and navigate to &lt;code&gt;localhost:3000/graphql&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TJq_mb9r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/thejavascriptninja.com/wp-content/uploads/2020/12/Screen-Shot-2020-12-10-at-8.25.47-PM-2.png%3Fresize%3D768%252C329%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TJq_mb9r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/thejavascriptninja.com/wp-content/uploads/2020/12/Screen-Shot-2020-12-10-at-8.25.47-PM-2.png%3Fresize%3D768%252C329%26ssl%3D1" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To make sure everything is working right, let’s first run our query. Enter this query into the box on the left:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;query {
  getUsers {
    id
    username
    email
    password
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;You should see the following result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L-5ubY36--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/thejavascriptninja.com/wp-content/uploads/2020/12/Screen-Shot-2020-12-18-at-8.58.43-PM.png%3Fresize%3D768%252C330%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L-5ubY36--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/thejavascriptninja.com/wp-content/uploads/2020/12/Screen-Shot-2020-12-18-at-8.58.43-PM.png%3Fresize%3D768%252C330%26ssl%3D1" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that we’ve ensured everything works and we aren’t getting any errors, it’s time to test our mutation. Let’s enter the mutation we wrote earlier:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mutation myMutation {
  createUser(username:"Subscriber to TJN", email:"contact@thejavascriptninja.com", password:"secret") {
    id
    username
    email
    password
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;As you can see, we call &lt;code&gt;createUser&lt;/code&gt;, and give it the specified params. It should return the following result:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "data": {
    "createUser": {
      "id": 3,
      "username": "Subscriber to TJN",
      "email": "contact@thejavascriptninja.com",
      "password": "secret"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0eY7lsar--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/thejavascriptninja.com/wp-content/uploads/2020/12/Screen-Shot-2020-12-18-at-9.09.14-PM.png%3Fresize%3D768%252C330%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0eY7lsar--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/thejavascriptninja.com/wp-content/uploads/2020/12/Screen-Shot-2020-12-18-at-9.09.14-PM.png%3Fresize%3D768%252C330%26ssl%3D1" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, if we run our query again, we can see our mutation has taken effect.&lt;/p&gt;

&lt;p&gt;Run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;query {
  getUsers {
    id
    username
    email
    password
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;You should see the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "data": {
    "getUsers": [
      {
        "id": 1,
        "username": "The Javascript Ninja",
        "email": "contact@thejavascriptninja.com",
        "password": "its-a-secret"
      },
      {
        "id": 2,
        "username": "The Javascript Ninjas Best Friend",
        "email": "contact@thejavascriptninja.com",
        "password": "its-a-secret"
      },
      {
        "id": 3,
        "username": "Subscriber to TJN",
        "email": "contact@thejavascriptninja.com",
        "password": "secret"
      }
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2K7Zc4YH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/thejavascriptninja.com/wp-content/uploads/2020/12/Screen-Shot-2020-12-18-at-9.11.41-PM.png%3Fresize%3D768%252C328%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2K7Zc4YH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/thejavascriptninja.com/wp-content/uploads/2020/12/Screen-Shot-2020-12-18-at-9.11.41-PM.png%3Fresize%3D768%252C328%26ssl%3D1" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hooray! Our mutation worked!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#to-conclude" class="anchor"&gt;
  &lt;/a&gt;
  To Conclude…
&lt;/h1&gt;

&lt;p&gt;A’ight folks!&lt;/p&gt;

&lt;p&gt;Today we’ve talked about organizing our code, writing more advanced queries (using parameters and variables), and GraphQL mutations.&lt;/p&gt;

&lt;p&gt;Pretty awesome stuff.&lt;/p&gt;

&lt;p&gt;I am going to end the tutorial here so it doesn’t get too long, but make sure to &lt;a href="//thejavascriptninja.com"&gt;subscribe&lt;/a&gt; so you don’t miss out on any great content!&lt;/p&gt;

&lt;p&gt;Stay tuned and talk soon!&lt;/p&gt;

</description>
      <category>graphql</category>
      <category>node</category>
      <category>javascript</category>
      <category>database</category>
    </item>
    <item>
      <title>25 Career Options if you don't like Coding</title>
      <author>Seema Saharan</author>
      <pubDate>Sat, 19 Dec 2020 21:13:35 +0000</pubDate>
      <link>https://dev.to/seema1711/25-career-options-if-you-don-t-like-coding-2ag4</link>
      <guid>https://dev.to/seema1711/25-career-options-if-you-don-t-like-coding-2ag4</guid>
      <description>&lt;p&gt;This is the world of technology, and almost everyone wants a bright career in tech, but what if you are not from a tech background, and you will be confused, and think that all the work in tech requires &lt;strong&gt;Coding&lt;/strong&gt;, but what if I tell you there are a lot of others fields to explore in tech that doesn't involve coding.&lt;br&gt;
Let me just start by sharing it all, and I will explain a little bit about each field, and if you find any of them interesting just start exploring all the resources on Google, and learn.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-business-analyst" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. Business Analyst&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eGOHPVCY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/37vu82bnmhasnne42ecl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eGOHPVCY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/37vu82bnmhasnne42ecl.png" alt="1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;According to Wikipedia, &lt;strong&gt;&lt;em&gt;A business analyst (BA) is a person who analyzes an organization or business domain (real or hypothetical) and documents its business, processes, or systems, assessing the business model or its integration with technology.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can get detailed information &lt;a href="https://www.guru99.com/introduction-business-analysis.html"&gt;here&lt;/a&gt;, like-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Different Business Analyst Role&lt;/li&gt;
&lt;li&gt;Skills of a Good Business Analyst&lt;/li&gt;
&lt;li&gt;Certifications&lt;/li&gt;
&lt;li&gt;Jobs&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#2-operations-manager" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2. Operations Manager&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ij4cr3jy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/g6azumo8l1s4eisry4j6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ij4cr3jy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/g6azumo8l1s4eisry4j6.png" alt="2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An operations manager is a key part of a management team and oversees high-level HR duties, such as attracting talent and setting training standards and hiring procedures. They also analyze and improve organizational processes, and work to improve quality, productivity, and efficiency.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills Required&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Strong communication skills.&lt;/li&gt;
&lt;li&gt;Good motivational skills.&lt;/li&gt;
&lt;li&gt;Strong negotiation skills.&lt;/li&gt;
&lt;li&gt;Exceptional organizational skills.&lt;/li&gt;
&lt;li&gt;Awareness of internal and external customer needs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#3-technical-recruiter-requires-technical-background" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3. Technical Recruiter&lt;/strong&gt; (requires technical background)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UlO_ZW4w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jnasuum3y31fhbenir3h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UlO_ZW4w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jnasuum3y31fhbenir3h.png" alt="3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A Technical Recruiter is responsible for all aspects of the sourcing and hiring of IT professionals to fill technical positions. A Technical Recruiter will work to identify and fill job openings, interview candidates, and keep records of applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills Required&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Technical knowledge to be able to talk to job prospects and understand qualifications.&lt;/li&gt;
&lt;li&gt;Strong social aptitude and ability to build relationships.&lt;/li&gt;
&lt;li&gt;Excellent interpersonal communication skills&lt;/li&gt;
&lt;li&gt;Negotiation skills &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#4-product-manager" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4. Product Manager&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GjVo9ssm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/9ay03km4lg6ux4tvibhj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GjVo9ssm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/9ay03km4lg6ux4tvibhj.png" alt="4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;According to Wikipedia, &lt;strong&gt;a product manager is a professional role that is responsible for the development of products for an organization, known as the practice of product management.&lt;/strong&gt; Product managers own the business strategy behind a product (both physical and digital products), specify its functional requirements, and generally manage the launch of features. They coordinate work done by many other functions (like software engineers, data scientists, and product designers) and are ultimately responsible for the business success of the product.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills Required&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Experience with Web site development&lt;/li&gt;
&lt;li&gt;Ability to operate in a high-energy, high-intensity, and rapidly evolving environment&lt;/li&gt;
&lt;li&gt;Project/change management experience implementing new ways of working&lt;/li&gt;
&lt;li&gt;Excellent communication and stakeholder engagement skills&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#5-project-manager" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5. Project Manager&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4Mr0aQNj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/w28wrhjsoj1busxqdnib.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4Mr0aQNj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/w28wrhjsoj1busxqdnib.png" alt="5"&gt;&lt;/a&gt;&lt;br&gt;
A Project Manager is responsible for planning, overseeing, and leading projects from ideation through to completion. This is a senior role at an organization and requires interaction with a range of internal and external stakeholders, most often managing several moving project parts simultaneously. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills Required&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Engineering&lt;/li&gt;
&lt;li&gt;IT or Computer Science&lt;/li&gt;
&lt;li&gt;Business or Business Administration&lt;/li&gt;
&lt;li&gt;Management&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#6-technical-writer" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;6. Technical Writer&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ra6ndNRV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3r5u14kx6q3yvw0xddky.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ra6ndNRV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3r5u14kx6q3yvw0xddky.png" alt="6"&gt;&lt;/a&gt;&lt;br&gt;
A technical writer is a professional information communicator whose task is to transfer information (knowledge) between two or more parties, through any medium that best facilitates the transfer and comprehension of the information. Technical writers research and create information through a variety of delivery media (electronic, printed, audio-visual, and even touch), such as online help, manuals, white papers, design specifications, project plans, and software test plans. With the rise of e-learning, technical writers are increasingly becoming involved with creating online training material. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills Required&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Technical communications&lt;/li&gt;
&lt;li&gt;Writing&lt;/li&gt;
&lt;li&gt;Ability to study and understand complex products or software&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#7-seosem-specialist" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;7. SEO/SEM Specialist&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P_Dajrpx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/u04fxz557rx6jhubo6lk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P_Dajrpx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/u04fxz557rx6jhubo6lk.png" alt="7"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Search Engine Marketing Specialists (SEO/SEM) are responsible for planning, implementing, and managing a company’s overall SEO strategy. They usually cover a wide variety of duties such as web marketing, web analytics, content strategy planning, link building, and keyword strategy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills Required&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Proven success in SEO&lt;/li&gt;
&lt;li&gt;Experience in web analytics, marketing, and business development&lt;/li&gt;
&lt;li&gt;Experience with A/B testing and other testing metrics&lt;/li&gt;
&lt;li&gt;Knowledge of HTML, CSS, JavaScript&lt;/li&gt;
&lt;li&gt;Ability to analyze data and provide evidence-based recommendations&lt;/li&gt;
&lt;li&gt;Sense of ownership and pride in your performance and its impact on the company’s success&lt;/li&gt;
&lt;li&gt;Critical thinker and problem-solving skills&lt;/li&gt;
&lt;li&gt;Team player&lt;/li&gt;
&lt;li&gt;Good time-management skills&lt;/li&gt;
&lt;li&gt;Great interpersonal and communication skills&lt;/li&gt;
&lt;li&gt;Degree in relevant quantitative fields.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#8-software-quality-tester" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;8. Software Quality Tester&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eplVvC_C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/iqn4768zdw4msc6x15gi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eplVvC_C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/iqn4768zdw4msc6x15gi.png" alt="8"&gt;&lt;/a&gt;&lt;br&gt;
Software Testing is a process of verifying a computer system/program to decide whether it meets the specified requirements and produces the desired results. As a result, you identify bugs in software products/projects. &lt;/p&gt;

&lt;p&gt;Click &lt;a href="https://www.guru99.com/software-testing-career-complete-guide.html"&gt;here&lt;/a&gt; for more information.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-data-analyst" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;9. Data Analyst&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F6mNBkHK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ebl286xamzp0v9qt20dv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F6mNBkHK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ebl286xamzp0v9qt20dv.png" alt="9"&gt;&lt;/a&gt;&lt;br&gt;
A data analyst is someone who scrutinizes information using data analysis tools. The meaningful results they pull from the raw data help their employers or clients make important decisions by identifying various facts and trends.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills Required&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ability to work with stakeholders to assess potential risks&lt;/li&gt;
&lt;li&gt;Work experience as a data analyst or in a related field.&lt;/li&gt;
&lt;li&gt;Ability to analyze existing tools and databases and provide software solution recommendations&lt;/li&gt;
&lt;li&gt;Demonstrated experience in handling large data sets and relational databases&lt;/li&gt;
&lt;li&gt;High-level written and verbal communication skills. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#10-tech-support-specialist" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;10. Tech Support Specialist&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--081ckTqh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/47pkcnqmuzsqzo4syujt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--081ckTqh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/47pkcnqmuzsqzo4syujt.png" alt="10"&gt;&lt;/a&gt;&lt;br&gt;
The role of a Technical Support Specialist within an organization is to provide assistance and maintenance to all computer systems and hardware. Their work may include installing, configuring, and updating hardware and software, as well as fixing any issue related to the equipment that may come up on a daily basis.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills Required&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Extensive familiarity with Windows operating systems&lt;/li&gt;
&lt;li&gt;Minimum 1-year experience in information technology or technical support&lt;/li&gt;
&lt;li&gt;Working knowledge of security software options and functionality preferred&lt;/li&gt;
&lt;li&gt;CompTIA A+ certification a plus &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#11-system-administrator" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;11. System Administrator&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fHRBkZQQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/atn8mfkd9s8nyn9cbqk6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fHRBkZQQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/atn8mfkd9s8nyn9cbqk6.png" alt="11"&gt;&lt;/a&gt;&lt;br&gt;
According to Wikipedia, a system administrator, or sysadmin, is a person who is responsible for the upkeep, configuration, and reliable operation of computer systems; especially multi-user computers, such as servers. The system administrator seeks to ensure that the uptime, performance, resources, and security of the computers they manage meet the needs of the users, without exceeding a set budget when doing so.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills Required&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Proven experience as a System Administrator, Network Administrator, or similar role&lt;/li&gt;
&lt;li&gt;Experience with databases, networks (LAN, WAN), and patch management&lt;/li&gt;
&lt;li&gt;Knowledge of system security (e.g. intrusion detection systems) and data backup/recovery&lt;/li&gt;
&lt;li&gt;Familiarity with various operating systems and platforms &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#12-user-experienceux-design" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;12. User Experience(UX) Design&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kAQysY_h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/eej0h32lk1zadchofwes.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kAQysY_h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/eej0h32lk1zadchofwes.png" alt="12"&gt;&lt;/a&gt;&lt;br&gt;
User experience design is a concept that has many dimensions, and it includes a bunch of different disciplines — such as interaction design, information architecture, visual design, usability, and human-computer interaction.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills Required&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Proven experience as a UX Designer, UI Designer, or similar role&lt;/li&gt;
&lt;li&gt;Strong portfolio of design projects&lt;/li&gt;
&lt;li&gt;Background in project management and research&lt;/li&gt;
&lt;li&gt;Familiarity with interaction design and information architecture&lt;/li&gt;
&lt;li&gt;Excellent communication skills&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#13-user-interfaceui-designer" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;13. User Interface(UI) Designer&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tf5svl1i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/q35f3we8z6o2tqph1uwz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tf5svl1i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/q35f3we8z6o2tqph1uwz.png" alt="13"&gt;&lt;/a&gt;&lt;br&gt;
UI designers are responsible for designing how a user interacts with a computer, in fact, they’re obsessed with human-computer interaction! Whether it’s a dashboard computer in a car, a mobile app, a video game, a website, or a virtual reality interface, UI designers are the ones that make these interactions possible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills Required&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Knowledge of wireframe tools (e.g. Wireframe.cc and InVision)&lt;/li&gt;
&lt;li&gt;Portfolio of design projects&lt;/li&gt;
&lt;li&gt;Up-to-date knowledge of design software like Adobe Illustrator and Photoshop&lt;/li&gt;
&lt;li&gt;Team spirit; strong communication skills to collaborate with various stakeholders &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#14-information-architect" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;14. Information Architect&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--unvWpWDD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ehkxouigattqc6308ltq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--unvWpWDD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ehkxouigattqc6308ltq.png" alt="14"&gt;&lt;/a&gt;&lt;br&gt;
According to Wikipedia, &lt;strong&gt;Information architecture (IA) is the structural design of shared information environments; the art and science of organizing and labeling websites, intranets, online communities and software to support usability and findability; and an emerging community of practice focused on bringing principles of design, architecture and information science to the digital landscape.[1] Typically, it involves a model or concept of information that is used and applied to activities that require explicit details of complex information systems. These activities include library systems and database development.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills Required&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Client-Facing Communication.&lt;/li&gt;
&lt;li&gt;Understanding of User-Centered Design.&lt;/li&gt;
&lt;li&gt;Concept Testing.&lt;/li&gt;
&lt;li&gt;Critical Thinking.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#15-mobile-designer" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;15.  Mobile Designer&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iVa7ARxq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/4cohsehr6alarxu862yk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iVa7ARxq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/4cohsehr6alarxu862yk.png" alt="15"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mobile designers can go by many names, including app designers, iOS designers, Android designers, and more. They usually work closely with user experience (UX) designers and user interface (UI) designers to apply their designs to mobile interfaces.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills Required&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mobile User Interface Design. Probably the most important aspect of mobile app development is building a high-quality user interface (UI).&lt;/li&gt;
&lt;li&gt;Cross-Platform App Development. &lt;/li&gt;
&lt;li&gt;Backend Computing. &lt;/li&gt;
&lt;li&gt;Modern Language Programming Skills. &lt;/li&gt;
&lt;li&gt;Business Capability.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#16-marketing-automation-manager" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;16. Marketing Automation Manager&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkNF3VDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/eghb1wlegl2ma3u14mqw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkNF3VDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/eghb1wlegl2ma3u14mqw.png" alt="16"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Creative Group Salary Guide defines the marketing automation manager as an individual who “administers marketing campaigns; tests and analyzes workflow, lead generation, lead nurturing and lead scoring; and identifies tactics for improvement.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills Required&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;At least 3 to 5 years of marketing experience. &lt;/li&gt;
&lt;li&gt;Strategic thinker and hands-on executor. &lt;/li&gt;
&lt;li&gt;Solid writing skills and experience creating marketing content. &lt;/li&gt;
&lt;li&gt;Experience managing campaign execution across multiple channels.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#17-software-sales-representative" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;17. Software Sales Representative&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U6Jx1iFP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/uoqnhh6qkk4kp72v6aw5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U6Jx1iFP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/uoqnhh6qkk4kp72v6aw5.png" alt="17"&gt;&lt;/a&gt;&lt;br&gt;
Responsible for the merchandising, distribution, and selling of computers, software, and peripherals.&lt;/p&gt;

&lt;p&gt;Read the full information &lt;a href="https://www.americasjobexchange.com/software-sales-representative-job-description"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#18-digital-marketing" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;18. Digital Marketing&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hewW36Hl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/rqzrv3x89ip3hrnco6f5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hewW36Hl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/rqzrv3x89ip3hrnco6f5.png" alt="18"&gt;&lt;/a&gt;&lt;br&gt;
Digital marketing is any form of marketing products or services that involves electronic devices. That's the reason it has been around for decades (because electronics have) and why it doesn't necessarily have anything to do with content marketing, Google ads, social media, or retargeting.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills Required&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ability to analyze data and draw insights. The growth of digital marketing has created endless amounts of data. &lt;/li&gt;
&lt;li&gt;Organization and project management skills. &lt;/li&gt;
&lt;li&gt;Knowledge and appreciation of automation. &lt;/li&gt;
&lt;li&gt;Voice search SEO. &lt;/li&gt;
&lt;li&gt;UX skills and an understanding of the customer experience. &lt;/li&gt;
&lt;li&gt;Advanced social media knowledge.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#19-computer-networking" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;19. Computer Networking&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lwbQsLag--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/49iwjhqwtucyld1rgf5k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lwbQsLag--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/49iwjhqwtucyld1rgf5k.png" alt="19"&gt;&lt;/a&gt;&lt;br&gt;
This is where you can find many profiles in this &lt;a href="https://www.geeksforgeeks.org/do-you-want-to-make-career-in-networking/"&gt;category&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#20-software-testing-some-aspect-require-coding-skills" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;20. Software Testing&lt;/strong&gt; (some aspect require coding skills)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ejbB92zn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/fp9f2k6842jyqz0w9aay.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ejbB92zn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/fp9f2k6842jyqz0w9aay.png" alt="20"&gt;&lt;/a&gt;&lt;br&gt;
Software Testing is a method to check whether the actual software product matches expected requirements and to ensure that the software product is Defect free. It involves the execution of software/system components using manual or automated tools to evaluate one or more properties of interest. The purpose of software testing is to identify errors, gaps, or missing requirements in contrast to actual requirements.&lt;br&gt;
&lt;a href="https://www.guru99.com/software-testing-introduction-importance.html"&gt;Know more &lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skills Required&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dzone.com/articles/17-skills-of-highly-effective-software-testers"&gt;https://dzone.com/articles/17-skills-of-highly-effective-software-testers&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bonus" class="anchor"&gt;
  &lt;/a&gt;
  Bonus
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Customer Relationship Management (CRM) / Salesforce&lt;/li&gt;
&lt;li&gt;Graphic Designer&lt;/li&gt;
&lt;li&gt;Business Intelligence&lt;/li&gt;
&lt;li&gt;Business Development Executive&lt;/li&gt;
&lt;li&gt;Cybersecurity (certain areas/domains require coding skills)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I have just listed all the fields, but that's not gonna help you. &lt;br&gt;
Find your interest in the field, google about that particular field, learn, and improve yourself.&lt;br&gt;
Good Luck!&lt;/p&gt;

&lt;p&gt;Please Drop a ❤, if you enjoyed this.&lt;/p&gt;

&lt;p&gt;You can connect with me on:&lt;br&gt;
🎥&lt;a href="https://youtube.com/BashWoman"&gt;YouTube&lt;/a&gt;&lt;br&gt;
⚒&lt;a href="https://linkedin.com/in/seemasaharan"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
🧵&lt;a href="https://twitter.com/SeemaSaharan5"&gt;Twitter&lt;/a&gt;&lt;br&gt;
✍&lt;a href="https://bashwoman.hashnode.dev"&gt;Hashnode&lt;/a&gt;&lt;br&gt;
📷&lt;a href="https://instagram.com/bashwoman"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>programming</category>
      <category>testing</category>
      <category>design</category>
    </item>
    <item>
      <title>Programming is Ruining My Life - What I'm Doing About It</title>
      <author>Miles Watson</author>
      <pubDate>Sat, 19 Dec 2020 21:06:47 +0000</pubDate>
      <link>https://dev.to/mileswatson/programming-is-ruining-my-life-what-i-m-doing-about-it-5b7c</link>
      <guid>https://dev.to/mileswatson/programming-is-ruining-my-life-what-i-m-doing-about-it-5b7c</guid>
      <description>&lt;p&gt;Okay, the title might have been a slight exaggeration - programming has played a very beneficial role in both my academic and professional development. I have noticed recently, however, that programming has caused a significant decrease to my quality of life.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-situation" class="anchor"&gt;
  &lt;/a&gt;
  My Situation
&lt;/h2&gt;

&lt;p&gt;Hi! My name's Miles, and I'm a teenager living in the UK. I've been programming in one way or another for over five years, but have recently been stepping up my workload (mostly due to my &lt;a href="https://github.com/mileswatson/hosta/"&gt;school computer science project&lt;/a&gt;, among other things). A typical school day over the past month has looked like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;wake up, breakfast&lt;/li&gt;
&lt;li&gt;school (5 hours of lessons, most of lunch break programming)&lt;/li&gt;
&lt;li&gt;homework / Advent Of Code until dinner&lt;/li&gt;
&lt;li&gt;project work after dinner until bed
The weekends are fairly similar, except with more homework / programming in the place of lessons.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This schedule has been fairly consistent for a few months now, and I wanted to share some of the issues I've had (as well as some of the methods I'm using to cope).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#issues" class="anchor"&gt;
  &lt;/a&gt;
  Issues
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#eyesight" class="anchor"&gt;
  &lt;/a&gt;
  Eyesight
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lothd0QA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1456081101716-74e616ab23d8%3Fixid%3DMXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%253D%26ixlib%3Drb-1.2.1%26auto%3Dformat%26fit%3Dcrop%26w%3D1355%26q%3D80" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lothd0QA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1456081101716-74e616ab23d8%3Fixid%3DMXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%253D%26ixlib%3Drb-1.2.1%26auto%3Dformat%26fit%3Dcrop%26w%3D1355%26q%3D80" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Over the past year or so, I have seen a noticeable decrease in my ability to discern details at distances further than a few metres. The impacts were most felt when I started school after lockdown, and had to move closer to the front of the classroom in order to make out questions.&lt;/p&gt;

&lt;p&gt;I believe that this was caused long periods working at a computer, rather than simply due to genetics - mostly due to the fact that my eyesight felt quite a bit worse after my more "productive" days.&lt;/p&gt;

&lt;p&gt;In addition to having developed short-sightedness, I have recently experienced some of the joys of eye strain. The discomfort persisted for a couple days, forcing me to take a break from computer work. It was after this particular event that I realised that something had to change.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#posture-and-back-discomfort" class="anchor"&gt;
  &lt;/a&gt;
  Posture and Back Discomfort
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--38pmn5bZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1462145523241-05dd5bae9ada%3Fixid%3DMXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%253D%26ixlib%3Drb-1.2.1%26auto%3Dformat%26fit%3Dcrop%26w%3D1331%26q%3D80" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--38pmn5bZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1462145523241-05dd5bae9ada%3Fixid%3DMXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%253D%26ixlib%3Drb-1.2.1%26auto%3Dformat%26fit%3Dcrop%26w%3D1331%26q%3D80" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sitting at a computer has caused a slight discomfort in my lower back and rounded shoulders. Although minor, I assume this discomfort will only become worse as I age.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lethargy" class="anchor"&gt;
  &lt;/a&gt;
  Lethargy
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QHLQ4ybV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1448454050639-2f8d4bf26975%3Fixid%3DMXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%253D%26ixlib%3Drb-1.2.1%26auto%3Dformat%26fit%3Dcrop%26w%3D1267%26q%3D80" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QHLQ4ybV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1448454050639-2f8d4bf26975%3Fixid%3DMXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%253D%26ixlib%3Drb-1.2.1%26auto%3Dformat%26fit%3Dcrop%26w%3D1267%26q%3D80" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This one's quite simple - do you lack energy, or feel tired/weak/fatigued after small amounts of exercise? Being sedentary for long periods of time is not healthy, and can lead to both mental and physical illness. I personally noticed myself getting out of breath after flights of stairs, and feeling unfit caused a drop in my self-confidence.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#burnout-and-irritability" class="anchor"&gt;
  &lt;/a&gt;
  Burnout and Irritability
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kq_CVO4p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1561053338-af94db55eb9b%3Fixid%3DMXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%253D%26ixlib%3Drb-1.2.1%26auto%3Dformat%26fit%3Dcrop%26w%3D1356%26q%3D80" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kq_CVO4p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1561053338-af94db55eb9b%3Fixid%3DMXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%253D%26ixlib%3Drb-1.2.1%26auto%3Dformat%26fit%3Dcrop%26w%3D1356%26q%3D80" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After a long day of problem solving, I noticed that I felt both mentally and physically exhausted. This exhaustion destroyed my motivation for other hobbies, and made me more irritable (and therefore unsociable). Instead of spending my time reading, playing games, or talking with friends, I instead tried to numb my stress by endlessly scrolling through Reddit and other social media platforms until I fell asleep.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tilting" class="anchor"&gt;
  &lt;/a&gt;
  Tilting
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IQ6pHj-u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media1.giphy.com/media/9o9dh1JRGThC1qxGTJ/giphy.gif%3Fcid%3Decf05e4750l4dt5rphfuo6111ph2gr8ttfkppt59dilqcjqw%26rid%3Dgiphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IQ6pHj-u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media1.giphy.com/media/9o9dh1JRGThC1qxGTJ/giphy.gif%3Fcid%3Decf05e4750l4dt5rphfuo6111ph2gr8ttfkppt59dilqcjqw%26rid%3Dgiphy.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.urbandictionary.com/define.php?term=Tilting"&gt;Urban Dictionary&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Although mostly used to describe a feeling in videogames, I find that the experience translates well to problem solving. Getting frustrated at a bug leads my mental clarity to decrease, causing a feedback loop that ends in me spending hours on a problem (often until late at night, causing irregular sleep patterns).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-im-doing-about-it" class="anchor"&gt;
  &lt;/a&gt;
  What I'm Doing About It
&lt;/h2&gt;

&lt;p&gt;Here are some methods that I have found particularly helpful for dealing with and preventing the issues I've talked about:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#202020-rule" class="anchor"&gt;
  &lt;/a&gt;
  20-20-20 Rule
&lt;/h3&gt;

&lt;p&gt;I've recently started using the &lt;a href="https://www.healthline.com/health/eye-health/20-20-20-rule"&gt;20-20-20 rule&lt;/a&gt;. The rule says that, for every 20 minutes of computer work, you should focus on something 20 feet away for 20 seconds. I've found this to give good (albeit temporary) relief, although I usually do it for longer than 20 seconds.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#regular-breaks" class="anchor"&gt;
  &lt;/a&gt;
  Regular Breaks
&lt;/h3&gt;

&lt;p&gt;Taking short breaks every hour or so has been very beneficial. During these breaks, I make an effort to move as much as possible - either a short walk outside, a few press-ups/pull-ups, or even just walking around the house.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#posture-exercises" class="anchor"&gt;
  &lt;/a&gt;
  Posture Exercises
&lt;/h3&gt;

&lt;p&gt;I've been doing daily posture exercises to help fix my posture. So far, I've made noticeable progress.&lt;/p&gt;

&lt;p&gt;Here are some good resources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=SYr6lbx68n8"&gt;Jeremy Ethier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.healthline.com/health/rounded-shoulders-exercises"&gt;Healthline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wikihow.com/Fix-Rounded-Shoulders"&gt;WikiHow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#gym-routine" class="anchor"&gt;
  &lt;/a&gt;
  Gym Routine
&lt;/h3&gt;

&lt;p&gt;You've probably heard this one a lot. There's a reason - it really works. Getting regular exercise at the gym (three days a week) has made me both fitter and happier&lt;sup&gt;&lt;sup&gt;;)&lt;/sup&gt;&lt;/sup&gt;. It has the combined effect of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Improving overall health&lt;/li&gt;
&lt;li&gt;Providing a way to relax&lt;/li&gt;
&lt;li&gt;Clearing my head&lt;/li&gt;
&lt;li&gt;Increasing my self confidence&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Important note: There is a tendency among gym-goers to focus on "push" actions. These can create a natural tension in the chest, leading to the shoulders being drawn in. Make sure to perform the posture exercises mentioned above, and balance your workout with exercises that target the back - think "pull" actions (deadlifts are also good for general posture, but can be dangerous if performed with bad technique).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#learning-how-to-give-up" class="anchor"&gt;
  &lt;/a&gt;
  Learning How to "Give Up"
&lt;/h3&gt;

&lt;p&gt;Being able to recognise when I am "tilting", and having the self control to force myself to put a problem to the side has been very beneficial. I've found that clearing my head before trying again produces better results with less total time spent when compared to stubbornly grinding away at it.&lt;/p&gt;

&lt;p&gt;This is probably the thing which I've found the hardest to do on this list - I have (like many other programmers) a natural tendency to obsess over problems until they are solved. Realising that putting a problem on hold is NOT admitting defeat was a major milestone in getting more consistent sleep and maintaining a better work/life balance.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-kittens" class="anchor"&gt;
  &lt;/a&gt;
  Getting Kittens
&lt;/h3&gt;

&lt;p&gt;I don't think this one needs much explanation :) Pets can be a great way to destress - just make sure they don't interrupt your Zoom calls (grrr).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As a developer, maintaining your physical and mental health is crucial to staying both productive and happy. Take frequent breaks, regularly exercise, and ensure that you are eating/drinking/sleeping well - your mind will thank you.&lt;/p&gt;

&lt;p&gt;Have you been having any issues with burnout, work-life balance, or physical health? How have you been coping? Let me know in the comments below!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#footnote" class="anchor"&gt;
  &lt;/a&gt;
  Footnote
&lt;/h4&gt;

&lt;p&gt;If you enjoyed reading this, then consider dropping a like or following me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/mileswatson"&gt;DEV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hashnode.com/@mileswatson"&gt;Hashnode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/miles__watson"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mileswatson"&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'm just starting out, so the support is greatly appreciated!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Disclaimer - I'm a (mostly) self-taught programmer, and I use my blog to share things that I've learnt on my journey to becoming a better developer. Because of this, I apologise in advance for any inaccuracies I might have made - criticism and corrections are welcome!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>mentalhealth</category>
      <category>productivity</category>
      <category>community</category>
    </item>
    <item>
      <title>How to Think of Personal Project Ideas </title>
      <author>Brenda Michelle</author>
      <pubDate>Sat, 19 Dec 2020 20:58:25 +0000</pubDate>
      <link>https://dev.to/brendamichellle/how-to-think-of-personal-project-ideas-k91</link>
      <guid>https://dev.to/brendamichellle/how-to-think-of-personal-project-ideas-k91</guid>
      <description>&lt;p&gt;&lt;em&gt;#SelfTaughtSaturdays&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.brendamichellle.com/how-to-think-of-personal-project-ideas"&gt;Post on my Blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a self-learner, it is important to create a structured curriculum that you follow in order to be able to make progress. Working on personal projects is something that you should incorporate into your study plan. &lt;/p&gt;

&lt;p&gt;Depending on whether you are following a course that runs over a few weeks or a quick Youtube tutorial you should always put what you learn into practice. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-what-should-you-build" class="anchor"&gt;
  &lt;/a&gt;
  &lt;em&gt;But what should you build?&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;At the beginning of your journey do not get stuck on trying to think of a unique project idea that will make you rich overnight. Instead, try to focus on short and sweet projects that allow you to practice certain concepts as you learn them. &lt;/p&gt;

&lt;p&gt;As you progress and learn more you will be able to create more detailed projects that you will be proud of and will help you land your first job. &lt;/p&gt;

&lt;p&gt;In this post, I will share with you some tips and tricks for thinking of and finding personal project ideas. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#personal-problems" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Personal Problems&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Think of personal problems that you or someone in your life has and how you can fix that by coding. It can be automating a task with python or creating a website for a small business owner. There are endless possibilities. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#your-favorite-apps-and-websites" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Your Favorite Apps and Websites&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Look at your favorite apps and websites and analyze them. What do you like and what don’t you like? What would you change, or what are they missing? Maybe you can create your own around that concept. No app or website is perfect for every person so you are sure to find something to tweak. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dribbblecom" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Dribbble.com&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Check out dribbble and just scroll through all the amazing designs. If you do decide to just recreate one of the designs make sure to credit the artist. You can also just use the platform as a source of inspiration and go from there. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pinterest" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Pinterest&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Many people overlook Pinterest but it is full of amazing content. Sometimes I spend hours scrolling and saving designs, art, and much more that inspires my project ideas. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fellow-devs" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Fellow Devs&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Keep up with other devs and follow what they are working on it might spark something. There are also times when others might ask for help in their personal projects, which is also a great opportunity. If you do get a job in tech there is a high probability that you will be working with a team at some point. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#open-source" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Open Source&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;If you are all out of ideas, which I hope is not the case. There is always open source. There are a lot of great posts on how to get started with open source. A quick Google search will show you some great info. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ultimate-takeaway" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Ultimate Takeaway!&lt;/em&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Exercise your brain and become an idea machine. Try to write out between 5 – 10 ideas everyday. They do not have to be unique or out of this world or even tech related. Some examples of ideas I try to think of everyday are: &lt;/p&gt;

&lt;p&gt;1.Blog post ideas &lt;br&gt;
   2.Website Ideas &lt;br&gt;
   3.App ideas&lt;br&gt;
   4.Personal Goals &lt;br&gt;
   5.Life goals &lt;br&gt;
   6.Career Goals &lt;br&gt;
   7.Personal development ideas &lt;br&gt;
   8.Social media post ideas&lt;/p&gt;

&lt;p&gt;The more you think and take time to do it intentionally the better you will get at it. It takes time so do not beat yourself up if some days you can only get 2 or 3 ideas down. &lt;/p&gt;




&lt;p&gt;I hope this was helpful let me know how you think of ideas and if you follow a specific process. &lt;/p&gt;

&lt;p&gt;If you have any questions or simply want to chat &lt;a href="https://www.instagram.com/brendamichellle/"&gt;lets connect&lt;/a&gt;! &lt;/p&gt;

&lt;p&gt;Photo by Kelly Sikkema on Unsplash&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>programming</category>
      <category>help</category>
      <category>productivity</category>
    </item>
    <item>
      <title>JavaScript Guide </title>
      <author>Lasha Kakabadze</author>
      <pubDate>Sat, 19 Dec 2020 17:20:52 +0000</pubDate>
      <link>https://dev.to/adrinlol/javascript-guide-2coa</link>
      <guid>https://dev.to/adrinlol/javascript-guide-2coa</guid>
      <description>&lt;p&gt;In this article I'm going to go over my most recent project - JavaScript Guide. The intention of this guide is to help beginner developers ace advance their Frontend knowledge and ace their interview questions.&lt;/p&gt;

&lt;p&gt;From basic to advanced: test how well you know JavaScript, refresh your knowledge a bit, or prepare for your coding interview! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hS8kltc6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/48876996/102694409-4d754700-423a-11eb-9615-af0f6e70d450.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hS8kltc6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/48876996/102694409-4d754700-423a-11eb-9615-af0f6e70d450.gif" alt="ezgif com-gif-maker"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo" class="anchor"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;p&gt;Link to the repo 👇&lt;br&gt;
&lt;a href="https://github.com/Adrinlol/javascript-guide"&gt;https://github.com/Adrinlol/javascript-guide&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents" class="anchor"&gt;
  &lt;/a&gt;
  Table of contents
&lt;/h2&gt;

&lt;p&gt;This projects covers all the important concepts of JavaScript along with several examples.&lt;/p&gt;

&lt;p&gt;Some key topics included in this tutorial are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://adrinlol.github.io/javascript-guide/#Introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adrinlol.github.io/javascript-guide/#Variables"&gt;Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adrinlol.github.io/javascript-guide/#Constants"&gt;Constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adrinlol.github.io/javascript-guide/#Scope"&gt;Scope&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adrinlol.github.io/javascript-guide/#Objects"&gt;Objects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adrinlol.github.io/javascript-guide/#Arrays"&gt;Arrays&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adrinlol.github.io/javascript-guide/#Comparison"&gt;Comparison&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adrinlol.github.io/javascript-guide/#Closure"&gt;Closure&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

Note: This is just a part 1/n of this project, I'll be updating it regularly to include as many concepts as I can. 



</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Pair programming – a start guide for newbies</title>
      <author>Mateusz Sowa</author>
      <pubDate>Sat, 19 Dec 2020 16:40:17 +0000</pubDate>
      <link>https://dev.to/mateuszjansowa/pair-programming-a-start-guide-for-newbies-4k7c</link>
      <guid>https://dev.to/mateuszjansowa/pair-programming-a-start-guide-for-newbies-4k7c</guid>
      <description>&lt;p&gt;      Anna is an ex-physiotherapist. Matt is a former airline pilot. You may think they are part of distinct worlds and are used to communicate in a different way. It is reasonable to assume their first pair programming may be at least peculiar. &lt;/p&gt;

&lt;p&gt;      These two guys met at the JavaScript mentorship program and decided to join forces. They dove deep into pair programming rules, completed an HTML Canvas Project, and summarized their effort. Now they also want to share their experience with you! &lt;/p&gt;

&lt;p&gt;      After reading this article you will have a wider view of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;choosing &lt;strong&gt;the right project&lt;/strong&gt; for your first pair programming experience,&lt;/li&gt;
&lt;li&gt;planning your work &lt;strong&gt;step-by-step&lt;/strong&gt;, &lt;/li&gt;
&lt;li&gt;setting up &lt;strong&gt;realistic goals&lt;/strong&gt; of the project, &lt;/li&gt;
&lt;li&gt;setting &lt;strong&gt;mandatory rules&lt;/strong&gt; of your coding sessions,&lt;/li&gt;
&lt;li&gt;pros and cons of coding &lt;strong&gt;together&lt;/strong&gt;!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#choosing-the-right-project" class="anchor"&gt;
  &lt;/a&gt;
  Choosing the right project!
&lt;/h2&gt;

&lt;p&gt;      For your first pair programming project, it is reasonable to choose something straightforward or at least non-time-consuming. We suggest you choose from one of the &lt;a href="https://javascript30.com/"&gt;Wes Bos JavaScript 30 Projects&lt;/a&gt;. These are tiny but still engaging mini-apps written only with Vanilla JavaScript (ES6+), some HTML, and CSS. We decided to code Project #8 - Fun with HTML Canvas.&lt;/p&gt;

&lt;p&gt;     We didn't know a thing about the canvas element. Although we considered it to be a good idea to start from scratch, give us a week to get familiar with Canvas, and start from a &lt;strong&gt;similar level&lt;/strong&gt; when it comes to programming. We finally picked the project and it was a good time for…&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#planning-the-cooperation" class="anchor"&gt;
  &lt;/a&gt;
  Planning the cooperation
&lt;/h2&gt;

&lt;p&gt;      It was very seductive just to call each other and start typing the first lines of code. However, we took a different approach. We decided to set up an &lt;strong&gt;organizational meeting&lt;/strong&gt;. It was crucial and we appreciated it in the following phases of our pair programming journey.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-golden-rules-of-pair-programming" class="anchor"&gt;
  &lt;/a&gt;
  The golden rules of pair programming
&lt;/h4&gt;

&lt;p&gt;      We made use of the &lt;a href="https://gist.github.com/jordanpoulton/607a8854673d9f22c696"&gt;mandatory pair programming rules&lt;/a&gt; presented by Jourdan Poulton on Github. Simply speaking, the couple divides their task according to two roles: Driver and Navigator. &lt;br&gt;
As the name suggests:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  the Driver is responsible for a keyboard,&lt;/li&gt;
&lt;li&gt;  the Navigator manages the code to be written.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The most appealing rules are listed below. Our cooperation would be impossible without them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Driver&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  the only person responsible for typing,&lt;/li&gt;
&lt;li&gt;  writes the code according to Navigator's directions,&lt;/li&gt;
&lt;li&gt;  asks questions anytime the directions are unclear,&lt;/li&gt;
&lt;li&gt;  offers an alternative solution when there is a disagreement,&lt;/li&gt;
&lt;li&gt;  trusts the Navigator.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Navigator&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  clearly communicates the code to be written,&lt;/li&gt;
&lt;li&gt;  checks for syntax errors and typos so the Driver doesn't have to bother,&lt;/li&gt;
&lt;li&gt;  keeps track of console and browser output,&lt;/li&gt;
&lt;li&gt;  makes sure that the Driver sticks to the small task,&lt;/li&gt;
&lt;li&gt;  plans and notes down high-level tasks or issues that shall be solved later,&lt;/li&gt;
&lt;li&gt;  waits until the Driver finishes the task to bring up design or refactoring ideas.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Both&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  communicate and are not quiet,&lt;/li&gt;
&lt;li&gt;  know when to give up, ask for advice, or just swap roles,&lt;/li&gt;
&lt;li&gt;  intervene when their partner is quiet,&lt;/li&gt;
&lt;li&gt;  respect the break time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#settling-the-app-functionalities-and-the-file-structure" class="anchor"&gt;
  &lt;/a&gt;
  Settling the app functionalities and the file structure
&lt;/h4&gt;

&lt;p&gt;      We also took our time to discuss the core functionalities of our app. Our heads were full of crazy project implementations but, as it was our first pair programming project, we stuck to &lt;strong&gt;“the simpler, the better”&lt;/strong&gt; principle.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Fun fact: it took us more than 2.5 hours to complete a 20-minutes long coding task.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After that, we arranged a simple file structure.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#creating-a-mind-map" class="anchor"&gt;
  &lt;/a&gt;
  Creating a mind map
&lt;/h4&gt;

&lt;p&gt;      We made a &lt;strong&gt;mind map&lt;/strong&gt; using  &lt;a href="http://mindmeister.com"&gt;MindMeister mapping software&lt;/a&gt;. There we placed the core structures and functionalities established at our meeting. The map turned up to be very helpful for us. The Navigator did some quick peeks to orientate in which phase we were during project development and what should be done next.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tCDpYLOn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/Mprmsk8/Mind-map.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tCDpYLOn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/Mprmsk8/Mind-map.png" alt="Mind map"&gt;&lt;/a&gt;&lt;/p&gt;
Mind map created using MindMeister. See it in better resolution: i.ibb.co/Mprmsk8/Mind-map.png



&lt;p&gt;      We noted down all our arrangements in &lt;strong&gt;Google Docs&lt;/strong&gt;, so we had access to them from any device at any time.&lt;br&gt;
       We were all set up. Finally, it was a proper time to get our hands dirty!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#pair-programming-sessions" class="anchor"&gt;
  &lt;/a&gt;
  Pair programming sessions
&lt;/h2&gt;

&lt;p&gt;      We split the programming into two one-hour sessions with the help of &lt;a href="https://pomodoro-tracker.com/"&gt;Pomodoro-tracker&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  we coded for 25 minutes,&lt;/li&gt;
&lt;li&gt;  took a 5-minutes break,&lt;/li&gt;
&lt;li&gt;  swapped roles.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;      By the first two &lt;strong&gt;25-minutes intervals&lt;/strong&gt; we have coded the basic structure and features of the app and encountered the first bugs we had to deal with in the next step.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By the way: you can have a glimpse at what we've done by looking at the &lt;a href="https://github.com/mateuszjansowa/FunWithCanvas-PairProgramming"&gt;project's GitHub repo&lt;/a&gt;&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;      We spent the last two sessions fixing bugs. We have to confess that between the sessions each of us had a quick peek at the original Wes Bos project to understand the source of our bugs.&lt;br&gt;
      Coding time was over, we were past four 25-minutes Pomodoro intervals but still there was space to improve our Canvas Project. We couldn’t resist spending an extra 30 minutes adjusting the functionalities and patching what we've coded together.&lt;br&gt;
      Done! Now it’s time for summing up how we felt about pair programming.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#its-like-a-real-rally-only-without-a-car" class="anchor"&gt;
  &lt;/a&gt;
  It’s like a real rally – only without a car
&lt;/h2&gt;

&lt;p&gt;      Anna’s impression of being:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  a navigator – as I like to plan and solve problems my way the role of navigator suits me better. It’s nice to feel the flow… until the first bug occurs. Then the fun is over and you start to feel the burden of power – the increasing pressure to find the way out!&lt;/li&gt;
&lt;li&gt;  a driver – this role is a kind of break from strenuous work but on the other hand, listening to the navigator still requires 100% of my attention. What I find difficult is keeping up with the thought process of the navigator and writing the code at the same time.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;      Matt’s impression of being:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  a navigator – more energy-consuming than being a driver. This role requires thinking in a wide perspective. You should predict next steps, potential bugs and pitfalls. I appreciated the Driver’s attention and suggestions when I was stuck with a line of code.&lt;/li&gt;
&lt;li&gt;  a driver – as I am a man of action, the role of the driver suits me fine. I found myself focused while completing the strict Navigator’s instructions. It is appealing to me to stick to one task at a time and not to think in a big picture way.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#we-are-the-champions-anyway" class="anchor"&gt;
  &lt;/a&gt;
  “We are the champions” anyway
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  We respected the rule saying the navigator has priority over the driver to plan the code. When we wanted to break in we asked the navigator: “May I suggest something?”.&lt;/li&gt;
&lt;li&gt;  There was no virtual wrestling over “possessing the keyboard” – the navigator didn’t touch the code without the driver’s permission. Anyway, this situation occurred mainly during debugging.&lt;/li&gt;
&lt;li&gt;  We were completely focused on the task. It resulted in greater efficiency and faster problem-solving.&lt;/li&gt;
&lt;li&gt;  We really did learn from each other.&lt;/li&gt;
&lt;li&gt;  We were disciplined and stuck to the rules of pair programming most of the time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#lets-sum-it-up" class="anchor"&gt;
  &lt;/a&gt;
  Let’s sum it up!
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Why does pair programming pay off?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; No doubt it’s very beneficial, especially for a junior dev. Working in a pair is a great opportunity to see other’s workflow and to learn new coding techniques.&lt;/li&gt;
&lt;li&gt;  Pair programming is often a part of the recruitment process in many companies. A cooperation as ours makes you ready for this long-awaited interview day.&lt;/li&gt;
&lt;li&gt;  You train communication skills – how to listen carefully, talk clearly, and not interrupt each other.&lt;/li&gt;
&lt;li&gt;  Two heads are better than one – you hear it every time while the topic of pair programming comes up. Why? Because it’s absolutely true. There is no better way to quickly track a bug or stop it from even turning up than an extra pair of eyes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It’s challenging!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Keeping one’s mouth shut is not easy. Asides like “What a nice keyboard shortcut, I didn’t know it!” or “Yesterday I had the same problem” are distracting and don’t contribute to work progress.&lt;/li&gt;
&lt;li&gt;  Sticking to the time restrictions. After the second session we were not able to resist the temptation to refactor our code.&lt;/li&gt;
&lt;li&gt;  Pair programming is as beneficial as exhausting. Mental fatigue is a price to pay for high productivity. Thus it would be better not to plan any important or demanding tasks for the same day as pair programming. You may not be able to stay focused or be creative.&lt;/li&gt;
&lt;li&gt;  It takes two to tango. Working in a pair requires effort and involvement from both sides – in terms of planning as well as programming. Better find a nice fellow then! ;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What would we change in the future?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Next time we practice pair programming, we will pick up a technology we are familiar with. We believe it will let us plan the project more freely and independently, coming up with solutions on our own.&lt;/li&gt;
&lt;li&gt;  We would give &lt;a href="https://quokkajs.com"&gt;Quokka&lt;/a&gt; a chance. The workflow slows down whenever it comes to debugging. No need to &lt;code&gt;console.log&lt;/code&gt; would be time-saving.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D1R7vBrY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/fn3t2i4kq56vzgcbjnsp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D1R7vBrY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/fn3t2i4kq56vzgcbjnsp.png" alt="Pair programming quick start"&gt;&lt;/a&gt;&lt;/p&gt;
 Pair programming quick start



&lt;p&gt;&lt;em&gt;Thanks for reading this article! We encourage you to comment and share your opinion on pair programming!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This article was pair-written by:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__user ltag__user__id__543402"&gt;
  
    .ltag__user__id__543402 .follow-action-button {
      background-color: #0074f0 !important;
      color: #ffffff !important;
      border-color: #0074f0 !important;
    }
  
    &lt;a href="/annabuller" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pgYLXWS0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--zTZnDM7R--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/543402/a2be8b6d-784d-4ef9-a341-6c63b8ed0e65.png" alt="annabuller image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/annabuller"&gt;AnnaBuller&lt;/a&gt;
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/annabuller"&gt;I am a junior frontend developer and ex-physio. My mission is to refine communication in IT world.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__user ltag__user__id__497133"&gt;
  
    .ltag__user__id__497133 .follow-action-button {
      background-color: #0074f0 !important;
      color: #ffffff !important;
      border-color: #0074f0 !important;
    }
  
    &lt;a href="/mateuszjansowa" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_cN4RLBK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--MbHE_unK--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/497133/830bbbda-2ce7-490a-a8e0-c23c4d392ce3.jpeg" alt="mateuszjansowa image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/mateuszjansowa"&gt;Mateusz Sowa&lt;/a&gt;
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/mateuszjansowa"&gt;Junior Front End Developer, Aviation and Cosmonautics MEng. 
In love with JavaScript, React and flying.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>pairprogramming</category>
      <category>development</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Why Your Website Should Be Using Dithered Images</title>
      <author>Nathaniel</author>
      <pubDate>Sat, 19 Dec 2020 15:33:24 +0000</pubDate>
      <link>https://dev.to/shadowfaxrodeo/why-your-site-should-be-using-dithered-images-3bad</link>
      <guid>https://dev.to/shadowfaxrodeo/why-your-site-should-be-using-dithered-images-3bad</guid>
      <description>&lt;p&gt;Oversized images have a negative impact on your site's speed, accessibility, seo, and on the climate. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://httparchive.org/reports/state-of-images#bytesImg"&gt;The average byte size of images per web page is nearing 1MB.&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;On the average WordPress site it's already 1.2MB and &lt;a href="https://www.wappalyzer.com/technologies/cms/wordpress/"&gt;WordPress is used by 39% of websites.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's a lot of data. It's more than the average bytes from html, css, fonts, and javascript combined.&lt;/p&gt;

&lt;p&gt;Worse still, most of these are stock images of people in suits doing business.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;There's is a solution. One that dramatically reduces file sizes while making your website look funky and stylish…&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Dithering!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-dithering" class="anchor"&gt;
  &lt;/a&gt;
  What is Dithering?
&lt;/h2&gt;

&lt;p&gt;Dithering is a retro method of reducing the colors in images to display them on old hardware.&lt;/p&gt;

&lt;p&gt;For example, here's a picture of my dog...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bBJRAHVd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/v5hmmdgq71zivpe2s54d.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bBJRAHVd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/v5hmmdgq71zivpe2s54d.jpg" alt="undithered picture of my dog"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Original Picture of my Dog — 123 KB)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;She looks great on our modern devices in full color. But let's say we had to display the same picture on an old black and white computer screen. (Only black and white, not even greyscale.) How would we do this?&lt;/p&gt;

&lt;p&gt;We need to make every pixel in our image either white or black. So each pixel is either &lt;em&gt;on or off&lt;/em&gt;, &lt;em&gt;0 or 1&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;The simplest way is to go through each pixel and if it's a light-ish pixel turn it on, if it's a dark-ish pixel turn it off. Here's the result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wnSP01wm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ig6vklzz9tb6tvok5njy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wnSP01wm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ig6vklzz9tb6tvok5njy.png" alt="undithered black and white picture of my dog"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Reduced to black and white with no dithering – 15 KB)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now, that image look pretty terrible. You can still tell it's a dog, but with just two shades we've lost too much of what makes the original image so great. &lt;em&gt;e.g. her nostrils and details on her fur&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is where dithering comes in.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dithering is the process of placing dots in our image to emulate all the shades we're missing.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The next image uses only &lt;em&gt;on and off&lt;/em&gt; pixels like the one above, but this time we've dithered it:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a6p15jnE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/t2lq30h3dyek0243e2cc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a6p15jnE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/t2lq30h3dyek0243e2cc.png" alt="a dithered picture of my dog"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Reduced to black and white with dithering – 48 KB)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Exactly how this works will be the topic for another post. There's lots of methods of dithering an image. You can dither images with any color palette too.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pbG1YNZz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/u2dzdts5tq28wk2lx6hs.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pbG1YNZz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/u2dzdts5tq28wk2lx6hs.jpg" alt="original dog image but 200px wide"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;(Our original image resized to 200 by 200 pixels — 30KB)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ezLoYCxD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vwxevnauygvg6u5kibha.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ezLoYCxD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vwxevnauygvg6u5kibha.png" alt="dog image reduced to 12 colors and dithered"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;(Reduced to 12 colors using 4x1 Ordered Dithering - 12KB)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8XXPmc7B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/90qwa7m1czbo9r6laczd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8XXPmc7B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/90qwa7m1czbo9r6laczd.png" alt="dog image reduced to 64 colors and dithered"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;(Reduced to 64 colors using 4x4 Ordered Dithering - 14KB)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6DdFYB2T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/yx9zzadrhdooj27y2bpi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6DdFYB2T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/yx9zzadrhdooj27y2bpi.png" alt="dog image dithered to look like an original gameboy game"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;(Dithered to look like the original GameBoy™ - 8KB)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1IU0SUbY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3uzfz4uereorq00bjj0i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1IU0SUbY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3uzfz4uereorq00bjj0i.png" alt="dog image dithered to just 5 colors"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;(Error Diffusion dithering in red, green, blue, black, and white - 17KB)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ge9z8Oam--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/tuvw17lh5k8y2kd3y0mf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ge9z8Oam--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/tuvw17lh5k8y2kd3y0mf.png" alt="dog image dithered to match the colors of my website"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;(Dithered using the color palette of my website - 9KB)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-dither-in-2020" class="anchor"&gt;
  &lt;/a&gt;
  Why Dither in 2020?
&lt;/h2&gt;

&lt;p&gt;It's 2020, we've got a lot of problems, but limited colors on computer screens isn't one of them. So, why should you dither images?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Speed.&lt;/strong&gt; Large images make your website slow and inaccessible to visitors with slow connections. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Visitor's Wallets.&lt;/strong&gt; Large images cost visitors money, sometimes a lot of money. &lt;em&gt;&lt;a href="https://www.visualcapitalist.com/cost-of-mobile-data-worldwide/"&gt;To put it in perspective, a mobile user in Malawi pays $27.41 per gigabyte in Canada its $12.55.&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Your Wallet.&lt;/strong&gt; Serving large images costs you money too.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Climate Change.&lt;/strong&gt; Big images waste electricity and emit carbon. &lt;a href="https://www.bbc.com/future/article/20200305-why-your-internet-habits-are-not-as-clean-as-you-think"&gt;The internet is responsible for 3.7% of global carbon emissions.&lt;/a&gt; A number that keeps growing as we send more and more data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;SEO.&lt;/strong&gt; Faster loading times and a good user experience will rank your site higher on search engines.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-about-other-image-optimizations" class="anchor"&gt;
  &lt;/a&gt;
  What about other image optimizations?
&lt;/h3&gt;

&lt;p&gt;Part of this issue can be solved by optimising image sizes, and serving images as &lt;code&gt;webp&lt;/code&gt;. But a full color &lt;code&gt;webp&lt;/code&gt; image is still much larger than a dithered &lt;code&gt;png&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;edit: you can get even more gains by using &lt;code&gt;lossless WEBP&lt;/code&gt; on a dithered image&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-note-on-image-formats" class="anchor"&gt;
  &lt;/a&gt;
  A note on image formats
&lt;/h3&gt;

&lt;p&gt;The original image of the dog on this post is a &lt;code&gt;jpeg&lt;/code&gt;, and the dithered images are &lt;code&gt;png&lt;/code&gt;. This is because &lt;code&gt;jpeg&lt;/code&gt; is really good at compressing full color photos, but struggles to compress dithered images. In contrast &lt;code&gt;png&lt;/code&gt; does dithered images really well.&lt;/p&gt;

&lt;p&gt;If the original image was a &lt;code&gt;png&lt;/code&gt; it would have been a much larger file size. The reduction in size after dithering it would have seemed much more impressive. But the comparison wouldn't have been very useful.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-to-dither-and-when-no-to-dither" class="anchor"&gt;
  &lt;/a&gt;
  When to Dither and when no to dither?
&lt;/h2&gt;

&lt;p&gt;I admit. Not every image on the internet should be dithered.&lt;/p&gt;

&lt;p&gt;There are sites where the images need to be full color: (i.e. A clothing store, a photography blog.) but there are lots of websites where dithered images would look great...&lt;/p&gt;

&lt;p&gt;Two situations where I'd love to see more dithering are:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#blogs-and-online-magazines" class="anchor"&gt;
  &lt;/a&gt;
  Blogs and Online Magazines
&lt;/h3&gt;

&lt;p&gt;Most blog posts and magazine articles use images simply to illustrate a point in the written content of the piece. A full-color image is usually not needed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#featured-images" class="anchor"&gt;
  &lt;/a&gt;
  "Featured Images"
&lt;/h3&gt;

&lt;p&gt;Many (if not most) blog posts start with a big eye-catching image. This is often a stock image vaguely related to the topic. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;cool coding idea ...computer-screen-with-code.jpg&lt;/em&gt;&lt;br&gt;
&lt;em&gt;money problems ...someone-scratching-their-head.jpg&lt;/em&gt;&lt;br&gt;
&lt;em&gt;meditation guide ...sunset.jpg&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A reasonable argument could be made that these images should just be deleted. But if you really need to catch eyes...dither them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-dither-images" class="anchor"&gt;
  &lt;/a&gt;
  How to dither images?
&lt;/h2&gt;

&lt;p&gt;You can use this tool I've made to diher images: &lt;a href="https://doodad.dev/dither-me-this"&gt;Dither Me This&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're working with a static site generator, and want your images dithered at build time. I'll be updating this post with a git repo soon. &lt;/p&gt;

&lt;p&gt;Let me know if you have any other questions about dithering!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>webperf</category>
      <category>performance</category>
      <category>images</category>
    </item>
    <item>
      <title>Build and run Angular application in a Docker container</title>
      <author>Wojtek Krzywiec</author>
      <pubDate>Sat, 19 Dec 2020 15:07:34 +0000</pubDate>
      <link>https://dev.to/wkrzywiec/build-and-run-angular-application-in-a-docker-container-19pm</link>
      <guid>https://dev.to/wkrzywiec/build-and-run-angular-application-in-a-docker-container-19pm</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Cover image by &lt;a href="https://unsplash.com/@alicegrace"&gt;Alice Achterhof&lt;/a&gt; on &lt;a href="https://unsplash.com"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;In this blog post I would like to show you how to run your Angular application in a Docker container, then I’ll introduce a multi-stage Docker build which will make the container smaller and your work more automated.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Without further introduction, let’s get hands dirty and put an Angular app into the Docker container. For purpose of this blog post I’ll use my old project — &lt;a href="https://github.com/wkrzywiec/aston-villa-app"&gt;aston-villa-app&lt;/a&gt;. It’s a simple dashboard with league standings of one of my favourite football club — Aston Villa.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NNIs-hhP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/j72uij2e2m3o97zoaweh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NNIs-hhP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/j72uij2e2m3o97zoaweh.png" alt="dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But if you want to use your project you can go with it, all the steps will be the same as for my app.&lt;/p&gt;

&lt;p&gt;Ok, so to get my application you’ll need first to clone it, so open a terminal and type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; git clone https://github.com/wkrzywiec/aston-villa-app.git
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Now, you’ve got it in your local folder and then enter it. Next make sure that you have installed Node.js and Angular CLI on your local PC. Full instruction can be found on &lt;a href="https://angular.io/guide/setup-local"&gt;the official Angular website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now if you installed both prerequisites you can compile an Angular app. Therefore open a terminal in the root folder of the app and type:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; ng build &lt;span class="nt"&gt;--prod&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;This will result in creation of a new folder called &lt;strong&gt;dist/aston-villa-app&lt;/strong&gt; in which all compiled files are put.&lt;/p&gt;

&lt;p&gt;Then create a new file called &lt;strong&gt;Dockerfile&lt;/strong&gt; that will be located in the project’s root folder. It should have these following lines:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; nginx:1.17.1-alpine&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; nginx.conf /etc/nginx/nginx.conf&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; /dist/aston-villa-app /usr/share/nginx/html&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;This simple Dockerfile will tell Docker to do three things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;first to get a &lt;a href="https://hub.docker.com/_/nginx"&gt;nginx Docker image from Docker Hub&lt;/a&gt; tagged with &lt;code&gt;1.17.1-alpine&lt;/code&gt; (it’s like a version number),&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;then copy-paste the default nginx configuration,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;and finally copy-paste the compiled application (we done it in previous step) to the container.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My default nginx configuration file looks as follows (it’s located in the same directory as Dockerfile):&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight conf"&gt;&lt;code&gt;&lt;span class="n"&gt;events&lt;/span&gt;{}

&lt;span class="n"&gt;http&lt;/span&gt; {

    &lt;span class="n"&gt;include&lt;/span&gt; /&lt;span class="n"&gt;etc&lt;/span&gt;/&lt;span class="n"&gt;nginx&lt;/span&gt;/&lt;span class="n"&gt;mime&lt;/span&gt;.&lt;span class="n"&gt;types&lt;/span&gt;;

    &lt;span class="n"&gt;server&lt;/span&gt; {

        &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;;
        &lt;span class="n"&gt;server_name&lt;/span&gt; &lt;span class="n"&gt;localhost&lt;/span&gt;;
        &lt;span class="n"&gt;root&lt;/span&gt; /&lt;span class="n"&gt;usr&lt;/span&gt;/&lt;span class="n"&gt;share&lt;/span&gt;/&lt;span class="n"&gt;nginx&lt;/span&gt;/&lt;span class="n"&gt;html&lt;/span&gt;;
        &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;.&lt;span class="n"&gt;html&lt;/span&gt;;

        &lt;span class="n"&gt;location&lt;/span&gt; / {
                &lt;span class="n"&gt;try_files&lt;/span&gt; $&lt;span class="n"&gt;uri&lt;/span&gt; $&lt;span class="n"&gt;uri&lt;/span&gt;/ /&lt;span class="n"&gt;index&lt;/span&gt;.&lt;span class="n"&gt;html&lt;/span&gt;;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;I don’t want to go that much into details what each line means here (if you would like there are two very nice links with more explanation at the end of this article). In general, here we define the server on which application will be hosted, its port and default behaviour.&lt;/p&gt;

&lt;p&gt;Finally, go back to the terminal and use this command:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; docker build &lt;span class="nt"&gt;-t&lt;/span&gt; av-app-image &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;If you check the list of locally available Docker images you should get similar output:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; docker image &lt;span class="nb"&gt;ls

&lt;/span&gt;REPOSITORY    TAG            IMAGE ID      
av-app-image  latest         a160a7494a19      
nginx         1.17.1-alpine  ea1193fd3dde        
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;To run the image you’ve just created use following command:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; docker run &lt;span class="nt"&gt;--name&lt;/span&gt; av-app-container &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; 8080:80 av-app-image
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;With it first you give a name to the container ( &lt;code&gt;--name av-app-container&lt;/code&gt; ), then make sure that it will run in the background (&lt;code&gt;-d&lt;/code&gt;), next you map container port to your local ( &lt;code&gt;-p 8080:80&lt;/code&gt; ) and finally you pick a base Docker image to be that you’ve just created - &lt;code&gt;av-app-image&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To check if new container is running in terminal type:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; docker container &lt;span class="nb"&gt;ls

&lt;/span&gt;CONTAINER ID  IMAGE         STATUS         NAMES
2523d9f77cf6  av-app-image  Up 26 minutes  av-app-container
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Or you can enter a web browser and go to &lt;a href="http://localhost:8080/"&gt;http://localhost:8080/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Alright! That was easy! Wasn’t it? I hope it was for you, but you could see that it’s a multi step process and as such, beside being time consuming, is also error-prone.&lt;/p&gt;

&lt;p&gt;So how it can be done better? Maybe it could be better when we include the compile phase ( &lt;code&gt;ng build --prod&lt;/code&gt; ) into the Docker build? That sounds promising, let’s do it!&lt;/p&gt;

&lt;p&gt;To achieve it I’d like to introduce something that’s called &lt;a href="https://docs.docker.com/develop/develop-images/multistage-build/"&gt;Multi-stage Docker build&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It was introduced in Docker 17.05 and it’s main goal was to create smaller containers without loosing the readability of a Dockerfile. With this approach we can divide building a Docker image into smaller phases (stages) where result of previous one (or part of it) can be used in another.&lt;/p&gt;

&lt;p&gt;To put it into our context, we’ll divide our Docker build into two stages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;compiling the source code into production ready output,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;running compiled app in a Docker image.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Only compiled output from first stage will be moved to the second so small size of the container will be preserved.&lt;/p&gt;

&lt;p&gt;Until this point we’ve done the second step, so let’s focus on a first one.&lt;/p&gt;

&lt;p&gt;For compiling the source code we’ll go with different Docker image as a base, which is that containing &lt;a href="https://hub.docker.com/_/node/"&gt;Node.js&lt;/a&gt;. The part of Dockerfile that covers building stage is:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:12.7-alpine AS build&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /usr/src/app&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; package.json package-lock.json ./&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;npm run build
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;In this case there are more lines which are responsible for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;( &lt;code&gt;FROM&lt;/code&gt; ) getting &lt;em&gt;node&lt;/em&gt; Docker image from registry and naming the compilation stage as build (so we will be able to refer to it in another stage),&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;( &lt;code&gt;WORKDIR&lt;/code&gt; ) setting default work directory,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;( &lt;code&gt;COPY&lt;/code&gt; ) copying &lt;em&gt;package.json&lt;/em&gt; &amp;amp; &lt;em&gt;package-lock.json&lt;/em&gt; files from local root directory — this file contains all dependencies that our app requires,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;( &lt;code&gt;RUN&lt;/code&gt; ) installing necessary libraries (based on a file copied in previous step),&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;( &lt;code&gt;COPY&lt;/code&gt; ) copying all remaining files with a source code,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;( &lt;code&gt;RUN&lt;/code&gt; ) and finally compiling our app.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To make building our Docker image even more efficient we can add to the project’s root additional file called &lt;em&gt;.dockerignore&lt;/em&gt; . This one works similar to &lt;em&gt;.gitignore&lt;/em&gt; and in it we can define what files and folders we want to Docker to ignore. In our case we don’t want to copy any files from &lt;em&gt;node_modules&lt;/em&gt; and &lt;em&gt;dist&lt;/em&gt; folders, because they’re not needed in compilation.&lt;/p&gt;

&lt;p&gt;Therefore this file should look like as follows:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dist
node_modules
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Alright so let’s combine both Docker stages into one and as a result we’ll get:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="c"&gt;### STAGE 1: Build ###&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:12.7-alpine AS build&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /usr/src/app&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; package.json package-lock.json ./&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;npm run build

&lt;span class="c"&gt;### STAGE 2: Run ###&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; nginx:1.17.1-alpine&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; nginx.conf /etc/nginx/nginx.conf&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; --from=build /usr/src/app/dist/aston-villa-app /usr/share/nginx/html&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;The only adjustment that I made here is that I’ve added comments before each stage and also I’ve added &lt;code&gt;--from=build&lt;/code&gt; flag to tell Docker that it needs to copy compiled files from &lt;em&gt;build&lt;/em&gt; stage (also the source path have changed, because files are located in a different folder).&lt;/p&gt;

&lt;p&gt;Going back to a terminal, first you need to create a Docker image:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; docker build &lt;span class="nt"&gt;-t&lt;/span&gt; av-app-multistage-image &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;And then run the app (on a different port):&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; docker run &lt;span class="nt"&gt;--name&lt;/span&gt; av-app-multistage-container &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; 8888:80 av-app-multistage-image
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;And if you now enter &lt;a href="http://localhost:8888/"&gt;http://localhost:8888/&lt;/a&gt; you’ll see that it’s running!&lt;/p&gt;

&lt;p&gt;If you want to check this project go to its repository on GitHub:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vJ70wriM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/wkrzywiec"&gt;
        wkrzywiec
      &lt;/a&gt; / &lt;a href="https://github.com/wkrzywiec/aston-villa-app"&gt;
        aston-villa-app
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Aston Villa Dashboard made in Angular 7
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#references" class="anchor"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/develop/develop-images/multistage-build/"&gt;&lt;strong&gt;Use multi-stage builds&lt;/strong&gt; on docs.docker.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/avatsaev/create-efficient-angular-docker-images-with-multi-stage-builds-1f3n"&gt;&lt;strong&gt;Create efficient Angular Docker images with Multi Stage Builds&lt;/strong&gt;
on dev.to&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://malcoded.com/posts/angular-docker/"&gt;&lt;strong&gt;Run Angular in a Docker Container using Multi-Stage builds&lt;/strong&gt;
on malcoded.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@tonistiigi/advanced-multi-stage-build-patterns-6f741b852fae"&gt;&lt;strong&gt;Advanced multi-stage build patterns&lt;/strong&gt; on medium.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@DenysVuika/your-angular-apps-as-docker-containers-471f570a7f2"&gt;&lt;strong&gt;Your Angular apps as Docker containers&lt;/strong&gt; on medium.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/understanding-the-nginx-configuration-file-structure-and-configuration-contexts"&gt;&lt;strong&gt;Understanding the Nginx Configuration File Structure and Configuration Contexts&lt;/strong&gt; on www.digitalocean.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nginx.org/en/docs/beginners_guide.html#conf_structure"&gt;&lt;strong&gt;Beginner's Guide&lt;/strong&gt; on nginx.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>docker</category>
      <category>beginners</category>
      <category>angular</category>
      <category>devops</category>
    </item>
    <item>
      <title>How to quickly build a website using Tailwindcss and Tailblocks</title>
      <author>Siddharth Chaudhary</author>
      <pubDate>Sat, 19 Dec 2020 14:21:01 +0000</pubDate>
      <link>https://dev.to/sidchaudhary04/how-to-quickly-build-a-website-using-tailwindcss-and-tailblocks-k22</link>
      <guid>https://dev.to/sidchaudhary04/how-to-quickly-build-a-website-using-tailwindcss-and-tailblocks-k22</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4AMukO51--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://refactoringui.nyc3.cdn.digitaloceanspaces.com/tailwind-logo.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4AMukO51--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://refactoringui.nyc3.cdn.digitaloceanspaces.com/tailwind-logo.svg" alt="Tailwindcss Logo"&gt;&lt;/a&gt;&lt;br&gt;
I recently discovered this tool that allowed me to rapidly build my own &lt;a href="https://siddharth.one"&gt;website&lt;/a&gt;. Hope it might be useful.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-tailwindcss" class="anchor"&gt;
  &lt;/a&gt;
  What is Tailwindcss
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://tailwindcss.com"&gt;Tailwindcss&lt;/a&gt; is a utility based css framework for rapid development and is very useful in some cases. My own &lt;a href="https://siddharth.one"&gt;website&lt;/a&gt; is built entirely on tailwindcss, so I definitely would recommend it to you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tailblocks" class="anchor"&gt;
  &lt;/a&gt;
  Tailblocks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mertjf.github.io/tailblocks/"&gt;Tailblocks&lt;/a&gt; is a very simple tool that provides you with readymade Tailwindcss blocks. It includes most of the blocks that you would need to build a great website, including navbars, hero sections and footers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use" class="anchor"&gt;
  &lt;/a&gt;
  How to use
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Setup your html document like below
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;iDOCTYPE&lt;/span&gt; &lt;span class="na"&gt;html&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt;  &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Your title&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Go to &lt;a href="https://mertjf.github.io/tailblocks/"&gt;tailblocks&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Pick out a block you like.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FB60bPEd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/qczillga8zemwyvot7zm.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;Click the '&amp;lt;&amp;gt;View Code' button.&lt;/li&gt;
&lt;li&gt;Copy the code.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Paste it into the html document and voila 🤯&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Repeat the process with as many blocks as you like 👍.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
      <category>tailwindcss</category>
    </item>
    <item>
      <title>Introduction to Guild - The free self-hosted team management solution </title>
      <author>Guild</author>
      <pubDate>Sat, 19 Dec 2020 13:58:24 +0000</pubDate>
      <link>https://dev.to/guild/introduction-to-guild-the-free-self-hosted-team-management-solution-933</link>
      <guid>https://dev.to/guild/introduction-to-guild-the-free-self-hosted-team-management-solution-933</guid>
      <description>&lt;h1&gt;
  &lt;a href="#idea" class="anchor"&gt;
  &lt;/a&gt;
  💡 Idea
&lt;/h1&gt;

&lt;p&gt;With Covid and so many people working remotely, managing your team could be a challenging task. Keeping an eye on what your team is working on is going to be crucial. &lt;/p&gt;

&lt;p&gt;There are many management apps out there, but so many of them are really complex or very expensive. If there was an app where a manager could take one look at a single page and see who's on shift at the moment and what they’re working on, it could be really cool!&lt;/p&gt;

&lt;p&gt;This is why we decided to create Guilds! &lt;strong&gt;An open-source App for managing teams&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A guild is a group of people who are on a mission to complete a common goal. Your team is your guild, and this self-hosted solution will put the simplicity back into organizing a team. It's a simple dashboard of company announcements, team member availability, and team member status. Keeping it simple because managing your "management system" shouldn't be a task in itself.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#landing-page" class="anchor"&gt;
  &lt;/a&gt;
  📃 Landing Page
&lt;/h1&gt;

&lt;p&gt;As of the time being, you can find the landing page of the Guild project here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://guild.so"&gt;https://guild.so&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#screenshot" class="anchor"&gt;
  &lt;/a&gt;
  📸 Screenshot
&lt;/h1&gt;

&lt;p&gt;Landing Page: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ydij2_tV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/c3EiOXH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ydij2_tV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/c3EiOXH.png" alt="Guild - The free self-hosted team management solution"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Login Form:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7GBLojvq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/uhutJJ8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7GBLojvq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/uhutJJ8.png" alt="Guild login form"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;User Profile&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5SfwLKU0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/8XHLh4E.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5SfwLKU0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/8XHLh4E.png" alt="Guild User Profile"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Team management:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zvxtLV8Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/MChYo3p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zvxtLV8Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/MChYo3p.png" alt="Guild Teams"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;User status dashboard:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--658Fy9zg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/dLBUvc0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--658Fy9zg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/dLBUvc0.png" alt="User status dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#current-status" class="anchor"&gt;
  &lt;/a&gt;
  ✅ Current Status
&lt;/h1&gt;

&lt;p&gt;We've taken the first steps in getting ready with the project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Domain name: &lt;a href="https://guild.so"&gt;https://guild.so&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Landing page&lt;/li&gt;
&lt;li&gt;Initial Laravel and Jetstream Setup&lt;/li&gt;
&lt;li&gt;Different Teams and roles (Developers, Managers, etc.)&lt;/li&gt;
&lt;li&gt;Registration and User Profile Management&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#things-to-do" class="anchor"&gt;
  &lt;/a&gt;
  ❓ Things To Do
&lt;/h1&gt;

&lt;p&gt;We've got the initial idea and setup done however there is still a lot to do!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CRUD for new tasks with validation&lt;/li&gt;
&lt;li&gt;Discord &amp;amp; Slack notifications for common actions (Add/Delete/Update Task, start/end shift and etc)&lt;/li&gt;
&lt;li&gt;Simple Time Tracking&lt;/li&gt;
&lt;li&gt;Badges for specific accomplishments (e.g. closed 10 tasks, worked for a total of 100 hours, etc.)&lt;/li&gt;
&lt;li&gt;Redesign Laravel Jetstream components&lt;/li&gt;
&lt;li&gt;Deploy to DO button&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#tools" class="anchor"&gt;
  &lt;/a&gt;
  🔧 Tools
&lt;/h1&gt;

&lt;p&gt;The tools which we've used so far are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Design Tool: &lt;a href="https://devdojo.com/tails"&gt;Tails&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Backend: &lt;a href="https://laravel.com"&gt;Laravel&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Scaffolding: &lt;a href="https://jetstream.laravel.com"&gt;Laravel Jetstream&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Frontend Stack: &lt;a href="https://tailwindcss.com"&gt;TailwindCSS&lt;/a&gt; &amp;amp; [Laravel Livewire]&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>dohackathon</category>
      <category>laravel</category>
      <category>javascript</category>
      <category>css</category>
    </item>
    <item>
      <title>How I Easily Code For 8+ Hours Without Feeling Tired (My Productivity System)</title>
      <author>Nick Bull</author>
      <pubDate>Sat, 19 Dec 2020 12:15:59 +0000</pubDate>
      <link>https://dev.to/nickbulljs/how-i-easily-code-for-8-hours-without-feeling-tired-my-productivity-system-23i8</link>
      <guid>https://dev.to/nickbulljs/how-i-easily-code-for-8-hours-without-feeling-tired-my-productivity-system-23i8</guid>
      <description>&lt;p&gt;I've been coding wrong my whole life.&lt;/p&gt;

&lt;p&gt;I thought it was okay to just sit down at my desk, open my laptop, take a task from my to-do list, and code it until I felt tired.&lt;/p&gt;

&lt;p&gt;But in reality, this style of work always killed my productivity levels after 2-4 hours of coding. I felt so tired that I didn't want to do anything except different low energy tasks (&lt;em&gt;like code review&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Today I can code 8+ hours without feeling like crap after.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What has changed?&lt;/p&gt;

&lt;p&gt;My approach to work.&lt;/p&gt;

&lt;p&gt;After 62+ self-development books, dozens of articles and studies about productivity, and my trials and errors, I have created a productivity system that helps me to code, write, create, and live at my maximum capabilities without procrastination, tiredness, and brain fog.&lt;/p&gt;

&lt;p&gt;Here it is.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-productivity-system" class="anchor"&gt;
  &lt;/a&gt;
  My Productivity System
&lt;/h2&gt;

&lt;p&gt;My productivity system stays on 3 main pillars:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Schedule.&lt;/li&gt;
&lt;li&gt;To-do for tomorrow.&lt;/li&gt;
&lt;li&gt;System 69 (!)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's look closer at each of them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#schedule" class="anchor"&gt;
  &lt;/a&gt;
  Schedule
&lt;/h2&gt;

&lt;p&gt;Everything starts with a schedule. What, where, and when I do.&lt;/p&gt;

&lt;p&gt;My schedule looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3gf4lxc7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608378643183/3ZswRiq7N.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3gf4lxc7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608378643183/3ZswRiq7N.jpeg" alt="sheduled.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I’m using a whiteboard to constantly remind myself of what I should do at the exact moment.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I always neglected to create a schedule.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“I know what and when I should do!”&lt;/em&gt; I told myself.&lt;/p&gt;

&lt;p&gt;But in reality, I always forget to do or overdo my daily activities (&lt;em&gt;even with a habit to do them&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;For example, when I woke up at 7:00 in the morning I knew that I had 1 free hour before my work. In that hour I wanted to have time to do a morning ritual (eating, stretching, showering, breathing) and to read for 30 minutes. But many times I could have breakfast in the morning for an hour, forgetting to take the time to read. Even if I kept in mind that I have to read for 30 minutes every morning. I &lt;em&gt;overdone&lt;/em&gt; my activity (breakfast) and stole my time from another activity (reading).&lt;/p&gt;

&lt;p&gt;I have also noticed that without a schedule it takes a lot of time to decide what I should do next. I could finish the workout in the afternoon, take shower, sit at my desk, open laptop and then decide which task I should pick next within 10 minutes. If we count how much the same decisions I made during the day, 10 minutes becomes 60 minutes. &lt;strong&gt;One hour!&lt;/strong&gt; It’s a lot of time.&lt;/p&gt;

&lt;p&gt;The other thing is that in the process of deciding what I should do next, there is always an angel and a demon sitting on my shoulders and "helping" me decide whether I should work on the essential things to me or do some light work, or even take a break to relax. I often had to use willpower to force myself to do the "right" things without a schedule.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“If you waste resources trying to decide when or where to work, you’ll impede your capacity to do the work.” – &lt;a href="https://www.theguardian.com/science/2013/oct/05/daily-rituals-creative-minds-mason-currey"&gt;Guardian&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When I made the schedule, these problems disappeared.&lt;/p&gt;

&lt;p&gt;Now, I always have time to do what I have planned.&lt;/p&gt;

&lt;p&gt;I always know what I should do next.&lt;/p&gt;

&lt;p&gt;I don’t need to use willpower to force myself to do essential things.&lt;/p&gt;

&lt;p&gt;Schedule puts my decision-making process on autopilot.&lt;/p&gt;

&lt;p&gt;If you want to create your schedule I recommend using Google calendar for it, so you can easily edit or share your schedule with someone else. Also, I recommend having a schedule on some piece of paper or whiteboard, to always remind yourself of what, where, and when you should do.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#todo-for-tomorrow" class="anchor"&gt;
  &lt;/a&gt;
  To-Do For Tomorrow
&lt;/h2&gt;

&lt;p&gt;If the schedule helps me decide what, where and when I should do, the to-do list helps me decide &lt;strong&gt;exactly&lt;/strong&gt; &lt;strong&gt;what&lt;/strong&gt; I should do next.&lt;/p&gt;

&lt;p&gt;I could spend the "perfectly planned" day, but not do what is essential to me.&lt;/p&gt;

&lt;p&gt;For example, when I opened my schedule and saw a “Deep Work” block from 08.00 to 09.30, I could do deep work, but it didn’t guarantee that I would be doing important things during it and not some light work.&lt;/p&gt;

&lt;p&gt;Our brain is always trying to spend less energy and will do everything to convince you not to waste energy.&lt;/p&gt;

&lt;p&gt;That's where the to-do list comes in.&lt;/p&gt;

&lt;p&gt;It helps me &lt;strong&gt;even more&lt;/strong&gt; to put the decision-making process on autopilot and spend less time and cognitive resources on it.&lt;/p&gt;

&lt;p&gt;It guarantees that I will do only essential things (&lt;em&gt;most of the time&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;My to-do list is simple, I use a plain paper notebook to make it and &lt;a href="https://www.notion.so/"&gt;Notion&lt;/a&gt; as a digital copy (&lt;em&gt;I use Notion for everything, but that's for another article&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e5d6d6_d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608378601645/oaEOZMMy4.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e5d6d6_d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608378601645/oaEOZMMy4.jpeg" alt="todo.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S2kyWdRD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608378595485/nFdvJ9q3s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S2kyWdRD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1608378595485/nFdvJ9q3s.png" alt="to do 2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When I create my to-do list I create it in the evening for tomorrow day.&lt;/p&gt;

&lt;p&gt;Why?&lt;/p&gt;

&lt;p&gt;When you plan your day in the morning, you are thinking about every task that needs to be done today. It is good when the task is clear and simple and you know what to do (like &lt;em&gt;“code review last commit by John”&lt;/em&gt;). But when you don’t know what exactly needs to be done, it will take time to figure it out. Like when you know that you need to write an article, but don’t know about what. It will take time to research your ideas and choose the right topic to write about.&lt;/p&gt;

&lt;p&gt;And in addition to the fact that such tasks take time to research, there is a chance that you will fall into the trap of your thinking process (&lt;em&gt;when you start imagining results, details, processes, and other various things related to the task, and you spend 5, 10, 15, or even more minutes on it&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;The process of creating a to-do list in the morning wastes your productive morning time, your cognitive resources, and has a chance to distract you.&lt;/p&gt;

&lt;p&gt;That’s why I create a to-do list for tomorrow and not in the morning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#system-69" class="anchor"&gt;
  &lt;/a&gt;
  System 69
&lt;/h2&gt;

&lt;p&gt;When I started coding I did it like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open laptop.&lt;/li&gt;
&lt;li&gt;Open Code editor (&lt;em&gt;VSCode&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;Pick a task.&lt;/li&gt;
&lt;li&gt;Code until I feel tired.&lt;/li&gt;
&lt;li&gt;Take a break (&lt;em&gt;spending time on social media&lt;/em&gt;).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Looks normal?&lt;/p&gt;

&lt;p&gt;Yeah.&lt;/p&gt;

&lt;p&gt;Until I read about &lt;a href="https://en.wikipedia.org/wiki/Pomodoro_Technique"&gt;Pomodoro&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Pomodoro Technique is a time management method when you break down work into intervals, traditionally 25 minutes in length, separated by short breaks. For example, 25-minute coding and a 5-minute break after. And divide the entire workday into such breaks.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;25 minute coding.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;5 minute break.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;25 minute coding.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;5 minute break.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;25 minute coding.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;etc. until the end of the working day.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I tried it and it worked, but not as great as I imagined. I definitely became more productive, but for an additional hour. And I found the 25-minute work intervals are too short for me &lt;em&gt;(It took me 5-10 minutes to activate the &lt;a href="https://en.wikipedia.org/wiki/Flow_%28psychology%29"&gt;flow state&lt;/a&gt;, so I couldn’t perform a "deep work" for more than 15 minutes with such intervals).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So I went further.&lt;/p&gt;

&lt;p&gt;I found the 52 + 17 rule.&lt;/p&gt;

&lt;p&gt;What’s this?&lt;/p&gt;

&lt;p&gt;52-minute of work and a 17-minute break. Similar to the Pomodoro Technique.&lt;/p&gt;

&lt;p&gt;I tested it and it worked better for me than 25+5 intervals. Now I could work productively for two more hours, but I still felt like crap after a workday.&lt;/p&gt;

&lt;p&gt;So I didn’t stop on the 52 + 17 rule.&lt;/p&gt;

&lt;p&gt;I started researching more about productivity and motivation and learned about effective breaks.&lt;/p&gt;

&lt;p&gt;When most people hear the word “break” the first association is “doing anything except work.” Like scrolling Instagram feed, chatting with friends, or watching Youtube.&lt;/p&gt;

&lt;p&gt;Technically these are all breaks, but not effective ones.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The main sign of an effective break is that it gives you energy, not takes it away.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Example of my effective breaks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Stretching.&lt;/li&gt;
&lt;li&gt;  Hydrating.&lt;/li&gt;
&lt;li&gt;  Light workout.&lt;/li&gt;
&lt;li&gt;  Walking (&lt;em&gt;without the headphones&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;  Breathing (&lt;em&gt;box breathing, Wim Hof method&lt;/em&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After I learned about effective breaks, my workday became almost perfect - 52 minutes of work (&lt;em&gt;45 minutes often in a flow state, because I need 10 minutes to reach it&lt;/em&gt;) and 17 minutes of an effective break that gives me energy.&lt;/p&gt;

&lt;p&gt;Everything worked perfectly, and I have to stop there…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But I went further.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I was obsessed with the idea to make every hour of my work the most productive hour on earth.&lt;/p&gt;

&lt;p&gt;And I think I did it.&lt;/p&gt;

&lt;p&gt;One thing that kept me from being in a flow state all the time was distraction.&lt;/p&gt;

&lt;p&gt;For years I didn't pay attention to it. To all the notifications that pop-up on my phone, the noise of people around me, the hundreds of open tabs and windows on my laptop, all those distractions.&lt;/p&gt;

&lt;p&gt;I set a timer for 52 minutes, started to work, got in a flow state, and then BAM! A new notification pops up. And I like, &lt;em&gt;“What’s in there?”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The flow state is gone.&lt;/p&gt;

&lt;p&gt;Focus on the task is gone.&lt;/p&gt;

&lt;p&gt;Productivity is gone.&lt;/p&gt;

&lt;p&gt;One tiny notification instantly ruined my productivity.&lt;/p&gt;

&lt;p&gt;I never paid attention to it until I started to deep dive into the personal development field (&lt;em&gt;I wish I started earlier&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Now, when I work I turn off all notifications, tell people to not bother me, put on my headphones (&lt;em&gt;if I work in a noisy environment&lt;/em&gt;), close all the browser tabs that are not related to the task, and &lt;strong&gt;do everything I can to avoid distractions during my working hours.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So far so good, my system seemed perfect.&lt;/p&gt;

&lt;p&gt;But can we go further?&lt;/p&gt;

&lt;p&gt;Of course.&lt;/p&gt;

&lt;p&gt;The last piece of the puzzle is &lt;strong&gt;NO multitasking.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When I hear today that someone can do multitasking, I smile.&lt;/p&gt;

&lt;p&gt;Multitasking is &lt;a href="https://www.theladders.com/career-advice/why-multitasking-is-a-myth-backed-by-science"&gt;not working&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://health.clevelandclinic.org/science-clear-multitasking-doesnt-work/"&gt;It’s a myth.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is only &lt;a href="https://www.researchgate.net/publication/45629771_Supertaskers_Profiles_in_extraordinary_multitasking_ability"&gt;one study&lt;/a&gt; that shows that 2.5% of subjects can do multitasking with the same efficiency levels as performing one task at a time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Other 97.5% are not.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So when I pick some task and start doing it, I focus only on it.&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;One task per time. *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Not two.&lt;/p&gt;

&lt;p&gt;Not three.&lt;/p&gt;

&lt;p&gt;Only one.&lt;/p&gt;

&lt;p&gt;This is a rule I follow during my working hours.&lt;/p&gt;

&lt;p&gt;Always.&lt;/p&gt;

&lt;p&gt;Okay, now we have all the pieces of System 69.&lt;/p&gt;

&lt;p&gt;Let's glue them together and see what we get:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;52-minute of work.&lt;/li&gt;
&lt;li&gt;17-minute of an effective break.&lt;/li&gt;
&lt;li&gt;Remove all distractions.&lt;/li&gt;
&lt;li&gt;Focus on one task at a time.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Awesome!&lt;/p&gt;

&lt;p&gt;This is my System 69.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-the-end" class="anchor"&gt;
  &lt;/a&gt;
  In the end…
&lt;/h2&gt;

&lt;p&gt;These are the three pillars of my productivity system.&lt;/p&gt;

&lt;p&gt;Today I successfully use this system to operate as a content creator. Every day I write in &lt;a href="https://blog.nickbulljs.com/"&gt;my blog&lt;/a&gt;, build the &lt;a href="https://javascriptcoursethatworks.com/"&gt;most practical JavaScript course&lt;/a&gt; ever, create &lt;a href="https://twitter.com/nickbulljs"&gt;social media content&lt;/a&gt;, write a book on &lt;a href="https://nailthetechnicalinterview.com/"&gt;how to Nail The Technical Interview and Land a High-Paying Job&lt;/a&gt;, and do many more tasks easily without effort and tiredness.&lt;/p&gt;

&lt;p&gt;Literally, you can use my productivity system to successfully do any kind of job, not just coding. &lt;em&gt;But use it wisely.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Have a great one!&lt;/p&gt;

&lt;p&gt;– Nick Bull&lt;/p&gt;

&lt;p&gt;And also &lt;em&gt;before I forget&lt;/em&gt;, every week I send out a "3–2–1" newsletter with 3 tech news, 2 articles, and 1 piece of advice for you.&lt;/p&gt;

&lt;p&gt;🔥 &lt;a href="https://nickbulljs.com/"&gt;Get the latest Frontend news here.&lt;/a&gt; 🔥&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
