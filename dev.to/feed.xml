<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Bootstrap 5 - Free Django Templates</title>
      <author>Sm0ke</author>
      <pubDate>Mon, 13 Dec 2021 06:53:46 +0000</pubDate>
      <link>https://dev.to/sm0ke/bootstrap-5-free-django-templates-4pi0</link>
      <guid>https://dev.to/sm0ke/bootstrap-5-free-django-templates-4pi0</guid>
      <description>&lt;p&gt;Hello Coders!&lt;/p&gt;

&lt;p&gt;Hello! This article presents a curated list with &lt;code&gt;open-source&lt;/code&gt; &lt;a href="https://appseed.us/django"&gt;Django Templates&lt;/a&gt; styled with &lt;strong&gt;Bootstrap 5&lt;/strong&gt;, a popular CSS/JS framework. All mentioned projects are available for download directly from Github and based on the permissive license the source code can be used for unlimited hobby &amp;amp; commercial projects. For newcomers, &lt;strong&gt;Django&lt;/strong&gt; is a leading web framework actively versioned by programming experts and open-source enthusiasts. Thanks for reading!&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/product/django-soft-ui-design-system"&gt;Django Bootstrap 5 Soft UI&lt;/a&gt; - free product &lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/product/django-material-kit"&gt;Django Bootstrap 5 Material Kit&lt;/a&gt; - free product&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/django/django-pixel-bootstrap-uikit"&gt;Django Bootstrap 5 Pixel&lt;/a&gt; - free product&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;All starters provide the bare minimum essentials to start fast a new website powered by &lt;strong&gt;Django&lt;/strong&gt;: authentication, database, Docker support, and up-to-date dependencies. Here is the full list with features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Up-to-date dependencies&lt;/code&gt;: &lt;strong&gt;Django 3.2.6 LTS&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;SCSS compilation&lt;/code&gt; via Gulp&lt;/li&gt;
&lt;li&gt;UI: &lt;strong&gt;Bootstrap 5&lt;/strong&gt; design&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;DB Tools&lt;/code&gt;: SQLite, Django Native ORM&lt;/li&gt;
&lt;li&gt;Session-Based Authentication, Forms validation&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Deployment&lt;/code&gt;: &lt;strong&gt;Docker&lt;/strong&gt;, Gunicorn / Nginx&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Support&lt;/code&gt; via Github (issues tracker) and &lt;a href="https://discord.gg/fZC6hup"&gt;Discord&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#django-template-soft"&gt;
  &lt;/a&gt;
  ✨ &lt;a href="https://appseed.us/product/django-soft-ui-design-system"&gt;Django Template Soft&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Soft UI Design System is built with over 70 frontend individual elements, like buttons, inputs, navbars, nav tabs, cards, or alerts, giving you the freedom of choosing and combining. All components can take variations in color, that you can easily modify using SASS files and classes.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/product/django-soft-ui-design-system"&gt;Soft UI Design Django&lt;/a&gt; - Product page&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://django-soft-ui-free.appseed-srv1.com/"&gt;Soft UI Design Django&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Probably the most easier way to compile and start the product locally is to use the Docker setup.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;✨ Step #1 - Clone sources from the public repository&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/django-soft-ui-design.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;django-soft-ui-design
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;✨ Step #2 - Start in Docker&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up &lt;span class="nt"&gt;--build&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once all the above commands are executed, we should see the Soft UI Design App running in the browser.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SRKlswzz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/57ook8718i7xaft577sg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRKlswzz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/57ook8718i7xaft577sg.png" alt="Django Bootstrap 5 - Soft UI Design (open-source starter)" width="880" height="452"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#django-template-material"&gt;
  &lt;/a&gt;
  ✨ &lt;a href="https://appseed.us/product/django-material-kit"&gt;Django Template Material&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Designed for those who like bold elements and beautiful websites, Material Kit 2 is ready to help you create stunning websites and web apps. Material Kit 2 is built with over 60 frontend individual elements, like buttons, inputs, navbars, nav tabs, cards, or alerts, giving you the freedom of choosing and combining. All components can take variations in color, which you can easily modify using SASS files and classes.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/product/django-material-kit"&gt;Django Material Kit&lt;/a&gt; - Product page&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://django-material-kit.appseed-srv1.com/"&gt;Django Material Kit&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--koZp4Wei--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tikclrqio9bfycik2zdu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--koZp4Wei--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tikclrqio9bfycik2zdu.png" alt="Django Bootstrap 5 - Material Kit 2 (open-source project)." width="880" height="476"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#django-template-pixel"&gt;
  &lt;/a&gt;
  ✨ &lt;a href="https://appseed.us/django/django-pixel-bootstrap-uikit"&gt;Django Template Pixel&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Pixel is a free and open-source Bootstrap 5 based user interface kit featuring over 80 fully coded UI elements and example pages that will help you prototype and build a website for your next project.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/django/django-pixel-bootstrap-uikit"&gt;Django Pixel Lite&lt;/a&gt; - Product page&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://django-pixel.appseed-srv1.com/"&gt;Django Pixel Lite&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;This project also comes with Sass source files, making it easy to customize the colors, fonts, and other styling properties. Using the gulp commands you can also easily work with the project and generate minified production code.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1SB1F8Kl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/doj01rq43nb5t6e2jjww.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SB1F8Kl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/doj01rq43nb5t6e2jjww.png" alt="Django Bootstrap 5 - Pixel Lite (open-source project)." width="880" height="436"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources, feel free to access:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;✨ More &lt;a href="https://appseed.us/django"&gt;Django Templates&lt;/a&gt; - provided by AppSeed&lt;/li&gt;
&lt;li&gt;✨ More &lt;a href="https://appseed.us/admin-dashboards/django"&gt;Django Dashboards&lt;/a&gt; - open-source and commercial starters &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>boostrap5</category>
      <category>django</category>
      <category>opensource</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What is programmer imposter syndrome and how to overcome it</title>
      <author>Christine Shu</author>
      <pubDate>Mon, 13 Dec 2021 05:50:22 +0000</pubDate>
      <link>https://dev.to/christineshu/what-is-programmer-imposter-syndrome-and-how-to-overcome-it-1oe2</link>
      <guid>https://dev.to/christineshu/what-is-programmer-imposter-syndrome-and-how-to-overcome-it-1oe2</guid>
      <description>&lt;p&gt;Have you ever felt immense fear and doubt that your colleagues might find out you are just a fraud and you really have no idea what you are coding everyday? If you’ve ever doubted your own programming ability or performance at work, you are not alone. When &lt;a href="https://www.teamblind.com/blog/index.php/2018/09/05/58-percent-of-tech-workers-feel-like-impostors/"&gt;Blind&lt;/a&gt; surveyed over 10,000 participants they discovered 58% of tech employees experience imposter syndrome. As high as 73% of employees at &lt;a href="https://www.techrepublic.com/article/why-58-of-tech-employees-suffer-from-imposter-syndrome/"&gt;Expedia&lt;/a&gt; experience this at some point in their career. Let’s dig into why imposter syndrome is so prevalent in software development and the different ways you can tackle imposter syndrome. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-is-programmer-imposter-syndrome-so-common"&gt;
  &lt;/a&gt;
  Why is programmer imposter syndrome so common?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8VpyxfQR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/acfc5abc-a4b3-4931-a31a-bd7e16480e18/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8VpyxfQR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/acfc5abc-a4b3-4931-a31a-bd7e16480e18/" alt="programmer_imposter_syndrome.gif" width="480" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While imposter syndrome isn’t something only people in tech experience, it is amplified for programmers. Not only is tech &lt;strong&gt;intensely fast paced&lt;/strong&gt;, software development is a field that is constantly expanding and evolving. New technologies and tools roll out by the day. As a software engineer, you feel pressure to keep up or even stay ahead. Another reason software developers experience imposter syndrome more intensely might be the &lt;strong&gt;unrealistic perception of people in tech&lt;/strong&gt;. Tech giants, star entrepreneurs, and key opinion leaders are often portrayed as brilliant, informed, and knowledgeable individuals. To fit the persona of someone working in tech, you need to appear extra smart and always on top of things to live up to the image. &lt;/p&gt;

&lt;p&gt;We interviewed fellow developers to find the most common imposter syndrome scenarios: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Being promoted or leading a team/project&lt;/strong&gt;: I was asked to step up to lead the engineering team. As things go on and issues start appearing, I worry that I am underprepared and that I’m not living up to the expectations.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Non-traditional CS background&lt;/strong&gt;: I graduated from a coding bootcamp, before that I was in the finance sector. I worked really hard in putting my portfolio together and preparing for technical interviews, eventually landing a job as a junior developer at a major company. However, from the day I got hired, I’ve constantly been in self doubt and wondered if I’d ever be as good as my colleagues with proper computer science training.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Comparing with your peers&lt;/strong&gt;: I’m constantly playing catch up with my colleagues. They always seem to know how best to structure their code and the process goes smoothly for them in general. For me, I always get called out on issues during QA. I feel like I’ll always be a junior dev compared to them.
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Staying relevant in the industry&lt;/strong&gt;: I attended a tech conference and learned about the latest updates and developments. Though it was very interesting, I worry that I don’t have the capacity to learn all the new tools and the tools I’m familiar with will eventually become irrelevant. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you’ve experienced a similar situation that made you feel you’re not skilled enough, don’t stress, the following few tips will help you manage imposter syndrome.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-deal-with-programmer-imposter-syndrome"&gt;
  &lt;/a&gt;
  How to deal with programmer imposter syndrome
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AF1QjwnF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/daa38cbb-7291-46f3-af3c-cce2d2558f6f/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AF1QjwnF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/daa38cbb-7291-46f3-af3c-cce2d2558f6f/" alt="programmer_imposter_syndrome_comfort_zone.gif" width="480" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-can-never-be-an-expert-be-comfortable-with-the-uncomfortable"&gt;
  &lt;/a&gt;
  👉 You can never be an expert, be comfortable with the uncomfortable
&lt;/h3&gt;

&lt;p&gt;Tech is a fast-changing industry. You might be learning Pycharm today just to learn that everyone else is switching over to Spyder. You mastered Angular, yet you’re still not quite a JavaScript expert because there’s also Node.js, Vue.js, React, and more frameworks that you’re unfamiliar with. New programming languages, frameworks, and tools evolve and pop up so quickly, it feels impossible to keep up.&lt;/p&gt;

&lt;p&gt;The reality is simple. It is &lt;strong&gt;impossible&lt;/strong&gt; to stay on top of everything. Tech changes at such a fast pace - no one can truly grasp all technologies and concepts. While some might be faster learners and experience flatter learning curves than others, it is impossible for everyone to master everything.&lt;/p&gt;

&lt;p&gt;You’re also not expected to keep up with everything. A good tip is to learn to filter out what updates you actually need for your work or side projects. That way you'll stay informed but not overwhelmed. &lt;/p&gt;

&lt;p&gt;We all have comfort zones where we feel most safe and secure. When you’re in uncharted territory, it’s natural to feel overwhelmed. “Imposter syndrome happens when you’re in your comfort zone, and you’re picked up and placed in a ring that’s not adjacent to the inner circle,” says Mayuko, ex-Netflix software developer and full-time Youtuber. When you are outside of your comfort ring, that’s when imposter syndrome kicks in. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--idVq6XAP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/83cc5c1e-9e77-49fe-9f28-3b5dded388a3/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--idVq6XAP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/83cc5c1e-9e77-49fe-9f28-3b5dded388a3/" alt="programmer_imposter_syndrome_confort_zone.png" width="450" height="431"&gt;&lt;/a&gt;Source: PositivePsychology.com ‘&lt;a href="https://pro.positivepsychology.com/tools/leaving-the-comfort-zone/"&gt;Leaving The Comfort Zone&lt;/a&gt;’ Toolkit&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;As part of the age-old fight or flight process, if you let imposter syndrome scare you, you’ll likely avoid the situation instead of finding a solution. But if you get comfortable with the uncomfortable, and see the unfamiliar as challenges, you &lt;strong&gt;can and will&lt;/strong&gt; overcome the fear. You’ll eventually learn the new technology, get over the obstacles, acquire new knowledge, and meet new goals.&lt;/p&gt;

&lt;p&gt;How do I get comfortable with the uncomfortable though? Let’s break this down into a few simple steps: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Accept and begin&lt;/strong&gt;: When you’re faced with a new tool or project, instead of panic and stress, take a deep breath and read through all the information and briefs available. Prepare your heart to accept the new challenge and begin to work on it. You are halfway there once you make the commitment to start. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Push through&lt;/strong&gt;: To not give up in the midst of learning something new could arguably be the hardest thing to do! Keep pushing through the learning curve and eventually push past your comfort zone, and everything will get easier from there. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Repeat the process&lt;/strong&gt;: The more you do it, the more you’ll be accustomed to the process. It’s uncomfortable to start anything new, it’s uncomfortable to push through, but your confidence can be built up through practice and repetition. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learning is a lifelong journey, consider it an opportunity to expand your comfort zone when you are presented with new challenges. Your ability to recognize your shortcomings or lack of technical skills is actually a good sign that you are driven to upskill and grow.&lt;/p&gt;

&lt;p&gt;As a software developer or someone working in tech, you will never be an expert of everything. Recognizing that discomfort and adaptability are the keys to growth can take you a long way in your personal and technical development.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#identify-your-fears-and-doubts-and-make-a-plan-to-work-on-them"&gt;
  &lt;/a&gt;
  👉 Identify your fears and doubts and make a plan to work on them
&lt;/h3&gt;

&lt;p&gt;The hardest part of dealing with imposter syndrome is not knowing what’s triggering it. Was it when other developers on the team shared a recent discovery of a new tool? Or maybe you saw a side project your colleagues did for the company? Accumulated incidents could leave you sitting there, wondering what you’ve contributed lately, or even if you’re needed. &lt;/p&gt;

&lt;p&gt;To tackle the generic feeling of being an imposter, the first step is to identify what triggers the negative emotions. Try to pinpoint the specific projects, conversations, or maybe even the people who made you feel insecure. For example, you finished coding a new product feature and felt confident with the results. After a ruthless code review by a senior developer, the overwhelming feedback left you wondering how the code had such a large amount of flaws. If imposter syndrome takes over, you may question your competency, or worse, whether being a developer is the right career path for you.&lt;/p&gt;

&lt;p&gt;How did you go from being confident in your work to feeling like a fraud? Was it receiving feedback you weren’t expecting? Was it that you finally felt competent at work just to realize that there’s still a lot to learn? Or was it you felt like you still lack technical skills compared to your peers?&lt;/p&gt;

&lt;p&gt;If you can’t find specific instances that triggered the feeling of being an imposter, see if deeper insecurities such as fear of being judged by others, unhealthy comparisons, and unrealistic expectations are the root causes. &lt;/p&gt;

&lt;p&gt;Once you’ve identified the triggers, you can target them and learn how to deal with them:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Practice makes perfect, but no code will be perfect.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The only way to continue to &lt;a href="https://www.codementor.io/blog/improve-programming-skills-d2ymtec4cl"&gt;improve your technical skills&lt;/a&gt; is with practice. Practice, receive feedback, iterate, and repeat. This is all part of the process to becoming a better programmer. If you feel like you failed a project, it may be a humbling experience to know that there is always room for growth, no matter how good you think your code is.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Understand that the feedback your peers and managers provide is constructive feedback and not judgmental.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Your colleagues perform code reviews with the intention to help you improve instead of bringing you down. They want you to be able to pull your own weight and grow as a developer. It is good practice to receive feedback and is also something that you can do to help junior developers in the future. &lt;/p&gt;

&lt;p&gt;Once you are able to identify the fears, make a plan to tackle these insecurities. Try verbalizing your concerns and fears early so you won’t dwell in it for too long. Reflect on your past experience and take notes on what you can do next time when you encounter similar feelings. Proactively facing your fears helps you move forward without being hindered by the overwhelming sense of insecurity. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Verbalizing your fears makes it real but at least you are facing it - &lt;a href="https://www.youtube.com/watch?v=DYPdsCN69lc&amp;amp;ab_channel=mayuko"&gt;Mayuko, Youtuber&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#trust-the-decisions-and-positive-feedback"&gt;
  &lt;/a&gt;
  👉 Trust the decisions and positive feedback
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kfxkcVcF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/e7d9c83b-9675-4219-bdea-5d010346ac74/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kfxkcVcF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/e7d9c83b-9675-4219-bdea-5d010346ac74/" alt="programmer_imposter_syndrome_trust.gif" width="500" height="281"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You recently got promoted to Engineering Manager. As you start in this new role, you feel overwhelmed by the increased responsibilities. Your work suddenly goes beyond writing code, you have to take into consideration hiring, prioritizing, assigning tasks, and building team culture, etc. You can’t help but question if you’re cut out for the managerial role.&lt;/p&gt;

&lt;p&gt;If your company decided to promote you or have you take on more responsibility, they’ve made this decision based on your previous experience, feedback from your peers, and the potential they see in you. These are not decisions that are made lightly. Trust that your company has systems in place to reward accomplishments and that they believe in your ability or have the vision for you to grow into the role. &lt;/p&gt;

&lt;p&gt;If you still feel like an imposter, one of the things you can look for and reflect on is how others see you at work. In any discussion, if your coworkers care and value your opinion, you can be certain that you are not only a valuable team member, but also someone others look up to. &lt;/p&gt;

&lt;p&gt;Trust that your company and colleagues have your best interest and are there to help and uplift you in your career. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#check-in-with-your-peers-or-manager"&gt;
  &lt;/a&gt;
  👉 Check in with your peers or manager
&lt;/h3&gt;

&lt;p&gt;Imposter syndrome doesn’t only hit when you get a promotion or when you’re in leadership. We asked our community if they still feel like an imposter even with years of experience under their belt, and based on this &lt;a href="https://twitter.com/CodementorIO/status/1463735447704670212"&gt;Twitter poll&lt;/a&gt;, &lt;strong&gt;80%&lt;/strong&gt; said that they still experience imposter syndrome. It could happen at the beginning of your developer career, in the middle of an ongoing project, or even after a successful project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3eC4XNiW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/8154f146-7d58-4c54-95f7-b326e84d8e72/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3eC4XNiW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/8154f146-7d58-4c54-95f7-b326e84d8e72/" alt="programmer_imposter_syndrome_twitter_poll.png" width="880" height="439"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a junior developer that graduated from a bootcamp, you may feel less qualified than others because you don’t have a traditional computer science background. When you’re working on a project, you may fear that others will perceive you as a rookie. When your colleagues pass your desk, and you have tons of Stack Overflow tabs up, you may feel like you’re the only one who doesn’t understand everything. &lt;/p&gt;

&lt;p&gt;The truth is, you are your own worst enemy when it comes to feeling like an imposter. Other people may not view you that way at all. The fastest way to get yourself out of the negative mindset is to speak with trusted peers and managers. They might be able to offer encouragement from personal experience or provide constructive feedback on what you’ve done well and what you can continue to improve on. They may even be able to straight up tell you everyone thinks you’re doing a fantastic job already.&lt;/p&gt;

&lt;p&gt;Checking in with someone helps to free up this irrational thought and be able to carry on for what comes next with confidence. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When you are unsure about your objective performance and are having self deprecating thoughts, it’s helpful to ask for feedback from your colleagues or manager. Their objective feedback would help stop the downward spiral. - Ting, Front-end Developer at Codementor.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Related article: &lt;a href="https://www.codementor.io/blog/first-dev-job-d4gnhyc0bp"&gt;4 Challenges You Might Face in Your First Developer Job and How to Overcome Them&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#give-yourself-the-credit-you-deserve"&gt;
  &lt;/a&gt;
  👉 Give yourself the credit you deserve
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BMuw__UB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/54ad4264-f000-4f84-b8fd-6552699266d3/" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BMuw__UB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/54ad4264-f000-4f84-b8fd-6552699266d3/" alt="programmer_imposter_syndrome_deserve.gif" width="480" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The level you have reached is because of the effort, passion, and hard work you’ve put into becoming the developer you are today. Regardless of years of experience, there will always be people more experienced than you and more things you don’t know. That doesn’t mean you’re not where you’re supposed to be. &lt;/p&gt;

&lt;p&gt;Take a deep breath and reflect on what you’ve accomplished so far as a software developer or list out what you’ve done in the past year. You will be surprised by how far you’ve come. Give yourself the credit you deserve and a pat on the back. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Go to your github. Find code you committed as close as possible to one year ago today. Marvel at the stupidity, and be proud of how far you've come. - &lt;a href="https://www.reddit.com/r/learnprogramming/comments/q88xvx/protip_to_fight_imposter_syndrome/"&gt;u/thumbtackthief, Reddit.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;If you’re a software developer who is currently struggling to see your purpose or value at work, it is okay! There are many who experience programmer imposter syndrome just like you, even technical founders and CEOs. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“You’d think I know what I am doing everyday when I go to work, but let me let you in on something, most days, I still feel like I often don’t know what I am doing. I’ve felt that way for 15 years. And I’ve since learnt that this feeling is called impost syndrome.” Mike Cannon-Brookes, co-founder of Atlassian (&lt;a href="https://tedxsydney.com/talk/imposter-syndrome-mike-cannon-brookes/"&gt;TEDxSydney&lt;/a&gt;).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Keep an open mind and don’t let the feeling overtake your technical performance and personal emotion. Try to be comfortable with the uncomfortable, identify your fears and make a plan, trust the decisions and feedback of others, check in with your colleague or manager, and lastly, give yourself the credits you deserve. &lt;/p&gt;

&lt;p&gt;We want to hear about your experience. Do you still encounter imposter syndrome? What methods do you use to manage these feelings? Comment below👇👇👇&lt;/p&gt;

</description>
      <category>programming</category>
      <category>codenewbie</category>
      <category>discuss</category>
      <category>challenge</category>
    </item>
    <item>
      <title>How WebSocket protocol designs bidirectional messaging and implements in Go</title>
      <author>Kazuki Higashiguchi</author>
      <pubDate>Mon, 13 Dec 2021 04:59:20 +0000</pubDate>
      <link>https://dev.to/hgsgtk/how-websocket-protocol-designs-bidirectional-messaging-and-implements-in-go-260f</link>
      <guid>https://dev.to/hgsgtk/how-websocket-protocol-designs-bidirectional-messaging-and-implements-in-go-260f</guid>
      <description>&lt;h2&gt;
  &lt;a href="#websocket"&gt;
  &lt;/a&gt;
  WebSocket
&lt;/h2&gt;

&lt;p&gt;WebSocket is a mechanism for low-cost, &lt;a href="https://en.wikipedia.org/wiki/Duplex_(telecommunications)#FULL-DUPLEX"&gt;full-duplex&lt;/a&gt; communication on Web, which protocol was standardized as &lt;a href="https://datatracker.ietf.org/doc/html/rfc6455"&gt;RFC 6455&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The following diagram, quoted by &lt;a href="https://en.wikipedia.org/wiki/WebSocket"&gt;Wikipedia&lt;/a&gt;, describe a communication using WebSocket between client and server.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cIkz84nP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z7qiia95sgoly2rya998.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cIkz84nP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z7qiia95sgoly2rya998.png" alt="A diagram describing a connection using WebSocket" width="220" height="202"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;"Handshake" is explained in the following two articles.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/hgsgtk/websocket-client-3gni"&gt;Deep dive into WebSocket opening handshake protocol with Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/hgsgtk/learn-websocket-handshake-protocol-with-gorillawebsocket-server-10k9"&gt;Learn WebSocket handshake protocol with gorilla/websocket server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/hgsgtk/how-decided-a-value-set-in-sec-websocket-keyaccept-header-l79"&gt;How decided a value set in Sec-WebSocket-Key/Accept header&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This post will focus on "Bidirectional messages"&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#websocket-server"&gt;
  &lt;/a&gt;
  WebSocket server
&lt;/h2&gt;

&lt;p&gt;Let's learn the WebSocket bidirectional messaging protocol with a specific Go implementation, which is available on a &lt;a href="https://github.com/hgsgtk/go-snippets/blob/e756b7f76d58a23e17d150b77bec9bb798fb2db2/goproxy/wsproxy/server/main.go"&gt;GitHub repository&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
    &lt;span class="s"&gt;"log"&lt;/span&gt;
    &lt;span class="s"&gt;"net/http"&lt;/span&gt;

    &lt;span class="s"&gt;"github.com/gorilla/websocket"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;upgrader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;websocket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Upgrader&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="m"&gt;12345&lt;/span&gt;
    &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Starting websocket echo server on port %d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HandleFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListenAndServe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;":%d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Panicf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error while starting to listen: %#v"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ResponseWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;// Start handshaking&lt;/span&gt;
    &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;upgrader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Upgrade&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Upgrading error: %#v&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;defer&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="c"&gt;// End&lt;/span&gt;

    &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Success to handshake with client"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;// Start bidirectional messages&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;mt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReadMessage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Reading error: %#v&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"recv: message %q"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Writing error: %#v&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c"&gt;// End bidirectional messages&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#open-handshake"&gt;
  &lt;/a&gt;
  Open handshake
&lt;/h2&gt;

&lt;p&gt;The first half of the code is the server implementation for "Handshake".&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="c"&gt;// 1. Initializes parameters for upgrading an HTTP connection to a WebSocket connection.&lt;/span&gt;
&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;upgrader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;websocket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Upgrader&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="c"&gt;// 2. Starts WebSocket server which waits client HTTP requests on port 12345&lt;/span&gt;
&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="m"&gt;12345&lt;/span&gt;
    &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Starting websocket echo server on port %d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HandleFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListenAndServe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;":%d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Panicf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error while starting to listen: %#v"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ResponseWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;// 3. Start handshaking&lt;/span&gt;
    &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;upgrader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Upgrade&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Upgrading error: %#v&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;defer&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="c"&gt;// End&lt;/span&gt;

    &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Success to handshake with client"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;// ...(Bidirectional messages part)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As noted in the comments in the code, to start up a WebSocket server, do the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Initializes parameters for upgrading an HTTP connection to a WebSocket connection.&lt;/li&gt;
&lt;li&gt;Starts WebSocket server which waits client HTTP requests on port 12345&lt;/li&gt;
&lt;li&gt;Start handshaking&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When you run this program, it will start an HTTP server on port 12345.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ go run server/main.go
2021/12/13 11:54:22 Starting websocket echo server on port 12345
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can check if the handshake is actually working by making a curl request (but it's not perfect).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ curl -X GET http://localhost:12345 \
-H "Connection: upgrade" \
-H "Upgrade: websocket" \
-H "Sec-Websocket-version: 13" \
-H "Sec-Websocket-Key: 08kp54j1E3z4IfuM1m75tQ==" \
-H "Host: localhost:12345" \
-H "Origin: http://localhost:12345"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you send it, you will see that the request was accepted in stdout.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ go run main.go
(omit)...
2021/12/13 12:07:19 Success to handshake with client
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See &lt;a href="https://dev.to/hgsgtk/learn-websocket-handshake-protocol-with-gorillawebsocket-server-10k9"&gt;Learn WebSocket handshake protocol with gorilla/websocket server&lt;/a&gt; for more information.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#websocket-connection"&gt;
  &lt;/a&gt;
  WebSocket connection
&lt;/h2&gt;

&lt;p&gt;The key to understanding the message exchanging is the return value of this line.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;upgrader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Upgrade&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The variable &lt;code&gt;c&lt;/code&gt; is a pointer of &lt;a href="https://pkg.go.dev/github.com/gorilla/websocket#Conn"&gt;websocket.Conn&lt;/a&gt; struct. The Conn type represents a WebSocket connection.&lt;/p&gt;

&lt;p&gt;When the handshake is completed, you can start exchanging messages over the established WebSocket connection.&lt;/p&gt;

&lt;p&gt;You can receive and send messages by calling the Conn's &lt;a href="https://pkg.go.dev/github.com/gorilla/websocket#Conn.ReadMessage"&gt;ReadMessage&lt;/a&gt; and &lt;a href="https://pkg.go.dev/github.com/gorilla/websocket#Conn.WriteMessage"&gt;WriteMessage&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="c"&gt;// Start bidirectional messages&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;mt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReadMessage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Reading error: %#v&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"recv: message %q"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;// (omit...writing message part)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;// End bidirectional messages&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use &lt;code&gt;for&lt;/code&gt; loop so that the server keeps waiting for messages from the client. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#data-framing"&gt;
  &lt;/a&gt;
  Data Framing
&lt;/h2&gt;

&lt;p&gt;In the WebSocket protocol, data is transmitted using a sequence of frames. This wire format for the data transfer part is described by the &lt;a href="https://datatracker.ietf.org/doc/html/rfc5234"&gt;ABNF&lt;/a&gt; (Augmented BNF for Syntax Specification). A overview of the framing is given in the following figure.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uY3p_Enh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ya8sxy582lm88yp9rssk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uY3p_Enh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ya8sxy582lm88yp9rssk.png" alt="A figure of base framing protocol" width="880" height="449"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Server and client exchange data in accordance with this method.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#read-messages-from-the-peer"&gt;
  &lt;/a&gt;
  Read messages from the peer
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/gorilla/websocket#Conn.ReadMessage"&gt;ReadMessage&lt;/a&gt; is a method to read messages from the peer which interprets data in base framing protocol.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;mt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReadMessage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The implementation of &lt;a href="https://github.com/gorilla/websocket/blob/v1.4.2/conn.go#L1062"&gt;ReadMessage&lt;/a&gt; is as follow:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;Conn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;ReadMessage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;messageType&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Reader&lt;/span&gt;
    &lt;span class="n"&gt;messageType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NextReader&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;messageType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ioutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReadAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;messageType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;a href="https://pkg.go.dev/github.com/gorilla/websocket#Conn.NextReader"&gt;Conn.NextReader&lt;/a&gt; function reads bytes received from the peer.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;messageType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NextReader&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#opcode"&gt;
  &lt;/a&gt;
  Opcode
&lt;/h2&gt;

&lt;p&gt;First return value is &lt;code&gt;messageType&lt;/code&gt; which represents WebSocket opcode numbers defined in &lt;a href="https://datatracker.ietf.org/doc/html/rfc6455#section-11.8"&gt;RFC 6455 - 11.8.  WebSocket Opcode Registry&lt;/a&gt;.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Opcode&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Continuation Frame&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Text Frame&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Binary Frame&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;Connection Close Frame&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;Ping Frame&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;Pong Frame&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;There are two types of opcode: message for exchanging data and controlling WebSocket connection.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For exchanging data

&lt;ul&gt;
&lt;li&gt;Text Frame&lt;/li&gt;
&lt;li&gt;Binary Frame&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;For controlling WebSocket connection

&lt;ul&gt;
&lt;li&gt;Connection Close Frame&lt;/li&gt;
&lt;li&gt;Ping Frame&lt;/li&gt;
&lt;li&gt;Pong Frame&lt;/li&gt;
&lt;li&gt;Contination Frame&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The messages for exchanging data distinguishes between text and binary data messages. And, the WebSocket protocol defines four types of control messages: close, ping, pong, and continuation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This article explains WebSocket bidirectional message using gorilla/websocket server implementation.&lt;/p&gt;

&lt;p&gt;Related articles are here.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/hgsgtk/learn-websocket-handshake-protocol-with-gorillawebsocket-server-10k9"&gt;Learn WebSocket handshake protocol with gorilla/websocket server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/hgsgtk/websocket-client-3gni"&gt;Deep dive into WebSocket opening handshake protocol with Go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>websocket</category>
      <category>go</category>
    </item>
    <item>
      <title>Como eliminar una rama local y remota con git.</title>
      <author>Abraham Calsin</author>
      <pubDate>Mon, 13 Dec 2021 04:46:41 +0000</pubDate>
      <link>https://dev.to/abrahamcalsin/como-eliminar-una-rama-local-y-remota-con-git-bag</link>
      <guid>https://dev.to/abrahamcalsin/como-eliminar-una-rama-local-y-remota-con-git-bag</guid>
      <description>&lt;p&gt;En este post veras como poder eliminar una rama local y remota con #git.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-eliminar-rama-local"&gt;
  &lt;/a&gt;
  - Eliminar rama local:
&lt;/h2&gt;

&lt;p&gt;Para eliminar una rama local ejecuta el siguiente comando,&lt;br&gt;
&lt;code&gt;git branch -D &amp;lt;branch-name&amp;gt;&lt;/code&gt;, remplaza la &lt;code&gt;&amp;lt;branch-name&amp;gt;&lt;/code&gt; por el nombre de la rama que desees eliminar.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Nota:&lt;/strong&gt; Si intenta eliminar una rama que contengan cambios sin mergear le saltara el siguiente error: &lt;code&gt;error: The branch 'branch_name' is not fully merged.If you are sure you want to delete it, run 'git branch -D nombre_de_la_rama'.&lt;/code&gt;&lt;/em&gt; Tenga en cuenta este error, para saber que cambios realizados tiene en su(s) rama(s) que aun no están mergeados, ejecute el siguiente comando &lt;code&gt;git branch --no-merged&lt;/code&gt;, esto le mostrara todos los cambios no mergeados en su propia rama. Si esta seguro de eliminar la rama, entonces necesitara forzar la eliminación de la rama con el comando &lt;code&gt;-D&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Recuerde que si fuerza la eliminación, todos los cambios no mergeados se eliminaran por completo.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-eliminar-rama-remota"&gt;
  &lt;/a&gt;
  - Eliminar rama remota:
&lt;/h2&gt;

&lt;p&gt;Si ya elimino su rama local eso no quiere decir que esto haya afectado a su rama remota, si desea reflejar estos cambios en remoto, ejecute el siguiente comando, &lt;code&gt;git push origin --delete &amp;lt;branch-name&amp;gt;&lt;/code&gt;, recuerde modificar el nombre de su rama que desea eliminar.&lt;/p&gt;

&lt;p&gt;Y listo, su rama ya fue eliminado, para estar seguro de esto ejecute el siguiente comando &lt;code&gt;git branch&lt;/code&gt;, esto le mostrara una lista completa de sus ramas "locales". Si no encuentra la rama que eliminó, entonces todo salió bien, continúe codificando sin más preocupación. 🎉&lt;/p&gt;

</description>
      <category>git</category>
      <category>github</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to secure API Key on FrontEnd</title>
      <author>AnkitPat</author>
      <pubDate>Mon, 13 Dec 2021 04:14:50 +0000</pubDate>
      <link>https://dev.to/ankitpat/how-to-secure-api-key-on-frontend-3c6j</link>
      <guid>https://dev.to/ankitpat/how-to-secure-api-key-on-frontend-3c6j</guid>
      <description>&lt;p&gt;A-lot of times, where we just want to create website to do some dynamic functionalities without being handhold by backend.&lt;/p&gt;

&lt;p&gt;Best way of doing it, is by API Calls. For doing API calls we must be having API keys to work with. &lt;/p&gt;

&lt;p&gt;And now biggest question, where to place API keys.&lt;/p&gt;

&lt;p&gt;What we are going to build today:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FD6ebI_v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/16xtp7jhw9772dkw8h4r.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FD6ebI_v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/16xtp7jhw9772dkw8h4r.gif" alt="Image description" width="600" height="490"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lets do one thing, first get the API keys. So in these blog posts i am going integrate Weather Forecasting.&lt;/p&gt;

&lt;p&gt;To create Weather forecasting page, we need to work with API. So for these i decided on &lt;a href="https://rapidapi.com/community/api/open-weather-map/"&gt;Open Weather map&lt;/a&gt; to fetch data. So for these you need to create account that will provide access to APIs and api key.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aG0uTrbn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cfo5trrnas93l6kdjrz1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aG0uTrbn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cfo5trrnas93l6kdjrz1.png" alt="Image description" width="880" height="472"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So API KEY again, now we have our own API key to access apis from Weather Statistics.&lt;/p&gt;

&lt;p&gt;So again question, how to secure these API key. &lt;br&gt;
So solution is &lt;a href="https://korconnect.io/"&gt;KorConnect&lt;/a&gt; which gives you option to create API Connections.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cGbfvO78--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/he34w6vuxi7haadzr2ts.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cGbfvO78--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/he34w6vuxi7haadzr2ts.png" alt="Image description" width="880" height="802"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, you need to add API key detail, api url and other information. Once you are done, you will see list of endpoints added.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EL8P7YU---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bvjl3lo03j7k9rmd8pmz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EL8P7YU---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bvjl3lo03j7k9rmd8pmz.png" alt="Image description" width="880" height="87"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, once you are in. You can see url endpoint and public key to call you secure API call.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CpDKWIiC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u74skstc37vlrkkp77zl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CpDKWIiC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u74skstc37vlrkkp77zl.png" alt="Image description" width="880" height="294"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can now call api as, &amp;lt; SECURE_BASE_URL &amp;gt;/endpoint from Statistics. And remember to add headers also.&lt;/p&gt;

&lt;p&gt;Point to note here:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If you are testing on postman, you should be on Testing Mode.&lt;/li&gt;
&lt;li&gt;When you are all ready to live, turn to Production mode. which is more secured.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Code snippet example to use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fetch("YOUR_PUBLIC_URL", {
    "method": "GET",
    "headers": {
        "x-rapidapi-key": "YOUR_PUBLIC_API_KEY"
    }
})
.then(response =&amp;gt; {
    console.log(response);
})
.catch(err =&amp;gt; {
    console.error(err);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now KorConnect will internal connect with your domain, and your API key is secured from outside world.&lt;/p&gt;

&lt;p&gt;It is as simple as that, now you can integrate apis without any additional setup or library.&lt;/p&gt;

&lt;p&gt;You can add more security to your API and API key via &lt;a href="https://kor-comunity.gitlab.io/kor-connect/adir/SECURITY.html"&gt;Read here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>frontend</category>
      <category>security</category>
    </item>
    <item>
      <title>Getting started with Dyte - 1: Setting up Dyte</title>
      <author>Karthic Rao</author>
      <pubDate>Mon, 13 Dec 2021 04:13:11 +0000</pubDate>
      <link>https://dev.to/hackintoshrao/getting-started-with-dyte-1-getting-started-3nn3</link>
      <guid>https://dev.to/hackintoshrao/getting-started-with-dyte-1-getting-started-3nn3</guid>
      <description>&lt;p&gt;Building audio, video apps with ease&lt;/p&gt;

&lt;p&gt;View the video version of this blog at &lt;a href="https://incredible.dev/watch/qpw-mkg-cut"&gt;Incredible.dev&lt;/a&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#what-is-dyte"&gt;
  &lt;/a&gt;
  What is Dyte?
&lt;/h3&gt;

&lt;p&gt;Dyte is a SDK which provides the easiest way to add real-time communications using audio and video to your apps and platforms.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#realtime-fast-communications"&gt;
  &lt;/a&gt;
  Real-time, fast communications
&lt;/h3&gt;

&lt;p&gt;Dyte is blazingly fast.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkTitC6o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.incredible.dev/G-GDXcQI01lRZ-GtREZLp.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkTitC6o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.incredible.dev/G-GDXcQI01lRZ-GtREZLp.gif" alt="Real-time, fast communications" width="640" height="640"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video-capabilities-to-your-mobile-apps"&gt;
  &lt;/a&gt;
  Video capabilities to your mobile apps
&lt;/h3&gt;

&lt;p&gt;Dyte enables you to build Video calling capabilities for mobile&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1gm482l3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.incredible.dev/E0I3RSp6E8-EZ1xShdxyH.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1gm482l3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.incredible.dev/E0I3RSp6E8-EZ1xShdxyH.gif" alt="Video apps" width="640" height="640"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video-capabilities-to-your-web-apps"&gt;
  &lt;/a&gt;
  Video capabilities to your web apps
&lt;/h3&gt;

&lt;p&gt;Dyte Enables you to build Video calling capabilities for Web&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VzfYu-Y9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.incredible.dev/kMHOiwv3HQj2SlME8wSVn.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VzfYu-Y9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.incredible.dev/kMHOiwv3HQj2SlME8wSVn.gif" alt="Video apps" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#audio-apps"&gt;
  &lt;/a&gt;
  Audio apps
&lt;/h3&gt;

&lt;p&gt;Dyte offers audio capabilities too.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TF_JnvHy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.incredible.dev/vqvpbNjQc7GMWHaRStblg.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TF_JnvHy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.incredible.dev/vqvpbNjQc7GMWHaRStblg.gif" alt="Audio apps" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#web-and-mobile-applications"&gt;
  &lt;/a&gt;
  Web and mobile applications
&lt;/h3&gt;

&lt;p&gt;Dyte can power both mobile and web applications&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l_5o1rux--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.incredible.dev/zCmUIYkWZ1kNAkE0Wxcko.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l_5o1rux--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.incredible.dev/zCmUIYkWZ1kNAkE0Wxcko.gif" alt="Web and mobile applications" width="880" height="880"&gt;&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-dyte-works"&gt;
  &lt;/a&gt;
  How dyte works?
&lt;/h2&gt;

&lt;p&gt;Dyte is based largely on the WebRTC protocol, and the features and optimisations we build on top of it. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cag10KBe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.incredible.dev/0C8bdBLVs0SiYi15pioaw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cag10KBe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.incredible.dev/0C8bdBLVs0SiYi15pioaw.gif" alt="WebRTC protocol" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Although the protocol is supposed to be peer-to-peer, it is not easy to build it reliably.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--udm6wJ1H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.incredible.dev/CFMnqzAoDKvfBkPezmn14.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--udm6wJ1H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.incredible.dev/CFMnqzAoDKvfBkPezmn14.gif" alt=" Peer-to-Peer Protocol" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Anyone who has tried implementing it by themselves would know that the implementions get real messy, real fast. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M7R6yNMq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.incredible.dev/piwRa2Po1JLXjjZEwfqnw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M7R6yNMq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.incredible.dev/piwRa2Po1JLXjjZEwfqnw.gif" alt="Implementation can get messy" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To have a real working solution, servers with SFU, STUN, TURN, etc capabilities.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nhb6wWiF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.incredible.dev/q3h0_2lksF1pD1JfJXnKm.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nhb6wWiF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.incredible.dev/q3h0_2lksF1pD1JfJXnKm.gif" alt="Servers with SFU, STUN, TURN" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is required to optimize for user bandwidth.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fifvEFuq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.incredible.dev/lS-6tQky2ZAXtS_8VMVEs.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fifvEFuq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.incredible.dev/lS-6tQky2ZAXtS_8VMVEs.gif" alt="Optimize user bandwidth" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also to optimize for performance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qdOEmgFW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.incredible.dev/ZHlaJ2OPXufSrgk1HBsgr.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qdOEmgFW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.incredible.dev/ZHlaJ2OPXufSrgk1HBsgr.gif" alt="Optimize performance" width="880" height="880"&gt;&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#architecture"&gt;
  &lt;/a&gt;
  Architecture
&lt;/h2&gt;

&lt;p&gt;Here is the architecture of Dyte, and all the step that goes behind the scenes in setting up a meeting.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jw1K2NSq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.incredible.dev/yG_dDhnJYefnw7swEq4a2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jw1K2NSq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.incredible.dev/yG_dDhnJYefnw7swEq4a2.png" alt="Architecture" width="880" height="522"&gt;&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#using-js-sdk"&gt;
  &lt;/a&gt;
  Using JS SDK
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#initialising"&gt;
  &lt;/a&gt;
  Initialising
&lt;/h3&gt;

&lt;p&gt;Here are the steps to initialise the Dyte JS SDK&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Get meeting room name from the backend API&lt;/li&gt;
&lt;li&gt;Get participant token form the backend API&lt;/li&gt;
&lt;li&gt;Pass them as props to Dyte's React Component to initialize&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#using-js-react-sdk"&gt;
  &lt;/a&gt;
  Using JS React SDK
&lt;/h3&gt;

&lt;p&gt;You can initialize a meeting in your React app, using this component, like below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;DyteMeeting&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dyte-client&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DyteMeeting&lt;/span&gt;
        &lt;span class="nx"&gt;onInit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;meeting&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{}}&lt;/span&gt;
        &lt;span class="nx"&gt;clientId&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`orgId || clientId`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;meetingConfig&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;
          &lt;span class="na"&gt;roomName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`roomName`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;authToken&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`authToken`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}}&lt;/span&gt;
      &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Hope this Incredible post conveys what is Dyte, its features and how to integrate it into your applications.&lt;br&gt;
To learn more about Dyte join their community &lt;a href="https://community.dyte.io/"&gt;using this link&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Using gRPC and gRPC-Web with a Golang</title>
      <author>ikkyu</author>
      <pubDate>Mon, 13 Dec 2021 04:08:12 +0000</pubDate>
      <link>https://dev.to/ikk_hck/using-grpc-and-grpc-web-with-a-golang-182f</link>
      <guid>https://dev.to/ikk_hck/using-grpc-and-grpc-web-with-a-golang-182f</guid>
      <description>&lt;h1&gt;
  &lt;a href="#set-up"&gt;
  &lt;/a&gt;
  Set Up
&lt;/h1&gt;

&lt;p&gt;The final directory structure will look like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; go
  |_prj
     |_gRPC_prjweb_tmp
          |-api.proto
          |-client
          |  |_client.go
          |-docker-compose.yaml
          |-go.mod
          |-go.sum
          |-html
          |  |-dist
          |  |  |_main.js
          |  |-index.html
          |  |_index.js
          |-Makefile
          |-pb
          |  |-api_grpc_web_pb.js
          |  |-api.pb.go
          |  |-api_pb.js
          |  |-node_modeles
          |  |-package.json
          |  |_package-lock.json
          |-proxy
          |  |-conf
          |  |  |_envoy.yaml
          |  |_Dockerfile
          |_server
             |_server.go


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And network structure will look like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gRPC_web(4444)&amp;lt;--&amp;gt;envoy(8080)&amp;lt;--&amp;gt;gRPC_server(8000)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First, build the environment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go mod init web_tmp
go get google.golang.org/protobuf github.com/sirupsen/logrus golang.org/x/net/context google.golang.org/grpc google.golang.org/grpc/codes google.golang.org/grpc/status
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#grpc"&gt;
  &lt;/a&gt;
  gRPC
&lt;/h1&gt;

&lt;p&gt;Create a proto file.&lt;br&gt;
&lt;em&gt;[api.proto]&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;syntax = "proto3";

service Greeter {
  rpc Hello (HelloRequest) returns (HelloReply) {}
}

message HelloRequest {
  string name = 1;
}

message HelloReply {
  string message = 1;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a pb directory, and generate Protocol Buffers code from api.proto file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir pb
protoc --go_out=plugins=grpc:pb api.proto
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a server directory and a client directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir server
mkdir client
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we'll write the server and client code.&lt;br&gt;
&lt;em&gt;[sever/server.go]&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package main

import (
    "fmt"
    pb "web_tmp/pb"
    "net"
    "github.com/sirupsen/logrus"
    "gINFO[0000] Greeting: Hello lupinolang.org/x/net/context"
    "google.golang.org/grpc"
)

func main() {
    listener, err := net.Listen("tcp", ":8000")
    if err != nil {
            panic(err)
    }
    server := grpc.NewServer()
    greeterService := &amp;amp;GreeterService{}
    pb.RegisterGreeterServer(server, greeterService)
    logrus.Info(fmt.Sprintf("start server: %#v", listener.Addr().String()))
    server.Serve(listener)
}

type GreeterService struct {}

func (s *GreeterService) Hello(ctx context.Context, in *pb.HelloRequest) (*pb.HelloReply, error) {
        return &amp;amp;pb.HelloReply{Message: "Hello " + in.GetName()}, nil
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;[client/client.go]&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package main

import (
    "context"
    pb "web_tmp/pb"
    "github.com/sirupsen/logrus"
    "google.golang.org/grpc"
)

func main() {
    conn, err := grpc.Dial("localhost:8000", grpc.WithInsecure())
    if err != nil {
            panic(err)
    }
    defer conn.Close()

    c := pb.NewGreeterClient(conn)
    name := &amp;amp;pb.HelloRequest{Name: "lupin"} 

    r, err := c.Hello(context.TODO(), name)
    if err != nil {
        logrus.Error(err)
    }
    logrus.Info("Greeting: ", r.GetMessage())
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a makefile.&lt;br&gt;
&lt;em&gt;[Makefile]&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.PHONY: server client

server:
        go run ./server/server.go

client: 
        go run ./client/client.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Start the server.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;make server
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the client code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;make client
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can see the gRPC server returning "Hello lupin".&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;INFO[0000] Greeting: Hello lupin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#grpcweb"&gt;
  &lt;/a&gt;
  gRPC-web
&lt;/h1&gt;

&lt;p&gt;Next, we'll write the code for gRPC-web communication.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;protoc --js_out=import_style=commonjs:pb --grpc-web_out=import_style=commonjs,mode=grpcwebtext:pb api.proto
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The api_grpc_web_pb created here under pb directory will be imported into the js file to be created later. Also, install the modules grpc-web and google-protobuf as they are required for webpack.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd pb
npm install grpc-web
npm install google-protobuf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create an html directory and create a js file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir html
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;[html/index.js]&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import proto from '../pb/api_grpc_web_pb';
var client = new proto.GreeterClient('http://localhost:8080');
var request = new proto.HelloRequest();
request.setName("lupin");
client.hello(request, {}, function(err, response) {
    if (err) {
        console.log(err.code);
        console.log(err.message);
    } else {
        console.log(response.getMessage());
    }
});

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#proxy"&gt;
  &lt;/a&gt;
  Proxy
&lt;/h2&gt;

&lt;p&gt;Create a proxy directory and a conf directory under it for prepareing envpy proxy. Write the envoy.yaml file under the conf directory you created.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;[proxy/conf/envoy.yaml]&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 127.0.0.1, port_value: 9901 }

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address: { address: 127.0.0.1, port_value: 8080 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          access_log:
            - name: envoy.access_loggers.file
              typed_config:
                "@type": type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog
                path: "/dev/stdout"
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route:
                  cluster: greeter_service
                  max_grpc_timeout: 0s
              cors:
                allow_origin_string_match:
                  - prefix: "*"
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                max_age: "1728000"
                expose_headers: custom-header-1,grpc-status,grpc-message
          http_filters:
          - name: envoy.filters.http.grpc_web
          - name: envoy.filters.http.cors
          - name: envoy.filters.http.router
  clusters:
  - name: greeter_service
    connect_timeout: 0.25s
    type: logical_dns
    http2_protocol_options: {}
    lb_policy: round_robin
    dns_lookup_family: V4_ONLY
    upstream_connection_options:
      tcp_keepalive:
        keepalive_time: 300
    load_assignment:
      cluster_name: cluster_0
      endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 172.17.0.1
                    port_value: 8000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Administration interface of envoy is 9901 port, and envoy proxy is 8080 port. Envoy passes the received communication to the server on port 8000. The docker address may vary depending on your environment, so check it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ip a | grep docker
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create the Docker file.&lt;br&gt;
&lt;em&gt;[proxy/Dockerfile]&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM envoyproxy/envoy:v1.15.0
COPY ./conf/envoy.yaml /etc/envoy/envoy.yaml
CMD /usr/local/bin/envoy -c /etc/envoy/envoy.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Start up the container in a proxy directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker build -t envoy/hello_lupin .
docker run -d --rm -p 8080:8080 -p 9901:9901 -v ~/go/prj/gRPC_prj/web_tmp/proxy/conf:/etc/envoy --name Greeter envoy/hello_lupin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or create docker-compose.yaml in web_tmp directory.&lt;br&gt;
&lt;em&gt;[docker-compose.yaml]&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;version: '3'
services:
  envoy:
    build:
      context: ./proxy
    image: hello_lupin
    container_name: Greeter
    ports:
      - 8080:8080
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By the way, if you want to stop the container&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker stop Greeter
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add the webpack command and the command to build the server to the make file and run it.&lt;br&gt;
&lt;em&gt;[Makefile]&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.PHONY: server client make_webclient

server:
        go run ./server/server.go

client: 
        go run ./client/client.go

web_client:
        cd ./html &amp;amp;&amp;amp; webpack ./index.js &amp;amp;&amp;amp; static -p 4444
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;make web_client
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Access 4444 port on localhost with a browser and check the Developer Tools console.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8cCyDwI3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lh7k665whk1ek1pwjqov.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8cCyDwI3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lh7k665whk1ek1pwjqov.png" alt="Image description" width="880" height="129"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>go</category>
      <category>grpc</category>
      <category>grpcweb</category>
      <category>envoy</category>
    </item>
    <item>
      <title>How to implement Elastic Search Using Spring Boot?</title>
      <author>ROHAN KADAM</author>
      <pubDate>Mon, 13 Dec 2021 03:54:13 +0000</pubDate>
      <link>https://dev.to/rohan2596/how-to-implement-elastic-search-using-spring-boot-ljb</link>
      <guid>https://dev.to/rohan2596/how-to-implement-elastic-search-using-spring-boot-ljb</guid>
      <description>&lt;h2&gt;
  &lt;a href="#elastic-search"&gt;
  &lt;/a&gt;
  Elastic Search
&lt;/h2&gt;

&lt;p&gt;Hello 👋Its Rohan Kadam😊&lt;/p&gt;

&lt;p&gt;Elastic Search !! What is elastic search? Why elastic Search? How to use elastic search Using Spring boot?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4N0hUNAY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3840/1%2AGHjTu-J0hLUm_v6IQK7_MA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4N0hUNAY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3840/1%2AGHjTu-J0hLUm_v6IQK7_MA.png" alt="Elastic Search Using Spring Boot" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-elastic-search"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.elastic.co/what-is/elasticsearch"&gt;What is Elastic Search?&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Elasticsearch is a distributed, free and open search and analytics engine for all types of data, including textual, numerical, geospatial, structured, and unstructured. Elasticsearch is built on Apache Lucene and was first released in 2010 by Elasticsearch N.V. (now known as Elastic).&lt;/p&gt;

&lt;p&gt;Known for its simple REST APIs, distributed nature, speed, and scalability, Elasticsearch is the central component of the Elastic Stack, a set of free and open tools for data ingestion, enrichment, storage, analysis, and visualization. Commonly referred to as the ELK Stack (after Elasticsearch, Logstash, and Kibana), the Elastic Stack now includes a rich collection of lightweight shipping agents known as Beats for sending data to Elasticsearch.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-use-elastic-search"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.elastic.co/what-is/elasticsearch"&gt;Why use Elastic Search?&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Elasticsearch is fast.&lt;/strong&gt; Because Elasticsearch is built on top of Lucene, it excels at full-text search. Elasticsearch is also a near real-time search platform, meaning the latency from the time a document is indexed until it becomes searchable is very short — typically one second. As a result, Elasticsearch is well suited for time-sensitive use cases such as security analytics and infrastructure monitoring.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Elasticsearch is distributed by nature.&lt;/strong&gt; The documents stored in Elasticsearch are distributed across different containers known as &lt;em&gt;shards&lt;/em&gt;, which are duplicated to provide redundant copies of the data in case of hardware failure. The distributed nature of Elasticsearch allows it to scale out to hundreds (or even thousands) of servers and handle petabytes of data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Elasticsearch comes with a wide set of features.&lt;/strong&gt; In addition to its speed, scalability, and resiliency, Elasticsearch has a number of powerful built-in features that make storing and searching data even more efficient, such as data rollups and index lifecycle management.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Elastic Stack simplifies data ingest, visualization, and reporting.&lt;/strong&gt; Integration with Beats and Logstash makes it easy to process data before indexing into Elasticsearch. And Kibana provides real-time visualization of Elasticsearch data as well as UIs for quickly accessing application performance monitoring (APM), logs, and infrastructure metrics data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-implement-elastic-search-in-spring-boot"&gt;
  &lt;/a&gt;
  How to implement Elastic Search in Spring Boot?
&lt;/h3&gt;

&lt;p&gt;Elastic Search is widely been used by industry today for developing search engines. Its best known for its high-performance searching and querying. Today we are going to implement the elastic search using the spring boot and the programming language Java. This part of we going to cover the CRUD operations for the same.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-how-to-generate-spring-boot-project"&gt;
  &lt;/a&gt;
  Step 1: How to generate Spring Boot Project?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://start.spring.io/"&gt;&lt;strong&gt;Spring Initializr&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-which-dependencies-should-i-include"&gt;
  &lt;/a&gt;
  Step 2: Which dependencies should I include?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zPPNlbz2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2836/1%2AjQHsgtgX2qv9JuD4Mc7Zuw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zPPNlbz2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2836/1%2AjQHsgtgX2qv9JuD4Mc7Zuw.png" alt="Rest high-level Client -Elastic Search" width="880" height="346"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-what-will-be-the-configuration-for-elastic-search"&gt;
  &lt;/a&gt;
  Step 3: What will be the Configuration for Elastic Search?
&lt;/h3&gt;

&lt;p&gt;The Java High-Level REST Client works on top of the Java Low-Level REST client. Its main goal is to expose API specific methods, that accept request objects as an argument and return response objects, so that request marshalling and response un-marshalling is handled by the client itself.&lt;/p&gt;

&lt;p&gt;Each API can be called synchronously or asynchronously. The synchronous methods return a response object, while the asynchronous methods, whose names end with the async suffix, require a listener argument that is notified (on the thread pool managed by the low-level client) once a response or an error is received.&lt;/p&gt;

&lt;p&gt;The Java High-Level REST Client depends on the Elasticsearch core project. It accepts the same request arguments as the TransportClient and returns the same response objects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h7RRW5Cz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3224/1%2A64bxPIoAaZsuIY9OtV7oJQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h7RRW5Cz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3224/1%2A64bxPIoAaZsuIY9OtV7oJQ.png" alt="Configuration -Elastic Search" width="880" height="711"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To perform CRUD operations we need to define storage for storing our data object. In the case of elastic search, types like a table in an SQL database, where the index is the SQL database. However, that is not a good way to approach type . In the Example below are use notes document /entity/model it can have multiple fields such as title, descriptions etc.RestClient dependencies provide us with methods such as&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.elastic.co/guide/en/elasticsearch/client/java-rest/master/java-rest-high-document-index.html"&gt;**IndexRequest&lt;/a&gt;**:- To create a new index for the object.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.elastic.co/guide/en/elasticsearch/client/java-rest/master/java-rest-high-document-update.html"&gt;**UpdateRequest&lt;/a&gt;**:- To update a existing index.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.elastic.co/guide/en/elasticsearch/client/java-rest/master/java-rest-high-document-delete.html"&gt;**DeleteRequest&lt;/a&gt;**:- To Delete an index from the elastic table.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high-search.html"&gt;**SearchRequest&lt;/a&gt;**:- To Perform a search from the database.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e8UoQrVL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4044/1%2A7bPSMQ2OQi-0fPNh83wrLA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e8UoQrVL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4044/1%2A7bPSMQ2OQi-0fPNh83wrLA.png" alt="Business -Logic For CRUD Operations" width="880" height="2591"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:-
&lt;/h3&gt;

&lt;p&gt;In the article, we tried to answers many questions related to Elastic Search and how to implement the same using Spring boot. Elastic Search powerfully features such as indexing and fast querying are used by many fortune 500 companies to provide service to others.&lt;/p&gt;

&lt;p&gt;Please do share and like💖 if you find the article useful. Follow me on medium &lt;a href="https://dev.toundefined"&gt;Rohan Ravindra Kadam&lt;/a&gt; and on Twitter at &lt;a href="https://twitter.com/rohankadam25"&gt;**rohankadam25&lt;/a&gt;**&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bibliography"&gt;
  &lt;/a&gt;
  Bibliography:-
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.elastic.co/guide/en/elasticsearch/client/java-rest/master/java-rest-high.html"&gt;&lt;strong&gt;Java High-Level REST Client | Java REST Client [master] | Elastic&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.elastic.co/"&gt;&lt;strong&gt;Free and Open Search: The Creators of Elasticsearch, ELK &amp;amp; Kibana | Elastic&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RewtI9lv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2800/1%2AmRwSuSvhuRcZKS3uElP6bg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RewtI9lv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2800/1%2AmRwSuSvhuRcZKS3uElP6bg.png" alt="Thank You, Viewers — Rohan Kadam" width="880" height="267"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>elasticsearch</category>
      <category>programming</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Difference between localStorage and sessionStorage</title>
      <author>Pankaj Kumar</author>
      <pubDate>Mon, 13 Dec 2021 03:01:48 +0000</pubDate>
      <link>https://dev.to/pankajkumar/difference-between-localstorage-and-sessionstorage-5a40</link>
      <guid>https://dev.to/pankajkumar/difference-between-localstorage-and-sessionstorage-5a40</guid>
      <description>&lt;p&gt;Websites hosted on a browser have no capacity of having any memory to store user's data. A user visiting from one page to another page on a website will be treated as a new user every time. The browser provides different types of storage mechanisms (localStorage, sessionStorage, cookies) to overcome this issue. Storage mechanism enables the website you are visiting to keep track of your movement from one page to another page so that the same information doesn't get asked which is already given to the website.&lt;/p&gt;

&lt;p&gt;localStorage, sessionStorage, and cookies are all client storage solutions that store in a single file in the user's system. Session data is stored on the server where the application/website is hosted. localStorage and sessionStorage, part of the web storage API, are two awesome tools to save the data in format of key/value pairs locally.&lt;/p&gt;

&lt;p&gt;In this article, We will try to understand the difference between localStorage and sessionStorage.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-localstorage"&gt;
  &lt;/a&gt;
  What is localStorage?
&lt;/h2&gt;

&lt;p&gt;It is a type of web storage that allows websites/applications to store and access data in the browser with no expiration date. This means the data stored in the browser will persist even after the browser window has been closed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax:
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Save data to localStorage
localStorage.setItem('key', 'Value');

// Get saved data from localStorage
let lastname = localStorage.getItem('key');

// Remove saved data from localStorage
localStorage.removeItem('key');

// Remove all saved data from localStorage
localStorage.clear();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#what-is-sessionstorage"&gt;
  &lt;/a&gt;
  What is sessionStorage?
&lt;/h2&gt;

&lt;p&gt;The sessionStorage object stores data for only one session, Meaning the data is deleted when the browser tab is closed.&lt;/p&gt;

&lt;p&gt;Syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Save data to sessionStorage
sessionStorage.setItem('key', 'value');

// Get saved data from sessionStorage
let lastname = sessionStorage.getItem('key');

// Remove saved data from sessionStorage
sessionStorage.removeItem('key');

// Remove all saved data from sessionStorage
sessionStorage.clear();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#difference-between-localstorage-and-sessionstorage"&gt;
  &lt;/a&gt;
  Difference between localStorage and sessionStorage
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#localstorage"&gt;
  &lt;/a&gt;
  localStorage
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;data stored with localStorage has no expiration date, and gets cleared only through JavaScript, or clearing the Browser cache / Locally Stored Data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The storage limit is the maximum amongst the three.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The data stored in localStorage persists until explicitly deleted. Changes made are saved and available for all current and future visits to the site.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It works on the same-origin policy. So, data stored will only be available on the same origin.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#sessionstorage"&gt;
  &lt;/a&gt;
  sessionStorage
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It stores data only for a session, meaning that the data is stored until the browser (or tab) is closed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Data is never transferred to the server.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Changes are only available per window (or tab in browsers like Chrome and Firefox). Changes made are saved and available for the current page, as well as future visits to the site on the same window. Once the window is closed, the storage is deleted.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h2&gt;

&lt;p&gt;localStorage and sessionStorage are performing similar tasks but with some very basic differences.&lt;/p&gt;

&lt;p&gt;This article was originally posted over &lt;a href="https://jsonworld.com"&gt;JsonWorld&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>10 Best Forum to become a good Developer in 2022</title>
      <author>New Linux Helper</author>
      <pubDate>Mon, 13 Dec 2021 02:47:35 +0000</pubDate>
      <link>https://dev.to/developerbishwas/10-best-forum-to-become-a-good-developer-in-2022-2cgm</link>
      <guid>https://dev.to/developerbishwas/10-best-forum-to-become-a-good-developer-in-2022-2cgm</guid>
      <description>&lt;p&gt;This is the list of some top 5 growing programming related forums/communities you must join. These forums may help you to get your answers for bug fixes and related topics. Also, joining this forum may help you to be a good developer. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Webmatrices Forum&lt;br&gt;
A lot of posts of this forum ranks on Google. Also, this forum is nicely popular among new developers. It has the highest &lt;strong&gt;&lt;code&gt;Daily Pageviews per Visitor: 6.1&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;daily time on site: 5:52&lt;/code&gt;&lt;/strong&gt;. It also has a decent amount of content in it. Users mostly talk about web/app development, game development and blogging/SEO related stuff here. This forum is also growing really fast.&lt;br&gt;
Suggest you to join this forum if you wanna learn about web development frameworks (Django, vue), API security, web scraping, automation, gameDevelopment and blogging/SEO.&lt;br&gt;
Visit here: &lt;a href="https://webmatrices.com/t/programming"&gt;https://webmatrices.com/&lt;/a&gt;&lt;br&gt;
Also, this forum has no ads.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Codeproject&lt;br&gt;
This forum is somehow popular on the web. According to Alexa rank, it has 1.53 Daily Pageviews per Visitor and 1:50 daily time on site. It has slightly lesser ranks than Webmatrices. The number of content, questions and answers is also pretty good. People generally talk about Python, C++ and Ai related stuff here.&lt;br&gt;
Visit here: &lt;a href="https://www.codeproject.com/"&gt;https://www.codeproject.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Codeguru&lt;br&gt;
This website is genuinely awesome for learning OS-related stuff. It has 1.3 Daily Pageviews per Visitor and 1:26 daily time on site. People discuss C programming, Onion architecture, .NET, vb.net and other OS-related stuff. Joining this forum would be great if you wanna about OS. Although there's a decrement rate in the Alexa rank of this forum website, I guess the rate will be changed soon.&lt;br&gt;
Visit here: &lt;a href="https://forums.codeguru.com/"&gt;https://forums.codeguru.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DaniWeb&lt;br&gt;
This website is also somehow related to hardware and OS related stuff. Daily Pageviews per Visitor and daily time on site are 1.3 and 1:34 respectively. Members usually discuss VB.NET, Computer Hardware, Python and os related stuff.&lt;br&gt;
I suggest you join this forum if you really wanna dive more into OS, hardware development and C programming.&lt;br&gt;
Visit here: &lt;a href="https://www.daniweb.com/"&gt;https://www.daniweb.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;thecodingforums&lt;br&gt;
This forum is the smallest of all mentioned here, but growing really nice. 1.4 Daily Pageviews per Visitor and 0:57 Daily Time on Site is the Alexa report of this site. People here talk about Python GUI, Tkinter, HTML, CSS and Java. I suggest you join this forum if you're really new to the programming world.&lt;br&gt;
Visit here: &lt;a href="https://www.thecodingforums.com/"&gt;https://www.thecodingforums.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;As I mentioned, these are growing forums, you are the one who gonna be another growth factor of these forums.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;By the way, this is the repost of my last article. &lt;/p&gt;

</description>
      <category>programming</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>django</category>
    </item>
    <item>
      <title>Created a React Ecommerce App Check it out!!</title>
      <author>MabeDiaby</author>
      <pubDate>Mon, 13 Dec 2021 01:30:28 +0000</pubDate>
      <link>https://dev.to/mabediaby/created-a-react-ecommerce-app-check-it-out-4hec</link>
      <guid>https://dev.to/mabediaby/created-a-react-ecommerce-app-check-it-out-4hec</guid>
      <description>&lt;p&gt;Just created my first react app after about a week of learning react. It's still a working project (I'll be fixing somethings in the upcoming week). Ill also be creating a bug tracker. Please like and comment on what more I should change. I was very excited to get started and I can't wait to learn more. I also did my own CSS. The whole app is fully responsive. Enjoy!!!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/feed/update/urn:li:activity:6875672070508867584/?commentUrn=urn%3Ali%3Acomment%3A(ugcPost%3A6875655319960264704%2C6875672020508557312)"&gt;https://www.linkedin.com/feed/update/urn:li:activity:6875672070508867584/?commentUrn=urn%3Ali%3Acomment%3A(ugcPost%3A6875655319960264704%2C6875672020508557312)&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>100 Languages Speedrun: Episode 22: XSLT</title>
      <author>Tomasz Wegrzanowski</author>
      <pubDate>Mon, 13 Dec 2021 00:49:59 +0000</pubDate>
      <link>https://dev.to/taw/100-languages-speedrun-episode-22-xslt-4am6</link>
      <guid>https://dev.to/taw/100-languages-speedrun-episode-22-xslt-4am6</guid>
      <description>&lt;p&gt;In the late 1990s and early 2000s there was an XML craze. People even wanted to replace HTML with some XML variant, and literally the only "advantage" it would have over HTML was that if you made any typos, the website would just refuse to display anything at all. Somehow that was supposed to be a huge selling point.&lt;/p&gt;

&lt;p&gt;Eventually common sense prevailed, but back then XML craze was going so hot, people were asking questions like - what if I need to turn XML into XML? I know, I'l use XML! That's how XSLT came to be.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hello-world"&gt;
  &lt;/a&gt;
  Hello, World!
&lt;/h3&gt;

&lt;p&gt;We can't really do conventional Hello, World!, as the whole XSLT model is turning XML into XML, but let's do something simple anyway.&lt;/p&gt;

&lt;p&gt;Here's &lt;code&gt;hello.xml&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" ?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;persons&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;person&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Alice&lt;span class="nt"&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/person&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;person&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Bob&lt;span class="nt"&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/person&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/persons&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here's &lt;code&gt;hello.xslt&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;xsl:stylesheet&lt;/span&gt; &lt;span class="na"&gt;xmlns:xsl=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/1999/XSL/Transform"&lt;/span&gt; &lt;span class="na"&gt;version=&lt;/span&gt;&lt;span class="s"&gt;"1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;xsl:output&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"xml"&lt;/span&gt; &lt;span class="na"&gt;indent=&lt;/span&gt;&lt;span class="s"&gt;"yes"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class="na"&gt;match=&lt;/span&gt;&lt;span class="s"&gt;"/persons"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;messages&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;xsl:apply-templates&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;"person"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/messages&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class="na"&gt;match=&lt;/span&gt;&lt;span class="s"&gt;"person"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;message&amp;gt;&lt;/span&gt;Hello, &lt;span class="nt"&gt;&amp;lt;xsl:value-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;!&lt;span class="nt"&gt;&amp;lt;/message&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/xsl:stylesheet&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can then run it like this, &lt;code&gt;xsltproc&lt;/code&gt; is even preinstalled on OSX:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;$ xsltproc hello.xslt hello.xml
&lt;span class="cp"&gt;&amp;lt;?xml version="1.0"?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;messages&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;message&amp;gt;&lt;/span&gt;Hello, Alice!&lt;span class="nt"&gt;&amp;lt;/message&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;message&amp;gt;&lt;/span&gt;Hello, Bob!&lt;span class="nt"&gt;&amp;lt;/message&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/messages&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So what's going on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;first, the &lt;code&gt;&amp;lt;?xml&amp;gt;&lt;/code&gt; boilerplate and some namespaces and versions. It's best to just copy paste paste it.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;xsl:output&lt;/code&gt; specifies output mode, in this case we want to generate XML and indent it automatically for readability. Not every kind of XML should be indented like that.&lt;/li&gt;
&lt;li&gt;Then we have two templates with &lt;code&gt;xsl:template&lt;/code&gt; - top level one for &lt;code&gt;/persons&lt;/code&gt; and then second one for each &lt;code&gt;/person&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If this seems to you like a bit crazy way to code, then you're not wrong.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#text-output"&gt;
  &lt;/a&gt;
  Text output
&lt;/h3&gt;

&lt;p&gt;In addition to generating XML, XSLT can also generate HTML and plain text. Let's try some plain text. We need to be very careful to get all the spaces and newlines in the right places, so this look extremely verbose.&lt;/p&gt;

&lt;p&gt;Here's &lt;code&gt;text.xml&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" ?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;persons&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;person&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Alice&lt;span class="nt"&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;surname&amp;gt;&lt;/span&gt;Cooper&lt;span class="nt"&gt;&amp;lt;/surname&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/person&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;person&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Bob&lt;span class="nt"&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;surname&amp;gt;&lt;/span&gt;Smith&lt;span class="nt"&gt;&amp;lt;/surname&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/person&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/persons&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here's &lt;code&gt;text.xslt&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;xsl:stylesheet&lt;/span&gt; &lt;span class="na"&gt;xmlns:xsl=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/1999/XSL/Transform"&lt;/span&gt; &lt;span class="na"&gt;version=&lt;/span&gt;&lt;span class="s"&gt;"1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;xsl:output&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class="na"&gt;match=&lt;/span&gt;&lt;span class="s"&gt;"/persons"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;xsl:apply-templates&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;"person"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class="na"&gt;match=&lt;/span&gt;&lt;span class="s"&gt;"person"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:text&amp;gt;&lt;/span&gt;Hello, &lt;span class="nt"&gt;&amp;lt;/xsl:text&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:value-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:text&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/xsl:text&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:value-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;"surname"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:text&amp;gt;&lt;/span&gt;!&lt;span class="ni"&gt;&amp;amp;#10;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/xsl:text&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/xsl:stylesheet&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Hello, Alice Cooper!
Hello, Bob Smith!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#fizzbuzz"&gt;
  &lt;/a&gt;
  FizzBuzz
&lt;/h3&gt;

&lt;p&gt;We could just generate the whole thing from scratch, but I think it's more true to the purpose of XSLT if we start with this &lt;code&gt;fizzbuzz.xml&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;fizzbuzz&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;number&amp;gt;&lt;/span&gt;1&lt;span class="nt"&gt;&amp;lt;/number&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;number&amp;gt;&lt;/span&gt;2&lt;span class="nt"&gt;&amp;lt;/number&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;number&amp;gt;&lt;/span&gt;3&lt;span class="nt"&gt;&amp;lt;/number&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;number&amp;gt;&lt;/span&gt;4&lt;span class="nt"&gt;&amp;lt;/number&amp;gt;&lt;/span&gt;
  ...
  &lt;span class="nt"&gt;&amp;lt;number&amp;gt;&lt;/span&gt;100&lt;span class="nt"&gt;&amp;lt;/number&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/fizzbuzz&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we could do this for &lt;code&gt;fizzbuzz.xslt&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;xsl:stylesheet&lt;/span&gt; &lt;span class="na"&gt;xmlns:xsl=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/1999/XSL/Transform"&lt;/span&gt; &lt;span class="na"&gt;version=&lt;/span&gt;&lt;span class="s"&gt;"1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;xsl:output&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class="na"&gt;match=&lt;/span&gt;&lt;span class="s"&gt;"/fizzbuzz"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;xsl:apply-templates&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class="na"&gt;match=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:variable&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"i"&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:choose&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;xsl:when&lt;/span&gt; &lt;span class="na"&gt;test=&lt;/span&gt;&lt;span class="s"&gt;"$i mod 15 = 0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;FizzBuzz&lt;span class="nt"&gt;&amp;lt;/xsl:when&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;xsl:when&lt;/span&gt; &lt;span class="na"&gt;test=&lt;/span&gt;&lt;span class="s"&gt;"$i mod 3 = 0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Fizz&lt;span class="nt"&gt;&amp;lt;/xsl:when&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;xsl:when&lt;/span&gt; &lt;span class="na"&gt;test=&lt;/span&gt;&lt;span class="s"&gt;"$i mod 5 = 0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Buzz&lt;span class="nt"&gt;&amp;lt;/xsl:when&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;xsl:otherwise&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;xsl:value-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;"$i"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/xsl:otherwise&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/xsl:choose&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:text&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;#10;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/xsl:text&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/xsl:stylesheet&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which generates exactly the FizzBuzz sequence you're expecting.&lt;/p&gt;

&lt;p&gt;There's things happenings here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;xsl:variable&lt;/code&gt; sets a local variable &lt;code&gt;i&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;xsl:choose&lt;/code&gt; with &lt;code&gt;xsl:whene&lt;/code&gt; and &lt;code&gt;xsl:otherwise&lt;/code&gt; decide which FizzBuzz branch to take&lt;/li&gt;
&lt;li&gt;there's also &lt;code&gt;xsl:if&lt;/code&gt; we could use instead&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#loops"&gt;
  &lt;/a&gt;
  Loops
&lt;/h3&gt;

&lt;p&gt;XSLT went through many iterations. XSLT 2.0 would actually make this reasonably easy, thanks to more flexible &lt;code&gt;xsl:for-each&lt;/code&gt;, but the XSLT processor that comes with OSX only supports XSLT 1.0, and it's not the only one - a lot of XSLT software never went past XSLT 1.0. So let's give it a go - we don't have loops, but we have recursion.&lt;/p&gt;

&lt;p&gt;Basically we first figure out how many iterations we want, then call &lt;code&gt;iteration(1, 20)&lt;/code&gt;. It will then check if current index reached max - if yes, that will be the end of it, otherwise it will call &lt;code&gt;iteration(2, 20)&lt;/code&gt;, which will call &lt;code&gt;iteration(3, 20)&lt;/code&gt; and so on until &lt;code&gt;iteration(20, 20)&lt;/code&gt; eventually stops.&lt;/p&gt;

&lt;p&gt;Here's &lt;code&gt;loop.xml&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" ?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;loop&amp;gt;&lt;/span&gt;20&lt;span class="nt"&gt;&amp;lt;/loop&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And &lt;code&gt;loop.xslt&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;xsl:stylesheet&lt;/span&gt; &lt;span class="na"&gt;xmlns:xsl=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/1999/XSL/Transform"&lt;/span&gt; &lt;span class="na"&gt;version=&lt;/span&gt;&lt;span class="s"&gt;"1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;xsl:output&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"iteration"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"i"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"max"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;xsl:text&amp;gt;&lt;/span&gt;Iteration &lt;span class="nt"&gt;&amp;lt;/xsl:text&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:value-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;"$i"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:text&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;#10;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/xsl:text&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:if&lt;/span&gt; &lt;span class="na"&gt;test=&lt;/span&gt;&lt;span class="s"&gt;"$max &amp;gt; $i"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;xsl:call-template&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"iteration"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;xsl:with-param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"i"&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;"$i + 1"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;xsl:with-param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"max"&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;"$max"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/xsl:call-template&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/xsl:if&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class="na"&gt;match=&lt;/span&gt;&lt;span class="s"&gt;"/loop"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:call-template&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"iteration"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;xsl:with-param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"i"&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;xsl:with-param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"max"&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/xsl:call-template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/xsl:stylesheet&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which generates:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ xsltproc loop.xslt loop.xml
Iteration 1
Iteration 2
Iteration 3
Iteration 4
Iteration 5
Iteration 6
Iteration 7
Iteration 8
Iteration 9
Iteration 10
Iteration 11
Iteration 12
Iteration 13
Iteration 14
Iteration 15
Iteration 16
Iteration 17
Iteration 18
Iteration 19
Iteration 20
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#fibonacci"&gt;
  &lt;/a&gt;
  Fibonacci
&lt;/h3&gt;

&lt;p&gt;And now that we can loop, we can generate the Fibonacci sequence.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;fib.xml&lt;/code&gt; is just the max value:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" ?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;fib-sequence&amp;gt;&lt;/span&gt;20&lt;span class="nt"&gt;&amp;lt;/fib-sequence&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And let's do &lt;code&gt;fib.xslt&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;xsl:stylesheet&lt;/span&gt; &lt;span class="na"&gt;xmlns:xsl=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/1999/XSL/Transform"&lt;/span&gt; &lt;span class="na"&gt;version=&lt;/span&gt;&lt;span class="s"&gt;"1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;xsl:output&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"fib"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"n"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;xsl:choose&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;xsl:when&lt;/span&gt; &lt;span class="na"&gt;test=&lt;/span&gt;&lt;span class="s"&gt;"2 &amp;gt;= $n"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;1&lt;span class="nt"&gt;&amp;lt;/xsl:when&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;xsl:otherwise&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;xsl:variable&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;xsl:call-template&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"fib"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;xsl:with-param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"n"&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;"$n - 1"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/xsl:call-template&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/xsl:variable&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;xsl:variable&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"b"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;xsl:call-template&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"fib"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;xsl:with-param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"n"&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;"$n - 2"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/xsl:call-template&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/xsl:variable&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;xsl:value-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;"$a + $b"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/xsl:otherwise&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/xsl:choose&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"iteration"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"i"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"max"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;xsl:text&amp;gt;&lt;/span&gt;fib(&lt;span class="nt"&gt;&amp;lt;/xsl:text&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:value-of&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;"$i"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:text&amp;gt;&lt;/span&gt;) = &lt;span class="nt"&gt;&amp;lt;/xsl:text&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:call-template&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"fib"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;xsl:with-param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"n"&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;"$i"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/xsl:call-template&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:text&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;#10;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/xsl:text&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:if&lt;/span&gt; &lt;span class="na"&gt;test=&lt;/span&gt;&lt;span class="s"&gt;"$max &amp;gt; $i"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;xsl:call-template&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"iteration"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;xsl:with-param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"i"&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;"$i + 1"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;xsl:with-param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"max"&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;"$max"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/xsl:call-template&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/xsl:if&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class="na"&gt;match=&lt;/span&gt;&lt;span class="s"&gt;"/fib-sequence"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;xsl:call-template&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"iteration"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;xsl:with-param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"i"&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;xsl:with-param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"max"&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/xsl:call-template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/xsl:stylesheet&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In order:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;we define recursive function &lt;code&gt;fib(n)&lt;/code&gt; for calculating the Fibonacci value&lt;/li&gt;
&lt;li&gt;we define &lt;code&gt;iteration(i, max)&lt;/code&gt; which will do our looping&lt;/li&gt;
&lt;li&gt;we call &lt;code&gt;iteration(1, max)&lt;/code&gt; at top level &lt;code&gt;/fib-sequence&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And the output is as expected:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fib(1) = 1
fib(2) = 1
fib(3) = 2
fib(4) = 3
fib(5) = 5
fib(6) = 8
fib(7) = 13
fib(8) = 21
fib(9) = 34
fib(10) = 55
fib(11) = 89
fib(12) = 144
fib(13) = 233
fib(14) = 377
fib(15) = 610
fib(16) = 987
fib(17) = 1597
fib(18) = 2584
fib(19) = 4181
fib(20) = 6765
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;XSLT 2.0 would make it slightly more readable as we wouldn't ned recursive looping, but in the end it would still be quite dreadful.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#should-you-use-xslt"&gt;
  &lt;/a&gt;
  Should you use XSLT?
&lt;/h3&gt;

&lt;p&gt;Absolutely not.&lt;/p&gt;

&lt;p&gt;XSLT is basically a joke language, except unlike with Emojicode, Befunge, Brainfuck, and such, people who created it weren't in on the joke.&lt;/p&gt;

&lt;p&gt;Just about every real language does XML processing better than XSLT. Just pick your favorite.&lt;/p&gt;

&lt;p&gt;Usually Ruby or Python is a close call, but in this case the first choice is very clearly Ruby. Ruby's Nokogiri is nearly perfect, and for some reason all Python's XML libraries I've tried (and I've tried a lot of them), had a lot of issues. Of course that's just relatively speaking, any of Python's libraries is still far better than using XSLT.&lt;/p&gt;

&lt;p&gt;There are no excuses to use XSLT. It's unsuitable for any purpose, in any version.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/taw/100-languages-speedrun"&gt;All code examples for the series will be in this repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/taw/100-languages-speedrun/tree/master/episode-22-xslt"&gt;Code for the XSLT episode is available here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>xml</category>
      <category>xslt</category>
    </item>
  </channel>
</rss>
