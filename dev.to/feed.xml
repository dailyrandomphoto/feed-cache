<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>5 Common Challenges Faced by Web Developers</title>
      <author>koshti Rahul</author>
      <pubDate>Thu, 22 Apr 2021 05:52:57 +0000</pubDate>
      <link>https://dev.to/gnral_opll/5-common-challenges-faced-by-web-developers-1m2p</link>
      <guid>https://dev.to/gnral_opll/5-common-challenges-faced-by-web-developers-1m2p</guid>
      <description>&lt;p&gt;In an age where the first thing that attracts a customer or a client to your business, is your virtual presence, you cannot do without a sound digital format that puts your business’ best foot forward. Establishing an excellent web application might be easy, but as technology evolves by the hour, it becomes difficult to upgrade and update your web application to stay relevant in the ever-changing market.&lt;/p&gt;

&lt;p&gt;Web Developers, therefore, find it extremely challenging to keep up with the technological advancements. It is almost like walking on a double-edged sword. On the one hand, you constantly need to revise your application and update it to accommodate the latest technological trends, and on the other hand, a failure to do so would directly lead to a loss of customer support.&lt;/p&gt;

&lt;p&gt;This is because the Internet today has made countless businesses offering similar services accessible to the customers at a single click, and if your business fails to provide them the best solution, it wouldn’t take them long to replace you with a business that isn’t technologically challenged.&lt;/p&gt;

&lt;p&gt;It is a matter of staying on your toes, and hence, the need to be extremely alert and aware of the business and related-environment. Though, each day brings a new obstacle for a web developer, certain common challenges that are faced across the industry can be traced. Discussed below are the 5 common challenges that are faced by web developers throughout the industry.&lt;/p&gt;

&lt;p&gt;Read More :: &lt;a href="https://cmsinstallation.blogspot.com/2021/04/5-common-challenges-faced-by-web.html"&gt;https://cmsinstallation.blogspot.com/2021/04/5-common-challenges-faced-by-web.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>php</category>
      <category>design</category>
    </item>
    <item>
      <title>Some of my favourite fonts on Google Fonts</title>
      <author>Aadityasiva</author>
      <pubDate>Thu, 22 Apr 2021 05:44:39 +0000</pubDate>
      <link>https://dev.to/aadityasivas/some-of-my-favourite-fonts-on-google-fonts-3g2i</link>
      <guid>https://dev.to/aadityasivas/some-of-my-favourite-fonts-on-google-fonts-3g2i</guid>
      <description>&lt;p&gt;Google Fonts is awesome it has a lot of beautiful fonts which are &lt;strong&gt;free&lt;/strong&gt; and &lt;strong&gt;open source&lt;/strong&gt;. Here are some of my favourites&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sansserif-fonts"&gt;
  &lt;/a&gt;
  Sans-serif fonts
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://fonts.google.com/specimen/Roboto"&gt;Roboto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fonts.google.com/specimen/Poppins"&gt;Poppins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fonts.google.com/specimen/Open+Sans"&gt;Open Sans&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fonts.google.com/featured/Plex"&gt;Plex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fonts.google.com/specimen/Ubuntu"&gt;Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fonts.google.com/specimen/Inter"&gt;Inter&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#serif-fonts"&gt;
  &lt;/a&gt;
  Serif fonts
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://fonts.google.com/specimen/Roboto+Slab"&gt;Roboto Slab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fonts.google.com/specimen/Merriweather"&gt;Merriwether&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fonts.google.com/specimen/Playfair+Display"&gt;Playfair Display&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#handwriting-fonts"&gt;
  &lt;/a&gt;
  Handwriting fonts
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://fonts.google.com/specimen/Dancing+Script"&gt;Dancing Script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fonts.google.com/specimen/Pacifico"&gt;Pacifico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fonts.google.com/specimen/Sacramento"&gt;Sacramento&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#monospace-fonts"&gt;
  &lt;/a&gt;
  Monospace fonts
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://fonts.google.com/specimen/Roboto+Mono"&gt;Roboto Mono&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fonts.google.com/specimen/Ubuntu+Mono"&gt;Ubuntu Mono&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fonts.google.com/specimen/Source+Code+Pro"&gt;Source Code Pro&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;What are your favourite fonts leave them down in the discussion&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>design</category>
      <category>fonts</category>
      <category>favourites</category>
    </item>
    <item>
      <title>TDD Practicality</title>
      <author>Steven Kaufman</author>
      <pubDate>Thu, 22 Apr 2021 05:39:22 +0000</pubDate>
      <link>https://dev.to/stevekaufman/tdd-practicality-46mo</link>
      <guid>https://dev.to/stevekaufman/tdd-practicality-46mo</guid>
      <description>&lt;h3&gt;
  &lt;a href="#background"&gt;
  &lt;/a&gt;
  Background
&lt;/h3&gt;

&lt;p&gt;As a young person getting into programming, it's hard not to notice the wildly varying cultural perspectives around the industry. &lt;br&gt;
From just watching YouTube tutorials, I think I was completely oblivious to the very existence of unit testing for at least a full year after learning the fundamentals of Javascript.&lt;/p&gt;

&lt;p&gt;Shortly after, however, I stumbled upon Robert C. Martin (Uncle Bob)'s talks on YouTube. &lt;br&gt;
If you haven't already seen his six publicly available hour-and-a-half long talks, I highly recommend watching ALL of them. &lt;br&gt;
I've personally rewatched and listened to them like podcasts in the car at least three times over. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtube.com/playlist?list=PLmmYSbUCWJ4x1GO839azG_BBw8rkh-zOj"&gt;Youtube: Clean Code - Uncle Bob&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#uncle-bob-and-tdd"&gt;
  &lt;/a&gt;
  Uncle Bob and TDD
&lt;/h3&gt;

&lt;p&gt;To summarize, he's one of the authors of the Agile Manifesto, a 50+ year software professional, and an extreme advocate for Test Driven Development.&lt;/p&gt;

&lt;p&gt;This advocacy for TDD sets him apart from even some of the other people who worked on the Agile Manifesto (which was designed to be a great compromise between wildly different programming philosophies).&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#my-question"&gt;
  &lt;/a&gt;
  My Question
&lt;/h3&gt;

&lt;p&gt;After playing around with TDD in personal projects, I can see its value, and I'm inclined to believe what Uncle Bob says. However, I want to be careful and make sure that I'm not blindly indoctrinating myself into some idealistic nonsense before I have much in the way of real world experience.&lt;/p&gt;

&lt;p&gt;I've seen the debates against TDD online, and Uncle Bob himself warns against trying to adopt things like TDD and Agile too quickly, as they're intended to be skills and disciplines that one has to practice to become effective at.&lt;/p&gt;

&lt;p&gt;My question is simply this, if anyone would like to share their opinion:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-might-tdd-ever-be-a-bad-idea"&gt;
  &lt;/a&gt;
  Why might TDD ever be a bad idea?
&lt;/h3&gt;

&lt;p&gt;or:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-is-tdd-always-a-good-idea"&gt;
  &lt;/a&gt;
  Why is TDD always a good idea?
&lt;/h3&gt;

</description>
      <category>tdd</category>
      <category>programming</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Protecting API keys in Flutter</title>
      <author>Aadityasiva</author>
      <pubDate>Thu, 22 Apr 2021 05:00:43 +0000</pubDate>
      <link>https://dev.to/aadityasivas/protecting-api-keys-in-flutter-619</link>
      <guid>https://dev.to/aadityasivas/protecting-api-keys-in-flutter-619</guid>
      <description>&lt;p&gt;It is always a fear that one day you might end up leaking your API key in a public git repository. In flutter is there are many ways of hiding the API key some are not working and some don't work properly in this article I will be showing you one way to work with API keys in flutter.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-see-how-we-can-do-it"&gt;
  &lt;/a&gt;
  Let's see how we can do it
&lt;/h2&gt;

&lt;p&gt;We will be using &lt;a href="https://pub.dev/packages/flutter_dotenv"&gt;this package&lt;/a&gt;&lt;br&gt;
If you are using it in a project &lt;strong&gt;with null safety&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;dependencies&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;flutter_dotenv&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;^4.0.0-nullsafety.0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you are using it in a project &lt;strong&gt;without null safety&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;dependencies&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;flutter_dotenv&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;^3.1.0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then create a file in the root directory called &lt;code&gt;.env&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For those of you who don't know &lt;strong&gt;what a &lt;code&gt;.env&lt;/code&gt; file is&lt;/strong&gt; it is basically a file in which we store secret variables.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the &lt;code&gt;.env&lt;/code&gt; file you can add your secret API keys in this format&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SUPER_SECRET_API_KEY=This is a super secret API key 
THIS_CAN_BE_CALLED_ANYTHING=This here can be anything like ut4ihyeFn49
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: Never commit these .env files in your version control.&lt;br&gt;
If you are using git version control system add the &lt;code&gt;.env&lt;/code&gt; file to &lt;code&gt;.gitignore&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After making this &lt;code&gt;.env&lt;/code&gt; file add it as an asset in the &lt;code&gt;pubspec.yaml&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;assets&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;.env&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;flutter pub get
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In your &lt;code&gt;main.dart&lt;/code&gt; file load the &lt;code&gt;.env&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:flutter_dotenv/flutter_dotenv.dart'&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;DotEnv&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;Future&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;DotEnv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;load&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;fileName:&lt;/span&gt; &lt;span class="s"&gt;".env"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="c1"&gt;//...runapp&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now in your code you can load the variables from the &lt;code&gt;.env&lt;/code&gt; file anywhere like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:flutter_dotenv/flutter_dotenv.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'SUPER_SECRET_API_KEY'&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;That's it, thanks for reading hope this short article helps!&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>flutter</category>
      <category>security</category>
    </item>
    <item>
      <title>There's nothing wrong with Inline Styles </title>
      <author>Shubham Jain</author>
      <pubDate>Thu, 22 Apr 2021 04:47:28 +0000</pubDate>
      <link>https://dev.to/shubhamjain/there-s-nothing-wrong-with-inline-styles-26o7</link>
      <guid>https://dev.to/shubhamjain/there-s-nothing-wrong-with-inline-styles-26o7</guid>
      <description>&lt;p&gt;A frequent criticism leveled against TailwindCSS is that it's just a fancy way to write inline styles. Usually, people counter by saying you can't create a design system with inline styles or limit the number of options.&lt;/p&gt;

&lt;p&gt;However, I would say the idea is not far from the truth—TailwindCSS is just a nicer/shorter way to write inline styles, one that supports media queries and pseudo-elements as well.&lt;/p&gt;

&lt;p&gt;The earliest implementation of Tailwind's approach I saw was in &lt;a href="https://acss.io/"&gt;AtomicCSS&lt;/a&gt;. A framework I laughed off when I first came across it.&lt;/p&gt;

&lt;p&gt;Tailwind introduces some design system ideas over pure inline styles, but overall the underlying ideas are the same. I see no reason why I won't be as productive with AtomicCSS as I am with Tailwind. &lt;/p&gt;

&lt;p&gt;Once you let go off the notion that inline styles are &lt;em&gt;inherently&lt;/em&gt; bad, you will become more accepting to Tailwind's ideas. &lt;/p&gt;

&lt;p&gt;In the ideal world, we will have a frozen set of design components and we will never have to write CSS except on very rare occasions. The components are updated rarely and there's no ambiguity about what belongs where.&lt;/p&gt;

&lt;p&gt;But the real world doesn't work that way. Here's what I have seen happen at companies:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You write the same styles again and again (flex, font-sizes, spacing).&lt;/li&gt;
&lt;li&gt;You end up creating tens of container components that do the same thing. &lt;/li&gt;
&lt;li&gt;You try to generalize components, only for a new requirement to come in which throws your assumptions out the window. &lt;/li&gt;
&lt;li&gt;You create a Card component, but having to fulfill more and more requirements, you have made it so generic that in the end, it's just a white box with box-shadows.&lt;/li&gt;
&lt;li&gt;You want to reuse the style of the X component, but realize that your new component is called Y. So, you can't help copying the same styles again. &lt;/li&gt;
&lt;li&gt;The stylesheet has grown to more than a megabyte, most of it is composed of the same styling applied repeatedly.&lt;/li&gt;
&lt;li&gt;You want to use Modal component, but you see that it gives way too much padding. So, you write more styles to override them.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These problems are quite universal. Unless your team is really small, writing CSS the way people idolize is extremely hard. Often, it never works. &lt;/p&gt;

&lt;p&gt;If the problem is so universal, maybe we ought to approach things differently.&lt;/p&gt;

&lt;p&gt;Inline styles solve it perfectly. You can use the styles you want without worrying about components. If you see a common component emerging, just extract it. The team won't waste time writing CSS for stupidly simple things, thinking names, and discussing how to modularize the CSS code. The evolution would be organic. &lt;/p&gt;

&lt;p&gt;Is it ideal? NO, of course. But, seeing the real-world scenarios, it's much better than alternatives.&lt;/p&gt;

&lt;p&gt;It's just like refactoring. Time and time again, I have seen programmers who write duct-taped code, and try to clean it up later are much more productive than the ones who spend an entirety discussing the right approach. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/davidwalshblog/status/1098960128794128384"&gt;https://twitter.com/davidwalshblog/status/1098960128794128384&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Even when I am not using TailwindCSS, I approach building frontend by writing solely using inline CSS. Once I have everything ready, I create the classes. Because then, I have a much better idea of how to organize my CSS.&lt;/p&gt;

&lt;p&gt;Inline styling is a tool that's needlessly been demonized. It's often much better than alternatives. And that's why TailwindCSS is winning. &lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>tailwindcss</category>
      <category>opinion</category>
    </item>
    <item>
      <title>Time Saving - Seven Absolutely Essential Tools for Front End Developers</title>
      <author>koshti Rahul</author>
      <pubDate>Thu, 22 Apr 2021 04:43:46 +0000</pubDate>
      <link>https://dev.to/gnral_opll/time-saving-seven-absolutely-essential-tools-for-front-end-developers-k2c</link>
      <guid>https://dev.to/gnral_opll/time-saving-seven-absolutely-essential-tools-for-front-end-developers-k2c</guid>
      <description>&lt;p&gt;There has been a great improvement in the kind of web development tools that are available to front end developers these days. These are well-tested frameworks and libraries that improve workflows as well as the quality of your deliverable. These tools also present a wide range of opportunities for responsive designing like advanced plugins, code-streamlining processes, browser add-ons, etc. However, the large number of these tools can make it complicated for a front end web developer website to select the best ones. Here is a shortlist of the tools that you will love.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-sublime-text-"&gt;
  &lt;/a&gt;
  1. Sublime Text :
&lt;/h1&gt;

&lt;p&gt;Here’s a well-designed, extremely efficient, and agile code editor that will make your life simple. Apart from its comprehensive range of features functions, it also provides a myriad of keyboard shortcuts. This means that you can now simultaneously edit your code or quickly navigate to files, lines, and symbols. If you are spending a large amount of time with your editor, this will certainly lead to time saving.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-twitter-bootstrap-"&gt;
  &lt;/a&gt;
  2. Twitter Bootstrap :
&lt;/h1&gt;

&lt;p&gt;This is one of the most widely used user-interface frameworks. If you are a UI developer and designer, you will be impressed by Bootstrap’s extensive UI package. It has been developed by Twitter’s team. As a user interface developers, you need to perform various critical tasks. Bootstrap helps you with modal object building, stylesheet normalizing, adding Javascript plugins, and more.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-chrome-developer-tools-"&gt;
  &lt;/a&gt;
  3. Chrome Developer Tools :
&lt;/h1&gt;

&lt;p&gt;This platform can help front end developers with editing their HTML as well as CSS in real-time. It can also be used to debug Javascript. In addition to that, it also lets you have a glance of your website’s performance. This tool is bundled as well as available&lt;/p&gt;

&lt;p&gt;Read More :: &lt;a href="https://cmsinstallation.blogspot.com/2021/04/seven-absolutely-essential-tools-for.html"&gt;https://cmsinstallation.blogspot.com/2021/04/seven-absolutely-essential-tools-for.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>design</category>
      <category>html</category>
      <category>programming</category>
    </item>
    <item>
      <title>Time Saving - Sublime Text 3 Plugins That Every Developer Must Use</title>
      <author>koshti Rahul</author>
      <pubDate>Thu, 22 Apr 2021 04:07:49 +0000</pubDate>
      <link>https://dev.to/gnral_opll/sublime-text-3-plugins-that-every-developer-must-use-a2e</link>
      <guid>https://dev.to/gnral_opll/sublime-text-3-plugins-that-every-developer-must-use-a2e</guid>
      <description>&lt;p&gt;Sublime Text 3 is one of the most popular free IDE for your code, its easy to use and configure.&lt;br&gt;
Sublime Text is a shareware cross-platform source code editor with a Python application programming interface (API). It natively supports many programming languages and markup languages, and functions can be added by users with plugins, typically community-built and maintained under free-software licenses.&lt;/p&gt;

&lt;p&gt;Today we are going to see some useful extension of sublime.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-package-control"&gt;
  &lt;/a&gt;
  1. Package Control
&lt;/h1&gt;

&lt;p&gt;When you just installed Sublime Text 3 you should immediately install Package Control Plugin. It is the most basic plugin that will allow you to easily and without any problems install, delete, redact other plugins. As I said earlier, after installing this plugin you don’t have to do this anymore. &lt;/p&gt;

&lt;p&gt;Use command ctrl+shift+p (for Windows or Linux) or cmd+shift+p (For Mac)&lt;br&gt;
Type “Install Package Control” and press enter&lt;br&gt;
sublime text 3 plugins,sublime text 3 plugin tutorial,sublime text 3 vue js plugin,sublime text 3 todo plugin,sublime text 3 plugins for php developme&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-emmet"&gt;
  &lt;/a&gt;
  2. Emmet
&lt;/h1&gt;

&lt;p&gt;This plugin is second in popularity and one of the most useful too. Emmet helps you to write a lot less, It lets you use abbreviations that automatically deflate into fully functional code&lt;/p&gt;

&lt;p&gt;Everything that you will need is to use Package Control as we said earlier. Write “Install Package Control” again and then write Emmet and press enter&lt;/p&gt;

&lt;p&gt;sublime text 3 plugins,sublime text 3 plugin tutorial,sublime text 3 vue js plugin,sublime text 3 todo plugin,sublime text 3 plugins for php developme&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-alignment"&gt;
  &lt;/a&gt;
  3. Alignment
&lt;/h1&gt;

&lt;p&gt;Alignment is a useful tool for aligning multiple sections or multi-line sections, which means is you can align multiple selections, or lines, via delimiter such as =. Simply type ctrl + alt + a on Windows, or cmd + ctrl + a on a Mac. And again use “Install Package Control” command to install it.&lt;/p&gt;

&lt;p&gt;Read More :: &lt;a href="https://cmsinstallation.blogspot.com/2021/04/sublime-text-3-plugins-that-every.html"&gt;https://cmsinstallation.blogspot.com/2021/04/sublime-text-3-plugins-that-every.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>html</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>3 Smart Things Worth Spending Your Money on as a Developer</title>
      <author>Programming Facts</author>
      <pubDate>Thu, 22 Apr 2021 03:54:21 +0000</pubDate>
      <link>https://dev.to/programmingfac1/3-smart-things-worth-spending-your-money-on-as-a-developer-2db9</link>
      <guid>https://dev.to/programmingfac1/3-smart-things-worth-spending-your-money-on-as-a-developer-2db9</guid>
      <description>&lt;p&gt;Have you ever thought about how much money you wasted on useless stuff trying to learn to code?&lt;/p&gt;

&lt;p&gt;We live in a society where people want us to buy their products. They show up in our socials’ homes screaming: “buy it!”. It’s so easy, for beginners, in particular, to get caught up in a spending loop buying resources they don’t really need.&lt;/p&gt;

&lt;p&gt;I’ve found myself in this position so many times. My Udemy account is full of courses I never even opened. I’ve bought so many coding books I’ve never even read.&lt;/p&gt;

&lt;p&gt;It just feels there is always more to know, and unless I buy 100 JavaScript courses, I won’t fill this gap.&lt;/p&gt;

&lt;p&gt;So is there a solution to all of this?&lt;/p&gt;

&lt;p&gt;My answer is: yes. You just need to set your priorities straight for your money and ask yourself a couple of questions before buying anything.&lt;/p&gt;

&lt;p&gt;Read More :: &lt;a href="https://cmsinstallation.blogspot.com/2021/04/3-smart-things-worth-spending-your.html"&gt;https://cmsinstallation.blogspot.com/2021/04/3-smart-things-worth-spending-your.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>design</category>
      <category>programming</category>
      <category>php</category>
    </item>
    <item>
      <title>My first python project!</title>
      <author>Hachikoi</author>
      <pubDate>Thu, 22 Apr 2021 02:56:01 +0000</pubDate>
      <link>https://dev.to/8koi/my-first-python-project-1ki9</link>
      <guid>https://dev.to/8koi/my-first-python-project-1ki9</guid>
      <description>&lt;h1&gt;
  &lt;a href="#tick-tack-toe"&gt;
  &lt;/a&gt;
  Tick Tack Toe
&lt;/h1&gt;

&lt;p&gt;From a course I bought in Udemy&lt;br&gt;
I think I covered any possible type error that the user could make, please tell me if I´m missing something!!&lt;/p&gt;

&lt;p&gt;What it does?&lt;br&gt;
-Ask the user to choose between X or O as a marker &lt;br&gt;
-Random to choose who is first&lt;br&gt;
-Verifies it´s an empty space&lt;br&gt;
-Then places the marker in a place that the player chooses&lt;br&gt;
-Verifies is someone has won&lt;br&gt;
-So on, so on&lt;br&gt;
-At the end ask if they want to play again&lt;/p&gt;

&lt;p&gt;I first try it without any help for 4 days,&lt;br&gt;
then finished whit some kind of walkthrough they give and then I mixed what I like and what they used to optimize my project! Whit a total of 7 days and approx. 800 written lines of code!!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pro-tip"&gt;
  &lt;/a&gt;
  Pro tip:
&lt;/h3&gt;

&lt;p&gt;To upload code just go to the programs you use, select all the code + tab + control c&lt;br&gt;
Then just paste it here!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  code
&lt;/h2&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import random

def final_display(display1,numepad):  #Yei! すき！好き！スキ！1-9r
    print(''*3)
    print(display1[:3],'°-°',numepad[:3])
    print('---------------',' + ','---------')
    print(display1[3:6],'°_°',numepad[3:6])
    print('---------------',' + ','---------')
    print(display1[6:],'°_°',numepad[6:])
    print('---------------',' + ','---------')

def choice_xy():
    print("Welcome to my tic tac toe game!~")
    choice = input("Do you want X or O?: ")
    while choice.lower() not in ['x','o']:
        choice = input("I said X or O?... ")
    if choice.lower() == 'x':
        return 'X','O'

    else:
        return 'O','X'

def place_symbol(display2,symbol,where):  #just places the correct symbol
    display2[where] = symbol

def win_check(board,mark):
    #Checks for all the Rows
    #then all the Columns
    #at least if the diagonals are equial to each other and the Marker
    if board[0] == mark and board[1] == mark and board[2] == mark:
        return True
    elif board[3] == mark and board[4] == mark and board[5] == mark:
        return True
    elif board[6] == mark and board[7] == mark and board[8] == mark:
        return True
    elif board[0] == mark and board[3] == mark and board[6] == mark:
        return True
    elif board[1] == mark and board[4] == mark and board[7] == mark:
        return True
    elif board[2] == mark and board[5] == mark and board[8] == mark:
        return True
    elif board[6] == mark and board[4] == mark and board[2] == mark:
        return True
    elif board[0] == mark and board[4] == mark and board[8] == mark:
        return True
    else:
        return False

def random_turn():
    turn = random.randint(1,2)
    if turn == 1:
        #print('Player 1')
        return turn
    else:
        #print('Player 2')
        return turn

def available_check(display3,position3):
    #Returns bool to check is the space is available
    return not display3[position3-1].isupper()
    #True == Occupied, False == Empty

def full_display(display7):
    #Checks if the display is full == True
    counter = 0
    for i in [1,2,3,4,5,6,7,8,9]:
        if display7[i-1] in 'X' or display7[i-1] in 'O':
            counter += 1
    return counter == 9

def where_put_it():  #Ask where to put the marker and verifies is in 1-9
    where = input('Where do you want to make your move?(1-9) ')
    while where not in ('1','2','3','4','5','6','7','8','9'):
        where = input('違う Invalid move, try again .... ')
    where2 = int(where)
    return where2

def play_again_ask():   #If wanna play again, returns True
    choice = input('Wanna play again?(Yes or No): ')
    while choice.lower() not in ['yes', 'no']:
        choice = input('あのさ。。Yes or No: ')
    if choice.lower() == 'yes':
        return 'yes'
    else:   #Just can be 'yes' or 'no'
        return 'no'

def pc_gaming():
    display0_0 = [' ',' ',' ',
                  ' ',' ',' ',
                  ' ',' ',' ']
    numepad = [1, 2, 3,
               4, 5, 6,
               7, 8, 9]
    player1S,player2S = choice_xy()
    if random_turn() == 1:
        turnCast = 1
        print('Player 1 goose first~')
    else:
        turnCast = 2
        print('Player 2 goose first~')

    while not full_display(display0_0):
        if turnCast % 2 == 0:
            print('Player 2´s turn~')
            final_display(display0_0, numepad)
            castPosition = where_put_it()-1  # Checks is in 1-9
            ##################
            while display0_0[castPosition].isupper():
                print('-Occupied field-')
                castPosition = where_put_it()-1
            place_symbol(display0_0,player2S,castPosition)
            if win_check(display0_0,player2S):
                final_display(display0_0, numepad)
                print('Player 2 WINS!')
                break

        elif turnCast % 2 != 0:
            print('Player 1´s turn~')
            final_display(display0_0,numepad)
            castPosition = where_put_it()-1  # Checks is in 1-9
            ##############
            while display0_0[castPosition].isupper():
                print('-Occupied field-')
                castPosition = where_put_it()-1
            place_symbol(display0_0,player1S,castPosition)
            if win_check(display0_0,player1S):
                final_display(display0_0, numepad)
                print('Player 1 WINS!')
                break

        turnCast += 1
    if not(win_check(display0_0,player1S) and win_check(display0_0,player1S)) and full_display(display0_0):
        print('Nobody wins...')

pc_gaming()
response = play_again_ask()
if response.lower == 'yes':
    pc_gaming()
else:
    print('Thanks for playing!')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

</description>
      <category>python</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Scientific Programming School</title>
      <author>Scientific Programming School</author>
      <pubDate>Thu, 22 Apr 2021 02:55:06 +0000</pubDate>
      <link>https://dev.to/scientificschool/scientific-programming-school-123e</link>
      <guid>https://dev.to/scientificschool/scientific-programming-school-123e</guid>
      <description>&lt;p&gt;The ‘&lt;strong&gt;Learn Scientific Programming&lt;/strong&gt;’ project in 2016 started as an eLearning blog to demonstrate the use of scientific programming languages in processing Big data. In the year 2020, we founded a next generation learning platform for creating and delivering interactive and adaptive courses on the advanced topics of Linux, Devops, HPC  Scientific programming languages and Data Sciences: &lt;strong&gt;Scientific Programming School&lt;/strong&gt; &lt;a href="https://scientificprogramming.io/"&gt;https://scientificprogramming.io/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>tutorial</category>
      <category>programming</category>
      <category>devops</category>
    </item>
    <item>
      <title>Ludo CSS Grid!</title>
      <author>Victor Navarrete</author>
      <pubDate>Thu, 22 Apr 2021 02:33:28 +0000</pubDate>
      <link>https://dev.to/vitoconavarrete/ludo-css-grid-4c84</link>
      <guid>https://dev.to/vitoconavarrete/ludo-css-grid-4c84</guid>
      <description>&lt;p&gt;Siempre me ha llamado la atención los juegovideos, aunque soy algo nulo en motores gráficos y solo me limito a lo que pueda realizar con canvas y svg animado, html, etc.. he estado trabajando en la ui de un juego ludo solo con css, para experimentar con mis habilidades css y como aplico algunos css de terceros en el proyecto.&lt;/p&gt;

&lt;p&gt;Ahora que he logrado algo bien satisfactorio mejore la grilla para que tenga las posiciones tal cual en el tablero y sea en teoría funcional , no solo una grilla imitando un tablero.&lt;/p&gt;

&lt;p&gt;He estado revisando react y vue, para agregar interactividad y hacerlo funcional.. además de que pueda de responder de forma dinámica a los cambios en los datos... después de un tiempo lo hice con angularjs.. si, el primer angular que solo es para front js.. basado en uso del dom como jquery etc. puede no ser una opción mas moderna, pero me ha dado la libertad de crear estructuras de datos comprensibles y mantenibles para poder hacer las interacciones y reglas del juego.&lt;/p&gt;

&lt;p&gt;Aún todo esto va en desarrollo y parte de la ui la deje en Codepen&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/vitoconavarrete/embed/NWdMGNm?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Mi proyecto avanza y  poco a poco subo actualizaciones, acá puedes ver ciertos avances aun no funcionales &lt;a href="https://loodo.netlify.app/"&gt;Versión online&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Espero dejarlo funcional con las siguientes características: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;juego funcional&lt;/li&gt;
&lt;li&gt;usuarios, rooms e interacción realtime (websocket)&lt;/li&gt;
&lt;li&gt;invitaciones a amigos por para jugar o visualizar un juego&lt;/li&gt;
&lt;li&gt;chat&lt;/li&gt;
&lt;li&gt;videochat&lt;/li&gt;
&lt;li&gt;y otras ideas extras &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Todo esto es un pasatiempo, para probarme simplemente que puedo. si alguien tiene sugerencias de como implementar alguno de mis grandes items, los leo con entusiasmo.&lt;/p&gt;

&lt;p&gt;Saludos!! ✌️&lt;/p&gt;

</description>
      <category>ludo</category>
      <category>css</category>
      <category>ui</category>
      <category>hobby</category>
    </item>
    <item>
      <title>We Are Looking for a Data Scientist Remote in USA</title>
      <author>mariacris431</author>
      <pubDate>Thu, 22 Apr 2021 01:40:48 +0000</pubDate>
      <link>https://dev.to/mariacris431/we-are-looking-for-a-data-scientist-remote-in-usa-24ei</link>
      <guid>https://dev.to/mariacris431/we-are-looking-for-a-data-scientist-remote-in-usa-24ei</guid>
      <description>&lt;p&gt;Hi everyone! Iaso AI is looking for a Senior Data Scientist. "We are a growing machine learning medical platform.We are working on tough and exciting problems, and need experienced senior level engineers with diverse backgrounds to make our vision a reality".&lt;/p&gt;

&lt;p&gt;Skills and experience needed: 3+ years of experience in: Data science, Python.&lt;br&gt;
1+ year of experience in Machine learning, AWS. &lt;/p&gt;

&lt;p&gt;Compensation: USD$120K to 180K per year.&lt;/p&gt;

&lt;p&gt;Location: Remote job from United States Residents &lt;/p&gt;

&lt;p&gt;Language: English Conversational&lt;/p&gt;

&lt;p&gt;You can apply easily using the following link: &lt;a href="https://jobs.torre.co/3ar0udy"&gt;https://jobs.torre.co/3ar0udy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you don't have a torre.co account yet, I can help you set it up and then submit the application for you.&lt;/p&gt;

</description>
      <category>datascience</category>
      <category>datascientist</category>
      <category>python</category>
      <category>machinelearning</category>
    </item>
  </channel>
</rss>
