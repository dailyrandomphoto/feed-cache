<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Understanding of text-emphasis CSS property</title>
      <author>Preethi</author>
      <pubDate>Tue, 14 Dec 2021 14:12:48 +0000</pubDate>
      <link>https://dev.to/preethi_dev/understanding-of-text-emphasis-css-property-57op</link>
      <guid>https://dev.to/preethi_dev/understanding-of-text-emphasis-css-property-57op</guid>
      <description>&lt;p&gt;Hey Gang, Again happy to see you in &lt;b&gt;Secret CSS Property Series&lt;/b&gt;. You may not be heared about &lt;code&gt;text-emphasis&lt;/code&gt; css property, since it's under used in this world. But, it's quite interesting. So, can't wait and get this show on the road🎉.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;text-emphasis&lt;/code&gt; css property, as the name itself define apply emphasis mark to the text. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kNww1Kx3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/abnp4psnye8njyc37dwg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kNww1Kx3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/abnp4psnye8njyc37dwg.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Getting curious to learn right. Then dive into the syntax following below. (&lt;code&gt;text-emphasis&lt;/code&gt; is a shorthand property for &lt;code&gt;text-emphasis-style&lt;/code&gt; and &lt;code&gt;text-emphasis-color&lt;/code&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;text-emphasis&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;'text-emphasis-style'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;'text-emphasis-color'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note: we can't combine &lt;code&gt;text-emphasis-position&lt;/code&gt; property in &lt;code&gt;text-emphasis&lt;/code&gt; shorthand property&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Before diving to shorthand property, we need to get a clear idea about &lt;code&gt;text-emphasis-style&lt;/code&gt; and what kind of styles are available to make our text incredible.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;text-emphasis-style&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;filled&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;text-emphasis-style&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;open&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;text-emphasis-style&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;dot&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;text-emphasis-style&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;circle&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;text-emphasis-style&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;double-circle&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;text-emphasis-style&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;triangle&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;text-emphasis-style&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;sesame&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;text-emphasis-style&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;string&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* text-emphasis-style: '*' */&lt;/span&gt;
&lt;span class="nt"&gt;text-emphasis-style&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;none&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;text-emphasis-color&lt;/code&gt; CSS property sets the color of emphasis marks.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note: If no color is present, it set &lt;code&gt;currentcolor&lt;/code&gt; as default value&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Initial value */&lt;/span&gt;
&lt;span class="nt"&gt;text-emphasis-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;currentcolor&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="c"&gt;/* &amp;lt;color&amp;gt; */&lt;/span&gt;
&lt;span class="nt"&gt;text-emphasis-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#555&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;text-emphasis-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;blue&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;text-emphasis-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;rgba&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;90&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;200&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;160&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="err"&gt;8&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="nt"&gt;text-emphasis-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;transparent&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Wow still with me, you have much more patience to learn new thing. For you, I will give you a live demo for &lt;code&gt;text-emphasis&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/preethi-dev/embed/dyVNRVZ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Hope you uncomplicate this property by codepen demo. Greetings from my side🌹, Finally you learned a brand new concepts and consequently, I will explain one bonus info.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;text-emphasis-position&lt;/code&gt; CSS property sets where emphasis marks are drawn and some tow values are required to work:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;text-emphasis-position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;under&lt;/span&gt; &lt;span class="nt"&gt;right&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;text-emphasis-position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;under&lt;/span&gt; &lt;span class="nt"&gt;left&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;text-emphasis-position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;over&lt;/span&gt; &lt;span class="nt"&gt;right&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;text-emphasis-position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;over&lt;/span&gt; &lt;span class="nt"&gt;left&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Values seems little bit weird right. Don't worry gang, it's not as much as tough like you think. There are only four values: &lt;code&gt;over&lt;/code&gt;, &lt;code&gt;under&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;over&lt;/b&gt;- Draws marks over the text in horizontal writing mode.&lt;br&gt;
&lt;b&gt;under&lt;/b&gt;- Draws marks under the text in horizontal writing mode.&lt;br&gt;
&lt;b&gt;right&lt;/b&gt;- Draws marks to the right of the text in vertical writing mode.&lt;br&gt;
&lt;b&gt;left&lt;/b&gt;- Draws marks to the left of the text in vertical writing mode.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note: &lt;b&gt;The preferred position of emphasis marks depends on the language&lt;/b&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In Japanese for example, the preferred position is &lt;code&gt;over right&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--04VcSqKn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bnnac3zfbq7qavjv9n3n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--04VcSqKn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bnnac3zfbq7qavjv9n3n.png" alt="Image description" width="416" height="78"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In Chinese, on the other hand, the preferred position is &lt;code&gt;under right&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KIrxFGXw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/er4y9rb6ziym1j1nucfx.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KIrxFGXw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/er4y9rb6ziym1j1nucfx.gif" alt="Image description" width="133" height="28"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hey, Blog went to Internationalization concept and quite unexpected. however, Prepare your designs for different languages and writing modes because the World Wide Web is available to everyone in the world. &lt;/p&gt;

&lt;p&gt;Such a little long blog. If you love this blog and feel like getting a new thing today, Then drop a comment and give me a cute heart❤ because it's really lot to me. Thanks for reading!!&lt;/p&gt;

&lt;p&gt;See you on next series👋🏻👋🏻.&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>todayilearned</category>
      <category>beginners</category>
    </item>
    <item>
      <title>What is a hash rate and what is its role in mining</title>
      <author>martin tyeman</author>
      <pubDate>Tue, 14 Dec 2021 14:07:57 +0000</pubDate>
      <link>https://dev.to/martintyeman/what-is-a-hash-rate-and-what-is-its-role-in-mining-43k8</link>
      <guid>https://dev.to/martintyeman/what-is-a-hash-rate-and-what-is-its-role-in-mining-43k8</guid>
      <description>&lt;p&gt;New technologies bring new names and terms to market. It is one of the newest technologies available in the Chinese blockchain and cryptocurrency market. The world of cryptocurrency is full of unknown terms. In this article, we want to get acquainted with one of the most important terms in this world. The word hash is one of the most widely used and common terms in this environment. In the following, we intend to get a better view of the Chinese block by answering the question of what is a hash rate.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-hash-rate-criteria-for-measuring-minor-devices"&gt;
  &lt;/a&gt;
  What is the hash rate? Criteria for measuring minor devices
&lt;/h2&gt;

&lt;p&gt;Hash rate or hash power is a measure of the performance of a minor device. In addition to buying and selling different types of digital currencies, many people are also engaged in mining in various types of digital currency exchanges. We need a miner device for mining. A miner device is a device that solves complex network equations. In fact, it is difficult to solve difficult equations for any network activity such as financial transfers. Some people called miners solve these equations with the help of advanced devices. Any miner who can solve the equation sooner will be rewarded from the grid. Therefore, miners are always looking for the most powerful devices for mining. This is where the importance of hash rate comes into play.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hashing-mining-is-getting-harder-day-by-day"&gt;
  &lt;/a&gt;
  Hashing, mining is getting harder day by day
&lt;/h2&gt;

&lt;p&gt;So far we are familiar with the definition of HashRate. The hash rate is not a fixed number. In fact, due to the extraction time of the blocks, the hash rate also increases. In other words, if the hash rate is constant, many people can solve all the equations in the network in a very short time. But the architecture of most digital currencies, especially bitcoin, is designed in such a way that it takes more time to solve the equations each time. Here the hash function shows itself more. In other words, higher hash power makes it more difficult to extract bitcoins and similar currencies. It is interesting to know that like the possibility of digital currency calculator that has made it possible to calculate the conversion of currencies to each other, some sites have made it possible to calculate the economics of mining based on hash at the moment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-is-hash-rate-measured-and-what-is-its-unit"&gt;
  &lt;/a&gt;
  How is hash rate measured and what is its unit?
&lt;/h2&gt;

&lt;p&gt;The hash rate is calculated and measured by a unit called (hash per second). The hash rate can also be divided into larger or smaller units. You can see the hash rate units below:&lt;/p&gt;

&lt;p&gt;1 KH / s or thousand hashes per second; Equivalent to one kilogram per second&lt;br&gt;
1 MH / s or one million hashes per second; Equivalent to one megahertz per second&lt;br&gt;
1 GH / s or one billion hashes per second; Equivalent to one gigabyte per second&lt;br&gt;
1 TH / s or one trillion hashes per second; Equivalent to one per second&lt;br&gt;
1 PH / s or one quadrillion hashes per second; Equivalent to one pt per second&lt;br&gt;
1 EH / s or one quintillion hashes per second; Equivalent to one exhalation per second&lt;br&gt;
Hash rate, reward and difficulty of extraction, mining profitability trio&lt;br&gt;
When we go to mining, we come across a triangular triangle. Hash rate, miners' reward and difficulty level are three interrelated factors. In other words, as the hash rate increases, so does the degree of difficulty. In this situation, the miners compete fiercely to solve the equations. As a result, it becomes more difficult to receive rewards. This is true of all Chinese blocks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-hash-the-most-important-criterion-for-buying-a-mining-device"&gt;
  &lt;/a&gt;
  Is hash the most important criterion for buying a mining device?
&lt;/h2&gt;

&lt;p&gt;Hash is just one of the many key factors in the profitability of the mining industry. In addition to hash power, power consumption and device price are also important factors in mining profitability. In the bitcoin mining industry, for example, the more hashes a device has, the more likely it is to solve the equation. We suggest that you refer to the Lightcoin purchase page before continuing the article and to get acquainted with digital currencies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introducing-3-devices-with-high-hash-rate-for-mining"&gt;
  &lt;/a&gt;
  Introducing 3 devices with high hash rate for mining
&lt;/h2&gt;

&lt;p&gt;After getting acquainted with mining and hash rate correction, we have a look at the most famous mining devices. Of course, as we mentioned, hash rate is not just a good criterion for choosing a mining device. But it can help those interested in the mining industry to choose the right device. The choice of mining device also depends on the type of mining currency. In other words, some devices are built solely to extract bitcoin or atrium. Just as you can not convert it into another currency when buying Tetra. Devices designed to extract a type of china block cannot be modified.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-bitcoin-main-miner-s17-plus-flag-bearer-of-bit-main"&gt;
  &lt;/a&gt;
  1- Bitcoin Main Miner S17 Plus, flag bearer of Bit main
&lt;/h3&gt;

&lt;p&gt;The Main Ant Meyer S17 is considered to be the flagship of Bitcoin. With this in mind, it is clear that the manufacturer has laid the foundation stone for this device. BitMine EntS 17 Plus has a power equal to 73 terraces. Of course, power consumption above 2920 watts along with the price of $ 2600 has made this device one of the most expensive devices on the market.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-innosilicon-t3-plus-the-hope-of-the-mining-industry"&gt;
  &lt;/a&gt;
  2- Innosilicon T3 Plus, the hope of the mining industry
&lt;/h3&gt;

&lt;p&gt;The well-known company Innosilicon has marked the line with all its competitors by offering the Innosilicon T3 Plus device. Specifications such as 53-watt power along with 2100 watts of power consumption have put this device on the shopping list of many of the world's major miners.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-watts-miner-m20s-an-attractive-product-from-an-emerging-company"&gt;
  &lt;/a&gt;
  3- Watts Miner M20S, an attractive product from an emerging company
&lt;/h3&gt;

&lt;p&gt;MicroBT does not have a long life in the mining industry. The company's M20 Miner with 68-horsepower power along with low weight and relatively low price of $ 1890 shows the company's high determination to expand its market. This device can be used more for personal miners.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hash-rate-the-mysterious-world-and-the-secret-of-mining"&gt;
  &lt;/a&gt;
  Hash rate, the mysterious world and the secret of mining
&lt;/h2&gt;

&lt;p&gt;In this article, we tried to get acquainted with the world of mining in the form of what is a hash rate question. The term hash rate is more commonly used in the mining industry. The world of mining has become a world full of mysteries due to the complexity of equations, the variability of rewards. Of course, this fascinating world is not for everyone. In other words, entering this field is suitable for those who are fully acquainted with technical issues and the world of cryptocurrency. The market for buying and selling digital currencies is a more appropriate and sensible way to operate and invest.&lt;/p&gt;

</description>
      <category>blockchain</category>
    </item>
    <item>
      <title>34 Tips for Professional JavaScript Developers</title>
      <author>Michael Mangialardi</author>
      <pubDate>Tue, 14 Dec 2021 14:06:42 +0000</pubDate>
      <link>https://dev.to/michaelmangial1/34-tips-for-professional-javascript-developers-37la</link>
      <guid>https://dev.to/michaelmangial1/34-tips-for-professional-javascript-developers-37la</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-this-article-all-about"&gt;
  &lt;/a&gt;
  What is this article all about?
&lt;/h2&gt;

&lt;p&gt;It might be easier to begin by saying what it's &lt;em&gt;not&lt;/em&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;This is &lt;strong&gt;not an enumeration of tips and tricks to land your first job&lt;/strong&gt; (there is already plenty of stuff on that topic).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This is &lt;strong&gt;not a list of professional "networking" skills&lt;/strong&gt; (I find that stuff boring, no offense).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This is &lt;strong&gt;not an aggregation of purely technical advice&lt;/strong&gt; (because the role of a JavaScript developer is not purely technical).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Rather, I want to dish out practical advice for what to do when you've already landed your first gig.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In short, I want you to be feel motivated, driven, and confident in &lt;strong&gt;answering the simple question of "what's next?"&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#the-journey"&gt;
  &lt;/a&gt;
  The Journey
&lt;/h2&gt;

&lt;p&gt;Specifically, I want to provide an answer to that important question beginning at the start of a new job, and then work our way from there.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-disclaimer"&gt;
  &lt;/a&gt;
  A Disclaimer
&lt;/h2&gt;

&lt;p&gt;JavaScript is a broad enterprise, and there are so many different niches (and therefore positions) that one may find themself in.&lt;/p&gt;

&lt;p&gt;I cannot possibly cover practical advice at that scale. Therefore, I will assume a specific scenario.&lt;/p&gt;

&lt;p&gt;Even if said scenario does not describe your situation, I still hope the advice can be practical and helpful in a general sense.&lt;/p&gt;

&lt;p&gt;I'll leave it to the reader to adopt and mold the advice to their specific circumstances.&lt;/p&gt;

&lt;p&gt;With that aside, let's end this introduction and get started already.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ok-i-got-my-first-jobnow-what"&gt;
  &lt;/a&gt;
  Ok, I got my first job...now what?
&lt;/h2&gt;

&lt;p&gt;You're now a JavaScript developer writing code for a web application product.&lt;/p&gt;

&lt;p&gt;You work with a group of developers, some more frontend-focused and some more backend-focused.&lt;/p&gt;

&lt;p&gt;You have a software developer manager that you check in with once a week.&lt;/p&gt;

&lt;p&gt;There's also a product team composed of a Product Manager, UI/UX Designer, and a Technical Product Manager.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-1"&gt;
  &lt;/a&gt;
  Tip #1
&lt;/h3&gt;

&lt;p&gt;You were hired for a reason. Remember that.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-2"&gt;
  &lt;/a&gt;
  Tip #2
&lt;/h3&gt;

&lt;p&gt;You don't impress peers with your technical skills.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-3"&gt;
  &lt;/a&gt;
  Tip #3
&lt;/h3&gt;

&lt;p&gt;Make your first career milestone being able to complete assigned work with minimal help (but initiate asking questions until you get there).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-4"&gt;
  &lt;/a&gt;
  Tip #4
&lt;/h3&gt;

&lt;p&gt;Read PRs of more experienced PRs and learn from them (even if you weren't assigned to do the review).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-5"&gt;
  &lt;/a&gt;
  Tip #5
&lt;/h3&gt;

&lt;p&gt;Be yourself. A personable teammate is a very attractive quality.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-6"&gt;
  &lt;/a&gt;
  Tip #6
&lt;/h3&gt;

&lt;p&gt;Expect long code review feedback cycles. That's normal in this stage.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#alright-i-can-complete-tasks-with-minimal-helpwhats-next"&gt;
  &lt;/a&gt;
  Alright, I can complete tasks with minimal help...what's next?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#tip-7"&gt;
  &lt;/a&gt;
  Tip #7
&lt;/h3&gt;

&lt;p&gt;Make it your next milestone to complete assigned work with better efficiency.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-8"&gt;
  &lt;/a&gt;
  Tip #8
&lt;/h3&gt;

&lt;p&gt;Improve efficiency by paying attention to common points made when others review your code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-9"&gt;
  &lt;/a&gt;
  Tip #9
&lt;/h3&gt;

&lt;p&gt;Improve efficiency by targeting and resolving bottlenecks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-10"&gt;
  &lt;/a&gt;
  Tip #10
&lt;/h3&gt;

&lt;p&gt;Remember that, in part, improving efficiency just takes experience (which takes time).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#alright-i-can-complete-tasks-with-improved-efficientnow-i-should-"&gt;
  &lt;/a&gt;
  Alright, I can complete tasks with improved efficient...now I should ____?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#tip-11"&gt;
  &lt;/a&gt;
  Tip #11
&lt;/h3&gt;

&lt;p&gt;Make it your next milestone to improve the quality of your code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-12"&gt;
  &lt;/a&gt;
  Tip #12
&lt;/h3&gt;

&lt;p&gt;Get very good at providing thorough code reviews.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-13"&gt;
  &lt;/a&gt;
  Tip #13
&lt;/h3&gt;

&lt;p&gt;Always take time refactor your code after you get it working, &lt;a href="https://www.michaelmang.dev/blog/how-to-help-someone-else-review-your-code"&gt;making your code easy to review&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-14"&gt;
  &lt;/a&gt;
  Tip #14
&lt;/h3&gt;

&lt;p&gt;Write &lt;a href="https://gist.github.com/wojteklu/73c6914cc446146b8b533c0988cf8d29"&gt;clean code&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-15"&gt;
  &lt;/a&gt;
  Tip #15
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.michaelmang.dev/blog/use-the-source-luke"&gt;Get comfortable with reading open source code&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-16"&gt;
  &lt;/a&gt;
  Tip #16
&lt;/h3&gt;

&lt;p&gt;Imitate patterns found in open source code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-17"&gt;
  &lt;/a&gt;
  Tip #17
&lt;/h3&gt;

&lt;p&gt;Imitate patterns found in your codebase.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-18"&gt;
  &lt;/a&gt;
  Tip #18
&lt;/h3&gt;

&lt;p&gt;Do pair code reviews.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#im-writing-cleaner-code-so-i-should-focus-on-next"&gt;
  &lt;/a&gt;
  I'm writing cleaner code so I should focus on ____ next?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#tip-19"&gt;
  &lt;/a&gt;
  Tip #19
&lt;/h3&gt;

&lt;p&gt;Make it your next milestone to help improve the team's efficiency and culture.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-20"&gt;
  &lt;/a&gt;
  Tip #20
&lt;/h3&gt;

&lt;p&gt;Initiate meetings to help developers focus on professional development (I've always liked the format of doing a &lt;a href="https://www.michaelmang.dev/blog/code-show-and-tell"&gt;show-and-tell where developers can shared a recent thing they've learned&lt;/a&gt;).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-21"&gt;
  &lt;/a&gt;
  Tip #21
&lt;/h3&gt;

&lt;p&gt;Observe and address bottlenecks in the review and deployment process.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-22"&gt;
  &lt;/a&gt;
  Tip #22
&lt;/h3&gt;

&lt;p&gt;Observe and address recurring bottlenecks in project planning and execution.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-24"&gt;
  &lt;/a&gt;
  Tip #24
&lt;/h3&gt;

&lt;p&gt;Initiate suggestions for better coding patterns and technologies.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-24"&gt;
  &lt;/a&gt;
  Tip #24
&lt;/h3&gt;

&lt;p&gt;Initiate trying &lt;a href="https://www.michaelmang.dev/blog/how-to-energize-your-developer-experience-with-a-powerlifting-technique"&gt;different ways of thinking and working&lt;/a&gt; (i.e. pair on all code reviews for one project).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-25"&gt;
  &lt;/a&gt;
  Tip #25
&lt;/h3&gt;

&lt;p&gt;Aim for initiating one technology improvement and alternative way of working for each project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-26"&gt;
  &lt;/a&gt;
  Tip #26
&lt;/h3&gt;

&lt;p&gt;Observe and address needs for greater emphasis on career development.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-27"&gt;
  &lt;/a&gt;
  Tip #27
&lt;/h3&gt;

&lt;p&gt;Observe and address needs for greater ways to motivate developers besides completing a project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-28"&gt;
  &lt;/a&gt;
  Tip #28
&lt;/h3&gt;

&lt;p&gt;Observe and address needs for greater ways to have fun as a team.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#im-clearly-becoming-a-tech-leader-i-also-should-"&gt;
  &lt;/a&gt;
  I'm clearly becoming a tech leader, I also should ____?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#tip-29"&gt;
  &lt;/a&gt;
  Tip #29
&lt;/h3&gt;

&lt;p&gt;Make &lt;a href="https://dev.to/michaelmangial1/3-not-so-obvious-ways-to-stand-out-on-a-product-team-as-a-developer-2d20"&gt;providing input during product meetings&lt;/a&gt; as high a priority in your role as writing code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-30"&gt;
  &lt;/a&gt;
  Tip #30
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.michaelmang.dev/blog/the-developers-content-model"&gt;Share your learnings with a broader audience using a developer's content model&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-31"&gt;
  &lt;/a&gt;
  Tip #31
&lt;/h3&gt;

&lt;p&gt;Focus on a niche interest/skill in your realm of development and get really good at it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-32"&gt;
  &lt;/a&gt;
  Tip #32
&lt;/h3&gt;

&lt;p&gt;Work on side projects that sharpen your niche skill.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-33"&gt;
  &lt;/a&gt;
  Tip #33
&lt;/h3&gt;

&lt;p&gt;Stay up to date with latest trends in the industry (via Twitter, &lt;a href="https://click.convertkit-mail4.com/5qu696q3o8h7h4xwpkf6/3ohphduqzrmk5lhr/aHR0cHM6Ly9ieXRlcy5kZXY_eD00Nzg2Njg5MjM="&gt;Bytes&lt;/a&gt;, Dev.to, newsletters, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-34"&gt;
  &lt;/a&gt;
  Tip #34
&lt;/h3&gt;

&lt;p&gt;Outwork everyone.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>career</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Making a rain animation with WebGL shaders in Three.js.</title>
      <author>NordicBeaver</author>
      <pubDate>Tue, 14 Dec 2021 13:46:39 +0000</pubDate>
      <link>https://dev.to/nordicbeaver/making-rain-animation-with-webgl-shaders-in-threejs-4ic5</link>
      <guid>https://dev.to/nordicbeaver/making-rain-animation-with-webgl-shaders-in-threejs-4ic5</guid>
      <description>&lt;p&gt;I made a small shader that resembles rain on a window. You can try it &lt;a href="https://rain-shader.nordicbeaver.io/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Check out the full code here:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/NordicBeaver"&gt;
        NordicBeaver
      &lt;/a&gt; / &lt;a href="https://github.com/NordicBeaver/rain-shader"&gt;
        rain-shader
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;The most interesting part is the fragment shader, where the magic happens. I tried to add some comments, so it's easier to read.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight glsl"&gt;&lt;code&gt;&lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="kt"&gt;vec2&lt;/span&gt; &lt;span class="n"&gt;uvInterpolator&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;uniform&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;u_time&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;uniform&lt;/span&gt; &lt;span class="kt"&gt;sampler2D&lt;/span&gt; &lt;span class="n"&gt;u_texture&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Generate a random float from a single input and seed.&lt;/span&gt;
&lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="nf"&gt;Random11&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;inputValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fract&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inputValue&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;345&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;456&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Generate a random float from a 2d input and seed.&lt;/span&gt;
&lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="nf"&gt;Random21&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;vec2&lt;/span&gt; &lt;span class="n"&gt;inputValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fract&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inputValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;vec2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;456&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;43&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Generate drops as distortions, that can be applied to UV coordinates&lt;/span&gt;
&lt;span class="kt"&gt;vec2&lt;/span&gt; &lt;span class="nf"&gt;Drops&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;vec2&lt;/span&gt; &lt;span class="n"&gt;uv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Randmply move everything&lt;/span&gt;
  &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;shiftY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Random11&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;uv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;shiftY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Split UV spac into cells. Each cell will contain a drop.&lt;/span&gt;
  &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;cellsResolution&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;uv&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="n"&gt;cellsResolution&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Move each row randomly.&lt;/span&gt;
  &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;rowIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;shiftX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Random11&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rowIndex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;uv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;shiftX&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kt"&gt;vec2&lt;/span&gt; &lt;span class="n"&gt;cellIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kt"&gt;vec2&lt;/span&gt; &lt;span class="n"&gt;cellUv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fract&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kt"&gt;vec2&lt;/span&gt; &lt;span class="n"&gt;cellCenter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;vec2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;distanceFromCenter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cellUv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cellCenter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// We don't want to show every drop. So randomly remove some of them.&lt;/span&gt;
  &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;isDropShown&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Random21&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cellIndex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;seed&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;14244&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;324&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

  &lt;span class="c1"&gt;// Decrease each drop intensity with time. Then make it appear again.&lt;/span&gt;
  &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;dropIntensity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;fract&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u_time&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Random21&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cellIndex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;seed&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;32132&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;432&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;dropIntensity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dropIntensity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dropIntensity&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dropIntensity&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dropIntensity&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dropIntensity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;dropIntensity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;clamp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dropIntensity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// We only need results from inside a specefec radius of a drop.&lt;/span&gt;
  &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;isInsideDrop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;distanceFromCenter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kt"&gt;vec2&lt;/span&gt; &lt;span class="n"&gt;vecToCenter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cellCenter&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;cellUv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// Drop value is a vector to the center that increases with distance form it.&lt;/span&gt;
  &lt;span class="kt"&gt;vec2&lt;/span&gt; &lt;span class="n"&gt;dropValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vecToCenter&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;distanceFromCenter&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;distanceFromCenter&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kt"&gt;vec2&lt;/span&gt; &lt;span class="n"&gt;drop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dropValue&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;isInsideDrop&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;isDropShown&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dropIntensity&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;vec2&lt;/span&gt; &lt;span class="n"&gt;uv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;uvInterpolator&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Run the Drop function 10 times to create seemingly random pattern.&lt;/span&gt;
  &lt;span class="kt"&gt;vec2&lt;/span&gt; &lt;span class="n"&gt;drops&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;vec2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;drops&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;Drops&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;42424&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;43&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;12313&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;432&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Distort UV.&lt;/span&gt;
  &lt;span class="n"&gt;uv&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;drops&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Sample the texture after distorting the UV space.&lt;/span&gt;
  &lt;span class="kt"&gt;vec4&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;texture2D&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u_texture&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nb"&gt;gl_FragColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Basically, all I do is generate drops at random positions. For every pixel around the drop I then calculate how much I need to distort the background. And then I apply the distortion to the UV space and sample the texture with the updated coordinates.&lt;/p&gt;

&lt;p&gt;It's way easier to explain visually, so I made a video of the whole process of making this.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Rl3clbrsI40"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>threejs</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Journey of a dyslexic programmer ? What is it like ?</title>
      <author>aravindasiva</author>
      <pubDate>Tue, 14 Dec 2021 13:13:26 +0000</pubDate>
      <link>https://dev.to/aravindasiva/journey-of-a-dyslexic-programmer-what-is-it-like--2bgf</link>
      <guid>https://dev.to/aravindasiva/journey-of-a-dyslexic-programmer-what-is-it-like--2bgf</guid>
      <description>&lt;p&gt;Ever since I was a little kid I always knew that there was an issue with my reading, writing and spelling, but never knew what it was. I always thought I was one of those different kids.&lt;/p&gt;

&lt;p&gt;As I grew up in India, schools didn't really have anything special for dsylexic kids. Well, it wasn't really the school's mistake since most of the folks in the community had no idea what is Learning Disorder or any type of disorder at all.&lt;/p&gt;

&lt;p&gt;I was called names "trouble maker", "he is trouble", "Lazy", etc., (names are translated to English XD). As a kid it didn't bother me, rather I thought it was cool for some reason.&lt;/p&gt;

&lt;p&gt;During my primary and High school years, there was at least 2 Parent-Teacher meetings where your parent and your teacher discuss about you and your Half-yearly performance with a report card.&lt;/p&gt;

&lt;p&gt;Every year at least one of the teacher says the same phrase to my parents:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;"I know he is very smart. But seems like he doesn't want to write and show that on paper."&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r9lvRy2X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xi9v0skdey9iqdttdxqe.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r9lvRy2X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xi9v0skdey9iqdttdxqe.jpg" alt="School to dyslexic kids" width="500" height="562"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By time hearing this phrase from teachers started to annoy me as I wasn't doing that on purpose. Started to wonder and ask myself &lt;strong&gt;&lt;em&gt;"Why me?"&lt;/em&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;This phrase started when I was in pre-school where I didn't want to recite a poem or a Rhyme (which was subject called "Recitation"), I was standing in front of the whole class and din't spill a word out of my mouth. So, the teacher called my mum and said "He did not utter a single word from his mouth, regardless I am going to pass him because I know he knows the poem/Rhyme". I have no recollection of this incident whatsoever since I was 5 years old then. But Hey, Thanks to my mum.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YLX6BxvD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ugkwm1e3ut3275s551u0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YLX6BxvD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ugkwm1e3ut3275s551u0.png" alt="Time to read out loud" width="500" height="484"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are from an Indian middle class family, You already know that excelling in academics is important for your family, family friends, relatives, your father's friends, your dog, your dog's friends, your dead fish, you get the point XD. &lt;/p&gt;

&lt;p&gt;So, as a kid, you are under constant pressure to get good marks. So you get into a good school, good university, good job, good life, etc., the race never ends.  &lt;/p&gt;

&lt;p&gt;I struggled with letters, numbers, left and right. I still find myself using fingers to count things, confusing left and right. The normal education system was not quite enough for me. I started to use my own ways to cope with academics and I found myself doing a little bit better in exams even though it did not reflect on my report card, I found it easier than before since I adapted my own strategies to learn and write. &lt;/p&gt;

&lt;p&gt;Since everything is an image in my head I was drawn towards solving problems, puzzles and arts and patterns. On the other hand, I cannot have an image for numbers or words in my head which didn't make sense. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For example: You say &lt;strong&gt;"John Doe has an apple in his hand"&lt;/strong&gt;,&lt;br&gt;
here I can picture John doe, &lt;em&gt;if I already knew him&lt;/em&gt;, I can picture an apple, and I can picture a human hand and when you put everything as a picture you have a dashing John doe with a white shirt and blue jean with a red apple in his a hand. Can you see it? &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I used to play loads of games everyday in my teenage, and you know how parents fell about their son playing violent games filled with killing, more killing, sex. I wouldn't be surprised if they thought I am spawn of some underworld demon. So my parents were against extensive gaming. So, I went out 9 am in the morning to play games in game center (remember those places, How time flies) and come back home 9 pm (I had my meals in middle, stop judging me now XD). And yes, I lied about where I am going.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Now you know mum and dad, if you are reading this. Sorry 🤔?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Most of the games got this classic chasing scene where you chase the bad guy with a NPC or getting chased by the bad guy, and the NPC sitting with you in car or a horse starts giving you directions like 'take right now', 'take hard left'. ahhhhh...and I am so confident I take the wrong right and yeah, I had to replay the whole freaking mission because I took a right instead of left, I have tried to kill the NPC character, but lucky him, he can't take damage.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mUSoREYx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jxff8blw85gee5b9ftfv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mUSoREYx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jxff8blw85gee5b9ftfv.png" alt="you said left, Okay right" width="743" height="801"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"I am so good at eating, So I must be a good chef"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yeah, That's my thought process and decided to make games with game engines. Well in my defense I made some pretty decent games. &lt;/p&gt;

&lt;p&gt;Also, learned a valuable lesson to stick with just what I am good at. &lt;/p&gt;

&lt;p&gt;So, I decided to join computer science and explore the world of computers and internet. I had a huge rush when I created my first "Hello world" in my university Computer science lab. I just wanted to know more about how does computer does these things. I had so many questions. I must thank those handful of teachers who believed in me even though I was lot of trouble 😇. &lt;/p&gt;

&lt;p&gt;At the same time, it was difficult for me to type code with basic text editor like notepad++ or something similar where I didn't have syntax highlighting, auto complete, peek definitions, type checking and all those goodies modern IDE provides today. Or at least I didn't know. &lt;/p&gt;

&lt;p&gt;Even with modern IDE available today with all the plugin, I was able to develop something good, But I found myself easily get lost in it. So I started  creating a mind map for my projects (mind map in my actual mind) So, every time I see a block of code or a function I can visualize which box it belongs to and how it is connected with other boxes. This greatly helped me with keeping track and remembering them. I also stared writing notes and drawings of what's in my head So, I can go back and look at it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---dr9qqOX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.gifer.com/3cGk.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---dr9qqOX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.gifer.com/3cGk.gif" alt="MindMap?" width="500" height="215"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Today I do Web development, API, and even 3d model integration. How time flies!!. I have decided to try and make mistakes. adapt from my mistakes and make new ones. Dyslexia doesn't mean you cannot code. I think dyslexia is rather helpful to visualize your project which makes it better. Coding just becomes a design in your head, In fact Dyslexia was helping it.&lt;/p&gt;

&lt;p&gt;Nowadays Modern code editors lets you bring your own font, Code editor theme matters too, Play with it until you find the right one for you. &lt;/p&gt;

&lt;p&gt;Use plugins to visualize your indentation, I use &lt;code&gt;indent-rainbow&lt;/code&gt; in VSCode&lt;/p&gt;

&lt;p&gt;Getting lost with &lt;strong&gt;brackets&lt;/strong&gt; ? Use &lt;code&gt;Bracket pair colorizer&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;With or without dyslexia, or whatever level you are on, Take a step and make mistakes. Dyslexic? Well, it will help you a lot. &lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
If you have made it to the end of the post I took too long to write, Congratz 🎉🎉 &lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
Never in my life thought I would write such a long post. Kindly avoid my mistakes in this post 😅 Can't read such a big post again 😅 But, Hey! Well done to you 🥳&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;This is my first long blog post and thank you for your time reading it ✌🏼&lt;br&gt;
Your comments are very welcome here. &lt;/p&gt;

</description>
      <category>career</category>
      <category>dyslexia</category>
      <category>productivity</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Best Coding Platforms to learn and practice Code! </title>
      <author>Avinash Kumar</author>
      <pubDate>Tue, 14 Dec 2021 13:12:54 +0000</pubDate>
      <link>https://dev.to/darkxenium/best-coding-platforms-to-learn-and-practice-code-17h1</link>
      <guid>https://dev.to/darkxenium/best-coding-platforms-to-learn-and-practice-code-17h1</guid>
      <description>&lt;p&gt;A great way to improve your skills when learning to code is by solving coding challenges,but there are many platforms and thus it becomes hard to choose where to invest time and but worry not here I am to help you with choosing the platform which is right for you. When I started out I was really confused but as time flew &lt;em&gt;sad noises&lt;/em&gt;, as you know coding takes a huge chuck of time in your day and I discovered many great platforms. I'll list my top favourite ones down below :-&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-hackerrank"&gt;
  &lt;/a&gt;
  1. HackerRank
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jWkUiPOT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hr6lmr7462qycpqt2zsv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jWkUiPOT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hr6lmr7462qycpqt2zsv.png" alt="hackerrank logo" width="297" height="170"&gt;&lt;/a&gt;&lt;br&gt;
It is a great platform where you can choose the language you want to improve upon. The Difficulty curve is greatly maintained. Also as you progress you get badges in the form of stars from 1 star covered in bronze to shining gold when you reach 5 star, which really motivates to grow and get better.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-codechef"&gt;
  &lt;/a&gt;
  2. CodeChef
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kIm9Gdo6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2219qnatkgoljj0mwxeu.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kIm9Gdo6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2219qnatkgoljj0mwxeu.jpg" alt="CodeChef logo" width="362" height="139"&gt;&lt;/a&gt;&lt;br&gt;
Well once you complete your basics you can work your way upto Competetive Programming(CP) and here at codechef you get Long challenges which is really unique compared to other CP websites which is really beneficial to a beginner who can get to know about the question while practicing and learning.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-codeforces"&gt;
  &lt;/a&gt;
  3. CodeForces
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fiITPnTX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llld1h2ubn4aryp36rpi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fiITPnTX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llld1h2ubn4aryp36rpi.jpg" alt="CodeForces logo" width="347" height="145"&gt;&lt;/a&gt;&lt;br&gt;
 You can further improve upon CP on codeforces as the questions here are really tough and you need to apply the various DS and Algorithms to solve these questions.You can go from a Noobie to a full fledged grandmaster with many good prizes if you manage to be in the top 10.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h4&gt;

&lt;p&gt;I've also started to use LeetCode. It has really great questions even though I haven't made much progress in it. None the less all the best to the future Coders out there, I hope these platforms help you unlock your potential and reach great heights.&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to create a smart contract to whitelist users</title>
      <author>Emanuel Ferreira</author>
      <pubDate>Tue, 14 Dec 2021 13:10:30 +0000</pubDate>
      <link>https://dev.to/emanuelferreira/how-to-create-a-smart-contract-to-whitelist-users-57ki</link>
      <guid>https://dev.to/emanuelferreira/how-to-create-a-smart-contract-to-whitelist-users-57ki</guid>
      <description>&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;p&gt;In this article, we going to create a smart contract to whitelist users, that it will be possible to add an address, check a user, and verify each function if the user has been whitelisted.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Code Editor (Remix, VSCode)&lt;/li&gt;
&lt;li&gt;Basic Solidity Knowledge&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#remix-editor"&gt;
  &lt;/a&gt;
  Remix Editor
&lt;/h2&gt;

&lt;p&gt;To create the smart contract we are going to use the &lt;a href="https://remix.ethereum.org/"&gt;Remix editor&lt;/a&gt; that will help us to create our smart contract.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ownable-contract"&gt;
  &lt;/a&gt;
  Ownable contract
&lt;/h2&gt;

&lt;p&gt;First, we'll start with the basic structure of a contract, we are going to create a contract Ownable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-the-contract-owner"&gt;
  &lt;/a&gt;
  Setting the contract owner
&lt;/h3&gt;

&lt;p&gt;To whitelist the users we need to have a contract owner that will have permission to add users to the whitelist&lt;/p&gt;

&lt;p&gt;Now create a variable called &lt;code&gt;owner&lt;/code&gt; and add the deployer address as the owner of the contract&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// SPDX-License-Identifier: GPL-3.0&lt;/span&gt;
&lt;span class="nx"&gt;pragma&lt;/span&gt; &lt;span class="nx"&gt;solidity&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.7&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mf"&gt;0.9&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;contract&lt;/span&gt; &lt;span class="nx"&gt;Whitelist&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="nx"&gt;address&lt;/span&gt; &lt;span class="nx"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// variable that will contain the address of the contract deployer&lt;/span&gt;

    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;owner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// setting the owner the contract deployer&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-the-modifier"&gt;
  &lt;/a&gt;
  Create the Modifier
&lt;/h3&gt;

&lt;p&gt;The modifier will help us when we need to restrict a function to only the owner of the contract to use.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;modifier&lt;/span&gt; &lt;span class="nx"&gt;onlyOwner&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sender&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Ownable: caller is not the owner&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now when you try to call a function that contains the onlyOwner modifier just will work if you are the contract owner&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-list-of-addresses"&gt;
  &lt;/a&gt;
  Create a list of addresses
&lt;/h2&gt;

&lt;p&gt;To store our addresses, we need to create a mapping that will receive the address of the user and return if he is whitelisted or not.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;whitelistedAddresses&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can store the addresses in the whitelistedAddresses mapping, Let's do it in the next steps.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-an-address-to-the-whitelist"&gt;
  &lt;/a&gt;
  Adding an address to the whitelist
&lt;/h3&gt;

&lt;p&gt;Now we'll manipulate the whitelistedAddresses mapping to say if the address is whitelisted or not, so when we call the addUser function we'll change the whitelisted status from the address to true.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;addUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt; &lt;span class="nx"&gt;_addressToWhitelist&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;onlyOwner&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;whitelistedAddresses&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;_addressToWhitelist&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see that we have the onlyOwner modifier in our function, so just the contract owner can call this function.&lt;/p&gt;

&lt;p&gt;We have the parameter &lt;code&gt;_addressToWhitelist&lt;/code&gt; that is the address of a user that we want to whitelist.&lt;/p&gt;

&lt;p&gt;So in this line, we are changing the status of the address to true.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;true&lt;/code&gt; = whitelisted&lt;br&gt;
&lt;code&gt;false&lt;/code&gt; = not whitelisted&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;whitelistedAddresses&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;_addressToWhitelist&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#verifying-if-the-user-has-been-whitelisted"&gt;
  &lt;/a&gt;
  Verifying if the user has been whitelisted
&lt;/h3&gt;

&lt;p&gt;Now create a function that will say to you if the user has been whitelisted (you don't need a function, you can access the list in another function or create a modifier to verify).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;verifyUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt; &lt;span class="nx"&gt;_whitelistedAddress&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;view&lt;/span&gt; &lt;span class="nx"&gt;returns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;bool&lt;/span&gt; &lt;span class="nx"&gt;userIsWhitelisted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;whitelistedAddresses&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;_whitelistedAddress&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;userIsWhitelisted&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So when you call this function it will return &lt;code&gt;false&lt;/code&gt; if the address has not whitelisted and &lt;code&gt;true&lt;/code&gt; if you added the user to the whitelist&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-a-modifier-to-whitelisted-users"&gt;
  &lt;/a&gt;
  Creating a modifier to whitelisted users
&lt;/h3&gt;

&lt;p&gt;If you want to allow only the whitelisted addresses to call a function you can create a modifier.&lt;/p&gt;

&lt;p&gt;So Let's create a modifier and a function to test example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;modifier&lt;/span&gt; &lt;span class="nx"&gt;isWhitelisted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt; &lt;span class="nx"&gt;_address&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;whitelistedAddresses&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;_address&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;You need to be whitelisted&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;exampleFunction&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;view&lt;/span&gt; &lt;span class="nx"&gt;isWhitelisted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;returns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then our modifier will verify in the whitelisted addresses if the user (&lt;code&gt;msg.sender&lt;/code&gt;) is whitelisted and still following with the function or break returning an error.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Now your contract to add users to the whitelist is done, you can adapt it to our projects like NFT collections verifying if the address is whitelisted to mint the NFTs.&lt;/p&gt;

&lt;p&gt;Repository with the Project (Final code): &lt;a href="https://github.com/EmanuelCampos/whitelist_contract"&gt;https://github.com/EmanuelCampos/whitelist_contract&lt;/a&gt; &lt;br&gt;
Stars are appreciated &amp;lt;3&lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href="https://twitter.com/manelferreira_"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>solidity</category>
      <category>blockchain</category>
      <category>web3</category>
      <category>smartcontract</category>
    </item>
    <item>
      <title>Guide to make your first react package</title>
      <author>Rakesh Potnuru</author>
      <pubDate>Tue, 14 Dec 2021 13:05:53 +0000</pubDate>
      <link>https://dev.to/itsrakesh/guide-to-make-your-first-react-package-2gd0</link>
      <guid>https://dev.to/itsrakesh/guide-to-make-your-first-react-package-2gd0</guid>
      <description>&lt;p&gt;If you ever made an application with react, then you must have used lots of react packages. Ever thought about making your own package? or Have an idea but don't know how? Then this blog is for you. In this blog, I will explain how to make your own react package and submit it to the npm registry.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;React&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/signup"&gt;npm&lt;/a&gt; account&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#lets-get-started"&gt;
  &lt;/a&gt;
  Let's get started
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#step1-initialize-the-project"&gt;
  &lt;/a&gt;
  Step-1 - Initialize the project
&lt;/h3&gt;

&lt;p&gt;⚠️ - &lt;em&gt;Don't create project with &lt;code&gt;create-react-app&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a project -&amp;gt; &lt;code&gt;npm init&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Install &lt;code&gt;react&lt;/code&gt; and &lt;code&gt;react-dom&lt;/code&gt; as &lt;strong&gt;devDependencies&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i &lt;span class="nt"&gt;--save-dev&lt;/span&gt; react react-dom
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Now we have to make sure the user have these installed, so we 
can add them as peer dependencies in &lt;code&gt;package.json&lt;/code&gt;.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"peerDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"react"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^17.0.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"react-dom"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^17.0.2"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create a &lt;code&gt;src&lt;/code&gt; folder and add an &lt;code&gt;index.js&lt;/code&gt; file. Inside that &lt;code&gt;src&lt;/code&gt; folder create &lt;code&gt;components&lt;/code&gt; folder.&lt;/li&gt;
&lt;li&gt;Our project folder structure so far-
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;react-pack/
├── src/
│   ├── components/
│   └── index.js
└── package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step2-setup-project"&gt;
  &lt;/a&gt;
  Step-2 - Setup project
&lt;/h3&gt;

&lt;p&gt;Now we need to see our components while we are building it, so how we can do it as we are not creating a regular react app? For this, we can use a tool called &lt;strong&gt;&lt;a href="https://storybook.js.org"&gt;Storybook&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vinxSzu5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxep8n6gowcn0f8z6bk8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vinxSzu5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxep8n6gowcn0f8z6bk8.png" alt="storybook" width="880" height="545"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To install the storybook, simply run this command -&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;⚠️ - &lt;em&gt;Make sure you have storybook CLI installed in order to run this command. To install storybook CLI, run&lt;/em&gt; &lt;code&gt;npm i @storybook/cli -g&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx sb init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Now you can see in the &lt;code&gt;src/stories&lt;/code&gt; folder it created some example 
stories. You can delete them.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;react-pack/
├── src/
│   ├── components/
│   ├── stories/
│   └── index.js
└── package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step3-start-creating-stories"&gt;
  &lt;/a&gt;
  Step-3 - Start creating stories
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Create a component in &lt;code&gt;src/components&lt;/code&gt; folder. For example, &lt;code&gt;Button.jsx&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Now create a story in &lt;code&gt;src/stories&lt;/code&gt; and name it as &lt;code&gt;&amp;lt;Component&amp;gt;.stories.js&lt;/code&gt;. For example, &lt;code&gt;Button.stories.js&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Import your component into &lt;code&gt;&amp;lt;Component&amp;gt;.stories.js&lt;/code&gt;.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;react-pack/
├── src/
│   ├── components/
│   │   └── Button.jsx
│   ├── stories/
│   │   └── Button.stories.jsx
│   └── index.js
└── package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;In order to see our component we have add our component to 
stories. To do that, in your &lt;code&gt;&amp;lt;Component&amp;gt;.stories.js&lt;/code&gt;-
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;storiesOf&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@storybook/react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../components/Button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// create story&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stories&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;storiesOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// add component to stories&lt;/span&gt;
&lt;span class="nx"&gt;stories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So this is the syntax to create a story.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now start your storybook server-
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run storybook
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Go to &lt;a href="http://localhost:6006"&gt;localhost:6006&lt;/a&gt;, you can see your rendered component there.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uHQ6ClvX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ptfj5lkbp1etn1hdt6wr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uHQ6ClvX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ptfj5lkbp1etn1hdt6wr.png" alt="story example" width="880" height="547"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Like this, you can create a story for every component and see a preview with the storybook.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#step-4-prepare-to-build-project"&gt;
  &lt;/a&gt;
  Step 4 - Prepare to build project
&lt;/h3&gt;

&lt;p&gt;Normally we create a build for our project after developing with &lt;code&gt;npm run build&lt;/code&gt;. But now we can't do that. So to build the project we have to use another tool called &lt;strong&gt;&lt;a href="https://rollupjs.org"&gt;rollup.js&lt;/a&gt;&lt;/strong&gt; along with some plugins.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install rollup as a dev dependency
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;rollup &lt;span class="nt"&gt;--save-dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;We also need some plugins for rollup and to remove react modules in our package(Because users will already have them installed).
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install rollup @rollup/plugin-node-resolve rollup-plugin-babel rollup-plugin-peer-deps-external rollup-plugin-postcss rollup-plugin-terser @babel/preset-react --save-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create a file called &lt;code&gt;rollup.config.js&lt;/code&gt; at the root level of the project.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;react-pack/
├── src/
│   ├── components/
│   │   └── Button.jsx
│   ├── stories/
│   │   └── Button.stories.jsx
│   └── index.js
├── package.json
└── rollup.config.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;And you can add this configuration-
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight conf"&gt;&lt;code&gt;&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;babel&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="s2"&gt;"rollup-plugin-babel"&lt;/span&gt;;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;resolve&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="s2"&gt;"@rollup/plugin-node-resolve"&lt;/span&gt;;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;external&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="s2"&gt;"rollup-plugin-peer-deps-external"&lt;/span&gt;;
&lt;span class="n"&gt;import&lt;/span&gt; { &lt;span class="n"&gt;terser&lt;/span&gt; } &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="s2"&gt;"rollup-plugin-terser"&lt;/span&gt;;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;postcss&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="s2"&gt;"rollup-plugin-postcss"&lt;/span&gt;;

&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt; [
  {
    &lt;span class="n"&gt;input&lt;/span&gt;: &lt;span class="s2"&gt;"./src/index.js"&lt;/span&gt;,
    &lt;span class="n"&gt;output&lt;/span&gt;: [
      {
        &lt;span class="n"&gt;file&lt;/span&gt;: &lt;span class="s2"&gt;"dist/index.js"&lt;/span&gt;,
        &lt;span class="n"&gt;format&lt;/span&gt;: &lt;span class="s2"&gt;"cjs"&lt;/span&gt;,
      },
      {
        &lt;span class="n"&gt;file&lt;/span&gt;: &lt;span class="s2"&gt;"dist/index.es.js"&lt;/span&gt;,
        &lt;span class="n"&gt;format&lt;/span&gt;: &lt;span class="s2"&gt;"es"&lt;/span&gt;,
        &lt;span class="n"&gt;exports&lt;/span&gt;: &lt;span class="s2"&gt;"named"&lt;/span&gt;,
      },
    ],
    &lt;span class="n"&gt;plugins&lt;/span&gt;: [
      &lt;span class="n"&gt;postcss&lt;/span&gt;({
        &lt;span class="n"&gt;plugins&lt;/span&gt;: [],
        &lt;span class="n"&gt;minimize&lt;/span&gt;: &lt;span class="n"&gt;true&lt;/span&gt;,
      }),
      &lt;span class="n"&gt;babel&lt;/span&gt;({
        &lt;span class="n"&gt;exclude&lt;/span&gt;: &lt;span class="s2"&gt;"node_modules/**"&lt;/span&gt;,
        &lt;span class="n"&gt;presets&lt;/span&gt;: [&lt;span class="s2"&gt;"@babel/preset-react"&lt;/span&gt;],
      }),
      &lt;span class="n"&gt;external&lt;/span&gt;(),
      &lt;span class="n"&gt;resolve&lt;/span&gt;(),
      &lt;span class="n"&gt;terser&lt;/span&gt;(),
    ],
  },
];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;input&lt;/code&gt; - starting pointing of your project&lt;br&gt;
 &lt;code&gt;output&lt;/code&gt; - where your want to put all the build files&lt;br&gt;
 &lt;code&gt;plugins&lt;/code&gt; - plugins to use&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now create a script to run rollup
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"build"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"rollup -c"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;That's it, now you can see a folder called &lt;strong&gt;dist&lt;/strong&gt; which contains all our code bundled together.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;react-pack/
├── dist/
├── src/
│   ├── components/
│   │   └── Button.jsx
│   ├── stories/
│   │   └── Button.stories.jsx
│   └── index.js
├── package.json
└── rollup.config.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-5-publish-to-npm"&gt;
  &lt;/a&gt;
  Step 5 - Publish to npm
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Create an account on [npm] if you don't have it already.&lt;/li&gt;
&lt;li&gt;Connect to npm with &lt;code&gt;npm login&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Choose a unique name for your package. (When publishing the 
name of the package will be the same as the name of your project which 
is in the &lt;code&gt;package.json&lt;/code&gt; file)&lt;/li&gt;
&lt;li&gt;You need to make two changes to your &lt;code&gt;package.json&lt;/code&gt; file

&lt;ul&gt;
&lt;li&gt;Change &lt;strong&gt;main&lt;/strong&gt; from "index.js" to "dist/index.js"&lt;/li&gt;
&lt;li&gt;Add &lt;strong&gt;module&lt;/strong&gt; field and set it to "dist/index.es.js"
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"main"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"dist/index.js"&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"module"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"dist/index.es.js"&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;After completing all things, run-
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm publish
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;That's it, you can check your package on the npm registry&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Congrats on publishing your first react package 🎉.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OuMcMR5r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8dzx4i7sy8qsi6i52qnc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OuMcMR5r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8dzx4i7sy8qsi6i52qnc.gif" alt="congrats gif" width="320" height="300"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Share your package in the comments below. I will try it 👀.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tool-of-the-week"&gt;
  &lt;/a&gt;
  ⚒️Tool of the week⚒️
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/thedaviddias/Front-End-Checklist"&gt;Front-End-Checklist&lt;/a&gt;&lt;br&gt;
Are you a front-end developer? Then go through this checklist before deploying your application.&lt;/p&gt;




&lt;p&gt;Hope this helps you!&lt;br&gt;
Save for reference.&lt;br&gt;
Follow for more deliciousness 😀.&lt;br&gt;
You can connect with me on &lt;a href="https://twitter.com/rakesh_at_tweet"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/rakesh-potnuru-067a8b1b1"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>react</category>
      <category>npm</category>
      <category>beginners</category>
    </item>
    <item>
      <title>undefined</title>
      <author>Posandu </author>
      <pubDate>Tue, 14 Dec 2021 13:03:30 +0000</pubDate>
      <link>https://dev.to/posandu/test-post-3ka</link>
      <guid>https://dev.to/posandu/test-post-3ka</guid>
      <description>&lt;p&gt;testing api&lt;/p&gt;

</description>
      <category>testingap</category>
    </item>
    <item>
      <title>Write, test and execute automation scripts from browser's developer tools</title>
      <author>Gajanan Patil</author>
      <pubDate>Tue, 14 Dec 2021 13:00:53 +0000</pubDate>
      <link>https://dev.to/gajananpp/write-test-and-execute-automation-scripts-from-browsers-developer-tools-epo</link>
      <guid>https://dev.to/gajananpp/write-test-and-execute-automation-scripts-from-browsers-developer-tools-epo</guid>
      <description>&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/puppeteer-ide/ilehdekjacappgghkgmmlbhgbnlkgoid"&gt;Puppeteer IDE extension&lt;/a&gt; is a standalone extension which allows you to write and execute puppeteer scripts from developer tools. It is &lt;strong&gt;not&lt;/strong&gt; required to start browser with remote debugging or have nodejs or any other service installed for this extension to work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;This extension is published on chrome web store. &lt;a href="https://chrome.google.com/webstore/detail/puppeteer-ide/ilehdekjacappgghkgmmlbhgbnlkgoid"&gt;Click here&lt;/a&gt; to view extension on chrome web store.&lt;/p&gt;

&lt;p&gt;On adding extension to browser, it will add &lt;code&gt;Puppeteer IDE&lt;/code&gt; tab in developer tools. On switching to this tab, it will by default have one test script which you can execute right away.&lt;/p&gt;

&lt;p&gt;This extension can be used with other chromium based browsers like edge, brave etc.&lt;/p&gt;

&lt;p&gt;Example GIF :-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GExm7sy6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5hvznn4mife7qzmtiv5.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GExm7sy6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5hvznn4mife7qzmtiv5.gif" alt="Example Extension GIF" width="640" height="362"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;

&lt;p&gt;You can access puppeteer's &lt;a href="https://pptr.dev/#?product=Puppeteer&amp;amp;version=v13.0.0&amp;amp;show=api-class-page"&gt;page&lt;/a&gt; instance variable directly for the tab in which developer tools is opened. On clicking &lt;code&gt;Execute&lt;/code&gt; button, the script will be executed on the inspected tab. &lt;/p&gt;

&lt;p&gt;The script will be auto saved as you are editing it.&lt;/p&gt;

&lt;p&gt;The editor will take the theme of developer tools. You can change developer tool's theme by &lt;a href="https://developer.chrome.com/docs/devtools/customize/dark-theme/"&gt;following this guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Light theme screenshot :-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R9wHeF3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/77bp4ref2jrac9q85e2t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R9wHeF3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/77bp4ref2jrac9q85e2t.png" alt="Light theme screenshot" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dark theme screenshot :-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3gFc6Y6k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h9cbbk091at185sdmjvd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3gFc6Y6k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h9cbbk091at185sdmjvd.png" alt="Dark theme screenshot" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#privacy"&gt;
  &lt;/a&gt;
  Privacy
&lt;/h2&gt;

&lt;p&gt;This extension is standalone, it won't make any external API calls in the background. You can inspect the network of extension/page and source code.&lt;/p&gt;

&lt;p&gt;For more information, checkout this project's &lt;a href="https://github.com/gajananpp/puppeteer-ide-extension"&gt;&lt;strong&gt;Github Repo&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/gajananpp"&gt;
        gajananpp
      &lt;/a&gt; / &lt;a href="https://github.com/gajananpp/puppeteer-ide-extension"&gt;
        puppeteer-ide-extension
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Develop, test and execute puppeteer scripts from browser's developer tools.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Puppeteer IDE Extension&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/gajananpp/puppeteer-ide-extension/actions/workflows/lint.yml/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3-PIp5VR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/gajananpp/puppeteer-ide-extension/actions/workflows/lint.yml/badge.svg" alt="lint"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/gajananpp/puppeteer-ide-extension/actions/workflows/build.yml/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rW4-pTsh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/gajananpp/puppeteer-ide-extension/actions/workflows/build.yml/badge.svg" alt="build"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Develop, test and execute puppeteer scripts from browser's developer tools.&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;This extension is published on chrome web store. &lt;a href="https://chrome.google.com/webstore/detail/puppeteer-ide/ilehdekjacappgghkgmmlbhgbnlkgoid" rel="nofollow"&gt;Click here&lt;/a&gt; to view extension on chrome web store.&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;This extension will add an extra tab named "Puppeteer IDE" in browser's developer tools from where you can write and execute puppeteer scripts.&lt;/p&gt;
&lt;p&gt;You can access &lt;a href="https://pptr.dev/#?product=Puppeteer&amp;amp;version=v13.0.0&amp;amp;show=api-class-page" rel="nofollow"&gt;page&lt;/a&gt; instance variable directly for the tab in which developer tools is opened.&lt;/p&gt;
&lt;p&gt;On clicking &lt;code&gt;Execute&lt;/code&gt; button, the script will be executed on the inspected tab.&lt;/p&gt;
&lt;p&gt;The script will be auto saved as you are editing it.&lt;/p&gt;
&lt;p&gt;The editor will take the theme of developer tools. &lt;a href="https://developer.chrome.com/docs/devtools/customize/dark-theme/" rel="nofollow"&gt;Here is a guide&lt;/a&gt; which shows how to customize developer tool's theme.&lt;/p&gt;
&lt;p&gt;Sample GIF :-&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/gajananpp/puppeteer-ide-extensionassets/pptr-ide-extension.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n9RnC3-o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/gajananpp/puppeteer-ide-extensionassets/pptr-ide-extension.gif" alt="Sample GIF"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Screenshots&lt;/h2&gt;
&lt;p&gt;Dark theme :-
&lt;a rel="noopener noreferrer" href="https://github.com/gajananpp/puppeteer-ide-extensionassets/screenshots/screen-1.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RvzF_ii9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/gajananpp/puppeteer-ide-extensionassets/screenshots/screen-1.png" alt="Dark theme"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Light theme :-
&lt;a rel="noopener noreferrer" href="https://github.com/gajananpp/puppeteer-ide-extensionassets/screenshots/screen-2.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F7JMfj5y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/gajananpp/puppeteer-ide-extensionassets/screenshots/screen-2.png" alt="Light theme"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Build From Source&lt;/h2&gt;
&lt;p&gt;To build extension from source :-&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;git clone https://github.com/gajananpp/puppeteer-ide-extension

cd puppeteer-ide-extension

npm install

npm run dist
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will output extension in…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/gajananpp/puppeteer-ide-extension"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Let's build a SaaS business together | part.1</title>
      <author>Toto</author>
      <pubDate>Tue, 14 Dec 2021 12:59:24 +0000</pubDate>
      <link>https://dev.to/toto/lets-build-a-saas-business-together-part1-395b</link>
      <guid>https://dev.to/toto/lets-build-a-saas-business-together-part1-395b</guid>
      <description>&lt;p&gt;&lt;strong&gt;Hello dev community&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I'm gonna start a new project today and I will share with you every aspect of it and some work in progress by the way over the time.&lt;/p&gt;

&lt;p&gt;This is a serious project and at the end it's gonna be a real business with pricing deployed and online.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-project"&gt;
  &lt;/a&gt;
  The project
&lt;/h2&gt;

&lt;p&gt;Im gonna create a saas app to create books from start to finish and then export them for different platform like Gumroad, kindle or for print.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-deadline"&gt;
  &lt;/a&gt;
  The deadline
&lt;/h2&gt;

&lt;p&gt;I have one month to create the app&lt;/p&gt;

&lt;p&gt;Thanks to the people who gonna read and follow my work. it mean a lot for me.&lt;/p&gt;

</description>
      <category>saas</category>
      <category>career</category>
      <category>programming</category>
    </item>
    <item>
      <title>Why TODOs and Jira tickets are not working anymore</title>
      <author>Alex Omeyer</author>
      <pubDate>Tue, 14 Dec 2021 12:47:17 +0000</pubDate>
      <link>https://dev.to/alexomeyer/why-todos-and-jira-tickets-are-not-working-anymore-3mnh</link>
      <guid>https://dev.to/alexomeyer/why-todos-and-jira-tickets-are-not-working-anymore-3mnh</guid>
      <description>&lt;p&gt;&lt;strong&gt;👋 Hey dev.to community! I've launched a &lt;a href="https://stepsize.typeform.com/to/HdW9VEx4"&gt;quick survey&lt;/a&gt; to learn more about how modern Engineering teams communicate, and would really appreciate your input!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Please, answer a few survey questions, share your opinion and get a chance to win an Amazon gift card worth $100💸&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now let's look at why TODOs and Jira tickets are not working for engineering teams anymore!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The problem
&lt;/h2&gt;

&lt;p&gt;A significant amount of a developer’s day is spent reading and understanding code written by other developers. You are essentially stepping into the mind of another developer. It can even be challenging to understand code you’ve written yourself after a few weeks of not working on it. Without the proper context, stepping into another developer’s mind becomes increasingly problematic. Just count the time you spend looking for documentation and asking teammates for context, not to mention the time spent in meetings.&lt;/p&gt;

&lt;p&gt;The time spent doing this is a problem in itself but it becomes much worse if the code contains issues that need to be fixed. According to a &lt;a href="https://thenewstack.io/how-much-time-do-developers-spend-actually-writing-code/"&gt;report by The New Stack&lt;/a&gt;, developers spend 32% of their time fixing the past, rather than building the future. Another blog post by Nnamdi even suggests a &lt;a href="https://whoisnnamdi.com/leaving-software-on-the-table/"&gt;number up to 42%&lt;/a&gt; if you combine managing technical debt with the time spent fixing “bad code” (debugging, refactoring, etc.). &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-solutions-today-to-improve-codebase-communication"&gt;
  &lt;/a&gt;
  What are the solutions today to improve codebase communication?
&lt;/h2&gt;

&lt;p&gt;Most developers can relate to the following two solutions used by development teams globally: creating tickets or TODOs. But why do these solutions not work to improve codebase communication?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;- Create a ticket or raise the issue with a team member.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Engineers are always strapped for time. So, unless the issue is critical, it will be recorded in a product or task management tool and placed in a backlog, never to be seen again. By recording the issue, developers think they have done part of the work and will address the issue in future sprints. However, recording the ticket is only 10% of the work. &lt;/p&gt;

&lt;p&gt;A golden rule that you can apply is based on the 2-minute rule. The 2-minute rule says that you should do a task if it takes less than 2 minutes of your time. For engineers, 2 minutes is not enough to solve an issue. Therefore, the golden rule here is the 15-minute rule. If you can absorb an issue's context and solve it within 15 minutes, you should do it. When an issue requires more time, it will interrupt the flow of the current issue you’re working on.&lt;/p&gt;

&lt;p&gt;Also, if you decide to record the ticket, you’ll have to step outside your IDE and into a product or task management tool. By recording this issue outside the codebase, you lose visibility over the issue. You will most likely forget about it until you reencounter it when working on another issue or feature. To retain this visibility, developers often opt for the second solution below to improve codebase communication.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NRILJgC9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/shv9kiohtt7wovwnsfg6.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NRILJgC9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/shv9kiohtt7wovwnsfg6.jpeg" alt="Image description" width="880" height="587"&gt;&lt;/a&gt; &lt;em&gt;Image credit: Jason Goodman on Unsplash.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create a TODO&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Many developers still like to create TODOs to remind themselves or teammates about unfinished work or problems within the codebase. As explained above, a TODO ensures better visibility for issues that need to be resolved in contrast with a product or task management tool.&lt;/p&gt;

&lt;p&gt;However, TODOs lack fundamental properties to improve codebase communication. First of all, the engineering team’s often don’t have a standard for TODOs, let alone capturing context. A TODO is often a quick and short blurb of text and usually does not capture a lot of context about the issue. For that reason, TODOs are unusable for anyone apart from the creator.&lt;/p&gt;

&lt;p&gt;Another problem is that TODOs are seen as “personal”, especially with the introduction of tools like &lt;a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens"&gt;GitLens&lt;/a&gt; that show the owner of a snippet of code or the person who has last modified it. Therefore, team members will naturally ignore it as “not my problem.”&lt;/p&gt;

&lt;p&gt;And lastly, TODOs are flaky and expire quickly. If code is moved between files, the owner can disappear and make it even harder to track down what has happened or where the TODO originally came from. With older codebases, especially open source ones, you might notice that they have many floating TODOs nobody understands, knows where they came from, and whether they are still relevant? The code might have changed so much that a TODO has become obsolete. Just think about codebase refactoring. Do you want to be the person that tries to figure out if a TODO is still relevant? I guess not!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-how-do-you-improve-your-codebase-communication"&gt;
  &lt;/a&gt;
  So how do you improve your codebase communication?
&lt;/h2&gt;

&lt;p&gt;Engineers spend ⅔ of their time in the editor. If you want to influence how they communicate, do it where they’re already spending most of their time. Therefore, with the rise of extensions, it has become easier for developers to stay within their development environment and not have to switch between different tools. For instance, simple extensions like &lt;a href="https://marketplace.visualstudio.com/items?itemName=GrapeCity.gc-excelviewer"&gt;Excel Viewer&lt;/a&gt; help developers to visualise CSV files in their IDE to avoid switching between tools.&lt;/p&gt;

&lt;p&gt;For that reason, codebase issues need to be visible in the actual codebase for two reasons: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Engineers are reminded about them when they are browsing code, increasing the likelihood of bringing them up, adding details, and eventually addressing them.&lt;/li&gt;
&lt;li&gt;Engineers are constantly reminded about issues directly related to code that they are currently working on—potentially alerting them to issues that they can make worse.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The most essential characteristic of a tool that tracks issues within your IDE is the ability to record context—linking relevant code, adding a detailed description and code, and linking related issues. By providing this context, an engineer is more likely to address the issue when it affects the code they are working on.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lUaJexnq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hrer1bkym6v9qjzatpok.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lUaJexnq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hrer1bkym6v9qjzatpok.png" alt="Image description" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The best way to get started with creating code issues is to install free Stepsize extensions for &lt;a href="https://marketplace.visualstudio.com/items?itemName=Stepsize.stepsize"&gt;VSCode&lt;/a&gt; and &lt;a href="https://plugins.jetbrains.com/plugin/14515-issue-tracker-in-ide/"&gt;JetBrains&lt;/a&gt;. Stepsize will help your Engineering team:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create, view, and prioritise codebase issues directly from your editor&lt;/li&gt;
&lt;li&gt;Add issue to your sprint with Jira integration&lt;/li&gt;
&lt;li&gt;Collaborate with your team to improve your codebase health&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As stated by The New Stack, there’s a huge opportunity for organisations to find new ways to decrease the percentage of time engineers spend on fixing issues and increasing time spent on writing new code. One major way to decrease the percentage spent on fixing the past is by visualising issues within a codebase and recording context. &lt;/p&gt;

&lt;p&gt;Try to avoid floating TODOs at all costs or populating backlogs with undescriptive issues. Once you successfully implement this, your engineering team will have more time to build new features, improving their team’s output.&lt;/p&gt;

</description>
      <category>refactorit</category>
      <category>codequality</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
