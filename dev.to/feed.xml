<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Python decorator to show execution time of a function
</title>
      <author>Ahmed El Taweel</author>
      <pubDate>Sun, 28 Nov 2021 08:14:56 +0000</pubDate>
      <link>https://dev.to/ahmedeltaweel/python-decorator-to-show-execution-time-of-a-function-afk</link>
      <guid>https://dev.to/ahmedeltaweel/python-decorator-to-show-execution-time-of-a-function-afk</guid>
      <description>&lt;p&gt;When working on a high throughput, low latency  system, it's important to measure the execution time of your code to identify bottleneck and fix them. To do so, let's use a decorator to measure the execution time for the function it decorates.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;timedelta&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;functools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;wraps&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;timeit&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;default_timer&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;timer&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;typing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Any&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Callable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Optional&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;metrics&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Optional&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Callable&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Optional&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hms&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Optional&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Any&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;"""Decorator to show execution time.

    :param func: Decorated function
    :param name: Metrics name
    :param hms: Show as human-readable string
    """&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;callable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;decorator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;wraps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wrapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;comment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Execution time of &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;:"&lt;/span&gt;
            &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;timer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;te&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;timer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;

            &lt;span class="c1"&gt;# Log metrics
&lt;/span&gt;            &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;common&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;log&lt;/span&gt;
            &lt;span class="n"&gt;logger&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;withPrefix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'[METRICS]'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;hms&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;comment&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;te&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;comment&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;te&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; sec"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;wrapper&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;decorator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;callable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;decorator&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By adding this decorator to each function, we can use the analytics from the APM to identify bottleneck and gain better visibility over the system.&lt;/p&gt;

&lt;p&gt;Happy coding :D &lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>performance</category>
    </item>
    <item>
      <title>Day 51 of 100 Days of Code &amp; Scrum: Company Website &amp; Professional Blog</title>
      <author>Rammina</author>
      <pubDate>Sun, 28 Nov 2021 07:43:48 +0000</pubDate>
      <link>https://dev.to/rammina/day-51-of-100-days-of-code-scrum-company-website-professional-blog-54lh</link>
      <guid>https://dev.to/rammina/day-51-of-100-days-of-code-scrum-company-website-professional-blog-54lh</guid>
      <description>&lt;p&gt;Happy Sunday, everyone!&lt;/p&gt;

&lt;p&gt;This week I will be focusing on fixing any remaining bugs and deploying my company website, as well as working on my professional blog. I most likely will work on them in that order, because I don't want to get distracted and leave anything unfinished. I think imposing a deadline on myself helped me be more productive last week, so I will most likely do that again.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;Just like I do every weekend, I did my 7th Weekly Sprint Review and Retrospective, in which I went over what I've managed to do well, what my shortcomings were, and what I could do better in the future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;I set up my weekly Sprint Goals, which will focus on my &lt;strong&gt;company website and professional blog&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weekly-sprint-goals"&gt;
  &lt;/a&gt;
  Weekly Sprint Goals
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;fix the bugs in my company website.&lt;/li&gt;
&lt;li&gt;deploy my company website after cleaning everything up.&lt;/li&gt;
&lt;li&gt;after the website, learn Ghost so I can use it to build my professional blog.&lt;/li&gt;
&lt;li&gt;continue to learn Next.js and Typescript by using concepts while I build my website or maybe just from reading documentations.&lt;/li&gt;
&lt;li&gt;continue studying for Professional Scrum Master I (PSM I) certification.&lt;/li&gt;
&lt;li&gt;continue networking, but allocate less time to this (coding is more important).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Have a great week, everyone!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" alt="Rammina Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/learn/basics/create-nextjs-app?utm_source=next-site&amp;amp;utm_medium=nav-cta&amp;amp;utm_campaign=next-website"&gt;Official Next.js tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/intro.html"&gt;The Typescript Handbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#other-media"&gt;
  &lt;/a&gt;
  Other Media
&lt;/h3&gt;

&lt;p&gt;Feel free to check me in other media and reach out to me!&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://twitter.com/RamminaR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C341ckO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636792959/twitter-logo_laoyfu_pdbagm.png" alt="Twitter logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://github.com/Rammina"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4ZlXeay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636795051/GitHub-Emblem2_epcp8r.png" alt="Github logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>productivity</category>
    </item>
    <item>
      <title>How to become a Certified AWS Developer in 2022</title>
      <author>javinpaul</author>
      <pubDate>Sun, 28 Nov 2021 07:41:26 +0000</pubDate>
      <link>https://dev.to/javinpaul/how-to-become-a-certified-aws-developer-in-2022-4dme</link>
      <guid>https://dev.to/javinpaul/how-to-become-a-certified-aws-developer-in-2022-4dme</guid>
      <description>&lt;p&gt;&lt;em&gt;Disclosure: This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Hello Devs,  if you want to become a certified AWS developer in 2022 and preparing for AWS Developer Associate certification and looking for the best books, courses, and overall guidance to pass this prestigious but tough exam then you have come to the right place. &lt;/p&gt;

&lt;p&gt;Earlier, I have shared the &lt;a href="https://javarevisited.blogspot.com/2020/05/top-5-courses-to-crack-aws-certified-developer-associate-certification-exam.html"&gt;best AWS developer courses&lt;/a&gt; and &lt;a href="https://javarevisited.blogspot.com/2020/07/top-5-aws-certified-developer-associate-practice-tests-mock-exams.html"&gt;practice tests&lt;/a&gt;, and today, I am going to share the overall guide and complete resources to pass this prestigious AWS cloud certification. &lt;/p&gt;

&lt;p&gt;There is no doubt that &lt;a href="https://medium.com/javarevisited/top-10-cloud-certification-to-aim-in-2022-aws-azure-and-google-cloud-platform-bd054fff0538"&gt;AWS certifications&lt;/a&gt; are very valuable and opens the door for a lot of opportunities, not just for system admins and solution architects but also for developers and &lt;a href="https://medium.com/javarevisited/top-5-online-courses-to-become-a-devops-engineer-in-2020-764f5e60c2b"&gt;DevOps Engineers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The AWS Certified Developer Associate certification exams are for Software Developers and Web Developers and it tests your ability to develop and deploy software applications on AWS and work with databases, &lt;a href="https://medium.com/javarevisited/7-best-serverless-and-aws-lambda-courses-to-learn-in-2021-de1820111c85"&gt;serverless architecture&lt;/a&gt;, and use of AWS API.&lt;/p&gt;

&lt;p&gt;Even though there is no substitute for knowledge and experience and your certification is not very useful if you don't know how to work in AWS console, there are a lot of tangible and intangible benefits of &lt;a href="https://javarevisited.blogspot.com/2020/09/top-10-aws-certifications-for-cloud-professionals.html"&gt;AWS Cloud certifications&lt;/a&gt;, particularly the AWS Certified Developer Associate exam.&lt;/p&gt;

&lt;p&gt;For example, it gives you an opportunity to learn about AWS services and platforms in depth. It also gives you the recognition you deserve for your knowledge and cloud skills. &lt;/p&gt;

&lt;p&gt;It also allows you to put AWS in your resume and LinkedIn and that brings a lot of chances as recruiters and companies are always looking for certified AWS professionals.&lt;/p&gt;

&lt;p&gt;But, the most important benefit of the &lt;a href="https://medium.com/javarevisited/6-best-aws-developer-associate-dva-c001-certification-practice-test-mock-exams-and-dumps-9e24573f509a"&gt;AWS Developer certification&lt;/a&gt; or any other certification is the knowledge it gives you. &lt;/p&gt;

&lt;p&gt;I have learned a lot while preparing for certification and that's also my preferred way to learn new technology in depth.&lt;/p&gt;

&lt;p&gt;Once you know the basics, you should go for certification, along the way you will learn a lot and become an expert on that technology. I have tried this method to learn Java, Spring, and several other technologies and I can say it works well.&lt;/p&gt;

&lt;p&gt;Once you start preparing for &lt;a href="https://medium.com/javarevisited/top-5-aws-training-courses-to-crack-amazon-web-service-solutions-architect-associate-certification-3f4affa8f660"&gt;AWS certifications&lt;/a&gt;, you obviously start reading more about different AWS services, their pros, and cons, watching more online courses and tutorials on Youtube.&lt;/p&gt;

&lt;p&gt;You also start doing more hands-on labs, and start solving more practice questions, all these activities brings a lot of knowledge and experience related to AWS which serves well not just on certification but also during interviews and your day-to-day jobs.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-to-become-aws-certified-developer-in-2022"&gt;
  &lt;/a&gt;
  How to become AWS Certified Developer in 2022
&lt;/h2&gt;

&lt;p&gt;I have been focusing a lot on Cloud, Machine Learning, and Big Data since last year and reading a lot about associate-level AWS certifications like solution architect, cloud developer, and sysops administrator.&lt;/p&gt;

&lt;p&gt;I was also helping a couple of my readers with their &lt;a href="https://javarevisited.blogspot.com/2020/05/top-5-amazon-web-services-aws-courses-for-beginners-and-experienced-programmers.html"&gt;AWS&lt;/a&gt;, &lt;a href="https://javarevisited.blogspot.com/2020/09/top-5-courses-to-learn-microsoft-azure.html"&gt;Azure&lt;/a&gt;, and &lt;a href="https://javarevisited.blogspot.com/2019/07/top-5-google-cloud-platform-gcp-courses-certifications-online.html"&gt;Google cloud&lt;/a&gt; certification journey and I am happy that many of them have succeeded in their first attempt and now I am sharing the same blueprint with you guys.&lt;/p&gt;

&lt;p&gt;This is a tried and tested blueprint by myself and many of my friends and readers. I have followed this blueprint to get different &lt;a href="https://medium.com/javarevisited/top-7-practice-tests-and-mock-exams-to-prepare-for-oracles-java-certifications-ocajp-and-ocpjp-36502d4ca061"&gt;Oracle&lt;/a&gt;, &lt;a href="https://javarevisited.blogspot.com/2019/12/how-to-crack-java-se-11-certification.html"&gt;Java&lt;/a&gt;, &lt;a href="https://medium.com/javarevisited/top-5-spring-professional-certification-exam-resources-for-java-developers-3ef9fa42fe13"&gt;Spring Professional&lt;/a&gt;, SQL Server, &lt;a href="https://medium.com/javarevisited/my-favorite-data-science-and-machine-learning-courses-from-coursera-udemy-and-pluralsight-eafc73acc73f"&gt;Data Science&lt;/a&gt;, and &lt;a href="https://javarevisited.blogspot.com/2020/09/top-10-aws-certifications-for-cloud-professionals.html"&gt;AWS certifications&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It's pretty much a three-point formula where you need to choose a good course, do a lot of hands-on labs and then solve as many practice questions as possible. &lt;/p&gt;

&lt;p&gt;If you follow these three steps honestly, you are bound to score 800+ on your &lt;a href="https://medium.com/javarevisited/top-5-online-courses-to-become-aws-certified-developer-associate-in-2020-best-of-lot-9b22baf84ca8"&gt;AWS Developer Associate exam&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This blueprint will help you to get success in not just AWS certification but also in any IT certification, all you need to do is pick the right resources for each section. &lt;/p&gt;

&lt;p&gt;I mean choose the best online course for the AWS Certified Developer Associate exam and choose the best book and &lt;a href="https://javarevisited.blogspot.com/2020/07/top-5-aws-certified-developer-associate-practice-tests-mock-exams.html"&gt;Mock tests&lt;/a&gt;, and that's where this article will help you.&lt;/p&gt;

&lt;p&gt;In this article, I'll share your resources that will help you to pass the AWS Certified Developer Associate exam with flying colors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Faws-certified-developer-associate-dva-c01%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Fv2sV7H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-PewOvoAYt1Y/XzvWk0Ctl4I/AAAAAAAAiYY/NQwVR-oJfHcxtUPtDSJik97aU-D-cTyrgCLcBGAsYHQ/w400-h227/How%252Bto%252BCrack%252BAWS%252BDeveloper%252BAssociate%252BCertification.png" alt="How to Crack AWS Certified Developer Associate Exam" width="398" height="227"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#1-courses"&gt;
  &lt;/a&gt;
  1. Courses
&lt;/h3&gt;

&lt;p&gt;Online courses are the best resource to start your AWS certification preparation, the key here is to choose the right courses which not only cover the exam topics well but also teach you practical stuff so that you can learn AWS skills that are required in real-world jobs.&lt;/p&gt;

&lt;p&gt;For the AWS Developer Associate exam, I recommend following online training courses, some of them are free and others are also very affordable and you can buy them for just $10 on Udemy sales which happen every month.&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;1.1. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Faws-certified-developer-associate-dva-c01%2F"&gt;Stephane Maarek's Ultimate AWS Certified Developer Associate Course&lt;/a&gt; *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is the best online course to pass the AWS developer associate exam. Created by Stephane, an AWS expert which has passed all the AWS certifications this course will teach you everything you need to know to pass this prestigious cloud certification. &lt;/p&gt;

&lt;p&gt;If you can get just one course, buy this one, you won't regret it, it's worth both your time and money. More than 50K people have already joined this course.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Faws-certified-developer-associate-dva-c01%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t2551NEG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-9Hyea3bUmB0/XzvTpgqsZcI/AAAAAAAAiYA/ad3txnB0aI89L0sVBjQjIGNbJjlcfzTlQCLcBGAsYHQ/s320/Ultimate%252BAWS%252BCertified%252BDeveloper%252BAssociate%252B2020%252BUdemy%252Bbest%252Bcourse%252Bby%252BStephane%252BMaarek.png" alt="best course to pass AWS Developer Associate Exam" width="320" height="180"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;1.2. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Faws-certified-associate-architect-developer-sysops-admin%2F"&gt;Amazon Web Services (AWS) Certified 2022 - 4 Certifications! &lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is another high-quality online course to prepare for the AWS developer associate exam. Created by Backspace Academy, one of the leading training organizations when it comes to cloud training this course is both well structured and goes deep enough to pass the exam.&lt;/p&gt;

&lt;p&gt;This course is created by Paul Coady of Backspace Academy and if you are a complete beginner on AWS then this is the perfect course for you to both learn AWS and pass this valuable certification.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Faws-certified-associate-architect-developer-sysops-admin%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YY6mwkSc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-8Qd_VWs48BU/YZj8eed-lkI/AAAAAAAAqN8/054a09tmxAIcehLWwqHHeEXxOM8LrYrhQCLcBGAsYHQ/w351-h198/1047846_83ef_29.jpg" alt="best AWS Cloud Developer certification course" width="351" height="197"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#2-books"&gt;
  &lt;/a&gt;
  2. Books
&lt;/h3&gt;

&lt;p&gt;Apart from online courses, I highly recommend you get a study guide to learn exam topics in good detail. While the book provides the most comprehensive coverage they are often not up-to-date because it is practically not possible to update books every 6 months when exam topics and syllabus is updated for AWS certifications.&lt;/p&gt;

&lt;p&gt;Hence, I don't have any recommendations here except &lt;a href="https://gumroad.com/a/703100019/MsVlG"&gt;&lt;strong&gt;AWS: The Good Parts&lt;/strong&gt;&lt;/a&gt; which is my favorite book to learn essential AWS services that have to withstand the test of time and going to remain for quite some time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gumroad.com/a/703100019/MsVlG"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--juzfSoCH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-0hSGMrkMX3U/X4cOid-K10I/AAAAAAAAj0g/FeX6p0fl0zMzYMnNTRjL0KqxUAc6y1bpQCLcBGAsYHQ/w229-h320/AWS%252Bgood%252Bparts%252B-%252Bbest%252Baws%252Bbook.png" alt="best aws book for beginners" width="229" height="320"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is not like any other book which covers things based upon Docs and specification but it's born from real experience. Both the authors have worked for 15 years on Amazon and know AWS in and out. &lt;/p&gt;

&lt;p&gt;I highly recommend this book to anyone who wants to learn AWS and especially to those who are preparing for certification.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-practice-tests"&gt;
  &lt;/a&gt;
  3. Practice Tests
&lt;/h3&gt;

&lt;p&gt;Now, this is the third piece of the puzzle to your AWS certification journey. Mock tests are the most important part of your preparation as they can be used to assess your preparation level. &lt;/p&gt;

&lt;p&gt;You can also use them to find your strength and weakness and work on them before the real exam.&lt;/p&gt;

&lt;p&gt;I generally start with a topic-wise test to see if I am ready for a full mock test and then work my way there.&lt;/p&gt;

&lt;p&gt;When you consistently score 80% on mock tests and practice papers you are ready for the real exam. And, if you need recommendations, here are &lt;em&gt;AWS Developer Associate practice tests&lt;/em&gt; you can take to full proof of your preparation.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#31-whizlabs-834-questions"&gt;
  &lt;/a&gt;
  3.1. WhizLabs (&lt;a href="https://shrsl.com/25qjc"&gt;834 questions&lt;/a&gt;)
&lt;/h4&gt;

&lt;p&gt;When it comes to practice tests and AWS simulators I trust Whizlabs, their practice test is often of high quality and covers exam topics nicely. Their explanations are also revealing and I learn a lot from them.&lt;/p&gt;

&lt;p&gt;The AWS Developer Associate Practice tests from &lt;a href="https://shareasale.com/r.cfm?b=1551042&amp;amp;u=880419&amp;amp;m=43514&amp;amp;urllink=&amp;amp;afftrack="&gt;Whizlabs&lt;/a&gt; contains 834 unique questions divided into 12 full-length test which are enough to prepare for this exam. &lt;/p&gt;

&lt;p&gt;To get the most from this practice test, do the full-length test in a real exam like setting like a quiet room and time limit. This will help you to truly assess your preparation level.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://shrsl.com/25qjc"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Azd2lmdj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-z7Est6rzdMA/XzvTyGrCmSI/AAAAAAAAiYI/ARHi1Pa-F0wO13NH8NArmEe5QCOPkNZ-QCLcBGAsYHQ/s320/AWS%252BDeveloper%252BAssociate%252BPractice%252BTest%252BWhizlabs%252BBest.png" alt="best practice test to pass AWS Developer Associate certification" width="320" height="201"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#32-udemy-aws-practice-tests"&gt;
  &lt;/a&gt;
  3.2 Udemy AWS Practice Tests
&lt;/h4&gt;

&lt;p&gt;Along with online courses, Udemy also has some practice tests sold as online courses that you can use for preparing the AWS solution architect exam. Out of many AWS SAA-C01 Practice tests on Udemy, I recommend these two, both are the most up-to-date tests:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.1. Jon Bonson's AWS Developer Associate Practice tests (&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Faws-certified-developer-associate-practice-exams-amazon%2F"&gt;260  questions&lt;/a&gt;)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is another AWS developer associate mock test on Udemy which is worth the recommendation. This course contains 6 mock tests of 65 questions each, which are good for your final preparation. If you consistently score 80+ on this mock test then you are ready for the real exam.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/javarevisited/6-best-aws-developer-associate-dva-c001-certification-practice-test-mock-exams-and-dumps-9e24573f509a"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4taSi3St--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-qexn1OzUbDc/YZj9HHCF3zI/AAAAAAAAqOE/YPWP-a1ceCw3mWge4lAkRUai2StP5JhVQCLcBGAsYHQ/w320-h179/CDA-PT.jpg" alt="best AWS developer certificate practice test" width="320" height="179"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.2. David Mayer's AWS Developer Associate Practice Question (&lt;a href="https://www.certification-questions.com/practice-exam/amazon/aws-certified-developer-associate?affiliateCode=fcff36fd-557a-4713-abf6-973e9924770f&amp;amp;utm_source=Javin&amp;amp;utm_medium=affiliate&amp;amp;utm_campaign=affiliate"&gt;987 questions&lt;/a&gt;)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is another big list of AWS practice questions, actually, they are exam dumps means they are real questions from past exams if you like to really go for those 900+ scores. &lt;/p&gt;

&lt;p&gt;This mock test has got 987 questions and 20 exam tests which make it the mother of all AWS practice papers. You don't need anything else after doing it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.certification-questions.com/practice-exam/amazon/aws-certified-developer-associate?affiliateCode=fcff36fd-557a-4713-abf6-973e9924770f&amp;amp;utm_source=Javin&amp;amp;utm_medium=affiliate&amp;amp;utm_campaign=affiliate"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BP5b7j8p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-saXTem1Dtu8/YZj9Nr2xGrI/AAAAAAAAqOI/3AVdgYttREYD1X05LFlZlBm31JzKCarxACLcBGAsYHQ/1-xGWAPEy88Tfwvmn6LDR2hw.jpeg" alt="best AWS developer certificate exam dumps" width="512" height="396"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;3.3. Stephane Maarek's AWS Developer Mock tests (&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Faws-certified-developer-associate-practice-tests-dva-c01%2F"&gt;293 questions&lt;/a&gt;&lt;/strong&gt;)&lt;/p&gt;

&lt;p&gt;Another High-quality and scenario-based questions to do well on real AWS tests. sometimes tougher than the actual example level.  This is a perfect exam to hone your speed and accuracy before appearing for the real exam. &lt;/p&gt;

&lt;p&gt;I highly recommend this practice tests to anyone serious about passing this exam on the first attempt and scoring high.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Faws-certified-developer-associate-practice-tests-dva-c01%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZE7JyBnR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-YcgQ1j27s_w/XzvXErNViRI/AAAAAAAAiYo/XUVwc5Bu7fAAKzrtEgCKkmwyiVSGX8K2QCLcBGAsYHQ/s400/AWS%252BCertified%252BDeveloper%252BAssociate%252B2020%252B-%252BBest%252BPractice%252BTest%252BUdemy%252BAWS.jpg" alt="best udemy mock test to pass AWS developer associate exam" width="400" height="225"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-handson-labs"&gt;
  &lt;/a&gt;
  4. Hands-on Labs
&lt;/h3&gt;

&lt;p&gt;Practice inside the AWS console is very important if you aspire to work as an AWS Certified Developer for AWS Cloud. In general, I advise students to join a course that also has practice labs and also opens an AWS free tier account.&lt;/p&gt;

&lt;p&gt;Since, you only remember if you do the stuff, these AWS practical sessions will help you to understand and memorize the services which you are reading like &lt;a href="https://javarevisited.blogspot.com/2020/08/top-5-courses-to-learn-amazon-aws-ec-2.html"&gt;EC2&lt;/a&gt;, &lt;a href="https://www.java67.com/2020/08/top-5-courses-to-learn-aws-s3-and-dynamoDB-in-depth.html"&gt;S3&lt;/a&gt;, &lt;a href="https://medium.com/javarevisited/7-best-aws-s3-and-dynamodb-courses-for-beginners-in-2021-a8a44b6066da"&gt;DynamoDB&lt;/a&gt;, IAM, and others. &lt;/p&gt;

&lt;p&gt;You can sign up for a &lt;a href="https://aws.amazon.com/free"&gt;free AWS account&lt;/a&gt; at the AWS portal. I highly recommend this to anyone who wants to become a certified AWS developer in 2022. This free account is great for practice. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EtxTmyA---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d1.awsstatic.com/tmt/control-your-costs-free-tier-budgets/control-your-costs-free-tier-budgets-1b.50ece015ff1c01e43f4fe2c31abccfc773963263.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EtxTmyA---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d1.awsstatic.com/tmt/control-your-costs-free-tier-budgets/control-your-costs-free-tier-budgets-1b.50ece015ff1c01e43f4fe2c31abccfc773963263.png" alt="How to use AWS Free Tier for Practice | AWS" width="880" height="531"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-white-papers"&gt;
  &lt;/a&gt;
  5. White Papers
&lt;/h3&gt;

&lt;p&gt;If you are someone, who is not happy with 800+ core and want to go for a 900+ score then I also suggest you read White Papers and Case studies provided by Amazon and AWS. These are some of the most in-depth and practical content you will get anywhere on the internet.&lt;/p&gt;

&lt;p&gt;If you want to go one step more, you can also read AWS documentation as it provides the most up-to-date information, which is certainly an important factor given AWS is still evolving and there are hundreds of updates to catch up.&lt;/p&gt;

&lt;p&gt;Alternatively, you can also signup for AWS weekly on ACloudGuru which is a great way to keep up-to-date with new AWS changes.&lt;br&gt;
Here is the link to read AWS whitepapers -&lt;a href="https://aws.amazon.com/whitepapers"&gt;https://aws.amazon.com/whitepapers &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/s3/whitepaper-best-practices-s3-performance/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1oukH_RA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d1.awsstatic.com/product-marketing/S3/Screen%2520Shot%25202020-04-23%2520at%25202.48.14%2520PM.6f1a750b0edc6edf2da5840d45ff27ce1211e312.png" alt="Whitepaper - Best practices design patterns - Optimizing performance of  Amazon S3" width="880" height="899"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-tips-to-pass-aws-developer-certification-in-2022"&gt;
  &lt;/a&gt;
  5 Tips to Pass AWS Developer Certification in 2022
&lt;/h3&gt;

&lt;p&gt;Now that you know how to prepare for AWS Developer certification and become a certified AWS developer and also have access to best book, courses, and practice test, it's time for some practical tips which you can use to not only accelerate your preparation but also avoid silly mistakes in the exam and pass the exam in your first attempt.&lt;/p&gt;

&lt;p&gt;1. Passing marks for the AWS Certified Developer Associate certification exam varies daily. It could be 60% or 72% or even more but you should always prepare for 75% to pass the exam on the very first attempt.&lt;/p&gt;

&lt;p&gt;2. How much time do you need to prepare for the AWS Developer Associate exam? Well, preparation time mostly depends on experience level. If you have some AWS experience under your belt then 2-3 weeks of preparation is enough but if you are a complete beginner to AWS then 4 to 6 weeks is a reasonable time.&lt;/p&gt;

&lt;p&gt;3. Hands-on lab exercises are a must if you don't want to become a paper-certified AWS developer or solution architect. All the things you will learn and earn via certification also need a backup of hands-on experience. &lt;/p&gt;

&lt;p&gt;It's even more important for people who are not actively working in AWS as part of their day job. In short, get a &lt;a href="https://aws.amazon.com/"&gt;free AWS account&lt;/a&gt; open and try to break things, and learn how to fix them.&lt;/p&gt;

&lt;p&gt;4. Join the courses which are most up-to-date and also include lab exercises for the reason I have mentioned above. Since AWS is still evolving and there is a new feature coming up daily, it's important to choose the course which is not most up-to-date, not just in terms of the certification syllabus and curriculum but also with AWS feature and how to do things in a best and latest way in AWS.&lt;/p&gt;

&lt;p&gt;5. Solve as many practice questions as possible. This is by far the most important tip for me. Since you are going to appear for an exam, where you need to solve questions in a limited time, you got to do practice to be able to read, understand, and solve those problems quickly. I know many people how have got 1o to 15 questions wrong just because of time pressure.&lt;/p&gt;

&lt;p&gt;Mock tests and practice questions also help to solidify your knowledge and highlight gaps in your learning. For example, you can use them to find your strong and weak areas and then cover them better before the real exam.&lt;/p&gt;

&lt;p&gt;That's all about &lt;strong&gt;how to become a certified AWS Developer in 2022&lt;/strong&gt;. AWS Certifications, particularly the solution architect one are very important. This not only gives you approval from the AWS but also prepares you for your interviews and further work. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://javarevisited.blogspot.com/2019/08/how-to-crack-aws-certified-solution-architect-exam.html"&gt;AWS Solution Architects&lt;/a&gt; are also the most high-paying professionals with annual salaries ranging from $120,000 to $130,000 and as more and more companies are moving towards the cloud, there are a lot of opportunities for cloud developers and architects.&lt;/p&gt;

&lt;p&gt;Other **AWS Certification Resources **you may like to explore&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/08/how-to-crack-aws-certified-solution-architect-exam.html"&gt;How to Crack the AWS Solution Architect Associate Exam&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://d1.awsstatic.com/training-and-certification/docs-dev-associate/AWS-Certified-Developer-Associate_Exam-Guide.pdf"&gt;The Official AWS Developer Associate Exam Guide&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://d1.awsstatic.com/training-and-certification/docs-dev-associate/AWS-Certified-Developer-Associate_Sample-Questions.pdf"&gt;AWS Certified Developer --Associate (DVA-C01) Sample Exam Questions&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/05/top-5-courses-to-crack-aws-solutions-architect-associate-certification-exam-SAA-C01.html#axzz5rHwAwycj"&gt;Top 5 Courses to Crack AWS Solution Architect Associate Certification&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/10-best-aws-certified-cloud-practitioner-clf-c01-online-courses-and-practice-test-to-crack-ecc0f913091e"&gt;Top 10 AWS Certified Cloud Practitioner Online Courses&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/5-best-azure-fundamentals-courses-to-pass-az-900-certification-exam-in-2020-9e602aea035d"&gt;5 Best Azure Fundamental Courses for Beginners&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/05/top-5-cloud-courses-for-java-and-spring-boot-developers.html"&gt;Top 5 AWS and Cloud Courses for Java Developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-courses-to-learn-amazon-web-services-aws-cloud-in-2020-best-and-free-317f10d7c21d"&gt;My Favorite Courses to learn AWS in depth&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/08/top-5-free-aws-solution-architect-Associate-certification-dumps-practice-questions.html"&gt;5 Free AWS Solution Architect Associate Practice Test, Dumps, and Mock Exam&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/04/top-5-course-to-crack-aws-certified-devops-engineer-professional-exam-certification.html"&gt;5 Courses to become AWS DevOps Engineer Professional &lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/04/top-5-course-to-crack-aws-solution-architect-professional-sap-c01-certification-exam.html"&gt;Top 5 Courses to become AWS Solution Architect Professional&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/04/how-to-crack-microsoft-azure-fundamentals-certification-az-900-exam.html"&gt;How to pass the Azure Fundamentals Exam (AZ-900)&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/03/top-5-aws-certified-cloud-practitioner-mock-test-practice-questions.html"&gt;Top 5 Mock test and Exam Dumps for AWS Cloud Practitioner (CLF-C01)&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/02/top-5-courses-to-crack-aws-certified-cloud-practitioner-exam-certification-clf-c01.html"&gt;5 Best courses to Pass the AWS Cloud Practitioner exam&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.java67.com/2018/05/top-5-amazon-web-services-or-aws-courses-to-learn-online.html"&gt;5 Free Courses to learn Amazon Web Service&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/04/top-5-course-to-crack-aws-certified-devops-engineer-professional-exam-certification.html"&gt;Top 5 Courses to Crack AWS DevOps Engineer Exam&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/04/top-5-course-to-crack-aws-solution-architect-professional-sap-c01-certification-exam.html"&gt;Top 5 Courses to Crack AWS Solution Architect Professional Exam&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-courses-to-learn-amazon-web-services-aws-cloud-in-2020-best-and-free-317f10d7c21d"&gt;How to prepare for AWS Solution Architect Certification&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading this article so far. If you like this AWS Developer Associate certification roadmap and guide then please share it with your friends and colleagues.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P. S. -&lt;/strong&gt; If you are keen to pass the AWS Certified Developer Associate Certification but can't afford these resources and instead of looking for free resources to prepare for this prestigious certification then you can also check out this &lt;strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Faws-developer-associate-training%2F"&gt;FREE AWS Developer Associate Training&lt;/a&gt;&lt;/strong&gt; on Udemy. It's completely free and you just need an Udemy account to join this AWS training course.&lt;/p&gt;

</description>
      <category>cloudcomputing</category>
      <category>aws</category>
      <category>programming</category>
      <category>development</category>
    </item>
    <item>
      <title>JavaScript Struggles - Part 4 | Comparing</title>
      <author>‘Abdelraḥman Dwedar 👨🏻‍💻🇵🇸</author>
      <pubDate>Sun, 28 Nov 2021 07:39:32 +0000</pubDate>
      <link>https://dev.to/abdelrahman_dwedar/javascript-struggles-part-4-comparing-1op4</link>
      <guid>https://dev.to/abdelrahman_dwedar/javascript-struggles-part-4-comparing-1op4</guid>
      <description>&lt;h3&gt;&lt;b&gt;&lt;u&gt;Here we go again!&lt;/u&gt;&lt;/b&gt;&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/l1J9urAfGd3grKV6E/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/l1J9urAfGd3grKV6E/giphy.gif" alt="Welcome back" width="480" height="216"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This one is very easy but we all have to know it, you may already heard about it somewhere else too.&lt;br&gt;
If you weren't familiar with JS's comparing way keep going. If you're then this post is not for you. 😊👏🏻 &lt;/p&gt;



&lt;p&gt;There's two ways of comparing variables in JavaScript:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#Dequal"&gt;&lt;strong&gt;Two&lt;/strong&gt; Equal Signs (==)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Tequal"&gt;&lt;strong&gt;Three&lt;/strong&gt; Equal Signs (===)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;
  &lt;a href="#two-equal-signs-"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Two&lt;/strong&gt; Equal Signs (==) &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Most majority of programming languages uses &lt;code&gt;==&lt;/code&gt; as the one and only comparing operator, but in JavaScript we're special. 😏&lt;/p&gt;

&lt;p&gt;&lt;code&gt;==&lt;/code&gt; is only comparing the value of the variable, ignoring the data type of it; so if there's a number that is equal to a number &lt;u&gt;inside the string&lt;/u&gt; it'll always be true.&lt;/p&gt;

&lt;p&gt;E.g.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Outputs: true&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Outputs: true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;The data type of the variable will not be changed after the comparison&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;
  Some of Its Uses
  &lt;br&gt;
We can use it to check if the number is not &lt;code&gt;0&lt;/code&gt; or an empty string.&lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Outputs: false&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Outputs: false&lt;/span&gt;

&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;word&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hey!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Outputs: true&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Outputs: true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#three-equal-signs-"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Three&lt;/strong&gt; Equal Signs (===) &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;We use this as the normal comparing operator, that's only working with &lt;strong&gt;JavaScript&lt;/strong&gt;, &lt;strong&gt;TypeScript&lt;/strong&gt;, &lt;strong&gt;PHP&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;What &lt;code&gt;===&lt;/code&gt; actually does is that it compares the value &lt;u&gt;and the data type&lt;/u&gt;.&lt;/p&gt;

&lt;p&gt;E.g.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Outputs: false&lt;/span&gt;

&lt;span class="cm"&gt;/* They must be of the same data type. */&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Outputs: true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;===&lt;/code&gt; is the most used one. Probably because it's the easy way of conparing and we all understand it even if JavaScript wasn't your first language.&lt;/p&gt;






&lt;h4&gt;Thanks for reading! 😌&lt;br&gt;&lt;br&gt;
I hope this may be helpful for someone.&lt;h4&gt;
&lt;br&gt;
&lt;/h4&gt;
&lt;br&gt;
&lt;/h4&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>help</category>
    </item>
    <item>
      <title>The Next Generation of Digital Identity</title>
      <author>Mark Vassilevskiy</author>
      <pubDate>Sun, 28 Nov 2021 06:51:17 +0000</pubDate>
      <link>https://dev.to/markfusion/the-next-generation-of-digital-identity-552e</link>
      <guid>https://dev.to/markfusion/the-next-generation-of-digital-identity-552e</guid>
      <description>&lt;p&gt;Metaverse is a 3D virtual world where you can explore and chat with people from all over the globe in a shared, immersive space. Metaverse has been compared to Facebook's Spaces feature because it allows users to create an avatar of themselves and interact with other avatars in their shared virtual world. Metaverse has also launched its own augmented reality glasses called Meta Frames which allow users to see digital objects overlaid onto real-world spaces around them through their lenses.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#so-what-is-metaverse-anyway"&gt;
  &lt;/a&gt;
  So What is Metaverse Anyway?
&lt;/h2&gt;

&lt;p&gt;It's a question with a surprisingly difficult answer: what is Metaverse? Metaverse is an AR space that has been developed by Facebook, which you might know from things like the social media platform and instant messaging service. Metaverse allows users to create their own worlds or spaces that can be explored via an application on your phone. Metaverse offers some really cool features such as 360-degree video capture and more! Metaverse's augmented reality glasses, Meta Frames, allow users to overlay digital objects onto their real-world surroundings. Metaverse is a virtual space that has some really cool features and it isn't just limited to VR either!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#from-social-media-site-to-virtual-world"&gt;
  &lt;/a&gt;
  From Social Media Site To Virtual World
&lt;/h2&gt;

&lt;p&gt;Some people might remember Metaverse as the social media site Facebook was working on before it started its second iteration of Spaces in 2017 which allowed users to create avatars for themselves and explore other spaces created by other people who are also using this platform. It seems like Metaverse could potentially be an even bigger deal than what many had originally thought when looking at the 2020 launch date because the AR experience it provides looks pretty awesome so far. Of course, we'll have to wait until Metaverse is actually released to the public, but Metaverse promises a lot of things that could make it worth looking into.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-does-metaverse-look-like-right-now"&gt;
  &lt;/a&gt;
  So What Does Metaverse Look Like Right Now?
&lt;/h2&gt;

&lt;p&gt;As I mentioned earlier, Metaverse offers some really cool features such as 360-degree video capture. Also, has its own AR glasses called Meta Frames which allow users to see digital objects overlaid onto real-world spaces through their lenses. The virtual space itself looks pretty amazing so far - take a look at the trailer below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=SAL2JZxpoGY"&gt;https://www.youtube.com/watch?v=SAL2JZxpoGY&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Replace the word "the metaverse" in a sentence with "cyberspace." The meaning of the sentence will not usually be altered 90% of the time.&lt;/p&gt;

&lt;p&gt;The idea of the metaverse is, at its essence, a grandiose vision—a fully simulated world in which we may all participate. It's no surprise that people who are promoting such things as NFTs —cryptographic tokens that can be used to certify ownership of a digital asset—also embrace the concept of the metaverse.&lt;/p&gt;

&lt;p&gt;It's vital to note all of this because while it may be tempting to compare today's proto-metaverse concepts to the early internet and assume that everything will improve and develop in a straight line, that isn't a given. There's no assurance that people will want to hang out in a virtual office or play Texas Hold'em with Dreamworks Mark Zuckerberg if they don't have legs, much less whether VR and AR technology will ever become seamless enough to compete with smartphones and PCs.&lt;/p&gt;

&lt;p&gt;It's also possible that any genuine "metaverse" would simply be some cool VR games and digital avatars in Zoom chats.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-i-get-metaverses-ar-experience"&gt;
  &lt;/a&gt;
  How Can I Get Metaverse's AR Experience?
&lt;/h2&gt;

&lt;p&gt;As I said Metaverse is only a really optimistic plan for the near future, and right now you can't get your hands on this experience since there are no headsets available for purchase yet however Facebook said that Meta will be launching in near future, so if you're interested in this new technology or sphere, call it as you want, you should read me further, and I'll tell you more about new features about it and not only :)&lt;/p&gt;

</description>
      <category>metaverse</category>
      <category>discuss</category>
      <category>news</category>
    </item>
    <item>
      <title>OverSimplified: Programming Languages</title>
      <author>Sina Nikmaram</author>
      <pubDate>Sun, 28 Nov 2021 06:20:44 +0000</pubDate>
      <link>https://dev.to/sinaprograms/oversimplified-programming-languages-3370</link>
      <guid>https://dev.to/sinaprograms/oversimplified-programming-languages-3370</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;OverSimplified is a series where I try to oversimplify CS concepts in an attempt to help us all better understand them. Thanks for your time, enjoy!&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#what-is-a-programming-language"&gt;
  &lt;/a&gt;
  What is a Programming Language?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Programming Languages are tools that provide us with a &lt;em&gt;&lt;strong&gt;syntax&lt;/strong&gt;&lt;/em&gt; (rules and keywords) which we can use to communicate with computers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#okay-so-how-does-this-help-us-communicate"&gt;
  &lt;/a&gt;
  Okay so... how does this help us communicate?
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Computers only understand &lt;em&gt;&lt;strong&gt;Binary (1's and 0's)&lt;/strong&gt;&lt;/em&gt; or &lt;em&gt;&lt;strong&gt;Machine Code&lt;/strong&gt;&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Programming Languages allow us to write code that is legible to humans, and can be transformed or &lt;em&gt;&lt;strong&gt;compiled&lt;/strong&gt;&lt;/em&gt; into machine code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/7FrOU9tPbgAZtxV5mb/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/7FrOU9tPbgAZtxV5mb/giphy.gif" alt="Alt Text" width="480" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(If you want to take a deeper dive into how computers read and execute code I recommend watching &lt;a href="https://www.youtube.com/watch?v=QXjU9qTsYCc"&gt;this video&lt;/a&gt;.)&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#lowlevel-vs-highlevel-languages"&gt;
  &lt;/a&gt;
  Low-Level vs High-Level Languages
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;&lt;strong&gt;Abstraction&lt;/strong&gt;&lt;/em&gt; is a buzzword that refers to the level of control a language requires us to have over hardware processes.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;&lt;strong&gt;Lower Level Languages (Assembly, Machine Code, etc...)&lt;/strong&gt;&lt;/em&gt;:

&lt;ul&gt;
&lt;li&gt;Require management of hardware processes&lt;/li&gt;
&lt;li&gt;Harder to read/write&lt;/li&gt;
&lt;li&gt;Quicker to compile/execute&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;&lt;strong&gt;Higher Level Languages (Python, JS, etc...)&lt;/strong&gt;&lt;/em&gt;:

&lt;ul&gt;
&lt;li&gt;Hide hardware processes from us / abstract them away&lt;/li&gt;
&lt;li&gt;Easier to read/write&lt;/li&gt;
&lt;li&gt;Slower to compile/execute&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#statically-typed-vs-dynamically-typed-languages"&gt;
  &lt;/a&gt;
  Statically Typed vs Dynamically Typed Languages
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Types refer to a programming languages behavior in regards to &lt;em&gt;&lt;strong&gt;variables&lt;/strong&gt;&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;&lt;strong&gt;Statically typed languages&lt;/strong&gt;&lt;/em&gt;:

&lt;ul&gt;
&lt;li&gt;Require you to explicitly define the data types of variables.&lt;/li&gt;
&lt;li&gt;Do not allow the assignment of values that have a different data type than the variable.
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;int numTen = 10
str greeting = "Hello World"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;&lt;strong&gt;Dynamically typed languages&lt;/strong&gt;&lt;/em&gt;:

&lt;ul&gt;
&lt;li&gt;Infer the data type of a variable based on the data type of the value.&lt;/li&gt;
&lt;li&gt;Allow us to assign and reassign any value to any variable.
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;numTen = 10
numTen = "Hello World"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#best-programming-languages-to-learn-for-2022"&gt;
  &lt;/a&gt;
  Best Programming Languages to Learn for 2022
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;&lt;strong&gt;Entry level&lt;/strong&gt;&lt;/em&gt;: High-level Dynamically Typed Languages

&lt;ol&gt;
&lt;li&gt;JavaScript (&lt;em&gt;Web Development&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Python (&lt;em&gt;Data Science &amp;amp; A.I.&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Swift (&lt;em&gt;Mobile&lt;/em&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;&lt;strong&gt;Robotics and Gaming&lt;/strong&gt;&lt;/em&gt;: High-level Statically Typed Languages

&lt;ul&gt;
&lt;li&gt;C++&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;&lt;strong&gt;Blockchain&lt;/strong&gt;&lt;/em&gt;: High-level Statically Typed Languages

&lt;ol&gt;
&lt;li&gt;C++&lt;/li&gt;
&lt;li&gt;Solidity&lt;/li&gt;
&lt;li&gt;Go&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;&lt;strong&gt;Enterprise&lt;/strong&gt;&lt;/em&gt;: High-level Languages

&lt;ol&gt;
&lt;li&gt;Java&lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;JavaScript&lt;/li&gt;
&lt;li&gt;C++&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>beginners</category>
      <category>computerscience</category>
      <category>programming</category>
      <category>concepts</category>
    </item>
    <item>
      <title>Redux vs Context API: When to use them</title>
      <author>Tapajyoti Bose</author>
      <pubDate>Sun, 28 Nov 2021 06:01:17 +0000</pubDate>
      <link>https://dev.to/ruppysuppy/redux-vs-context-api-when-to-use-them-4k3p</link>
      <guid>https://dev.to/ruppysuppy/redux-vs-context-api-when-to-use-them-4k3p</guid>
      <description>&lt;p&gt;The simplest way to &lt;em&gt;pass data from a parent to a child&lt;/em&gt; in a &lt;strong&gt;React Application&lt;/strong&gt; is by passing it on to the child's &lt;code&gt;props&lt;/code&gt;. But an issue arises when a &lt;em&gt;deeply nested child requires data from a component higher up in the tree&lt;/em&gt;. If we pass on the data through the &lt;code&gt;props&lt;/code&gt;, &lt;em&gt;every single one of the children would be required to accept the data and pass it on to its child&lt;/em&gt;, leading to &lt;strong&gt;prop drilling&lt;/strong&gt;, a terrible practice in the world of React.&lt;/p&gt;

&lt;p&gt;To solve the &lt;strong&gt;prop drilling&lt;/strong&gt; issue, we have &lt;strong&gt;State Management Solutions&lt;/strong&gt; like &lt;strong&gt;Context API&lt;/strong&gt; and &lt;strong&gt;Redux.&lt;/strong&gt; &lt;em&gt;But which one of them is best suited for your application?&lt;/em&gt; Today we are going to answer this age-old question!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-the-context-api"&gt;
  &lt;/a&gt;
  What is the Context API?
&lt;/h1&gt;

&lt;p&gt;Let's check the official documentation:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In a typical React application, data is passed top-down (parent to child) via props, but such usage can be cumbersome for certain types of props (e.g. locale preference, UI theme) that are required by many components within an application. Context provides a way to share values like these between components without having to explicitly pass a prop through every level of the tree.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Context API&lt;/strong&gt; is a built-in &lt;strong&gt;React&lt;/strong&gt; tool that does not influence the final bundle size, and is integrated by design.&lt;/p&gt;

&lt;p&gt;To use the &lt;strong&gt;Context API&lt;/strong&gt;, you have to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create the &lt;strong&gt;Context&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;MockData&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a &lt;strong&gt;Provider&lt;/strong&gt; for the &lt;strong&gt;Context&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Parent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Provider&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;initialValue&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Children&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Context.Provider&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Consume the data in the &lt;strong&gt;Context&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Child&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;contextData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// use the data&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#so-what-is-redux"&gt;
  &lt;/a&gt;
  So What is Redux?
&lt;/h1&gt;

&lt;p&gt;Of course, let's head over to the documentation:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Redux is a predictable state container for JavaScript apps.&lt;/p&gt;

&lt;p&gt;It helps you write applications that behave consistently, run in different environments (client, server, and native), and are easy to test. On top of that, it provides a great developer experience, such as live code editing combined with a time-traveling debugger.&lt;/p&gt;

&lt;p&gt;You can use Redux together with React, or with any other view library. It is tiny (2kB, including dependencies), but has a large ecosystem of addons available.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Redux&lt;/strong&gt; is an &lt;strong&gt;Open Source Library&lt;/strong&gt; which provides a &lt;em&gt;central store&lt;/em&gt;, and &lt;em&gt;actions to modify the store&lt;/em&gt;. It can be used with any project using &lt;strong&gt;JavaScript&lt;/strong&gt; or &lt;strong&gt;TypeScript&lt;/strong&gt;, but since we are comparing it to &lt;strong&gt;Context API&lt;/strong&gt;, so we will stick to &lt;strong&gt;React-based Applications&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;To use &lt;strong&gt;Redux&lt;/strong&gt; you need to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a &lt;strong&gt;Reducer&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;CASE-1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;modifiedState01&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;CASE-2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;modifiedState02&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c1"&gt;// ...&lt;/span&gt;
        &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Combine &lt;strong&gt;Reducers&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./reducer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;combineReducers&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;redux&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rootReducer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;combineReducers&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;rootReducer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create &lt;strong&gt;Store&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;applyMiddleware&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;compose&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;createStore&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;redux&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;rootReducer&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./reducers/index&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;composeEnhancers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NODE_ENV&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;development&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__REDUX_DEVTOOLS_EXTENSION_COMPOSE__&lt;/span&gt;
        &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;compose&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createStore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;rootReducer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;composeEnhancers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;applyMiddleware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;thunk&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make the &lt;strong&gt;Store&lt;/strong&gt; available for data consumption&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Provider&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-redux&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.jsx&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./store&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Provider&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Provider&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;,
&lt;/span&gt;    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create &lt;strong&gt;Actions&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;func01&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;CASE-1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;func02&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;CASE-2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;strong&gt;State&lt;/strong&gt; or &lt;strong&gt;Dispatch Actions&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useSelector&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useDispatch&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-redux&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;func02&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;func02&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./actions/index&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useSelector&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useDispatch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;doSomething&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;func01&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* ... */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That's all &lt;em&gt;Phew!&lt;/em&gt; As you can see, &lt;strong&gt;Redux&lt;/strong&gt; requires way more work to get it set up.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#comparing-redux-amp-context-api"&gt;
  &lt;/a&gt;
  Comparing Redux &amp;amp; Context API
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Context API&lt;/th&gt;
&lt;th&gt;Redux&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Built-in tool that ships with React&lt;/td&gt;
&lt;td&gt;Additional installation Required, driving up the final bundle size&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Requires minimal Setup&lt;/td&gt;
&lt;td&gt;Requires extensive setup to integrate it with a React Application&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Specifically designed for static data, that is not often refreshed or updated&lt;/td&gt;
&lt;td&gt;Works like a charm with both static and dynamic data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Adding new contexts requires creation from scratch&lt;/td&gt;
&lt;td&gt;Easily extendible due to the ease of adding new data/actions after the initial setup&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Debugging can be hard in highly nested React Component Structure even with Dev Tool&lt;/td&gt;
&lt;td&gt;Incredibly powerful Redux Dev Tools to ease debugging&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;UI logic and State Management Logic are in the same component&lt;/td&gt;
&lt;td&gt;Better code organization with separate UI logic and State Management Logic&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;From the table, you must be able to comprehend where the popular opinion &lt;em&gt;&lt;strong&gt;Redux&lt;/strong&gt; is for large projects &amp;amp; &lt;strong&gt;Context API&lt;/strong&gt; for small ones&lt;/em&gt; come from.&lt;/p&gt;

&lt;p&gt;Both are excellent tools for their own specific niche, &lt;strong&gt;Redux&lt;/strong&gt; is overkill just to pass data from parent to child &amp;amp; &lt;strong&gt;Context API&lt;/strong&gt; truly shines in this case. When you have a lot of dynamic data &lt;strong&gt;Redux&lt;/strong&gt; got your back!&lt;/p&gt;

&lt;p&gt;So you no longer have to that guy who goes:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--au4ltTTV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/smhdsuy15m79b3r6v3yf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--au4ltTTV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/smhdsuy15m79b3r6v3yf.png" alt="meme" width="880" height="586"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h1&gt;

&lt;p&gt;In this article, we went through what is &lt;strong&gt;Redux&lt;/strong&gt; and &lt;strong&gt;Context API&lt;/strong&gt; and their differences. We learned, &lt;strong&gt;Context API&lt;/strong&gt; is a &lt;em&gt;light-weight solution&lt;/em&gt; which is more suited for &lt;em&gt;passing data from a parent to a deeply nested child&lt;/em&gt; and &lt;strong&gt;Redux&lt;/strong&gt; is a more &lt;em&gt;robust &lt;strong&gt;State Management&lt;/strong&gt; solution&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Happy Developing!&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h1&gt;

&lt;p&gt;Want to know the &lt;em&gt;Secret to Unlimited Fuel in your Motivation Tank&lt;/em&gt;? Check out my article on &lt;a href="https://tapajyotibose.medium.com/the-secret-for-unlimited-fuel-in-your-motivation-tank-704b375bc3f7"&gt;Medium&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Need a &lt;strong&gt;Top Rated Front-End Development Freelancer&lt;/strong&gt;? Contact me on &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to see what I am working on? Check out my &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am a freelancer who will start off as a &lt;strong&gt;Digital Nomad&lt;/strong&gt; in mid-2022. Want to catch the journey? Follow me on &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow my blogs for &lt;strong&gt;Weekly new Tidbits&lt;/strong&gt; on &lt;a href="https://dev.to/ruppysuppy"&gt;Dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These are a few commonly asked questions I get. So, I hope this &lt;strong&gt;FAQ&lt;/strong&gt; section solves your issues.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;I am a beginner, how should I learn Front-End Web Dev?&lt;/strong&gt;&lt;br&gt;
Look into the following articles:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/ruppysuppy/front-end-developer-roadmap-zero-to-hero-4pkf"&gt;Front End Development Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/ruppysuppy/5-projects-to-master-front-end-development-57p"&gt;Front End Project Ideas&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Would you mentor me?&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
Sorry, I am already under a lot of workload and would not have the time to mentor anyone.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Would you like to collaborate on our site?&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
As mentioned in the &lt;em&gt;previous question&lt;/em&gt;, I am in a time crunch, so I would have to pass on such opportunities.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Connect to me on&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.linkedin.com/in/tapajyoti-bose/"&gt;LinkedIn&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://tapajyoti-bose.vercel.app"&gt;Portfolio&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
      <category>redux</category>
    </item>
    <item>
      <title>Using NEW, instead of MAKE, to create slice</title>
      <author>Nitin Bansal</author>
      <pubDate>Sun, 28 Nov 2021 05:43:43 +0000</pubDate>
      <link>https://dev.to/freakynit/using-new-instead-of-make-to-create-slice-17bl</link>
      <guid>https://dev.to/freakynit/using-new-instead-of-make-to-create-slice-17bl</guid>
      <description>&lt;p&gt;As we know, slices in golang are reference types, and hence, need &lt;code&gt;make&lt;/code&gt; to initialize them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;int32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;cap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;reflect&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ValueOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Kind&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="n"&gt;slice&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But, can we use &lt;code&gt;new&lt;/code&gt; to make slices? It's meant to be used for value types only. So how can it work here?🤯&lt;/p&gt;

&lt;p&gt;Let's see&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;new&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;int32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Does this↑ work? Yes. It does. So what is the difference?&lt;/p&gt;

&lt;p&gt;The difference is that this gives you a pointer, as is the case anytime you use &lt;code&gt;new&lt;/code&gt;. Thus to actually use it, you have to dereference it everytime. &lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;new&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;int32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;cap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;reflect&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ValueOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Kind&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="n"&gt;slice&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Another simple change you can do is to dereference it immediately after creation. This will save you the effort of dereferencing it every other time.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;new&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;int32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;cap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;reflect&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ValueOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Kind&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="n"&gt;slice&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There's another important concept:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Every time you append to a slice, it gives you a new slice with a different address (though it points to same underlying array)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's see this with same example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;int32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%p&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%p&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%p&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;cap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;reflect&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ValueOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Kind&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0x116bea0&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0xc0000220e0&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0xc00001c100&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="n"&gt;slice&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You see, all 3 addresses are different.&lt;/p&gt;

&lt;p&gt;But, can we keep the addresses same even after append? Well yes!! It's here your &lt;code&gt;NEW&lt;/code&gt; approach comes into place. See this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;new&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;int32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%p&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%p&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%p&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;cap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;reflect&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ValueOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Kind&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0xc00011c030&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0xc00011c030&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0xc00011c030&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="n"&gt;slice&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You see? All 3 addresses remain same!!!&lt;/p&gt;

&lt;p&gt;That's all folks for now🤩&lt;/p&gt;

</description>
      <category>go</category>
    </item>
    <item>
      <title>Planning and Developing a Power BI Data Governance Strategy</title>
      <author>Helen Anderson</author>
      <pubDate>Sun, 28 Nov 2021 05:42:05 +0000</pubDate>
      <link>https://dev.to/helenanders26/planning-and-developing-a-power-bi-data-governance-strategy-3kdn</link>
      <guid>https://dev.to/helenanders26/planning-and-developing-a-power-bi-data-governance-strategy-3kdn</guid>
      <description>&lt;p&gt;Self-service business intelligence empowers analysts and their end-users with dashboards and insights. Anyone in the organisation can find the answers they need using common datasets without waiting for custom solutions. A &lt;a href="https://docs.microsoft.com/en-us/power-bi/guidance/powerbi-adoption-roadmap-governance"&gt;solid data governance strategy&lt;/a&gt; is necessary to ensure data is secure, and that the right controls are in place with so much freely available data.&lt;/p&gt;

&lt;p&gt;To ensure data isn’t misused, altered, or shared too widely, there are several layers of governance you can implement. From governing user roles to data source level security, you should carefully consider who has access to what and why.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;a href="#chapter-1"&gt;What is Data Governance?&lt;/a&gt;&lt;br&gt;
&lt;a href="#chapter-2"&gt;Data Controls&lt;/a&gt;&lt;br&gt;
&lt;a href="#chapter-3"&gt;Data Quality&lt;/a&gt;&lt;br&gt;
&lt;a href="#chapter-4"&gt;Data Sharing&lt;/a&gt;&lt;br&gt;
&lt;a href="#chapter-5"&gt;Further reading&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-data-governance"&gt;
  &lt;/a&gt;
  What is Data Governance?
&lt;/h2&gt;

&lt;p&gt;Data Governance refers to the management, protection, and security of a company’s &lt;a href="https://www.helenanderson.co.nz/database-modernisation/"&gt;data assets&lt;/a&gt;. However, it’s not all about red tape and rules. Having data that is easy to understand, trustworthy, easily discoverable, and reliable ensures great data quality.&lt;/p&gt;

&lt;p&gt;This strategy and the &lt;a href="https://www.helenanderson.co.nz/sql-concepts-from-a-to-z/"&gt;supporting tools&lt;/a&gt; should focus on creating opportunities to use data, rather than creating fear in making mistakes. Having the right guidelines in place helps organisations and &lt;a href="https://www.helenanderson.co.nz/designing-data-team/"&gt;teams&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reduce uncontrolled sharing of sensitive information
&lt;/li&gt;
&lt;li&gt;Enhance discoverability and increase adoption of Power BI&lt;/li&gt;
&lt;li&gt;Comply with government regulations&lt;/li&gt;
&lt;li&gt;Automate manual checks of reports by publishing processes and controls&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e9h7GuH8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2nh3eamjezrqjtlo3a4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e9h7GuH8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2nh3eamjezrqjtlo3a4.png" alt="Image description" width="880" height="375"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#data-controls"&gt;
  &lt;/a&gt;
  Data Controls
&lt;/h2&gt;

&lt;p&gt;When a process is controlled, it is monitored, observed, and any violations are detected before they have consequences. Using Power BI’s data control capabilities, everyone in an organisation can &lt;a href="https://www.helenanderson.co.nz/scoping-sessions/"&gt;discover insights&lt;/a&gt; and share them with others securely.   &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#strategies-and-tools"&gt;
  &lt;/a&gt;
  Strategies and tools:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/power-bi/admin/service-security-sensitivity-label-inheritance-from-data-sources"&gt;Sensitivity labels&lt;/a&gt; – with Power BI sensitivity labels, users can classify critical content without compromising productivity or &lt;a href="https://www.helenanderson.co.nz/team-culture/"&gt;collaboration&lt;/a&gt;. As both Power BI Desktop and Power BI Service support these features, sensitive data is protected from development to the point when it is viewed by the end user.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/power-bi/admin/service-admin-rls"&gt;Row level security&lt;/a&gt; – users of Power BI workspaces have access to all data stored within that workspace. Access can be restricted for specific users by using row-level security. For example, you can ensure users have access to only the information relevant to their department.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://powerbi.microsoft.com/en-my/blog/easily-embed-secure-power-bi-reports-in-your-internal-portals-or-websites/"&gt;Private embed codes&lt;/a&gt; – reports can be embedded in any internal website that accepts a URL or an iFrame. The website can be hosted on-premises or in the cloud, and data security is protected via row-level security. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/power-bi/admin/service-admin-auditing"&gt;Auditing and logging&lt;/a&gt; – tracking who is accessing Power BI datasets and reports can help organisations meet regulatory compliance requirements and maintain records.  Power BI administrators can analyse usage by running custom reports based on Power BI activity logs.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#data-quality"&gt;
  &lt;/a&gt;
  Data Quality
&lt;/h2&gt;

&lt;p&gt;Data quality and data governance are two distinct disciplines, but they work in parallel. Successful governance initiatives can create opportunities to improve data accuracy, completeness, and consistency.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#strategies-and-tools"&gt;
  &lt;/a&gt;
  Strategies and tools:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/power-bi/collaborate-share/service-endorse-content"&gt;Certification&lt;/a&gt; – as part of the Power BI data governance framework, one of the most important decisions is whether to use certified datasets. Dataset certification signifies the quality of the data, the accuracy of the measures, and the agreement on the business logic.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/power-bi/collaborate-share/service-new-workspaces"&gt;Limit workspace creation&lt;/a&gt; – workspace creation should be governed by a policy that stipulates when, why, and how workspaces are created. The best approach is to base your decisions on policy and to be transparent about how permissions are granted.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/power-bi/collaborate-share/service-data-lineage"&gt;Data lineage view&lt;/a&gt; – keeping track of how data flows from the source to the destination can be challenging. Reports that are built from &lt;a href="https://www.helenanderson.co.nz/powerbi-transformation/"&gt;multiple data sources&lt;/a&gt; and have dependencies are even more challenging. With Power BI’s lineage view, you can identify reports that haven’t been refreshed and initiate a refresh from a friendly interface.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://sqlbits.com/Sessions/Event12/Fasten_Seat_Belt_and_look_at_the_Data_Steward"&gt;Data stewards with clearly defined roles&lt;/a&gt; – in order to make informed decisions about data, we must &lt;a href="https://www.helenanderson.co.nz/successful-projects/"&gt;communicate&lt;/a&gt; its meaning and its use within the organisation. &lt;a href="https://www.bizdata.com.au/blogpost.php?p=what-is-data-stewardship"&gt;Data Stewards&lt;/a&gt; are responsible for managing their datasets and answering questions when they arise.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#data-sharing"&gt;
  &lt;/a&gt;
  Data Sharing
&lt;/h2&gt;

&lt;p&gt;It is much easier to collaborate when teams have access to all the governed datasets and reports they require. Using Power BI workspaces, teams can work together on dashboards, reports, datasets, and workbooks.&lt;/p&gt;

&lt;p&gt;It should be considered whether data can be &lt;a href="https://www.helenanderson.co.nz/analytics-platform-risk/"&gt;shared externally&lt;/a&gt;. Depending on the organisation, guidelines may address how data is shared, the level of specificity in reporting, and when access to data should be revoked.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#strategies-and-tools"&gt;
  &lt;/a&gt;
  Strategies and tools:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/power-bi/consumer/end-user-workspaces"&gt;Collaboration through workspaces&lt;/a&gt; – workspaces should be set up for each team, project, or subject matter and collaborators can be invited in when required. There is no need to create a workspace for every report or dataset.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/power-bi/consumer/end-user-apps"&gt;Distribution through apps&lt;/a&gt; – Power BI content is best shared with end-users through apps. Apps can include dataflows, datasets, reports, paginated reports, and dashboards. End-users see what has been distributed rather than everything in a workspace.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://radacad.com/power-bi-sharing-methods-comparison-all-in-one-review"&gt;External sharing strategy&lt;/a&gt; – sharing is the simplest way to give outside users access to your reports and dashboards. Having a strategy in place is crucial to ensuring that everyone understands what can and cannot be shared, as well as where they can get advice.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/power-bi/guidance/powerbi-adoption-roadmap-community-of-practice"&gt;Power BI champions&lt;/a&gt; – a Power BI champion is a content creator recognised by their peers as the go-to Power BI expert. They share knowledge and help their colleagues by providing solutions, troubleshooting, and staying up to date with the data governance strategy.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Whether Power BI is used for self-service, enterprise BI, or both, governance is an important part of the implementation. Many organisations try to implement Power BI without thinking about governance and then face the challenge of trying to change users’ habits in order to force them to use processes they feel will impede their progress. It doesn’t matter if your organisation is just beginning its Power BI journey, or if it has already entered the “Wild West”, governance is an important and necessary component of all Power BI implementations.&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further reading
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/power-bi/guidance/powerbi-adoption-roadmap-overview"&gt;Power BI adoption roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/power-bi/admin/service-admin-governance"&gt;Governance and deployment approaches&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#read-more"&gt;
  &lt;/a&gt;
  Read more
&lt;/h2&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/ronsoak" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KSi--unr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--wsKbBV0L--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/141003/2e555ee4-0ec3-4fc3-abf7-bcd45e2e069c.jpeg" alt="ronsoak"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ronsoak/get-serious-about-data-governance-now-or-it-will-cost-all-of-us-in-the-future-4jdb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Get serious about Data Governance now, or it will cost ALL of us in the future.&lt;/h2&gt;
      &lt;h3&gt;ronsoak  ・ Jun 2 '19 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#data&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#governance&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#privacy&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#security&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/helenanders26" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nDlJ2gv9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--HjGs-_-t--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/22532/48443e4d-9075-4869-9df7-122522595b71.jpeg" alt="helenanders26"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/helenanders26/mitigating-risk-when-implementing-an-analytics-platform-pih" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Mitigating risk when implementing an analytics platform&lt;/h2&gt;
      &lt;h3&gt;Helen Anderson ・ Jul 31 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#analytics&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#projectmanagement&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#riskmanagement&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>data</category>
      <category>governance</category>
      <category>privacy</category>
      <category>powerbi</category>
    </item>
    <item>
      <title>Why I choose NextJS over CRA for new projects</title>
      <author>Andrew Lee</author>
      <pubDate>Sun, 28 Nov 2021 05:34:04 +0000</pubDate>
      <link>https://dev.to/andyrewlee/why-i-choose-nextjs-over-cra-for-new-projects-3f77</link>
      <guid>https://dev.to/andyrewlee/why-i-choose-nextjs-over-cra-for-new-projects-3f77</guid>
      <description>&lt;p&gt;I used to use &lt;a href="https://reactjs.org/docs/create-a-new-react-app.html"&gt;Create React App (CRA)&lt;/a&gt; for building new applications (i.e. &lt;a href=""&gt;app.example.com&lt;/a&gt;). For landing pages, however, I would use &lt;a href="https://nextjs.org/"&gt;NextJS&lt;/a&gt; for better SEO (i.e. &lt;a href=""&gt;www.example.com&lt;/a&gt;). Nowadays I will exclusively use NextJS over CRA when starting new applications for the following three reasons.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reason-1-monolith"&gt;
  &lt;/a&gt;
  Reason 1: Monolith
&lt;/h2&gt;

&lt;p&gt;When starting a new application, the main goal is to find product market fit. This means reducing distractions. With Create React App, we might need to build three different applications to test out our idea (Client App, Landing Page, API). With NextJS, we only need to build one app to test out our idea.&lt;/p&gt;

&lt;p&gt;NextJS allows us to build our landing page, application, and API server all in a monolith. We can write backend routes that interact with a database inside of the &lt;code&gt;api/&lt;/code&gt; directory, server side render pages that is important to SEO, and also render things in the client side if necessary.&lt;/p&gt;

&lt;p&gt;I want to build a monolith when kickstarting an app without compromising SEO. NextJS is the only tool that allows me to do that so that I can focus on solving problems for customers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reason-2-performance"&gt;
  &lt;/a&gt;
  Reason 2: Performance
&lt;/h2&gt;

&lt;p&gt;Google ranks websites with better performance higher in search results. Therefore some say only use NextJS when SEO matters...but it's hard for me to think of a reason why we would not want better performance and SEO regardless of the application. Why sacrifice on SEO when we don't have to? NextJS gives us the best of both worlds; we can decide when to server side render and when to client side render. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reason-3-ecosystem"&gt;
  &lt;/a&gt;
  Reason 3: Ecosystem
&lt;/h2&gt;

&lt;p&gt;By using NextJS, we expose ourselves to not only the React ecosystem but also the Vercel ecosystem. Vercel provides us with an easy way to deploy our NextJS application and take advantage of serverless. I am very excited to see Vercel build upon their &lt;a href="https://vercel.com/features/edge-functions"&gt;edge functions&lt;/a&gt; to provide an end to end development platform for JavaScript engineers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I reach for NextJS when starting any new application because it allows me to build a monolith using a mature framework to validate business ideas without sacrificing on performance.&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Create stunning profile card || HTML &amp; CSS 👌👌</title>
      <author>Femil Savaliya</author>
      <pubDate>Sun, 28 Nov 2021 05:12:00 +0000</pubDate>
      <link>https://dev.to/femil/create-stunning-profile-card-html-css-4j0f</link>
      <guid>https://dev.to/femil/create-stunning-profile-card-html-css-4j0f</guid>
      <description>&lt;p&gt;In this blog i coverd how you can make &lt;b&gt;amazing&lt;/b&gt; and &lt;b&gt;stunning&lt;/b&gt; profile card.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WH_mPINy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/giyyf7nmfof893lu0ee9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WH_mPINy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/giyyf7nmfof893lu0ee9.png" alt="Profile Card" width="402" height="525"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use this card to showcase your skills and share your social network for contact.  &lt;/p&gt;

&lt;p&gt;No need to take a cup of coffee or tea it takes two minutes like Meggie :)&lt;/p&gt;




&lt;p&gt;Let's design,&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#folder-structure"&gt;
  &lt;/a&gt;
  Folder Structure
&lt;/h3&gt;

&lt;dl&gt;
  &lt;dt&gt;Profile Card&lt;/dt&gt;
  &lt;dd&gt;- index.html&lt;/dd&gt;
  &lt;dd&gt;- style.css&lt;/dd&gt;
&lt;/dl&gt;




&lt;h2&gt;
  &lt;a href="#1html"&gt;
  &lt;/a&gt;
  1.HTML
&lt;/h2&gt;

&lt;p&gt;Add this code into your &lt;code&gt;index.html&lt;/code&gt; file, change name, &lt;code&gt;img&lt;/code&gt; and &lt;code&gt;links&lt;/code&gt; and other stuff according to your preferences&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Page Title&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.googleapis.com/css2?family=Varela+Round&amp;amp;display=swap"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"main-container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icons"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://codepen.io/Femil_32/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fa fa-dribbble"&lt;/span&gt; &lt;span class="na"&gt;aria-hidden=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://www.instagram.com/femil_32/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fa fa-instagram"&lt;/span&gt; &lt;span class="na"&gt;aria-hidden=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://codepen.io/Femil_32/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fa fa-twitter"&lt;/span&gt; &lt;span class="na"&gt;aria-hidden=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"layer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;h4&amp;gt;&lt;/span&gt;Femil Savaliya&lt;span class="nt"&gt;&amp;lt;/h4&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Web designer&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"skill"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fab fa-html5"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fab fa-css3-alt"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fab fa-js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fab fa-react"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#2css"&gt;
  &lt;/a&gt;
  2.CSS
&lt;/h2&gt;

&lt;p&gt;Now time to give awesome look to our &lt;code&gt;HTML&lt;/code&gt; skeleton, add the below style in your &lt;code&gt;style.css&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.main-container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;400px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;.2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
   &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.main-container&lt;/span&gt;&lt;span class="nd"&gt;::before&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="sx"&gt;url("https://images.unsplash.com/photo-1552562739-152fee1f81f3?ixid=MXwxMjA3fDB8MHxzZWFyY2h8Njd8fG1hbGUlMjBwb3J0cmFpdCUyMGJsYWNrJTIwYW5kJTIwd2hpdGV8ZW58MHx8MHw%3D&amp;amp;ixlib=rb-1.2.1&amp;amp;auto=format&amp;amp;fit=crop&amp;amp;w=1100&amp;amp;q=60")&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;.7s&lt;/span&gt; &lt;span class="n"&gt;cubic-bezier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;.46&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1.48&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;.18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;.81&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.icons&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;-30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;130px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;150px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;list-style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;space-around&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;perspective&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;2px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;rotateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-100deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform-origin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transition-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;.3s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transition-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;.2s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transition-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;.1s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;43px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;1.4rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#EA4C89&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#dd2a7b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#1DA1F2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.layer&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;150px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nc"&gt;.layer&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;.7s&lt;/span&gt; &lt;span class="n"&gt;cubic-bezier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;.46&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1.48&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;.18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;.81&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.text&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;.6rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Varela Round'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.text&lt;/span&gt; &lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#bfbfbf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.skill&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;1.7rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.fab&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.fab&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#E34F26&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.fab&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#1572B6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.fab&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#f7df1e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.fab&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;4&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#61DAFB&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.main-container&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="nc"&gt;.layer&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.main-container&lt;/span&gt;&lt;span class="nd"&gt;:hover:before&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.main-container&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;  &lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;rotateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#3result"&gt;
  &lt;/a&gt;
  3.RESULT
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codepen.io/Femil_32/pen/ZEXzeNq"&gt;Demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FV95NM5g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rnwkgalsny9gf5mlr24g.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FV95NM5g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rnwkgalsny9gf5mlr24g.gif" alt="Profile Card" width="200" height="253"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Drop your thought in the comment section below and Thank you for reading ❤❤&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>design</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to fix phpMyAdmin “Login without a password is forbidden by configuration” error?</title>
      <author>Devtonight</author>
      <pubDate>Sun, 28 Nov 2021 05:08:31 +0000</pubDate>
      <link>https://dev.to/devtonight/how-to-fix-phpmyadmin-login-without-a-password-is-forbidden-by-configuration-error-19mn</link>
      <guid>https://dev.to/devtonight/how-to-fix-phpmyadmin-login-without-a-password-is-forbidden-by-configuration-error-19mn</guid>
      <description>&lt;p&gt;This is a security measure implemented by phpMyAdmin to block blank password logins. But we can easily disable it by changing the configuration file of phpMyAdmin. Enter the following command in the terminal, it will open the configuration file of phpMyAdmin with a terminal-based text editor, called Nano.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo nano /etc/phpmyadmin/config.inc.php
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, press &lt;code&gt;Ctrl + w&lt;/code&gt;. Search for “AllowNoPassword” (without quotes). Then the cursor will be on the required line, uncomment that line by removing the &lt;code&gt;//&lt;/code&gt; of that line. Now that line should be like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$cfg['Servers'][$i]['AllowNoPassword'] = TRUE;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Press &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;o&lt;/code&gt; and press the enter key to save the phpMyAdmin configuration file. Then press &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;x&lt;/code&gt; to exit from the Nano text editor.&lt;/p&gt;

&lt;p&gt;Go &lt;a href="http://localhost/phpmyadmin"&gt;http://localhost/phpmyadmin&lt;/a&gt; and try again to log in. Perhaps, still, you might not be able to log in due to the default MySQL Unix Socket based authentication. You might get a new error called "mysqli_real_connect(): (HY000/1698): Access denied for user ‘root’@'localhost'. Under such a case, read &lt;a href="https://devtonight.com/questions/how-to-fix-mysqli-real-connect-hy0001698-access-denied-for-user-root-at-localhost-error"&gt;how to fix mysqli_real_connect(): (HY000/1698): Access denied for user ‘root’@'localhost' error&lt;/a&gt; question which explains how to fix it.&lt;/p&gt;

</description>
      <category>phpmyadmin</category>
      <category>pma</category>
      <category>mysql</category>
      <category>errors</category>
    </item>
  </channel>
</rss>
