<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to use the JavaScript startsWith() method?</title>
      <author>hrishikesh1990</author>
      <pubDate>Wed, 20 Oct 2021 12:38:17 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/how-to-use-the-javascript-startswith-method-2e4h</link>
      <guid>https://dev.to/hrishikesh1990/how-to-use-the-javascript-startswith-method-2e4h</guid>
      <description>&lt;p&gt;In this short tutorial, we look at how to use the JavaScript startsWith method. We break down the code with an example to help you understand the concept better.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents-javascript-startswith"&gt;
  &lt;/a&gt;
  Table of Contents - JavaScript startsWith():
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-does-startswith-do-in-javascript"&gt;What does startsWith do in JavaScript?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#code-and-explanation"&gt;Code and Explanation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#closing-thoughts-javascript-startswith"&gt;Closing thoughts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-does-startswith-do-in-javascript"&gt;
  &lt;/a&gt;
  What does startsWith do in JavaScript?
&lt;/h2&gt;

&lt;p&gt;The JavaScript startsWith method is used to determine whether a string starts with a character or a particular string. The method returns a boolean true in case the string starts with the specified characters.&lt;/p&gt;

&lt;p&gt;This method is commonly used to check if the entered string contains a substring. Although there are other methods that can be used to find substrings, the startsWith() method is specifically used to check the start of a string.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;SearchString&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;SearchString - Required, the character/ string to search&lt;/li&gt;
&lt;li&gt;Position - Optional, used to specify the position to begin the search
### Return Value:
The method returns a boolean true if it finds the SearchString and false if it doesn’t.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#code-and-explanation"&gt;
  &lt;/a&gt;
  Code and Explanation:
&lt;/h2&gt;

&lt;p&gt;In this section, we look at the implementation of the startsWith method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;str_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Join our freelancer community&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str_1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Join&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// Output: true&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str_1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Join&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// Output: false&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str_1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;our&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// Output: true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code, the first statement returns true as the string begins with ‘Join”. However, in the second statement, we have passed a position argument. Hence the startsWith operator starts searching from the 3 index and returns a false.&lt;/p&gt;

&lt;p&gt;Similarly, the last statement returns true as ‘our’ start’s in the 5th index.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts-javascript-startswith"&gt;
  &lt;/a&gt;
  Closing thoughts - JavaScript startsWith:
&lt;/h2&gt;

&lt;p&gt;A major caveat while using the startsWith method is that it is case-sensitive. Unlike the includes() method in JavaScript, the startsWith method is used specifically to find if a string starts with a string.&lt;/p&gt;

&lt;p&gt;However, in case you are just looking to find a substring, I would recommend using the includes() method.&lt;/p&gt;

&lt;p&gt;Once you are done practicing using the startsWith methods you can try the endsWith method.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Day 12 of 100 Days of Code &amp; Scrum: Leadership Styles and GraphQL Server</title>
      <author>Rammina</author>
      <pubDate>Wed, 20 Oct 2021 12:23:32 +0000</pubDate>
      <link>https://dev.to/rammina/day-12-of-100-days-of-code-scrum-leadership-styles-and-graphql-server-5fi</link>
      <guid>https://dev.to/rammina/day-12-of-100-days-of-code-scrum-leadership-styles-and-graphql-server-5fi</guid>
      <description>&lt;p&gt;&lt;small&gt;&lt;cite&gt;Image by &lt;a href="https://pixabay.com/users/fahribaabdullah14-19581918/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=5842784"&gt;fahribaabdullah14&lt;/a&gt; from &lt;a href="https://pixabay.com/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=5842784"&gt;Pixabay&lt;/a&gt;&lt;/cite&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Good day, everyone!&lt;/p&gt;

&lt;p&gt;Today was actually a productive day for me. I managed to study a lot of Scrum and GraphQL, continued to work on writing my Scrum article, and reached out to multiple people to expand my network. Oh, and I also made my own &lt;a href="https://twitter.com/RamminaR"&gt;Twitter profile&lt;/a&gt;, which I didn't customize yet.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I finished the draft of the Scrum Team section of my Scrum Guide for beginners, and I also reviewed GraphQL's basic concepts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here are the things I've learned and done today:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LAj_DOKy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bsfcdf2prgsn1atq7xg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LAj_DOKy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bsfcdf2prgsn1atq7xg.png" alt="Leadership Styles"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;read up on different leadership styles and how Scrum Masters are true servant leaders and not authoritative managers.&lt;/li&gt;
&lt;li&gt;added Scrum Master subsection for my Scrum Guide.&lt;/li&gt;
&lt;li&gt;added Scrum Artifacts section.&lt;/li&gt;
&lt;li&gt;did some practice quiz questions about Scrum.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#graphql"&gt;
  &lt;/a&gt;
  GraphQL
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;started learning about GraphQL server-side.&lt;/li&gt;
&lt;li&gt;read about GraphQL &lt;code&gt;schemas&lt;/code&gt;, &lt;code&gt;type definitions&lt;/code&gt;, and &lt;code&gt;resolver functions&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;learned about GraphQL server's network layer.&lt;/li&gt;
&lt;li&gt;read an introduction to GraphQL server libraries such as &lt;code&gt;express-graphql&lt;/code&gt;, &lt;code&gt;apollo-server&lt;/code&gt;, and &lt;code&gt;graphql-yoga&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;look deeper into how GraphQL differs from REST API, and which scenarios one should be used over the other.&lt;/li&gt;
&lt;li&gt;review concepts I've learned last week.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D08cg42f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7y5nn4tys4z6avy1x2aw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D08cg42f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7y5nn4tys4z6avy1x2aw.png" alt="Leadership Without Authority"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope everyone's doing great! Thank you for reading!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.prisma.io/blog/graphql-server-basics-the-schema-ac5e2950214e"&gt;GraphQL Server Basics: GraphQL Schemas, TypeDefs &amp;amp; Resolvers Explained&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.prisma.io/blog/graphql-server-basics-the-network-layer-51d97d21861"&gt;GraphQL Server Basics: The Network Layer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.apollographql.com/docs/"&gt;Apollo Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/chingu/a-short-introduction-to-the-scrum-methodology-7a23431b9f17"&gt;A Short Introduction to the Scrum Framework by Jim Medlock&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Managing a small developer team first time in foreign country</title>
      <author>Little Boss</author>
      <pubDate>Wed, 20 Oct 2021 12:17:10 +0000</pubDate>
      <link>https://dev.to/littleboss/managing-a-small-developer-team-first-time-in-foreign-country-3lem</link>
      <guid>https://dev.to/littleboss/managing-a-small-developer-team-first-time-in-foreign-country-3lem</guid>
      <description>&lt;p&gt;In the near future it may happen that I will have to start a developer branch for my company in a foreign country. I have immigrated from the country, so I know the language and the culture.&lt;/p&gt;

&lt;p&gt;I am a developer with 5 years experience. I have really good social skills and I am already responsible for training new guys in the office. But our team in the office is small (4 developers).&lt;/p&gt;

&lt;p&gt;I would say that I am very good with people and I know very well when is the time to be "friend-like" or "boss-like" with people. I am also really excited about this new huge project.&lt;/p&gt;

&lt;p&gt;I will be responsible for the people there and the goal is to make the people part if our company, part of the family. They should not feel like cheap foreigners who do our work. I will be visiting the branch multiple times a year. There will be a budget for teambuilding events and holidays. We also will pay a good salary&lt;a href="https://www.linkedin.com/in/nightmarketing/"&gt;,&lt;/a&gt; which is way above average for the locals there. I hope you get the idea. They should feel like part of the team.&lt;/p&gt;

&lt;p&gt;I need ideas on how to fulfill this.&lt;/p&gt;

&lt;p&gt;Also, this time it is a real management job, so any input on how to manage an IT team is welcome. I am currently in the process to plan everything. What should I look for? What tools should I use?&lt;/p&gt;

&lt;p&gt;Right now I think what would be good:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Daily meetings (1 hour~) when I am not there via Microsoft Teams (this way I can participate each day and also control the work). I know it will eat worktime each day, but I am sure its worth it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Via GitHub I should be able to see that everyone works and does something. I am worried about beeing scamed&lt;a href="https://www.bark.com/en/gb/company/mate-logo/LR6q9/"&gt;,&lt;/a&gt; for example: the guys we hire outsource their work again to fiverr or somewhere else. But I am sure I would notice this when checking the code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The hardest part is to find the right people for the team. So the hiring process is really important. Right now what I think:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Find someone online and schedule the first meeting online to get to know the person and whether the "chemistry" fits.&lt;/p&gt;

&lt;p&gt;Give them a task to test their programming skills. I know there are some online tools for this (maybe someone can share their experiences with them). In my opinion asking people to write pointless functions is not the way to go. I would prepare a bigger task/project, for example: Create a laravel app with a user login and dashboard and some additional features.&lt;/p&gt;

&lt;p&gt;Now I know good programmers who know the worth of their time would just decline (at least thats what I would do). So I would probably pay a small amount for this test project, so their time is not completely wasted, what do you think about this idea?&lt;/p&gt;

&lt;p&gt;Last step would be to meet in person for the last interview.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I know there are some best practices for management like scrum or agile development. We have never used this in my current place, is it worth to learn it?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I would love to hear your input/ideas/experiences!&lt;/p&gt;

</description>
      <category>php</category>
      <category>programming</category>
      <category>python</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What are the Prime Features of a Medical App?</title>
      <author>Chris Morris</author>
      <pubDate>Wed, 20 Oct 2021 12:15:04 +0000</pubDate>
      <link>https://dev.to/morrisschriss/what-are-the-prime-features-of-a-medical-app-i41</link>
      <guid>https://dev.to/morrisschriss/what-are-the-prime-features-of-a-medical-app-i41</guid>
      <description>&lt;p&gt;Medical care suppliers have put outrageous accentuation on digitizing care conveyance after the flare-up of the novel Covid. A significant explanation being, the weight medical care associations have begun looking with their innovation engineering, system, labor force, and cycles, says Accenture Digital Health Technology Vision 2021. A similar report additionally focused on that almost 100% of medical services chiefs have voiced a similar test.&lt;/p&gt;

&lt;p&gt;Tolerating the mechanical administration, almost 66% of the leaders are wanting to change to the computerized stage in the following year. While a larger part of 96% will go through similar change in the impending three years.&lt;/p&gt;

&lt;p&gt;According to a Digital Health Report by Accenture, nearly 89% of healthcare consumers trusted their providers to store their healthcare data physically. This is because healthcare providers are bound by privacy and security standards to protect patient data that is stored and shared via electronic medium.&lt;/p&gt;

&lt;p&gt;Then again, patients have been requesting a reasonable perspective on their medical services complexities. &lt;a href="https://www2.deloitte.com/us/en/pages/life-sciences-and-health-care/articles/center-for-health-solutions-us-survey-of-employers-on-health-care-system.html"&gt;Deloitte&lt;/a&gt; 2013 Survey of U.S. Medical services Consumers say that almost:&lt;/p&gt;

&lt;p&gt;62% of buyers utilized a versatile or web application to investigate and settle on better treatment choices&lt;/p&gt;

&lt;p&gt;62% of them have messaged or sent their wellbeing worries to their Providers&lt;/p&gt;

&lt;p&gt;52% have gone through counsel over a video call&lt;/p&gt;

&lt;p&gt;The interest has expanded as the year passed. Presently, 26% of purchasers will switch suppliers just to acquire a superior advanced consideration experience, says Accenture 2020 Digital Health Consumer Survey. Besides, a similar report says, 39% of suppliers accept that a decent computerized collaboration speeds up persistent experience.&lt;/p&gt;

&lt;p&gt;What are the Prime Features of a Medical App? &lt;/p&gt;

&lt;p&gt;The accommodation of utilizing a clinical application comes from its elements. Thus, during versatile clinical application advancement, you should ensure that your designers or &lt;a href="https://www.cronj.com/healthcare-development/medical-app-development"&gt;medical mobile app development&lt;/a&gt; put the accompanying provisions in your clinical application! &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Electronic clinical record openness &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Arrangement planning and rescheduling &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Arrangement the board &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lab test result openness &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Medicine and arrangement notices &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Medication requesting and topping off &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sharing, gathering, and putting away clinical reports &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Specialist profile and certifications accessibility &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Virtual counsel and care convey &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Geo-area following &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wellbeing checking and following &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Medical care instructive substance attainable quality&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>app</category>
      <category>development</category>
    </item>
    <item>
      <title>Blue / Green Deployments on AWS | AWS White Paper Summary</title>
      <author>Salah Elhossiny</author>
      <pubDate>Wed, 20 Oct 2021 12:10:10 +0000</pubDate>
      <link>https://dev.to/awsmenacommunity/blue-green-deployments-on-aws-aws-white-paper-summary-2192</link>
      <guid>https://dev.to/awsmenacommunity/blue-green-deployments-on-aws-aws-white-paper-summary-2192</guid>
      <description>&lt;ul&gt;
&lt;li&gt;The blue/green deployment technique enables you to release applications by shifting traffic between two identical environments that are running different versions of the application. &lt;/li&gt;
&lt;li&gt;Blue/green deployments can mitigate common risks associated with deploying software, such as downtime and rollback capability. &lt;/li&gt;
&lt;li&gt;This whitepaper provides an overview of the blue/green deployment methodology and describes techniques customers can implement using Amazon Web Services (AWS) services and tools. &lt;/li&gt;
&lt;li&gt;It also addresses considerations around the data tier, which is an important component of most applications.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#bluegreen-deployment-methodology"&gt;
  &lt;/a&gt;
  Blue/Green Deployment Methodology
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Blue/green deployments provide releases with near zero-downtime and rollback capabilities. &lt;/li&gt;
&lt;li&gt;&lt;p&gt;The fundamental idea behind blue/green deployment is to shift traffic between two identical environments that are running different versions of your application. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The blue environment represents the current application version serving production traffic. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In parallel, the green environment is staged running a different version of your application. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After the green environment is ready and tested, production traffic is redirected from blue to green. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If any problems are identified, you can roll back by reverting traffic back to the blue environment.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-bluegreen"&gt;
  &lt;/a&gt;
  Benefits of Blue/Green
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;After you deploy the green environment, you have the opportunity to validate it. &lt;/li&gt;
&lt;li&gt;You might do that with test traffic before sending production traffic to the green environment, or by using a very small fraction of production traffic, to better reflect real user traffic. &lt;/li&gt;
&lt;li&gt;This is called canary analysis or canary testing. &lt;/li&gt;
&lt;li&gt;If you discover the green environment is not operating as expected, there is no impact on the blue environment. &lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can route traffic back to it, minimizing impaired operation or downtime and limiting the blast radius of impact.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This ability to simply roll traffic back to the operational environment is a key benefit of blue/green deployments. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can roll back to the blue environment at any time during the deployment process. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Impaired operation or downtime is minimized because impact is limited to the window of time between green environment issue detection and shift of traffic back to the blue environment. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Additionally, impact is limited to the portion of traffic going to the green environment, not all traffic. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If the blast radius of deployment errors is reduced, so is the overall deployment risk. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Blue/green deployments also work well with continuous integration and continuous deployment (CI/CD) workflows, in many cases limiting their complexity. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Your deployment automation has to consider fewer dependencies on an existing environment, state, or configuration as your new green environment gets launched onto an entirely new set of resources.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#define-the-environment-boundary"&gt;
  &lt;/a&gt;
  Define the Environment Boundary
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;When planning for blue/green deployments, you have to think about your environment boundary, where have things changed and what needs to be deployed to make those changes live. &lt;/li&gt;
&lt;li&gt;The scope of your environment is influenced by a number of factors: &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Application architecture: Dependencies, loosely/tightly coupled&lt;/p&gt;

&lt;p&gt;Organization: Speed and number of iterations&lt;/p&gt;

&lt;p&gt;Risk and complexity: Blast radius and impact of failed deployment&lt;/p&gt;

&lt;p&gt;People: Expertise of teams&lt;/p&gt;

&lt;p&gt;Process: Testing/QA, rollback capability&lt;/p&gt;

&lt;p&gt;Cost: Operating budgets, additional resources&lt;/p&gt;

&lt;p&gt;For example, organizations operating applications that are based on the microservices architecture pattern could have smaller environment boundaries because of the loose coupling and well-defined interfaces between the individual services. &lt;/p&gt;

&lt;p&gt;Organizations running legacy, monolithic apps can still leverage blue/green deployments, but the environment scope can be wider and the testing more extensive. &lt;/p&gt;

&lt;p&gt;Regardless of the environment boundary, you should make use of automation wherever you can to streamline the process, reduce human error, and control your costs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#services-for-bluegreen-deployments"&gt;
  &lt;/a&gt;
  Services for blue/green deployments
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Amazon Route 53&lt;/li&gt;
&lt;li&gt;Elastic Load Balancing&lt;/li&gt;
&lt;li&gt;Auto Scaling&lt;/li&gt;
&lt;li&gt;AWS Elastic Beanstalk&lt;/li&gt;
&lt;li&gt;AWS OpsWorks&lt;/li&gt;
&lt;li&gt;AWS Cloudformation&lt;/li&gt;
&lt;li&gt;Amazon CloudWatch&lt;/li&gt;
&lt;li&gt;AWS CodeDeploy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are three ways traffic can be shifted during a deployment on Amazon Elastic Container Services (Amazon ECS).&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Canary – Traffic is shifted in two increments.&lt;/li&gt;
&lt;li&gt;Linear – Traffic is shifted in equal increments.&lt;/li&gt;
&lt;li&gt;All-at-once – All traffic is shifted to the updated tasks.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#aws-lambda-hooks"&gt;
  &lt;/a&gt;
  AWS Lambda Hooks
&lt;/h3&gt;

&lt;p&gt;With AWS Lambda hooks, CodeDeploy can call the Lambda function during the various lifecycle events including deployment of ECS, Lambda function deployment, and EC2/On-premise deployment. The hooks are helpful in creating a deployment workflow for your apps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementation-techniques"&gt;
  &lt;/a&gt;
  Implementation Techniques
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The following techniques are examples of how you can implement blue/green on AWS. &lt;/li&gt;
&lt;li&gt;While AWS highlights specific services in each technique, you may have other services or tools to implement the same pattern. &lt;/li&gt;
&lt;li&gt;Choose the appropriate technique based on the existing architecture, the nature of the application, and the goals for software deployment in your organization. - Experiment as much as possible to gain experience for your environment and to understand how the different deployment risk factors affect your specific workload.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#update-dns-routing-with-amazon-route-53"&gt;
  &lt;/a&gt;
  Update DNS Routing with Amazon Route 53
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;DNS routing through record updates is a common approach to blue/green deployments. &lt;/li&gt;
&lt;li&gt;DNS is used as a mechanism for switching traffic from the blue environment to the green and vice versa when rollback is necessary. &lt;/li&gt;
&lt;li&gt;&lt;p&gt;This approach works with a wide variety of environment configurations, as long as you can express the endpoint into the environment as a DNS name or IP address.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Within AWS, this technique applies to environments that are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Single instances, with a public or Elastic IP address&lt;/li&gt;
&lt;li&gt;Groups of instances behind an Elastic Load Balancing load balancer, or third-party load balancer&lt;/li&gt;
&lt;li&gt;Instances in an Auto Scaling group with an Elastic Load Balancing load balancer as the front end&lt;/li&gt;
&lt;li&gt;Services running on an Amazon Elastic Container Service (Amazon ECS) cluster fronted by an Elastic Load Balancing load balancer&lt;/li&gt;
&lt;li&gt;Elastic Beanstalk environment web tiers&lt;/li&gt;
&lt;li&gt;Other configurations that expose an IP or DNS endpoint&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can shift traffic all at once or you can do a weighted distribution. For weighted distribution with Amazon Route 53, you can define a percentage of traffic to go to the green environment and gradually update the weights until the green environment carries the full production traffic. &lt;/p&gt;

&lt;p&gt;This provides the ability to perform canary analysis where a small percentage of production traffic is introduced to a new environment. You can test the new code and monitor for errors, limiting the blast radius if any issues are encountered. It also allows the green environment to scale out to support the full production load if you’re using Elastic Load Balancing(ELB), for example. ELB automatically scales its request-handling capacity to meet the inbound application traffic; the process of scaling isn’t instant, so we recommend that you test, observe, and understand your traffic patterns. Load balancers can also be pre-warmed (configured for optimum capacity) through a support request.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#swap-the-auto-scaling-group-behind-the-elastic-load-balancer"&gt;
  &lt;/a&gt;
  Swap the Auto Scaling Group Behind the Elastic Load Balancer
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;If DNS complexities are prohibitive, consider using load balancing for traffic management to your blue and green environments. &lt;/li&gt;
&lt;li&gt;This technique uses Auto Scaling to manage the EC2 resources for your blue and green environments, scaling up or down based on actual demand. &lt;/li&gt;
&lt;li&gt;You can also control the Auto Scaling group size by updating your maximum desired instance counts for your particular group.&lt;/li&gt;
&lt;li&gt;Auto Scaling also integrates with Elastic Load Balancing (ELB), so any new instances are automatically added to the load balancing pool if they pass the health checks governed by the load balancer. &lt;/li&gt;
&lt;li&gt;ELB tests the health of your registered EC2 instances with a simple ping or a more sophisticated connection attempt or request. &lt;/li&gt;
&lt;li&gt;Health checks occur at configurable intervals and have defined thresholds to determine whether an instance is identified as healthy or unhealthy. &lt;/li&gt;
&lt;li&gt;For example, you could have an ELB health check policy that pings port 80 every 20 seconds and, after passing a threshold of 10 successful pings, health check will report the instance as being InService. &lt;/li&gt;
&lt;li&gt;If enough ping requests time out, then the instance is reported to be OutofService&lt;/li&gt;
&lt;li&gt;As you scale up the green Auto Scaling group, you can take blue Auto Scaling group instances out of service by either terminating them or putting them in Standby state.&lt;/li&gt;
&lt;li&gt;Standby is a good option because if you need to roll back to the blue environment, you only have to put your blue server instances back in service and they're ready to go. &lt;/li&gt;
&lt;li&gt;As soon as the green group is scaled up without issues, you can decommission the blue group by adjusting the group size to zero. &lt;/li&gt;
&lt;li&gt;If you need to roll back, detach the load balancer from the green group or reduce the group size of the green group to zero.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#update-auto-scaling-group-launch-configurations"&gt;
  &lt;/a&gt;
  Update Auto Scaling Group launch configurations
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A launch configuration contains information like the Amazon Machine Image (AMI) ID, instance type, key pair, one or more security groups, and a block device mapping. &lt;/li&gt;
&lt;li&gt;Auto Scaling groups have their own launch configurations. You can associate only one launch configuration with an Auto Scaling group at a time, and it can’t be modified after you create it. &lt;/li&gt;
&lt;li&gt;To change the launch configuration associated with an Auto Scaling group, replace the existing launch configuration with a new one. &lt;/li&gt;
&lt;li&gt;&lt;p&gt;After a new launch configuration is in place, any new instances that are launched use the new launch configuration parameters, but existing instances are not affected. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When Auto Scaling removes instances (referred to as scaling in) from the group, the default termination policy is to remove instances with the earliest launch configuration. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;However, you should know that if the Availability Zones were unbalanced to begin with, then Auto Scaling could remove an instance with a new launch configuration to balance the zones. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In such situations, you should have processes in place to compensate for this effect.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To implement this technique, start with an Auto Scaling group and an Elastic Load Balancing load balancer. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To deploy the new version of the application in the green environment, update the Auto Scaling group with the new launch configuration, and then scale the Auto Scaling group to twice its original size.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The next step is to shrink the Auto Scaling group back to the original size. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;By default, instances with the old launch configuration are removed first. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can also utilize a group’s Standby state to temporarily remove instances from an Auto Scaling group. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Having the instance in Standby state helps in quick rollbacks, if required. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As soon as you’re confident about the newly deployed version of the application, you can permanently remove instances in Standby state.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To perform a rollback, update the Auto Scaling group with the old launch configuration. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then, perform the preceding steps in reverse. Or if the instances are in Standby state, bring them back online&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#swap-the-environment-of-an-elastic-beanstalk-application"&gt;
  &lt;/a&gt;
  Swap the Environment of an Elastic Beanstalk Application
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Elastic Beanstalk enables quick and easier deployment and management of applications without having to worry about the infrastructure that runs those applications. &lt;/li&gt;
&lt;li&gt;To deploy an application using Elastic Beanstalk, upload an application version in the form of an application bundle (for example, Java .war file or .zip file), and then provide some information about your application. &lt;/li&gt;
&lt;li&gt;&lt;p&gt;Based on application information, Elastic Beanstalk deploys the application in the blue environment and provides a URL to access the environment (typically for web server environments).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Elastic Beanstalk provides several deployment policies that you can configure for use, ranging from policies that perform an in-place update on existing instances, to immutable deployment using a set of new instances. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Because Elastic Beanstalk performs an in-place update when you update your application versions, your application may become unavailable to users for a short period of time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Elastic Beanstalk provides an environment URL when the application is up and running. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The green environment is spun up with its own environment URL. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;At this time, two environments are up and running, but only the blue environment is serving production traffic.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#use-the-following-procedure-to-promote-the-green-environment-to-serve-production-traffic"&gt;
  &lt;/a&gt;
  Use the following procedure to promote the green environment to serve production traffic.
&lt;/h5&gt;

&lt;ol&gt;
&lt;li&gt;Navigate to the environment's dashboard in the Elastic Beanstalk console.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the Actions menu, choose Swap Environment URL.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Elastic Beanstalk performs a DNS switch, which typically takes a few minutes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Once the DNS changes have propagated, you can terminate the blue environment. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#clone-a-stack-in-aws-opsworks-and-update-dns"&gt;
  &lt;/a&gt;
  Clone a Stack in AWS OpsWorks and Update DNS
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;AWS OpsWorks utilizes the concept of stacks, which are logical groupings of AWS resources (EC2 instances, Amazon RDS, Elastic Load Balancing, and so on) that have a common purpose and should be logically managed together. &lt;/li&gt;
&lt;li&gt;Stacks are made of one or more layers. &lt;/li&gt;
&lt;li&gt;&lt;p&gt;A layer represents a set of EC2 instances that serve a particular purpose, such as serving applications or hosting a database server. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When a data store is part of the stack, you should be aware of certain data management challenges.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To implement this technique in AWS OpsWorks, bring up the blue environment/stack with the current version of the application.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Next, create the green environment/stack with the newer version of application. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;At this point, the green environment is not receiving any traffic. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If Elastic Load Balancing needs to be initialized, you can do that at this time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When it’s time to promote the green environment/stack into production, update DNS records to point to the green environment/stack’s load balancer. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can also do this DNS flip gradually by using the Amazon Route 53 weighted routing policy.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FJCSwK8q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b6xcy37limxt9pzny3gq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FJCSwK8q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b6xcy37limxt9pzny3gq.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xgk1EU1Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eflzp3y9hturlbme34hw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xgk1EU1Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eflzp3y9hturlbme34hw.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#best-practices-for-managing-data-synchronization-and-schema-changes"&gt;
  &lt;/a&gt;
  Best Practices for Managing Data Synchronization and Schema Changes
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The complexity of managing data synchronization across two distinct environments depends on the number of data stores in use, the intricacy of the data model, and the data consistency requirements.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Both the blue and green environments need up-to-date data:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The green environment needs up-to-date data access because it’s becoming the new production environment.&lt;/li&gt;
&lt;li&gt;The blue environment needs up-to-date data in the event of a rollback, when production is either shifts back or remains on the blue environment.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Broadly, you accomplish this by having both the green and blue environments share the same data stores. Unstructured data stores, such as Amazon S3 object storage, NoSQL databases, and shared file systems are often easier to share between the two environments. &lt;/p&gt;

&lt;p&gt;Structured data stores, such as RDBMS, where the data schema can diverge between the environments, typically require additional considerations.&lt;/p&gt;

&lt;p&gt;A general recommendation is to decouple schema changes from the code changes. This way, the relational database is outside of the environment boundary defined for the blue/green deployment and shared between the blue and green environments. The two approaches for performing the schema changes are often used in tandem:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The schema is changed first, before the blue/green code deployment. &lt;/li&gt;
&lt;li&gt;&lt;p&gt;Database updates must be backward compatible, so the old version of the application can still interact with the data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The schema is changed last, after the blue/green code deployment. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Code changes in the new version of the application must be backward compatible with the old schema.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There’s an increased risk involved when managing schema with a deletive approach: failures in the schema modification process can impact your production environment. &lt;/p&gt;

&lt;p&gt;Your additive changes can bring down the earlier application because of an undocumented issue where best practices weren’t followed or where the new application version still has a dependency on a deleted field somewhere in the code.&lt;/p&gt;

&lt;p&gt;To mitigate risk appropriately, this pattern places a heavy emphasis on your pre-deployment software lifecycle steps. &lt;/p&gt;

&lt;p&gt;Be sure to have a strong testing phase and framework and a strong QA phase. &lt;/p&gt;

&lt;p&gt;Performing the deployment in a test environment can help identify these sorts of issues early, before the push to production.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-bluegreen-deployments-are-not-recommended"&gt;
  &lt;/a&gt;
  When Blue/Green Deployments Are Not Recommended
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The following scenarios highlight patterns that may not be well suited for blue/green deployments.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#are-your-schema-changes-too-complex-to-decouple-from-the-code-changes-is-sharing-of-data-stores-not-feasible"&gt;
  &lt;/a&gt;
  Are your schema changes too complex to decouple from the code changes? Is sharing of data stores not feasible?
&lt;/h4&gt;

&lt;p&gt;In some scenarios, sharing a data store isn’t desired or feasible. Schema changes are too complex to decouple. Data locality introduces too much performance degradation to the application, as when the blue and green environments are in geographically disparate regions. All of these situations require a solution where the data store is inside of the deployment environment boundary and tightly coupled to the blue and green applications respectively.&lt;/p&gt;

&lt;p&gt;This requires data changes to be synchronized—propagated from the blue environment to the green one, and vice versa. The systems and processes to accomplish this are generally complex and limited by the data consistency requirements of your application. This means that during the deployment itself, you have to also manage the reliability, scalability, and performance of that synchronization workload, adding risk to the deployment.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#does-your-application-need-to-be-deployment-aware"&gt;
  &lt;/a&gt;
  Does your application need to be deployment aware?
&lt;/h4&gt;

&lt;p&gt;You should consider using feature flags in your application to make it deployment aware. This will help you control the enabling/disabling of application features in blue/green deployment. Your application code would run additional or alternate subroutines during the deployment, to keep data in sync, or perform other deployment-related duties. These routines are enabled/disabled turned off during the deployment by using configuration flags.&lt;/p&gt;

&lt;p&gt;Making your applications deployment aware introduces additional risk and complexity and typically isn’t recommended with blue/green deployments. The goal of blue/green deployments is to achieve immutable infrastructure, where you don’t make changes to your application after it’s deployed, but redeploy altogether. That way you ensure the same code is operating in a production setting and in the deployment setting, reducing overall risk factors.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#does-your-commercial-offtheshelf-cots-application-come-with-a-predefined-updateupgrade-process-that-isnt-bluegreen-deployment-friendly"&gt;
  &lt;/a&gt;
  Does your commercial off-the-shelf (COTS) application come with a predefined update/upgrade process that isn’t blue/green deployment friendly?
&lt;/h4&gt;

&lt;p&gt;Many commercial software vendors provide their own update and upgrade process for applications which they have tested and validated for distribution. While vendors are increasingly adopting the principles of immutable infrastructure and automated deployment, currently not all software products have those capabilities.&lt;/p&gt;

&lt;p&gt;Working around the vendor’s recommended update and deployment practices to try to implement or simulate a blue/green deployment process may also introduce unnecessary risk that can potentially negate the benefits of this methodology.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Application deployment has associated risks. However, advancements such as the advent of cloud computing, deployment and automation frameworks, and new deployment techniques, blue/green for example, help mitigate risks, such as human error, process, downtime, and rollback capability. &lt;/p&gt;

&lt;p&gt;The AWS utility billing model and wide range of automation tools make it much easier for customers to move fast and cost-effectively implement blue/green deployments at scale.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/whitepapers/latest/blue-green-deployments/blue-green-deployments.pdf#welcome"&gt; Original paper &lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>devops</category>
    </item>
    <item>
      <title>A Quick 10-Second Programming Joke For Today</title>
      <author>Daily Developer Jokes</author>
      <pubDate>Wed, 20 Oct 2021 12:00:19 +0000</pubDate>
      <link>https://dev.to/dailydeveloperjokes/a-quick-10-second-programming-joke-for-today-2l65</link>
      <guid>https://dev.to/dailydeveloperjokes/a-quick-10-second-programming-joke-for-today-2l65</guid>
      <description>&lt;p&gt;Hi there! Here's today's Daily Developer Joke. We hope you enjoy it; it's a good one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8svwXrKO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://private.xtrp.io/projects/DailyDeveloperJokes/public_image_server/images/5e125997196ca.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8svwXrKO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://private.xtrp.io/projects/DailyDeveloperJokes/public_image_server/images/5e125997196ca.png" alt="Joke Image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;For more jokes, and to submit your own joke to get featured, check out the &lt;a href="https://dailydeveloperjokes.github.io/"&gt;Daily Developer Jokes Website&lt;/a&gt;. We're also open sourced, so feel free to view &lt;a href="https://github.com/dailydeveloperjokes"&gt;our GitHub Profile&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#leave-this-post-a-if-you-liked-todays-joke-and-stay-tuned-for-tomorrows-joke-too"&gt;
  &lt;/a&gt;
  Leave this post a ❤️ if you liked today's joke, and stay tuned for tomorrow's joke too!
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;This joke comes from &lt;a href="https://github.com/wesbos/dad-jokes"&gt;Dad-Jokes GitHub Repo by Wes Bos&lt;/a&gt; (thank you!), whose owner has given me permission to use this joke with credit.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>jokes</category>
      <category>dailydeveloperjokes</category>
    </item>
    <item>
      <title>Hello World In Dart</title>
      <author>Kinanee Samson</author>
      <pubDate>Wed, 20 Oct 2021 11:49:16 +0000</pubDate>
      <link>https://dev.to/kalashin1/hello-world-in-dart-2efe</link>
      <guid>https://dev.to/kalashin1/hello-world-in-dart-2efe</guid>
      <description>&lt;p&gt;Dart, a statically typed programming language that was invented and released by Google in October 10, 2011. It was originally created to replace JavaScript in the browser, me and you know that the last part of the statement hasn't really happened yet. However this does not mean that Dart is a lame programming language with no use. Dart found solace with flutter. The flutter framework for cross-platform mobile app development uses Dart as it's programming language. Flutter with Dart really abstracts away most of the complexity encountered when building cross-platform applications. With Flutter and Dart, you can write your code once and be sure it will be compiled to run on the web, mobile and even desktop. The goal of today's article is to get you to start using Dart as developer with experience in another language.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;To install dart visit this &lt;a href="https://dart.dev/get-dart"&gt;address&lt;/a&gt; to install the recommended version for your operating system. This installation ships with the dart compiler and a dart2js compiler. The dart2js compiler&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-dart"&gt;
  &lt;/a&gt;
  What is Dart?
&lt;/h2&gt;

&lt;p&gt;Dart as a programming language is a compiled and statically typed language asynchronous programming language, it bears a similar syntax to some statically typed languages like &lt;code&gt;typescript&lt;/code&gt;, if you are used to writing TypeScript code you will pick up Dart much faster because they look alike a lot. Dart code can be compiled to an executable binary that can be run on a PC if the need be or you can use the &lt;code&gt;dart2js&lt;/code&gt; compiler that comes baked with Dart programming language to compile your Dart code to JavaScript, the dart2js compiler transpiles dart code to JavaScript code. Which most browsers can run.&lt;/p&gt;

&lt;p&gt;By being a statically typed language this implies that the type of value a variable can store is specified before run time, once the variable has been annotated with that type, storing a different type of value inside that variable will lead to errors, since Dart has good support across most IDE/Text editors you will be hinted about the error before you compile your code. Dart is an Object Oriented Programming language and also functional programming. Let's write some Dart code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"hello world"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// hello world&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Every Dart code is expected to have a main function that serves as the entry point where the application will begin execution, although we could have other functions nested inside the main function or outside of it, however the main function is always required for every application we build with dart. We use the &lt;code&gt;print&lt;/code&gt; function to log out a message on the console. Commenting works very much like in other C family of languages, let's see how we can create variables.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#variables-in-dart"&gt;
  &lt;/a&gt;
  Variables In Dart
&lt;/h3&gt;

&lt;p&gt;There are reserved keyword for creating variable in dart just like in other language some of them you will have encountered if you have worked with JavaScript in the past. When a variable is declared in Dart, the type of the variable can be explicitly declared by annotating the variable with it's type or you can let Dart to automatically infer the type of value stored in the variable to it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'samson'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// samson&lt;/span&gt;
  &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// not possible&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;var&lt;/code&gt; keyword in dart is used to declare a variable and automatically infer the type of the value to the variable. In the code block above, storing an integer inside the name variable will throw an error because dart has auto inferred the &lt;code&gt;String&lt;/code&gt; type to the variable hence, it can only store strings.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
  &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'John'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;taxRate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.10&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;isAdult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By annotating the variable with a type it ensures that all future assignment of values to that variable will only be considered as legit if the type value matches the one specified when we created the variable. Above we saw some of the built in types in Dart, but it is not limited to those ones above. Let's look at other variable declaration keywords.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
  &lt;span class="kd"&gt;dynamic&lt;/span&gt; &lt;span class="n"&gt;canHoldAnyType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'sam'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;canHoldAnyType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt; &lt;span class="c1"&gt;// Run time constant&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;birthYear&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1997&lt;/span&gt; &lt;span class="c1"&gt;// Compile time constant&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;dynamic&lt;/code&gt; keyword let's us bypass type checking for a particular variable enabling us to store different types of values inside the variable. The &lt;code&gt;final&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; keyword are used to store create constants, the &lt;code&gt;const&lt;/code&gt; keyword allows one to create a constant that will evaluated at compile time, before our code is run, while the final keyword creates run time constant, i.e a constant that while our code is currently executing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lists"&gt;
  &lt;/a&gt;
  Lists
&lt;/h2&gt;

&lt;p&gt;Dart has &lt;code&gt;List&lt;/code&gt; for handling series of data in a collection, since Dart also supports generics like TypeScript so we can strongly type an array to expect only a specific type of values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="o"&gt;(){&lt;/span&gt;
    &lt;span class="n"&gt;List&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'sam'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'frodo'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'pipin'&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;otherNames&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'TAA'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'AOC'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'AWB'&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="c1"&gt;// otherNames cannot store integers&lt;/span&gt;
    &lt;span class="n"&gt;otherNames&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Will throw an error in IDE&lt;/span&gt;
    &lt;span class="n"&gt;otherNames&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'SKA'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Add an item to a list&lt;/span&gt;
    &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;// sam&lt;/span&gt;
    &lt;span class="n"&gt;otherNames&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;remove&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'AWB'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Remove an item from a list&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#sets"&gt;
  &lt;/a&gt;
  Sets
&lt;/h2&gt;

&lt;p&gt;Dart also supports sets, sets are like array but they ensure that each item inside them are unique. It is often useful when we want to create an array that stores unique items.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;Set&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'AWB'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'TAA'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"AOC"&lt;/span&gt;&lt;span class="o"&gt;};&lt;/span&gt;

  &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'SKA'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// add an item&lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// { AWB, TAA, AOC, SKA }&lt;/span&gt;
  &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;remove&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'AWB'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// remove an item&lt;/span&gt;
  &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'SKA'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// will be ignored&lt;/span&gt;

  &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;elementAt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// get an element at an index&lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// { TAA, AOC, SKA }&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#control-flow"&gt;
  &lt;/a&gt;
  Control Flow
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#conditionals"&gt;
  &lt;/a&gt;
  Conditionals
&lt;/h3&gt;

&lt;p&gt;We handle conditional statements in Dart much like we do in other languages, however let's see a use case.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;manin&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'You are an adult'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Not for children'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You could also do switch statements as demonstrated below;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
  &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;team&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Liverpool'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;team&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s"&gt;'Liverpool'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Reds!'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s"&gt;'Chelsea'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Blues'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Citizens'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#loops"&gt;
  &lt;/a&gt;
  Loops
&lt;/h3&gt;

&lt;p&gt;Dart supports both &lt;code&gt;for&lt;/code&gt; loop and &lt;code&gt;while&lt;/code&gt; loop, as demonstrated below;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
  &lt;span class="n"&gt;List&lt;/span&gt; &lt;span class="n"&gt;ids&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;

  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ids&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;
    &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ids&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ids&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ids&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt;
    &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#functions"&gt;
  &lt;/a&gt;
  Functions
&lt;/h2&gt;

&lt;p&gt;Dart like any other programming language supports functional programming, and as such we can create higher order functions, e.g pass functions as arguments to other functions, return a function from another function and lot's more. The main function which we must have in all our dart application is a typical example of a function. The return type of a functions can also be strongly typed including the arguments that the function expects.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="c1"&gt;// function name&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;adder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;makeAdderFunc&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;adder&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// functions accepting other functions as argument&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;


&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;addNums&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;numA&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;numB&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;numA&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;numB&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;makeAdderFunc&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;addNums&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// returning a function from another function&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Dart supports anonymous functions and arrow functions just like in other languages.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
  &lt;span class="n"&gt;List&lt;/span&gt; &lt;span class="n"&gt;oddNums&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="c1"&gt;// anonymous functions&lt;/span&gt;
  &lt;span class="n"&gt;oddNums&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;forEach&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="n"&gt;oddNums&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;forEach&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;});&lt;/span&gt;
  &lt;span class="c1"&gt;// OR arrow functions&lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;oddNums&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;map&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can pass in optional arguments in dart using two methods, We can wrap the optional parameter inside square brackets or we can use named Parameters. Named parameters are similar to using object destructuring in JavaScript. If we use named parameters then each argument passed in should  be named to match the parameters name.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;makeAdder&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 6 &lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;makeAdder&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 4&lt;/span&gt;

  &lt;span class="c1"&gt;// named parameters&lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;makeAdder2&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;a:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;b:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 5&lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;makeAdder2&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;a:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 4&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// square brackets&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;makeAdder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]){&lt;/span&gt; &lt;span class="c1"&gt;// using square brackets&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;makeAdder2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nl"&gt;b:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;}){&lt;/span&gt; &lt;span class="c1"&gt;// using named parameters&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#oop-in-dart"&gt;
  &lt;/a&gt;
  OOP in Dart
&lt;/h2&gt;

&lt;p&gt;since Dart is an Oriented Language, we can work with classes to create complex objects from classes, dart supports encapsulation, polymorphism, abstraction and inheritance all out of the box.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;Person&lt;/span&gt; &lt;span class="n"&gt;sam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Kalashin'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;Admin&lt;/span&gt; &lt;span class="n"&gt;superAdmin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Admin&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'super'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100000&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;sam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getProfile&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// { 'Name': 'Kalashin', 'Age': 23}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;_name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;_name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

  &lt;span class="n"&gt;getProfile&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'Name'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;_name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Age'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;age&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Admin&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;Admin&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="o"&gt;):&lt;/span&gt;&lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;class&lt;/code&gt; keyword is used to create a new class, we all know that all every class requires a constructor to instantiate the class, in Dart the constructor bears the same name as the class, that's why the &lt;code&gt;Person&lt;/code&gt; class has a method named after it likewise the &lt;code&gt;Admin&lt;/code&gt; class has a method named after it. That is it's own constructor. However since it is inheriting from the &lt;code&gt;Person&lt;/code&gt; class it calls &lt;code&gt;super&lt;/code&gt; which is a reference to the parent class that it is inheriting from. In Dart there are no access modifiers but if we declare a property/variable with the underscore character &lt;code&gt;_&lt;/code&gt; it is private to it's class or library. There is no need to call the new keyword when instantiating a class, we can just invoke the class like a function. In dart everything we can store inside a variable is treated as an Object including functions too.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getters-and-setters"&gt;
  &lt;/a&gt;
  Getters And Setters
&lt;/h3&gt;

&lt;p&gt;We can use getters and setters to get and set the value for a private property on a class. Getters don't require a parameter list so we omit the parenthesis right after the name of the getter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;Person&lt;/span&gt; &lt;span class="n"&gt;sam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Kalashin'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Kalashin&lt;/span&gt;
  &lt;span class="n"&gt;sam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Samson'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Samson&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;_name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;_name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;set&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;_name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Dart looks a lot like JavaScript albeit with some few exceptions, this article was designed to beginner friendly for JavaScript developers, I do hope to cover more advanced topics in Dart as we go along. If you are familiar with Dart and I forgot to include something you think is relevant for beginners then feel free to share below, if you are looking for a more comprehensive approach then check this &lt;a href="https://dart.dev/guides/language/language-tour"&gt;article&lt;/a&gt;, you can also checkout this &lt;a href="https://youtu.be/7sJZi0grFR4"&gt;video&lt;/a&gt; to get started. Thanks for reading hope you learnt something new.&lt;/p&gt;

</description>
      <category>dart</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>What's the difference between computer science and software engineering?</title>
      <author>Maddy</author>
      <pubDate>Wed, 20 Oct 2021 11:40:40 +0000</pubDate>
      <link>https://dev.to/maddy/whats-the-difference-between-computer-science-and-software-engineering-1p4k</link>
      <guid>https://dev.to/maddy/whats-the-difference-between-computer-science-and-software-engineering-1p4k</guid>
      <description>&lt;p&gt;Last weekend I was reflecting on the difference between computer science and software engineering. &lt;/p&gt;

&lt;p&gt;I studied computer science at university and I now work as a full-time software engineer. However, I know of people that instead preferred to study software engineering instead of computer science.&lt;/p&gt;

&lt;p&gt;I think that computer science is more about the communication between software and hardware, and there is a lot of emphasis on mathematics, algorithms, computational theory and in general the science behind computers. For example, one of the modules that I took during my first year was database systems. But it was explained using relational algebra. &lt;/p&gt;

&lt;p&gt;Software engineering revolves more around the software development lifecycle, and engineering principles.&lt;/p&gt;

&lt;p&gt;Academic wise, the difference is subtle, both programs differ by a few modules. Probably software engineering students do more programming than computer scientist. Job-wise, I think they end up taking the same career paths.&lt;/p&gt;

&lt;p&gt;What do you think? &lt;/p&gt;

</description>
      <category>discuss</category>
    </item>
    <item>
      <title>Learn programming by playing games</title>
      <author>Muthu Annamalai Venkatachalam</author>
      <pubDate>Wed, 20 Oct 2021 11:14:48 +0000</pubDate>
      <link>https://dev.to/muthuannamalai12/learn-programming-by-playing-games-2kc</link>
      <guid>https://dev.to/muthuannamalai12/learn-programming-by-playing-games-2kc</guid>
      <description>&lt;p&gt;Online learning has come a long way in the last few years. There are interactive courses, tons of online tutorials, and one of my personal favorite ways to practice coding is through fun free games!&lt;/p&gt;

&lt;p&gt;While a coding game alone probably isn’t going to teach you everything you need to know about coding, these free fun games can be a really incredible way to practice the skills you’re learning.&lt;/p&gt;

&lt;p&gt;They are found to be one of the best methods to acquire programming skills while having little to no previous experience. Gamification allows you to learn by playing, which is a distinctive practice to avoid burnout.&lt;/p&gt;

&lt;p&gt;So, next, you will find a list of 10 gamified platforms that will make the process of learning programming an exciting journey.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-screeps"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://screeps.com/"&gt;Screeps&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Each player can create their own colony in a single persistent world shared by all the players. Such a colony can mine resources, build units, conquer territory. As you conquer more territory, your influence in the game world grows, as well as your abilities to expand your footprint. However, it requires a lot of effort on your part, since multiple players may aim at the same territory.&lt;/p&gt;

&lt;p&gt;Unlike some other RTS games, your units in Screeps can react to events without your participation – provided that you have programmed them properly. And, unlike other MMOs, you do not have to play Screeps constantly to play well. It is quite enough just to check once in a while to see if everything goes well.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n582uNXp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626689115098/-zdA5OZqR.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n582uNXp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626689115098/-zdA5OZqR.jpeg" alt="screeps.jpeg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-css-dinner"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://flukeout.github.io/"&gt;CSS Dinner&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;CSS Diner is a simple yet fun way to learn CSS. There are totally 32 levels that will teach you the basics of how CSS selectors work. Each level of this is a free coding game that gets progressively more complex, building on what you’ve learned in previous lessons. The first few levels teach core fundamentals like element selectors and class selectors. In the later levels you’re working with advanced concepts. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aqm82BPI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626688694777/DBQW4AUS4.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aqm82BPI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626688694777/DBQW4AUS4.jpeg" alt="cssdiner.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-cyber-dojo"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://www.cyber-dojo.org/creator/home"&gt;Cyber Dojo&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Cyber Dojo has practice exercises and challenges for dozens of coding languages including Ruby, JavaScript, PHP, Python, and more. Each exercise spells out a challenge to complete with an example showing what the end result should look like. It’s a great way to practice your coding skills make the most out of them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zGnqxogr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626689143289/Gr55p9bO5.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zGnqxogr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626689143289/Gr55p9bO5.jpeg" alt="cyber dojo.jpeg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-untrusted"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://alexnisnevich.github.io/untrusted/"&gt;Untrusted&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Untrusted is a meta-JavaScript adventure game that tests your JavaScript skills to solve problems. You use JavaScript to guide Dr. Eval through a machine continuum and alter his reality to move between levels. It’s a free fun game for practicing more complex JavaScript skills.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SXVT5b8o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626688868342/l1InnwKZL.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SXVT5b8o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626688868342/l1InnwKZL.jpeg" alt="untrusted.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-ruby-warrior"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://www.thinkful.com/learn/ruby-on-rails-tutorial/"&gt;Ruby Warrior&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;If you want to learn Ruby, then Ruby Warrior is the game for you. There are beginner and intermediate tracks to suit your skill level. The lessons start out easy and go from there. It is a super fun game where you write Ruby code to move your knight character and win levels&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CTNQyU8Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626688855454/28bURzDHu.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CTNQyU8Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626688855454/28bURzDHu.jpeg" alt="rubywarrior.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-code-combat"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://codecombat.com/"&gt;Code Combat&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;CodeCombat is a multiplayer programming game for learning how to code. With thousands of schools and millions of students, they are bringing K12 computer science education to everyone, regardless of gender, race, or background. The ultimate goal of CodeCombat is to bring more users into the field of computer programming by making the logic and syntax more accessible and enjoyable to learn. You can learn Python, JavaScript, CoffeeScript, or the Lua game scripting language by playing this game&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z-M8Tdwu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626688839006/dGQvuhYbN.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z-M8Tdwu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626688839006/dGQvuhYbN.jpeg" alt="codecombat.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-code-monkey"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://www.codemonkey.com/"&gt;Code Monkey&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;CodeMonkey is a fun and educational game-based environment where kids learn to code without any prior experience. After completing CodeMonkey's award-winning coding courses, kids will be able to navigate through the programming world with a sense of confidence and accomplishment.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KnHMOQqK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626689045398/lAvuh0Y61.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KnHMOQqK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626689045398/lAvuh0Y61.jpeg" alt="Codin.jpeg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-codingame"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://www.codingame.com/start"&gt;CodinGame&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;CodinGame is a challenge-based training platform for programmers where you can improve your coding skills with fun exercises. You can learn new concepts by solving fun challenges in 25+ languages addressing all the hot programming topics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1s7ekdaM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626689169769/i_BpvABwK.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1s7ekdaM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626689169769/i_BpvABwK.jpeg" alt="Codin Game.jpeg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-flexbox-froggy"&gt;
  &lt;/a&gt;
  9. &lt;a href="http://flexboxfroggy.com/"&gt;Flexbox Froggy&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Flexbox Froggy, a game where you help Froggy and friends by writing CSS code! Guide this frog to the lilypad on the right. This game covers flex properties like align-items, justify-content, align-content, flex-direction, align-self, flex-wrap, flex-flow. Totally it has 24 different levels&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OGjh-9y2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626688738964/fVtxm4vJr.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OGjh-9y2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626688738964/fVtxm4vJr.jpeg" alt="froggy.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-flexbox-defence"&gt;
  &lt;/a&gt;
  10. &lt;a href="http://www.flexboxdefense.com/"&gt;Flexbox Defence&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Flexbox Defense is based on the classic tower defense games, but to place the items we write CSS instructions. We use the justify-content property on the main container to move the single towers into effective positions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JaEujrEP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626688765427/D_ngNIiRU.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JaEujrEP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626688765427/D_ngNIiRU.jpeg" alt="defense.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope this list has given you plenty of programming games to practice your coding skills with. If I have missed something do let me know in the comments below&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can now extend your support by buying me a Coffee.😊👇&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/muthuannamalai"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for Reading 😊 &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>10 Flutter tips - season 2 - part 1/10</title>
      <author>Tomic Riedel 💙</author>
      <pubDate>Wed, 20 Oct 2021 11:13:55 +0000</pubDate>
      <link>https://dev.to/tomicriedel/10-flutter-tips-season-2-part-110-336d</link>
      <guid>https://dev.to/tomicriedel/10-flutter-tips-season-2-part-110-336d</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hki-uUuW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dtxji25q6bo3r1l3p683.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hki-uUuW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dtxji25q6bo3r1l3p683.png" alt="Image description"&gt;&lt;/a&gt;&lt;br&gt;
 After the last part of the 1st season was published, there was actually no plan to do a second season, but you asked for it and here it is.&lt;/p&gt;

&lt;p&gt;We are looking at websites, packages, GitHub repositories, widgets, extensions and much more in the second season, so I recommend you to follow me now not to miss this!&lt;/p&gt;

&lt;p&gt;Then I hope you enjoy the 1st part of the second season,&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Happy Reading!&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#flutter-carplay"&gt;
  &lt;/a&gt;
  Flutter Carplay
&lt;/h3&gt;

&lt;p&gt;Meanwhile it is in the hype, Flutter Carplay. You can use it to develop an app in Flutter that will &lt;strong&gt;work on Apple Carplay&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jOk-D9oe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/54781138/131184549-3cb62678-ad3f-4d67-85fb-1410bd05eaff.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jOk-D9oe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/54781138/131184549-3cb62678-ad3f-4d67-85fb-1410bd05eaff.gif" alt="https://user-images.githubusercontent.com/54781138/131184549-3cb62678-ad3f-4d67-85fb-1410bd05eaff.gif"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#scribble"&gt;
  &lt;/a&gt;
  Scribble
&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://pub.dev/packages/scribble"&gt;scribble&lt;/a&gt; is a simple package that &lt;strong&gt;allows you to draw&lt;/strong&gt;. It reacts to changes in pressure, supports different thicknesses of a stroke and much more.&lt;/p&gt;

&lt;p&gt;It is still under development, but it is constantly getting new features and already has the most important features.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iGihcgs1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/timcreatedit/scribble/raw/master/scribble_demo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iGihcgs1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/timcreatedit/scribble/raw/master/scribble_demo.gif" alt="https://github.com/timcreatedit/scribble/raw/master/scribble_demo.gif"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#badges"&gt;
  &lt;/a&gt;
  Badges
&lt;/h3&gt;

&lt;p&gt;The &lt;a href="http://pub.dev/packages/badges"&gt;Package&lt;/a&gt; badges is used to &lt;strong&gt;add a badge to any widget&lt;/strong&gt;. This can be a number to indicate how many items you have in your cart or how many new messages you have, but it can also be used to indicate a warning, for example with an exclamation mark, or a new feature with "NEW". As you can see, the possibilities are almost endless.&lt;/p&gt;

&lt;p&gt;The great thing is that it is very easy to use. You just need to wrap your widget with the "Badge" widget and then specify the badeContent, for example a text. Here is an example of it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;Badge&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="nl"&gt;badgeContent:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'3'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
  &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hPs45wgg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/yadaniil/flutter_badges/master/images/logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hPs45wgg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/yadaniil/flutter_badges/master/images/logo.png" alt="https://raw.githubusercontent.com/yadaniil/flutter_badges/master/images/logo.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pinput"&gt;
  &lt;/a&gt;
  Pinput
&lt;/h3&gt;

&lt;p&gt;pinput is used to &lt;strong&gt;create a pin code input&lt;/strong&gt; where each pixel is customizable.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s3sqnOg---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/Tkko/Flutter_PinPut/master/example/media/pin_put_demo_3.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s3sqnOg---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/Tkko/Flutter_PinPut/master/example/media/pin_put_demo_3.gif" alt="https://raw.githubusercontent.com/Tkko/Flutter_PinPut/master/example/media/pin_put_demo_3.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flutter-blurhash"&gt;
  &lt;/a&gt;
  Flutter Blurhash
&lt;/h3&gt;

&lt;p&gt;This &lt;a href="https://pub.dev/packages/flutter_blurhash"&gt;Package&lt;/a&gt; is for adding a &lt;strong&gt;blur effect to an image&lt;/strong&gt;. The blurhash is the code that specifies how your image will look blured. To get this code you need to go to &lt;a href="https://blurha.sh/"&gt;https://blurha.sh/&lt;/a&gt; and paste your image there. Here is a visual example of how this works:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gRy8aHzo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/1295961/75059847-129d6800-54de-11ea-8832-d19ea58eb7eb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gRy8aHzo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/1295961/75059847-129d6800-54de-11ea-8832-d19ea58eb7eb.png" alt="https://user-images.githubusercontent.com/1295961/75059847-129d6800-54de-11ea-8832-d19ea58eb7eb.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now to insert your blurhash you have to implement the following in your flutter code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BlurHashAppextendsStatelessWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nf"&gt;BlurHashApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;key:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;MaterialApp&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="nl"&gt;home:&lt;/span&gt; &lt;span class="n"&gt;Scaffold&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;appBar:&lt;/span&gt; &lt;span class="n"&gt;AppBar&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;title:&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"BlurHash"&lt;/span&gt;&lt;span class="o"&gt;)),&lt;/span&gt;
      &lt;span class="nl"&gt;body:&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;SizedBox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;expand&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Center&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;AspectRatio&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="nl"&gt;aspectRatio:&lt;/span&gt; &lt;span class="mf"&gt;1.6&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;BlurHash&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;hash:&lt;/span&gt; &lt;span class="s"&gt;"L5H2EC=PM+yV0g-mq.wG9c010J}I"&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;),&lt;/span&gt;
  &lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#bottom-bar-with-sheet"&gt;
  &lt;/a&gt;
  Bottom Bar with Sheet
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://pub.dev/packages/bottom_bar_with_sheet"&gt;bottom_bar_with_sheet&lt;/a&gt; is a normal bottom bar, but it provides a very useful functionality. Sometimes you want to have more space on your screen, but how do you do it? Well, quite simple: with this nav bar you can &lt;strong&gt;pull up a "second screen"&lt;/strong&gt;/sheet and by doing so you get much more space. Here is a small example how it could look like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xctO2ely--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/Frezyx/bottom_bar_with_sheet/master/example/rep_files/examples/main.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xctO2ely--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/Frezyx/bottom_bar_with_sheet/master/example/rep_files/examples/main.gif" alt="https://raw.githubusercontent.com/Frezyx/bottom_bar_with_sheet/master/example/rep_files/examples/main.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How do you implement this? Well, you just write the following code in your scaffold:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="nl"&gt;bottomNavigationBar:&lt;/span&gt; &lt;span class="n"&gt;BottomBarWithSheet&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;selectedIndex:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="nl"&gt;sheetChild:&lt;/span&gt; &lt;span class="n"&gt;Center&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Place for your another content"&lt;/span&gt;&lt;span class="o"&gt;)),&lt;/span&gt;
        &lt;span class="nl"&gt;bottomBarTheme:&lt;/span&gt; &lt;span class="n"&gt;BottomBarTheme&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;mainButtonPosition:&lt;/span&gt; &lt;span class="n"&gt;MainButtonPosition&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;middle&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;selectedItemBackgroundColor:&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xFF2B65E3&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="nl"&gt;mainActionButtonTheme:&lt;/span&gt; &lt;span class="n"&gt;MainActionButtonTheme&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;size:&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;color:&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xFF2B65E3&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="nl"&gt;icon:&lt;/span&gt; &lt;span class="n"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="nl"&gt;color:&lt;/span&gt; &lt;span class="n"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;white&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="nl"&gt;size:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="nl"&gt;onSelectItem:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'item &lt;/span&gt;&lt;span class="si"&gt;$index&lt;/span&gt;&lt;span class="s"&gt; was pressed'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="nl"&gt;items:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
          &lt;span class="n"&gt;BottomBarWithSheetItem&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;icon:&lt;/span&gt; &lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;people&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="n"&gt;BottomBarWithSheetItem&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;icon:&lt;/span&gt; &lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;shopping_cart&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="n"&gt;BottomBarWithSheetItem&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;icon:&lt;/span&gt; &lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="n"&gt;BottomBarWithSheetItem&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;icon:&lt;/span&gt; &lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;favorite&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;],&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Looks a bit complex, but it is not. The package has a great readme file that explains everything in detail.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#string-validator"&gt;
  &lt;/a&gt;
  String Validator
&lt;/h2&gt;

&lt;p&gt;This package has already saved me a lot of time. &lt;a href="http://pub.dev/packages/string_validator"&gt;string_validator&lt;/a&gt; is there to &lt;strong&gt;validate a string&lt;/strong&gt; (who would have thought it). It doesn't sound that exciting, but if you look at how &lt;strong&gt;many possibilities&lt;/strong&gt; there are to validate a string with this package, then it belongs in almost every Flutter project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IvHoR2j---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e8eea90b-f32b-44ac-b99a-8dcf43008dd7/Screenshot_2021-10-20_at_09.55.17.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IvHoR2j---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e8eea90b-f32b-44ac-b99a-8dcf43008dd7/Screenshot_2021-10-20_at_09.55.17.png" alt="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e8eea90b-f32b-44ac-b99a-8dcf43008dd7/Screenshot_2021-10-20_at_09.55.17.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GuMNwFZQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-us-west-2.amazonaws.com/secure.notion-static.com/17383206-255d-4f2d-ace9-e2d59dcd9bae/Untitled.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GuMNwFZQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-us-west-2.amazonaws.com/secure.notion-static.com/17383206-255d-4f2d-ace9-e2d59dcd9bae/Untitled.png" alt="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/17383206-255d-4f2d-ace9-e2d59dcd9bae/Untitled.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flutter-gen"&gt;
  &lt;/a&gt;
  Flutter gen
&lt;/h2&gt;

&lt;p&gt;This &lt;a href="http://pub.dev/packages/flutter_gen"&gt;tool&lt;/a&gt; is very useful. We all know that string based APIs are &lt;strong&gt;not the most secure&lt;/strong&gt;. If you insert a single character incorrectly, the whole string will stop working. The problem is that you use sting apis very often in Flutter. Assets, fonts, colors... Flutter gen is there to solve this problem.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oZpF0GDM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-us-west-2.amazonaws.com/secure.notion-static.com/55102ebe-b168-4cd2-9093-7e44c3bb230e/Screenshot_2021-10-20_at_10.01.47.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oZpF0GDM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-us-west-2.amazonaws.com/secure.notion-static.com/55102ebe-b168-4cd2-9093-7e44c3bb230e/Screenshot_2021-10-20_at_10.01.47.png" alt="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/55102ebe-b168-4cd2-9093-7e44c3bb230e/Screenshot_2021-10-20_at_10.01.47.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's a bit complicated to set up, but well worth it and you should use it in every project!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#photo-view"&gt;
  &lt;/a&gt;
  Photo View
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://pub.dev/packages/photo_view"&gt;photo_view&lt;/a&gt; is a very simple but useful package. When you display a photo, you also want to be able &lt;strong&gt;to zoom in and out and other things&lt;/strong&gt;. Just wrap your image with the PhotoView widget and you are done.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="nd"&gt;@override&lt;/span&gt;
&lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="nf"&gt;build&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Container&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;PhotoView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;imageProvider:&lt;/span&gt; &lt;span class="n"&gt;AssetImage&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"assets/large-image.jpg"&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rj6Psbiu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/6718144/56463745-45ec0380-63b0-11e9-8e56-0dba5deabb1a.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rj6Psbiu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/6718144/56463745-45ec0380-63b0-11e9-8e56-0dba5deabb1a.gif" alt="https://user-images.githubusercontent.com/6718144/56463745-45ec0380-63b0-11e9-8e56-0dba5deabb1a.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also create a gallery of photos.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wakelock"&gt;
  &lt;/a&gt;
  Wakelock
&lt;/h2&gt;

&lt;p&gt;If the user has set it, then the screen goes off after a certain time and the phone locks itself. But this is sometimes very annoying, because a process is running in the app or something else. With this simple &lt;a href="https://pub.dev/packages/wakelock"&gt;plugin&lt;/a&gt; you can &lt;strong&gt;prevent the phone from locking itself automatically&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:wakelock/wakelock.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// The following lines of code toggle the wakelock based on a bool value.&lt;/span&gt;
&lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;enable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// The following statement enables the wakelock.&lt;/span&gt;
&lt;span class="n"&gt;Wakelock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toggle&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;enable:&lt;/span&gt; &lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;enable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// The following statement disables the wakelock.&lt;/span&gt;
&lt;span class="n"&gt;Wakelock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toggle&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;enable:&lt;/span&gt; &lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// If you want to retrieve the current wakelock status,&lt;/span&gt;
&lt;span class="c1"&gt;// you will have to be in an async scope&lt;/span&gt;
&lt;span class="c1"&gt;// to await the future returned by `enabled`.&lt;/span&gt;
&lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;wakelockEnabled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;Wakelock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Now we have reached the end of the first part of the second season.&lt;/p&gt;

&lt;p&gt;I am looking forward to the next parts. If you liked something very much or if you didn't like something that I could improve, I would be very happy if you let me know so that I can improve.&lt;/p&gt;

&lt;p&gt;If you liked the tips, I would also be happy about some claps and very happy about a follow, so you don't miss the next parts of this series!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Have a great day, thanks for reading!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>dart</category>
    </item>
    <item>
      <title>.NET MAUI is HERE! 3 NEW Features that will blow your mind 🤯</title>
      <author>Dotnetsafer</author>
      <pubDate>Wed, 20 Oct 2021 11:10:08 +0000</pubDate>
      <link>https://dev.to/dotnetsafer/net-maui-is-here-3-new-features-that-will-blow-your-mind-ngp</link>
      <guid>https://dev.to/dotnetsafer/net-maui-is-here-3-new-features-that-will-blow-your-mind-ngp</guid>
      <description>&lt;p&gt;.NET MAUI is a &lt;strong&gt;framework&lt;/strong&gt; for .NET Core and ASP.NET Core MVC applications which can be used in &lt;strong&gt;cross-platform development&lt;/strong&gt; and in building complex web applications.&lt;/p&gt;

&lt;p&gt;.NET MAUI was created by &lt;strong&gt;Microsoft&lt;/strong&gt; to take care of all the things that developers usually need to do themselves, such as managing HTTP requests, setting up routing logic, handling errors and more. So that they can &lt;strong&gt;focus on what’s important:&lt;/strong&gt; building an application that does something useful for their customers.&lt;/p&gt;

&lt;p&gt;In the latest preview, Microsoft showed three new features about .NET MAUI that &lt;strong&gt;will blow your mind&lt;/strong&gt; 👇&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#updated-controls"&gt;
  &lt;/a&gt;
  ✨Updated Controls
&lt;/h2&gt;

&lt;p&gt;Microsoft has changed the implementations of numerous controls in this new .NET MAUI version, which is a &lt;strong&gt;significant improvement.&lt;/strong&gt; Let’s look at the most important ones.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#boxview"&gt;
  &lt;/a&gt;
  📦 BoxView
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;BoxView&lt;/code&gt; is a &lt;strong&gt;basic rectangle&lt;/strong&gt; with a given width, height, and color. It could be used for &lt;code&gt;BoxView&lt;/code&gt; decorating, basic graphics, and touch interaction with the user.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0guolCii--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5heueta2wsukni92sxt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0guolCii--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5heueta2wsukni92sxt.png" alt="BoxView (By. Microsoft)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#indicatorview"&gt;
  &lt;/a&gt;
  📐IndicatorView
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;IndicatorView&lt;/code&gt; is a &lt;strong&gt;control&lt;/strong&gt; that shows indications in a &lt;code&gt;CarrouselView&lt;/code&gt; that reflect the number of items and the current position:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PRMdh-bL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fw384qzxqx38huqfs1kz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PRMdh-bL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fw384qzxqx38huqfs1kz.png" alt="IndicatorView control (By. Microsoft)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#imagebutton"&gt;
  &lt;/a&gt;
  📷 ImageButton
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;ImageButton&lt;/code&gt; view has the ability to &lt;strong&gt;combine&lt;/strong&gt; the &lt;strong&gt;Button&lt;/strong&gt; and &lt;strong&gt;Image views&lt;/strong&gt; to produce a button with an image as its content. To command the program to do a certain activity, the user &lt;strong&gt;pushes&lt;/strong&gt; the &lt;code&gt;ImageButton&lt;/code&gt; with their finger or clicks it with their mouse. The &lt;code&gt;ImageButton&lt;/code&gt; view, unlike the Button view, has no idea of text and text appearance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MJXH3uXK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1zhx6fp979rlvn76c5ps.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MJXH3uXK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1zhx6fp979rlvn76c5ps.png" alt="ImageButton (By. Microsoft)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#webview"&gt;
  &lt;/a&gt;
  💻 WebView
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;WebView&lt;/code&gt; renders any online or embedded HTML material using the platform’s native browser control; suitable for displaying markup that is more complicated than the subset of HTML supported by &lt;code&gt;Label&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R-JHHnzu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i55sirhkys3f2e1khnfl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R-JHHnzu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i55sirhkys3f2e1khnfl.png" alt="New .NET MAUI WebView (By. Microsoft)"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#shadows-corners-and-borders"&gt;
  &lt;/a&gt;
  🔲 Shadows, corners, and borders
&lt;/h2&gt;

&lt;p&gt;Here we have &lt;code&gt;Microsoft.Maui.Graphics&lt;/code&gt; library, that offers an &lt;em&gt;+uniform UI&lt;/em&gt;* drawing API based on native graphics engines, &lt;strong&gt;allowing&lt;/strong&gt; us to &lt;strong&gt;quickly add&lt;/strong&gt; borders, corner rendering, and gorgeous shadows to nearly any .NET MAUI layout or control.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CwysQKek--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpp0bcak5m0ioom9c647.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CwysQKek--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpp0bcak5m0ioom9c647.png" alt="Corners and borders in .NET MAUI (By. Microsoft)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Microsoft presents a new &lt;code&gt;Border&lt;/code&gt; control. It can be wrapped around any layout or control to offer borders and independent corner control. This controls are available in &lt;strong&gt;WPF, UWP, Silverlight&lt;/strong&gt;, and the most recent &lt;strong&gt;Windows App SDK styles.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this &lt;a href="https://devblogs.microsoft.com/dotnet/announcing-net-maui-preview-9/"&gt;Microsoft example&lt;/a&gt;, we can see how they added the &lt;strong&gt;stroke&lt;/strong&gt; and &lt;strong&gt;rounded&lt;/strong&gt; the top-left and bottom-right &lt;strong&gt;corners&lt;/strong&gt; by wrapping a border checks around the counter label this template 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Border&lt;/span&gt; 
    &lt;span class="n"&gt;Grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Row&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt;
    &lt;span class="n"&gt;Padding&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"16,8"&lt;/span&gt;
    &lt;span class="n"&gt;Stroke&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"{StaticResource PrimaryBrush}"&lt;/span&gt;
    &lt;span class="n"&gt;Background&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#2B0B98"&lt;/span&gt;
    &lt;span class="n"&gt;StrokeThickness&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"4"&lt;/span&gt;
    &lt;span class="n"&gt;HorizontalOptions&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Center"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Border&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StrokeShape&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;RoundRectangle&lt;/span&gt; &lt;span class="n"&gt;CornerRadius&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"40,0,0,40"&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Border&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StrokeShape&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt; 
        &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;".NET MAUI Preview: 9"&lt;/span&gt;                
        &lt;span class="n"&gt;FontSize&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"18"&lt;/span&gt;
        &lt;span class="n"&gt;FontAttributes&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Bold"&lt;/span&gt;
        &lt;span class="n"&gt;TextColor&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"White"&lt;/span&gt;
        &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"CounterLabel"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Border&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The specified shape’s corner radius accepts a &lt;code&gt;Thickness&lt;/code&gt; type value, allowing separate &lt;strong&gt;control&lt;/strong&gt; of each of the rectangle’s &lt;em&gt;+four corners:&lt;/em&gt;* bottom-left, bottom-right, top-left and top-right.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;border control&lt;/strong&gt; creates a wraparound view element around a single piece of content, allowing you to &lt;strong&gt;customize the background&lt;/strong&gt; color and padding. There are several more attributes that may be used to modify the border’s stroke, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;StrokeLineCap:&lt;/strong&gt; is a form that appears at the end of a line.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;StrokeDashOffset:&lt;/strong&gt; is the distance between the dots in the dash pattern.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;StrokeMiterLimit:&lt;/strong&gt; set the miter length ratio to half of the stroke thickness.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;StrokeLineJoin:&lt;/strong&gt; a type of vertices join.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;StrokeDashArray:&lt;/strong&gt; a dash and gap pattern in the stroke.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Are you ready to give your user interface some &lt;strong&gt;depth&lt;/strong&gt;? Any layout or control, including pictures and objects, can be given with &lt;code&gt;Shadow&lt;/code&gt; 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Shadow&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Shadow&lt;/span&gt; &lt;span class="n"&gt;Brush&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#000000"&lt;/span&gt; 
                &lt;span class="n"&gt;Offset&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"20,20"&lt;/span&gt;
                &lt;span class="n"&gt;Radius&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"40"&lt;/span&gt;
                &lt;span class="n"&gt;Opacity&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"0.8"&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Shadow&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the result 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MqNtAV9M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/68fjxr7as02y5eal90w4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MqNtAV9M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/68fjxr7as02y5eal90w4.png" alt="Shadows in .NET MAUI (By. Microsoft)"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#android-quick-start"&gt;
  &lt;/a&gt;
  🚄 Android Quick Start
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Ahead-of-time&lt;/strong&gt; (AOT) compilation &lt;strong&gt;improves the speed&lt;/strong&gt; with which your Android applications can code start. If you’re trying to stay below the wifi installation bar, full AOT may make your application artifacts larger than you want.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Startup tracing&lt;/strong&gt; is the solution in this case. We may balance performance and space by partially AOT’ing only the sections of your program that are run at startup.&lt;/p&gt;

&lt;p&gt;The following are the &lt;strong&gt;results&lt;/strong&gt; of device testing on the &lt;strong&gt;Pixel 5:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UaPBu-Up--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/po6nrkq7ne6ace854oeo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UaPBu-Up--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/po6nrkq7ne6ace854oeo.png" alt="Microsoft Benchmark on Pixel 5 (By. Dotnetsafer)"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#ecosystem-controls"&gt;
  &lt;/a&gt;
  🔰 Ecosystem Controls
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://community.devexpress.com/blogs/mobile/archive/2021/09/30/net-maui-free-early-access-preview-of-data-editors-and-more-for-mobile-development-v21-2.aspx"&gt;DevExpress&lt;/a&gt;, &lt;a href="https://www.syncfusion.com/blogs/post/introducing-the-first-set-of-syncfusion-net-maui-controls.aspx"&gt;Syncfusion&lt;/a&gt;, and &lt;a href="https://www.telerik.com/maui-ui"&gt;Telerik&lt;/a&gt; have all recently released new sets of controls for.NET MAUI that take use of Microsoft’s strong graphics capabilities. Maui.Graphics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yVNIsGaw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/50e8he74owjy8z9q736r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yVNIsGaw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/50e8he74owjy8z9q736r.png" alt="Ecosystem Controls (By. Microsoft)"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#do-you-want-a-gift"&gt;
  &lt;/a&gt;
  🎁 Do you want a gift?
&lt;/h2&gt;

&lt;p&gt;Just for entering this article and making it this far, I’m GIVING you a &lt;strong&gt;GIFT&lt;/strong&gt; of a &lt;strong&gt;GUIDE&lt;/strong&gt; to keeping your &lt;strong&gt;.NET applications secure&lt;/strong&gt; 🎁.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KQuuSh2x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/09cnn5pfmylevlvymslj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KQuuSh2x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/09cnn5pfmylevlvymslj.png" alt=".NET security guide FREE (By. Dotnetsafer)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The ONLY thing you have to do is &lt;strong&gt;enter your email&lt;/strong&gt; to receive it for &lt;strong&gt;FREE&lt;/strong&gt;🤑.&lt;/p&gt;

&lt;p&gt;🚨&lt;strong&gt;This won’t be around forever.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To maintain exclusivity, I’ll be editing the article soon and &lt;strong&gt;there will no longer be a gift&lt;/strong&gt;. So HURRY UP and get your guide to becoming a .NET security expert! 👇👇👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dotnetsafer220122.typeform.com/to/qefAo3WO?utm_source=netmauiishere&amp;amp;utm_medium=devto&amp;amp;utm_campaign=xxxxx&amp;amp;utm_term=xxxxx&amp;amp;utm_content=xxxxx"&gt;Get your guide for FREE&lt;/a&gt;&lt;/p&gt;

</description>
      <category>csharp</category>
      <category>dotnet</category>
      <category>netcore</category>
      <category>netmaui</category>
    </item>
    <item>
      <title>Top 5 Mobile App Marketing Tools</title>
      <author>Gegosoft SEO Services</author>
      <pubDate>Wed, 20 Oct 2021 10:48:01 +0000</pubDate>
      <link>https://dev.to/gegosoftseo/top-5-mobile-app-marketing-tools-42db</link>
      <guid>https://dev.to/gegosoftseo/top-5-mobile-app-marketing-tools-42db</guid>
      <description>&lt;p&gt;In the latest study report suggests that global consumers are actually spending 25 per cent of their time on mobile phones or handheld devices, while key businesses are only allocating 12 per cent of their advertisement budgets wholly towards mobile advertising. Thereby there is an immense difference when it comes to customer behaviour and how organizations market to the customers. The vital Businesses that adapt to these changes would see more amount of money streaming in.&lt;/p&gt;

&lt;p&gt;More importantly, the businesses require discovering ways in which they could enhance the mobile experience of global users. They require using app marketing tools that could assist them to step up the engagement of global customers in mobile devices across several platforms, channels, and kinds of operating systems (OSs). Many popular Mobile App Marketing Agency also utilizes the best tools and unique strategies to achieve an important goal. Moreover, you can utilize mobile app marketing tools to get all of your app marketing purposes. Below is the list of top app marketing tools.&lt;/p&gt;

&lt;p&gt;How Best Apptentive Works for You&lt;br&gt;
It was adeptly created to make it easy for firms to develop stronger relationships with their customers. It is found that most tools were either reactive or pushy. They wished to utilize software to develop enjoyable experiences for companies to not only start conversations with their clients, but also actually listen to them, react quickly and accordingly, and use insights attained to develop more customer-centric skills.&lt;/p&gt;

&lt;p&gt;Top Tool Apptentitive&lt;br&gt;&lt;br&gt;
This tool solution comprises shifts in emotion from consumer experience to get back customers and highly activates fans at scale. They are using machine-powered knowledge and more specific targeting. It helps business brands to capture actionable sentiments and reviews from 90 per cent of customer voices actually missed and immediately converts that feedback into action.&lt;/p&gt;

&lt;p&gt;How Localytics Perform Better&lt;br&gt;
Their key purpose is to set people at the core of brands’ digital engagement offering personalization and benefits in all activities. They professionally aspire to be the secret behind the digital businesses that adeptly brands which have with their prospective clients, assisting them to develop strong, more kind of successful associations.&lt;/p&gt;

&lt;p&gt;Few globes’ top known names, comprising Bose, HSN, The Weather Channel, and Comcast actually use quality Localytics to do what everyone understands is much possible. Primarily there is a no different solution that has been able to solve like how to use intelligence and data to make every client feel applauded and valued.&lt;/p&gt;

&lt;p&gt;The Quality Stream of Tapstream&lt;br&gt;
The biggest apps wholly depend on Tapstream to scale and optimize their app marketing. It assists app creators in all verticals understand who their top loyal users are, where they are actually from, and how to actually get more users like them.&lt;/p&gt;

&lt;p&gt;This tool cuts down all metrics on a per-campaign basis. You can view the firm’s engagement, actual conversion rate, and LTV for every channel. It is possible to actively measure how LTV varies between virally acquired users, highly competing for mobile ad networks, and even several social sites. All this data is illustrated in a simple cohort examination report, presenting Tapstream’s dashboard your new top friend. In addition, Tapstream quality campaigns will also enumerate in iTunes Connect App Analytics.&lt;/p&gt;

&lt;p&gt;Most Famous Tool of Google AdMob&lt;br&gt;
This tool effectively makes getting revenue easy with in-app install ads, actionable insights, and reliable, simple to use tools that ameliorate your app business. Primarily they are one of the largest global advertising networks, it could fulfil their ad requests from everywhere in the globe. You can perfectly maximize the value of every pattern across all the quality systems with the latest monetization technology. This tool helps in transforming the hard work into absolute earnings from around the globe with traits like multiple currency support, top fill rates, and kind of country-level mediation.&lt;/p&gt;

&lt;p&gt;Why You Should Select AppsFlyer&lt;br&gt;
This tool provides a need for that where you can drive your top marketing success. Because a business can only trust its marketing outputs if it’s absolutely confident with the data input, this tool professionally works hard to bring the perfect attribution data within the familiar industry. It also permits you as a marketer or business owner to actively attribute every touchpoint within the passionate user journey. The more perfect accuracy of the data guarantees that marketers could deliver reliable results.&lt;/p&gt;

&lt;p&gt;The platform permits you to actively engage your customers or users where and when it wholly matters most. Moreover, you can actually measure ad spend as well as respective app engagement so that you identify your top marketing ROI; also you can protect the ad spend against mobile fraud utilizing tools offered in the platform. This tool offers numerous tools that business owners and marketers can utilize, comprising OneLink that assists with link building, Protect 360 that wholly prevents fraud in mobile ads and global Audiences, which assists segment and managing audiences from a central point. Thereby this tool comes with a marketing stack of tools to ameliorate performance in marketing and advertising.&lt;/p&gt;

</description>
      <category>android</category>
      <category>ios</category>
      <category>python</category>
      <category>java</category>
    </item>
  </channel>
</rss>
