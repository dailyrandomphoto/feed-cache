<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>JavaScript vs JavaScript. Fight!</title>
      <author>Ryan Carniato</author>
      <pubDate>Thu, 19 Aug 2021 14:12:54 +0000</pubDate>
      <link>https://dev.to/this-is-learning/javascript-vs-javascript-fight-53fa</link>
      <guid>https://dev.to/this-is-learning/javascript-vs-javascript-fight-53fa</guid>
      <description>&lt;p&gt;With software development, we are often presented with alternative choices for libraries and tools that appear to accomplish the same sort of things. Each one will advertise its key advantages, and we attempt to weigh the pros and cons.&lt;/p&gt;

&lt;p&gt;Sometimes, the differentiators have less to do with what we are accomplishing and everything with how we accomplish it. In those cases, it isn't always as clear what the tradeoffs are. Are these things that even matter?&lt;/p&gt;

&lt;p&gt;There isn't a rule here. Finding myself in the middle of these discussions regularly I thought I'd share a few around JavaScript web development. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#1-mpa-vs-spa"&gt;
  &lt;/a&gt;
  1. MPA vs SPA
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k4JUdkjP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3lnd7vfb7wrtlmolmd9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k4JUdkjP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3lnd7vfb7wrtlmolmd9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Single Page Apps vs Multi-Page Apps is by far one of the biggest sources of confusion I've seen for the web. There are so many different patterns that exist for building websites and applications it is far from clear what people even mean by these terms.&lt;/p&gt;

&lt;p&gt;Historical considerations aside, the simplest heuristic for identifying between a Modern SPA and MPA is the concept of JavaScript entry point. If it is the same for all pages you have a SPA. If each page has its own topmost entry it is an MPA.&lt;/p&gt;

&lt;p&gt;Your bundler might produce different chunks per page but if your application starts from the same point regardless of the page you have a SPA. You can pre-render it into 1000 different pages. You can preload the per page chunks for each. You can even turn off client-side routing. It is still a SPA architecturally. Single application execution defines behavior for all pages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nextjs.org/"&gt;Next&lt;/a&gt;, &lt;a href="https://www.gatsbyjs.com/"&gt;Gatsby&lt;/a&gt;, &lt;a href="https://nuxtjs.org/"&gt;Nuxt&lt;/a&gt;, &lt;a href="https://kit.svelte.dev/"&gt;SvelteKit&lt;/a&gt;, you name it falls into this category. Single Page App architecture applies to server-rendered pages and statically rendered pages just the same.&lt;/p&gt;

&lt;p&gt;So what's an MPA then? A website or application that is written from the top at a per-page level. You can use the same components across pages but there is not a single entry point. When the server receives a request and serves that page the JavaScript execution entry is unique to that page.&lt;/p&gt;

&lt;p&gt;This means your routing is server-side. While a SPA can opt into this from a top-level architectural perspective an MPA must function this way since it doesn't have the code immediately or lazily loaded to render any page other than itself. Some tradeoffs are worth an article in itself. But in short, MPAs having no expectation of being re-rendered in the browser can be optimized to send significantly less JavaScript.&lt;/p&gt;

&lt;p&gt;In JavaScript land, only a few frameworks are optimized for this scenario. &lt;a href="https://markojs.com/"&gt;Marko&lt;/a&gt; is one. And recently we've seen frameworks like &lt;a href="https://astro.build/"&gt;Astro&lt;/a&gt; and &lt;a href="https://elderguide.com/tech/elderjs/"&gt;Elder&lt;/a&gt; provide wrappers for existing SPA frameworks. Albeit ones that only support static rendering for now. And &lt;a href="https://github.com/BuilderIO/qwik"&gt;Qwik&lt;/a&gt; as new framework from the creator of Angular also coming to answer the question.&lt;/p&gt;

&lt;p&gt;It's worth mentioning, MPAs are each pages themselves so they could always host a SPA on a given page. And through iFrames or other HTML injection frameworks like &lt;a href="https://turbo.hotwired.dev/"&gt;Turbo&lt;/a&gt;, it is possible to serve an MPA off a single page.&lt;/p&gt;

&lt;p&gt;The key takeaway is that SPA vs MPA isn't about how many pages you are serving. It is a decision you make depending on how important initial load performance(MPA) is versus future navigation experience(SPA). Either approach has tools to improve their weaknesses but each is fundamentally tailored to optimize for their primary usage.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#2-react-vs-reactivity"&gt;
  &lt;/a&gt;
  2. React vs Reactivity
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--prvtRcWf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aa7hcky3urpz2mjkfnhq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--prvtRcWf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aa7hcky3urpz2mjkfnhq.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You've probably heard somewhere &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; is not reactive. Maybe someone thought it was a funny joke. You know, &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; is in the word Reactive. Maybe you read a blog post that got into the fundamentals of push-based observables versus scheduling. Maybe you saw a framework advertise itself as "Truly Reactive" or "Purely Reactive" as a differentiator from React.&lt;/p&gt;

&lt;p&gt;Here is the thing. There have been many attempts to formalize what Reactive programming means. Some are more narrow than others. So much so that even within reactive circles we've needed to differentiate between "Functional Reactive Programming" and "Functional + Reactive Programming".&lt;/p&gt;

&lt;p&gt;The common thing driving all these solutions is they are systems based on declarative data. You code in a style that describes the state in terms of fixed relationships. You can think of it as equations in a spreadsheet. The guarantee is that with any change everything stays up to date.&lt;/p&gt;

&lt;p&gt;If this sounds like pretty much any web UI development you've worked with it's for good reason. HTML is declarative and we build on top of it. At this point in terms of frameworks being reactive means any number of things.&lt;/p&gt;

&lt;p&gt;Some take it to mean you have control over the primitives to wire up behavior, but it would be hard not to consider &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; Hooks in this way.&lt;/p&gt;

&lt;p&gt;Some take it to mean that updates happen automatically without calling an update function, but these libraries like, &lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt; and &lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt; do in fact call component update functions behind the scenes.&lt;/p&gt;

&lt;p&gt;Some take it to mean granular updates without diffing. But every framework diffs (more on that below). Or that it means we remove scheduling but almost all frameworks batch changes and schedules them on the next microtask.&lt;/p&gt;

&lt;p&gt;So React might not be formalized reactive programming but for all effective purposes, the same things are being accomplished.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-vdom-vs-no-vdom"&gt;
  &lt;/a&gt;
  3. VDOM vs No VDOM
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sTU42WkO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g5qedfh0zkbx8uufucz3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sTU42WkO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g5qedfh0zkbx8uufucz3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Does Old become the new new? Well, sort of. All rendering in JavaScript frameworks comes down to knowing what has changed and updating the DOM accordingly. The update part can be done pretty effectively with familiarity with DOM APIs. All frameworks have access to these tools. But what about knowing what has changed?&lt;/p&gt;

&lt;p&gt;Believe it or not, this process is similar in the majority of frameworks. The reason is reading values from the DOM does not come without consequence. In the worst case, it can even cause premature paints. So what do we do? We store values outside of the DOM and compare those. Has it changed yes? Apply updates. Otherwise no. This is true of all libraries VDOM or not.&lt;/p&gt;

&lt;p&gt;But how we go about this is where the differences lie. There is 2 axis along which solutions differ:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Granularity of change - How much do we re-run in response to the user changes&lt;/li&gt;
&lt;li&gt;What are we diffing - data, VDOM abstraction&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For a VDOM library, like React, the granularity of change is per component. On the first run the code you supply to render functions or function components executes and returns a bunch of Virtual Nodes. The reconciler then creates the DOM nodes from that. On subsequent runs, new Virtual nodes are diffed from the previous Virtual Nodes, and updates to the existing DOM nodes are patched in.&lt;/p&gt;

&lt;p&gt;For a non-VDOM library, like &lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt;, the granularity of change is also per component. This time the compiler has split create and update paths. On the first run, the create path creates the DOM nodes and initializes locally stored state. On subsequent runs, it calls the update path which compares the values of state and patches the DOM where applicable.&lt;/p&gt;

&lt;p&gt;If these processes sound incredibly similar, it's because they are. The biggest difference is that the VDOM has an intermediate format for diffing instead of just a simple locally scoped object and &lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt;'s compiler just compiles only the needed checks in. It can tell which attributes change or which locations child components are inserted.&lt;/p&gt;

&lt;p&gt;You can apply similar optimizations to VDOM libraries as we've seen with &lt;a href="https://infernojs.org/"&gt;Inferno&lt;/a&gt; and &lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt; using compilation. In so they recreating VNodes the similar to how a non-VDOM library avoids unnecessary creation of DOM nodes. It is all about memoization, whether of VDOM nodes, data objects, or through reactive computations. You can also achieve a similar separation of creation and updates at runtime using tagged template literal libraries like &lt;a href="https://github.com/WebReflection/uhtml"&gt;uhtml&lt;/a&gt; or &lt;a href="https://lit.dev/"&gt;Lit&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So what is the meaningful difference? Not very much. Diffing isn't that expensive. The only thing left we have to play with is the granularity of change, if ideal diffing and updates are about the same cost all we can do is do less diffing. But granularity generally brings heavier creation costs. Thankfully there is a lot more optimization to be done with compilers to address those creation costs. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#4-jsx-vs-template-dsls"&gt;
  &lt;/a&gt;
  4. JSX vs Template DSLs
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gXIazUz---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bv3hy73yudx51cps06ep.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gXIazUz---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bv3hy73yudx51cps06ep.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This probably seems similar to the last comparison and it is related for sure. Some people view JSX as HTML in JavaScript, and Template DSLs or Single File Components(SFCs) as JS in HTML. But the truth is these are all just JavaScript. The output, in the end, is JavaScript with maybe some string HTML in there somewhere.&lt;/p&gt;

&lt;p&gt;So if the output is more or less the same how are these different? Well, they are becoming exceedingly less different. A framework like &lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt; has full access to JavaScript in its Script tags and template expressions. And JSX while dynamic still has contiguous blocks that can be analyzed statically and optimized.&lt;/p&gt;

&lt;p&gt;So where is the difference? Mostly around what can be inserted. Attributes are easy to analyze and optimize, but what goes between the tags in JSX could be a few things. It could be text, it could DOM elements, it could components or control flow. Ultimately though it's text or DOM elements.&lt;/p&gt;

&lt;p&gt;So a template DSL removes a little bit of the guesswork with what is being passed here which otherwise requires a check every time. But that isn't huge savings. Even with JSX, you have some ability to look at what the JavaScript expressions are doing. SolidJS uses heuristics to determine if something could be reactive.&lt;/p&gt;

&lt;p&gt;The biggest benefit of Template DSLs is the explicit syntax for control flow can make it more easily optimizable for different targets. For instance, a &lt;code&gt;for&lt;/code&gt; loop is more optimal than &lt;code&gt;map&lt;/code&gt;. If you are rending on the server just creating a giant HTML string something as small as that can improve performance by a noticeable amount. But that is just a simple abstraction.&lt;/p&gt;

&lt;p&gt;But outside of these sort of scenarios there really isn't any differences fundamentally. Sure most Template DSLs don't have equivalent to React's Render Props, but they could. &lt;a href="https://markojs.com/"&gt;Marko&lt;/a&gt; does.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#5-runtime-vs-compiled-reactivity"&gt;
  &lt;/a&gt;
  5. Runtime vs Compiled Reactivity
&lt;/h2&gt;

&lt;p&gt;This one might be a bit more niche but it's still a question I get often. What's the difference?&lt;/p&gt;

&lt;p&gt;It comes down to dependency tracking. Runtime reactive systems like &lt;a href="https://solidjs.com"&gt;Solid&lt;/a&gt;, &lt;a href="https://mobx.js.org/"&gt;MobX&lt;/a&gt;, or &lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt; collect dependencies as their computations run. They intercept reactive atoms(signals, refs, observables) reads and subscribe the wrapping scope to them. So that later when those atoms update they can re-run these computations.&lt;/p&gt;

&lt;p&gt;The key thing is that since the dependency graph is built on the fly they are dynamic. They can change run to run, and in so you are managing a set of dependencies. Every run means potentially new subscriptions and releasing others.&lt;/p&gt;

&lt;p&gt;Compile-time figures out the dependencies ahead of time. In so, there is no need to manage subscriptions as the relationship is fixed. The code runs whenever the dependency changes. This has far less overhead at runtime. And even means that computations don't need to run to know their dependencies. &lt;/p&gt;

&lt;p&gt;However, these dependencies aren't dynamic so there is always a chance of oversubscribing and over executing. Situations, where runtime can pull reactivity from a deep call stack, become harder because you can't know if something is reactive without tracing its bindings.&lt;/p&gt;

&lt;p&gt;This works both ways though. If you were to put a setTimeout in an effect, with runtime reactivity by the time it executes it would not be in scope. With compile-time, if it's inside the function it's easy to register the dependencies. Similar considerations when you update values. &lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt; looks for an assignment operator which is why &lt;code&gt;list.push&lt;/code&gt; doesn't just work.&lt;/p&gt;

&lt;p&gt;There is a lot to be done with the compiler and it is easier to do some things than others. In the end, for the most part in terms of raw performance, this is mostly a wash. But a compiler can bring a lot of other benefits when you can leverage specific syntax to better convey intent. This is the next logical step over template DSLs and I think we are just scratching the surface here.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#6-components-vs-web-components"&gt;
  &lt;/a&gt;
  6. Components vs Web Components
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RhOK8b1r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/onkrc0386upzdffc4yny.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RhOK8b1r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/onkrc0386upzdffc4yny.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I want to open this by saying if there is one takeaway here, don't assume the word component means the same thing to everyone.&lt;/p&gt;

&lt;p&gt;I've been on both sides of this. I used Web Components in production for 6 years at the startup I previously work at and I've also worked and written Component frameworks. To me when people compare these they are talking about very different things.&lt;/p&gt;

&lt;p&gt;A Web Component is very much a Custom Element in every sense. It is a DOM node that encapsulates behavior with a common interface. We get attributes and convenient hooks to write custom behavior on creation, and when attached and removed from the DOM. The latter 2 lifecycles are important because they are complementary. It means that for the most part all side effects are tied to DOM connectivity.&lt;/p&gt;

&lt;p&gt;What is a Framework Component? To paraphrase something Rich Harris once said, they are tools to organize our minds. Now that's abstract. But that's the thing. When you look at components in frameworks, they are abstract. They might output DOM elements, or not. Their lifecycle is not tied to the DOM. Some manage state, they are rendered on the server or maybe mobile. They are anything the framework needs them to be.&lt;/p&gt;

&lt;p&gt;The first is an interopt story, the second an organization story. Are these congruent goals? To a point. But neither will compromise on their primary purpose. And in so they are destined to stay in their lanes. I mean you can add more framework-like behavior to Web Components but then you become a framework yourself and no longer are standard. But as soon as you take the solution farther, like SSR you are inventing new territory.&lt;/p&gt;

&lt;p&gt;This can be argued to be ground for new standards but I'd argue that standards development isn't an exercise in building a framework for the browser. Opinions change, technologies evolve. In the web, the DOM may be timeless but the way we organize our applications is not.&lt;/p&gt;

&lt;p&gt;On the framework component side, there is no lack of incentives to take the abstraction further. The truth of the matter is a specific solution can always be more tailored to the problem. And in so a React Component is always going to be capable of being better in a React App than a Web Component. And this is true for any framework.&lt;/p&gt;

&lt;p&gt;When people talk about re-inventing the wheel, they aren't wrong but how much does this matter. In this petri dish of JavaScript frameworks constant re-invention is the catalyst to evolution. Ideally, we are talking about 2 sides of the same coin. In practice, there might be more friction there.&lt;/p&gt;

&lt;p&gt;This isn't a "use the platform" or "don't use the platform" argument. Web Components have a role to play as long as we clearly understand the difference. Every framework uses the platform. Some are just better than others. And some better than Web Components can. After all Web Components are just Custom Elements. And sometimes more DOM nodes are not the solution to the problem.&lt;/p&gt;




&lt;p&gt;It was fun to dive into a few topics that I've gathered opinions on over the years. If you have any ideas of similar comparisons let me know in the comments.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>frameworks</category>
    </item>
    <item>
      <title>A great campaign 🤗, a terrible website 😥. #WeThe15</title>
      <author>InHuOfficial</author>
      <pubDate>Thu, 19 Aug 2021 13:50:25 +0000</pubDate>
      <link>https://dev.to/inhuofficial/wethe15-great-shame-about-the-website-though-3k24</link>
      <guid>https://dev.to/inhuofficial/wethe15-great-shame-about-the-website-though-3k24</guid>
      <description>&lt;p&gt;A great campaign idea and launched in tandem with the 2020 Paralympics, "We The 15" is a campaign I could get behind. And while the video is great, the website is a mess!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-campaign"&gt;
  &lt;/a&gt;
  What is the campaign?
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;WeThe15 is a global movement, which was founded by a coalition of organisations from sport, human rights, policy, communications, business, arts and entertainment, uniting to change attitudes and create more opportunities for persons with disabilities, as well as improve mobility and accessibility.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Source: &lt;a href="https://www.wethe15.org/the-campaign"&gt;https://www.wethe15.org/the-campaign&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In essence it is a campaign designed to start the conversation around accessibility, disability and inclusion and then drive that conversation into action!&lt;/p&gt;

&lt;p&gt;A 10 year long campaign to remove barriers that people with disabilities face every day.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-am-i-excited-by-this"&gt;
  &lt;/a&gt;
  Why am I excited by this?
&lt;/h2&gt;

&lt;p&gt;Well you probably know I love accessibility. &lt;/p&gt;

&lt;p&gt;But more importantly their promotion video is, without doubt, the single best video (advert) on disability I have seen and I hope it will resonate with people.&lt;/p&gt;

&lt;p&gt;It puts the point across that I believe deeply in. &lt;/p&gt;

&lt;p&gt;People with disabilities do not want sympathy, they are not "special" or "inspiring". &lt;/p&gt;

&lt;p&gt;They are people, with lives, jobs, desires and wishes. &lt;/p&gt;

&lt;p&gt;All people with disabilities want is:&lt;/p&gt;

&lt;p&gt;✅ A conversation to happen around accessibility and inclusion.. &lt;/p&gt;

&lt;p&gt;✅ That leads to consideration when designing products and services or policies...&lt;/p&gt;

&lt;p&gt;✅ That leads to a more accessible and inclusive world. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;They basically want you to stop being so absent minded and think about disability and accessibility so they can get on with life without having to face the barriers your shoddy code creates.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-video"&gt;
  &lt;/a&gt;
  The video!
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/gHCDvdCaJhI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Absolute perfection if you ask me! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#although-the-website-leaves-a-lot-to-be-desired"&gt;
  &lt;/a&gt;
  Although the website leaves a lot to be desired....
&lt;/h2&gt;

&lt;p&gt;I am disappointed that the website makes a load of accessibility mistakes though!&lt;/p&gt;

&lt;p&gt;I am not going to list them all but for a 7 page website there are a lot of issues:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;They use userway overlay - &lt;a href="https://overlaysdontwork.com/"&gt;&lt;strong&gt;overlays are not accessible&lt;/strong&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;You can't access the drop down menu with the keyboard so 70% of the site is not accessible to keyboard users.&lt;/li&gt;
&lt;li&gt;There are colour contrast issues.&lt;/li&gt;
&lt;li&gt;Their subscribe form doesn't have visible, permanent labels!&lt;/li&gt;
&lt;li&gt;They have missed a couple of alt attributes...yes really!&lt;/li&gt;
&lt;li&gt;Their social media links to not have any text that a screen reader can access.&lt;/li&gt;
&lt;li&gt;They start at heading level 2 on the home page, heading level 3 on others!&lt;/li&gt;
&lt;li&gt;Some of the buttons do not have visible focus indicators.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These are accessibility &lt;strong&gt;basics&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-could-you-do-me-a-favour"&gt;
  &lt;/a&gt;
  So &lt;strong&gt;could you do me a favour?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Can you tweet this article to @wethe15 and see if we can get their attention so I can help them fix this problem before the campaign gets momentum!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more-information"&gt;
  &lt;/a&gt;
  More information
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.wethe15.org/"&gt;WeThe15 website&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bbc.co.uk/news/disability-58231022"&gt;BBC article on WeThe15&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And of course, you can always brush up on your accessibility skills with my mega reference piece:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/101-digital-accessibility-tips-and-tricks-4728" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;101 Digital Accessibility tips and tricks&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial ・ Jul 30 ・ 68 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>a11y</category>
      <category>webdev</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Hello World! We've launched🚀</title>
      <author>Kartik Grewal</author>
      <pubDate>Thu, 19 Aug 2021 13:46:43 +0000</pubDate>
      <link>https://dev.to/canonic/hello-world-we-ve-launched-3c3b</link>
      <guid>https://dev.to/canonic/hello-world-we-ve-launched-3c3b</guid>
      <description>&lt;p&gt;Hello World!&lt;/p&gt;

&lt;p&gt;It brings us immense joy to announce that we are ready to get out of Beta. After 8 months of successfully launching our product, we worked on new features, bug fixes and great feedback from all of you. The result was a much stable and smoother platform equipped with features to help you build a production-ready backend in minutes without any knowledge of code.&lt;/p&gt;

&lt;p&gt;We'd love to hear your feedback here - &lt;a href="https://www.producthunt.com/posts/canonic-2"&gt;https://www.producthunt.com/posts/canonic-2&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wait-whats-canonic"&gt;
  &lt;/a&gt;
  Wait! ….what’s Canonic?
&lt;/h3&gt;

&lt;p&gt;Canonic is a low-code intuitive platform to build scalable backend and craft APIs for your web apps, mobile apps and microservices. It enables developers to ship production-ready backend instantly. All without writing a single line of code!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-whats-new-in-canonic"&gt;
  &lt;/a&gt;
  So what’s new in Canonic?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Execute Database and Scheduled Triggers without diving into cron&lt;/strong&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Integrate with external databases&lt;/strong&gt; - Postgres, SQL, MySQL, MongoDB &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Choose the region for deployment and keep your app secure&lt;/strong&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;New Marketplace of integrations&lt;/strong&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;SDK to help integrate backend with frontend&lt;/strong&gt; &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Accelerate Development time&lt;/strong&gt; - With our intuitive interface, defining database models and crafting APIs becomes quick and easy. Logic blocks help you define your business logic. And it's all hosted by default! so you can instantly start integrating APIs with your frontend.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Single Touch point to manage your entire backend&lt;/strong&gt; - Everything from hosting, to database, to APIs can be managed on Canonic, saving you the hassle of setting up and managing multiple services.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deploy scalable backend&lt;/strong&gt; - With instant deployments and serverless architecture, scalability stays high while keeping costs down. As your project grows, you can make use of built-in code editor to write business logic that require code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Automate Events&lt;/strong&gt; - Database &amp;amp; scheduled triggers help you achieve automation without diving into cron and scripts. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A much smoother and stable platform.&lt;/strong&gt; &lt;br&gt;
We’re excited for you to try our new and improved Canonic, and we hope that this tool will help you create an amazing backend. The Canonic Team and I are beyond thankful to our amazing and supportive Canonic community. Without the incredible amount of feedback and support we wouldn't be here today.&lt;/p&gt;

&lt;p&gt;Let us know your thoughts! - &lt;a href="https://www.producthunt.com/posts/canonic-2"&gt;https://www.producthunt.com/posts/canonic-2&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>backend</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Hands on Web Share API</title>
      <author>Felix Jordan</author>
      <pubDate>Thu, 19 Aug 2021 13:26:48 +0000</pubDate>
      <link>https://dev.to/ecxio/hands-on-web-share-api-5bb8</link>
      <guid>https://dev.to/ecxio/hands-on-web-share-api-5bb8</guid>
      <description>&lt;p&gt;Hello world, welcome to my first post!&lt;br&gt;
In this one, I will explain what the Web Share API is and what you can do with it. If you didn't work it yet, maybe you give it a try in your current or next project.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-the-web-share-api"&gt;
  &lt;/a&gt;
  What is the Web Share API?
&lt;/h2&gt;

&lt;p&gt;Let's say, you want to share some page specific data from your website to some social media platforms and maybe messengers.&lt;br&gt;
The Web Share API give web developers the power to use the native share mechanisms, that we all know from native applications (e.g. if you click the share button in Safari on the bottom center). It's one of these cool new APIs, that give the web more capability and push the keyword "Progressive Web App" a little more. If you haven't got any idea what the hell I'm talking about, here is a picture for you:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0jiqSwfa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53gosz0qo8cdhg3vox4i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0jiqSwfa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53gosz0qo8cdhg3vox4i.png" alt="Web Share API - native dialog on iOS after clicking the button"&gt;&lt;/a&gt;&lt;em&gt;Web Share API - native dialog on iOS after clicking the button&lt;/em&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#why-should-i-use-the-web-share-api"&gt;
  &lt;/a&gt;
  Why should I use the Web Share API?
&lt;/h2&gt;

&lt;p&gt;You may ask yourself why you should use this API, because you already have enough share possibilities like WhatsApp, Facebook, Twitter, LinkedIn etc. within your application. That's fine, but think about the Web Share API as the cool new kid on the block, which also makes it much easier for you to implement these share possibilities.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#without-the-web-share-api"&gt;
  &lt;/a&gt;
  Without the Web Share API
&lt;/h3&gt;

&lt;p&gt;In this case, we should have to provide a link/button for every social media/messenger platform. That means, we have to take care of each link separately. That also implies to maintain these links, because they could change in the future.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#with-the-web-share-api"&gt;
  &lt;/a&gt;
  With the Web Share API
&lt;/h3&gt;

&lt;p&gt;In this case, we will just have one button to click on. After clicking this button, the native dialog will be shown. One advantage of this native feature is, that it is known by the users. Another advantage (I think a bigger one) is, that if there is a new social media platform or native share feature (in the OS) it's directly implemented! All done by the native mechanism! Yeah! 🎉&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#how-can-i-use-the-web-share-api"&gt;
  &lt;/a&gt;
  How can I use the Web Share API?
&lt;/h2&gt;

&lt;p&gt;Like any other new cool Browser API out there, it's asynchronous. That means we have to work with Promises (if you are not familiar with Promises, I'm sure you will find a good article out there). In this case, we will call our &lt;code&gt;navigator.share()&lt;/code&gt; function, which will return a promise:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sharePromise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;share&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shareData&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Okay, maybe we need some more context to have a good example.&lt;/p&gt;

&lt;p&gt;Let's start with the &lt;code&gt;share()&lt;/code&gt; function, that will take the data object (&lt;code&gt;shareData&lt;/code&gt;) as a parameter. The result of this call, will be the native share dialog with some share targets, depending on the data that was thrown in. A &lt;strong&gt;share target&lt;/strong&gt; is a possible option, that is displayed to the user in the dialog. This could be a contact (via WhatsApp, Telegram etc.), native applications or built-in service (e.g. "Copy to clipboard"). To make it clear here, you can't decide which share targets should be shown to the user, they were provided by the user agent.&lt;/p&gt;

&lt;p&gt;So let's start with the most secret part ... the &lt;code&gt;shareData&lt;/code&gt;. Honestly, it's just an object that &lt;strong&gt;can&lt;/strong&gt; contain the following members:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;title&lt;/li&gt;
&lt;li&gt;text&lt;/li&gt;
&lt;li&gt;url&lt;/li&gt;
&lt;li&gt;files&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the future there could be some more members, but this is the current state. It's important that not all data members have to be provided, but at least one member should be inside.&lt;/p&gt;

&lt;p&gt;The user agent will take care of the &lt;code&gt;shareData&lt;/code&gt; and converts these in a suitable format for the different targets. This could include merging or discarding some members. But this magic is done behind the scene, we can just take a drink and enjoy the beautiful interface. 🍹&lt;br&gt;
The share targets that you will see on the native dialog depends on the &lt;code&gt;shareData&lt;/code&gt; payload. Anyway, let's dive into the different members of the &lt;code&gt;shareData&lt;/code&gt; object.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#title-member"&gt;
  &lt;/a&gt;
  Title member
&lt;/h3&gt;

&lt;p&gt;This member is a string and contains the title of the document that is shared. In my tests, I couldn't find it anyway. So in most cases, this member is not being displayed or used on most targets.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#url-member"&gt;
  &lt;/a&gt;
  Url member
&lt;/h3&gt;

&lt;p&gt;The url member is just a simple pure string URL that refers to a resource that should be shared. This could be an absolute or relative URL. If you provide a relative URL it will automatically update the url like a &lt;em&gt;href&lt;/em&gt; attribute.&lt;/p&gt;

&lt;p&gt;Pro Tip: If you just provide an empty string as url, then it will automatically reffers to the current page.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#text-member"&gt;
  &lt;/a&gt;
  Text member
&lt;/h3&gt;

&lt;p&gt;The text member is also a string option, that allows you to provide a body of the message for the shared data. This member is often use by the share targets (e.g. email body text).&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#everything-in-action"&gt;
  &lt;/a&gt;
  Everything in action
&lt;/h3&gt;

&lt;p&gt;You might think, why didn't we cover the files member. Please keep cool and take a breath, we will cover it in a couple of minutes. But I think now it's time for some code. Finally 🎉&lt;/p&gt;

&lt;p&gt;Let's say we have a fancy button on our page, where we just want to share some data related to the current page. The JS code would look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// our share button in the markup&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shareButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;share&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// create share data object&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shareData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Web Share API&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The best way to share your data.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt; &lt;span class="c1"&gt;// reffers to the current page&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// click event handler is necessary to call navigator.share()&lt;/span&gt;
&lt;span class="nx"&gt;shareButton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// does the browser supports the feature?&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;share&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;share&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shareData&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;🥳 Shared via API.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`😢 &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// you could do a fallback solution here ... &lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;😢 Your browser does not support the web share api.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's go through the code step by step. At first, we create an object and add some members to it, in this case &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;text&lt;/code&gt; and &lt;code&gt;url&lt;/code&gt;. Then we add an event listener to our &lt;code&gt;shareButton&lt;/code&gt;. In the event handler, we check for &lt;code&gt;navigator.share&lt;/code&gt;, because we want to check if the browser supports the Web Share API. If not, it will return &lt;code&gt;undefined&lt;/code&gt; and the else branch will be executed. There could be a fallback solution for all browsers that are not supporting this functionality. At least this would be the best, if we think about progressive enhancement. But in this post we want to concentrate on the if branch.&lt;/p&gt;

&lt;p&gt;First, we will open the &lt;code&gt;try&lt;/code&gt; block and call the &lt;code&gt;navigator.share(shareData)&lt;/code&gt; inside. Now the native dialog will open up with all possible share targets. With &lt;code&gt;await&lt;/code&gt; we will wait until the promise is fulfilled. That means, until the user cancel the sharing or chose a share target. On cancel, the code above will run the &lt;code&gt;catch&lt;/code&gt; block. If the user finally shares the data via a share target, then the promise will be resolved. Then we successfully shared some data with the Web Share API 🎉&lt;/p&gt;

&lt;p&gt;ℹ️ &lt;strong&gt;Important note&lt;/strong&gt;: Even if the sharing was successful, we didn't get any detailed information. The promise itself will just return &lt;code&gt;undefined&lt;/code&gt;. There is no way to get the chosen share target of the user. I know that's a bit disappointing, but there is a good reason.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There is a requirement to not allow the website to learn which apps are installed, or which app was chosen from &lt;code&gt;share()&lt;/code&gt;, because this information could be used for fingerprinting, as well as leaking details about the user's device. &lt;em&gt;&lt;a href="https://www.w3.org/TR/web-share/"&gt;https://www.w3.org/TR/web-share/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#files-member"&gt;
  &lt;/a&gt;
  Files member
&lt;/h3&gt;

&lt;p&gt;Now it's time to talk about the &lt;code&gt;files&lt;/code&gt; member. This one contains all shared files as an array. By adding this member to you &lt;code&gt;shareData&lt;/code&gt;, we have to handle binary data and the code gets a little more complex. But don't be afraid, we will go through it together.&lt;/p&gt;

&lt;p&gt;So time for some imagination 💭 again...&lt;br&gt;
Imagine you want to share a super cool looking image, if the user clicks on our share button. We need to load the file like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./super-cool-looking.jpeg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blob&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;blob&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;File&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;blob&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;image.jpg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;image/jpeg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;filesArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="c1"&gt;// add it to the shareData&lt;/span&gt;
&lt;span class="nx"&gt;shareData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;filesArray&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In these lines of code we fetch the image, convert the raw data to BLOB (binary large object) and create a new File with the File interface. Then we just put it into an array. Of course, it's possible for you to add their more than one file.&lt;br&gt;
In the end, we just add the files property to the &lt;code&gt;shareData&lt;/code&gt; object and initialize it with the &lt;code&gt;filesArray&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now you can share images via the Web Share API, but be aware that this feature is not supported in all browsers. There is also an opportunity to check, if file sharing is possible in the browser. You can use the &lt;code&gt;navigator.canShare()&lt;/code&gt; function for this. It could look like this for our example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;canShare&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;canShare&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;files&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;filesArray&lt;/span&gt;&lt;span class="p"&gt;}))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;share&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shareData&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;File sharing is not supported.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The function has one parameter like the &lt;code&gt;share()&lt;/code&gt; function and will return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, if the browser can share the object (&lt;code&gt;shareData&lt;/code&gt;) you put in.&lt;br&gt;
But there is a big disadvantage for this approach, because this functionality is experimental and is not supported everywhere. Sadly, file sharing isn't that easy to handle on every device and browser. But as always, do it progressive (like above) and support modern browsers.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#when-to-use"&gt;
  &lt;/a&gt;
  When to use?
&lt;/h2&gt;

&lt;p&gt;One important note, the &lt;code&gt;navigator.share()&lt;/code&gt; function will just work on a user interaction (e.g. click event handler). That means, you can not run the code on page load. Which is good, because otherwise we would have the next stupid thing like cookie banners or push notification permission request.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#which-browsers-support-the-web-share-api"&gt;
  &lt;/a&gt;
  Which Browsers support the Web Share API?
&lt;/h2&gt;

&lt;p&gt;I don't want to talk about it in detail, because it could be outdated. So here is the link to &lt;a href="https://caniuse.com/web-share"&gt;Web Share API support&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As shown above, the modern way of sharing data in JS makes the code quiet easy and understandable. Also it's easy to maintain the code and we get the native share mechanism, which will also support future social platforms automatically. I'm a real fan of this approach and would recommend to give it a try in your next project. If you already made some experiences with this API, please share your thoughts in the comment section below. 👇&lt;/p&gt;




&lt;p&gt;My sources&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/web-share/"&gt;w3c Web Share&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Navigator/share"&gt;mdn Web Share API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.dev/web-share/"&gt;web.dev Web Share&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
      <category>firstpost</category>
    </item>
    <item>
      <title>Fireslime is now Blue Fire</title>
      <author>Erick</author>
      <pubDate>Thu, 19 Aug 2021 13:07:26 +0000</pubDate>
      <link>https://dev.to/blue-fire/fireslime-is-now-blue-fire-405g</link>
      <guid>https://dev.to/blue-fire/fireslime-is-now-blue-fire-405g</guid>
      <description>&lt;p&gt;TLDR: Fireslime, the team behind the Flame Engine, is changing their name to Blue Fire. We are also moving away from the idea of being just an indie game studio and want to focus more on maintaining Open Source projects and create an open and friendly community around those projects.&lt;/p&gt;

&lt;p&gt;Almost 3 years ago, I (Erick) and Luan started a little project together. We both enjoyed game development, and after talking about some ideas, we created Fireslime, a small, informal, Indie Game Studio.&lt;/p&gt;

&lt;p&gt;When Fireslime started, Luan had already created the very first version of Flame, a Flutter based game engine. Since we both liked learning and exploring new things, we decided to use Flame as the engine of our games; that way, we could slowly improve the engine, while we developed the game. But back then, our focus was mainly on building games, and not the game engine itself. Flame was just a means to an end for us, a tool to create our games.&lt;/p&gt;

&lt;p&gt;As time passed, we created multiple games. We even fully released two of them, and launched two demo versions. They didn't manage to make much success on their own, but they helped us grow Flame.&lt;/p&gt;

&lt;p&gt;Suddenly, we started to realize that the people who were in the community Discord (that we created for the Fireslime's games) were actually there because of the Flame Engine or the other open source projects we maintain, and not for the games themselves.&lt;/p&gt;

&lt;p&gt;As the Flame Engine and our other projects grew, so did the time we spent on them. Which inadvertently meant that we spent less time working on our games.&lt;/p&gt;

&lt;p&gt;Over time, more people joined the team as maintainers, the first to join was Renan, a software developer, bad gamer and bad comedian. After Renan the next one to join was  Lukas, a ​​developer, keyboard builder, backpacker and climber. And last but not least, Jochum, an open source enthusiast, GitLab fanboy, collector of strange linux devices and proud owner of a Commodore 64. And while the team grew, that initial idea of being a game studio was steadily fading.&lt;/p&gt;

&lt;p&gt;So we decided to finally embrace this situation that we found ourselves in, and officially announce our new goal and focus: working on Open Source projects and building a friendly community around our Flutter and Dart projects.&lt;/p&gt;

&lt;p&gt;Fireslime was a name that we decided on originally for a game studio, as it was playful and friendly. But with our new focus in mind, we wanted something different; something open and something that had its roots in both Fireslime and Flutter. So, as a team, we chose the name Blue Fire.&lt;/p&gt;

&lt;p&gt;"Blue" expresses our focus and love for the Flutter framework and Dart, on which our projects are built and our community lives. And "Fire" represents our roots, our history and our connection to the Flame Engine.&lt;/p&gt;

&lt;p&gt;Does that mean that we will no longer build games? No! Our biggest project is the Flame Engine, and the best way of validating and testing such a game engine, is to build games with it. But now that we have our goal and focus clear, we can honestly say that we are committed to Flame, Flutter and our other Open Source projects (be it our other libraries or games), with the hopes to help and grow both the Flame and Flutter community and their corresponding ecosystem.&lt;/p&gt;

&lt;p&gt;So, from us as Fireslime, we thank everyone that has supported, helped and followed us over these last few years. And we hope you will all keep supporting us as Blue Fire as well, and be part of our community! &lt;/p&gt;

&lt;p&gt;The Blue Fire team wishes you happy coding.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Introduction to Machine Learning</title>
      <author>Vivek0712</author>
      <pubDate>Thu, 19 Aug 2021 13:06:56 +0000</pubDate>
      <link>https://dev.to/vivek0712/introduction-to-machine-learning-12c9</link>
      <guid>https://dev.to/vivek0712/introduction-to-machine-learning-12c9</guid>
      <description>&lt;p&gt;Welcome to my Azure Machine Learning Series where we will be discussing everything from scratch about Machine Learning and implementation of the same in Azure. &lt;/p&gt;

&lt;p&gt;In this blog, we will be discussing about &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is Machine Learning?&lt;/li&gt;
&lt;li&gt;Machine Learning Techniques&lt;/li&gt;
&lt;li&gt;Overview of Machine Learning Workflows&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  &lt;em&gt;Pre-requisites&lt;/em&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Basic Python Programming Knowledge&lt;/li&gt;
&lt;li&gt;Azure Account&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-buzz-about-machine-learning"&gt;
  &lt;/a&gt;
  The buzz about Machine Learning
&lt;/h2&gt;

&lt;p&gt;We have been hearing the buzz word “Machine Learning” very often lately. Why is that? Why not before two or three decades back? So machine learning just came up recently?&lt;/p&gt;

&lt;p&gt;No, Machine learning started in the late 1960s. So again back to the same question. Why is there so much hype very recently?&lt;/p&gt;

&lt;p&gt;Thanks to the huge volume of data we are generating nowadays and increased computational power at our disposal.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qbALR_fO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ajeqy4lui4umpoxxq7r3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qbALR_fO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ajeqy4lui4umpoxxq7r3.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;I am sure you would be confusing with the terms “Artificial Intelligence” and “Machine Learning”. Is it same?&lt;br&gt;
Machine Learning is a subset of Artificial Intelligence, to be put in simple words.&lt;/p&gt;

&lt;p&gt;This churns out a number of jobs in IT industries focusing on all sectors.&lt;/p&gt;

&lt;p&gt;Data Scientist is termed as “ The Sexiest Job of 21st Century” and there is no doubt in it.&lt;/p&gt;

&lt;p&gt;Not only data scientists, but there are also multiple related jobs such as Data Analysts, Data Engineer, Machine Learning Engineer and so on.&lt;br&gt;
Below gives a basic expertise and skill one possesses for the job.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D4-EiaXf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l03nmggavzn64ct9qfro.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D4-EiaXf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l03nmggavzn64ct9qfro.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-machine-learning"&gt;
  &lt;/a&gt;
  What is Machine Learning?
&lt;/h2&gt;

&lt;p&gt;Machine learning (ML) is the process of using mathematical models of data to help a computer learn without direct instruction.  It’s considered a subset of artificial intelligence (AI). Machine learning uses algorithms to identify patterns within data, and those patterns are then used to create a data model that can make predictions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qKRMxMoj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rxlq7u1mt6frku45lnjc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qKRMxMoj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rxlq7u1mt6frku45lnjc.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How does Machine Learning different from Classical Programming?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GcX9zWwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m6nd0yn4c3iayst4bwzx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GcX9zWwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m6nd0yn4c3iayst4bwzx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The classical programming is where the programmer has to construct a logic/algorithm where the input data is processed and output is given&lt;br&gt;
A machine learning model learns the rules/algorithm by itself by looking at the input, output training examples.&lt;br&gt;
It formulates the hypothesis at the end of the training.&lt;br&gt;
So with the hypothesis, the test output is generated form the input&lt;/p&gt;

&lt;p&gt;Let us take a simple example&lt;br&gt;
Assume that the training pairs given are&lt;br&gt;
&amp;lt;1,1&amp;gt; , &amp;lt;2,4&amp;gt;, &amp;lt; 3,9&amp;gt;, &amp;lt;4,16&amp;gt;,&amp;lt;5,25&amp;gt;&lt;br&gt;
The machine learning model tries to generate a hypothesis, say f(x) = 2x , g(x) = x*x , h(x) = x*4&lt;br&gt;
The best hypothesis among the hypothesis space is g(x) where the training output matches with the target.&lt;br&gt;
So the g(x) is the hypothesis generated from the model. Let us say, we give an input 10, which gets applied to the hypothesis i.e, g(10) = 10*10 = 100.&lt;br&gt;
So this is how a machine learning model works. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#machine-learning-techniques"&gt;
  &lt;/a&gt;
  Machine Learning Techniques
&lt;/h2&gt;

&lt;p&gt;There are three different types of learning known as&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Supervised Learning&lt;/li&gt;
&lt;li&gt;Unsupervised Learning&lt;/li&gt;
&lt;li&gt;Reinforcement Learning&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#supervised-learning"&gt;
  &lt;/a&gt;
  Supervised Learning
&lt;/h3&gt;

&lt;p&gt;A type of learning where we train the model by giving both inputs as well as the target(output). The above example is supervised learning.&lt;br&gt;
For instance, in your childhood days, your father or someone would have taught you to ride a bicycle. We learnt it only from teaching someone.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#unsupervised-learning"&gt;
  &lt;/a&gt;
  Unsupervised Learning
&lt;/h3&gt;

&lt;p&gt;A type of learning where is no target. The model tries to learn the data by itself without any target label.&lt;br&gt;
This is similar to the skills we acquire. For example, take swimming, most of us would have got pushed into the pool and we somehow figured to swim to the other end.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reinforcement-learning"&gt;
  &lt;/a&gt;
  Reinforcement Learning
&lt;/h3&gt;

&lt;p&gt;A type of learning based on reward and punishment.&lt;/p&gt;

&lt;p&gt;Few use-cases of Machine Learning are&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t8GrtGOU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5utk0irmy264idn8nixs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t8GrtGOU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5utk0irmy264idn8nixs.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-machine-learning"&gt;
  &lt;/a&gt;
  Benefits of Machine Learning
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Uncover insight&lt;/li&gt;
&lt;li&gt;Improve data integrity
&lt;/li&gt;
&lt;li&gt;Enhance user experience&lt;/li&gt;
&lt;li&gt;Reduce risk&lt;/li&gt;
&lt;li&gt;Anticipate customer behavior&lt;/li&gt;
&lt;li&gt;Lower costs
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#overview-of-stages-in-machine-learning"&gt;
  &lt;/a&gt;
  Overview of Stages in Machine Learning
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#data-collection-amp-preprocessing"&gt;
  &lt;/a&gt;
  Data Collection &amp;amp; Preprocessing
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Identify data source&lt;/li&gt;
&lt;li&gt;Data collection&lt;/li&gt;
&lt;li&gt;Data Transformation&lt;/li&gt;
&lt;li&gt;Anomaly Detection&lt;/li&gt;
&lt;li&gt;Cleaning the data&lt;/li&gt;
&lt;li&gt;Domain understanding
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Understand the domain the problem belongs. The domain knowledge can be acquired from domain experts. Useful knowledge can be applied in our later process for better results.&lt;/p&gt;

&lt;p&gt;Next thing is to go through the data.&lt;br&gt;
Identify the features, target and the type of problem. Think of the ways you can transform the data such that it is easy to understand.&lt;/p&gt;

&lt;p&gt;Go for &lt;em&gt;visualization of data&lt;/em&gt;. It can give you a lot of insights by plotting data in a graph. A little statistics knowledge would be a big boon for you.&lt;/p&gt;

&lt;p&gt;Only if the quality of the data is good, the results we acquire from our model will also be good.&lt;/p&gt;

&lt;p&gt;So the quality measures of data are as follows&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Accuracy: correct or wrong, accurate or not&lt;/li&gt;
&lt;li&gt;Completeness: not recorded, unavailable, …&lt;/li&gt;
&lt;li&gt;Consistency: some modified but some not, dangling, …&lt;/li&gt;
&lt;li&gt;Timeliness: timely update?&lt;/li&gt;
&lt;li&gt;Believability: how trustable the data are correct?&lt;/li&gt;
&lt;li&gt;Interpretability: how easily the data can be understood?&lt;/li&gt;
&lt;li&gt;Accessibility&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The major steps in data preprocessing are&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Data cleaning&lt;br&gt;
Fill in missing values, smooth noisy data, identify or remove outliers, and resolve inconsistencies&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Data integration&lt;br&gt;
Integration of multiple databases, data cubes, or files&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Data reduction&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dimensionality reduction&lt;/li&gt;
&lt;li&gt;Numerosity reduction&lt;/li&gt;
&lt;li&gt;Data compression&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Data transformation and data discretization&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Normalization&lt;/li&gt;
&lt;li&gt;Concept hierarchy generation&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#train-the-model"&gt;
  &lt;/a&gt;
  Train the model
&lt;/h3&gt;

&lt;p&gt;With the preprocessed data, we split it into train-test set and train the suitable machine learning with train dataset.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#validating-the-model"&gt;
  &lt;/a&gt;
  Validating the model
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Validating on test dataset&lt;/li&gt;
&lt;li&gt;Evaluating results&lt;/li&gt;
&lt;li&gt;Finalising the data model&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We evaluate how well the model performs with test data by calculating the metrics. We try hyper-parameter tuning( change the parameters of the model) or different models to see if we can improve the accuracy.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deployment-of-ml-model"&gt;
  &lt;/a&gt;
  Deployment of ML Model
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Deploying the ML Model&lt;/li&gt;
&lt;li&gt;Real-time prediction &lt;/li&gt;
&lt;li&gt;Model monitoring &lt;/li&gt;
&lt;li&gt;Visualizations&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have reached this far, I am sure you would have liked the article and understood the basics of Machine Learning by demystifying some myths.&lt;/p&gt;

&lt;p&gt;Follow the series to learn more about Machine Learning in Azure.&lt;/p&gt;

</description>
      <category>azure</category>
      <category>microsoft</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>50+ Best Bootstrap Responsive HTML5 Templates
- Ease Template</title>
      <author>easetemplates</author>
      <pubDate>Thu, 19 Aug 2021 12:52:22 +0000</pubDate>
      <link>https://dev.to/easetemplates/50-best-bootstrap-responsive-html5-templates-ease-template-pdn</link>
      <guid>https://dev.to/easetemplates/50-best-bootstrap-responsive-html5-templates-ease-template-pdn</guid>
      <description>&lt;h2&gt;
  &lt;a href="#life-coach-motivational-speakers-html5-templates"&gt;
  &lt;/a&gt;
  Life Coach Motivational Speakers HTML5 Templates
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t2ZdS6Gd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6sr8k3jg4xylvk1fnxwf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t2ZdS6Gd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6sr8k3jg4xylvk1fnxwf.jpg" alt="Free Bootstrap Template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Life Coach is beautiful &amp;amp; professional life coaching &amp;amp; motivational speakers websites templates; it has all page needs to design your website, pages are like homepage, coaching showcase, speaker profile, podcast showcase, video gallery, ask me (contact us).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://easetemplate.com/downloads/life-coach-motivational-speakers-html5-template/"&gt;Coach Bootstrap Template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;........................................................................................................................&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vegan-food-amp-restaurant-bootstrap-templates"&gt;
  &lt;/a&gt;
  Vegan — Food &amp;amp; Restaurant Bootstrap Templates
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BGiSEcEY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53v8uz2njektn4mx2cq1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BGiSEcEY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53v8uz2njektn4mx2cq1.jpg" alt="Vegan — Food &amp;amp; Restaurant Bootstrap Templates"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vegan is food &amp;amp; restaurant website design template; It’s clean super simple and beautiful eatery website design which is the ideal match for your hotel or food restaurant industry. It has pages like menu showcase, restaurant services, gallery, testimonial, about, 404 error page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://easetemplate.com/downloads/vegan-restaurant-food-banquet-responsive-templates/"&gt;Vegan Bootstrap Template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;........................................................................................................................&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#webhost-web-hosting-bootstrap-templates"&gt;
  &lt;/a&gt;
  Webhost Web Hosting Bootstrap Templates
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wyYFgf8F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ez6zxqf000zwmi8jfjx.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wyYFgf8F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ez6zxqf000zwmi8jfjx.jpg" alt="Webhost Web Hosting Bootstrap Templates"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Webhost is web hosting responsive web design template, template specially designed for provides services like shared web hosting, reseller web hosting, dedicated hosting, cloud hosting, colocation web hosting, managed hosting, grid hosting. It has page like hosting single page, pricing page, contact us, Faq, Testimonial page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://easetemplate.com/downloads/webhost-web-hosting-bootstrap-responsive-templates/"&gt;Webhost Bootstrap Template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;........................................................................................................................&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#jessica-a-nutritionist-dietician-bootstrap-template"&gt;
  &lt;/a&gt;
  Jessica a Nutritionist Dietician Bootstrap Template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mdCA81Jb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/67x9goidwqdoasrfeeuq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mdCA81Jb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/67x9goidwqdoasrfeeuq.jpg" alt="Jessica a Nutritionist Dietician Bootstrap Template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Jessica nutrition website design templates, start building for your dietician website easily. Modern, professional design &amp;amp; mobile-friendly site, support all major devices, you can showcase your nutritionist course, nutritionist services, dietician program and more diet pricing plan design, contact us etc..&lt;/p&gt;

&lt;p&gt;&lt;a href="https://easetemplate.com/downloads/jessica-nutritionist-dietician-website-template/"&gt;Jessica Bootstrap Template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;........................................................................................................................&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ascent-loan-business-bootstrap-templates"&gt;
  &lt;/a&gt;
  Ascent Loan Business Bootstrap Templates
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eakAdiLO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ck7dyz8cfdt7ln4qc2n5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eakAdiLO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ck7dyz8cfdt7ln4qc2n5.jpg" alt="Ascent Loan Business Bootstrap Templates"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ascent is loan website templates, a clean and simple website template created in a corporate style and dedicated to loan, bank, payday, lender, and mortgage businesses. You can showcase your loan product via using product list &amp;amp; product single page, it has the loan application form page, testimonial, contact us &amp;amp; more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://easetemplate.com/downloads/ascent-loan-business-responsive-website-templates/"&gt;Ascent Bootstrap Templates&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;........................................................................................................................&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#realone-real-estate-broker-bootstrap-templates"&gt;
  &lt;/a&gt;
  RealOne — Real Estate Broker Bootstrap Templates
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sZx1aKp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nub06l4bkgf8c4x9sa21.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sZx1aKp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nub06l4bkgf8c4x9sa21.jpg" alt="Real Estate Broker Bootstrap Templates"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;RealOne is real estate agent broker bootstrap website template. Its customizable home page, property listing &amp;amp; property single page are perfect for showcase your local property list easy. Design your agent profile with our agent about me page template.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://easetemplate.com/downloads/realone-real-estate-broker-bootstrap-templates/"&gt;RealOne Bootstrap Template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;........................................................................................................................&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hrms-human-resource-amp-management-bootstrap-template"&gt;
  &lt;/a&gt;
  HRMS Human Resource &amp;amp; Management Bootstrap Template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_cO65_hU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h082rcckoyvsmvt4sijc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_cO65_hU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h082rcckoyvsmvt4sijc.jpg" alt="Human Resource &amp;amp; Management Bootstrap Template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;HRMS Human Resource Management Responsive Template. It is very clean &amp;amp; professional corporate mobile responsive web design developed with Bootstrap front-end framework and perfect suit to human resource management company.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://easetemplate.com/downloads/hrms-human-resource-management-responsive-template/"&gt;HRMS Bootstrap Template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;........................................................................................................................&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#city-dance-academy-bootstrap-template"&gt;
  &lt;/a&gt;
  City Dance Academy Bootstrap Template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1XTYF8-V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/haeq8sr7t0vcqhnphp97.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1XTYF8-V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/haeq8sr7t0vcqhnphp97.jpeg" alt="City Dance Academy Bootstrap Template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to create a website for dance classes academy, city dance academy website template is suitable for you, all need to create your dance website design.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://easetemplate.com/downloads/city-dance-academy-website-templates/"&gt;Academy Bootstrap Template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;........................................................................................................................&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ajna-a-yoga-instructor-bootstrap-template"&gt;
  &lt;/a&gt;
  Ajna a Yoga Instructor Bootstrap Template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sNdsYWqs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qyu3vkkpbec375umyh21.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sNdsYWqs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qyu3vkkpbec375umyh21.jpg" alt="Ajna a Yoga Instructor Bootstrap Template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are run yoga studio classes and looking for best yoga website design, Ajna is suitable for your yoga classes, its responsive template, and beautiful design also mobile-friendly site.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://easetemplate.com/downloads/ajna-yoga-instructor-responsive-website-templates/"&gt;Ajna Bootstrap Template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;........................................................................................................................&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#oil-and-gas-a-industrial-bootstrap-template"&gt;
  &lt;/a&gt;
  Oil and Gas a Industrial Bootstrap Template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c5EAZ0Pe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ym9fqfqnfpdxrbaqjxc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c5EAZ0Pe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ym9fqfqnfpdxrbaqjxc.jpg" alt="Oil and Gas a Industrial Bootstrap Template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This creative design template is perfectly suitable to build a website like Gas &amp;amp; oil, Steelworks, Industrial, Manufacturer, Factory, Coal, and Engineering. A template is a fully responsive &amp;amp; SEO friendly website design.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://easetemplate.com/downloads/oil-gas-industrial-responsive-website-templates/"&gt;Oil and Gas Bootstrap Template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;........................................................................................................................&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#shine-a-cleaning-service-bootstrap-template"&gt;
  &lt;/a&gt;
  Shine — A Cleaning Service Bootstrap Template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gr36Q338--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8qcl094vmjf5n2zx9i3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gr36Q338--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8qcl094vmjf5n2zx9i3.jpg" alt="Shine — A Cleaning Service Bootstrap Template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Shine template is designed for cleaning service, maintenance service, housekeeping, maid service, domestic and commercial clean service provider, hospitality &amp;amp; Maintenance Services. Showcase your website using page template like service, pricing table, Faq's, about us and testimonial page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://easetemplate.com/downloads/shine-cleaning-service-website-template/"&gt;Cleaning Service Bootstrap Template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;........................................................................................................................&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tax-consultant-accountant-business-website-template"&gt;
  &lt;/a&gt;
  Tax Consultant Accountant Business Website Template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CbVKC_sf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1djl7imzfvwwh9oura2w.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CbVKC_sf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1djl7imzfvwwh9oura2w.jpg" alt="Tax Consultant Accountant Business Website Template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Are you tax specialists &amp;amp; finance consultant? looking for setting up a business for your accounting service, this beautiful and responsive template is perfectly suitable for your service.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://easetemplate.com/downloads/tax-consultant-accountant-business-website-template/"&gt;Tax Business Bootstrap Template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;........................................................................................................................&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#multispeciality-hospital-amp-clinic-website-template"&gt;
  &lt;/a&gt;
  Multispeciality Hospital &amp;amp; Clinic Website Template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XWfYkMvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2negn034ch30ff5qmzuo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XWfYkMvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2negn034ch30ff5qmzuo.jpg" alt="Multispeciality Hospital &amp;amp; Clinic Website Template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Asia the best healthcare website design template suitable for doctors, healthcare service provider, clinic, hospital, medical sites, dental clinic, multi-specialty hospital. Ready-made page template like service list, service single, gallery, testimonial, 404 error page, and contact us.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://easetemplate.com/downloads/asia-multispeciality-hospital-website-template/"&gt;Clinic Website Template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;........................................................................................................................&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#square-a-construction-website-template"&gt;
  &lt;/a&gt;
  Square a Construction Website Template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uJDr4A9d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u5tpn3zhbz1g4jjb8mq9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uJDr4A9d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u5tpn3zhbz1g4jjb8mq9.jpg" alt="Square a Construction Website Template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Square a construction website design templates, modern design &amp;amp; mobile friendly responsive template featured make them great. It has pages like showcase your construction project and its details, also inquiry form.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://easetemplate.com/downloads/square-building-construction-website-template/"&gt;Construction Website Template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;........................................................................................................................&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#digital-marketing-courses-website-template"&gt;
  &lt;/a&gt;
  Digital Marketing Courses Website Template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CfwtVBKZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qt72kghhwetktvdchzky.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CfwtVBKZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qt72kghhwetktvdchzky.jpg" alt="Digital Marketing Courses Website Template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Do you want to create a digital marketing website for your classes &amp;amp; courses?&lt;/p&gt;

&lt;p&gt;It is an awesome and creative template, The template comes with the home page, courses list, and course single page, testimonial page, contact us, about us, 404 error page, blog and blog single (static) pages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://easetemplate.com/downloads/digital-marketing-courses-website-template/"&gt;Digital Marketing Courses Website Template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;........................................................................................................................&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lawyer-website-templates"&gt;
  &lt;/a&gt;
  Lawyer Website Templates
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VPz_walc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7jx547jf0sz5whzil3x.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VPz_walc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7jx547jf0sz5whzil3x.jpg" alt="Lawyer Website Templates"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A law firm responsive website template is specially designed for private lawyers, law firms, lawyer referral services, judiciary information and visa lawyer. It’s responsive web design &amp;amp; professional layout that suit to kind of your business.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://easetemplate.com/downloads/law-firm-service-responsive-html-website-template/"&gt;Lawyer Website Templates&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;........................................................................................................................&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#royal-hotel-rooms-booking-website-template"&gt;
  &lt;/a&gt;
  Royal Hotel Rooms Booking Website Template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0D0nmFwU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d2an7va6qinllimh7zhg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0D0nmFwU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d2an7va6qinllimh7zhg.jpg" alt="Royal Hotel Rooms Booking Website Template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Looking for online hotel booking sites.? Royal is hotel booking website template is the perfect suit for hotel booking. Royal is an eye-catching and search-engine optimised website template. A template has pages like showcase a room listview and room single with room features, amenities, and thumbnail gallery. Royal is a hotel website responsive templates built with bootstrap front-end framework.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://easetemplate.com/downloads/royal-hotel-rooms-booking-website-template/"&gt;Royal Hotel Rooms Booking Website Template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;........................................................................................................................&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#seo-agency-marketing-responsive-website-template"&gt;
  &lt;/a&gt;
  SEO Agency Marketing Responsive Website Template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--myPlmuWM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qzpdh4whfmpx5sa2il55.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--myPlmuWM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qzpdh4whfmpx5sa2il55.jpg" alt="SEO Agency Marketing Responsive Website Template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are local digital marketing experts and looking for you SEO service website template. SEO Agency is built for SEO and Digital marketing company its fully customisable and responsive friendly bootstrap HTML template.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://easetemplate.com/downloads/seo-agency-marketing-responsive-website-template/"&gt;SEO Agency Website Template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;........................................................................................................................&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#physiotherapy-amp-rehabilitation-centre-website-design-template"&gt;
  &lt;/a&gt;
  Physiotherapy &amp;amp; Rehabilitation Centre Website Design Template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lz4yTG5_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9p0leccni9z6j5oublo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lz4yTG5_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9p0leccni9z6j5oublo.jpg" alt="Physiotherapy Bootstrap Template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You have physiotherapy &amp;amp; rehabilitation center, looking for therapist website design, our responsive web design template perfect suit to showcase your therapy service and about your clinic, contact us etc…&lt;/p&gt;

&lt;p&gt;&lt;a href="https://easetemplate.com/downloads/physiotherapy-free-website-template-download/"&gt;Physiotherapy Bootstrap Template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;........................................................................................................................&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#restaurant-responsive-website-template"&gt;
  &lt;/a&gt;
  Restaurant Responsive Website Template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gh2tQkuz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xh9xav961rwilclogc5c.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gh2tQkuz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xh9xav961rwilclogc5c.jpg" alt="Restaurant Responsive Website Template "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Design a restaurant website, all features and page are most help you to create your restaurant website design, We specially designed beautiful restaurant website template for restaurant, banquet, and offer an online food service owner. The template is mobile-friendly, modern design &amp;amp; page like menu list, contact us, 404 error page, testimonial, etc..&lt;/p&gt;

&lt;p&gt;&lt;a href="https://easetemplate.com/downloads/restaurant-responsive-website-templates-free-download/"&gt;Restaurant Bootstrap Template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;........................................................................................................................&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fitness-gym-website-template"&gt;
  &lt;/a&gt;
  Fitness Gym Website Template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PE7dV5OJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/po27chnxp43raeosng7c.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PE7dV5OJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/po27chnxp43raeosng7c.jpg" alt="Fitness Gym Website Template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Get a professionally designed website for fitness &amp;amp; gym. If you are looking for gym website design, must check our website template its custom design and muscular design that perfect suit to your fitness gym.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://easetemplate.com/downloads/fitness-gym-website-template-free-download/"&gt;Fitness Gym Website Template&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We working hard and all template is our custom handmade designed with the concept. All template is developed with bootstrap front-end framework. &lt;/p&gt;

&lt;p&gt;Total 25000+ Download.&lt;/p&gt;

&lt;p&gt;Thank you.&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Must Known JavaScript console.log() Tips And Tricks!</title>
      <author>TheDailyTechTalk</author>
      <pubDate>Thu, 19 Aug 2021 12:47:29 +0000</pubDate>
      <link>https://dev.to/thedailytechtalk/must-known-javascript-console-log-tips-and-tricks-2cfo</link>
      <guid>https://dev.to/thedailytechtalk/must-known-javascript-console-log-tips-and-tricks-2cfo</guid>
      <description>&lt;h2&gt;
  &lt;a href="#must-known-javascript-consolelog-tips-amp-tricks"&gt;
  &lt;/a&gt;
  Must known JavaScript console.log() tips &amp;amp; tricks!
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#javascript-console"&gt;
  &lt;/a&gt;
  JavaScript Console
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The console object provides access to the browser's debugging console (e.g. the Web console in Firefox). The specifics of how it works varies from browser to browser, but there is a de facto set of features that are typically provided.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Most developers usually use &lt;code&gt;console.log()&lt;/code&gt; to debug JavaScript code, but &lt;code&gt;console&lt;/code&gt; provides us with such a powerful set of features it would be shame not to use them, or at least know what they do.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;console.log()&lt;/code&gt; For general output of logging information.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;console.info()&lt;/code&gt; Informative logging of information.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;console.warn()&lt;/code&gt; Outputs a warning message.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;console.error()&lt;/code&gt; Outputs an error message to the Web console.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Using other logging besides &lt;code&gt;console.log()&lt;/code&gt; will provide you with more informative and clearer logs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d1haIhfp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4rh74jy8pa4thcj7duem.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d1haIhfp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4rh74jy8pa4thcj7duem.png" alt="console logging example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-start-by-exploring-console-object"&gt;
  &lt;/a&gt;
  Lets start by exploring console object
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Umad8Mcy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0kwlj6wc7wgj0e8q7gqa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Umad8Mcy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0kwlj6wc7wgj0e8q7gqa.png" alt="console"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As we can see Console object has plenty of methods. Lets explore some of more useful ones.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#consoleclear"&gt;
  &lt;/a&gt;
  console.clear()
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;console.clear()&lt;/code&gt; clear the console.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#consoledir"&gt;
  &lt;/a&gt;
  console.dir()
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;console.log()&lt;/code&gt; prints the object in its string representation while &lt;code&gt;console.dir()&lt;/code&gt; recognizes the object as an object and prints it’s properties in the form of a clean expandable list.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Rex&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;friends&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cat&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dog&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;duck&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]};&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dog&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8vAS9R3m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e0uarwub9qbw15xjf90r.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8vAS9R3m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e0uarwub9qbw15xjf90r.PNG" alt="console.dir()"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#consoletable"&gt;
  &lt;/a&gt;
  console.table()
&lt;/h2&gt;

&lt;p&gt;With &lt;code&gt;console.table()&lt;/code&gt; we can create beautiful tables. This is probably my favourite &lt;code&gt;console&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7zZoO7dI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1eka7eaofk3p3twymy0g.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7zZoO7dI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1eka7eaofk3p3twymy0g.PNG" alt="console.table"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#consoletime-consoletimelog-and-consoletimeend"&gt;
  &lt;/a&gt;
  console.time(), console.timeLog() and console.timeEnd()
&lt;/h2&gt;

&lt;p&gt;Use &lt;code&gt;console.time()&lt;/code&gt; to start a timer.&lt;br&gt;
Use &lt;code&gt;console.timeLog()&lt;/code&gt; to print time elapsed since the timer started.&lt;br&gt;
Use &lt;code&gt;console.timeEnd()&lt;/code&gt; to print the total amount of time since &lt;code&gt;console.time()&lt;/code&gt; started.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dtzQJKQL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/01eoysbgw6q8uw7r7025.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dtzQJKQL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/01eoysbgw6q8uw7r7025.PNG" alt="console.table()"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#consolegroup-and-consolegroupend"&gt;
  &lt;/a&gt;
  console.group() and console.groupEnd()
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The console.group() method creates a new inline group in the Web console log. This indents following console messages by an additional level, until console.groupEnd() is called.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3_xctQCp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvyy14yey3zykvxy37rm.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3_xctQCp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvyy14yey3zykvxy37rm.PNG" alt="group"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#console-logging-with-css"&gt;
  &lt;/a&gt;
  console logging with CSS
&lt;/h2&gt;

&lt;p&gt;This works with most console method such as &lt;code&gt;.log()&lt;/code&gt;, &lt;code&gt;.warn()&lt;/code&gt;, &lt;code&gt;.error()&lt;/code&gt; etc.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Please note that we have to use '%c' for css to work!&lt;/strong&gt;&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;%cTheDailyTechTalk!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;color:red;font-family:system-ui;font-size:4rem;-webkit-text-stroke: 1px black;font-weight:bold&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0AZfb8VJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxl8cpeg8znxtypzpubb.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0AZfb8VJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxl8cpeg8znxtypzpubb.PNG" alt="group"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I recently started a new blog &lt;a href="https://thedailytechtalk.com"&gt;TheDailyTechTalk&lt;/a&gt; where I create free content. If you liked this post and would like to read more posts about javascript please check it out 🎉🎉&lt;br&gt;
🥰&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you like what I write and want to support me, please follow me on &lt;a href="https://twitter.com/TheDailyTechTa1"&gt;Twitter&lt;/a&gt; to learn more about programming and similar topics ❤️❤️&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>programming</category>
    </item>
    <item>
      <title>Selectors in CSS once and for all!</title>
      <author>Amirsina Shadkami</author>
      <pubDate>Thu, 19 Aug 2021 12:44:56 +0000</pubDate>
      <link>https://dev.to/amirsina/selectors-in-css-once-and-for-all-1c68</link>
      <guid>https://dev.to/amirsina/selectors-in-css-once-and-for-all-1c68</guid>
      <description>&lt;p&gt;A question/problem that many may have faced while “learning/working” is that they are dubious or mistaken about choosing a selector. Since they don’t know which selector to use, they get stuck in an irritating loop and after trying to work it out for some time, they end up backing down from this idea and instead turn to DOM Manipulation using JavaScript or even worse, changing the DOM Structure!&lt;br&gt;
CSS has quite a variety of selectors but not all of them are used regularly in practice. Some have a specific usage that can be determined by their names and others remain a mystery but you don’t need to know ’em all. The purpose of this article is to point out and explain the most useful selectors once and for all!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can see a general diagram of the most used and important selectors below but before we talk about them you should know that I have not mentioned the class and ID selector ( ‘ . ‘ , ‘ # ‘ ). So if you don’t already know about these two, instead of reading this article I recommend you to start with the basics of CSS.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;1 ) Descendant selector&lt;/p&gt;

&lt;p&gt;To use this one you don’t need to use a specific character. It is the space between elements and it selects all the descendants of the element in question.&lt;/p&gt;

&lt;p&gt;Imagine we have :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a0kXHO7b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ur2zc845ln94txnbrbs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a0kXHO7b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ur2zc845ln94txnbrbs.png" alt="Descendant selector"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h48ZIeAW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rrb9nos6uwiz3tz9kf6o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h48ZIeAW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rrb9nos6uwiz3tz9kf6o.png" alt="Descendant selector"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Question: Which paragraph is the style applied to?&lt;br&gt;
Answer: To all&lt;br&gt;
When you are using the descendant selector, indentation of the elements is not important and they only need to be a descendant of the main wrapper.&lt;/p&gt;

&lt;p&gt;So even in the situation below, the styles will be applied to the paragraphs as long as they are descendants of “post”.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--asyCb-lU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nri3xzb6idnm4fhzzfvv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--asyCb-lU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nri3xzb6idnm4fhzzfvv.png" alt="Descendant selector"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2) Direct child selector (&amp;gt;)&lt;/p&gt;

&lt;p&gt;Only the elements that are directly mentioned as a child to the parent element are selected, not the ones that are inside a second or third wrapper element.&lt;br&gt;
Look at the last example rewritten with the direct child selector:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KZl16Dj5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xhjbv85a0xr4cxlrr7gh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KZl16Dj5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xhjbv85a0xr4cxlrr7gh.png" alt="Direct child selector"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8dSBZoS0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tv9pmd5far5rxwk50zpg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8dSBZoS0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tv9pmd5far5rxwk50zpg.png" alt="Direct child selector"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Question: Which paragraph is the style applied to?&lt;br&gt;
Answer: The first paragraph after the section tag and the last one before closing the section tag&lt;/p&gt;

&lt;p&gt;3) Sibling selector&lt;/p&gt;

&lt;p&gt;3.1) General Sibling Selector (~)&lt;br&gt;
After using this selector, all the elements on the right side of “~” (Which are of the same kind) are selected, ONLY IF they have the same parent.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e0gHmHX---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70ykopi7xmd7b4zguuh5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e0gHmHX---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70ykopi7xmd7b4zguuh5.png" alt="General Sibling Selector"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V_4PYjlv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sb8ttxhifq380aq26c05.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V_4PYjlv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sb8ttxhifq380aq26c05.png" alt="General Sibling Selector"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Question: Which paragraph is the style applied to?&lt;br&gt;
Answer: paragraph 19&lt;br&gt;
The selected paragraphs must:&lt;br&gt;
Come after the element “H1”&lt;br&gt;
Have the same parent as “H1”&lt;br&gt;
Since the two conditions above are not true for paragraphs 1, 5, 9, 15, and 23 the style will not be applied to them.&lt;br&gt;
Why?Lines 1, 5, 9: They are placed before “H1”.&lt;br&gt;
Lines 15, 23: Although they come after “H1”, they don’t have the same parent as “H1”.&lt;/p&gt;

&lt;p&gt;3.2) Adjacent sibling selector (+)&lt;br&gt;
Using this selector, we only select the first element on the right side of “+”. So if we used this selector in the last example, none of the paragraphs would be selected. But if we had a number of paragraphs right after “H1”, no matter how many, only the first one would be selected.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1HNKlqTg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7wayl7ua2r4g9gi22j0g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1HNKlqTg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7wayl7ua2r4g9gi22j0g.png" alt="Adjacent sibling selector"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZAfumUXl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qq1qwqrujz5y5yfslts9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZAfumUXl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qq1qwqrujz5y5yfslts9.png" alt="Adjacent sibling selector"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Question: Which paragraph is the style applied to?&lt;br&gt;
Answer: Just the one after “H1” (paragraph 14)&lt;/p&gt;

&lt;p&gt;4) Attribute Present Selector&lt;br&gt;
HTML tags have lots of attributes which we can use in CSS.&lt;br&gt;
For example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1B6Tplnu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rnkjlourkn7e63a9agit.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1B6Tplnu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rnkjlourkn7e63a9agit.png" alt="Attribute Present Selector"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ByUpJ74L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yif57yjo2ttt4htvti5u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ByUpJ74L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yif57yjo2ttt4htvti5u.png" alt="Attribute Present Selector"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the examples above we’ve used the “href”, “type”, and “id” attributes but we can use others like “form” or “input” or etc.&lt;br&gt;
The characters &lt;code&gt;$, ^, *&lt;/code&gt; may seem a bit confusing but wait a second:&lt;br&gt;
^= : The attribute selected for the used element starts with what is inside (‘ ‘)&lt;/p&gt;

&lt;p&gt;*= : The attribute selected for the used element includes what’s inside (‘ ‘)&lt;/p&gt;

&lt;p&gt;$= : The attribute selected for the used element ends with what is inside (‘ ‘)&lt;/p&gt;

&lt;p&gt;Let’s take another look at the example:&lt;br&gt;
In the first item we just used the equal sign and it contains “&lt;a href="https://medium.com%E2%80%9D"&gt;https://medium.com”&lt;/a&gt;. This selector picks the “a” tags that exactly contain medium’s href.&lt;br&gt;
In the second item the “a” tags that their href begins with ‘&lt;a href="https://nest%E2%80%99"&gt;https://nest’&lt;/a&gt; are selected.&lt;br&gt;
In the third item the “a” tags that their href ends in. ‘.org’ are selected.&lt;br&gt;
In the fourth item the “a” tags that their href contains ‘docker’ are selected.&lt;br&gt;
In the fifth item ‘I’ type ol lists are selected.&lt;br&gt;
In the sixth item the span inside div with the ID “unique_div” is selected.&lt;/p&gt;

&lt;p&gt;5) pseudo-classes&lt;br&gt;
pseudo-classes are used at times when we need to have access to an element in a certain state or situation. Below we are going to discuss 8 of the most used ones.&lt;/p&gt;

&lt;p&gt;5.1) link pseudo classes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;a:link {…} ~&amp;gt; Links that have not been visited and are in their normal state.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;a:visited {…} ~&amp;gt; Links that have been visited.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;5.2) User action pseudo classes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;a:active‌ {…} ~&amp;gt; the link that is active now
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Element:hover {…} ~&amp;gt; the element which the cursor is on now
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Element:focus {…} ~&amp;gt; the element that is touched right now
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;5.3) User interface pseudo classes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;input:enabled {…} ~&amp;gt; active inputs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;input:disabled {…} ~&amp;gt; inactive inputs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;input:checked {…} ~&amp;gt; checked checkboxes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;input:indeterminate {…} ~&amp;gt; when there are no changes applied to a radio box or a select box
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;5.4) Structural &amp;amp; Position Pseudo-classes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Element:first-child {…} ~&amp;gt; selects the first child
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Element:last-child {…} ~&amp;gt; selects the last child
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Element:first-of-type {…} ~&amp;gt; the first child of a parent from a specific element
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Element:last-of-type {…} ~&amp;gt; the last child of a parent from a specific element
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Element:only-child {…} ~&amp;gt; the child is selected only if it’s the only child to the parent element
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you find it a bit difficult to understand “only-child” look at the example below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;div span:only-child {
  color: firebrick;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;section&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;span&amp;gt;Text&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;Text&amp;lt;/span&amp;gt;
    &amp;lt;div&amp;gt;
      &amp;lt;span&amp;gt;This will be selected&amp;lt;/span&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The only selected span is the one that is div’s only child.&lt;/p&gt;

&lt;p&gt;5.5) Numbers &amp;amp; Expressions Pseudo-classes&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Element:nth-child(n) : The nth child is directly selected.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Element:nth-child(an) : The child’s of the multiples of ‘a’ &lt;br&gt;
are selected.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Element:nth-child(n+b) : This one’s a bit different. Considering b’s value, the children are selected starting from b itself and on.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Example :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;li:nth-child(n + 4) ~&amp;gt; Selected from the fourth 'li' onwards (the fourth item itself is also selected)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Element:nth-child(an+b) : Here, n starts from 0 and after getting multiplied by a, it’s added to b and then the children are selected.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Example :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;li:nth-child(4n+7){...} ~&amp;gt;(4×0)+7, (4×1)+7, (4×2)+7 = children 11 and 15 are selected.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Element:nth-child(an-b) : Here too, n starts from 0 and after getting multiplied by a, b is subtracted.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;li:nth-child(6n-4){...} ~&amp;gt; (6×0)-4, (6×1)-4, (6×2)-4 = children 2, 8, and 14 are selected
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;5.6)Empty Pseudo-class&lt;/p&gt;

&lt;p&gt;Here, elements are selected that are either empty or containing just a comment. But notice that since space and tab are strings they are not considered as empty.&lt;/p&gt;

&lt;p&gt;For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#post span:empty {…}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;section id=”post”&amp;gt;
  &amp;lt;span&amp;gt;&amp;lt;/span&amp;gt; ~&amp;gt; This will be selected
  &amp;lt;span&amp;gt; &amp;lt;/span&amp;gt; ~&amp;gt; This will not be selected (because of space)
  &amp;lt;span&amp;gt;&amp;lt;!--comment--&amp;gt;&amp;lt;/span&amp;gt; ~&amp;gt; This will be selected
&amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;5.7)Negation Pseudo-class&lt;/p&gt;

&lt;p&gt;As you can probably guess by the name, this selector does not include the elements mentioned inside ( :not() )&lt;br&gt;
An interesting thing about this selector is that it can be combined with the previous ones, for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;li:not(.li-elements) {…} ~&amp;gt; a list of items not including the mentioned class
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ul li:not(:nth-child(2n)) {…} ~&amp;gt; a list of items are selected that are not multiples of 2.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;5.8) Textual Pseudo-elements&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Element::after {…} ~&amp;gt; using this selector, a pseudo element is added to the end of the selected element, which can have content or/and style. It’s usually used to add an animation or icon for complementary purposes.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Element::before {…} ~&amp;gt; This one is like after, with the only difference being the pseudo elements positioning moved to the beginning of the selected element.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Element::first-letter {…} ~&amp;gt; The first textual character inside our specific element is selected. You must have seen this one in publications websites.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Element::first-line {…} ~&amp;gt; selects the first line of the specific element.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Element::placeholder {…} ~&amp;gt; If the specific element has a placeholder, it’s selected and you can add a style to it.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Element::selection {…} ~&amp;gt; when you select a text in a web page, the selected piece of text has a certain color and background color. Depending on the OS’s user agent there’s a default accent color, for example, it’s blue and white for Windows, orange and white for Ubuntu, and macOS white. 
Bottomline being, this color is changeable and this is made possible using this selector.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For example :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;::selection {
  background:#0f94e9;
  color:#fff
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m5HP_TLZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9werxdxvhnfpk8e22h99.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m5HP_TLZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9werxdxvhnfpk8e22h99.jpeg" alt="Element selection"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JNyApf_b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a1727ymz7sjzhge6qdog.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JNyApf_b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a1727ymz7sjzhge6qdog.jpeg" alt="Element selection"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>style</category>
      <category>frontend</category>
    </item>
    <item>
      <title>My Journey from Angular to React in 2021</title>
      <author>Indrajeet Nikam</author>
      <pubDate>Thu, 19 Aug 2021 12:30:19 +0000</pubDate>
      <link>https://dev.to/indrajitbnikam/my-journey-from-angular-to-react-in-2021-5bai</link>
      <guid>https://dev.to/indrajitbnikam/my-journey-from-angular-to-react-in-2021-5bai</guid>
      <description>&lt;h2&gt;
  &lt;a href="#my-journey-from-angular-to-react-in-2021"&gt;
  &lt;/a&gt;
  My Journey from Angular to React in 2021
&lt;/h2&gt;

&lt;p&gt;Hi Folks, long time no see 👋🏼 😷&lt;/p&gt;

&lt;p&gt;Hope everyone is safe &amp;amp; doing fine amidst this Covid situation.&lt;/p&gt;

&lt;p&gt;This time, I have a different topic to talk about. i.e. &lt;strong&gt;&lt;em&gt;"How I transitioned from an Angular Developer to a Senior React Developer in 2021."&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hope you will learn and be able to relate a thing or two from my journey.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#angular-history"&gt;
  &lt;/a&gt;
  Angular history
&lt;/h1&gt;

&lt;p&gt;I got introduced to Angular back in 2018 when I was doing my PG-DAC course in Sunbeam Institute(CDAC Centre), Pune. It was very brief but it got me started with Angular Development.&lt;/p&gt;

&lt;p&gt;After the course was completed, I got a job offer from Siemens India.&lt;/p&gt;

&lt;p&gt;Where I spent the last +3 years working on Angular related projects.&lt;/p&gt;

&lt;p&gt;I learned so much during this time from my awesome colleagues and through self-teaching. This time helped me build a strong foundation as a framework-agnostic web developer.&lt;/p&gt;

&lt;p&gt;During this time I also explored Web-Assembly, CSS3(in-depth) and many other interesting topics related to web development.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#roadblocks-ahead"&gt;
  &lt;/a&gt;
  Roadblocks ahead
&lt;/h1&gt;

&lt;p&gt;I think Angular is pretty good as a framework, in fact, in certain aspects, it's better than react(Now that I work with react, I'm allowed to say that 😅). But, much as I loved working with Angular on different projects. Soon I realised that, that's not what everybody thinks.&lt;/p&gt;

&lt;p&gt;When I learned about React/Vue's popularity 1 year back. I was stunned. I did my research at the time and I just could not ignore the fact that,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React has much more jobs than Angular worldwide. which means more opportunities.&lt;/li&gt;
&lt;li&gt;A pretty good number of big companies use React. For example Netflix, Twitter, Airbnb, AWS to name a few.&lt;/li&gt;
&lt;li&gt;Sheer amount of community size that reacts has especially because of JS(as opposed to TS based Angular). Which means more support.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is just scratching the surface. A lot of new startups prefer to React as their go-to framework for web development. This is also the reason I got a job at &lt;a href="https://www.cashfree.com/"&gt;Cashfree&lt;/a&gt; as well.&lt;/p&gt;

&lt;p&gt;You can find many detailed comparisons in the following articles,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://fulcrum.rocks/blog/angular-vs-react/"&gt;https://fulcrum.rocks/blog/angular-vs-react/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.simform.com/blog/angular-vs-react"&gt;https://www.simform.com/blog/angular-vs-react&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So my reason was not something technical, like react is much better than angular when it comes performance, bla bla bla! Because I don't think one is better than the other, both are great frameworks build by brilliant people. It was rather the ecosystem that React has developed so far, that led me to believe, it's time to switch the framework for good.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#react-journey"&gt;
  &lt;/a&gt;
  React Journey
&lt;/h1&gt;

&lt;p&gt;I had decided to switch to react as my primary framework about a year ago.&lt;/p&gt;

&lt;p&gt;Initially, I did not have any idea where to start? So I started with some youtube videos to get some feel of React. But they were short and did not provide much information. I used to create small applications like the Todo app or tic-tac-toe game etc. in my spare time. But it was still not enough. Unlike Angular, I did not work on React in a professional capacity at the time. So It was hard for me to understand how the entire ecosystem works together. All I was working on was some small apps that only gave me insights into few features of React.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Trust me, I hated React in the first few weeks as I was heavily used to Typescript before that (Angular people can relate better) 😂&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After quite some time(Approx. 6 months 😅), I realised that the only way for me to learn a great deal about React is through some bigger project.&lt;/p&gt;

&lt;p&gt;So started looking for such courses on &lt;a href="https://www.udemy.com/"&gt;Udemy&lt;/a&gt;(My goto learning platform, also created in React 😉).&lt;/p&gt;

&lt;p&gt;After compiling down to a few courses, The course that I found the most helpful was,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fffR-8lW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629366117674/c5hOh2pkD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fffR-8lW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629366117674/c5hOh2pkD.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#complete-react-developer-in-2021-w-redux-hooks-graphql"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.udemy.com/course/complete-react-developer-zero-to-mastery/"&gt;Complete React Developer in 2021 (w/ Redux, Hooks, GraphQL)&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;BTW, this is not an affiliated link.&lt;/p&gt;

&lt;p&gt;Authors of the course &lt;a href="https://www.udemy.com/user/andrei-neagoie/"&gt;Andrei Neagoie&lt;/a&gt; &amp;amp; &lt;a href="https://www.udemy.com/user/yihua-zhang-5/"&gt;Yihua Zhang&lt;/a&gt; are very experienced &amp;amp; passionate developers. Their teaching style is also pretty simple. You learn everything by doing. They have only worked on one project throughout the course to teach all the below topics, which helps you understand how the entire ecosystem works together(which you should know!).&lt;/p&gt;

&lt;p&gt;It teaches you about,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React libraries like React-router, Redux, Thunk, Redux-saga etc.&lt;/li&gt;
&lt;li&gt;Styled components&lt;/li&gt;
&lt;li&gt;HOC, Container patterns&lt;/li&gt;
&lt;li&gt;React Hooks&lt;/li&gt;
&lt;li&gt;Context API&lt;/li&gt;
&lt;li&gt;GrapghQL + Apollo&lt;/li&gt;
&lt;li&gt;Performance Optimisation&lt;/li&gt;
&lt;li&gt;Testing&lt;/li&gt;
&lt;li&gt;and much more...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On top of that, &lt;a href="https://zerotomastery.io/"&gt;ZTM&lt;/a&gt;(ZeroToMastery) gives you access to the discord community which has a huge number of active members.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9O4GjFPz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629366196324/VhdwNFM-9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9O4GjFPz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629366196324/VhdwNFM-9.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I just can't emphasise enough, how great this course is ❤️.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#react-dev-job"&gt;
  &lt;/a&gt;
  React Dev Job
&lt;/h1&gt;

&lt;p&gt;At this point, I was already familiar with React to pretty good lengths. I had also worked on a lot of projects. You can find them on my portfolio &lt;a href="https://indrajeet.me"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I also created my portfolio using react during this time to stand out even more.&lt;/p&gt;

&lt;p&gt;Now it was time to search for a react job and cracking it.&lt;/p&gt;

&lt;p&gt;In the beginning I tried using platforms like &lt;a href="http://naukri.com"&gt;Naukri.com&lt;/a&gt;, &lt;a href="http://linkedin.com"&gt;LinkedIn.com&lt;/a&gt; etc. I used to apply almost everywhere in the beginning(with my so-called Indian Mentality 😅), Good number of companies used to follow up soon as well. But After having discussions, I used to get the same feeling over and over again. Interviews felt a bit easy. I could not picture myself learning something in these companies(Not referring to every company!). So I wanted to apply for a job at some startups that I knew back then and were doing great IMHO. Coincidentally, One day I tried applying to this blogging platform, &lt;a href="https://hashnode.com/"&gt;Hashnode&lt;/a&gt;. At the time they used to post their jobs on &lt;a href="https://www.notion.so/"&gt;Notion&lt;/a&gt; &amp;amp; &lt;a href="https://angel.co/jobs"&gt;AngelList&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;That's how I got to know about AngelList. There were few other good sites that I found later. But AngelList changed my life and Aspirations. It not only had great startups listed on it, It even had a job posting from across the world with compensation mentioned. That just blew my mind and I got a better stand of how much I am worth in the IT industry.&lt;/p&gt;

&lt;p&gt;I now started compiling job opportunities from AngelList. I started applying soon after.&lt;/p&gt;

&lt;p&gt;To be honest, I applied at more than 100 job postings, I gave more than 40 interviews during the span of 3 months. As I spent a lot of time being interviewed almost every day. I learned a lot about my improvement areas and eventually became good at those.&lt;/p&gt;

&lt;p&gt;At the end of this Job Search Spree. I found my current company Cashfree and I finally accepted an offer for Senior Frontend Developer. At Cashfree alone I gave about 4 Interviews and some Technical Tests.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---K8Tda78--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E9JReyeVkAcw1xi.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--SOrgJ7K6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1297866990455939072/7m-Ojieh_normal.jpg" alt="Indrajeet Nikam profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Indrajeet Nikam
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @indrajeet_nikam
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Excited to announce that I have joined &lt;a href="https://twitter.com/gocashfree"&gt;@gocashfree&lt;/a&gt; in the Engineering team! &lt;br&gt;&lt;br&gt;Looking forward to working with my awesome colleagues and developing cutting edge solutions for the fintech ecosystem. I can already feel the adrenaline of working in a dynamic workplace.&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/Cashfree"&gt;#Cashfree&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      09:52 AM - 19 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1428293694898069506" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1428293694898069506" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1428293694898069506" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h1&gt;
  &lt;a href="#advice"&gt;
  &lt;/a&gt;
  Advice
&lt;/h1&gt;

&lt;p&gt;Few things that helped me.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Preparing for almost a year, being interviewed 40+ times, creating your own portfolio. All of it might look daunting to some people(including me 1 year ago). But don't let it discourage you from &lt;strong&gt;starting small.&lt;/strong&gt; I never planned to do this many things in the first place. It just happened. So don't worry, &lt;strong&gt;It's worth the effort&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Work on your &lt;strong&gt;online presence for better opportunities&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Get your basics right.&lt;/strong&gt;(I mean JavaScript, CSS in case of frontend dev)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Be Patient&lt;/strong&gt; in your job search. &lt;strong&gt;You don't have to join the first company you apply to.&lt;/strong&gt; You almost always get less pay than you deserve that way.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Be open-minded for opportunities&lt;/strong&gt; and plan logically.&lt;/li&gt;
&lt;li&gt;Most important, &lt;strong&gt;Don't get into this Angular vs. React fight 😂.&lt;/strong&gt; Both are great and you should know both(at least to a certain extent).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I used to blog on  &lt;a href="https://fullyunderstood.com"&gt;fullyunderstood.com&lt;/a&gt;, you can check my previous blogs there.&lt;/p&gt;

&lt;p&gt;From here onwards, I'll be posting all my blogs on this domain 👉🏼 &lt;a href="https://blog.indrajeet.me"&gt;blog.indrajeet.me&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In case you are interested in Technical blogs regarding web development. You can consider following me  &lt;a href="https://blog.indrajeet.me/"&gt;here&lt;/a&gt;, on  &lt;a href="https://www.linkedin.com/in/indrajeet-nikam-3737a8101/"&gt;LinkedIn&lt;/a&gt;  or on  &lt;a href="https://twitter.com/indrajeet_nikam"&gt;Twitter&lt;/a&gt; .&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>angular</category>
    </item>
    <item>
      <title>How To Use Error Boundaries in React With Error Monitoring</title>
      <author>Justin Hunter</author>
      <pubDate>Thu, 19 Aug 2021 12:27:06 +0000</pubDate>
      <link>https://dev.to/exceptionless/how-to-use-error-boundaries-in-react-with-error-monitoring-435h</link>
      <guid>https://dev.to/exceptionless/how-to-use-error-boundaries-in-react-with-error-monitoring-435h</guid>
      <description>&lt;p&gt;Backend engineers have all the tools. Nice error handling. Reporting. Metrics. What about us frontend devs? Sure, we can catch errors in our functions, but what about errors in our presentational code? Take React for example. Write some bad code in your function component and the whole app crashes.&lt;/p&gt;

&lt;p&gt;Fortunately, frontend devs are getting more and more tools to help them with error handling. In fact, with the release of React 16, a new tool was added to the toolbox designed to specifically handle errors in components. &lt;a href="https://reactjs.org/docs/error-boundaries.html"&gt;Error Boundaries allow developers to catch and handle errors&lt;/a&gt; in the presentational layer of React applications. From the React team's announcement:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In the past, JavaScript errors inside components used to corrupt React’s internal state and cause it to emit cryptic errors on next renders. These errors were always caused by an earlier error in the application code, but React did not provide a way to handle them gracefully in components, and could not recover from them.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That all changed with React 16. However, if you wanted to recover from a presentational layer error AND report it, there wasn't anything out of the box to help you. This is where &lt;a href="https://exceptionless.com/?utm_source=first_signup&amp;amp;utm_medium=blog&amp;amp;utm_campaign=error_boundary"&gt;Exceptionless&lt;/a&gt; (an open-source error handling and monitoring tool) and React work really well together.&lt;/p&gt;

&lt;p&gt;Let's run through a quick tutorial that creates a React app that does the following:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creates-an-error-boundary"&gt;
  &lt;/a&gt;
  Creates an Error Boundary
&lt;/h2&gt;

&lt;p&gt;Forces an error in a function component&lt;br&gt;
Recovers from that error&lt;br&gt;
Reports it to our monitoring service (Exceptionless)&lt;br&gt;
Getting Started&lt;br&gt;
For this tutorial, you will need to have the following installed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Node.js v12 or greater&lt;/li&gt;
&lt;li&gt;NPM&lt;/li&gt;
&lt;li&gt;Text editor&lt;/li&gt;
&lt;li&gt;&lt;a href="https://exceptionless.com/?utm_source=second_signup&amp;amp;utm_medium=blog&amp;amp;utm_campaign=error_boundary"&gt;Free account on Exceptionless&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With those things in place, let's generate our React app. From the command line, run the following:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npx create-react-app error-boundary-example&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;When your app is created, change into the directory and install the Exceptionless React package:&lt;/p&gt;

&lt;p&gt;cd error-boundary-example &amp;amp;&amp;amp; npm i @exceptionless/react&lt;/p&gt;

&lt;p&gt;This should get you set up with an app and the required package. Now, let's write a bit of code to show off the functionality. We'll walk through setting up an Error Boundary first.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#creating-an-error-boundary-in-react"&gt;
  &lt;/a&gt;
  Creating an Error Boundary in React
&lt;/h2&gt;

&lt;p&gt;The first thing we need to do is create an Error Boundary file. This will act as a wrapper component for the rest of our application. In src folder of your React application, create a new file called ErrorBoundary.js. This will allow us to render a fallback when we hit an error in our component. We'll use Exceptionless's built-in Error Boundary to actually handle reporting the error. You'll see that soon, but let's focus on rendering the fallback for now.&lt;/p&gt;

&lt;p&gt;Inside your new file, add the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";

class ErrorBoundary extends React.Component {
  constructor(props) {
    super(props);
    this.state = { hasError: false };
  }

  static getDerivedStateFromError(error) {
    return { hasError: true };
  }

  render() {
    if (this.state.hasError) {
      return (
        &amp;lt;div&amp;gt;
          &amp;lt;h1&amp;gt;Uh oh!&amp;lt;/h1&amp;gt;
          &amp;lt;p&amp;gt;
            This wasn't supposed to happen. If you continue to see this message,
            please reach out to support.
          &amp;lt;/p&amp;gt;
        &amp;lt;/div&amp;gt;
      );
    }

    return this.props.children;
  }
}

export default ErrorBoundary;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This file will, again, wrap our main application code. So it will work throughout all of our components. If there's an error in a component, rather than totally crashing the application, it will render what we have in our render method here. You can change this to include whatever styling and information you'd like. I kept mine pretty simple.&lt;/p&gt;

&lt;p&gt;Now, we need to connect this to our application components.&lt;/p&gt;

&lt;p&gt;Wrapping The App Component&lt;br&gt;
You may have many providers in your application that all wrap your main App component. That's OK. This new Error Boundary component will simply wrap everything at the top level. Go to your index.js and update your file to look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';
import ErrorBoundary from './ErrorBoundary';

ReactDOM.render(
  &amp;lt;React.StrictMode&amp;gt;
    &amp;lt;ErrorBoundary&amp;gt;
      &amp;lt;App /&amp;gt;
    &amp;lt;/ErrorBoundary&amp;gt;
  &amp;lt;/React.StrictMode&amp;gt;,
  document.getElementById('root')
);

reportWebVitals();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, before we handle reporting the error to Exceptionless, let's make sure this code works. Start up your application with npm start. We need to force an error. So, go into your App.js file and add an undefined variable into your component body:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import logo from './logo.svg';
import './App.css';

function App() {
  return (
    &amp;lt;div className="App"&amp;gt;
      &amp;lt;header className="App-header"&amp;gt;
        &amp;lt;p&amp;gt;{undefinedVariable}&amp;lt;/p&amp;gt;
        &amp;lt;img src={logo} className="App-logo" alt="logo" /&amp;gt;
        &amp;lt;p&amp;gt;
          Edit &amp;lt;code&amp;gt;src/App.js&amp;lt;/code&amp;gt; and save to reload.
        &amp;lt;/p&amp;gt;
        &amp;lt;a
          className="App-link"
          href="https://reactjs.org"
          target="_blank"
          rel="noopener noreferrer"
        &amp;gt;
          Learn React
        &amp;lt;/a&amp;gt;
      &amp;lt;/header&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;export default App;&lt;br&gt;
You can see I've added undefinedVariable into the component. Because that variable is, well, undefined, the component will break. Save your code and check out the app. You'll see...&lt;/p&gt;

&lt;p&gt;...an error message still. What gives?&lt;/p&gt;

&lt;p&gt;Well, in development mode, React is going to try to help you out by rendering the error on screen. If you refresh the page, you should see your fallback component render for a split-second before the error appears on screen. When this code is deployed to a production environment, the error won't be displayed on screen. You know this because you've seen your production React apps crash. We all have. It shows a white screen. That's it. Now, though, your app will show the fallback screen.&lt;/p&gt;

&lt;p&gt;Pretty cool!&lt;/p&gt;

&lt;p&gt;Now, we need to make sure the error is reported back to our monitoring system. We will surely get emails from customers about this, but having the details handy might help us solve the problem before our support team can even get to those emails.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#capturing-errors"&gt;
  &lt;/a&gt;
  Capturing Errors
&lt;/h2&gt;

&lt;p&gt;Now that we can display a message, Let's work on capturing the error and sending it to our reporting system—Exceptionless.&lt;/p&gt;

&lt;p&gt;The Exceptionless React package includes an Error Boundary helper called ExceptionlessErrorBoundary. All we need to do is import this into our index.js and wrap our App component with it. You'll need to grab yourself an API key from your Exceptionless account for this. You can follow &lt;a href="https://exceptionless.com/docs/getting-started/"&gt;this guide to do so&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let's take a look at what the code looks like. This is what you should update your index.js file to look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';
import {
  Exceptionless, 
  ExceptionlessErrorBoundary
} from "@exceptionless/react";
import ErrorBoundary from './ErrorBoundary';

const startExceptionless = async () =&amp;gt; {
  await Exceptionless.startup((c) =&amp;gt; {
    c.apiKey = "YOUR API KEY";
    c.useDebugLogger();

    c.defaultTags.push("Example", "React");
  });
};

startExceptionless();

ReactDOM.render(
  &amp;lt;React.StrictMode&amp;gt;
    &amp;lt;ErrorBoundary&amp;gt;
      &amp;lt;ExceptionlessErrorBoundary&amp;gt;
        &amp;lt;App /&amp;gt;
      &amp;lt;/ExceptionlessErrorBoundary&amp;gt;
    &amp;lt;/ErrorBoundary&amp;gt;
  &amp;lt;/React.StrictMode&amp;gt;,
  document.getElementById('root')
);

reportWebVitals();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now go back to your React app and re-load. You won't necessarily see it there, but the error event was sent to Exceptionless. Open up your Exceptionless dashboard and take a look at the Exceptions events:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--glwLGagu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/poujav9b76u8x4k4kdwh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--glwLGagu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/poujav9b76u8x4k4kdwh.png" alt="exception events with error boundary example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can click into your exceptions to get more details. In this case, we will see what the variable was and the full stack trace for our React app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;Error Boundaries in React are powerful tools in helping you debug and quickly fix your applications. You can see how quickly we set this up to not only render a fallback UI and to report to an error monitoring service. You could write even less code and only report the error if you wanted to, but I'll leave that up to you.&lt;/p&gt;

&lt;p&gt;There are plenty of error monitoring services out there that you can plug this into, but if you're interested in an open-source solution, get started with &lt;a href="https://exceptionless.com/?utm_source=third_signup&amp;amp;utm_medium=blog&amp;amp;utm_campaign=error_boundary"&gt;Exceptionless&lt;/a&gt; today.&lt;/p&gt;

</description>
      <category>react</category>
      <category>monitoring</category>
    </item>
    <item>
      <title>Preparation Guide for the Associate-level AWS Certification Exams</title>
      <author>JC San Juan</author>
      <pubDate>Thu, 19 Aug 2021 12:24:46 +0000</pubDate>
      <link>https://dev.to/jcsanjuan/how-to-pass-the-aws-associate-level-exams-4ab1</link>
      <guid>https://dev.to/jcsanjuan/how-to-pass-the-aws-associate-level-exams-4ab1</guid>
      <description>&lt;p&gt;&lt;em&gt;A quick guide to becoming AWS certified in 2021. Study materials and resources used are linked below.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VtDhGI5C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nckdh722n94o1kzf5mhr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VtDhGI5C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nckdh722n94o1kzf5mhr.png" alt="This image contains all the associate-level certification badges from AWS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So I finally cleared all the associate-level exams this month. I have learned a lot from my preparation, and would like to share with you some useful tips and resources that might also help you in your certification journey.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#about-the-associatelevel-exams"&gt;
  &lt;/a&gt;
  &lt;br&gt;About the Associate-Level Exams:
&lt;/h4&gt;

&lt;p&gt;The associate-level certifications cover a broad number of AWS services that are tackled at a mid-level depth. Each exam contains 65 items, which can be of multiple choice or multiple response type. Just recently, exam labs were also added in the new version of the SOA exam. You can check the official exam guides below for more information:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/certification/certified-solutions-architect-associate/?ep=sec&amp;amp;sec=assoc_saa"&gt;AWS Certified Solutions Architect — Associate (SAA-C02)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/certification/certified-developer-associate/?ep=sec&amp;amp;sec=assoc_dev"&gt;AWS Certified Developer — Associate (DVA-C01)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/certification/certified-sysops-admin-associate/?ep=sec&amp;amp;sec=assoc_sysops"&gt;AWS Certified SysOps Administrator — Associate (SOA-C02)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#which-exam-to-take"&gt;
  &lt;/a&gt;
  &lt;br&gt;Which Exam to Take:
&lt;/h4&gt;

&lt;p&gt;If you're new to AWS, you can start with the Solutions Architect Associate exam since it covers all the core services and basic concepts you’ll need to get started. However, if you already have some hands-on experience, you can choose one that fits your role. The Developer Associate was my first AWS certification since it aligns with what I do at work.  &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exam-difficulty"&gt;
  &lt;/a&gt;
  &lt;br&gt;Exam Difficulty:
&lt;/h4&gt;

&lt;p&gt;Out of the three exams, I personally found the SysOps Administrator Associate as the toughest, while I found the Developer Associate as the easiest. I think what you’ll find easy or difficult depends on your current role and level of hands-on experience in AWS.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-materials"&gt;
  &lt;/a&gt;
  &lt;br&gt;Study Materials:
&lt;/h4&gt;

&lt;p&gt;Here’s a list of all the resources I used to prepare for the exams. The first two are paid materials, while the rest are provided for free by AWS.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://courses.datacumulus.com/"&gt;DataCumulus Courses&lt;/a&gt;
— Stephane Maarek’s courses are extremely helpful especially if you’re new to AWS. It’s easily digestible and more affordable than the other courses available.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://portal.tutorialsdojo.com/"&gt;Tutorials Dojo Study Guide and Practice Exams&lt;/a&gt;
— Jon Bonso’s practice tests are the best out there. They also provide study guides and eBooks on their portal.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws.amazon.com/certification/certification-prep/"&gt;AWS Whitepapers, FAQs, and Exam Readiness Training&lt;/a&gt;
— AWS offers free technical documentations and training materials to assist you in your preparation. It’s best to go through their recommended readings to supplement your knowledge.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#reviewing-tips"&gt;
  &lt;/a&gt;
  &lt;br&gt;Reviewing Tips:
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Create a study plan&lt;/strong&gt;
— Set a reasonable timeline for studying and commit to it. You can allot some time per day or per week depending on your work schedule. It took me a month to prepare for DVA, and a week for the SOA and SAA exams. Take your time, and learn at your own pace.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Take down notes&lt;/strong&gt;
— Note down important details or new concepts. You can also use &lt;a href="https://apps.ankiweb.net/"&gt;Anki&lt;/a&gt; to create flashcards, or &lt;a href="https://www.notion.so/"&gt;Notion&lt;/a&gt; for note-taking. I might share my notes in the future once I'm done organizing them. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Do some hands-on&lt;/strong&gt;
— You can sign up for an &lt;a href="https://aws.amazon.com/free/"&gt;AWS Free Tier account&lt;/a&gt; to do some hands-on exercises. Doing the labs will help you solidify your knowledge in AWS.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Take practice exams&lt;/strong&gt;
— Take the Tutorials Dojo exams on Review Mode. This way, you can see the correct answers and explanations after each question.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Set a hard deadline&lt;/strong&gt;
— I always book the exam before starting my review so I can really commit to my study plan. I encourage you to &lt;a href="https://www.aws.training/Certification"&gt;book your exam&lt;/a&gt; this way, too! You can always reschedule to a later date if you think you need more time.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/VbnUQpnihPSIgIXuZv/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/VbnUQpnihPSIgIXuZv/giphy.gif" alt="Cat with eyeglasses using a laptop"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope you found this helpful. You can reach me on &lt;a href="https://www.linkedin.com/in/sanjuanjc/"&gt;LinkedIn&lt;/a&gt;, or you can leave a comment if you have further questions. I'd be glad to help you out.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>career</category>
    </item>
  </channel>
</rss>
