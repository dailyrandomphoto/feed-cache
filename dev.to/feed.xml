<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Create Your Own Custom JS Error Type 🤔</title>
      <author>Steve Griffith</author>
      <pubDate>Fri, 19 Mar 2021 18:18:59 +0000</pubDate>
      <link>https://dev.to/prof3ssorst3v3/create-your-own-custom-js-error-type-5e1j</link>
      <guid>https://dev.to/prof3ssorst3v3/create-your-own-custom-js-error-type-5e1j</guid>
      <description>&lt;p&gt;If you are fairly new to programming, then it is very natural to feel that &lt;strong&gt;Errors&lt;/strong&gt; are evil nasty things to be avoided at all costs. &lt;/p&gt;

&lt;p&gt;When an error happens, we are thankful that we have a &lt;code&gt;catch()&lt;/code&gt; method or a &lt;code&gt;try...catch&lt;/code&gt; block to stop our page from crashing. We &lt;code&gt;log&lt;/code&gt; the error message to the console and move on to more important less stress-inducing things.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V0YQ9ceS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xz5mvm1hc4ay28uf03s3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V0YQ9ceS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xz5mvm1hc4ay28uf03s3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sometimes those message are red, sometimes amber, often cryptic or unnerving to the uninitiated novice.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#taking-control" class="anchor"&gt;
  &lt;/a&gt;
  Taking control
&lt;/h2&gt;

&lt;p&gt;Once you realize that every error message is actually meant to be a source of assistance from another developer, that fear can start to dissipate.&lt;/p&gt;

&lt;p&gt;An error message is really another developer's best effort to give you some information that you can use to diagnose the cause of the problem.&lt;/p&gt;

&lt;p&gt;If you are writing code, that means at some point another developer will be running the code that you wrote and a problem will occur. You should want to help that poor developer solve the problem.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fake-it-till-you-make-it" class="anchor"&gt;
  &lt;/a&gt;
  Fake it till you make it
&lt;/h2&gt;

&lt;p&gt;Why not start using the best practices of intermediate and senior developers now?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Start writing more detailed error messages. &lt;/li&gt;
&lt;li&gt;Start building your own types of Error objects.&lt;/li&gt;
&lt;li&gt;Start intentionally generating Error objects in your code. &lt;/li&gt;
&lt;li&gt;Throw Errors and Catch them, on purpose.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#how-to-create-an-error" class="anchor"&gt;
  &lt;/a&gt;
  How to Create an Error
&lt;/h2&gt;

&lt;p&gt;A basic Error object is actually quite easy to create.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;This is my friendly message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One line of code and now you have your very own &lt;code&gt;Error&lt;/code&gt; object in a variable that you can pass around your code.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;String&lt;/code&gt; that we pass to the error constructor becomes the value of the &lt;code&gt;message&lt;/code&gt; property in the &lt;code&gt;Error&lt;/code&gt; object.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-i-throw-an-error" class="anchor"&gt;
  &lt;/a&gt;
  How do I Throw an Error?
&lt;/h2&gt;

&lt;p&gt;Just because you create an &lt;code&gt;Error&lt;/code&gt; object and put it inside a variable does not mean that anything will happen with the error. If you want the browser to react to the error then you have to &lt;code&gt;throw&lt;/code&gt; it.&lt;/p&gt;

&lt;p&gt;Think of it as shooting a flare up into the air. If you want your error to be noticed, then we need to draw attention to it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;This is my friendly message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//or alternatively&lt;/span&gt;
&lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;This is my friendly message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you &lt;code&gt;throw&lt;/code&gt; the error either your script crashes and writes out the message in the console, or we need to have a &lt;code&gt;try...catch&lt;/code&gt; block or &lt;code&gt;catch( )&lt;/code&gt; method ready to &lt;strong&gt;catch&lt;/strong&gt; the thrown error.&lt;/p&gt;

&lt;p&gt;Try out the following snippets to see you error messages appear in the console without crashing your script. You can run them directly in the browser console if you want.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#trycatch" class="anchor"&gt;
  &lt;/a&gt;
  try...catch
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;This is my friendly message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#catch-" class="anchor"&gt;
  &lt;/a&gt;
  catch( )
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;This is my friendly message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-your-own-custom-error" class="anchor"&gt;
  &lt;/a&gt;
  Create your Own Custom Error
&lt;/h2&gt;

&lt;p&gt;While it is nice to be able to display a friendly message in the console, in the real world we have actual problems that happen in our code. &lt;/p&gt;

&lt;p&gt;We have situations that you are occasionally just using &lt;code&gt;if&lt;/code&gt; statements to handle: A user has failed to provide their usernam; an invalid product reference code was entered in the querystring; there was a network failure when making an AJAX call; and many other every day situations.&lt;/p&gt;

&lt;p&gt;We can create our own &lt;code&gt;type&lt;/code&gt; of &lt;code&gt;Error&lt;/code&gt; object for each of these. We can add additional information about the error into the &lt;code&gt;Error&lt;/code&gt; object. We can &lt;code&gt;throw&lt;/code&gt; and &lt;code&gt;catch&lt;/code&gt; these errors to make our code more resistant to failure, as well as, providing more details to other developers.&lt;/p&gt;

&lt;p&gt;This code can be made with or without the &lt;code&gt;class&lt;/code&gt; keyword but I am going to show the &lt;code&gt;class&lt;/code&gt; version here. I am going to create my own special type of error to use with &lt;code&gt;fetch()&lt;/code&gt; calls that fail because the browser is offline.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;NetworkError&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;NetworkError&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;My new Error type is going to be called &lt;code&gt;NetworkError&lt;/code&gt;. It is going to inherit all the properties of a standard &lt;code&gt;Error&lt;/code&gt; object. However, it is getting an extra property called &lt;code&gt;target&lt;/code&gt; that will hold the &lt;code&gt;URL&lt;/code&gt; which was being used when the failure occurred. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-your-errors-as-part-of-the-solution" class="anchor"&gt;
  &lt;/a&gt;
  Use your Errors as Part of the Solution
&lt;/h2&gt;

&lt;p&gt;So, we now have our own &lt;code&gt;NetworkError&lt;/code&gt; type object that we can add to our JS files or put in a utilities file that we use in all our projects.&lt;/p&gt;

&lt;p&gt;Let's put it into use as part of our project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ev&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`http://jsonplaceholder.typicode.com/users/10`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//we got a response from the server&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;NetworkError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;statusText&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;//run more code on the response.&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//err is a general error happened with fetch( )&lt;/span&gt;
    &lt;span class="c1"&gt;//this is a network failure, usually meaning offline&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;NetworkError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Unable to reach server.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//err could be either of those NetworkErrors or&lt;/span&gt;
    &lt;span class="c1"&gt;//an error that happened in the `run more code on the response`&lt;/span&gt;
    &lt;span class="c1"&gt;//check for the type of error&lt;/span&gt;
    &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;NetworkError&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;//handle our network errors.&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Dude. You were totally trying to access &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;. And then the browser was all like &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;//handle any other errors&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`At least it wasn't a Network error. &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you put all our script into a webpage, and then in the dev tools Network tab set the browser to offline.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---uu6i_6C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y4ys3qc1x8vlv8u3jvyt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---uu6i_6C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y4ys3qc1x8vlv8u3jvyt.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Run the script once online and once with the browser tab toggled to offline and you should see our custom &lt;code&gt;NetworkError&lt;/code&gt; messages in the console.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SuNrSxUi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sg3c92zi3uesyukj5y1q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SuNrSxUi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sg3c92zi3uesyukj5y1q.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I've wrapped a click event listener function around the &lt;code&gt;fetch()&lt;/code&gt; call. You may have to add the following CSS to give you something to click.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;min-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#333&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to learn more about Error handling, Javascript or practically any web development topic: please check out my &lt;a href="https://www.youtube.com/c/SteveGriffith-Prof3ssorSt3v3/videos"&gt;YouTube channel&lt;/a&gt; for hundreds of video tutorials.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>errors</category>
    </item>
    <item>
      <title>Achieving Continuous Integration and Deployment with Jenkins</title>
      <author>Mariam Adedeji</author>
      <pubDate>Fri, 19 Mar 2021 18:09:59 +0000</pubDate>
      <link>https://dev.to/mariehposa/achieving-continuous-integration-and-deployment-with-jenkins-4d6k</link>
      <guid>https://dev.to/mariehposa/achieving-continuous-integration-and-deployment-with-jenkins-4d6k</guid>
      <description>&lt;p&gt;I had a tough first time working with Jenkins because most of the articles for setting and configuring it are out of date. So, I’m writing this to ease someone’s work and make it so they don’t have to go through what I went through to set this up.&lt;/p&gt;

&lt;p&gt;So, here it goes...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-off-what-even-is-jenkins" class="anchor"&gt;
  &lt;/a&gt;
  First off, what even is Jenkins?
&lt;/h2&gt;

&lt;p&gt;Jenkins is an open-source automation tool that is used to automate the building, testing and deployment of software, making continuous integration and continuous deployment easy for users. &lt;/p&gt;

&lt;p&gt;In essence, this means that Jenkins (and a lot of other tools),  allow you to automate the process of deploying or serving changes to your software to users immediately when those changes are ready. Imagine the convenience of users seeing your updated websites as soon as you merge a PR to master (or main) 😌.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-jenkins" class="anchor"&gt;
  &lt;/a&gt;
  Why Jenkins?
&lt;/h2&gt;

&lt;p&gt;It is free.&lt;br&gt;
It has a strong community, so finding support is not a problem.&lt;br&gt;
Jenkins can be easily configured and I hope to prove this with this article, so please, read on ☺️.&lt;/p&gt;

&lt;p&gt;For this tutorial, we'll learn how to carry out CI/CD for a Node app with Jenkins. Let’s start by highlighting all the steps we’ll take and then explaining them in detail below:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#create-github-repo"&gt;Create a GitHub repository for the node app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#create-node-app"&gt;Create a simple node app and push to GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#create-heroku-app"&gt;Create a Heroku app for deployment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#install-jenkins"&gt;Install Jenkins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#github-webhook"&gt;Add a GitHub webhook to push changes to Jenkins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#configure-jenkins"&gt;Configure app with Jenkins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#github-plugins"&gt;Adding GitHub plugins in Jenkins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deploy"&gt;Configure Jenkins to deploy to Heroku on successful testing&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#prerequisites" class="anchor"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;A GitHub account. You can sign up &lt;a href="https://github.com/"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;An Ubuntu server. If you are a student and will be using &lt;a href="https://www.digitalocean.com/"&gt;Digital Ocean&lt;/a&gt;, you can get $100 credit using the &lt;a href="https://education.github.com/pack/"&gt;GitHub student developer pack&lt;/a&gt;. Create the Ubuntu server using this &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-an-ubuntu-20-04-server-on-a-digitalocean-droplet"&gt;tutorial&lt;/a&gt;. Set up the server by following this &lt;a href="https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-20-04"&gt;initial server setup for Ubuntu 20.04&lt;/a&gt; tutorial, including a sudo-enabled non-root user, a firewall, and SSH access from your local machine.&lt;/li&gt;
&lt;li&gt;A Heroku account. You can sign up &lt;a href="https://signup.heroku.com/"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, let’s get started!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-1-create-a-github-repository-for-the-node-app" class="anchor"&gt;
  &lt;/a&gt;
  Step 1 — Create a GitHub repository for the node app &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Login to your GitHub account and create a new repository. You can give it a name of your choice, I will name mine &lt;strong&gt;jenkins-test&lt;/strong&gt;. You can initialize with &lt;strong&gt;README&lt;/strong&gt; and &lt;strong&gt;.gitignore&lt;/strong&gt; for &lt;strong&gt;Node&lt;/strong&gt;. Also, make sure your repository is set to &lt;strong&gt;public&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C0MFyC9H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111142047-88aabc00-8584-11eb-8d57-5601ec771c6a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C0MFyC9H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111142047-88aabc00-8584-11eb-8d57-5601ec771c6a.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-2-create-a-simple-node-app-and-push-to-github" class="anchor"&gt;
  &lt;/a&gt;
  Step 2 — Create a simple node app and push to GitHub &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;After creating the repository, clone the repository to your local machine using the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone &amp;lt;repository_url&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure to change the &lt;code&gt;repository_url&lt;/code&gt; with yours.&lt;br&gt;
To create a &lt;strong&gt;package.json&lt;/strong&gt; file, open up your terminal and &lt;code&gt;cd&lt;/code&gt; into your project folder, then run &lt;code&gt;npm init&lt;/code&gt; and follow the prompt. I’ve added a screenshot to see the CLI interaction below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DsMOJrVD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111151351-a03b7200-858f-11eb-8dfb-665d7cdb8ed0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DsMOJrVD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111151351-a03b7200-858f-11eb-8dfb-665d7cdb8ed0.png" alt="2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can remove or modify what’s in the scripts block of your &lt;strong&gt;package.json&lt;/strong&gt; file and add the following to &lt;strong&gt;start&lt;/strong&gt; and &lt;strong&gt;test&lt;/strong&gt; the app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;node index.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jest&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We’ll be using &lt;strong&gt;express&lt;/strong&gt; for our sample node app so go ahead and install it by running this command in the terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install express
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, create an &lt;strong&gt;index.js&lt;/strong&gt; file which will serve as the entry point to our node app  and add the following lines  to it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello world&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Running on http://localhost:4000`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run &lt;code&gt;npm start&lt;/code&gt; and visit &lt;a href="http://localhost:4000/"&gt;http://localhost:4000/&lt;/a&gt; on your browser to view the Node app, you should see &lt;strong&gt;Hello world&lt;/strong&gt; displayed in the browser.&lt;/p&gt;




&lt;p&gt;Next, we’ll add a couple of tests to our app, afterall, with CI, we should make sure tests are available and are passing before merging changes.&lt;/p&gt;

&lt;p&gt;So, go back to the terminal, make sure you’re in the root directory of your project,  and install &lt;strong&gt;jest&lt;/strong&gt; and &lt;strong&gt;supertest&lt;/strong&gt; packages using the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save-dev jest supertest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, in the project’s root directory, create a folder and name it &lt;strong&gt;__test__&lt;/strong&gt; (two underscores, preceding and ending). Inside this &lt;strong&gt;__test__&lt;/strong&gt; folder, create an &lt;strong&gt;index.test.js&lt;/strong&gt; file and add at least the following code to it (you can always make your tests more comprehensive).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;supertest&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../index&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Get route&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;page should return hello world&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello world&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;afterAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run &lt;code&gt;npm test&lt;/code&gt; or &lt;code&gt;npm run test&lt;/code&gt; in the terminal and you should see your test(s) pass:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N741qQOy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111151523-d973e200-858f-11eb-8bc1-7ece25ae360e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N741qQOy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111151523-d973e200-858f-11eb-8bc1-7ece25ae360e.png" alt="2ii"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that our code is running and the tests are passing, we can commit the changes and push to GitHub.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add .
git commit -m “initial commit”
git push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-3-create-a-heroku-app-for-deployment" class="anchor"&gt;
  &lt;/a&gt;
  Step 3 — Create a heroku app for deployment &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Log in to your Heroku dashboard.&lt;br&gt;
Look to the upper right and click on &lt;strong&gt;New&lt;/strong&gt;.&lt;br&gt;
Select &lt;strong&gt;Create new app&lt;/strong&gt;.&lt;br&gt;
Add an &lt;strong&gt;App name&lt;/strong&gt; of your choice and &lt;strong&gt;Choose a region&lt;/strong&gt; close to you.&lt;br&gt;
Click &lt;strong&gt;Create app&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gxxqcY6Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111151715-1e981400-8590-11eb-830a-e4bf122e92c8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gxxqcY6Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111151715-1e981400-8590-11eb-830a-e4bf122e92c8.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Go back to your project terminal and &lt;strong&gt;login&lt;/strong&gt; to Heroku using &lt;strong&gt;Heroku CLI&lt;/strong&gt;. If you are yet to install the Heroku CLI, you can follow this &lt;a href="https://devcenter.heroku.com/articles/heroku-cli#download-and-install"&gt;article&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After that, add a remote to your local repository with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;heroku git:remote -a heroku-app-name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then push the code using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push heroku &amp;lt;github-branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is done to make sure everything works correctly before automating it. You can click on &lt;strong&gt;open app&lt;/strong&gt; on the Heroku app dashboard to check if it works correctly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r-AHleoh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111151888-5d2dce80-8590-11eb-8b32-7e5f8cf6c024.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r-AHleoh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111151888-5d2dce80-8590-11eb-8b32-7e5f8cf6c024.png" alt="4ii"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-4-install-jenkins" class="anchor"&gt;
  &lt;/a&gt;
  Step 4 — Install Jenkins &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Open a new terminal and login to your server with a &lt;strong&gt;non-root&lt;/strong&gt; user account.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ssh username@droplet_ip_address
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With this, we can update the kernel with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the following command to install java runtime:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get install default-jre
sudo apt-get install default-jdk
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run following commands one after the other to install Jenkins.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -
sudo sh -c 'echo deb https://pkg.jenkins.io/debian-stable binary/ &amp;gt; \
    /etc/apt/sources.list.d/jenkins.list'
sudo apt-get update
sudo apt-get install jenkins
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, that Jenkins and its dependencies are installed, we can start it using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo systemctl start jenkins
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can verify if Jenkins started successfully using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo systemctl status jenkins
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It should show &lt;strong&gt;active&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NEg5xiUL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111152014-864e5f00-8590-11eb-8806-c586812b9a9e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NEg5xiUL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111152014-864e5f00-8590-11eb-8806-c586812b9a9e.png" alt="3i"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Since Jenkins run on port &lt;strong&gt;8080&lt;/strong&gt;, let’s open it using &lt;strong&gt;ufw&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo ufw allow 8080
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can check the &lt;strong&gt;ufw&lt;/strong&gt;’s status with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo ufw status
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now visit the &lt;strong&gt;&lt;a href="http://ip_address:8080"&gt;http://ip_address:8080&lt;/a&gt;&lt;/strong&gt; to set up Jenkins, you should see the &lt;strong&gt;Unlock Jenkins&lt;/strong&gt; screen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lItaswvE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111152283-d6c5bc80-8590-11eb-8539-17c50d36cc4f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lItaswvE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111152283-d6c5bc80-8590-11eb-8539-17c50d36cc4f.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To unlock Jenkins, go back to the terminal, and enter the following command to display the password.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo cat /var/lib/jenkins/secrets/initialAdminPassword
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Copy the password and paste it into the &lt;strong&gt;Administrator password&lt;/strong&gt; field.&lt;br&gt;
The next screen shows &lt;strong&gt;Customize Jenkins&lt;/strong&gt;, click on &lt;strong&gt;Install suggested plugins&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;After the installation is complete, it takes us to &lt;strong&gt;Create First Admin User&lt;/strong&gt; screen. Enter the &lt;strong&gt;Username&lt;/strong&gt;, &lt;strong&gt;Password&lt;/strong&gt;, &lt;strong&gt;Full name&lt;/strong&gt;, and &lt;strong&gt;E-mail address&lt;/strong&gt; for your user, then &lt;strong&gt;Save and Continue&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v0esZ2bo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111152455-070d5b00-8591-11eb-8c45-2ad672aa0f26.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v0esZ2bo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111152455-070d5b00-8591-11eb-8c45-2ad672aa0f26.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After that, enter the server IP address i.e &lt;strong&gt;&lt;a href="http://ip_address:8080"&gt;http://ip_address:8080&lt;/a&gt;&lt;/strong&gt;, then &lt;strong&gt;Save and Finish&lt;/strong&gt;.&lt;br&gt;
Yay🎉 Jenkins is Ready! Click on &lt;strong&gt;Start using Jenkins&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-5-add-a-github-webhook-to-push-changes-to-jenkins" class="anchor"&gt;
  &lt;/a&gt;
  Step 5 — Add a GitHub webhook to push changes to Jenkins &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;In the app’s GitHub repository, go to &lt;strong&gt;Settings&lt;/strong&gt;, then from the sidebar click on &lt;strong&gt;Webhooks&lt;/strong&gt;. Click on &lt;strong&gt;Add webhooks&lt;/strong&gt; and enter the Jenkins url with &lt;strong&gt;/github-webhook/&lt;/strong&gt; appended to it, into the &lt;strong&gt;Payload URL&lt;/strong&gt; field.&lt;/p&gt;

&lt;p&gt;Select &lt;strong&gt;application/json&lt;/strong&gt; for &lt;strong&gt;Content-type&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Select &lt;strong&gt;Just the push event&lt;/strong&gt; for the event to trigger the webhook.&lt;/p&gt;

&lt;p&gt;Check &lt;strong&gt;Active&lt;/strong&gt; and click &lt;strong&gt;Add webhook&lt;/strong&gt;. Now, GitHub can push events to Jenkins successfully.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5tm25GKn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111152802-6ff4d300-8591-11eb-95be-88157adbcce7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5tm25GKn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111152802-6ff4d300-8591-11eb-95be-88157adbcce7.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-6-configure-app-with-jenkins" class="anchor"&gt;
  &lt;/a&gt;
  Step 6 — Configure app with Jenkins &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Open up a new terminal tab or window and login to your server with the same &lt;strong&gt;non-root&lt;/strong&gt; user account.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ssh username@droplet_ip_address
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In that same terminal, enable root privileges using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo su
apt install npm
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After switching to the root user and installing npm, Jenkins automatically creates a new user after installation. Switch to it using this command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;su jenkins
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Generate a new SSH key with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ssh-keygen -t rsa
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Press &lt;strong&gt;enter&lt;/strong&gt; for the location and do not type any password when requested, just hit &lt;strong&gt;enter&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KVM2GhUc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111152984-aaf70680-8591-11eb-8d76-b30ee8760b59.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KVM2GhUc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111152984-aaf70680-8591-11eb-8d76-b30ee8760b59.png" alt="5i"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the process is completed, print the public key information using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cat ~/.ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Copy the public key.&lt;br&gt;
Now login back to the &lt;strong&gt;non-root&lt;/strong&gt; user in a new terminal. &lt;br&gt;
Open the &lt;strong&gt;authorized_keys&lt;/strong&gt; with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo vim ~/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Paste in the &lt;strong&gt;id_rsa&lt;/strong&gt; public key and exit.&lt;/p&gt;

&lt;p&gt;In order to confirm if the keys are properly configured, switch to &lt;strong&gt;jenkins&lt;/strong&gt; server terminal and try to login to the &lt;strong&gt;non-root&lt;/strong&gt; user, using ssh. You would be logged in successfully if you follow the process accordingly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6t4dw-rs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111153122-d24dd380-8591-11eb-8c2d-02359dfbe818.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6t4dw-rs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111153122-d24dd380-8591-11eb-8c2d-02359dfbe818.png" alt="5ii"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-7-adding-github-plugins-in-jenkins" class="anchor"&gt;
  &lt;/a&gt;
  Step 7 — Adding GitHub plugins in Jenkins &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;In the Jenkins dashboard, go to &lt;strong&gt;Manage jenkins&lt;/strong&gt;, and then click on &lt;strong&gt;Manage plugins&lt;/strong&gt;.&lt;br&gt;
From the Available tab, search for &lt;strong&gt;github&lt;/strong&gt; and select &lt;strong&gt;Github Integration plugin&lt;/strong&gt;.&lt;br&gt;
Click on &lt;strong&gt;Install without restart&lt;/strong&gt; and the plugin would be installed in a few seconds.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-8-configure-jenkins-to-deploy-to-heroku-on-successful-testing" class="anchor"&gt;
  &lt;/a&gt;
  Step 8 — Configure Jenkins to deploy to Heroku on successful testing &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Now that GitHub is now connected to Jenkins, we can create a new project.&lt;br&gt;
On the sidebar, click on &lt;strong&gt;New Item&lt;/strong&gt;, select &lt;strong&gt;Freestyle project&lt;/strong&gt; from the options, and click &lt;strong&gt;OK&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XYq-KrI2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111153301-1214bb00-8592-11eb-814a-39dd01690f3a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XYq-KrI2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111153301-1214bb00-8592-11eb-814a-39dd01690f3a.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You should be directed to the configurations page next, but if not, you can open it up by clicking &lt;strong&gt;Configure&lt;/strong&gt; on the left sidebar.&lt;/p&gt;

&lt;p&gt;In the configuration page, under the &lt;strong&gt;general&lt;/strong&gt; tab,  check the &lt;strong&gt;Github project&lt;/strong&gt; option and add &lt;strong&gt;Github project link&lt;/strong&gt; (url for your project repo, without the .git extension).&lt;/p&gt;

&lt;p&gt;Next, scroll down to the &lt;strong&gt;Source Code Management&lt;/strong&gt; section, select &lt;strong&gt;Git&lt;/strong&gt; and add the &lt;strong&gt;Repository URL&lt;/strong&gt; with &lt;strong&gt;.git&lt;/strong&gt; extension (same url you’ve used for cloning the repository).&lt;/p&gt;

&lt;p&gt;You can change the &lt;strong&gt;master&lt;/strong&gt; branch to &lt;strong&gt;main&lt;/strong&gt; or any other branches you want for the deployment process.&lt;/p&gt;

&lt;p&gt;Click on the &lt;strong&gt;Add repository&lt;/strong&gt; button to add a second repository,  pointing to your Heroku app.&lt;/p&gt;

&lt;p&gt;To get the Heroku app repo link, go to the &lt;strong&gt;App settings&lt;/strong&gt; on your Heroku dashboard and copy the link.&lt;br&gt;
Go back to your Jenkins dashboard and paste this link to the &lt;strong&gt;Repository URL&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We’ll need new credentials, so click on &lt;strong&gt;Add&lt;/strong&gt;, to create credentials for our Heroku app.&lt;/p&gt;

&lt;p&gt;Select &lt;strong&gt;Jenkins&lt;/strong&gt; from the list and you should see a popup window.&lt;/p&gt;

&lt;p&gt;Make sure the &lt;strong&gt;Kind&lt;/strong&gt; is &lt;strong&gt;Username with password&lt;/strong&gt; and the &lt;strong&gt;Scope&lt;/strong&gt; is &lt;strong&gt;global&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Type in a &lt;strong&gt;username&lt;/strong&gt; of your choice, but best to make it something descriptive. I will use &lt;strong&gt;heroku&lt;/strong&gt; as my username. &lt;/p&gt;

&lt;p&gt;Next, we’ll need to add the Heroku &lt;strong&gt;Api key&lt;/strong&gt; into the &lt;strong&gt;Password&lt;/strong&gt; field, and &lt;strong&gt;Save&lt;/strong&gt;. To get your Heroku &lt;strong&gt;Api key&lt;/strong&gt;,  go to Heroku dashboard, click on &lt;strong&gt;Account Settings&lt;/strong&gt; and scroll down to see the &lt;strong&gt;Api key&lt;/strong&gt;. Copy this and paste it into the &lt;strong&gt;Password&lt;/strong&gt; field. &lt;/p&gt;

&lt;p&gt;You can add &lt;strong&gt;Description&lt;/strong&gt; for this credential if you want to.&lt;/p&gt;

&lt;p&gt;Click &lt;strong&gt;Add&lt;/strong&gt; to finish creating the credential.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M1ODRKVU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111153466-48523a80-8592-11eb-9bf5-efa1932911d8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M1ODRKVU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111153466-48523a80-8592-11eb-9bf5-efa1932911d8.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, make sure the new credential we just created is selected in the dropdown. If not, click on the dropdown and select it. &lt;/p&gt;

&lt;p&gt;Next, click on advanced and add a &lt;strong&gt;Name&lt;/strong&gt; to identify this repository among other remote repositories. We’ll need this name later.  I’ve named mine, &lt;strong&gt;jenkinsTest&lt;/strong&gt;,  because, simplicity.&lt;/p&gt;

&lt;p&gt;Next, scroll down to the &lt;strong&gt;Build Triggers&lt;/strong&gt; section and check &lt;strong&gt;GitHub hook trigger for GITScm polling&lt;/strong&gt; option.&lt;/p&gt;

&lt;p&gt;Under the &lt;strong&gt;Build&lt;/strong&gt; section, Click on &lt;strong&gt;Add build step&lt;/strong&gt; button and then click on &lt;strong&gt;Execute shell&lt;/strong&gt;. Enter the following code into the shell:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#!/bin/bash

ssh non-root-username@&amp;lt;droplet_ip_address&amp;gt;
alias proj="cd node-app-name"
git pull origin main
npm install
npm test || exit 1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Click on &lt;strong&gt;Add post-build action&lt;/strong&gt;, choose &lt;strong&gt;Git Publisher&lt;/strong&gt;, and select &lt;strong&gt;Push Only If Build Succeeds&lt;/strong&gt; option.&lt;/p&gt;

&lt;p&gt;Click on &lt;strong&gt;Add Branch&lt;/strong&gt;, enter the name of the branch to deploy inside the &lt;strong&gt;Branch to Push&lt;/strong&gt; field, and add the &lt;strong&gt;Name&lt;/strong&gt; used to identify the Heroku app repository into the &lt;strong&gt;Target remote name&lt;/strong&gt; field (mine was jenkinsTest, if you remember, so add yours in here).&lt;/p&gt;

&lt;p&gt;Then &lt;strong&gt;Save&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rSplrlsG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111153976-e8a85f00-8592-11eb-941a-de919d819f44.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rSplrlsG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111153976-e8a85f00-8592-11eb-941a-de919d819f44.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Go to the project dashboard, click on &lt;strong&gt;Build now&lt;/strong&gt; on the left sidebar and watch gleefully as your code build successfully!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mBcpO-Y4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111153808-af6fef00-8592-11eb-82bb-4c0a491689de.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mBcpO-Y4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/111153808-af6fef00-8592-11eb-82bb-4c0a491689de.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For an extra dopamine hit, make changes to your code and push to GitHub. Watch again as your code is deployed automatically to Heroku.&lt;/p&gt;

&lt;p&gt;If you found this article helpful, please leave a heart or a comment. If you have any questions, please let me know in the comment section.&lt;/p&gt;

&lt;p&gt;Also, don’t forget to follow me for more articles. Thank you.&lt;/p&gt;

</description>
      <category>jenkins</category>
      <category>node</category>
      <category>heroku</category>
      <category>devops</category>
    </item>
    <item>
      <title>Mindblowing 🤯 TypeScript tricks</title>
      <author>PuruVJ</author>
      <pubDate>Fri, 19 Mar 2021 17:46:24 +0000</pubDate>
      <link>https://dev.to/puruvj/mindblowing-typescript-tricks-46nf</link>
      <guid>https://dev.to/puruvj/mindblowing-typescript-tricks-46nf</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://puruvj.dev/blog/get-to-know-typescript--mindblowing-typescript-tricks"&gt;Read on my blog in &lt;strong&gt;light&lt;/strong&gt;, &lt;strong&gt;dark&lt;/strong&gt; or &lt;strong&gt;sepia&lt;/strong&gt; mode&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Apologies for the clickbaity title 🙃. But it is in good faith, cuz I'm gonna introduce you to some TypeScript related tricks that are bound to blow your mind to pieces. And if you can read the whole post without feeling wonder at any trick, great for you!! You're TypeScript pro already 🥳&lt;/p&gt;

&lt;p&gt;So let's cut to the chase.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#a-little-note" class="anchor"&gt;
  &lt;/a&gt;
  A little note...
&lt;/h1&gt;

&lt;p&gt;The level of this article is &lt;strong&gt;Advanced&lt;/strong&gt;. You may not understand how things work. However, you don't have to. You only have to copy paste the snippet, and understand how to use it, as these will make your life easy, and overtime, you'll get the know-how of how these actually work.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#inbuilt-types" class="anchor"&gt;
  &lt;/a&gt;
  In-built types 🥱
&lt;/h1&gt;

&lt;p&gt;These are some of the built-in helper types in TypeScript. I'll keep this section short, as you can read about these anywhere. A good starting point would be &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html"&gt;TypeScript Docs&lt;/a&gt; Then we'll get to the juicy stuff 😋&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pick" class="anchor"&gt;
  &lt;/a&gt;
  Pick
&lt;/h2&gt;

&lt;p&gt;It allows to pick specific fields from a type/interface, along with their types and create a brand new type. Let's take a look at this 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;UserFields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;gender&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;male&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;female&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;non-binary&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;prefer-not-to-say&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;dob&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;NameAndGenderOnly&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Pick&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;UserFields&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;gender&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// This is equal to 👇&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;NameAndGenderOnly&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;gender&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;male&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;female&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;non-binary&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;prefer-not-to-say&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See!?! The same types, without any duplication.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#partial" class="anchor"&gt;
  &lt;/a&gt;
  Partial
&lt;/h2&gt;

&lt;p&gt;This is the most used type of mine. If you have a type/interface, and for some reason, you wanna make &lt;strong&gt;all&lt;/strong&gt; its fields optional, this is it 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;UserFields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;gender&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;male&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;female&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;non-binary&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;prefer-not-to-say&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;dob&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;OptionalUserFields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Partial&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;UserFields&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// This is equal to 👇&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;OptionalUserFields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;gender&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;male&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;female&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;non-binary&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;prefer-not-to-say&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;dob&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#readonly" class="anchor"&gt;
  &lt;/a&gt;
  Readonly
&lt;/h2&gt;

&lt;p&gt;This is very useful, when you wanna make sure that an object's properties can't be changed in your code. Think of it as a &lt;code&gt;const&lt;/code&gt; for your object properties.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;UserFields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;gender&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;male&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;female&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;non-binary&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;prefer-not-to-say&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;dob&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userData&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Readonly&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;UserFields&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Puru Vijay&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;gender&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;male&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;dob&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;12 Nov, 2001&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Trying to modify any property like &lt;code&gt;userData.name = 'Hoolalala'&lt;/code&gt; will result in error.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#record" class="anchor"&gt;
  &lt;/a&gt;
  Record
&lt;/h2&gt;

&lt;p&gt;Now we are getting to the good stuff. I've had a new-found respect for &lt;code&gt;Record&lt;/code&gt; recently, while working on my current project &lt;a href="https://macos.now.sh"&gt;macos.now.sh&lt;/a&gt; (&lt;strong&gt;Shameless Plug&lt;/strong&gt;, It's basically a macOS Big Sur clone written in Preact and Vite).&lt;/p&gt;

&lt;p&gt;Take a look at this 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;AppName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;finder&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;launchpad&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;safari&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;messages&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mail&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;maps&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;photos&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;facetime&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;calendar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/** Which apps are currently open */&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;openApps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Record&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AppName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;finder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;launchpad&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;safari&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;mail&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;photos&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;facetime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;calendar&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, this is just a simple key-value pair. But I wanted to enforce that this object contains all the apps listed in the &lt;code&gt;AppName&lt;/code&gt; union type, and that all the values are boolean only. I also wanted to be presented with an error if I add a new app to the list, which would make me add that app's key value pair to this &lt;code&gt;openApps&lt;/code&gt; object.&lt;/p&gt;

&lt;p&gt;This is where &lt;code&gt;Record&lt;/code&gt; comes in. It's simply a way to enforce the types of the keys as well as values. Another layer of safety that TypeScript adds.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#juicy-stuff" class="anchor"&gt;
  &lt;/a&gt;
  Juicy stuff 😋
&lt;/h1&gt;

&lt;p&gt;Now the fun part begins.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#retrieve-element-type-from-array" class="anchor"&gt;
  &lt;/a&gt;
  Retrieve element type from Array
&lt;/h2&gt;

&lt;p&gt;Suppose you have an Array, and you wanna extract the type of each Element from an array&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;ArrayElement&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;
  &lt;span class="nx"&gt;ArrayType&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;unknown&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ArrayType&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;infer&lt;/span&gt; &lt;span class="nx"&gt;ElementType&lt;/span&gt;&lt;span class="p"&gt;)[]&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;ElementType&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;never&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We're using TypeScript's &lt;code&gt;infer&lt;/code&gt; here, which helps pick out specific types from a complex type.&lt;/p&gt;

&lt;p&gt;Here's how to use it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ArrayElement&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// string&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ArrayElement&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// string&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ArrayElement&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// string | number&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;D&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ArrayElement&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;foo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// "foo" | "bar"&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;E&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ArrayElement&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;P&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Q&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;R&lt;/span&gt;&lt;span class="p"&gt;)[]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// P | Q | R&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Error1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ArrayElement&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//                         ^^^^^^^^^^^^^^^^&lt;/span&gt;
&lt;span class="c1"&gt;// Error: Type '{ name: string; }' does not satisfy the constraint 'readonly unknown[]'.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There's a bit simpler version to get the element type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;ArrayElement&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ArrayType&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;unknown&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ArrayType&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#retrieve-type-from-a-promise" class="anchor"&gt;
  &lt;/a&gt;
  Retrieve type from a promise
&lt;/h2&gt;

&lt;p&gt;Ever wanted to retrieve type from a function that returns a promise? You might've tried this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;returnsPromise&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;returnsPromise&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//       ^^^^^^^^^^^^^^^^^^^^^&lt;/span&gt;
&lt;span class="c1"&gt;// num: () =&amp;gt; Promise&amp;lt;number&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We want &lt;code&gt;num&lt;/code&gt;'s type to be the returned type of the promise(in this case &lt;code&gt;number&lt;/code&gt;), and the above solution definitely didn't work.&lt;/p&gt;

&lt;p&gt;The solution is to once again use &lt;code&gt;infer&lt;/code&gt; to retrieve the type from the promise:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;UnwrapPromise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;PromiseLike&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;infer&lt;/span&gt; &lt;span class="nx"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;U&lt;/span&gt;
  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;PromiseLike&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;infer&lt;/span&gt; &lt;span class="nx"&gt;K&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;K&lt;/span&gt;
  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;usage:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;returnsPromise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;UnwrapPromise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;returnsPromise&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//    num: number&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we wrapped a function that returns a promise into this type. This works directly with a regular &lt;code&gt;Promise&amp;lt;unknown&amp;gt;&lt;/code&gt; type too.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Why &lt;code&gt;PromiseLike&lt;/code&gt; instead of &lt;code&gt;Promise&lt;/code&gt;?&lt;/strong&gt; \&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Promise&lt;/code&gt; interface comes with lot of pre-built methods exclusive to promises. But sometimes, you wanna create functions that return a &lt;code&gt;.then&lt;/code&gt; just like Promises, but not have all the properties that &lt;code&gt;Promise&lt;/code&gt;s do. In that case, we use &lt;code&gt;PromiseLike&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Aside: You could rename &lt;code&gt;UnwrapPromise&lt;/code&gt; to be &lt;code&gt;BreakPromise&lt;/code&gt;. Doesn't affect the code, but its good for laughs 🤣🤣&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#turning-a-tuple-into-union-types" class="anchor"&gt;
  &lt;/a&gt;
  Turning a tuple into union types
&lt;/h2&gt;

&lt;p&gt;This is a tuple:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;alphabets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;b&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;c&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;d&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note: Without &lt;code&gt;as const&lt;/code&gt; at the end, typescript will interpret the type as &lt;code&gt;string[]&lt;/code&gt;, not as a tuple&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now we want to use these specific strings as union types. Easy peasy.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Alphabet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;b&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;c&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;d&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will do. But let's assume that this type and the array above are gonna end up in different files, and the project grows quite big, then you come back a few months later, and add another value &lt;code&gt;e&lt;/code&gt; to the &lt;code&gt;alphabets&lt;/code&gt; variable, and BOOM!!! The whole codebase breaks, because you forgot to add &lt;code&gt;e&lt;/code&gt; in the &lt;code&gt;Alphabet&lt;/code&gt; union type.&lt;/p&gt;

&lt;p&gt;We can automate the &lt;code&gt;Alphabet&lt;/code&gt; union type generation, in such a way that it pulls its members directly from &lt;code&gt;alphabets&lt;/code&gt; variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Alphabet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;alphabets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here's the universal type safe helper:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;UnionFromTuple&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Tuple&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;)[]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Tuple&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Usage:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;alphabets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;b&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;c&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;d&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Alphabet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;UnionFromTuple&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;alphabets&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//  type Alphabet = 'a' | 'b' | 'c' | 'd'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Why &lt;code&gt;readonly array&lt;/code&gt;?&lt;/strong&gt; \&lt;br&gt;
\&lt;br&gt;
This section is about Tuple to Union types, but in the code itself we haven't used the word &lt;code&gt;tuple&lt;/code&gt;. The reason is that tuple isn't a keyword. As far as TypeScript is concerned, a &lt;code&gt;readonly Array&lt;/code&gt; is a tuple. There's no &lt;code&gt;Tuple&lt;/code&gt; type or anything. That's why I'm making sure the type passed to &lt;code&gt;UnionFromTuple&lt;/code&gt; is a tuple, not an array. If its an array, its basically the same as the section above where we retrieved the element type from an array&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#union-types-from-object" class="anchor"&gt;
  &lt;/a&gt;
  Union types from object
&lt;/h2&gt;

&lt;p&gt;Let's say we have this object:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;openApps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;finder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;launchpad&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;safari&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;mail&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;photos&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;facetime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;calendar&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And I want to create a union type that's based on the keys specified here. If I add an extra key-value pair to this object, I want the union type to include that too.&lt;/p&gt;

&lt;p&gt;Here's the solution:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;KeysOfObject&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;K&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;unknown&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;keyof&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Usage👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;KeysOfObject&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;openApps&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will be equal to 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;finder&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;launchpad&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;safari&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;messages&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mail&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;maps&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;photos&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;facetime&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;calendar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#a-better-objectkeys" class="anchor"&gt;
  &lt;/a&gt;
  A better Object.Keys
&lt;/h2&gt;

&lt;p&gt;Looking the article, it seems like its a compilation of Helper Types, which is the case. But in this one, I'm gonna share a tip which isn't the most mind-blowing or the coolest. Its pretty boring, but the important thing is that it's the most MOST useful tip in this whole article. If you have to take something away from this article, take this. Ignore the whole article except for this part.&lt;/p&gt;

&lt;p&gt;Let's look the object from before:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;openApps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;finder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;launchpad&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;safari&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;mail&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;photos&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;facetime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;calendar&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Say I wanna apply &lt;code&gt;Object.keys&lt;/code&gt; to get an array of the keys of this object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;apps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;openApps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//  ["finder", "launchpad", "safari", "messages", "mail", "maps", "photos", "facetime", "calendar"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But there's bit of a problem here. If you hover over &lt;code&gt;apps&lt;/code&gt;, its type will be &lt;code&gt;string&lt;/code&gt;[]. Not &lt;code&gt;("finder" | "launchpad" | "safari" | "messages" | "mail" | "maps" | "photos" | "facetime" | "calendar")[]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Its not exactly a &lt;strong&gt;problem&lt;/strong&gt;, per se, but it would be great to have &lt;code&gt;Object.keys&lt;/code&gt; return the union types array of the keys.&lt;/p&gt;

&lt;p&gt;So let's investigate the issue. We'll start with &lt;code&gt;Object.keys&lt;/code&gt; definition in pre-built &lt;code&gt;lib.d.ts&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;ObjectConstructor&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//...&lt;/span&gt;
  &lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
  &lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{}):&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;If you find it weird that &lt;code&gt;keys&lt;/code&gt; is defined twice, its called Function/Method overloading. You can basically define multiple function declarations for flexible usage.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As you can see, its hard coded to always return &lt;code&gt;string[]&lt;/code&gt;. I'm sure its there for good reasons, but its quite inconvenient for me, so I'm gonna override this method to infer the keys correctly from what it is passed.&lt;/p&gt;

&lt;p&gt;If you have a root &lt;code&gt;.d.ts&lt;/code&gt; file in your project, put the snippet below right in it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;ObjectKeys&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Obj&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Obj&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;object&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kr"&gt;keyof&lt;/span&gt; &lt;span class="nx"&gt;Obj&lt;/span&gt;&lt;span class="p"&gt;)[]&lt;/span&gt;
  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Obj&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Obj&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;
  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;never&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;ObjectConstructor&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ObjectType&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ObjectType&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;ObjectKeys&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ObjectType&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's try the code above with the new &lt;code&gt;Object.keys&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;apps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;openApps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// const apps: ("finder" | "launchpad" | "safari" | "messages" | "mail" | "maps" | "photos" | "facetime" | "calendar")[]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Don't trust me? Check it out yourself @ &lt;a href="https://www.typescriptlang.org/play?#code/C4TwDgpgBA8gRgKwgY2AaQiAzgHnggPigF5ZEoIAPYCAOwBMsoB7RFYAKCigH4oAKANaZmAMzIIAlAG0AulygAuCRWp1GUWgFcAtnAgAnBXzkLl+VTQZMAggYMBDEDge0QRAD5QswAwEtaAHNjb18AwNNuZVoIADdDAG4ODgCaA1EHZGh8dgBhZlofAy1UZgMoAG8FYWw8NlQAFXAIAn5mc3rgJshJDqRUDFqcxuaCJIBfZOQCnxZIWhswMCZSKu5RAPpDZQyAGywIABoFXYctWmQACzAHeh2HfaOFLAcM-3vH4+4dCCwXwN+HwOXygOgcfl2QKe3wcyyhILAl2YwGYWHhCgyWWAfh+6O4yAe6gcBnR4ySHGmhWAUFhyxIEnYADoalg2vNFstJEkgA"&gt;TypeScript Playground&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: All the credit goes to Steven Baumgeitner's blog post about this exact same thing. I just ripped it off 😁. You can read more about fixing &lt;code&gt;Object.keys&lt;/code&gt; on his &lt;a href="https://fettblog.eu/typescript-better-object-keys/"&gt;blog post&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, this is it!! Hope you got something out of this blog post!&lt;/p&gt;

&lt;p&gt;Signing off!!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>webdev</category>
      <category>tricks</category>
    </item>
    <item>
      <title>Decoding Django Sessions in PostgreSQL</title>
      <author>Daniel Lifflander</author>
      <pubDate>Fri, 19 Mar 2021 17:15:19 +0000</pubDate>
      <link>https://dev.to/arctype/decoding-django-sessions-in-postgresql-2gf3</link>
      <guid>https://dev.to/arctype/decoding-django-sessions-in-postgresql-2gf3</guid>
      <description>&lt;h1&gt;
  &lt;a href="#sessions-in-django" class="anchor"&gt;
  &lt;/a&gt;
  Sessions in Django
&lt;/h1&gt;

&lt;p&gt;Sessions are an important part of any HTTP-based web framework. They allow web servers to keep track of the identities of repeat HTTP clients without requiring them to re-authenticate for each request. There are several different ways to keep track of sessions. Some do not require the server to persist session data (like JSON Web Tokens), while others do. &lt;/p&gt;

&lt;p&gt;Django, a popular Python-based web framework, ships with a default session backend that does store persistent session data. There are several storage and caching options; you can elect to simply store sessions in the SQL database and look them up each time, store them in a cache like Redis or Memcached, or use both, with the caching engine set up in front of the database store. If you use one of the options that ultimately stores sessions in SQL the &lt;code&gt;django_session&lt;/code&gt; table will contain your user's sessions.&lt;/p&gt;

&lt;p&gt;Screenshots in this post come from &lt;a href="https://www.arctype.com/"&gt;Arctype&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#session-schema" class="anchor"&gt;
  &lt;/a&gt;
  Session Schema
&lt;/h1&gt;

&lt;p&gt;When perusing through your application's data, you may come across a problem that requires you to link a user's session data to their actual User entry (the &lt;code&gt;auth_user&lt;/code&gt; table). This happened to me recently and when I took a look at the session table's schema definition, I was surprised that the &lt;code&gt;user_id&lt;/code&gt; is not stored as a column. There are important design decisions as to why this is the case, but it is inconvenient to SQL'ers like myself.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CVkYvPlQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/_9tFxQCfjHPt8aShpNURt1sFefgQANunpxcO1YGaMYirhXLbYuX3rQlTA5UPoqt4J9P6IblDi-rXQcJtyASFWMQNX97lyXx708RkKukp_s2C35SvxXFk4TLuIVC2tTbz7mtxwuEZ" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CVkYvPlQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/_9tFxQCfjHPt8aShpNURt1sFefgQANunpxcO1YGaMYirhXLbYuX3rQlTA5UPoqt4J9P6IblDi-rXQcJtyASFWMQNX97lyXx708RkKukp_s2C35SvxXFk4TLuIVC2tTbz7mtxwuEZ" alt="No auth_user_id"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;session_key&lt;/code&gt; is the key that clients are provided. Generally, clients making a request will include the &lt;code&gt;session_key&lt;/code&gt; as part of a cookie. When the web server receives the request, it finds &lt;code&gt;session_key&lt;/code&gt;, if it exists, then queries to see if the key is known. If it is, it will then look at the correlated &lt;code&gt;session_data&lt;/code&gt; and retrieve metadata about the user and their session. &lt;/p&gt;

&lt;p&gt;This is how you are able to access something like &lt;code&gt;request.user&lt;/code&gt; in a Django request. The &lt;code&gt;user_id&lt;/code&gt; is fetched from the decoded &lt;code&gt;session_data&lt;/code&gt;, the built-in User object is populated based on the stored &lt;code&gt;user_id&lt;/code&gt;, and then the User object is available for use throughout the project's views.&lt;/p&gt;

&lt;p&gt;Some quick Googling showed me that by default session data is stored as JSON. I was already aware of Postgres' excellent JSON abilities (&lt;a href="https://www.arctype.com/blog/json-in-postgresql/"&gt;if you are not, check out this blog post&lt;/a&gt;), so I suspected this was something we could work with within the bounds of Postgres. This was great news for someone like myself who spends a lot of time in Postgres.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#building-the-query" class="anchor"&gt;
  &lt;/a&gt;
  Building the Query
&lt;/h1&gt;
&lt;h2&gt;
  &lt;a href="#first-look" class="anchor"&gt;
  &lt;/a&gt;
  First Look
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hVe-cJtm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/JnmZkNiqKarbp71cbKeBq_TnBvxSXEzsN4JuhZlkIoHGFEz4QH_cS5EwuSoTFaoxxjFsf4kHs1DgfFCdEuz929AplEUhuYys21wqBVjZvtnYbmqrGfhjvjqRuXuqRihh8c5lNbxm" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hVe-cJtm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/JnmZkNiqKarbp71cbKeBq_TnBvxSXEzsN4JuhZlkIoHGFEz4QH_cS5EwuSoTFaoxxjFsf4kHs1DgfFCdEuz929AplEUhuYys21wqBVjZvtnYbmqrGfhjvjqRuXuqRihh8c5lNbxm" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see in the first image, session_data doesn't appear to be JSON. The metadata stored as JSON is hiding behind &lt;a href="https://en.wikipedia.org/wiki/Base64"&gt;base64 encoding&lt;/a&gt;. Fortunately, we can easily base64 decode in Postgres. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#decoding-from-base64" class="anchor"&gt;
  &lt;/a&gt;
  Decoding from Base64
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oDe8AkVo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/tsBekjJ8kwZFv_jI9xFJvh1cYGLtANFP1X0zsyfLZuKFBfoDjZKtxw3xhBlPHSXUSFs_FVcEabOtifgXq-5U1JRuMewH-F-ycqr0EohQwsU6RSYwE7T8qTrwUm0RQRpF9nWf0hKV" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oDe8AkVo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/tsBekjJ8kwZFv_jI9xFJvh1cYGLtANFP1X0zsyfLZuKFBfoDjZKtxw3xhBlPHSXUSFs_FVcEabOtifgXq-5U1JRuMewH-F-ycqr0EohQwsU6RSYwE7T8qTrwUm0RQRpF9nWf0hKV" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is hardly more readable. We need to convert from binary data into text.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#encoding-to-text" class="anchor"&gt;
  &lt;/a&gt;
  Encoding to Text
&lt;/h2&gt;

&lt;p&gt;The "encode" function in Postgres allows you to "Encode binary data into a textual representation."&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--raogfWO0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/KjSRQdT-q24VzqzUPHrwhAWvikm5Rr8w_IwFcSrqSrW8Gz1zlzyTTtMgmRkd76KBk39i9a48BraOkaN2Csz91lDJQfYQ30ZrOAUqlLkEfPI9CoftXy8ziOQVGOo3JCnOST72ZTE_" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--raogfWO0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/KjSRQdT-q24VzqzUPHrwhAWvikm5Rr8w_IwFcSrqSrW8Gz1zlzyTTtMgmRkd76KBk39i9a48BraOkaN2Csz91lDJQfYQ30ZrOAUqlLkEfPI9CoftXy8ziOQVGOo3JCnOST72ZTE_" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, we can finally see something human readable. Here is one of the full decoded results in text format:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;11fcbb0d460fd406e83b60ae082991818a1321a4:{"_auth_user_hash":"39308b9542b9305fc038d28a51088905e14246a1","_auth_user_backend":"x.alternate_auth.Backend","_auth_user_id":"52135"}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#extracting-json" class="anchor"&gt;
  &lt;/a&gt;
  Extracting JSON
&lt;/h2&gt;

&lt;p&gt;What we have here is a JSON blob prefaced by a colon and a hash of sorts. We're only interested in the JSON blob. A quick way to extract just the text past the hash and colon is to find the position of the first colon and extract all characters after it. &lt;/p&gt;

&lt;p&gt;To accomplish this, we can utilize both the &lt;code&gt;RIGHT&lt;/code&gt; function, which returns n characters at the end of a &lt;code&gt;string&lt;/code&gt; and the &lt;code&gt;POSITION&lt;/code&gt; function, which returns the position of a character in a string. &lt;code&gt;POSITION&lt;/code&gt; will only return the position of the first instance of the string for which you are searching.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;RIGHT&lt;/code&gt; function accepts a negative index. A negative index extracts characters from the right side of the string EXCEPT the characters indicated by the negative index.&lt;/p&gt;

&lt;p&gt;To further construct this query, we are going to break it out into 2 parts using CTEs. CTEs are helpful when you have built and selected a nontrivial column and you need to use it more than once. If we continued with only one &lt;code&gt;SELECT&lt;/code&gt;, we'd have to type the &lt;code&gt;encode(decode(session_data, 'base64'), 'escape')&lt;/code&gt; part multiple times. This is messy and if you decide to change how you wanted to parse the encoded data, you'd have to change the function calls in 2 places.&lt;/p&gt;

&lt;p&gt;Here is our updated query which extracts the JSON part.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wdQVj133--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/fDSLzbzeaXVf6CBv0RjPXoIjn7Hq9Cf6tH5AMoeKG_-YDkg349lz1MWZMOoZIQsx628ljjy7Kwx5waTYf95m004hSWV2JqfJBvtu29LSj2X4_wgb4rbFrCl2ZOfM1mNZ2pUAmoYA" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wdQVj133--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/fDSLzbzeaXVf6CBv0RjPXoIjn7Hq9Cf6tH5AMoeKG_-YDkg349lz1MWZMOoZIQsx628ljjy7Kwx5waTYf95m004hSWV2JqfJBvtu29LSj2X4_wgb4rbFrCl2ZOfM1mNZ2pUAmoYA" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Full result example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{"_auth_user_hash":"396db3c0f4ba3d35b350a","_auth_user_backend":"x.alternate_auth.Backend","_auth_user_id":"52646"}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#json-validation" class="anchor"&gt;
  &lt;/a&gt;
  JSON Validation
&lt;/h2&gt;

&lt;p&gt;Now that the column is parsable as JSON we can continue. However, if you try to cast text to JSON in Postgres when the text is not valid JSON, Postgres will throw an error and stop your query. In my database, some of the sessions were not parseable JSON. Here's a way to quickly make sure the text looks like parseable JSON.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;where
    substring(decoded, position(':' in decoded) + 1, 1) = '{'
    and right(decoded, 1) = '}'`
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Any string that does not begin and end with curly braces will be filtered out.&lt;/p&gt;

&lt;p&gt;This does not guarantee it will be able to parse, but for my database of several million sessions it did the job. You could write a custom Postgres function to verify JSON parsability, but it would be slower. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#json-casting" class="anchor"&gt;
  &lt;/a&gt;
  JSON Casting
&lt;/h2&gt;

&lt;p&gt;With a &lt;code&gt;WHERE&lt;/code&gt; clause to exclude invalid session metadata, it's time to cast our string to Postgres' JSON type and extract the &lt;code&gt;_auth_user_id&lt;/code&gt; key from the JSON. Depending on your Django configuration, this key could be different. Once an object is cast to JSON type, you can query a JSON value by key using the &lt;code&gt;object-&amp;gt;'key'&lt;/code&gt; syntax. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bVQnMjYw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/2SXKXjcI1ApcgKdflabXhVYbF9lNWaPRjHzwru-wS1q9c-3ac9Me4IBSWadfUR5zffa-MsNDB8-Xr_dvD__E4uj7KdrshxeAIv9-WlY0Ex1xOoQWBn9fSS2G2GFBbmTuz-So8Esi" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bVQnMjYw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/2SXKXjcI1ApcgKdflabXhVYbF9lNWaPRjHzwru-wS1q9c-3ac9Me4IBSWadfUR5zffa-MsNDB8-Xr_dvD__E4uj7KdrshxeAIv9-WlY0Ex1xOoQWBn9fSS2G2GFBbmTuz-So8Esi" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#string-cleanup" class="anchor"&gt;
  &lt;/a&gt;
  String Cleanup
&lt;/h2&gt;

&lt;p&gt;We're getting close! When casting from JSON to &lt;code&gt;text&lt;/code&gt;, Postgres adds double quotes around it. Ultimately we want the user_id field to be an &lt;code&gt;int&lt;/code&gt;, but Postgres will not parse a string that includes double quotes into an &lt;code&gt;int&lt;/code&gt;. Even JavaScript won't allow that!&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;TRIM&lt;/code&gt; function with the &lt;code&gt;BOTH&lt;/code&gt; will strip the specified character from both ends of a string, leaving us with a clean string that can easily be cast into an integer. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-query" class="anchor"&gt;
  &lt;/a&gt;
  Final Query
&lt;/h2&gt;

&lt;p&gt;Here is our final query after trimming the excess double quotes and casting to &lt;code&gt;int&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gh9Y1TsV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/S0s1BhO0IdH3e9hXgDXYPTWBavwuIJmpHPJ198CVb92rlsu43L6JZW-yNFRLtl0IGMt3j8tqnSFtYw-I6sdTqfQ_Bql_t0W3jIDqYMxJPkmWGhzvE4P6RqnsOlnaiZbL7wSPjZJV" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gh9Y1TsV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/S0s1BhO0IdH3e9hXgDXYPTWBavwuIJmpHPJ198CVb92rlsu43L6JZW-yNFRLtl0IGMt3j8tqnSFtYw-I6sdTqfQ_Bql_t0W3jIDqYMxJPkmWGhzvE4P6RqnsOlnaiZbL7wSPjZJV" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, as the sample result shows, we have linked &lt;code&gt;session_key&lt;/code&gt; to Django &lt;code&gt;auth_user&lt;/code&gt; id.&lt;/p&gt;

&lt;p&gt;Here is the full query in copyable form:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;with step1 as (
  select
    session_key,
    encode(decode(session_data, 'base64'), 'escape') :: text as decoded
  from
    django_session
)
select
  session_key,
  trim(
    both '"'
    from
      (
        right(
          decoded,
          0 - position(':' in decoded)
        ) :: json -&amp;gt; '_auth_user_id'
      ) :: text
  ) :: int as user_id
from
  step1
where
  substring(decoded, position(':' in decoded) + 1, 1) = '{'
  and right(decoded, 1) = '}'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#using-a-materialized-view-for-quick-querying" class="anchor"&gt;
  &lt;/a&gt;
  Using a Materialized View for Quick Querying
&lt;/h1&gt;

&lt;p&gt;If your database has a lot of users you'll notice this query is very slow. Making a materialized view will allow you to repeatedly query the result from a persistent view without re-running the SQL.&lt;/p&gt;

&lt;p&gt;When you create the materialized view (and anytime you refresh it), the source code for the view will be run and it will be populated with rows from the result. Be sure to refresh the view when you need up-to-date data!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;create materialized view mv_django_session_user as
with step1 as (
…
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To refresh:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;refresh materialized view mv_django_session_user;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#summary" class="anchor"&gt;
  &lt;/a&gt;
  Summary
&lt;/h1&gt;

&lt;p&gt;Encoding and string manipulation in Postgres is a little more tedious than it would be in common languages used for web applications like Python, Ruby, or PHP, but it is very satisfying to build a view entirely in Postgres that quickly extracts the exact data you want and allows you to directly join to other tables.&lt;/p&gt;

&lt;p&gt;The next time you need to extract data encoded by a web framework or another 3rd-party, check Postgres for the answer!&lt;/p&gt;

&lt;p&gt;Screenshots in this post come from &lt;a href="https://www.arctype.com/"&gt;Arctype&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>django</category>
      <category>webdev</category>
      <category>postgres</category>
      <category>security</category>
    </item>
    <item>
      <title>How to Start Freelancing as a programmer on Upwork</title>
      <author>Rahul Banerjee</author>
      <pubDate>Fri, 19 Mar 2021 16:44:03 +0000</pubDate>
      <link>https://dev.to/rahulbanerjee99/how-to-start-freelancing-as-a-programmer-on-upwork-26be</link>
      <guid>https://dev.to/rahulbanerjee99/how-to-start-freelancing-as-a-programmer-on-upwork-26be</guid>
      <description>&lt;h4&gt;Saying 2020 is a bad year would be an understatement but hey there are still a few days remaining! Start your freelancing journey. I will go over the skills needed for the most common postings related to Python, some tips, and also talk about my experience and earning.&lt;/h4&gt;

&lt;p&gt; All my freelance experience has been on UpWork so this tutorial will be guided towards that. Upwork is a great portal to find Freelance work.&lt;/p&gt;

&lt;p&gt;People will post tasks and their requirements and you as a freelancer would need to apply for it. You will need to submit a short paragraph explaining why you are a good fit for the task. Sometimes follow-up questions will also be asked. Some potentials follow up questions could be along the lines of&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What previous project have you worked on similar to this?&lt;/li&gt;
&lt;li&gt;What is your greatest strength with respect to this project?&lt;/li&gt;
&lt;li&gt;Are you familiar with the requirements of the project?&lt;/li&gt;
&lt;li&gt;Do you have any questions?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is essential to answer all the follow-up questions and mention your experience working with various technologies.&lt;/p&gt;

&lt;h3&gt;My Experience and earning&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c8P_O8eo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2ASMKOIPS27RKEWtz13CmA1w.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c8P_O8eo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2ASMKOIPS27RKEWtz13CmA1w.jpeg" alt=""&gt;&lt;/a&gt;Photo by &lt;a href="https://unsplash.com/@belart84?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText" rel="noreferrer noopener"&gt;Artem Beliaikin&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/dollar-bill?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText" rel="noreferrer noopener"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Most of my time spent on Upwork was during my school semester and only on the weekends so I wasn’t able to put in much time but hey every little penny helps 😃&lt;/p&gt;

&lt;p&gt;I have done around 5–6 tasks till now. A couple of them were related to web scraping and I made around 60$ in total. I wrote a tutorial on Streamlit for 20 bucks and tutorials on Python for 70 bucks.&lt;/p&gt;

&lt;p&gt;My highest earning was completing a task where I had to essentially help a researcher train their model by writing prompts for functions in Python and the function itself. Yup, it was a pretty easy task and helped me improve my Python skills. I made around 560$.&lt;/p&gt;

&lt;p&gt;In total, I have earned around 700$.&lt;/p&gt;

&lt;blockquote class="wp-block-quote"&gt;&lt;p&gt;UpWork takes a 20% fee which decreases to 10% once you have earned more than 500$ from a client&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;Python skills needed&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v7UjqZQL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A1X0-98EiQNkwBJj2vnTTqQ.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v7UjqZQL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A1X0-98EiQNkwBJj2vnTTqQ.jpeg" alt=""&gt;&lt;/a&gt;Photo by &lt;a href="https://unsplash.com/@cdr6934?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText" rel="noreferrer noopener"&gt;Chris Ried&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/python-coding?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText" rel="noreferrer noopener"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Based on my experience, I can confidently say that knowing these skills will help you land gigs on UpWork&lt;/p&gt;

&lt;h4&gt;Web Scraping&lt;/h4&gt;

&lt;p&gt;Scraping Websites to get data is one of the most common tasks people post. For the jobs I have seen, most seem to pay around 30–50$ for a script to scrape a single website. However, I have also seen projects where you need to create a GUI for scraping data from Amazon or similar sites for a few hundred bucks. If you would like to get started with web scraping, check out my tutorial below&lt;/p&gt;

&lt;p&gt;&lt;a href="http://realpythonproject.com/how-to-build-a-web-scraper-or-bot-in-python-using-selenium-2815f20023f7/"&gt;http://realpythonproject.com/how-to-build-a-web-scraper-or-bot-in-python-using-selenium-2815f20023f7/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As of now, on searching the term ‘Python scraping’, there are close to 400 postings and for the term ‘scraping’, there are close to 2000 postings. Although most of them do not specify the language to be used some of them do need the script in a specific language. Python being the amazing language it is can solve most web scraping tasks 😎&lt;/p&gt;

&lt;h4&gt;Blogging related to Data Science or Python&lt;/h4&gt;

&lt;p&gt;Many people do not have the expertise or the time to write content for their blogs and they look for ghostwriters to write the articles for them. Essentially you would write it for them for a fee and they would post it under their names. The pay for these kinds of jobs varies a lot. Some pay around 20–30 bucks for an article while some are willing to pay hundreds for well-written articles. If you want to be a strong candidate, you would need to have some previous articles and Medium is the best place to start writing articles.&lt;/p&gt;

&lt;h4&gt;Automation&lt;/h4&gt;

&lt;p&gt;There is a lot of data entry and tedious jobs, some of which could be automated with Python. In your proposal, do not forget to mention why automating the task is better than doing it manually and how automating it can make it less error-prone.&lt;/p&gt;

&lt;h4&gt;Tutors&lt;/h4&gt;

&lt;p&gt;There are plenty of tutoring jobs available, some of which pay north of 40$/hr. If you know your Python well, you can make good money out of it.&lt;/p&gt;

&lt;h4&gt;Miscellaneous&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Conversion from JSON to CSV or vice versa&lt;/li&gt;
&lt;li&gt;Cleaning data in Excel files&lt;/li&gt;
&lt;li&gt;Integration with APIs&lt;/li&gt;
&lt;li&gt;Working with Flask/Django, these usually pay really well&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you know Python, you will qualify for a LOT of jobs.&lt;/p&gt;

&lt;h4&gt;Tips&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Try getting jobs that pay hourly over fixed payment jobs. If you have any dispute, you can contact Upwork. However, if it’s a fixed payment job, UpWork won’t be able to help you if there is a dispute.&lt;/li&gt;
&lt;li&gt;Apply for jobs that have been posted within the last day or so since there is a good chance the person who posted the job is still hiring&lt;/li&gt;
&lt;li&gt;Apply for jobs with less competition. Upwork gives a range of the number of people who have applied for the postings. Avoid postings with 20–50 proposals.&lt;/li&gt;
&lt;li&gt;Read through the posting since often people ask you to include a sentence or a word in your proposal to make sure you are not a bot&lt;/li&gt;
&lt;li&gt;Write a good proposal, you can use my template below&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote class="wp-block-quote"&gt;
&lt;p&gt;Hi! I have previous experience working with library XYZ and I believe my experience will be really helpful to complete this task. The following tasks required me to use library XYZ ……………..&lt;/p&gt;
&lt;p&gt;Please do not hesitate to contact me to discuss further&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This might not be the ideal proposal but it’s a good base template and I have used this to land my gigs.&lt;/p&gt;

&lt;h4&gt;Conclusion&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9DvIzhMB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2ACEam-TsjG3QcFQRt0pih1g.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9DvIzhMB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2ACEam-TsjG3QcFQRt0pih1g.jpeg" alt=""&gt;&lt;/a&gt;Photo by &lt;a href="https://unsplash.com/@brookecagle?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText" rel="noreferrer noopener"&gt;Brooke Cagle&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/freelance?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText" rel="noreferrer noopener"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Getting started is always hard but once you get a few gigs under your belt, it’ll be easier to get more gigs since your profile will have credibility. It is ideal for students since it’s a good experience and a good side income and hey as I said before every little penny counts. &lt;/p&gt;

</description>
      <category>productivity</category>
      <category>python</category>
      <category>programming</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>🚀10 Trending projects on GitHub for web developers - 19th March 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 19 Mar 2021 14:43:42 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-19th-march-2021-2o9p</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-19th-march-2021-2o9p</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-awesome-design-tools" class="anchor"&gt;
  &lt;/a&gt;
  1. Awesome Design Tools
&lt;/h3&gt;

&lt;p&gt;The best design tools and plugins for everything&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/goabstract"&gt;
        goabstract
      &lt;/a&gt; / &lt;a href="https://github.com/goabstract/Awesome-Design-Tools"&gt;
        Awesome-Design-Tools
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The best design tools and plugins for everything 👉
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;&lt;div&gt;
&lt;h1&gt;
Awesome Design Tools&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Awesome-Design-Plugins.md"&gt;Awesome Design Plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Awesome-Design-Conferences.md"&gt;Awesome Design Conferences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LisaDziuba/Awesome-Design-Tools/blob/master/Awesome-Design-UI-Kits.md"&gt;Awesome Design UI Kits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
    &lt;a href="https://flawlessapp.io/designtools" rel="nofollow"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bWWk-LaJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/LisaDziuba/Awesome-Design-Tools/raw/master/Media/Awesome-design-tools-cover.png" alt="Awesome-Design-Tools"&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/abb97269de2982c379cbc128bba93ba724d8822bfbe082737772bd4feb59cb54/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f617765736f6d652f643733303566333864323966656437386661383536353265336136336531353464643865383832392f6d656469612f62616467652e737667"&gt;&lt;img alt="awesome" src="https://camo.githubusercontent.com/abb97269de2982c379cbc128bba93ba724d8822bfbe082737772bd4feb59cb54/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f617765736f6d652f643733303566333864323966656437386661383536353265336136336531353464643865383832392f6d656469612f62616467652e737667"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/b0ad703a46e8b249ef2a969ab95b2cb361a2866ecb8fe18495a2229f5847102d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e737667"&gt;&lt;img alt="PRs Welcome" src="https://camo.githubusercontent.com/b0ad703a46e8b249ef2a969ab95b2cb361a2866ecb8fe18495a2229f5847102d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e737667"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
Awesome Design Tools as a part of Flawless App family joins Abstract!&lt;/h2&gt;

&lt;p&gt;Today, we’re excited to announce that Flawless App has joined &lt;a href="https://www.abstract.com" rel="nofollow"&gt;Abstract&lt;/a&gt;, a design delivery platform that brings visibility, accountability, measurability, and predictability to design.&lt;/p&gt;

&lt;p&gt;Flawless App was our first company, and we’re proud of everything that we’ve achieved with our 5-person team.&lt;/p&gt;

&lt;p&gt;Since 2015, we’ve launched powerful tools for designers and developers — among them are &lt;a href="https://flawlessapp.io/" rel="nofollow"&gt;Flawless App&lt;/a&gt;, &lt;a href="https://flawlessapp.io/reduceapp" rel="nofollow"&gt;Reduce&lt;/a&gt;, &lt;a href="https://flawlessapp.io/feedback" rel="nofollow"&gt;Flawless Feedback&lt;/a&gt;. We’ve also invested a lot of love and care into community-driven initiatives. Awesome Design Tools is one of them.&lt;/p&gt;

&lt;h4&gt;
So what’s next?&lt;/h4&gt;
&lt;p&gt;Our team has joined Abstract and is focused on building out the &lt;a href="https://sdk.goabstract.com" rel="nofollow"&gt;Abstract SDK&lt;/a&gt;, bringing developers’ experience forward. One unbelievable journey has finished and the new one has just begun. And if you want to know more…&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/goabstract/Awesome-Design-Tools"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-githubelements" class="anchor"&gt;
  &lt;/a&gt;
  2. github-elements
&lt;/h3&gt;

&lt;p&gt;GitHub's Web Component collection. 16 open source custom elements. &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/github"&gt;
        github
      &lt;/a&gt; / &lt;a href="https://github.com/github/github-elements"&gt;
        github-elements
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      GitHub's Web Component collection.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
github-elements&lt;/h1&gt;
&lt;p&gt;GitHub's Web Component collection.&lt;/p&gt;
&lt;p&gt;We have 16 open source custom elements:&lt;/p&gt;
&lt;h3&gt;
&lt;a href="https://github.com/github/auto-check-element"&gt;github/auto-check-element&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;An input element that validates its value with a server endpoint.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/github/auto-check-element"&gt;Repository&lt;/a&gt; | &lt;a href="https://github.github.com/auto-check-element/examples/"&gt;Example&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
&lt;a href="https://github.com/github/auto-complete-element"&gt;github/auto-complete-element&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Auto-complete input values from server search results.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/github/auto-complete-element"&gt;Repository&lt;/a&gt; | &lt;a href="https://github.github.com/auto-complete-element/examples/"&gt;Example&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
&lt;a href="https://github.com/github/clipboard-copy-element"&gt;github/clipboard-copy-element&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Copy element text content or input values to the clipboard.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/github/clipboard-copy-element"&gt;Repository&lt;/a&gt; | &lt;a href="https://github.github.io/clipboard-copy-element/examples/" rel="nofollow"&gt;Example&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
&lt;a href="https://github.com/github/details-dialog-element"&gt;github/details-dialog-element&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;A modal dialog that's opened with &amp;lt;details&amp;gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/github/details-dialog-element"&gt;Repository&lt;/a&gt; | &lt;a href="https://github.github.io/details-dialog-element/example/index.html" rel="nofollow"&gt;Example&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
&lt;a href="https://github.com/github/details-menu-element"&gt;github/details-menu-element&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;A menu opened with &amp;lt;details&amp;gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/github/details-menu-element"&gt;Repository&lt;/a&gt; | &lt;a href="https://github.github.io/details-menu-element/examples" rel="nofollow"&gt;Example&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
&lt;a href="https://github.com/github/file-attachment-element"&gt;github/file-attachment-element&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Attach files via drag and drop or file input.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/github/file-attachment-element"&gt;Repository&lt;/a&gt; | &lt;a href="https://github.github.com/file-attachment-element/examples/"&gt;Example&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
&lt;a href="https://github.com/github/filter-input-element"&gt;github/filter-input-element&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Display elements in a subtree that match filter input text.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/github/filter-input-element"&gt;Repository&lt;/a&gt; | &lt;a href="https://github.github.io/filter-input-element/examples/" rel="nofollow"&gt;Example&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
&lt;a href="https://github.com/github/g-emoji-element"&gt;github/g-emoji-element&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Backports native emoji characters to browsers that don't support them by replacing the characters with fallback images.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/github/g-emoji-element"&gt;Repository&lt;/a&gt; | &lt;a href="https://github.github.io/g-emoji-element/examples/" rel="nofollow"&gt;Example&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
&lt;a href="https://github.com/github/image-crop-element"&gt;github/image-crop-element&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;A custom element for cropping a square image. Returns x, y, width, and height.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/github/image-crop-element"&gt;Repository&lt;/a&gt; | &lt;a href="https://github.github.io/image-crop-element/examples/" rel="nofollow"&gt;Example&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
&lt;a href="https://github.com/github/include-fragment-element"&gt;github/include-fragment-element&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;A client-side includes tag.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/github/include-fragment-element"&gt;Repository&lt;/a&gt; | &lt;a href="https://github.github.io/include-fragment-element/examples" rel="nofollow"&gt;Example&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
&lt;a href="https://github.com/github/markdown-toolbar-element"&gt;github/markdown-toolbar-element&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Markdown formatting buttons…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/github/github-elements"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-ionicons" class="anchor"&gt;
  &lt;/a&gt;
  3. Ionicons
&lt;/h3&gt;

&lt;p&gt;Ionicons is a completely open-source icon set with 1,300 icons crafted for web, iOS, Android, and desktop apps. Ionicons was built for Ionic Framework, so icons have both Material Design and iOS versions.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ionic-team"&gt;
        ionic-team
      &lt;/a&gt; / &lt;a href="https://github.com/ionic-team/ionicons"&gt;
        ionicons
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Premium hand-crafted icons built by Ionic, for Ionic apps and web apps everywhere 🌎
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Ionicons&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://ionicons.com/" rel="nofollow"&gt;Ionicons&lt;/a&gt; is a completely open-source icon set with 1,300 icons crafted for web, iOS, Android, and desktop apps. Ionicons was built for &lt;a href="https://ionicframework.com/" rel="nofollow"&gt;Ionic Framework&lt;/a&gt;, so icons have both Material Design and iOS versions.&lt;/p&gt;
&lt;p&gt;Note: All brand icons are trademarks of their respective owners. The use of these trademarks does not indicate endorsement of the trademark holder by Ionic, nor vice versa.&lt;/p&gt;
&lt;p&gt;We intend for this icon pack to be used with &lt;a href="http://ionicframework.com/" rel="nofollow"&gt;Ionic&lt;/a&gt;, but it’s by no means limited to it. Use them wherever you see fit, personal or commercial. They are free to use and licensed under &lt;a href="http://opensource.org/licenses/MIT" rel="nofollow"&gt;MIT&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;Thanks for your interest in contributing! Read up on our guidelines for
&lt;a href="https://github.com/ionic-team/ionicons/blob/master/.github/CONTRIBUTING.md"&gt;contributing&lt;/a&gt;
and then look through our issues with a &lt;a href="https://github.com/ionic-team/ionicons/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22"&gt;help wanted&lt;/a&gt;
label.&lt;/p&gt;
&lt;h2&gt;
Using the Web Component&lt;/h2&gt;
&lt;p&gt;The Ionicons Web Component is an easy and performant way to use Ionicons in your app. The component will…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ionic-team/ionicons"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#4-tailwindcss-just-in-time" class="anchor"&gt;
  &lt;/a&gt;
  4. Tailwindcss - Just In Time
&lt;/h3&gt;

&lt;p&gt;An experimental just-in-time compiler for Tailwind CSS that generates your styles on-demand as you author your templates instead of generating everything in advance at initial build time.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/tailwindlabs"&gt;
        tailwindlabs
      &lt;/a&gt; / &lt;a href="https://github.com/tailwindlabs/tailwindcss-jit"&gt;
        tailwindcss-jit
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/tailwindlabs/tailwindcss-jit/main/.github/logo.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SfM2AONV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/tailwindlabs/tailwindcss-jit/main/.github/logo.svg" alt="Tailwind CSS Just-In-Time"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;a href="https://github.com/tailwindlabs/tailwindcss-jit/releases"&gt;&lt;img src="https://camo.githubusercontent.com/b45f1617b6c776994088ac6f80d7d1ef437d6bca6bfcedb582398dc0eb6ef906/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f407461696c77696e646373732f6a6974" alt="Latest Release"&gt;&lt;/a&gt;
    &lt;a href="https://github.com/tailwindlabs/tailwindcss-jit/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/056729fb122195fc06ddfefa306defad4729963d172e8031d62e8ae2cc29cb23/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f407461696c77696e646373732f6a69742e737667" alt="License"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;
Overview&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;An experimental just-in-time compiler for Tailwind CSS&lt;/strong&gt; that generates your styles on-demand as you author your templates instead of generating everything in advance at initial build time.&lt;/p&gt;
&lt;p&gt;This comes with a lot of advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Lightning fast build times&lt;/strong&gt;. Tailwind can take 3–8s to initially compile using our CLI, and upwards of 30–45s in webpack projects because webpack struggles with large CSS files. This library can compile even the biggest projects in about 800ms &lt;em&gt;(with incremental rebuilds as fast as 3ms)&lt;/em&gt;, no matter what build tool you're using.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Every variant is enabled out of the box&lt;/strong&gt;. Variants like &lt;code&gt;focus-visible&lt;/code&gt;, &lt;code&gt;active&lt;/code&gt;, &lt;code&gt;disabled&lt;/code&gt;, and others are not normally enabled by default due to file-size considerations. Since this library generates styles on demand, you can use any variant you want, whenever you want. You can even stack them like &lt;code&gt;sm:hover:active:disabled:opacity-75&lt;/code&gt;. Never configure your variants again.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Generate&lt;/strong&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/tailwindlabs/tailwindcss-jit"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-bulletproof-nodejs" class="anchor"&gt;
  &lt;/a&gt;
  5. Bulletproof Node.js
&lt;/h3&gt;

&lt;p&gt;Implementation of a bulletproof node.js API &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/santiq"&gt;
        santiq
      &lt;/a&gt; / &lt;a href="https://github.com/santiq/bulletproof-nodejs"&gt;
        bulletproof-nodejs
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Implementation of a bulletproof node.js API 🛡️
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Bulletproof Node.js architecture 🛡️
&lt;/h1&gt;
&lt;p&gt;This is the example repository from the blog post &lt;a href="https://softwareontheroad.com/ideal-nodejs-project-structure?utm_source=github&amp;amp;utm_medium=readme" rel="nofollow"&gt;'Bulletproof node.js project architecture'&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Please read the blog post in order to have a good understanding of the server architecture.&lt;/p&gt;
&lt;p&gt;Also, I added lots of comments to the code that are not in the blog post, because they explain the implementation and the reason behind the choices of libraries and some personal opinions and some bad jokes.&lt;/p&gt;
&lt;p&gt;The API by itself doesn't do anything fancy, it's just a user CRUD with authentication capabilities
Maybe we can transform this into something useful, a more advanced example, just open an issue and let's discuss the future of the repo.&lt;/p&gt;
&lt;h2&gt;
Development&lt;/h2&gt;
&lt;p&gt;We use &lt;code&gt;node&lt;/code&gt; version &lt;code&gt;14.9.0&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nvm install 14.9.0
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;nvm use 14.9.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first time, you will need to run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then just start the server with&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm run start
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It uses nodemon for livereloading :peace-fingers:&lt;/p&gt;
&lt;h2&gt;
Online one-click setup&lt;/h2&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/santiq/bulletproof-nodejs"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-changesets" class="anchor"&gt;
  &lt;/a&gt;
  6. changesets
&lt;/h3&gt;

&lt;p&gt;A way to manage your versioning and changelogs with a focus on monorepos&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/atlassian"&gt;
        atlassian
      &lt;/a&gt; / &lt;a href="https://github.com/atlassian/changesets"&gt;
        changesets
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🦋       A way to manage your versioning and changelogs with a focus on monorepos
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
🦋 changesets 🦋
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;A way to manage your versioning and changelogs with a focus on multi-package repositories&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://changelogs.xyz/@changesets/cli" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/725f73cb696cad59931597d314fb26f7c82b43f2fcdfc64b5c8ca6350a94601b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6368616e67656c6f67732e78797a2d4578706c6f72652532304368616e67656c6f672d627269676874677265656e" alt="View changelog"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;changesets&lt;/code&gt; workflow is designed to help from when people are making changes, all the way through to publishing. It lets contributors declare how their changes should be released, then we automate updating package versions, and changelogs, and publishing new versions of packages based on the provided information.&lt;/p&gt;
&lt;p&gt;Changesets has a focus on solving these problems for multi-package repositories, and keeps packages that rely on each other within the multi-package repository up-to-date, as well as making it easy to make changes to groups of packages.&lt;/p&gt;
&lt;h2&gt;
How do we do that?&lt;/h2&gt;
&lt;p&gt;A &lt;code&gt;changeset&lt;/code&gt; is an intent to release a set of packages at particular &lt;a href="https://semver.org/" rel="nofollow"&gt;semver bump types&lt;/a&gt; with a summary of the changes made.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;@changesets/cli&lt;/strong&gt; package allows you to write &lt;code&gt;changeset&lt;/code&gt; files as you make changes, then combine any number of changesets into…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/atlassian/changesets"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#7-open-source-guides" class="anchor"&gt;
  &lt;/a&gt;
  7. Open Source Guides
&lt;/h3&gt;

&lt;p&gt;Open Source Guides are a collection of resources for individuals, communities, and companies who want to learn how to run and contribute to an open source project.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/github"&gt;
        github
      &lt;/a&gt; / &lt;a href="https://github.com/github/opensource.guide"&gt;
        opensource.guide
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      📚 Community guides for open source creators
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Open Source Guides&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/github/opensource.guide/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4IEBp3HX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/github/opensource.guide/workflows/GitHub%2520Actions%2520CI/badge.svg" alt="Build Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Open Source Guides (&lt;a href="https://opensource.guide/" rel="nofollow"&gt;https://opensource.guide/&lt;/a&gt;) are a collection of resources for individuals, communities, and companies who want to learn how to run and contribute to an open source project.&lt;/p&gt;
&lt;h2&gt;
Background&lt;/h2&gt;
&lt;p&gt;Open Source Guides were created and are curated by GitHub, along with input from outside community reviewers, but they are not exclusive to GitHub products. One reason we started this project is because we felt that there weren't enough resources for people creating open source projects.&lt;/p&gt;
&lt;p&gt;Our goal was to aggregate community best practices, &lt;em&gt;not&lt;/em&gt; what GitHub (or any other individual or entity) thinks is best. Therefore, we used examples and quotations from others to illustrate our points.&lt;/p&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;This site is powered by &lt;a href="https://jekyllrb.com/" rel="nofollow"&gt;Jekyll&lt;/a&gt;. Check out our &lt;a href="https://raw.githubusercontent.com/github/opensource.guide/main//CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; for ways to offer feedback and contribute.&lt;/p&gt;
&lt;h2&gt;
Licenses&lt;/h2&gt;
&lt;p&gt;Content is released under &lt;a href="https://creativecommons.org/licenses/by/4.0/" rel="nofollow"&gt;CC-BY-4.0&lt;/a&gt;. See &lt;a href="https://raw.githubusercontent.com/github/opensource.guide/main/notices.md"&gt;notices&lt;/a&gt; for complete details, including attribution guidelines, contribution terms, and…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/github/opensource.guide"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#8-vscodeicons" class="anchor"&gt;
  &lt;/a&gt;
  8. vscode-icons
&lt;/h3&gt;

&lt;p&gt;Icons for Visual Studio Code&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/vscode-icons"&gt;
        vscode-icons
      &lt;/a&gt; / &lt;a href="https://github.com/vscode-icons/vscode-icons"&gt;
        vscode-icons
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Icons for Visual Studio Code
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
vscode-icons&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8945ac35cda5705d38f1af64b51a079a2199fd9c2dadde7c8316de3e3c2e9849/68747470733a2f2f76736d61726b6574706c61636562616467652e61707068622e636f6d2f76657273696f6e2f7673636f64652d69636f6e732d7465616d2e7673636f64652d69636f6e732e737667" alt="Version"&gt;&lt;/a&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0cff46b5df3b695db22c003c5e6505e15340c63be34adbd855de74fe9d8997b8/68747470733a2f2f76736d61726b6574706c61636562616467652e61707068622e636f6d2f696e7374616c6c732d73686f72742f7673636f64652d69636f6e732d7465616d2e7673636f64652d69636f6e732e737667" alt="Installs"&gt;&lt;/a&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fe30772d7786b18f51f2dc09d87d8175b1b7133354c87babe5ae3a73a3074128/68747470733a2f2f76736d61726b6574706c61636562616467652e61707068622e636f6d2f726174696e672f7673636f64652d69636f6e732d7465616d2e7673636f64652d69636f6e732e737667" alt="Ratings"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/vscode-icons/vscode-icons" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/03232a09f1ff74f118c6225c59c727633befeef3d7dc4d2af53df154608acb58/68747470733a2f2f7472617669732d63692e6f72672f7673636f64652d69636f6e732f7673636f64652d69636f6e732e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/vscode-icons-team/vscode-icons" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/46d33dee491ead72cb5a3e44e1028c20f2b9596ad94b3972c784e4b00d54c423/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f7673636f64652d69636f6e732f7673636f64652d69636f6e733f6272616e63683d6d6173746572267376673d74727565" alt="Build Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://david-dm.org/vscode-icons/vscode-icons" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/775050ecd57d8b142f9a1e1d1bb9ca64c048b0fa975371f8eed0a80e34238fda/68747470733a2f2f64617669642d646d2e6f72672f7673636f64652d69636f6e732f7673636f64652d69636f6e732f7374617475732e737667" alt="Dependencies Status"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/vscode-icons/vscode-icons?type=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bcbb1044be6363e2a9df0206df1dce65488baf176cf130d315931918ea8bff80/68747470733a2f2f64617669642d646d2e6f72672f7673636f64652d69636f6e732f7673636f64652d69636f6e732f6465762d7374617475732e737667" alt="DevDependencies Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://codeclimate.com/github/vscode-icons/vscode-icons/maintainability" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aab737fb26e8beb5e98ec78ad7a82eab5caf17b4b15152dd41f71a220f80061c/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f34663032333638656265623762653134393062622f6d61696e7461696e6162696c697479" alt="Maintainability"&gt;&lt;/a&gt;
&lt;a href="https://codeclimate.com/github/vscode-icons/vscode-icons/test_coverage" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/323dfef5437e83f52822d6abca4e115344e7b642da0739fd3c9071b500dcf5a1/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f34663032333638656265623762653134393062622f746573745f636f766572616765" alt="Test Coverage"&gt;&lt;/a&gt;
&lt;a href="https://snyk.io/test/github/vscode-icons/vscode-icons" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6e63de6816e61c177f61a709dcc47b5e3e81412153b27334fe501f45c8de1ab6/68747470733a2f2f736e796b2e696f2f746573742f6769746875622f7673636f64652d69636f6e732f7673636f64652d69636f6e732f62616467652e737667" alt="Known Vulnerabilities"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://isitmaintained.com/project/vscode-icons/vscode-icons" title="Average time to resolve an issue" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8ba71c488ce8616d62a35e0e0cd215da0a36a24cabe35cd3cd2d4e7958ddab32/68747470733a2f2f697369746d61696e7461696e65642e636f6d2f62616467652f7265736f6c7574696f6e2f7673636f64652d69636f6e732f7673636f64652d69636f6e732e737667" alt="Average time to resolve an issue"&gt;&lt;/a&gt;
&lt;a href="https://isitmaintained.com/project/vscode-icons/vscode-icons" title="Percentage of issues still open" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9d9618951a23f157a080c44ece68523f731d2a2f600395d0c2a54c801bb729ab/68747470733a2f2f697369746d61696e7461696e65642e636f6d2f62616467652f6f70656e2f7673636f64652d69636f6e732f7673636f64652d69636f6e732e737667" alt="Percentage of issues still open"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bring icons to your &lt;a href="https://code.visualstudio.com/" rel="nofollow"&gt;Visual Studio Code&lt;/a&gt; (&lt;strong&gt;minimum supported version: &lt;code&gt;1.40.2&lt;/code&gt;&lt;/strong&gt;)&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/vscode-icons/vscode-icons/master/images/screenshot.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6HSp87V---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/vscode-icons/vscode-icons/master/images/screenshot.gif" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;To install the extension just execute the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;ext install vscode-icons&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Some people have reported that they cannot find the extension when they insert the installation command.&lt;/p&gt;
&lt;p&gt;If you find yourself in the same position, try:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;ext install icons
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or&lt;/span&gt;
ext install &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;vscode-icons&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Security&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;vscode-icons&lt;/code&gt; utilizes &lt;a href="https://www.npmjs.com/package/nsri" rel="nofollow"&gt;NSRI&lt;/a&gt; for its subresources integrity check and protection against code injection.&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;Once installed and after reloading &lt;code&gt;vscode&lt;/code&gt;, you will be presented with a message to &lt;code&gt;Activate&lt;/code&gt; the icons.&lt;/p&gt;
&lt;p&gt;In case this doesn't happen, navigate to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Linux&lt;/code&gt; &amp;amp; &lt;code&gt;Windows&lt;/code&gt; &lt;code&gt;=&amp;gt;&lt;/code&gt; &lt;strong&gt;File &amp;gt; Preferences &amp;gt; File Icon Theme &amp;gt; VSCode Icons&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;MacOS&lt;/code&gt; &lt;code&gt;=&amp;gt;&lt;/code&gt; &lt;strong&gt;Code &amp;gt; Preferences &amp;gt; File Icon Theme &amp;gt; VSCode Icons&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;vscode-icons&lt;/code&gt; is being shipped with a lot of features, like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vscode-icons/vscode-icons/wiki/Customization"&gt;Icons Customization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vscode-icons/vscode-icons/wiki/Pad"&gt;Project Auto-Detection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vscode-icons/vscode-icons/wiki/Configuration"&gt;Custom Configuration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Globalization&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;vscode-icons&lt;/code&gt; uses…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/vscode-icons/vscode-icons"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#9-esbuildloader" class="anchor"&gt;
  &lt;/a&gt;
  9. esbuild-loader
&lt;/h3&gt;

&lt;p&gt;Speed up your Webpack build with esbuild&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/privatenumber"&gt;
        privatenumber
      &lt;/a&gt; / &lt;a href="https://github.com/privatenumber/esbuild-loader"&gt;
        esbuild-loader
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ⚡️ Speed up your Webpack build with esbuild
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
esbuild-loader &lt;a href="https://npm.im/esbuild-loader" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c556d4756e5950bc824696a08ec7ec4f54fb0f78899169bc38174debb1f43ce1/68747470733a2f2f62616467656e2e6e65742f6e706d2f762f65736275696c642d6c6f61646572"&gt;&lt;/a&gt; &lt;a href="https://npm.im/esbuild-loader" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a14637c6942ae4c5474a4ab21cb06f6f87e599a0c27ea87cf506d01c148b08ae/68747470733a2f2f62616467656e2e6e65742f6e706d2f646d2f65736275696c642d6c6f61646572"&gt;&lt;/a&gt; &lt;a href="https://packagephobia.now.sh/result?p=esbuild-loader" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/190702ca4057ec6e941c8f31542108c2114aaab3642e7ddbd61fe373fef9959d/68747470733a2f2f7061636b61676570686f6269612e6e6f772e73682f62616467653f703d65736275696c642d6c6f61646572"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Speed up your Webpack build with &lt;a href="https://github.com/evanw/esbuild"&gt;esbuild&lt;/a&gt;! 🔥&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/evanw/esbuild"&gt;esbuild&lt;/a&gt; is a JavaScript bundler written in Go that supports blazing fast ESNext &amp;amp; TypeScript transpilation and JS minification.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/privatenumber/esbuild-loader"&gt;esbuild-loader&lt;/a&gt; lets you harness the speed of esbuild in your Webpack build by offering faster alternatives for transpilation (eg. babel-loader/ts-loader) and minification (eg. Terser)!&lt;/p&gt;
&lt;p&gt;Curious how much faster your build will be? See &lt;a href="https://github.com/privatenumber/esbuild-loader/issues/13"&gt;what users are saying&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you like this project, please star it &amp;amp; &lt;a href="https://github.com/privatenumber"&gt;follow me&lt;/a&gt; to see what other cool projects I'm working on! ❤️&lt;/p&gt;
&lt;h2&gt;
🚀 Install&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;npm i -D esbuild-loader&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
🚦 Quick Setup&lt;/h2&gt;
&lt;h3&gt;
Javascript &amp;amp; JSX transpilation (eg. Babel)&lt;/h3&gt;
&lt;p&gt;In &lt;code&gt;webpack.config.js&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-diff js-code-highlight"&gt;
&lt;pre&gt;  module.exports = {
    module: {
      rules: [
&lt;span class="pl-md"&gt;&lt;span class="pl-md"&gt;-&lt;/span&gt;       {&lt;/span&gt;
&lt;span class="pl-md"&gt;&lt;span class="pl-md"&gt;-&lt;/span&gt;         test: /\.js$/,&lt;/span&gt;
&lt;span class="pl-md"&gt;&lt;span class="pl-md"&gt;-&lt;/span&gt;         use: 'babel-loader',&lt;/span&gt;
&lt;span class="pl-md"&gt;&lt;span class="pl-md"&gt;-&lt;/span&gt;       },&lt;/span&gt;
&lt;span class="pl-mi1"&gt;&lt;span class="pl-mi1"&gt;+&lt;/span&gt;       {&lt;/span&gt;
&lt;span class="pl-mi1"&gt;&lt;span class="pl-mi1"&gt;+&lt;/span&gt;         test: /\.js$/,&lt;/span&gt;
&lt;span class="pl-mi1"&gt;&lt;span class="pl-mi1"&gt;+&lt;/span&gt;         loader: 'esbuild-loader',&lt;/span&gt;
&lt;span class="pl-mi1"&gt;&lt;span class="pl-mi1"&gt;+&lt;/span&gt;         options: {&lt;/span&gt;
&lt;span class="pl-mi1"&gt;&lt;span class="pl-mi1"&gt;+&lt;/span&gt;           loader: 'jsx', // Remove this if you're not using JSX&lt;/span&gt;
&lt;span class="pl-mi1"&gt;&lt;span class="pl-mi1"&gt;+&lt;/span&gt;           target: 'es2015' // Syntax&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/privatenumber/esbuild-loader"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#10-nodejsscan" class="anchor"&gt;
  &lt;/a&gt;
  10. nodejsscan
&lt;/h3&gt;

&lt;p&gt;nodejsscan is a static security code scanner for Node.js applications.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ajinabraham"&gt;
        ajinabraham
      &lt;/a&gt; / &lt;a href="https://github.com/ajinabraham/nodejsscan"&gt;
        nodejsscan
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      nodejsscan is a static security code scanner for Node.js applications.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
nodejsscan &lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/4301109/83980418-abb48b00-a8e3-11ea-99df-1d25dcc7fc28.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7arpOMcP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/4301109/83980418-abb48b00-a8e3-11ea-99df-1d25dcc7fc28.png" alt="nodejsscan icon"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Static security code scanner (SAST) for Node.js applications powered by &lt;a href="https://github.com/ajinabraham/libsast"&gt;libsast&lt;/a&gt; and &lt;a href="https://github.com/returntocorp/semgrep"&gt;semgrep&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Made with &lt;a rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/4301109/16754758/82e3a63c-4813-11e6-9430-6015d98aeaab.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1DF8nbDp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/4301109/16754758/82e3a63c-4813-11e6-9430-6015d98aeaab.png" alt="Love"&gt;&lt;/a&gt; in India  &lt;a href="https://twitter.com/intent/tweet/?text=nodejsscan,%20a%20static%20security%20code%20scanner%20for%20node.js%20applications%20by%20%40ajinabraham%20%40OpenSecurity_IN&amp;amp;url=https://github.com/ajinabraham/nodejsscan" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/eb60c354c1a742a0f01ce093fbbb08f2781846acf37b681618613ef632255af5/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c3f75726c3d68747470733a2f2f6769746875622e636f6d2f616a696e6162726168616d2f6e6f64656a737363616e" alt="Tweet"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ajinabraham/nodejsscan"&gt;&lt;img src="https://camo.githubusercontent.com/fe5d241e3f083b32d8f93b93cf7f4a0a88b69a45b4cfa9280807b6227bc4f8f8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d6f73782532466c696e75782d677265656e2e737667" alt="platform"&gt;&lt;/a&gt;
&lt;a href="https://www.gnu.org/licenses/gpl-3.0.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2a1835d9d10447073ad66c11faf7a96d97cbb293ffa43b3d44cfc645316f72a7/68747470733a2f2f696d672e736869656c64732e696f2f3a6c6963656e73652d67706c332d626c75652e737667" alt="License"&gt;&lt;/a&gt;
&lt;a href="https://www.python.org/downloads/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/75b8738e1bdfe8a832711925abbc3bd449c1e7e9260c870153ec761cad8dde40/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e362b2d626c75652e737667" alt="python"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://lgtm.com/projects/g/ajinabraham/nodejsscan/context:python" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/abc46828ed28fc64f6246f2c6d3af24bd5fafd3933c84d96b3f0f8ac61fb0c64/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f707974686f6e2f672f616a696e6162726168616d2f6e6f64656a737363616e2e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138" alt="Language grade: Python"&gt;&lt;/a&gt;
&lt;a href="https://requires.io/github/ajinabraham/nodejsscan/requirements/?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fbd3c6ce47b1179225f8871ce10ac8d05a62666cfe6f92ccb1c8b64086cd89ab/68747470733a2f2f72657175697265732e696f2f6769746875622f616a696e6162726168616d2f6e6f64656a737363616e2f726571756972656d656e74732e7376673f6272616e63683d6d6173746572" alt="Requirements Status"&gt;&lt;/a&gt;
&lt;a href="https://github.com/ajinabraham/nodejsscan/actions?query=workflow%3ATest"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mRw3XU2F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ajinabraham/nodejsscan/workflows/Test/badge.svg" alt="Build"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Support nodejsscan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Donate via Paypal:&lt;/strong&gt; &lt;a href="https://paypal.me/ajinabraham" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ww2il_-j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/4301109/76471686-c43b0500-63c9-11ea-8225-2a305efb3d87.gif" alt="Donate via Paypal"&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Sponsor the Project:&lt;/strong&gt; &lt;a href="https://github.com/sponsors/ajinabraham"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WU_1_0U3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/4301109/95517226-9e410780-098e-11eb-9ef5-7b8c7561d725.png" alt="Github Sponsors"&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
e-Learning Courses &amp;amp; Certifications&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://opsecx.com/index.php/product/node-js-security-pentesting-and-exploitation/?uid=github" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---aEVtG_5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/4301109/82597198-99fa8600-9b76-11ea-8243-c604bc7b06b1.png" alt="OpSecX Video Course"&gt;&lt;/a&gt; &lt;a href="https://opsecx.com/index.php/product/node-js-security-pentesting-and-exploitation/?uid=github" rel="nofollow"&gt;OpSecX Node.js Security: Pentesting and Exploitation - NJS&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Run nodejsscan&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;docker pull opensecurity/nodejsscan:latest
docker run -it -p 9090:9090 opensecurity/nodejsscan:latest&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Try nodejsscan online
&lt;a href="https://labs.play-with-docker.com/?stack=https://raw.githubusercontent.com/ajinabraham/nodejsscan/master/docker-compose.yml" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mzm5i8bT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/4301109/76351696-494bee80-62e4-11ea-894a-cb1cd07c86fc.png" alt="Try in PWD"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Setup nodejsscan locally&lt;/h2&gt;
&lt;p&gt;Install Postgres and configure &lt;code&gt;SQLALCHEMY_DATABASE_URI&lt;/code&gt; in &lt;code&gt;nodejsscan/settings.py&lt;/code&gt; or as environment variable.&lt;/p&gt;
&lt;p&gt;From version 4 onwards, windows support is dropped.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;git clone https://github.com/ajinabraham/nodejsscan.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; nodejsscan
python3 -m venv venv
&lt;span class="pl-c1"&gt;source&lt;/span&gt; venv/bin/activate
pip install -r requirements.txt
python3 manage.py recreate_db &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Run once to create database entries&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;To run nodejsscan&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./run.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This will run nodejsscan web user interface at &lt;code&gt;http://127.0.0.1:9090&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
Command Line Interface(CLI) and Python API&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/4301109/83962395-ecbc8900-a86a-11ea-9fe7-40703a7e6d4b.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ql0MWdg6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/4301109/83962395-ecbc8900-a86a-11ea-9fe7-40703a7e6d4b.gif" alt="njsscan_cli"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CLI: &lt;a href="https://github.com/ajinabraham/njsscan#command-line-options"&gt;https://github.com/ajinabraham/njsscan#command-line-options&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;API: &lt;a href="https://github.com/ajinabraham/njsscan#python-api"&gt;https://github.com/ajinabraham/njsscan#python-api&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Presentations&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://youtu.be/kTjICeZCvS0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a5fe64fe63e01037c73ab2f61841c18fd0b94a76a3aabfcb6dd3b415fd21da8d/68747470733a2f2f696d672e796f75747562652e636f6d2f76692f6b546a4943655a437653302f687164656661756c742e6a7067" alt="Watch the video"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Integrations&lt;/h2&gt;
&lt;h3&gt;
Slack Alerts&lt;/h3&gt;
&lt;p&gt;Create your slack app &lt;a href="https://api.slack.com/messaging/webhooks" rel="nofollow"&gt;Slack App&lt;/a&gt; and set &lt;code&gt;SLACK_WEBHOOK_URL&lt;/code&gt; in &lt;code&gt;nodejsscan/settings.py&lt;/code&gt; or as environment variable.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/4301109/83978059-d64a1800-a8d2-11ea-9ef8-7a17d8904324.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RQ4XDG2V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/4301109/83978059-d64a1800-a8d2-11ea-9ef8-7a17d8904324.png" alt="nodejsscan slack alert"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Email Alerts&lt;/h3&gt;
&lt;p&gt;Configure SMTP settings in &lt;code&gt;nodejsscan/settings.py&lt;/code&gt; or…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ajinabraham/nodejsscan"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#stargazing" class="anchor"&gt;
  &lt;/a&gt;
  Stargazing 📈
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days" class="anchor"&gt;
  &lt;/a&gt;
  Top risers over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/GorvGoyl/clone-wars"&gt;Clone Wars&lt;/a&gt;  +3,980 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/LeCoupa/awesome-cheatsheets"&gt;Awesome Cheatsheets&lt;/a&gt;   +971 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt;  +745 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/discordjs/discord.js/"&gt;Discord.js&lt;/a&gt;  +674 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt;  +626 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days" class="anchor"&gt;
  &lt;/a&gt;
  Top risers over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/vitejs/vite"&gt;Vite&lt;/a&gt;  +4070 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/GorvGoyl/clone-wars"&gt;Clone Wars&lt;/a&gt;  +3,980 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ant-design/ant-design"&gt;Ant Design&lt;/a&gt; +3810 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt;  +2864 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/evanw/esbuild"&gt;esbuild&lt;/a&gt; +2852 stars&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/iain_freestone"&gt;follow me&lt;/a&gt; on Twitter where I regularly post bite size tips relating to HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>webdev</category>
      <category>news</category>
    </item>
    <item>
      <title>Which programming language would you start with and why?</title>
      <author>Bobby Iliev</author>
      <pubDate>Fri, 19 Mar 2021 14:17:54 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/which-programming-language-would-you-start-with-and-why-1l7i</link>
      <guid>https://dev.to/bobbyiliev/which-programming-language-would-you-start-with-and-why-1l7i</guid>
      <description>&lt;p&gt;Hi all 👋&lt;/p&gt;

&lt;p&gt;If you were just getting started with coding now, which programming language would you pick?&lt;/p&gt;

&lt;p&gt;Here is a list of the most popular programming languages according to GitHub for Q4 in 2020:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zoexX-NV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n9a8wxfhgfkgl2zytr4p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zoexX-NV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n9a8wxfhgfkgl2zytr4p.png" alt="Most popular programming languages 2020"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I started a Twitter poll, so feel free to vote &lt;a href="https://twitter.com/bobbyiliev_/status/1372912544969601027"&gt;here&lt;/a&gt; as well!&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>codenewbie</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>Scalability For Beginners</title>
      <author>Igor Irianto</author>
      <pubDate>Fri, 19 Mar 2021 14:17:34 +0000</pubDate>
      <link>https://dev.to/iggredible/scalability-for-beginners-ld9</link>
      <guid>https://dev.to/iggredible/scalability-for-beginners-ld9</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-scalability" class="anchor"&gt;
  &lt;/a&gt;
  What Is Scalability?
&lt;/h1&gt;

&lt;p&gt;Many of us have heard of scalability. But what does scalability really mean?&lt;/p&gt;

&lt;p&gt;To define scalability, imagine that you created an e-learning site. It has a moderate traffic, about 1000 people throughout the day are visiting your site. One day, a very famous influencer shared your site and suddenly you have an influx of 100,000 people visiting your site within an hour. If your site is not poised to scale, it will crash.&lt;/p&gt;

&lt;p&gt;Having a scalable sit is being able to handle more or less requests without sacrificing user experience.&lt;/p&gt;

&lt;p&gt;Notice that I said "more or less". Scalability goes two ways: up and down. When thinking scalability, most people (including me) initially thought of scalability as scaling up. But when traffic is low, why not scale down? By using less resources, you are saving your business money! After all, business is all about making and saving money.&lt;/p&gt;

&lt;p&gt;In general, scalability can be defined as being able to swiftly and reliably change the capacity to meet the client demands while keeping it cost effective.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-we-scaling" class="anchor"&gt;
  &lt;/a&gt;
  What Are We Scaling?
&lt;/h2&gt;

&lt;p&gt;There are three components you can scale:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Concurrency: Instead of having about 50 people visiting your site within an hour, now you have 5000 people visiting your site within an hour. Can your server handle all these open connections?&lt;/li&gt;
&lt;li&gt;Amount of data: As your website grow, your product offerings, contents, and analytics will grow. Will you have enough storage capacity? Can you still fetch, sort, and transfer more data at the same speed?&lt;/li&gt;
&lt;li&gt;Latency: If you are adding a new chat feature, can your website handle the increased interactivity? If before you were getting a request once every 20 seconds, can you now handle 20 requests per second?&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#how-to-scale" class="anchor"&gt;
  &lt;/a&gt;
  How To Scale?
&lt;/h2&gt;

&lt;p&gt;There are two primary ways to scale: vertically and horizontally. &lt;/p&gt;

&lt;p&gt;To scale vertically is to upgrade your machine (increasing storage / RAM, upgrading the processor, etc). To scale horizontally is to use multiple machines to distribute the loads.&lt;/p&gt;

&lt;p&gt;Technically, there is also a third method to help you scale: using CDNs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vertical-scaling" class="anchor"&gt;
  &lt;/a&gt;
  Vertical Scaling
&lt;/h3&gt;

&lt;p&gt;Vertical scaling is done by upgrading your machine. If you need more RAM, add more RAM to you machine. If you need more storage, get more hard drives. If you need more network I/O, upgrade your network interfaces.&lt;/p&gt;

&lt;p&gt;However, keep in mind that in the market, machine performance doesn't increase linearly with price. A 500GB SSD drive costs more than twice twice as much as 250 GB SSD drive. A 100GB SSD drive costs a lot more than twice the price of 500GB SSD drive. &lt;/p&gt;

&lt;p&gt;At some point, it's more economical to scale horizontally.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#horizontal-scaling" class="anchor"&gt;
  &lt;/a&gt;
  Horizontal Scaling
&lt;/h3&gt;

&lt;p&gt;Horizontal scaling is all about quantity over quality. If your one and only server is swamped, you would just buy more servers of the same or lesser performance!&lt;/p&gt;

&lt;p&gt;Recall that the downside of vertical scaling is that price increases exponentially with performance. This limitation doesn't apply to horizontal scaling. Purchasing an extra server means you are only doubling your cost, that's it.&lt;/p&gt;

&lt;p&gt;If you are doing horizontal scaling, you would use a load balancer (or some sort of reverse proxy server) in front of your servers to serve the incoming traffic. To add or remove servers, just add or remove those servers from the load balancer pool.&lt;/p&gt;

&lt;p&gt;Horizontal scaling is more cost-effective than vertical scaling.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cdn" class="anchor"&gt;
  &lt;/a&gt;
  CDN
&lt;/h3&gt;

&lt;p&gt;CDN (Content Delivery Network) is another useful scalability tool. If your website is hosted from a server in Dallas, TX (United States) and your client is in Singapore, it will take a while for a request to travel across the seas. But let's say that you store your website data in a server in Tokyo, Japan, that's a lot less distance to travel!&lt;/p&gt;

&lt;p&gt;Your CDN provider usually has servers spread-out throughout different regions across the world.  In the scalability context, you can leverage CDN to cache static files. If this client from Singapore visits your site, CDN serves the content from the closest available server instead of our own home server in Dallas. The fewer the request your own Dallas server has to serve means more computing resources you can allocate to process other tasks!&lt;/p&gt;

</description>
      <category>scalability</category>
      <category>beginners</category>
      <category>101</category>
    </item>
    <item>
      <title>Add ... when text is too long</title>
      <author>Dima Prohorenko</author>
      <pubDate>Fri, 19 Mar 2021 13:59:34 +0000</pubDate>
      <link>https://dev.to/sasscrafter/add-when-text-is-too-long-4fnb</link>
      <guid>https://dev.to/sasscrafter/add-when-text-is-too-long-4fnb</guid>
      <description>&lt;p&gt;Hi, in this post I'm gonna show you how to add ... instead of wrapping text on multiple lines.&lt;/p&gt;

&lt;p&gt;Here's what we're gonna be building.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kjNs_KIR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ui25i7ozrj342ddiz16l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kjNs_KIR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ui25i7ozrj342ddiz16l.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's start by adding html&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__image"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://lekorna.com/images/products/yummy-cup2.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__description"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor, sit amet consectetur adipisicing elit. Voluptatum facilis voluptatem impedit nemo consequatur voluptates ipsum a voluptas quo deserunt?&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__price"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;35.99$&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Buy&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__image"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://lekorna.com/images/products/yummy-cup2.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__description truncate"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor, sit amet consectetur adipisicing elit. Voluptatum facilis voluptatem impedit nemo consequatur voluptates ipsum a voluptas quo deserunt?&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__price"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;35.99$&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Buy&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and css&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c"&gt;/* Center the container */&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;800px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c"&gt;/* Flex items will wrap on to new line if the can't fit */&lt;/span&gt;
    &lt;span class="nl"&gt;flex-wrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;space-between&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex-start&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.card&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;45%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;350px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;aling-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex-start&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card__image&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card__content&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.card__description&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card__price&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;18px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;teal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.btn&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;cadetblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;opacity&lt;/span&gt; &lt;span class="m"&gt;400ms&lt;/span&gt; &lt;span class="n"&gt;linear&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.btn&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the interesting part:&lt;br&gt;&lt;br&gt;
Add truncate class to the second card__description&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__image"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://lekorna.com/images/products/yummy-cup2.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="c"&gt;&amp;lt;!-- Right here --&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__description truncate"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor, sit amet consectetur adipisicing elit. Voluptatum facilis voluptatem impedit nemo consequatur voluptates ipsum a voluptas quo deserunt?&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__price"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;35.99$&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Buy&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and css&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.truncate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/* Avoids text being rendered outside the container */&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c"&gt;/* Avoid text going to multiple lines */&lt;/span&gt;
    &lt;span class="nl"&gt;white-space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;nowrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c"&gt;/* Sets the ... once the text overflows */&lt;/span&gt;
    &lt;span class="nl"&gt;text-overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ellipsis&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and that's it. You can find working pen &lt;a href="https://codepen.io/SassCrafter/pen/bGBPzvX?editors=0100"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Firefox can help you learn CSS better.</title>
      <author>Sameer Katija</author>
      <pubDate>Fri, 19 Mar 2021 13:57:42 +0000</pubDate>
      <link>https://dev.to/sameerkatija/firefox-can-help-you-learn-css-better-199i</link>
      <guid>https://dev.to/sameerkatija/firefox-can-help-you-learn-css-better-199i</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Original post: &lt;a href="https://link.medium.com/JP9C24BQKeb"&gt;Firefox can help you learn CSS better.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yeah, you have read it right. &lt;strong&gt;&lt;em&gt;Stop using chrome or any other browser&lt;/em&gt;&lt;/strong&gt;. Most of you might get offended, but I know what I am talking about. Chrome is the best choice when it comes to javascript and other stuff. Even I am writing this article using chrome. So, why should you stop using chrome? Well, I usually suffer a lot when CSS doesn’t work the way I want it to work. It’s totally my fault, but how can I get help? or how can I know the CSS I am applying is invalid here? Sometimes, these small CSS tweaks can make you suffer a lot.&lt;/p&gt;

&lt;p&gt;After a lot of searches, I found a valuable resource to help me understand these CSS tweaks. I found the &lt;strong&gt;Firefox browser&lt;/strong&gt;. I will explain to you, why you should reconsider your browser and start using Firefox while learning CSS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#if-something-doesnt-work-it-will-tell-you-why" class="anchor"&gt;
  &lt;/a&gt;
  If something doesn’t work, it will tell you why.
&lt;/h2&gt;

&lt;p&gt;While learning CSS, you might experiment with CSS. Sometimes, something didn’t work and you have no idea that why it didn’t work. Here come’s Firefox, to let you help in this situation. Let me tell you how.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C_0IcGHT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/875/1%2A7WGPzr72VEjve1v9eNohig.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C_0IcGHT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/875/1%2A7WGPzr72VEjve1v9eNohig.png" alt="ScreenShot of the Chrome Developer tool."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Above is the Developer tool of chrome and you can see that I have applied vertical-align property to the button and it didn’t work. As you might know that why it didn’t work. What about beginners, who are just learning now? For them, it might be arduous. Now let’s see Screen Shot of the Firefox developer tool.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---3MkvZYi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/875/1%2Ags4-_vFqPfofOXqGaVpwVQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---3MkvZYi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/875/1%2Ags4-_vFqPfofOXqGaVpwVQ.png" alt="ScreenShot of Firefox Developer tool."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see that it’s telling me what was the mistake, I was using display flex for the button, changing it to display inline will work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-fonts-the-website-is-using" class="anchor"&gt;
  &lt;/a&gt;
  What are the fonts, the website is using?
&lt;/h2&gt;

&lt;p&gt;As a beginner web developer, you might be wondering about different fonts of different websites. When I started, I was so curious to know about the different kinds of fonts, some famous websites were using. Unfortunately all in vain, until I found Firefox. In the firefox developers tools, you can actually for fonts. Here’s how.&lt;/p&gt;

&lt;p&gt;Go to the Website, then open the Firefox developer tool. Navigate to Fonts and then select All fonts on Page. There you will be able to see the list of fonts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C3xfy4Lx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/875/1%2A5yYJLRAbLwaPOVqN0eJo0w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C3xfy4Lx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/875/1%2A5yYJLRAbLwaPOVqN0eJo0w.png" alt="Image of https://thoughtsbuilder.com website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to see the font of a specific header or any paragraph, select that paragraph and then see repeat the same process.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flexbox-inspector" class="anchor"&gt;
  &lt;/a&gt;
  FlexBox inspector
&lt;/h2&gt;

&lt;p&gt;CSS flexible box model is commonly known as flexbox model, it is CSS layout model. The flexbox layout allows responsive elements within a flex container to be automatically arranged depending upon screen size.&lt;/p&gt;

&lt;p&gt;If you are working with flexbox and want to inspect the flexbox container then Firefox FlexBox inspector may be your friend in need.&lt;/p&gt;

&lt;p&gt;You just need to open the inspector and there navigate the flex item. Go to the Styles tab and you might see the property of display flex. In front of flex, you may see a small grid icon just click on that and you will see that the flex container got highlighted. It is very useful when you are working with flexbox properties like flex-wrap etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0QGcibec--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/875/1%2AJueSKv8XBjg21LE4LcCEnQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0QGcibec--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/875/1%2AJueSKv8XBjg21LE4LcCEnQ.png" alt="Image showing CSS Flexbox"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-grid-inspector" class="anchor"&gt;
  &lt;/a&gt;
  CSS Grid inspector
&lt;/h2&gt;

&lt;p&gt;How important it is to keep track of rows and columns in CSS Grid and Firefox CSS inspector helps you do that very easily. To open CSS inspector, you just need to follow the process as you did to open flexbox inspector. After opening grid inspector you can see the highlighted rows and columns.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wV9OzeE8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/875/1%2APKtpPWNhKwqQz8_4QtRN3Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wV9OzeE8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/875/1%2APKtpPWNhKwqQz8_4QtRN3Q.png" alt="Website showing CSS grid"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This website used in the image is not affiliated with me. I just opened it to show you as an example.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#accessibility-inspector" class="anchor"&gt;
  &lt;/a&gt;
  Accessibility Inspector
&lt;/h2&gt;

&lt;p&gt;One of the best ways to fix your website Accessibility is to inspect it through the Firefox accessibility inspector. Open the developer tool and navigate the accessibility or you can use the shortcut (shift + F12). Where you can scan for issues and it will also let you know, how you can fix these issues.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--orHHFaJE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/875/1%2A3bbn80jGtmhZ6L3Si9syqw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--orHHFaJE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/875/1%2A3bbn80jGtmhZ6L3Si9syqw.png" alt="Accessibility feature of Firefox"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As you can see, how helpful Firefox can be while learning CSS. There are a lot more to just these, but I guess these features are pretty much used every time. So, I hope you are okay with my opinion now.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you liked my article, give it a like and let me know if you know any other feature of firefox which can help the people. Share it with your friends, because &lt;strong&gt;&lt;em&gt;Sharing is caring&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>webdev</category>
      <category>tutorial</category>
      <category>css</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Awesome 5 javascript Shorthands</title>
      <author>iFTekhar</author>
      <pubDate>Fri, 19 Mar 2021 13:51:57 +0000</pubDate>
      <link>https://dev.to/iftekhs/awesome-5-javascript-shorthands-41h2</link>
      <guid>https://dev.to/iftekhs/awesome-5-javascript-shorthands-41h2</guid>
      <description>&lt;p&gt;In this blog, I have shared 5 awesome shorthand tricks to make a developer's life faster!&lt;/p&gt;

&lt;h2&gt;1) Setting the variables values&lt;/h2&gt;

&lt;p&gt;Normally you would define a variable then say x = value and if you have lots of variables (obviously) then it could take more time.&lt;/p&gt;

&lt;p&gt;So you can simply define variables inside a set of square brackets then put the values on another set of square brackets like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8z1J2K6P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qf5k9sp986fy36ujn9tx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8z1J2K6P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qf5k9sp986fy36ujn9tx.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;2) Using Double Bitwise NOT operator instead of &lt;code&gt; Math.floor() &lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Well you might have surely used &lt;code&gt; Math.floor() &lt;/code&gt; to get rid of the decimal points but there is an easier way of doing the same operation using the Double Bitwise  NOT operator it performs the same operation much faster.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3jhvrAIX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g5qjbinm75o4h744bwd7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3jhvrAIX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g5qjbinm75o4h744bwd7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;3) For loop short hand &lt;/h2&gt;

&lt;p&gt;Instead of using a for-loop like the way we usually use you can just simply do this. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V4Y-TOfO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r6im5vrt7fykoe43jowc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V4Y-TOfO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r6im5vrt7fykoe43jowc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;4) The logical AND operator &lt;/h2&gt;

&lt;p&gt;Suppose you want to call a function if one condition or statement is true or false. you would say &lt;code&gt;if(something)&lt;/code&gt; then call function but instead of doing that there is a really better way of doing it which is to say &lt;code&gt;something &amp;amp;&amp;amp; callFunction()&lt;/code&gt; which means if the something is true then that function is going to be called.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_uxZqpA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ck9ugtf4abyw5d38aqf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_uxZqpA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ck9ugtf4abyw5d38aqf.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;5) Turning array into object&lt;/h2&gt;

&lt;p&gt;You might do a lot of things in order to just turn an array into an object. but the simplest way I think is to use the so-called spread operator or the  ... operator &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3dIG4WYJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/acp436njck82dr30gsuu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3dIG4WYJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/acp436njck82dr30gsuu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That was it! Thank you for reading my blog hope this makes your developing life fast and let me know if you like this little blog of mine. Thank you so much for reading this!🙂&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>tutorial</category>
      <category>codequality</category>
    </item>
    <item>
      <title>Quick review on git commands</title>
      <author>Clarance Liberi 💯</author>
      <pubDate>Fri, 19 Mar 2021 13:13:29 +0000</pubDate>
      <link>https://dev.to/claranceliberi/quick-review-on-git-commands-1eg6</link>
      <guid>https://dev.to/claranceliberi/quick-review-on-git-commands-1eg6</guid>
      <description>&lt;p&gt;In this blog we are going to review some basic git commands, we are going to work through all essential git commands that you need to start working with git efficiently and productive&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-git" class="anchor"&gt;
  &lt;/a&gt;
  Setting up git
&lt;/h3&gt;

&lt;p&gt;After downloading and installing  &lt;code&gt;git bash&lt;/code&gt; you will need to set up this information so that git can start working properly but this will only be set once , unless you re-install new git&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# - check git version&lt;/span&gt;
git &lt;span class="nt"&gt;--version&lt;/span&gt;

&lt;span class="c"&gt;# - configure you Name and your email to identify yourself with Git&lt;/span&gt;
git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.name &lt;span class="s2"&gt;"Your Name"&lt;/span&gt;
git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.email &lt;span class="s2"&gt;"your@email.com"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#initializingcreating-repository" class="anchor"&gt;
  &lt;/a&gt;
  Initializing/creating repository
&lt;/h3&gt;

&lt;p&gt;in case you are creating new repository to track your file changes&lt;br&gt;
you will need to use this command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# - initializing git repository&lt;/span&gt;
git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#status-of-the-repository" class="anchor"&gt;
  &lt;/a&gt;
  Status [ of the repository]
&lt;/h3&gt;

&lt;p&gt;when you want to see the status of the files in the repository, again in the current branch you will use this command which will show untracked files etc&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# - show status of the repository&lt;/span&gt;
&lt;span class="c"&gt;# - shows files which have been changed,&lt;/span&gt;
&lt;span class="c"&gt;#   tracked, staged etc&lt;/span&gt;
git status
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#stagging-files" class="anchor"&gt;
  &lt;/a&gt;
  Stagging files
&lt;/h3&gt;

&lt;p&gt;all about adding files to git repository, notice that you can use &lt;code&gt;remove&lt;/code&gt; instead of &lt;code&gt;add&lt;/code&gt; if you want to unstage files or remove files&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# - staging :   adding files to stage area&lt;/span&gt;
&lt;span class="c"&gt;# - staging area :  files that are going to be included &lt;/span&gt;
&lt;span class="c"&gt;#               in next commit&lt;/span&gt;


&lt;span class="c"&gt;# - staging one file&lt;/span&gt;
git add file.js

&lt;span class="c"&gt;# - staging multiple files&lt;/span&gt;
git add file.js file2.js file3.js

&lt;span class="c"&gt;# - staging all files&lt;/span&gt;
git add &lt;span class="nb"&gt;.&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#committing-file-or-stagging-files" class="anchor"&gt;
  &lt;/a&gt;
  Committing file [or stagging files]
&lt;/h3&gt;

&lt;p&gt;saving changes you made in the repository.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# - commit : a term used for saving changes&lt;/span&gt;
&lt;span class="c"&gt;#           to a repository&lt;/span&gt;

&lt;span class="c"&gt;# - committing changes made from stagged files&lt;/span&gt;
&lt;span class="c"&gt;# - '-m' means message , a message should be descriptive&lt;/span&gt;
&lt;span class="c"&gt;# - showing what changes really made in the repository&lt;/span&gt;
git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"Commit message"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#history-of-the-repository" class="anchor"&gt;
  &lt;/a&gt;
  History [of the repository]
&lt;/h3&gt;

&lt;p&gt;list of necessary commands that you need to work through your git repository history.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# - view your commit history&lt;/span&gt;
git log

&lt;span class="c"&gt;# - revert / go back to certain commit&lt;/span&gt;
&lt;span class="c"&gt;# - '07e239f2f' is a sample commit id that we are&lt;/span&gt;
&lt;span class="c"&gt;#   trying to go back on &lt;/span&gt;
git checkout 07e239f2f

&lt;span class="c"&gt;# - going back to the latest commit on &lt;/span&gt;
&lt;span class="c"&gt;#   the 'master' branch&lt;/span&gt;
git checkout master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#branches" class="anchor"&gt;
  &lt;/a&gt;
  Branches
&lt;/h3&gt;

&lt;p&gt;list of commands that you will work with to interact with branches  in the repository&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# - Creating new branch&lt;/span&gt;
&lt;span class="c"&gt;# - 'new-branch-name' is the name of the new branch&lt;/span&gt;
git branch new-branch-name

&lt;span class="c"&gt;# - switching to branch in the repository&lt;/span&gt;
&lt;span class="c"&gt;# - if branch 'branch-name' does not exists &lt;/span&gt;
&lt;span class="c"&gt;#   on the repository git will create it&lt;/span&gt;
git switch  branch-name

&lt;span class="c"&gt;# - switch to any branch in the repository&lt;/span&gt;
&lt;span class="c"&gt;# - 'master' is the branch we want to switch on&lt;/span&gt;
git checkout master


&lt;span class="c"&gt;# - list all branch in the repository&lt;/span&gt;
git branch

&lt;span class="c"&gt;#merge active branch  to branch 'branch-name'&lt;/span&gt;
git merge branch-name

&lt;span class="c"&gt;# - delete branch&lt;/span&gt;
&lt;span class="c"&gt;# - 'branch-name' is the branch we are deleting&lt;/span&gt;
git branch &lt;span class="nt"&gt;-d&lt;/span&gt; branch-name

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Conclusion &lt;br&gt;
All of these commands are super easy to work with as they are easily explained , with them you can start using &lt;code&gt;github&lt;/code&gt; or any other tool so that you can now control versions of your system , and I am pretty sure that it is a good note for those who already know &lt;code&gt;git&lt;/code&gt;, Thank you &lt;/p&gt;

</description>
      <category>github</category>
      <category>webdev</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
