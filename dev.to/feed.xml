<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>JTL to CSV using Github Actions</title>
      <author>Boga Sebastian Nicolae</author>
      <pubDate>Sun, 05 Dec 2021 16:49:51 +0000</pubDate>
      <link>https://dev.to/sebiboga/jtl-to-csv-using-github-actions-5c6n</link>
      <guid>https://dev.to/sebiboga/jtl-to-csv-using-github-actions-5c6n</guid>
      <description>&lt;p&gt;Sometimes we just need the data from Aggregate Report to get the data for Benchmarking Testing. We run the JMeter script and then JTL file is generated. &lt;br&gt;
We can use &lt;strong&gt;JMeterPluginsCMD&lt;/strong&gt; to get the data from JTL to CSV.&lt;/p&gt;

&lt;p&gt;I wrote a workflow for Github Actions that run all jmx files from repo, then create JTL file, then create CSV file from this JTL file.  JTL and CSV files are saved as artifacts in Workflow run.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;
&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Maintainer Must-Haves,&lt;br&gt;
DIY Deployments&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#yaml-file-or-link-to-code"&gt;
  &lt;/a&gt;
  Yaml File or Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/sebiboga"&gt;
        sebiboga
      &lt;/a&gt; / &lt;a href="https://github.com/sebiboga/jmeter_one"&gt;
        jmeter_one
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      JMeter scripts
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
jmeter_one&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;different JMeter scripts&lt;/li&gt;
&lt;li&gt;GitHUB Actions used to define the workflow to run all jmeter scripts from repository [main branch]&lt;/li&gt;
&lt;li&gt;GitHUB Actions used to define the workflow to run all jmeter scripts from repository and save Test Report as artifact [main branch]&lt;/li&gt;
&lt;li&gt;GitHUB Actions used to define the workflow to run all jmeter scripts from repository, generate JTL file and then generates CSV file from JTL file, and then save JTL&amp;amp;CSV as artifact [main branch]&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/sebiboga/jmeter_one"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;&lt;br&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# This is a workflow to help you run all JMeter scripts with Actions, and save JTL and CSV files as artifacts
name: jmeter_JTL_to_CSV_test_results
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: where are the files?
        run: |
           pwd
           ls
      - name: create test_report
        run: |
           mkdir $GITHUB_WORKSPACE/test_report
       # Runs a set of commands using the runners shell
      - name: install jmeter
        run: |
          java -version
          wget https://downloads.apache.org//jmeter/binaries/apache-jmeter-5.4.1.zip
          unzip apache-jmeter-5.4.1.zip
          cd apache-jmeter-5.4.1/bin
          ./jmeter -v
          pwd
      - name: install plugins
        run: |
          cd $GITHUB_WORKSPACE/apache-jmeter-5.4.1
          wget -q --no-check-certificate https://jmeter-plugins.org/files/packages/jpgc-dummy-0.4.zip  -P .
          wget -q --no-check-certificate https://jmeter-plugins.org/files/packages/jpgc-cmd-2.0.zip  -P .
          wget -q --no-check-certificate https://jmeter-plugins.org/files/packages/jpgc-synthesis-2.1.zip  -P .
          wget -q --no-check-certificate https://jmeter-plugins.org/files/packages/jpgc-filterresults-2.2.zip  -P .

          unzip -o jpgc-dummy-0.4.zip  &amp;amp;&amp;amp; rm jpgc-dummy-0.4.zip
          unzip -o jpgc-cmd-2.0.zip  &amp;amp;&amp;amp; rm jpgc-cmd-2.0.zip
          unzip -o jpgc-synthesis-2.1.zip  &amp;amp;&amp;amp; rm jpgc-synthesis-2.1.zip
          unzip -o jpgc-filterresults-2.2.zip  &amp;amp;&amp;amp; rm jpgc-filterresults-2.2.zip
      - name: run jmx scripts
        run: |
         cd $GITHUB_WORKSPACE
         for i in $( ls -A1 *.jmx); do
            cd $GITHUB_WORKSPACE/apache-jmeter-5.4.1/bin
            mkdir $GITHUB_WORKSPACE/test_report/${i%.jmx}
            ./jmeter -n -t $GITHUB_WORKSPACE/$i  -l $GITHUB_WORKSPACE/${i%.jmx}.jtl 
            ./JMeterPluginsCMD.sh --generate-csv $GITHUB_WORKSPACE/test_report/${i%.jmx}.csv --input-jtl $GITHUB_WORKSPACE/${i%.jmx}.jtl --plugin-type SynthesisReport
         done
      - name: move jtl files to test_report
        run: |
         mv *.jtl $GITHUB_WORKSPACE/test_report
      - name: Upload JMeter Test Results
        uses: actions/upload-artifact@v2.2.4
        with:
         name: test_results
         path: test_report

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;We have installed : &lt;em&gt;jpgc-synthesis-2.1.zip&lt;/em&gt; , &lt;em&gt;jpgc-filterresults-2.2.zip&lt;/em&gt; , &lt;em&gt;jpgc-cmd-2.0.zip&lt;/em&gt; and &lt;em&gt;jpgc-dummy-0.4.zip&lt;/em&gt; plugins for JMeter to be able to generate the CSV file.&lt;/p&gt;

</description>
      <category>actionshackathon21</category>
      <category>jmeter</category>
      <category>jtl</category>
      <category>csv</category>
    </item>
    <item>
      <title>Best Google Fonts for your website</title>
      <author>CodeWhiteWeb</author>
      <pubDate>Sun, 05 Dec 2021 15:57:56 +0000</pubDate>
      <link>https://dev.to/codewhiteweb/best-google-fonts-for-your-website-3e5k</link>
      <guid>https://dev.to/codewhiteweb/best-google-fonts-for-your-website-3e5k</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Merriweather&lt;br&gt;
Eben Sorkin’s &lt;a href="https://fonts.google.com/specimen/Merriweather?sort=alpha&amp;amp;sidebar.open=true&amp;amp;selection.family=Headland+One&amp;amp;query=merriweather"&gt;Merriweather&lt;/a&gt; is designed for optimal readability on screens. Merriweather’s large x-height boosts the font’s legibility, making it suitable for use in long texts as well as for headlines and titles. Merriweather currently has 8 styles: Light, Regular, Bold, Black, Light Italic, Italic, Bold Italic, Black Italic.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hoLu7FfR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kzj3579agiit176m9m0y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hoLu7FfR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kzj3579agiit176m9m0y.png" alt="Image description" width="804" height="476"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Assistant&lt;br&gt;
This is another very versatile Google font. &lt;a href="https://fonts.google.com/specimen/Assistant?sort=alpha"&gt;Assistant&lt;/a&gt; is a clean typeface and offers a generous 6 styles, from extra light to bold. The carefully-planned spacing between the letters create a font with great readability. This, combined with the abundant bold styles makes Assistant especially good for larger bodies.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gx_ayfuc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7a85ghil89ie1xlhzd4u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gx_ayfuc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7a85ghil89ie1xlhzd4u.png" alt="Image description" width="750" height="605"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Poppins&lt;br&gt;
&lt;a href="https://fonts.google.com/specimen/Poppins/"&gt;Poppins&lt;/a&gt;, created by the Indian Type Foundry, is an attractive, geometric sans-serif font for use in text or display contexts. It’s also the first font on our list to support the Devanagari system, which is used in over 150 languages including Hindi and Sanskrit.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mrPuB8uI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1y0k878l206fuv4x1g17.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mrPuB8uI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1y0k878l206fuv4x1g17.png" alt="Image description" width="804" height="649"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Caladea&lt;br&gt;
&lt;a href="https://fonts.google.com/specimen/Caladea?sort=alpha"&gt;Caladea&lt;/a&gt; is a modern and friendly Google font. Created from &lt;a href="https://fonts.google.com/specimen/Cambo"&gt;Cambo&lt;/a&gt;, Caladea offers 4 different styles to choose from. The font is practical not just in the sense that it has styles to highlight content, but also due to its reliable readability. Caladea works both for big and dramatic titles and small texts that don’t overwhelm readers.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4KilYZbw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yfml8afvfwtdgjydnj16.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4KilYZbw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yfml8afvfwtdgjydnj16.png" alt="Image description" width="750" height="585"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Enriqueta&lt;br&gt;
&lt;a href="https://fonts.google.com/specimen/Enriqueta?sort=alpha"&gt;Enriqueta&lt;/a&gt; is a Google font that also brings a certain glamour to any page, but it’s special in its own way. This font has bold features that reminded our team of old-times, adding a Rockwell sort of vibe to the page. The best part? Enriqueta is very well-balanced, and even though it has strong visuals, it still delivers great readability – even in very small bodies!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--do7wvLCG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/af9arp4rtj77mvn12bfl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--do7wvLCG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/af9arp4rtj77mvn12bfl.png" alt="Image description" width="750" height="585"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;thanks for reading... &lt;/p&gt;

</description>
      <category>design</category>
      <category>font</category>
      <category>css</category>
      <category>googlefont</category>
    </item>
    <item>
      <title>Please help me 🙏😊</title>
      <author>CoderZ90</author>
      <pubDate>Sun, 05 Dec 2021 15:53:34 +0000</pubDate>
      <link>https://dev.to/official_fire/please-help-me-455o</link>
      <guid>https://dev.to/official_fire/please-help-me-455o</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Hello guys, yes from title you already know what i wanted to say. Guys please help me grow in youtube i want to help people share my knowledge and i also want to be big youtuber + a great coder in my life&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Subscribe please 🙏🙏&lt;/strong&gt; - &lt;a href="https://www.youtube.com/c/CodingFire?sub_confirmation=1"&gt;CodingFire&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;About me&lt;/strong&gt; - I am a 14 years old coder.&lt;/p&gt;

&lt;p&gt;I want to share 🎇 my knowledge with you and wanted to help you with my tutorials i made. Want to make things easier for you .&lt;/p&gt;

&lt;p&gt;This small things can help you with your big projects Thanks for giving your time 😊&lt;/p&gt;

&lt;p&gt;Previous Blogs ( Might Help You ) -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/official_fire/best-website-every-developers-should-know-42e2"&gt;Best Website Every Developers should know&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/official_fire/pro-vscode-themes-for-pro-developers-d5h"&gt;Pro VSCODE Themes For Pro Developers&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/official_fire/creating-a-confetti-effect-in-5-minutes-16h3"&gt;Add Confetti Effect in 5 minutes&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/official_fire/top-5-best-online-code-editors-1ei2"&gt;Top 5 Best Online Code Editors&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Anyways, Happy Coding And Yes Be Safe! 😊&lt;/p&gt;

</description>
      <category>promotingmychannel</category>
    </item>
    <item>
      <title>Add tailwind (JIT) to a react app without ejecting or using craco</title>
      <author>kiranojhanp</author>
      <pubDate>Sun, 05 Dec 2021 15:49:23 +0000</pubDate>
      <link>https://dev.to/kiranojhanp/add-tailwind-jit-to-a-react-app-without-ejecting-or-using-craco-23ln</link>
      <guid>https://dev.to/kiranojhanp/add-tailwind-jit-to-a-react-app-without-ejecting-or-using-craco-23ln</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D7yAbJGM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/plmk4kemu6v2age7x4h2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D7yAbJGM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/plmk4kemu6v2age7x4h2.png" alt="React and tailwind without ejecting" width="880" height="461"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello guys,&lt;br&gt;
Official tailwindcss docs uses a package called &lt;code&gt;craco&lt;/code&gt; during installation of tailwindcss in react app. &lt;/p&gt;

&lt;p&gt;I don't particulary like it because same can easily be achieved with just postcss. Here are the steps.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-1-create-a-react-and-add-dependencies"&gt;
  &lt;/a&gt;
  Step 1 - Create a react and add dependencies
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# install react and navigate inside&lt;/span&gt;
npx create-react-app my-app
&lt;span class="nb"&gt;cd &lt;/span&gt;my-app

&lt;span class="c"&gt;# install packages&lt;/span&gt;
yarn add autoprefixer postcss postcss-cli postcss-import tailwindcss

&lt;span class="c"&gt;# replace yarn add with npm install if using npm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#step-2-add-configs"&gt;
  &lt;/a&gt;
  Step 2 - Add configs
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create two files &lt;code&gt;tailwind.config.js&lt;/code&gt; and &lt;code&gt;postcss.config.js&lt;/code&gt; in root
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;├── src/
├── tailwind.config.js
├── postcss.config.js
└── package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Paste this in &lt;code&gt;tailwind.config.js&lt;/code&gt;:
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;module.exports = {
    mode: "jit",
    purge: ["./public/**/*.html", "./src/**/*.{js,jsx,ts,tsx}"],
    theme: {},
};

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Paste this in &lt;code&gt;postcss.config.js&lt;/code&gt;:
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;module.exports = {
  plugins: [
    require("postcss-import"),
    require("tailwindcss"),
    require("autoprefixer"),
  ],
};

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#step-3-create-styles"&gt;
  &lt;/a&gt;
  Step 3 - Create styles
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create a folder &lt;code&gt;styles&lt;/code&gt; inside &lt;code&gt;src&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Create &lt;code&gt;tailwind.pcss&lt;/code&gt; and &lt;code&gt;output.css&lt;/code&gt; inside it
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;src/
├── styles/
         ├── output.css
         └── tailwind.pcss
├── App.js
└── index.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Add following code inside &lt;code&gt;tailwind.pcss&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@import "tailwindcss/base.css";
@import "tailwindcss/components.css";
@import "tailwindcss/utilities.css";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#step-4-modify-raw-packagejson-endraw-"&gt;
  &lt;/a&gt;
  Step 4 - Modify &lt;code&gt;package.json&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Replace &lt;code&gt;scripts&lt;/code&gt; with&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"scripts": {
    "start": "react-scripts start",
    "build": "yarn build:css &amp;amp;&amp;amp; react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "watch:css": "TAILWIND_MODE=watch postcss src/styles/tailwind.pcss -o src/styles/output.css --watch",
    "build:css": "postcss src/styles/tailwind.pcss -o src/styles/output.css --minify"
},
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note: Just replace &lt;code&gt;yarn&lt;/code&gt; with &lt;code&gt;npm run&lt;/code&gt; if you are a npm user&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-5-running"&gt;
  &lt;/a&gt;
  Step 5 - Running
&lt;/h2&gt;

&lt;p&gt;Replace &lt;code&gt;App.js&lt;/code&gt; with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function App() {
 return (
   &amp;lt;div class="bg-green-100 border-green-600 border-b p-6 m-4 rounded text-2xl text-center"&amp;gt;
     Hello World
   &amp;lt;/div&amp;gt;
 );
}

export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#now-open-two-terminals-and-run-these-commands-separately"&gt;
  &lt;/a&gt;
  Now open two terminals and run these commands separately
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn watch:css
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output should be:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X-7bXcBo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8501jd4v72q54qaz774j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X-7bXcBo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8501jd4v72q54qaz774j.png" alt="Tailwindcss output image" width="880" height="136"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#congrats-you-have-successfully-installed-and-used-tailwindcss"&gt;
  &lt;/a&gt;
  Congrats! You have successfully installed and used tailwindcss 🚀🚀
&lt;/h2&gt;

</description>
      <category>react</category>
      <category>tailwindcss</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>8 Easy Ways To Improve The Security Of The Website</title>
      <author>artattackk</author>
      <pubDate>Sun, 05 Dec 2021 15:41:07 +0000</pubDate>
      <link>https://dev.to/artattackk/8-easy-ways-to-improve-the-security-of-the-website-176n</link>
      <guid>https://dev.to/artattackk/8-easy-ways-to-improve-the-security-of-the-website-176n</guid>
      <description>&lt;p&gt;How your website looks is an important aspect, then safeguarding the website is crucial too. So the &lt;a href="https://www.artattackk.com/"&gt;website designing company in Delhi&lt;/a&gt; recommends improving the security of the website. You can do so by following this blog. &lt;/p&gt;

&lt;p&gt;Today, we will share a few ways to improve the security of the website. Since the website has important data about your employees, company, customers, etc. Keeping them safely is a prime responsibility. Hence, know how you can improve the security of the website. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Updating Software:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Keep the software, platforms, or tools you installed to be up-to-date. Hackers target the web software they can easily enter through security flaws. Hence you need to keep these elements updated for improving the security patch. So look forward to the daily updates, if there are any. Update it timely. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Using Secured Web Host:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Whom you choose as a web hosting company is important! So we recommend choosing a reputed and secure web hosting company. Many web design companies provide web hosting services like the web designing company in Delhi. Choosing the best web hosting services is very important for maintaining the security of the website since they are aware of these practices and they help you to keep the website secure. &lt;/p&gt;

&lt;p&gt;**&lt;br&gt;
 Hide Admin Page From Index:&lt;br&gt;
**&lt;/p&gt;

&lt;p&gt;The admin page should not appear on the index page. Since it will be difficult to find by the hackers. For hiding the admin page from search engine appearance you can make use of the robots_txt file, which discourages the search engine from listing. This will keep your website safe to some extent.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create Backup For Data:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Creating data backup is always helpful. In case of website inaccessibility and loss of data. You can access the data through backup. So backup the website data regularly, which will help you to maintain all the data. Many content management programs allow you to use plugins and extensions, which backup the website automatically. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Use SSL:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;SSL (Secure Socket Layer) is a security protocol that creates encryption links between the web server and browser. You can use encrypted SSL for transferring the user’s personal information between the site and database. This will prevent access without proper authority. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Installing Security Application:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Installing security applications is one form to safeguard your website. There are many paid and free applications and tools available, which will make the hacker's life difficult. You can compare and choose the best security tool for your website. Thus, adding it will be beneficial for your website. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remove Auto-Fill In The Form:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Many websites use auto-fill features in their forms, which can be accessed using the user's stolen phone, computer, etc. So we recommend removing it. One must not expose such things on the website, due to the laziness of the legit users. &lt;br&gt;
**&lt;br&gt;
Limit Files Uploads:**&lt;/p&gt;

&lt;p&gt;Limiting the file uploads will help you to maintain the security of the websites. Since you directly upload the files will have the chances of bugs entering them. No matter how thoroughly the system checks, there are chances bugs can get through. And through this hackers can access unlimited data on the website. You can upload the files outside the root directory, where you can access them using scripts when necessary. &lt;/p&gt;

&lt;p&gt;Your web hosting company can help you in setting up it. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Final Words:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These are the few ways you can secure your website from hackers and bugs. We hope this blog from &lt;a href="https://www.artattackk.com/website-design-company-delhi-ncr.html"&gt;best website design company Delhi &lt;/a&gt;has helped you to gain knowledge and be aware of securing your website. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>javascript</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Announcing 12 Days of Web</title>
      <author>Stephanie Eckles</author>
      <pubDate>Sun, 05 Dec 2021 15:39:28 +0000</pubDate>
      <link>https://dev.to/5t3ph/announcing-12-days-of-web-1aho</link>
      <guid>https://dev.to/5t3ph/announcing-12-days-of-web-1aho</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://12daysofweb.dev"&gt;12daysofweb.dev&lt;/a&gt; is a year-end celebration of fundamental web technologies: HTML, CSS, and JavaScript.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Between December 13-24, I'll be releasing a new article. You can subscribe to receive daily email updates so you don't miss one!&lt;/p&gt;

&lt;p&gt;You're sure to learn something new about web technologies, and hopefully even be surprised about what the native web can offer. We'll be covering HTML elements you may not have used, web APIs you may have missed, and modern CSS features that you can start using today.&lt;/p&gt;

&lt;p&gt;Head over to &lt;a href="https://12daysofweb.dev"&gt;12daysofweb.dev&lt;/a&gt; to subscribe, and please share this project!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about-the-author"&gt;
  &lt;/a&gt;
  About the author
&lt;/h2&gt;

&lt;p&gt;Hey! I'm &lt;a href="https://twitter.com/5t3ph"&gt;Stephanie Eckles @5t3ph&lt;/a&gt;, author of &lt;a href="https://moderncss.dev"&gt;ModernCSS.dev&lt;/a&gt;, &lt;a href="https://smolcss.dev"&gt;SmolCSS.dev&lt;/a&gt;, &lt;a href="https://11ty.rocks"&gt;11ty.Rocks&lt;/a&gt;, and more &lt;a href="https://thinkdobecreate.com"&gt;open source resources for front-end developers&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>news</category>
      <category>webdev</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>Easily share your Stackoverflow's profile on your README</title>
      <author>johannchopin</author>
      <pubDate>Sun, 05 Dec 2021 15:27:29 +0000</pubDate>
      <link>https://dev.to/johannchopin/easily-share-your-stackoverflows-profile-on-your-readme-h9i</link>
      <guid>https://dev.to/johannchopin/easily-share-your-stackoverflows-profile-on-your-readme-h9i</guid>
      <description>&lt;p&gt;Did you know that it was possible to easily share your Stackoverflow statistics using small dynamic images called "Flair"? This small image simply allows you to embellish your different READMEs like the one on GitHub or your online CV:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0rKmOknP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://stackoverflow.com/users/flair/8583669.png%3Ftheme%3Ddark" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0rKmOknP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://stackoverflow.com/users/flair/8583669.png%3Ftheme%3Ddark" alt="SO's Flair" width="208" height="58"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;... and that just by adding the following Markdown:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="p"&gt;![&lt;/span&gt;&lt;span class="nv"&gt;SO's Flair&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="sx"&gt;https://stackoverflow.com/users/flair/USER_ID.png?theme=dark&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You can check them out at the URL &lt;a href="https://stackoverflow.com/users/YOUR_USER_ID/YOUR_USER_NAME/flair"&gt;https://stackoverflow.com/users/YOUR_USER_ID/YOUR_USER_NAME/flair&lt;/a&gt; :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s3ilAZ8I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zuj1zar00dovnl4xmi7v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s3ilAZ8I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zuj1zar00dovnl4xmi7v.png" alt="SO's Flairs page" width="840" height="537"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This service proposed by Stackoverflow works very well, however since it hasn't be updated since a few years, there is some negative point that I noticed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the avatar image is weirdly cropped&lt;/li&gt;
&lt;li&gt;the only infos are the username, reputation score and badges amount&lt;/li&gt;
&lt;li&gt;it's a png so there is no fancy animation&lt;/li&gt;
&lt;li&gt;the image is very pixelated because of its small size (208x58)&lt;/li&gt;
&lt;li&gt;and most importantly: you cannot improve it because the project is not open-sourced&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's why I developed my own version of this service that would solve all these problems: &lt;a href="https://github.com/johannchopin/stackoverflow-readme-profile"&gt;stackoverflow-readme-profile&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/johannchopin"&gt;
        johannchopin
      &lt;/a&gt; / &lt;a href="https://github.com/johannchopin/stackoverflow-readme-profile"&gt;
        stackoverflow-readme-profile
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Easily share your Stackoverflow's profile on your README
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
stackoverflow-readme-profile&lt;/h1&gt;
&lt;p&gt;Easily share your Stackoverflow's profile on your README.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/johannchopin/stackoverflow-readme-profile/main/docs/profile/themes/dark.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X3xugWci--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/johannchopin/stackoverflow-readme-profile/main/docs/profile/themes/dark.svg" alt="SO profile"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;a href="https://github.com/johannchopin/stackoverflow-readme-profile/actions"&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DqETimOZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/johannchopin/stackoverflow-readme-profile/actions/workflows/test.yml/badge.svg" alt="test workflow"&gt;
&lt;/a&gt;
&lt;a href="https://codecov.io/gh/johannchopin/stackoverflow-readme-profile" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/4aedf4d939f45f3fadcd2c7d6c266ec7c5151d068ebc428464d60cfd5e4c057b/68747470733a2f2f636f6465636f762e696f2f67682f6a6f68616e6e63686f70696e2f737461636b6f766572666c6f772d726561646d652d70726f66696c652f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="codecov"&gt;
&lt;/a&gt;
&lt;a href="https://semver.org/" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/686ace30cb2dffac4a661dad2b23d1f1f3dc56d724f9bb8705ee847e7d322505/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f56657273696f6e696e672d53656d5665722d626c7565" alt="This projet uses SemVer for versioning"&gt;
&lt;/a&gt;
&lt;a href="https://gitmoji.dev" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/c4607d133d879cc310a7e63ec5f644fc3760e3729ac68d12274ae28dbaedf1d4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6769746d6f6a692d253230f09f989c253230f09f988d2d4646444436372e737667" alt="Gitmoji"&gt;
&lt;/a&gt;

&lt;h2&gt;
⁉️ How to use?&lt;/h2&gt;
&lt;p&gt;You can generate your SO profile by calling this url with the corresponding &lt;a href="https://github.com/johannchopin/stackoverflow-readme-profile#templates"&gt;template name&lt;/a&gt; and you SO user id:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;https://stackoverflow-readme-profile.johannchopin.fr/:template/:id
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use it like that in your README:&lt;/p&gt;
&lt;div class="highlight highlight-source-lisp position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;[![johannchopin's SO profile](https://stackoverflow-readme-profile.johannchopin.fr/:template/:id)](https://github.com/johannchopin/stackoverflow-readme-profile)&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
📄 Templates&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/johannchopin/stackoverflow-readme-profile#profile"&gt;profile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johannchopin/stackoverflow-readme-profile#profile-small"&gt;profile-small&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
profile&lt;/h3&gt;
&lt;p&gt;Render a profile image by using the &lt;code&gt;profile&lt;/code&gt; template:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;https://stackoverflow-readme-profile.johannchopin.fr/profile/:id
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/johannchopin/stackoverflow-readme-profile./docs/profile/themes/dark.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5NFUtw-D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/johannchopin/stackoverflow-readme-profile./docs/profile/themes/dark.svg" alt="profile"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
Params (as query strings)&lt;/h4&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;param&lt;/th&gt;
&lt;th&gt;default&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;theme&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Theme to use. &lt;a href="https://github.com/johannchopin/stackoverflow-readme-profile./docs/profile/README.md"&gt;Check them out here!&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;website&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Show or not the website URL (&lt;code&gt;true&lt;/code&gt; | &lt;code&gt;false&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;location&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Show or not the location (&lt;code&gt;true&lt;/code&gt; | &lt;code&gt;false&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h3&gt;
profile-small&lt;/h3&gt;
&lt;p&gt;Render a smaller profile image without the location and the website&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/johannchopin/stackoverflow-readme-profile./docs/profile-small/themes/dark.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JigRzw9J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/johannchopin/stackoverflow-readme-profile./docs/profile-small/themes/dark.svg" alt="profile"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
Params (as query strings)&lt;/h4&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;param&lt;/th&gt;
&lt;th&gt;default&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;theme&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Theme to use. &lt;a href="https://github.com/johannchopin/stackoverflow-readme-profile./docs/profile-small/README.md"&gt;Check them out here!&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
🐳 Docker&lt;/h2&gt;
&lt;h3&gt;
Build the image&lt;/h3&gt;
&lt;p&gt;You can build the image by using the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;docker build -t johannchopin/stackoverflow-readme-profile &lt;span class="pl-c1"&gt;.&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Push the&lt;/h3&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/johannchopin/stackoverflow-readme-profile"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This project allows you to embed improved version of those flairs wherever you want: &lt;/p&gt;

&lt;p&gt;Default Stackoverflow profile:&lt;br&gt;
&lt;a href="https://github.com/johannchopin/stackoverflow-readme-profile"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6UD4emOF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://stackoverflow-readme-profile.johannchopin.fr/profile/8583669%3Ftheme%3Ddark" alt="johannchopin's SO profile" width="300" height="86"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Smaller profile:&lt;br&gt;
&lt;a href="https://github.com/johannchopin/stackoverflow-readme-profile"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DkR0FhUe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://stackoverflow-readme-profile.johannchopin.fr/profile-small/8583669%3Ftheme%3Dmonokai" alt="johannchopin's SO profile" width="240" height="57"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just use the following markdown schema to get your flair:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[![my SO profile](https://stackoverflow-readme-profile.johannchopin.fr/TEMPLATE_NAME/USER_ID?theme=dark)](https://github.com/johannchopin/stackoverflow-readme-profile)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Not yet convinced to use this project? I can understand why using an "unofficial" service doesn't seem like a good idea but here are some points that might change your mind:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;stackoverflow-readme-profile proposes a higher customisation with &lt;a href="https://github.com/johannchopin/stackoverflow-readme-profile/tree/main/docs/profile"&gt;multiple themes&lt;/a&gt; and &lt;a href="https://github.com/johannchopin/stackoverflow-readme-profile#templates"&gt;templates&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;stackoverflow-readme-profile render a svg so the final image is pixel clear and is animated&lt;/li&gt;
&lt;li&gt;the project is &lt;a href="https://github.com/johannchopin/stackoverflow-readme-profile"&gt;open-sourced&lt;/a&gt;: You want a new feature or improve something? Just &lt;a href="https://github.com/johannchopin/stackoverflow-readme-profile/issues/new"&gt;open an issue&lt;/a&gt; so we can collaborate together&lt;/li&gt;
&lt;li&gt;you want to self host the application? No problem there is already a &lt;a href="https://hub.docker.com/repository/docker/johannchopin/stackoverflow-readme-profile"&gt;docker image&lt;/a&gt; for that.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks again for reading. If you are willing to see this project growing don't hesitate to leave a ⭐ to the repo and push your ideas of improvement.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/johannchopin"&gt;
        johannchopin
      &lt;/a&gt; / &lt;a href="https://github.com/johannchopin/stackoverflow-readme-profile"&gt;
        stackoverflow-readme-profile
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Easily share your Stackoverflow's profile on your README
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
stackoverflow-readme-profile&lt;/h1&gt;
&lt;p&gt;Easily share your Stackoverflow's profile on your README.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/johannchopin/stackoverflow-readme-profile/main/docs/profile/themes/dark.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X3xugWci--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/johannchopin/stackoverflow-readme-profile/main/docs/profile/themes/dark.svg" alt="SO profile"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;a href="https://github.com/johannchopin/stackoverflow-readme-profile/actions"&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DqETimOZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/johannchopin/stackoverflow-readme-profile/actions/workflows/test.yml/badge.svg" alt="test workflow"&gt;
&lt;/a&gt;
&lt;a href="https://codecov.io/gh/johannchopin/stackoverflow-readme-profile" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/4aedf4d939f45f3fadcd2c7d6c266ec7c5151d068ebc428464d60cfd5e4c057b/68747470733a2f2f636f6465636f762e696f2f67682f6a6f68616e6e63686f70696e2f737461636b6f766572666c6f772d726561646d652d70726f66696c652f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="codecov"&gt;
&lt;/a&gt;
&lt;a href="https://semver.org/" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/686ace30cb2dffac4a661dad2b23d1f1f3dc56d724f9bb8705ee847e7d322505/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f56657273696f6e696e672d53656d5665722d626c7565" alt="This projet uses SemVer for versioning"&gt;
&lt;/a&gt;
&lt;a href="https://gitmoji.dev" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/c4607d133d879cc310a7e63ec5f644fc3760e3729ac68d12274ae28dbaedf1d4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6769746d6f6a692d253230f09f989c253230f09f988d2d4646444436372e737667" alt="Gitmoji"&gt;
&lt;/a&gt;

&lt;h2&gt;
⁉️ How to use?&lt;/h2&gt;
&lt;p&gt;You can generate your SO profile by calling this url with the corresponding &lt;a href="https://github.com/johannchopin/stackoverflow-readme-profile#templates"&gt;template name&lt;/a&gt; and you SO user id:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;https://stackoverflow-readme-profile.johannchopin.fr/:template/:id
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use it like that in your README:&lt;/p&gt;
&lt;div class="highlight highlight-source-lisp position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;[![johannchopin's SO profile](https://stackoverflow-readme-profile.johannchopin.fr/:template/:id)](https://github.com/johannchopin/stackoverflow-readme-profile)&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
📄 Templates&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/johannchopin/stackoverflow-readme-profile#profile"&gt;profile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johannchopin/stackoverflow-readme-profile#profile-small"&gt;profile-small&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
profile&lt;/h3&gt;
&lt;p&gt;Render a profile image by using the &lt;code&gt;profile&lt;/code&gt; template:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;https://stackoverflow-readme-profile.johannchopin.fr/profile/:id
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/johannchopin/stackoverflow-readme-profile./docs/profile/themes/dark.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5NFUtw-D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/johannchopin/stackoverflow-readme-profile./docs/profile/themes/dark.svg" alt="profile"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
Params (as query strings)&lt;/h4&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;param&lt;/th&gt;
&lt;th&gt;default&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;theme&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Theme to use. &lt;a href="https://github.com/johannchopin/stackoverflow-readme-profile./docs/profile/README.md"&gt;Check them out here!&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;website&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Show or not the website URL (&lt;code&gt;true&lt;/code&gt; | &lt;code&gt;false&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;location&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Show or not the location (&lt;code&gt;true&lt;/code&gt; | &lt;code&gt;false&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h3&gt;
profile-small&lt;/h3&gt;
&lt;p&gt;Render a smaller profile image without the location and the website&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/johannchopin/stackoverflow-readme-profile./docs/profile-small/themes/dark.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JigRzw9J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/johannchopin/stackoverflow-readme-profile./docs/profile-small/themes/dark.svg" alt="profile"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
Params (as query strings)&lt;/h4&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;param&lt;/th&gt;
&lt;th&gt;default&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;theme&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Theme to use. &lt;a href="https://github.com/johannchopin/stackoverflow-readme-profile./docs/profile-small/README.md"&gt;Check them out here!&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
🐳 Docker&lt;/h2&gt;
&lt;h3&gt;
Build the image&lt;/h3&gt;
&lt;p&gt;You can build the image by using the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;docker build -t johannchopin/stackoverflow-readme-profile &lt;span class="pl-c1"&gt;.&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Push the&lt;/h3&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/johannchopin/stackoverflow-readme-profile"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



</description>
      <category>opensource</category>
      <category>javascript</category>
      <category>stackoverflow</category>
      <category>readme</category>
    </item>
    <item>
      <title>AWS new service AWS Private 5G</title>
      <author>Vijay Patel</author>
      <pubDate>Sun, 05 Dec 2021 15:22:25 +0000</pubDate>
      <link>https://dev.to/easyawslearn/aws-new-service-aws-private-5g-4ip0</link>
      <guid>https://dev.to/easyawslearn/aws-new-service-aws-private-5g-4ip0</guid>
      <description>&lt;h3&gt;
  &lt;a href="#amazon-web-services-aws-announced-the-availability-of-a-private-5g-service-for-enterprises-named-aws-private-5g"&gt;
  &lt;/a&gt;
  Amazon Web Services (AWS) announced the availability of a &lt;a href="https://www.youtube.com/watch?v=33hA3soOH2Q"&gt;private 5G service&lt;/a&gt; for enterprises named &lt;a href="https://www.youtube.com/watch?v=33hA3soOH2Q"&gt;AWS Private 5G&lt;/a&gt;.
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Here is a fully dedicated video based on AWS Private 5G service👇👇&lt;br&gt;
&lt;/code&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=33hA3soOH2Q"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h2ipYqHv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ccr8r4af8k4rxji23zm.png" alt="Image description" width="800" height="400"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about-aws"&gt;
  &lt;/a&gt;
  ABOUT &lt;a href="https://www.youtube.com/watch?v=33hA3soOH2Q"&gt;AWS&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Amazon Web Services (AWS) is the world’s most comprehensive and broadly adopted cloud platform, offering over 200 fully-featured services from data centers globally. Millions of customers — including the fastest-growing startups, largest enterprises, and leading government agencies — are using AWS to lower costs, become more agile, and innovate faster.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-private-network"&gt;
  &lt;/a&gt;
  What is a &lt;a href="https://www.youtube.com/watch?v=33hA3soOH2Q"&gt;Private Network&lt;/a&gt;?
&lt;/h2&gt;

&lt;p&gt;A &lt;a href="https://www.youtube.com/watch?v=33hA3soOH2Q"&gt;Private Mobile Network&lt;/a&gt; features network infrastructure which is used exclusively by devices authorized by the end user organization. Typically, this is deployed in one or more specific locations which are owned or occupied by the end user organization to deliver targeted coverage, capacity and other capabilities. Devices which are registered on public mobile networks will not work on the private network except where specifically authorized.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-private-networks"&gt;
  &lt;/a&gt;
  Benefits of &lt;a href="https://www.youtube.com/watch?v=33hA3soOH2Q"&gt;Private networks&lt;/a&gt;?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Offering enterprises a greater level of control over deployment, security, equipment and device choices&lt;/li&gt;
&lt;li&gt;Enabling highly targeted indoor/outdoor coverage&lt;/li&gt;
&lt;li&gt;High and reserved capacity&lt;/li&gt;
&lt;li&gt;Providing independence from public network&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-benefits-of-aws-private-5g"&gt;
  &lt;/a&gt;
  What are the benefits of &lt;a href="https://www.youtube.com/watch?v=33hA3soOH2Q"&gt;AWS Private 5G&lt;/a&gt;?
&lt;/h2&gt;

&lt;p&gt;This is a new managed service that helps enterprises set up and scale private 5G mobile networks in their facilities in days instead of months. With just a few clicks in the AWS console, customers specify where they want to build a mobile network and the network capacity needed for their devices. AWS then delivers and maintains the small cell radio units, servers, 5G core, and radio access network (RAN) software, and subscriber identity modules (SIM cards) required to set up a private 5G network and connect devices. &lt;a href="https://www.youtube.com/watch?v=33hA3soOH2Q"&gt;AWS Private&lt;/a&gt; 5G automates the setup and deployment of the network and scales capacity on-demand to support additional devices and increase network traffic. There are no upfront fees or per-device costs with &lt;a href="https://www.youtube.com/watch?v=33hA3soOH2Q"&gt;AWS Private 5G&lt;/a&gt;, and customers pay only for the network capacity and throughput they request.&lt;/p&gt;

&lt;p&gt;Many enterprise networks are constrained by increasing growth in users, devices, and application demands. Increased video content, new applications that require ultra-low latency connectivity to end-user devices, and thousands of smart IoT devices demand extended coverage, more capacity, better reliability, and robust security and access control. Customers want to build their own private 5G networks to address these limitations, but private mobile network deployments require customers to invest considerable time, money, and effort to design their network for anticipated peak capacity, and procure and integrate software and hardware components from multiple vendors. Even if customers are able to get the network running, current private mobile network pricing models charge for each connected device and make it cost-prohibitive for use cases that involve thousands of connected devices. &lt;a href="https://www.youtube.com/watch?v=33hA3soOH2Q"&gt;AWS Private&lt;/a&gt; 5G simplifies the procurement and deployment allowing customers to deploy their own 4G/LTE or 5G network within days instead of months, scale up and down the number of connected devices rapidly, and benefit from a familiar on-demand cloud pricing model.&lt;/p&gt;




&lt;p&gt;▬▬▬▬▬▬ WANT TO LEARN MORE? ▬▬▬▬▬▬&lt;br&gt;
Full Terraform tutorial ► &lt;a href="https://bit.ly/2GwK8V2"&gt;https://bit.ly/2GwK8V2&lt;/a&gt;&lt;br&gt;
DevOps Tools, like Ansible ► &lt;a href="https://bit.ly/3iASHuP"&gt;https://bit.ly/3iASHuP&lt;/a&gt;&lt;br&gt;
Docker Tutorial ► &lt;a href="https://bit.ly/3iAT9Jx"&gt;https://bit.ly/3iAT9Jx&lt;/a&gt;&lt;br&gt;
AWS Tutorial ► &lt;a href="https://bit.ly/3iAT9Jx"&gt;https://bit.ly/3iAT9Jx&lt;/a&gt;&lt;br&gt;
GCP Tutorial ► &lt;a href="https://bit.ly/3mwh412"&gt;https://bit.ly/3mwh412&lt;/a&gt;&lt;br&gt;
Jenkins Tutorials ► &lt;a href="https://bit.ly/3iHnfv4"&gt;https://bit.ly/3iHnfv4&lt;/a&gt;&lt;br&gt;
Jenkins Pipeline ► &lt;a href="https://bit.ly/30CJGLB"&gt;https://bit.ly/30CJGLB&lt;/a&gt;&lt;br&gt;
Python ► &lt;a href="https://bit.ly/3I7bewU"&gt;https://bit.ly/3I7bewU&lt;/a&gt;&lt;br&gt;
Python in just 1 video ► [&lt;a href="https://bit.ly/3EeqGVy"&gt;https://bit.ly/3EeqGVy&lt;/a&gt;]&lt;/p&gt;

</description>
      <category>aws</category>
      <category>awsservices</category>
      <category>private5g</category>
      <category>cloudcomputing</category>
    </item>
    <item>
      <title>Responsive Animated Login Form Using HTML CSS &amp; GSAP </title>
      <author>Nikhil Bobade </author>
      <pubDate>Sun, 05 Dec 2021 14:33:54 +0000</pubDate>
      <link>https://dev.to/nikhil27b/responsive-animated-login-form-using-html-css-gsap-14l6</link>
      <guid>https://dev.to/nikhil27b/responsive-animated-login-form-using-html-css-gsap-14l6</guid>
      <description>&lt;p&gt;Hello Guys,&lt;/p&gt;

&lt;p&gt;Today I Created an Animated Responsive Login Form using HTML CSS &amp;amp; GSAP For Animation. I hope you like this also comments about your thoughts. also For more content &lt;strong&gt;follow me on Instagram&lt;/strong&gt;  &lt;a href="https://www.instagram.com/developer_nikhil27/"&gt;@developer_nikhil27&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you 🙂!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/NikhilBobade/embed/xxXwvqO?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Next JS – what’s new ?</title>
      <author>Med O.</author>
      <pubDate>Sun, 05 Dec 2021 14:24:51 +0000</pubDate>
      <link>https://dev.to/hamo-studio/next-js-whats-new--251f</link>
      <guid>https://dev.to/hamo-studio/next-js-whats-new--251f</guid>
      <description>&lt;p&gt;NextJS is an easy-to-use frontend development framework that was developed on top of React. Next. js is based on ReactJS, &amp;amp; has many of the same core features.&lt;/p&gt;

&lt;p&gt;NextJS 12 is the current version, it comes with many new features , such as, performance optimization, React 18 support, middleware, and more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rust-compiler-x5-faster-"&gt;
  &lt;/a&gt;
  Rust compiler x5 faster !
&lt;/h2&gt;

&lt;p&gt;NextJS 12 includes a brand new Rust compiler, faster for production, that takes advantage of native compilation.&lt;/p&gt;

&lt;p&gt;NextJS Rust compiler is built on SWC, an open platform for the next generation of fast tooling. Optimized bundling and compiling with ~3x faster refresh locally and ~5x faster builds for production. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#middleware"&gt;
  &lt;/a&gt;
  Middleware
&lt;/h2&gt;

&lt;p&gt;According to the official documentation, middlewares enables developers to use code over configuration. This means you can run code before a request is completed, and based on the request, you can modify the response by rewriting, redirecting, adding headers, etc.&lt;/p&gt;

&lt;p&gt;Middleware can be used for anything that shares logic for a set of pages, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Authentication&lt;/li&gt;
&lt;li&gt;Bot protection&lt;/li&gt;
&lt;li&gt;Redirects and rewrites&lt;/li&gt;
&lt;li&gt;Handling unsupported browsers&lt;/li&gt;
&lt;li&gt;Feature flags and A/B tests&lt;/li&gt;
&lt;li&gt;Server-side analytics&lt;/li&gt;
&lt;li&gt;Advanced i18n routing requirements&lt;/li&gt;
&lt;li&gt;Logging&lt;/li&gt;
&lt;li&gt;And more!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#react-18-support"&gt;
  &lt;/a&gt;
  React 18 support
&lt;/h2&gt;

&lt;p&gt;React 18 is still in beta realease ( at time of writing this article.)&lt;/p&gt;

&lt;p&gt;However, React 18 features such as server-side suspense and the automatic patching of updates are now available in Next.js 12 under an experimental flag as Next prepares for React 18 when it moves toward a stable release.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#images-optimization-using-avif"&gt;
  &lt;/a&gt;
  Images Optimization using AVIF
&lt;/h2&gt;

&lt;p&gt;built-in Image Optimization API now supports AVIF images, enabling 20% smaller images compared to WebP.&lt;/p&gt;

&lt;p&gt;AVIF images can take longer to optimize compared to WebP images, so NextJS team made this feature opt-in using the new images.formats property in next.config.js&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-improvments"&gt;
  &lt;/a&gt;
  Other improvments
&lt;/h2&gt;

&lt;p&gt;List of other improvments comes with Next12 includes:&lt;/p&gt;

&lt;p&gt;ES module support and URL import.&lt;br&gt;
Bot-aware ISR fallback.&lt;br&gt;
Output file tracing&lt;br&gt;
And more..&lt;/p&gt;

&lt;p&gt;If you are interested in NextJS framwork, you can find the full article + code examples + usefull links here:&lt;br&gt;
&lt;a href="https://bit.ly/31gmdDg"&gt;https://bit.ly/31gmdDg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope this article can helps you get new information &amp;amp; to learn new things.&lt;br&gt;
See you in the next article.&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>NestJs JWT - Access Tokens &amp; Refresh Tokens - Ultimate Guide</title>
      <author>Vladimir Agaev</author>
      <pubDate>Sun, 05 Dec 2021 14:19:09 +0000</pubDate>
      <link>https://dev.to/vladwulf/nestjs-jwt-access-tokens-refresh-tokens-ultimate-guide-1pp5</link>
      <guid>https://dev.to/vladwulf/nestjs-jwt-access-tokens-refresh-tokens-ultimate-guide-1pp5</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/uAKzFhE3rxU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>If This... Then That</title>
      <author>Vicki (she/they)</author>
      <pubDate>Sun, 05 Dec 2021 14:15:57 +0000</pubDate>
      <link>https://dev.to/vickilanger/if-this-then-that-585</link>
      <guid>https://dev.to/vickilanger/if-this-then-that-585</guid>
      <description>&lt;p&gt;&lt;em&gt;If learning to code with math examples are the bane of your existence, keep reading. This series uses relatable examples like animals.&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Jump To:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#compare"&gt;Comparing&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="#condition"&gt;On One Condition or More or Not&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#flow"&gt;Decision Making&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#practice"&gt;Practice Challenges&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#lets-compare"&gt;
  &lt;/a&gt;
  Let’s Compare &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#alligator-signs-lt-amp-gt-which-is-which"&gt;
  &lt;/a&gt;
  Alligator Signs &amp;lt; &amp;amp; &amp;gt;: Which is which?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ybJfB5Nf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxcga53fzwveleez2iat.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ybJfB5Nf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxcga53fzwveleez2iat.png" alt="Alligator/crocodile siting at a desk with question marks next to &amp;lt; and &amp;gt; signs" width="500" height="200"&gt;&lt;/a&gt;&lt;br&gt;
In school, many of us were taught &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt; by imagining they were alligators and crocodiles, Pac-Man, or a crooked letter “L”. Basically, the big open side eats the bigger thing. If you’re like me, this was super confusing. The concept is great, but it made me focus too hard on knowing which item was greater than the other and less on how to read statements like &lt;code&gt;1 &amp;lt; 2&lt;/code&gt; and &lt;code&gt;4 &amp;gt; 3&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Reading these types of statements properly will be immensely helpful to you while coding. For starters, we code from left to right. As you’re reading, the side you get to first is the part you want to pay attention to. If the little pointy side is first, on the left, then that is a less than sign. If the big open mouth side is first, on the left, then it is a greater than sign. Here’s a quick example to help you practice reading them correctly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# common number of feet for each
&lt;/span&gt;&lt;span class="n"&gt;dog_feet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="n"&gt;person_feet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="n"&gt;dog_feet&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;person_feet&lt;/span&gt;
&lt;span class="n"&gt;person_feet&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;dog_feet&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also say something is &lt;code&gt;&amp;lt;=&lt;/code&gt; or &lt;code&gt;&amp;gt;=&lt;/code&gt;. If you were deciding whether or not it is freezing outside, you may say “if the temperature is &amp;lt;= 32°F or 0°C, then it is freezing”.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;temp_f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;
&lt;span class="n"&gt;freezing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp_f&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#thats-not-true"&gt;
  &lt;/a&gt;
  That's Not True
&lt;/h4&gt;

&lt;p&gt;Now that you can definitely read these less than and greater than signs, let’s talk about what we use them for. Remember the type of data we called &lt;a href="https://dev.to/vickilanger/words-numbers-variables-oh-my-mmi#bool"&gt;“boolean”&lt;/a&gt;? In code, we use them to help us know if a statement is &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;. In the feet comparison example we just used, both statements are true. Though, this isn’t always the case in code. Sometimes statements are true and sometimes they are false. These are typically used in &lt;code&gt;if&lt;/code&gt; statements to help us make decisions. We’ll go over those shortly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# common number of feet for each
&lt;/span&gt;&lt;span class="n"&gt;dog_feet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="n"&gt;fish_feet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="c1"&gt;# I hope
&lt;/span&gt;
&lt;span class="n"&gt;fish_feet&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dog_feet&lt;/span&gt;  &lt;span class="c1"&gt;# this is False
&lt;/span&gt;&lt;span class="n"&gt;dog_feet&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;fish_feet&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;  &lt;span class="c1"&gt;# this is also False
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#is-it-or-is-it-not"&gt;
  &lt;/a&gt;
  Is it or is it not?
&lt;/h3&gt;

&lt;p&gt;A quick reminder: variables use one equals sign &lt;code&gt;=&lt;/code&gt; to &lt;a href="https://dev.to/vickilanger/words-numbers-variables-oh-my-mmi#vars"&gt;assign the value&lt;/a&gt; on the right to the variable name on the left. That’s not its only job though, the &lt;code&gt;=&lt;/code&gt; is overloaded with work. It has lots of jobs in programming. Its first job is to assign values to variables. Its other jobs are to help us compare things, but it will look a little different. If we use two equals signs &lt;code&gt;==&lt;/code&gt; it means we are trying to compare whether or not the things on either side are of the same value. The side an item is on doesn’t matter. We just want to know if the items are the same integer, string, boolean, etc. I would read &lt;code&gt;thing_1 == thing_2&lt;/code&gt; as “thing_1 is the same value as thing_2”.&lt;/p&gt;

&lt;p&gt;That’s great, but what if we specifically want to know if something is not the same as something else? I’m so glad you asked, we have something for that too. Instead of two equals signs, we use &lt;code&gt;!=&lt;/code&gt;. In programming, almost always &lt;code&gt;!&lt;/code&gt; translates to &lt;code&gt;not&lt;/code&gt;. So, this time, we’d read &lt;code&gt;thing_1 != thing_2&lt;/code&gt; as “thing_1 is not the same value as thing_2”.&lt;/p&gt;

&lt;p&gt;Like &lt;code&gt;&amp;lt;&lt;/code&gt; or &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; are also generally used with &lt;code&gt;if&lt;/code&gt; statements. Really, any time we are comparing things, you’re likely to see some version of an &lt;code&gt;if&lt;/code&gt; statement.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# common number of lungs for each
&lt;/span&gt;&lt;span class="n"&gt;snail_lungs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;fish_lungs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;horse_lungs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;snails&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="c1"&gt;# we have 2 snails
&lt;/span&gt;
&lt;span class="n"&gt;fish_lungs&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;snail_lungs&lt;/span&gt;  &lt;span class="c1"&gt;# this is False
&lt;/span&gt;&lt;span class="n"&gt;snail_lungs&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;fish_lungs&lt;/span&gt; &lt;span class="c1"&gt;# yep, still False
&lt;/span&gt;&lt;span class="n"&gt;snail_lungs&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;horse_lungs&lt;/span&gt;  &lt;span class="c1"&gt;# finally, a True comparison
&lt;/span&gt;
&lt;span class="n"&gt;fish_lungs&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;snail_lungs&lt;/span&gt;  &lt;span class="c1"&gt;# this is True
&lt;/span&gt;&lt;span class="n"&gt;snail_lungs&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;fish_lungs&lt;/span&gt; &lt;span class="c1"&gt;# yep, still True
&lt;/span&gt;&lt;span class="n"&gt;snail_lungs&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;horse_lungs&lt;/span&gt;  &lt;span class="c1"&gt;# this one is False
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Urib03X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/okr9604w0i4b7ey097ik.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Urib03X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/okr9604w0i4b7ey097ik.png" alt="cheetah image == house cat image == dog" width="500" height="200"&gt;&lt;/a&gt;&lt;br&gt;
To test out whether a comparison is &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;, you can print your comparison. Did you know our pet cats aren’t the only ones that meow? Test it out with this example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;house_cat_sound&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"meow"&lt;/span&gt;
&lt;span class="n"&gt;snow_leopard_sound&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"meow"&lt;/span&gt;
&lt;span class="n"&gt;cheetah_sound&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"meow"&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;house_cat_sound&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;snow_leopard_sound&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;cheetah_sound&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;house_cat_sound&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;snow_leopard_sound&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;dog_sound&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"woof"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;house_cat_sound&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;snow_leopard_sound&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;cheetah_sound&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;dog_sound&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cheetah_sound&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;dog_sound&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#on-one-condition-or-more-or-not"&gt;
  &lt;/a&gt;
  On One Condition or More or Not &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Now that we know how to compare, let’s talk about Python’s logical operators. We use these operators, or words, to help us arrange things logically.&lt;/p&gt;

&lt;p&gt;Imagine you have a bunch of things to do today. On your to-do list, you have: do laundry, play games, clean the kitchen, and feed dogs. From your to-do list, some of these things must be done and some could wait until later. We can use keywords to explain which ones are necessary, which are maybe getting done, and which ones are not going to be done today.&lt;br&gt;
Here's our to-do list:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SJsRFG8A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/in77091veecue5gezsri.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SJsRFG8A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/in77091veecue5gezsri.png" alt='A piece of paper that says "todo: laundry, play games, clean the kitchen, and feed dogs"' width="163" height="200"&gt;&lt;/a&gt;&lt;br&gt;
We only have enough energy to do three of the four things. We know we must feed the dogs. When we have to do something we use &lt;code&gt;and&lt;/code&gt;. This will make a program know this condition or item is required.&lt;/p&gt;

&lt;p&gt;When conditions are optional, we use &lt;code&gt;or&lt;/code&gt;. You realize the kitchen isn’t actually that messy and you still have enough clothes for tomorrow. Now that you know you don’t have to do both, you will have time to play games. Now, let’s put this into code.&lt;/p&gt;

&lt;p&gt;There is the option to do &lt;code&gt;kitchen or laundry&lt;/code&gt;, then we know we have to feed the dogs. So, we end up with &lt;code&gt;kitchen or laundry and feed_dogs&lt;/code&gt;. Wait, we need games too and only have energy for three things on our list! Today, we decide the kitchen will probably not get done.&lt;/p&gt;

&lt;p&gt;With both &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;or&lt;/code&gt;, we are checking to see if things are &lt;code&gt;True&lt;/code&gt;. With &lt;code&gt;and&lt;/code&gt;, the condition  to the right of it must be &lt;code&gt;True&lt;/code&gt;. With &lt;code&gt;or&lt;/code&gt;, one or both of the conditions must be &lt;code&gt;True&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Next, we have &lt;code&gt;not&lt;/code&gt;, which is generally all by itself. This will use a boolean value, like &lt;code&gt;True&lt;/code&gt;, and make it the opposite. Imagine you want to know if it is raining. If someone says it is &lt;code&gt;not raining&lt;/code&gt;, that would make &lt;code&gt;raining&lt;/code&gt;, &lt;code&gt;False&lt;/code&gt;. In our to-do list example, the kitchen needs to be cleaned and we have &lt;code&gt;kitchen = True&lt;/code&gt;. If we say, &lt;code&gt;not kitchen&lt;/code&gt;, that means we have decided not to clean the kitchen. Here’s what this to-do list could look like in code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# all tasks need to be done, so we start them as True
&lt;/span&gt;&lt;span class="err"&gt;​​&lt;/span&gt;&lt;span class="n"&gt;kitchen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;laundry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;games&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;feed_dogs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="c1"&gt;# if we had energy for all tasks
&lt;/span&gt;&lt;span class="n"&gt;kitchen&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;laundry&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;games&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;feed_dogs&lt;/span&gt;

&lt;span class="c1"&gt;# only energy for three tasks
&lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;kitchen&lt;/span&gt;  &lt;span class="c1"&gt;# guess we’ll do it tomorrow
&lt;/span&gt;&lt;span class="n"&gt;chores_done&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;laundry&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;games&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;feed_dogs&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chores_done&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice how we have parentheses &lt;code&gt;()&lt;/code&gt;. Just like in math, there is an order of how things are done. In Python, &lt;code&gt;and&lt;/code&gt; will always happen first, unless there are parentheses. We need them to show we have energy for laundry or games, but we also have to feed the dogs. Without the parentheses, we could be saying we have energy for games and feeding dogs or we have energy for laundry.&lt;/p&gt;

&lt;p&gt;Wanna test this further? Try changing around the boolean values for the tasks.&lt;/p&gt;

&lt;p&gt;Similar to &lt;code&gt;&amp;lt;&lt;/code&gt; or &lt;code&gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;and&lt;/code&gt;, and &lt;code&gt;not&lt;/code&gt; are also often used with &lt;code&gt;if&lt;/code&gt; statements.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#controlling-the-flow-and-making-decisions"&gt;
  &lt;/a&gt;
  Controlling the Flow and Making Decisions &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Have you ever made a decision before? Maybe you’ve decided what to eat for dinner, what to wear today, or even what colors to mix to make another color. These are all things we can use code to help us with. The most basic way to make decisions is set up to be read like: “If something is True, then we will do this. If it isn’t True, we will do something else.”&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#if-this"&gt;
  &lt;/a&gt;
  If This
&lt;/h3&gt;

&lt;p&gt;First, let's talk about &lt;code&gt;if&lt;/code&gt; statements. I’ve mentioned them a few times and how we can use the comparison operators (&lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;) and logical operators (&lt;code&gt;or&lt;/code&gt;, &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;not&lt;/code&gt;) with them. &lt;code&gt;If&lt;/code&gt; statements/blocks only cover “If something is True, then we will do this”. Shall we jump into an example?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;current_c_temperature&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="c1"&gt;# about 60F
&lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"chilly outside, wear warm clothes &amp;amp; limit time outside"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the first line of our code, the &lt;code&gt;if&lt;/code&gt; statement, is &lt;code&gt;True&lt;/code&gt; then we will do the code in the &lt;code&gt;if&lt;/code&gt; block. An &lt;code&gt;if&lt;/code&gt; block is defined by the lines underneath the &lt;code&gt;if&lt;/code&gt; line that are tabbed in. The block ends when a line is no longer tabbed in. Great, we know what to do if it’s cold outside, but what if it’s not?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#if-not-something-else"&gt;
  &lt;/a&gt;
  If not, Something Else
&lt;/h3&gt;

&lt;p&gt;If your &lt;code&gt;if&lt;/code&gt; statement is &lt;code&gt;False&lt;/code&gt;, we can do something else. We can add an &lt;code&gt;else&lt;/code&gt; block. An &lt;code&gt;else&lt;/code&gt; block includes a line that says &lt;code&gt;else:&lt;/code&gt; and the tabbed in lines that happen if the &lt;code&gt;if&lt;/code&gt; statement was &lt;code&gt;False&lt;/code&gt;. With our temperature example, let’s add in an &lt;code&gt;else&lt;/code&gt; block.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;current_c_temperature&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="c1"&gt;# about 60F
&lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"chilly outside, wear warm clothes &amp;amp; limit time outside"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"have fun outside, it’s not too cold"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we were going to read this out loud, we’d say something like: “If the current celsius temperature is below 15 degrees, we should wear warm clothes and limit time outside. If the current celsius temperature is &lt;strong&gt;not&lt;/strong&gt; below 15 degrees, we shall do something else. We will leave our jackets inside and have fun outside.”&lt;/p&gt;

&lt;p&gt;Of course these aren’t the only possible temperatures, right? There’s more than just cold and not cold. For situations like this, we can have multiple test conditions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#multiple-conditions-with-elif"&gt;
  &lt;/a&gt;
  Multiple Conditions with Elif
&lt;/h3&gt;

&lt;p&gt;For multiple conditions, we have &lt;code&gt;elif&lt;/code&gt; blocks. These look exactly like &lt;code&gt;if&lt;/code&gt; blocks, but with an &lt;code&gt;el&lt;/code&gt; in front of it. They go in between if and else blocks. Time to adjust our example again.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;current_c_temperature&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="c1"&gt;# about 60F
&lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"chilly outside, wear warm clothes, limit time outside"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;current_c_temperature&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;current_c_temperature&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="c1"&gt;# between ~60F and ~82F
&lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"have fun outside, it’s not too cold or too hot"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Wear light clothes, avoid long time in sun, drink extra water"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that only one of the blocks is actually going to be used. This is the goal. We want to use if-elif-else blocks to help us make decisions. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--znTs9gQf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images4-g.ravelrycache.com/uploads/doctorhectic/569858321/2321568580_92f9c1d4cc_b.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--znTs9gQf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images4-g.ravelrycache.com/uploads/doctorhectic/569858321/2321568580_92f9c1d4cc_b.jpg" alt="knitted red octopus sitting on a laptop wearing a knitted yellow sweater" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
Temperatures are great and all, but it's chilly. Let’s take a trip to the Sleevonista™ sweater factory. Sleevonista™ makes one-size-fits-all sweaters with different amounts of sleeves.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;sweater_sleeves&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"give to spider, squid, or octopus"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;sweater_sleeves&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;sweater_sleeves&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"give to butterfly, bumble bee, grasshopper"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;sweater_sleeves&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;sweater_sleeves&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"give to 3 or 4 legged dog"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;sweater_sleeves&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;sweater_sleeves&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"give sweater to human with 1 or 2 arms"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;sweater_sleeves&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"give sweater to your snake friend"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sweater is broken, make another one"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#do-you-remember"&gt;
  &lt;/a&gt;
  Do you remember? &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Here's some practice challenges. Let’s practice what we’ve learned so far. Go ahead and comment on this post with your answers. Do you remember? If not, you can always go back to read sections again.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#give-an-example-of-each"&gt;
  &lt;/a&gt;
  Give an example of each
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;How you’d read it out loud&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Comparison Operators&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(&lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Logical Operator &lt;code&gt;and&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Logical Operator &lt;code&gt;or&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Logical Operator &lt;code&gt;not&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#are-these-raw-true-endraw-or-raw-false-endraw-"&gt;
  &lt;/a&gt;
  Are these &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;?
&lt;/h3&gt;

&lt;p&gt;You are more than welcome to test these out. Don’t expect yourself to understand everything right away. Do test yourself first though.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;
&lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;skyscraper_size &amp;lt; bicycle_size&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eat_food and drink_water&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;your_age == parent_age&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;num_dinosaurs_alive &amp;gt;= num_chickens_alive&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;not millionaire&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cheetah_top_speed &amp;lt;= sloth_top_speed&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;apple_weight != watermelon_weight&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;snowing or !snowing&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dog_age_in_human_years * 7 &amp;gt; your_age&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#time-to-make-your-own-decision"&gt;
  &lt;/a&gt;
  Time to make your own decision!
&lt;/h3&gt;

&lt;p&gt;Don’t forget that you can and probably should start with &lt;a href="https://dev.to/vickilanger/how-do-i-code-4970#pseudocode"&gt;pseudocode&lt;/a&gt;. &lt;br&gt;
&lt;em&gt;Some ideas&lt;/em&gt;: when to play with dog, what’s for dinner, what movie you want to watch next, water flowing through pipes, or anything else.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# if something is True, 
&lt;/span&gt;    &lt;span class="c1"&gt;# then we do this
# if not that, maybe this is True, if it is
&lt;/span&gt;   &lt;span class="c1"&gt;# then we do this
# if none of those, something else
&lt;/span&gt;   &lt;span class="c1"&gt;# then we do this
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Thank you to &lt;a class="mentioned-user" href="https://dev.to/andyhaskell"&gt;@andyhaskell&lt;/a&gt;
 for reviewing and getting the very first Sleevonista™ sweater.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>challenge</category>
      <category>codenewbie</category>
      <category>python</category>
    </item>
  </channel>
</rss>
