<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>QR Code Generator Website</title>
      <author>Bibek</author>
      <pubDate>Sun, 09 May 2021 20:52:38 +0000</pubDate>
      <link>https://dev.to/bibekkakati/qr-code-generator-website-gmo</link>
      <guid>https://dev.to/bibekkakati/qr-code-generator-website-gmo</guid>
      <description>&lt;p&gt;How can we generate a QR Code for any content in JavaScript?&lt;/p&gt;

&lt;p&gt;Check out this article: &lt;a href="https://blog.bibekkakati.me/generate-qr-code-in-javascript"&gt;Generate QRCode&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.bibekkakati.me/generate-qr-code-in-javascript"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gxcSNyP2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vescaka0h2njptfo3g91.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>node</category>
    </item>
    <item>
      <title>Everything you need to know about blogging on dev.to!</title>
      <author>Fahad Imran</author>
      <pubDate>Sun, 09 May 2021 19:49:33 +0000</pubDate>
      <link>https://dev.to/fahadimran23/everything-you-need-to-know-about-blogging-on-dev-to-2oif</link>
      <guid>https://dev.to/fahadimran23/everything-you-need-to-know-about-blogging-on-dev-to-2oif</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Cover Photo by &lt;a href="https://unsplash.com/@anhdung?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Dung Anh&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/writing?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;New to DEV? Not sure where to get started? &lt;strong&gt;No worries!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this blog, I will share &lt;strong&gt;tips&lt;/strong&gt;, &lt;strong&gt;tricks&lt;/strong&gt;, and &lt;strong&gt;resources&lt;/strong&gt; that you can use to write amazing articles in no time. This will apply whether you have never written a blog on DEV or you're just looking to improve your workflow.&lt;/p&gt;

&lt;p&gt;I will cover quite a lot of information in this post so it might be a bit lengthy, but I'll try my best to not bore you.&lt;/p&gt;

&lt;p&gt;So, take a deep breath, grab some coffee and let's get started! ☕&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/5zf2M4HgjjWszLd4a5/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/5zf2M4HgjjWszLd4a5/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-choose-a-title-for-your-blog"&gt;
  &lt;/a&gt;
  1. Choose a title for your blog 💡
&lt;/h2&gt;

&lt;p&gt;The first thing you have to choose is the &lt;strong&gt;blog title&lt;/strong&gt;. It is important to have a title that describes what your blog is about. A good title can be the difference between people viewing your blog or skipping over it. Think of your blog title as a one-line summary of your blog.&lt;/p&gt;

&lt;p&gt;What I try to do is find &lt;strong&gt;keywords&lt;/strong&gt; that describe my blog content and include them in the blog title. This ensures that the title is relevant and to the point.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-tags-tags-tags"&gt;
  &lt;/a&gt;
  2. Tags, Tags, Tags 🔖
&lt;/h2&gt;

&lt;p&gt;On DEV, you can add up to &lt;strong&gt;4&lt;/strong&gt; tags on your blogs to help people find them. It is better to use existing tags whenever possible instead of making your own. You can view the existing tags on DEV &lt;a href="https://dev.to/tags"&gt;here&lt;/a&gt;. It must be noted that some tags have special guidelines that your blog must fulfill before you can include them in your blogs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-cover-images-are-important"&gt;
  &lt;/a&gt;
  3. Cover images are important! 🎨
&lt;/h2&gt;

&lt;p&gt;Cover images make your blog &lt;strong&gt;standout&lt;/strong&gt;. Blogs with cover images are more likely to be featured in the home feed of the website. Therefore, you must include one in your articles. For finding cover images you can use sites like &lt;a href="https://unsplash.com/"&gt;Unsplash&lt;/a&gt;, and &lt;a href="https://www.pexels.com/"&gt;Pexels&lt;/a&gt; or if you want to design one from scratch, you can try &lt;a href="https://www.canva.com/"&gt;Canva&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All these sources have worked great for me so far. Just try to keep your cover image relevant and fun and you'll be fine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pro Tip:&lt;/strong&gt; If you want to add a GIF as a cover image, just copy the GIF link and add it as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;---
cover_image: your_gif_link
---
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-you-have-to-learn-markdown"&gt;
  &lt;/a&gt;
  4. You HAVE to learn markdown! ⚡
&lt;/h2&gt;

&lt;p&gt;Before writing your blog you must be familiar with the &lt;strong&gt;basics of markdown&lt;/strong&gt; as you'll be using it to write your blogs on DEV. Markdown allows you to format your text, images, lists, etc. very easily. It is super easy to learn too. You can find dozens of cheat sheets floating around the web. I would recommend you give &lt;a href="https://www.markdownguide.org/cheat-sheet/"&gt;this one&lt;/a&gt; a look to get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-writing-the-draft-for-your-blog"&gt;
  &lt;/a&gt;
  5. Writing the draft for your blog 📜
&lt;/h2&gt;

&lt;p&gt;Once you've got the hang of markdown, the next thing is to write the draft for your blog. Although you can use the built-in editor that DEV provides, most people prefer to write their blogs on &lt;a href="https://docs.google.com/"&gt;Google Docs&lt;/a&gt; or &lt;a href="https://code.visualstudio.com/"&gt;VS Code&lt;/a&gt;. You can also use dedicated note-taking apps like &lt;a href="https://www.notion.so/"&gt;Notion&lt;/a&gt; which supports markdown as well.&lt;/p&gt;

&lt;p&gt;Whatever medium you use, I would highly recommend that you install a browser extension called &lt;a href="https://www.grammarly.com/"&gt;Grammarly&lt;/a&gt;. It is super helpful and will correct most of your grammatical and punctuation errors if not all of them. If you prefer VS Code, use an extension called &lt;a href="https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one"&gt;Markdown All in One&lt;/a&gt; as it allows you to preview markdown files and provides various editing options as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-dos-and-donts-of-writing"&gt;
  &lt;/a&gt;
  6. Dos and Dont's of writing! 🚨
&lt;/h2&gt;

&lt;p&gt;While writing your blogs on DEV, here are some general writing tips to improve the flow of your blog:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Use short and simple sentences&lt;/strong&gt; as to not overwhelm the reader.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Break up your content&lt;/strong&gt; into smaller paragraphs and add sub-headings to them.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Use relevant images&lt;/strong&gt; in your blogs to explain a topic and make the blog more engaging (And Yes, memes count too! 😅).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Add code snippets&lt;/strong&gt; to your blogs to explain programming concepts.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Include useful links and references&lt;/strong&gt; to provide additional information in your articles.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Don't spam your social media&lt;/strong&gt; links in your blog. No one wants to follow such a person. Try to provide value to others. If you want, just plug one or two social links at the end of the blog post.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#7-lets-add-some-youtube-videos"&gt;
  &lt;/a&gt;
  7. Let's add some YouTube videos! 🎥
&lt;/h2&gt;

&lt;p&gt;If you want to embed &lt;strong&gt;YouTube videos&lt;/strong&gt; in your blogs, you can easily do so using Liquid tags that DEV provides. To embed videos, copy the video id from the URL and add it to the blog as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{% youtube your_video_id %}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to learn more about Liquid tags check out the &lt;a href="https://dev.to/p/editor_guide"&gt;editor guide&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-making-a-series"&gt;
  &lt;/a&gt;
  8. Making a series! 📌
&lt;/h2&gt;

&lt;p&gt;For topics that require more explaining, you can also &lt;strong&gt;make a series&lt;/strong&gt; on DEV. Series are great for topics that have different parts. Instead of cramming all the information in a single article, you can split it up into multiple smaller posts.&lt;/p&gt;

&lt;p&gt;In order to make a series, just give it a name and your blog will automatically be added to that series. Dev will also show a series list at the top of the blogs in that series for navigation (excellent 🙌).&lt;/p&gt;

&lt;p&gt;It must be noted that the series will only appear if it has at least &lt;strong&gt;2&lt;/strong&gt; blog posts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-simple-gtgt-complex"&gt;
  &lt;/a&gt;
  9. Simple &amp;gt;&amp;gt; Complex 😵
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;"Genius is making complex ideas simple, not making simple ideas complex" &lt;strong&gt;~ Albert Einstein&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;KISS&lt;/strong&gt; (Keep It Simple Stupid) principle applies here as well. Keep your blog posts short and simple. No one has the time to read blogs that look like research papers. I am guilty of this habit as well. But you should keep your blogs concise and limited to &lt;strong&gt;5-7 min max&lt;/strong&gt; in most cases (although there can be some exceptions).&lt;/p&gt;

&lt;p&gt;Additionally, try to explain the concept in the easiest way possible so people with little to no background knowledge can also understand the concept without pulling their hair out. 😫&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-canonical-urls-are-no-joke"&gt;
  &lt;/a&gt;
  10. Canonical URLs are no joke! 🔗
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;If you're just writing blogs on DEV and not republishing from elsewhere, feel free to skip this section.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;However, if you're republishing your blogs from elsewhere whether it be Medium, Hashnode, or your personal website, &lt;strong&gt;read carefully&lt;/strong&gt;. It is important that you add a &lt;strong&gt;Canonical URL&lt;/strong&gt; to your articles published elsewhere on the web.&lt;/p&gt;

&lt;p&gt;A Canonical URL tells the search engines like &lt;strong&gt;Google&lt;/strong&gt;, where the original source of the content/article is. If you don't add a canonical article to your blog, the search engine will consider it as duplicate content. And there is a high chance that the republished version on DEV will &lt;strong&gt;rank higher&lt;/strong&gt; on search results as compared to the one originally published on your personal blog. Consequently, you'll get less traffic on your website which is no fun. 😥&lt;/p&gt;

&lt;p&gt;Thankfully, DEV allows you to easily add a Canonical URL to your blog posts and also displays an &lt;strong&gt;" Originally published on XYZ.com "&lt;/strong&gt; message at the top.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lbu2mQlS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ib70ngghebcalezkpam.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lbu2mQlS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ib70ngghebcalezkpam.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to learn more about republishing and Canonical URLs check out this &lt;a href="https://medium.com/@edithyeghiazaryan/republish-your-content-using-a-canonical-tag-3eb47b68ee2f"&gt;article&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#11-finallyhit-that-publish-button"&gt;
  &lt;/a&gt;
  11. Finally...Hit that publish button! 🚀
&lt;/h2&gt;

&lt;p&gt;After you've finished writing the blog post, you can &lt;strong&gt;save the draft&lt;/strong&gt; of the post. This will allow you to share the URL of the article with your friends, family, editor, etc. for proofreading.&lt;/p&gt;

&lt;p&gt;Once you're satisfied with the final result, you can then &lt;strong&gt;publish&lt;/strong&gt; it for everyone to see. The stats on your blog (view, likes, and comments) can be viewed in the &lt;strong&gt;Profile Dashboard&lt;/strong&gt;. You can edit the blog anytime after publishing it, so don't worry if you find any mistakes in your blog. Just edit it out! 😉&lt;/p&gt;

&lt;p&gt;Congratulations! You've published your first blog on DEV.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/Srf1W4nnQIb0k/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/Srf1W4nnQIb0k/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Easy, wasn't it?&lt;/strong&gt; After you've done this process a couple of times, it'll become easier and you'll get the hang of it, trust me.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#12-promoting-your-blog-on-social-media"&gt;
  &lt;/a&gt;
  12. Promoting your blog on social media! 📢
&lt;/h2&gt;

&lt;p&gt;After publishing your article on DEV, you can then share the link on social media accounts like Twitter, Facebook, and Linkedin, etc. The official Twitter account of DEV &lt;a href="https://twitter.com/ThePracticalDev?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor"&gt;@ThePracticalDev&lt;/a&gt; also shares blog posts that are good and get featured. This is a very nice gesture, as you can get a &lt;strong&gt;far greater reach&lt;/strong&gt; in this way, especially if you're just starting out and don't have a huge audience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thats-all-folks"&gt;
  &lt;/a&gt;
  That's all folks! 🙏
&lt;/h2&gt;

&lt;p&gt;If you have any questions feel free to ask me in the comments 👇and I will do my best to answer them. Feel free to read some of my other blogs on DEV &lt;a class="mentioned-user" href="https://dev.to/fahadimran23"&gt;@fahadimran23&lt;/a&gt;
. Thanks for reading and happy coding! 😀&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/HJ8NsNtn9VswE/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/HJ8NsNtn9VswE/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#if-you-enjoyed-reading-this-article-please-give-it-a-or"&gt;
  &lt;/a&gt;
  If you enjoyed reading this article, please give it a ❤️, 🦄, or 🔖
&lt;/h4&gt;

</description>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>productivity</category>
      <category>writing</category>
    </item>
    <item>
      <title>API To Spice Up Your Website or Client's Website</title>
      <author>Elijah Trillionz</author>
      <pubDate>Sun, 09 May 2021 19:02:31 +0000</pubDate>
      <link>https://dev.to/elijahtrillionz/api-to-spice-up-your-website-or-client-s-website-4287</link>
      <guid>https://dev.to/elijahtrillionz/api-to-spice-up-your-website-or-client-s-website-4287</guid>
      <description>&lt;p&gt;Have you built a business website or portfolio for a client? Or are you currently making one? Do you have a personal website or portfolio? Here is an API to spice up that website.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#spurwing"&gt;
  &lt;/a&gt;
  &lt;a href="https://spurwing.io"&gt;Spurwing&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://spurwing.io"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ukp2JKzE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/spurwing.png" alt="Spurwing.io" title="Spurwing.io"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Spurwing is a web app for scheduling and calendar management. It also has an API for easy integration on your application.&lt;/p&gt;

&lt;p&gt;What is &lt;strong&gt;Spurwing&lt;/strong&gt; really about?&lt;/p&gt;

&lt;p&gt;Spurwing manages your schedules as a business person, freelancer, doctor, therapist, educationist, CEO, etc.&lt;/p&gt;

&lt;p&gt;Your clients can book an appointment with you through your website. And all of your appointment activities are managed in your Spurwing dashboard.&lt;/p&gt;

&lt;p&gt;So as a developer who is making a website for a client. Let's say your client is a Therapist, with your client's website, clients can book an appointment with your client with just a few clicks thanks to you.&lt;/p&gt;

&lt;p&gt;With such a tool as Spurwing, you're not going to have a static calendar showing the days your client is available (since the publishing of the website).&lt;/p&gt;

&lt;p&gt;Instead, you'll have a dynamic calendar. As such your client can go on a one-week vacation and it will reflect on your client's website.&lt;/p&gt;

&lt;p&gt;Brilliant! Right? I call it, having a static website with a dynamic feature.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#here-is-how-it-works"&gt;
  &lt;/a&gt;
  Here is How it Works
&lt;/h2&gt;

&lt;p&gt;From here henceforth, I am assuming you (the developer or whoever you are reading this) as the owner of the website:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You integrate the API on the proposed website&lt;/li&gt;
&lt;li&gt;Visitors or clients can book an appointment with you.&lt;/li&gt;
&lt;li&gt;You can accept or decline meetings on your Spurwing dashboard.&lt;/li&gt;
&lt;li&gt;Your client (who just booked) will get an instant notification (via e-mail or SMS) on accepted or declined meetings.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Trust me, there is a lot of good stuff they offer. But we will break the above steps into features Spurwing offers that will enable you to achieve the purpose (&lt;em&gt;booking appointment&lt;/em&gt;).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-security"&gt;
  &lt;/a&gt;
  1. Security
&lt;/h3&gt;

&lt;p&gt;This is a very important aspect that you should consider for such a tool. You wouldn't want nobody to know about your schedules right? Especially when you are international. Knowing your schedules is like knowing your next movement.&lt;/p&gt;

&lt;p&gt;Not to worry as all your data is encrypted and stored at &lt;a href="https://www.imperva.com/learn/data-security/soc-2-compliance/"&gt;SOC 2&lt;/a&gt; certified facilities and fully audit logged.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://www.imperva.com/learn/data-security/soc-2-compliance/"&gt;SOC 2&lt;/a&gt; is an auditing procedure that ensures your service providers securely manage your data to protect the interests of your organization and the privacy of its clients.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.imperva.com/learn/data-security/soc-2-compliance/"&gt;SOC 2&lt;/a&gt; defines criteria for managing customer based data based on five trust service principles i.e &lt;strong&gt;Security&lt;/strong&gt;, &lt;strong&gt;Availability&lt;/strong&gt;, &lt;strong&gt;Processing Integrity&lt;/strong&gt;, &lt;strong&gt;Confidentiality&lt;/strong&gt; and &lt;strong&gt;Privacy.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-api-or-opensource-widget"&gt;
  &lt;/a&gt;
  2. API or Open-Source Widget:
&lt;/h3&gt;

&lt;p&gt;With Spurwing you can either integrate with its &lt;a href="https://github.com/Spurwing/Appointment-Scheduling-Widgets"&gt;open-source widget&lt;/a&gt; or create from scratch with its &lt;a href="https://docs.spurwing.io/"&gt;API&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What and How do I mean?&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#spurwing-api"&gt;
  &lt;/a&gt;
  Spurwing API
&lt;/h4&gt;

&lt;p&gt;The API is a great way to integrate into your website. It is packed full with enough endpoints for maximal use. With this API, you can&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#gtgt-create-list-and-delete-appointment-types"&gt;
  &lt;/a&gt;
  &lt;a href="https://docs.spurwing.io/docs/spurwing/reference/SpurWing.v1.yaml/paths/~1appointment_types/get"&gt;&amp;gt;&amp;gt; Create, List and Delete Appointment types:&lt;/a&gt;
&lt;/h5&gt;

&lt;p&gt;An appointment type is like saying the type of meeting you accept. Say you're Elon Musk your appointment types could be business, bitcoin investment, motivational speech, family, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://spurwing.io"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yb7a8TmU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/spurwing-appointment-type.png" alt="spurwing-appointment-type" title="spurwing-appointment-type"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It can be more than one of course. Appointment types are about recurring activities or meetings in your line of work.&lt;/p&gt;

&lt;p&gt;With these endpoints, your clients can specify which type of meeting He/She intends to have with you.&lt;/p&gt;

&lt;p&gt;Each appointment type has a time interval that indicates how long you intend that kind of meeting to last. It can be in 60 minutes, 720 minutes (that feels like a lifetime though), or as short as 15 minutes.&lt;/p&gt;

&lt;p&gt;With these endpoints, you can also specify the contact types through which the meeting will be conducted. See the &lt;a href="https://docs.spurwing.io/docs/spurwing/reference/SpurWing.v1.yaml/paths/~1appointment_types/post"&gt;documentation&lt;/a&gt; to know the available contact types and how to use them.&lt;/p&gt;

&lt;p&gt;As the owner of the account, you can specify which options are suitable for you for that particular meeting type. If you only want to be contacted by one means, that is the only means that will reflect on your site.&lt;/p&gt;

&lt;p&gt;With the API, &lt;em&gt;you can also &lt;code&gt;Get&lt;/code&gt; a specific appointment type as well as update an appointment type.&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#gtgt-create-list-and-delete-appointments"&gt;
  &lt;/a&gt;
  &lt;a href="https://docs.spurwing.io/docs/spurwing/reference/SpurWing.v1.yaml/paths/~1appointments/get"&gt;&amp;gt;&amp;gt; Create, List and Delete Appointments&lt;/a&gt;
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://spurwing.io"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tkpqiPJy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/spurwing-appointments.png" alt="spurwing-appointments" title="spurwing-appointments"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Appointments can be individual appointments or group appointments. With these endpoints, you can &lt;strong&gt;create&lt;/strong&gt;, &lt;strong&gt;list&lt;/strong&gt; or &lt;strong&gt;delete&lt;/strong&gt; a  1 on 1 video chat appointment or in-person group appointment. See &lt;a href="https://docs.spurwing.io/docs/spurwing/reference/SpurWing.v1.yaml/paths/~1appointments/post"&gt;docs&lt;/a&gt; for more details and instruction.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can also *&lt;/em&gt;&lt;code&gt;Get&lt;/code&gt;** a specific appointment as well as &lt;strong&gt;update&lt;/strong&gt; an appointment.*&lt;/p&gt;

&lt;p&gt;In creating an appointment there is another endpoint that does the same job as this endpoint. In fact, the demo schedule in the Spurwing homepage uses the other endpoint.&lt;/p&gt;

&lt;p&gt;The other endpoint is the &lt;a href="https://docs.spurwing.io/docs/spurwing/reference/SpurWing.v1.yaml/paths/~1bookings~1complete_booking/post"&gt;complete-booking appointment&lt;/a&gt;. The complete-booking appointment lets you create a booking for a client on behalf of that client. That means it will create a client account for that client (or attendee now).&lt;/p&gt;

&lt;p&gt;The complete-booking appointment also enforces availability unlike the formal. It makes sure you are available before creating the appointment.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#gtgt-create-list-and-delete-availability-objects"&gt;
  &lt;/a&gt;
  &lt;a href="https://docs.spurwing.io/docs/spurwing/reference/SpurWing.v1.yaml/paths/~1availabilities/get"&gt;&amp;gt;&amp;gt; Create, List and Delete Availability Objects&lt;/a&gt;
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://spurwing.io"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3iQ1dI7g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/spurwing-availability-objects.png" alt="Spurwing-availability-objects" title="Spurwing-availability-objects"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When are you available Mr. Elon Musk?&lt;/strong&gt; With these endpoints, you can &lt;strong&gt;create&lt;/strong&gt; a recurring availability or a one-time availability. You can also &lt;strong&gt;list&lt;/strong&gt; and &lt;strong&gt;delete&lt;/strong&gt; them.&lt;/p&gt;

&lt;p&gt;Let's say you're usually available from Monday to Friday (recurring availability). This week you decided to create a special time for your clients on Saturday, only this week (one-time availability).&lt;/p&gt;

&lt;p&gt;For recurring availability, you can specify the start and end times daily. And by that, I don't mean you do it daily. I mean how you want it to run daily. It's a one-time setup and a recurring availability.&lt;/p&gt;

&lt;p&gt;It can also be &lt;strong&gt;updated&lt;/strong&gt; of course and you can also &lt;strong&gt;&lt;code&gt;Get&lt;/code&gt;&lt;/strong&gt; a specific availability object. You should see &lt;a href="https://docs.spurwing.io/docs/spurwing/reference/SpurWing.v1.yaml/paths/~1availabilities/post"&gt;docs&lt;/a&gt; for more.&lt;/p&gt;

&lt;p&gt;These are the most endpoints we can take for now. Check the others on the &lt;a href="https://docs.spurwing.io/"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All of Spurwing's endpoints can be tested in its documentation. You don't need to create a new project first or use Postman (or the new Thunder Client) to get familiar with the endpoints. It's called &lt;em&gt;Practive as you learn.&lt;/em&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#spurwing-opensource-widget"&gt;
  &lt;/a&gt;
  Spurwing Open-Source Widget:
&lt;/h4&gt;

&lt;p&gt;Almost everything you can do with the API can be done with your Spurwing dashboard. You can set up your appointment types, availability, contact types, book appointments with past clients, etc.&lt;/p&gt;

&lt;p&gt;The one thing you should not do is what the complete-booking endpoint does (stated above) though it is possible to do so. As we have first said, the complete-booking endpoint creates makes a booking on behalf of the client.&lt;/p&gt;

&lt;p&gt;As Elon you'd say to your clients (on your website); "Hey! Here is my Spurwing's email &amp;amp; password, log in, got to the dashboard, and book an appointment with me".&lt;/p&gt;

&lt;p&gt;Or you could say "Hey, you want to book an appointment with me send me your name, email, and phone number and I will do it myself". That's suicidal.&lt;/p&gt;

&lt;p&gt;To solve this, you can either use one of the API's endpoints (as discussed above) or use Spurwing's open-source widget.&lt;/p&gt;

&lt;p&gt;You can actually book meetings with your past clients (already recognized clients of yours, usually saved in Spurwing), but it's not the best if you're going to do it manually. I mean you have an API and an Open-Source widget for that.&lt;/p&gt;

&lt;p&gt;The open-source widget is a simple link (it's in your dashboard) with your provider_id (a form of id) that your clients will use to book an appointment with you.&lt;/p&gt;

&lt;p&gt;All of your appointment types, availability are handled within this widget. In booking an appointment with you, with this widget, your clients can&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#select-an-appointment-type"&gt;
  &lt;/a&gt;
  Select an Appointment Type
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://spurwing.io"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TEAppWiK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/spurwing_open-source-widget-appointment-type.png" alt="spurwing-open-source-widget-appointment-type" title="spurwing-open-source-widget-appointment-type"&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Recall that I created the listed appointment types (in the image above) in my Spurwing dashboard. And I did specify phone call or video call as the contact type for each of them. I also specified the time interval in minutes.&lt;/p&gt;

&lt;p&gt;Now all of that is reflected in this widget, such that my client can select the type of meeting, the contact type, as well as see the time interval I accept for such meeting.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#select-date-and-time"&gt;
  &lt;/a&gt;
  Select Date and Time
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://spurwing.io"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A6qg_3w9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/spurwing_open-source-widget-date-and-time-original.png" alt="spurwing_open-source-widget-date-and-time-original" title="spurwing_open-source-widget-date-and-time-original"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I believe you can see the light blue indicator on each day showing I am available all day. Now there is a little issue here that I would have loved to point out, but it will confuse those who don't have an account yet.&lt;/p&gt;

&lt;p&gt;The issue is not a big deal though, it's just a caution. If you have created an account and you want me to tell you, hit me up in the comment section.&lt;/p&gt;

&lt;p&gt;Now when I am not available, it will show that I am not available. So that should tell you that this widget uses the complete-booking appointment endpoint (as discussed in the API section).&lt;/p&gt;

&lt;p&gt;One cool thing I should mention is timezones. Looking up at the image (yeah the one with very low contrast), just below the Month, Day, and Year; you will find my timezone. With Spurwing timezone is well handled.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#submit-their-contact-information"&gt;
  &lt;/a&gt;
  Submit their Contact Information
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://spurwing.io"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7o30-MbP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/spurwing_open-source-widget-confirm-information.png" alt="spurwing_open-source-widget-confirm-information" title="spurwing_open-source-widget-confirm-information"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is where your clients submit their information and boom, they are booked. Now you will have to confirm or deny their meetings on your Spurwing dashboard.&lt;/p&gt;

&lt;p&gt;Every new client is indexed in your dashboard, you get to see all your clients. An existing client that books an appointment is regarded as an existing client (an already recognized client).&lt;/p&gt;

&lt;p&gt;The uniqueness is the email. With the email, they recognize an already &lt;strong&gt;&lt;em&gt;existing client&lt;/em&gt;&lt;/strong&gt;. This is achieved with the complete-booking endpoint as specified in the docs. So don't worry if you're not going to use the open-source widget.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-fully-branded"&gt;
  &lt;/a&gt;
  3. Fully Branded
&lt;/h3&gt;

&lt;p&gt;With Spurwing, you can brand your business without any Spurwing watermark. Emails sent to your clients when they book will contain your brand and not theirs.&lt;/p&gt;

&lt;p&gt;You can see that even in the widget, there is no Spurwing logo or any 'Made with love by Spurwing' text. It's plainly about your business.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-easy-peasy"&gt;
  &lt;/a&gt;
  4. Easy peasy
&lt;/h3&gt;

&lt;p&gt;Spurwing's dashboard is very easy to work with. There is a calendar that shows your schedule (a very detailed calendar).&lt;/p&gt;

&lt;p&gt;The good thing is, Spurwing is synced with Google Calendar, Outlook, and iCal, so you can likewise view your schedules using any of those calendars.&lt;/p&gt;

&lt;p&gt;These are some of the features I can post now, there are several others but I don't want this article to be too long. You can visit their website at spurwing.io to see more.&lt;/p&gt;

&lt;p&gt;Though there is one thing, I'd like to add i.e &lt;a href="https://www.spurwing.io/blog"&gt;&lt;strong&gt;Spurwing's blog&lt;/strong&gt;&lt;/a&gt;. It's a great place where they share ideas, tips, and tutorials about their services. You should check it out.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Introduce this feature to your clients and they'll love it. It's a major aspect of their business's growth. And on your path as a developer, integrating the API or open-source widget is just easy.&lt;/p&gt;

&lt;p&gt;There is this idea that I have for this appointment booking and scheduling. If you've been following me, you'd remember I created an &lt;a href="https://dev.to/elijahtrillionz/building-a-project-with-javascript-objects-1dn"&gt;appointment booking app with purely JavaScript Accessors&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I wanted to use it with this API, but after lots of review and sketching, I saw that using the API seems like not using any API at all.&lt;/p&gt;

&lt;p&gt;What I intended to do was have a Spurwing account that can handle multiple accounts (as seen in &lt;a href="https://github.com/Elijah-trillionz/appointment-booking-app"&gt;this project&lt;/a&gt;). After all of my sketching, the one question I kept asking myself is 'What's the role of Spurwing?'.&lt;/p&gt;

&lt;p&gt;I may make it just for practice but not for production, it's best to create an individual Spurwing account.&lt;/p&gt;

&lt;p&gt;Alright, that's it for today. If you found this article helpful, kindly like and share. If you'd like to say another article from me, please do &lt;a href="https://buymeacoffee.com"&gt;buy a coffee&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>webdev</category>
      <category>discuss</category>
      <category>programming</category>
    </item>
    <item>
      <title>I’m a release manager for PHP 8.1!</title>
      <author>Ben Ramsey</author>
      <pubDate>Sun, 09 May 2021 18:58:14 +0000</pubDate>
      <link>https://dev.to/ramsey/i-m-a-release-manager-for-php-8-1-24i2</link>
      <guid>https://dev.to/ramsey/i-m-a-release-manager-for-php-8-1-24i2</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;My permanent blog at &lt;a href="https://benramsey.com"&gt;benramsey.com&lt;/a&gt; is in a state where I am unable to update it. It’s a long story that involves versions of Ruby gems removed from the repository, trapping me in a tangled web of &lt;a href="https://jekyllrb.com"&gt;Jekyll&lt;/a&gt; dependency hell, and I haven’t had the stomach to unravel it. In the meantime, I’ll be posting here at &lt;a href="https://dev.to/ramsey"&gt;dev.to/ramsey&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Last year, I tossed my hat in the ring to volunteer as a release manager for PHP 8.0, but I lost the vote to &lt;a href="https://github.com/carusogabriel"&gt;Gabriel Caruso&lt;/a&gt;, who has shown himself to be a very capable RM for the 8.0 series (congrats, Gabriel, and great work!). This year, when &lt;a href="https://externals.io/message/113334"&gt;Sara announced the RM selection process&lt;/a&gt; for PHP 8.1, I almost decided against volunteering, but I finally decided to go for it, and I’m glad I did.&lt;/p&gt;

&lt;p&gt;Each set of release managers is usually comprised of a veteran RM and a rookie. This year, when &lt;a href="https://twitter.com/krakjoe"&gt;Joe Watkins&lt;/a&gt; volunteered as the veteran RM, he asked to take on two rookies. As a result, &lt;a href="https://github.com/patrickallaert"&gt;Patrick Allaert&lt;/a&gt; and I were &lt;a href="https://wiki.php.net/todo/php81"&gt;both selected as rookie RMs for the 8.1 series&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;PHP release managers manage the release process, create a roadmap for the release, facilitate discussions and decisions about what goes into a release, package the releases, etc. It’s a commitment of about three-and-a-half years, as they shepherd their minor version from alpha to beta to RC to GA to active support to security support and, finally, end-of-life. The &lt;a href="https://www.php.net/supported-versions.php"&gt;supported versions&lt;/a&gt; page at php.net provides a good overview of this cycle.&lt;/p&gt;

&lt;p&gt;You can read more about the PHP release process here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.php.net/rfc/releaseprocess"&gt;Request for Comments: Release Process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/php/php-src/blob/master/docs/release-process.md"&gt;PHP release process&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Additionally, &lt;a href="https://twitter.com/shocm"&gt;Eric Van Johnson&lt;/a&gt; has published a three-part interview in &lt;em&gt;php[architect]&lt;/em&gt; magazine with PHP 8.0 release managers Sara Golemon and Gabriel Caruso. They go into a lot of the specifics.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.phparch.com/article/community-corner-php-8-release-managers-interview-with-sara-golemon-and-gabriel-caruso-part-1/"&gt;Community Corner: PHP 8 Release Managers: Interview with Sara Golemon and Gabriel Caruso, Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.phparch.com/article/community-corner-php-8-release-managers-interview-with-sara-golemon-and-gabriel-caruso-part-two/"&gt;Part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.phparch.com/article/community-corner-php-8-release-managers-interview-with-sara-golemon-and-gabriel-caruso-part-three/"&gt;Part 3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you so much to everyone for entrusting me to serve as one of the release managers for  PHP 8.1! I look forward to working with Joe and Patrick over the next three-and-a-half years.&lt;/p&gt;

</description>
      <category>php</category>
    </item>
    <item>
      <title>How to Set Your Rates as a Freelancer</title>
      <author>Sam Tanoak Sycamore</author>
      <pubDate>Sun, 09 May 2021 18:24:11 +0000</pubDate>
      <link>https://dev.to/tanoaksam/how-to-set-your-rates-as-a-freelancer-15ac</link>
      <guid>https://dev.to/tanoaksam/how-to-set-your-rates-as-a-freelancer-15ac</guid>
      <description>&lt;h2&gt;
  &lt;a href="#why-do-freelancers-have-such-a-hard-time-explaining-how-they-set-their-rates"&gt;
  &lt;/a&gt;
  Why do freelancers have such a hard time explaining how they set their rates?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#because-there-are-so-many-it-depends-factors-at-play-in-every-new-project"&gt;
  &lt;/a&gt;
  Because there are so many "it depends" factors at play in every new project!
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;what's your relationship with the client?&lt;/li&gt;
&lt;li&gt;what is their budget?&lt;/li&gt;
&lt;li&gt;is there potential for more work in the future?&lt;/li&gt;
&lt;li&gt;would this deal open other doors elsewhere?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;"Value" is subjective and complicated to quantify.&lt;/p&gt;

&lt;p&gt;What is valuable - and how valuable it is - varies greatly between clients and projects.&lt;/p&gt;

&lt;p&gt;For this reason:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hourly-rates-are-not-ideal"&gt;
  &lt;/a&gt;
  Hourly rates are not ideal.
&lt;/h3&gt;

&lt;p&gt;I'm not saying don't ever accept hourly payment - get paid for your work - but the kind of work that freelancers do doesn't always equate well with this measurement of value.&lt;/p&gt;

&lt;p&gt;If I'm such a pro at what I do that it only takes me one hour to solve a problem that's costing your business $10k per month, does it make sense for me to be compensated $50 for one hour of my time?&lt;/p&gt;

&lt;p&gt;Because it sure sounds like the skill that I bring to the table is worth up to $10k here.&lt;/p&gt;

&lt;p&gt;You won't always have the power to negotiate in this way, of course.&lt;/p&gt;

&lt;p&gt;Depending on the circumstances, your client might just say "we have $1000 to spend on this, what can you do with that?"&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#youre-going-to-have-to-learn-the-hard-way-how-to-estimate-your-projects"&gt;
  &lt;/a&gt;
  You're going to have to learn - the hard way - how to estimate your projects.
&lt;/h3&gt;

&lt;p&gt;Nobody can do this step for you.&lt;/p&gt;

&lt;p&gt;And the only way you can learn how to do it, is to do it.&lt;/p&gt;

&lt;p&gt;You will make mistakes.&lt;/p&gt;

&lt;p&gt;That's ok! Chalk 'em up to learning experiences.&lt;/p&gt;

&lt;p&gt;Never cut corners or compromise on quality just because you miscalculated.&lt;/p&gt;

&lt;p&gt;Scope creep is something else altogether - if the client asks for more stuff, they have to sign a new contract outlining the new scope of the project, including the new fees they will incur.&lt;/p&gt;

&lt;p&gt;But if you accidentally end up paying yourself minimum wage because you bit off more than you could chew - it's still always in your best interest to deliver the best possible product.&lt;/p&gt;

&lt;p&gt;To come up with an estimate or a proposal for a project, you will need to consider:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;how much you would like to pay yourself&lt;/li&gt;
&lt;li&gt;how much you might need to spend on materials, research, outsourcing&lt;/li&gt;
&lt;li&gt;how much you will owe in taxes&lt;/li&gt;
&lt;li&gt;how much time it will take&lt;/li&gt;
&lt;li&gt;what is the going rate for this service&lt;/li&gt;
&lt;li&gt;what is the value to the client&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Those last 3 are worth considering in greater detail.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-time-it-takes"&gt;
  &lt;/a&gt;
  The Time it Takes
&lt;/h3&gt;

&lt;p&gt;Remember when I said don't bill hourly?&lt;/p&gt;

&lt;p&gt;Well, it's still good to have at least a fuzzy idea of how much you'd like to earn per hour for your services.&lt;/p&gt;

&lt;p&gt;Freelancing is all about optimizing that equation - getting paid more, in exchange for fewer hours.&lt;/p&gt;

&lt;p&gt;That's possible through experience, expertise and a solid reputation.&lt;/p&gt;

&lt;p&gt;When I built my first website for a client, I only had a rough idea of how much time it would take - I figured 10-20 hours, hopefully not more.&lt;/p&gt;

&lt;p&gt;At $1200, this time investment would earn me $60-120/hr.&lt;/p&gt;

&lt;p&gt;I would've been happy with any number in that range!&lt;/p&gt;

&lt;p&gt;In the end I walked away with about $75/hr before taxes. Not bad!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-going-rate"&gt;
  &lt;/a&gt;
  The Going Rate
&lt;/h3&gt;

&lt;p&gt;This will be your primary limiting factor, depending on your services and your clientele.&lt;/p&gt;

&lt;p&gt;When I was a music journalist, I was most commonly paid in free concert tickets and early access to new albums.&lt;/p&gt;

&lt;p&gt;As a musician - mainly just free beer.&lt;/p&gt;

&lt;p&gt;But if I knew enough about marketing to write something interesting in that field - there are publications that would happily pay me four or five figures for content that would be worth pennies in other industries.&lt;/p&gt;

&lt;p&gt;If nobody pays more than $200 for the thing you do, you're going to have a really hard time convincing anyone to pay you $500, let alone $2000.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-value-to-the-client"&gt;
  &lt;/a&gt;
  The Value to the Client
&lt;/h3&gt;

&lt;p&gt;This is the true X-factor in the equation.&lt;/p&gt;

&lt;p&gt;But the only way you can tap into it is if you're diligent about doing your research into the client and the market.&lt;/p&gt;

&lt;p&gt;If the website you build for a local business owner could generate $100k in new sales this year -&lt;/p&gt;

&lt;p&gt;You should be compensated accordingly.&lt;/p&gt;

&lt;p&gt;It doesn't matter how long it takes. &lt;/p&gt;

&lt;p&gt;What matters is how valuable your service is to the company.&lt;/p&gt;

&lt;p&gt;That's tricky to quantify, as I mentioned before.&lt;/p&gt;

&lt;p&gt;Before the work ever begins, then -&lt;/p&gt;

&lt;p&gt;Your job is to &lt;em&gt;demonstrate&lt;/em&gt; the value that you can offer.&lt;/p&gt;

&lt;p&gt;It all comes down to knowing your worth, and knowing that what you do is valuable.&lt;/p&gt;

&lt;p&gt;Don't know it yet?&lt;/p&gt;

&lt;p&gt;That's fine, just get started - the confidence will follow.&lt;/p&gt;

&lt;p&gt;And that's about as concise as I can be when it comes to explaining how I price freelancing projects!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#if-you-enjoyed-this-piece-and-you-want-to-keep-up-with-my-work-you-can-sign-up-for-my-email-newsletter-through-this-link-i-promise-to-make-every-email-something-you-will-be-excited-to-open"&gt;
  &lt;/a&gt;
  &lt;strong&gt;If you enjoyed this piece and you want to keep up with my work, you can &lt;a href="https://buttondown.email/samuelsycamore"&gt;sign up for my email newsletter through this link&lt;/a&gt;. I promise to make every email something you will be excited to open!&lt;/strong&gt;
&lt;/h2&gt;

</description>
    </item>
    <item>
      <title>What's the last project you contributed to?</title>
      <author>Madza</author>
      <pubDate>Sun, 09 May 2021 17:47:14 +0000</pubDate>
      <link>https://dev.to/madza/what-s-the-last-project-you-contributed-to-2kni</link>
      <guid>https://dev.to/madza/what-s-the-last-project-you-contributed-to-2kni</guid>
      <description>&lt;p&gt;Excluding your own projects, could you please share the last open-source project that you contributed to?&lt;/p&gt;

&lt;p&gt;Exciting to discover some new, awesome repositories.&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>github</category>
      <category>opensource</category>
    </item>
    <item>
      <title>How to Search Through Different Social Media Platforms with Node.js</title>
      <author>Shahed Nasser</author>
      <pubDate>Sun, 09 May 2021 17:46:30 +0000</pubDate>
      <link>https://dev.to/shahednasser/how-to-search-through-different-social-media-platforms-with-node-js-4n2n</link>
      <guid>https://dev.to/shahednasser/how-to-search-through-different-social-media-platforms-with-node-js-4n2n</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was originally posted on &lt;a href="https://blog.shahednasser.com/how-to-search-through-different-social-media-platforms-with-node-js/"&gt;my personal blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In this tutorial, we'll go over how to search through each of Twitter, Instagram, Tumblr, and Pinterest. We'll be setting up a server with &lt;code&gt;express&lt;/code&gt; with a simple setup just to demonstrate the functionalities.&lt;/p&gt;

&lt;p&gt;You can find the code for this tutorial in &lt;a href="https://github.com/shahednasser/social-search"&gt;this GitHub repository&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#project-setup"&gt;
  &lt;/a&gt;
  Project Setup
&lt;/h2&gt;

&lt;p&gt;Create a directory for the project then switch to it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;social-search
&lt;span class="nb"&gt;cd &lt;/span&gt;social-search
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, let's initialize it with NPM:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can enter any information that's relevant for you, or just leave the default values.&lt;/p&gt;

&lt;p&gt;Once done, we'll install some initial packages we'll need:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i express axios dotenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Where &lt;code&gt;express&lt;/code&gt; is for our server, &lt;code&gt;axios&lt;/code&gt; is to send requests which we'll use with some of the social media platforms, and &lt;code&gt;dotenv&lt;/code&gt; which we'll use to store necessary tokens in &lt;code&gt;.env&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then, create a file called &lt;code&gt;index.js&lt;/code&gt; in the root with the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)()&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;started server for social search!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create a simple server that listens on port 3000. Last thing we'll need to do to start our server is add a &lt;code&gt;start&lt;/code&gt; script in &lt;code&gt;package.json&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node index.js"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it! To test our server, let's run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If everything worked correctly, you'll see a message saying "started server for social search!"&lt;/p&gt;

&lt;p&gt;Now, we're ready to start searching through social media.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#searching-twitter"&gt;
  &lt;/a&gt;
  Searching Twitter
&lt;/h2&gt;

&lt;p&gt;To search Twitter, you first need to &lt;a href="https://developer.twitter.com/en/portal/apps/new"&gt;create a new app&lt;/a&gt; on twitter's developer portal. Depending on whether this is your first app or not, you might need to enter some extra information, but generally, you just need to enter the name of the app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QMMrts_S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6htg6b2wngwl09rh25by.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QMMrts_S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6htg6b2wngwl09rh25by.png" alt="App Name"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, you will be given the API key and the API secret. Make sure to copy them and save them somewhere.&lt;/p&gt;

&lt;p&gt;Once the app is created, go to "Keys and Tokens" tab on the app's page. Under "Authentication Tokens", click on "Generate" for Access Token and Secret. You will be given two extra keys that you need to copy and save somewhere.&lt;/p&gt;

&lt;p&gt;Back to our project, create &lt;code&gt;.env&lt;/code&gt; file which will hold the keys:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;TWITTER_API_KEY=
TWITTER_API_SECRET=
TWITTER_ACCESS_TOKEN=
TWITTER_ACCESS_TOKEN_SECRET=
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;where the first 2 keys are the first 2 you received, and the second 2 are the ones you generated.&lt;/p&gt;

&lt;p&gt;To access Twitter's API easily, we'll use the library &lt;a href="https://github.com/FeedHive/twitter-api-client"&gt;twitter-api-client&lt;/a&gt;. It provides an easy to use interface to access Twitter's APIs. We need to install it first with NPM:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i twitter-api-client
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, go to &lt;code&gt;index.js&lt;/code&gt;, require the library and initialize the Twitter client:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;TwitterClient&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;twitter-api-client&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;TwitterClient&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;twitterClient&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;TwitterClient&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;apiKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TWITTER_API_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;apiSecret&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TWITTER_API_SECRET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;accessToken&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TWITTER_ACCESS_TOKEN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;accessTokenSecret&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TWITTER_ACCESS_TOKEN_SECRET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since we've added at the beginning of the file require('dotenv').config(), we can now use the keys we added in .env through process.env.&lt;/p&gt;

&lt;p&gt;Next, we'll add a new GET route that takes query parameter, which we'll use to search through Twitter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/twitter/:query&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside the callback function for this route, we need to search through twitter for tweets including this given query. To search tweets, we'll use the &lt;code&gt;twitterClient.tweets.search&lt;/code&gt; which takes as a parameter an object that includes various properties. The one we'll use is &lt;code&gt;q&lt;/code&gt; which we'll pass the query:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;

&lt;span class="nx"&gt;twitterClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tweets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;q&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;An error occurred, please try again later.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When we get a response, we're just sending it back. If an error occurs, we're printing it to the console and sending a status 500 response.&lt;/p&gt;

&lt;p&gt;That's it! To test it out, start the server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then go to the route we specified, passing it any query you want. For example, localhost:3000/twitter/cats. If everything is done correctly, you should see a JSON object that holds an array of tweets.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---va42wOj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kwh6e3zp306gljskt9lj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---va42wOj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kwh6e3zp306gljskt9lj.png" alt="Twitter Response"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can look at the &lt;a href="https://github.com/FeedHive/twitter-api-client/blob/main/REFERENCES.md#twitterclienttweetssearchparameters"&gt;documentation for twitter-api-client&lt;/a&gt; to understand more the options you can pass, the response, etc...&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#searching-instagram"&gt;
  &lt;/a&gt;
  Searching Instagram
&lt;/h2&gt;

&lt;p&gt;Instagram APIs are a mess. Long story short, now there's &lt;a href="https://developers.facebook.com/docs/instagram-api/guides/hashtag-search/"&gt;Hashtag Search&lt;/a&gt; that can be accessed through &lt;a href="https://developers.facebook.com/docs/instagram-api"&gt;Instagram Graph API&lt;/a&gt;. However, this only allows you to search through posts of a certain user, not search in general. Not to mention that this API needs you to access a bunch of endpoints in order to finally get the posts with the hashtag you're querying.&lt;/p&gt;

&lt;p&gt;There's another &lt;strong&gt;unofficial&lt;/strong&gt; way to search through Instagram. There's an endpoint you can find at &lt;a href="https://www.instagram.com/explore/tags/test/?__a=1"&gt;https://www.instagram.com/explore/tags/KEYWORD/?__a=1&lt;/a&gt;, where when you replace KEYWORD with the query, you'll get a JSON response with all the posts using the hashtag.&lt;/p&gt;

&lt;p&gt;We'll create a new endpoint that allows us to search through Instagram:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/instagram/:query&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside the callback, we'll use &lt;code&gt;axios&lt;/code&gt; to send a GET request to the endpoint we mentioned above, then send back the response once received:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;

&lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://www.instagram.com/explore/tags/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/?__a=1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;An error occurred, please try again later.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it. To test it out, start the server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, go to the route we just created, passing it the query you want. For example, localhost:3000/instagram/cats. If everything was done correctly, the response will be a JSON object with the posts using the hashtag cats.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#searching-tumblr"&gt;
  &lt;/a&gt;
  Searching Tumblr
&lt;/h2&gt;

&lt;p&gt;To search through Tumblr, first &lt;a href="https://www.tumblr.com/oauth/apps"&gt;register a new application&lt;/a&gt;. You'll need a tumblr account to do that. You'll have to enter information like Application name, Application URL (you can just enter &lt;a href="http://example.com"&gt;http://example.com&lt;/a&gt;), etc...&lt;/p&gt;

&lt;p&gt;Once done, you'll be redirected to the Applications page and it will show you the newly created app. You can see the OAuth Consumer Key. Copy it and add it to &lt;code&gt;.env&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;TUMBLR_CONSUMER_KEY=
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To search posts by tags, we can use the &lt;a href="https://www.tumblr.com/docs/en/api/v2#tagged--get-posts-with-tag"&gt;&lt;code&gt;/tagged&lt;/code&gt; endpoint&lt;/a&gt;. We'll pass it the API key, which is the Consumer key we just added to &lt;code&gt;.env&lt;/code&gt;, and the tag which is the query we're searching.&lt;/p&gt;

&lt;p&gt;First, we'll create the new GET route:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/tumblr/:query&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As usual, we're creating a route that takes a query as a parameter.&lt;/p&gt;

&lt;p&gt;Then, we'll send a GET request to Tumblr's &lt;code&gt;/tagged&lt;/code&gt; endpoint using &lt;code&gt;axios&lt;/code&gt; passing it the parameter as explained above:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://api.tumblr.com/v2/tagged?tag=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;amp;api_key=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TUMBLR_CONSUMER_KEY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;An error occurred, please try again later.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As before, we're just sending back the response once received.&lt;/p&gt;

&lt;p&gt;To test it out, start the server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, go to the route we created passing it the query you want. For example, localhost:3000/tumblr/cats. If everything is working correctly, the response will be a JSON response with an array of posts using the tag cats.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#searching-pinterest"&gt;
  &lt;/a&gt;
  Searching Pinterest
&lt;/h2&gt;

&lt;p&gt;Pinterest doesn't have an API that allows you to search through their pins. To search through Pinterest, we'll have to use &lt;a href="https://developers.google.com/custom-search/v1/overview"&gt;Google's Custom Search JSON API&lt;/a&gt;. This API allows you to retreive search results in JSON format. We'll use it to search through Pinterest. It's not optimal, but at the moment of writing this, it's the easiest way. You should note that this API provides 100 queries per day for free, then you'll be billed 5$ for every additional 1000 query.&lt;/p&gt;

&lt;p&gt;First, you'll need to get an &lt;a href="https://developers.google.com/custom-search/v1/overview#api_key"&gt;API key&lt;/a&gt; to use. Just click the "Get a Key" button. It will ask you to create a project or use an existing one, then you'll be provided with an API key. Copy the key and add it to &lt;code&gt;.env&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;CUSTOM_SEARCH_API_KEY=
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, you'll need to create a "Programmable Search". You can do that here. You'll need to enter the URL of the site you'll be searching. In our case it will be pinterest.com. You can also change the language and Name of the Programmable Search. Once done, click Create. It will take you to a page that will show you a bunch of options. Choose "Control Panel" button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JXcPPH13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28fwx6nrxyxgrryhx5wb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JXcPPH13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28fwx6nrxyxgrryhx5wb.png" alt="Control Panel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you're on the Control Panel, copy the "Search Engine ID" and add it to &lt;code&gt;.env&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;CUSTOM_SEARCH_CX=
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We'll need to pass this as a parameter when we send our requests to the API.&lt;/p&gt;

&lt;p&gt;Let's start by creating the GET route to query Pinterest:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/pinterest/:query&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;


&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we'll send a request to the Custom Search API endpoint passing it the API key, CX which is the Search Engine ID, and the query we're searching:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://www.googleapis.com/customsearch/v1?key=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CUSTOM_SEARCH_API_KEY&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; 
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;amp;cx=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CUSTOM_SEARCH_CX&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;amp;q=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;An error occurred, please try again later.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As usual, we're just sending back the response received.&lt;/p&gt;

&lt;p&gt;To test it out, start the server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, go to the route we just created, passing it a query. For example, localhost:3000/pinterest/cats. You'll see a JSON array, each object having the title of the pin, the link to it, and other information.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this tutorial, we went over searching Twitter, Instagram, Tumblr, and Pinterest. In the next one, we'll go through searching more social media platforms!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Have you invested in crypto and did it pay off?</title>
      <author>Madza</author>
      <pubDate>Sun, 09 May 2021 17:38:47 +0000</pubDate>
      <link>https://dev.to/madza/have-you-bought-any-crypto-1j9a</link>
      <guid>https://dev.to/madza/have-you-bought-any-crypto-1j9a</guid>
      <description>&lt;p&gt;Cryptocurrency is a digital currency that can be used to buy goods and services but uses an online ledger with strong cryptography to secure online transactions.&lt;/p&gt;

&lt;p&gt;According to &lt;a href="https://coinmarketcap.com/"&gt;CoinMarketCap&lt;/a&gt;, more than 6,700 different cryptocurrencies are traded publicly and the total value of all cryptocurrencies is more than $2.2 trillion.&lt;/p&gt;

&lt;p&gt;Have you invested in crypto and did it pay off?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>crypto</category>
    </item>
    <item>
      <title>Publishing Python Apps at Anaconda and further Automation</title>
      <author>Niklas Tiede</author>
      <pubDate>Sun, 09 May 2021 17:37:16 +0000</pubDate>
      <link>https://dev.to/niklastiede/publishing-python-apps-at-anaconda-and-further-automation-10a0</link>
      <guid>https://dev.to/niklastiede/publishing-python-apps-at-anaconda-and-further-automation-10a0</guid>
      <description>&lt;p&gt;Heya fellows,&lt;/p&gt;

&lt;p&gt;The code of this post can be found on Github (see &lt;a href="https://github.com/NiklasTiede/tinyHTTPie/tree/9-Publishing-at-Anaconda"&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;When a &lt;code&gt;setup.py&lt;/code&gt; file was already created, it's pretty simple to go a step further and create an &lt;a href="https://anaconda.org"&gt;Anaconda&lt;/a&gt; package. Anaconda packages store the necessary metadata within a &lt;code&gt;meta.yaml&lt;/code&gt; file but when a &lt;code&gt;setup.py&lt;/code&gt; file was already created its data can be easily imported by jinja2 templating.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="pi"&gt;{&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="nv"&gt;set data = load_setup_py_data() %&lt;/span&gt;&lt;span class="pi"&gt;}&lt;/span&gt;

&lt;span class="na"&gt;package&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;tihttp'&lt;/span&gt;
  &lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;data&lt;/span&gt;&lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;version'&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt; &lt;span class="pi"&gt;}}&lt;/span&gt;

&lt;span class="na"&gt;source&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;..&lt;/span&gt;

&lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;number&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
  &lt;span class="na"&gt;entry_points&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;{&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="nv"&gt;for entry_point in data&lt;/span&gt;&lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;entry_points'&lt;/span&gt;&lt;span class="pi"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;console_scripts'&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="pi"&gt;}&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="pi"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;entry_point&lt;/span&gt; &lt;span class="pi"&gt;}}&lt;/span&gt;
    &lt;span class="pi"&gt;{&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="nv"&gt;endfor %&lt;/span&gt;&lt;span class="pi"&gt;}&lt;/span&gt;
  &lt;span class="na"&gt;script&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;python -m pip install --no-deps --ignore-installed .&lt;/span&gt;

&lt;span class="na"&gt;requirements&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;python&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;pip&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;setuptools&lt;/span&gt;

  &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;python&lt;/span&gt;
    &lt;span class="pi"&gt;{&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="nv"&gt;for dep in data&lt;/span&gt;&lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;install_requires'&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="pi"&gt;}&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="pi"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;dep.lower()&lt;/span&gt; &lt;span class="pi"&gt;}}&lt;/span&gt;
    &lt;span class="pi"&gt;{&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="nv"&gt;endfor %&lt;/span&gt;&lt;span class="pi"&gt;}&lt;/span&gt;

&lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;imports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="pi"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;data&lt;/span&gt;&lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;name'&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt; &lt;span class="pi"&gt;}}&lt;/span&gt;
  &lt;span class="na"&gt;source_files&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;tests&lt;/span&gt;
  &lt;span class="na"&gt;requires&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;{&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="nv"&gt;for test_dep in data&lt;/span&gt;&lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;extras_require'&lt;/span&gt;&lt;span class="pi"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;dev'&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="pi"&gt;}&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="pi"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;test_dep.lower()&lt;/span&gt; &lt;span class="pi"&gt;}}&lt;/span&gt;
    &lt;span class="pi"&gt;{&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="nv"&gt;endfor %&lt;/span&gt;&lt;span class="pi"&gt;}&lt;/span&gt;
  &lt;span class="na"&gt;commands&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;pytest tests&lt;/span&gt;

&lt;span class="na"&gt;about&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;home&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;data&lt;/span&gt;&lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;url'&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt; &lt;span class="pi"&gt;}}&lt;/span&gt;
  &lt;span class="na"&gt;license&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;data&lt;/span&gt;&lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;license'&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt; &lt;span class="pi"&gt;}}&lt;/span&gt;
  &lt;span class="na"&gt;summary&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;data&lt;/span&gt;&lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;description'&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt; &lt;span class="pi"&gt;}}&lt;/span&gt;
  &lt;span class="na"&gt;doc_source_url&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;data&lt;/span&gt;&lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;url'&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt; &lt;span class="nv"&gt;+ '/blob/master/README.md'&lt;/span&gt; &lt;span class="pi"&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can build the package.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ conda build .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The generated file &lt;code&gt;tihttp-0.1.0-py37_0.tar.bz2&lt;/code&gt; can be found within the &lt;code&gt;anaconda3/conda-build/linux-64&lt;/code&gt; directory. To upload the package to the anaconda repository we have to register and then we can use the &lt;code&gt;anaconda upload&lt;/code&gt; command. The package was uploaded to your channel and is now ready for distribution! 😙&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ anaconda upload home/niklas/anaconda3/conda-build/linux-64/tihttp-0.1.0-py37_0.tar.bz2

$ conda install -c niklastiede tihttp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But building and uploading packages for different Python interpreter versions and different operating systems is tedious. This work can be automated by a bash script:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;~/anaconda3/bin:&lt;span class="nv"&gt;$PATH&lt;/span&gt;
&lt;span class="nv"&gt;pkg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'tihttp'&lt;/span&gt;
&lt;span class="nv"&gt;array&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt; 3.6 3.7 3.8 3.9 &lt;span class="o"&gt;)&lt;/span&gt;


&lt;span class="c"&gt;# delete old built packages&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/conda-bld/ &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then
    &lt;/span&gt;&lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/conda-bld/
&lt;span class="k"&gt;fi
for &lt;/span&gt;i &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/anaconda3/conda-bld/linux-64/&lt;span class="nv"&gt;$pkg&lt;/span&gt;&lt;span class="k"&gt;*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do
    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;
    &lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;
&lt;span class="k"&gt;done
&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Deleting old conda packages done!"&lt;/span&gt;


&lt;span class="c"&gt;# building conda packages&lt;/span&gt;
&lt;span class="k"&gt;for &lt;/span&gt;i &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;do
    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;
    conda build &lt;span class="nt"&gt;--py&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;done
&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Building conda packages done!"&lt;/span&gt;


&lt;span class="c"&gt;# converting conda packages to other platforms&lt;/span&gt;
&lt;span class="nv"&gt;platforms&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt; osx-64 linux-32 linux-64 win-32 win-64 &lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for &lt;/span&gt;file &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/anaconda3/conda-bld/linux-64/&lt;span class="nv"&gt;$pkg&lt;/span&gt;&lt;span class="k"&gt;*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do
    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$file&lt;/span&gt;
    conda convert &lt;span class="nt"&gt;--platform&lt;/span&gt; all &lt;span class="nv"&gt;$file&lt;/span&gt;  &lt;span class="nt"&gt;-o&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/conda-bld/
    &lt;span class="k"&gt;for &lt;/span&gt;platform &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;platforms&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
    &lt;span class="k"&gt;do
        &lt;/span&gt;conda convert &lt;span class="nt"&gt;--platform&lt;/span&gt; &lt;span class="nv"&gt;$platform&lt;/span&gt; &lt;span class="nv"&gt;$file&lt;/span&gt;  &lt;span class="nt"&gt;-o&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/conda-bld/
    &lt;span class="k"&gt;done
done
&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"converting packages to other platforms done!"&lt;/span&gt;


&lt;span class="c"&gt;# uploading packages&lt;/span&gt;
find &lt;span class="nv"&gt;$HOME&lt;/span&gt;/conda-bld/&lt;span class="k"&gt;**&lt;/span&gt;/&lt;span class="nv"&gt;$pkg&lt;/span&gt;&lt;span class="k"&gt;*&lt;/span&gt;.tar.bz2 | &lt;span class="k"&gt;while &lt;/span&gt;&lt;span class="nb"&gt;read &lt;/span&gt;file
&lt;span class="k"&gt;do
    &lt;/span&gt;anaconda upload &lt;span class="nv"&gt;$file&lt;/span&gt;
&lt;span class="k"&gt;done
&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Uploading conda packages done!"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead of automating the build process locally we could instead use this nice github action &lt;a href="https://github.com/marketplace/actions/publish-conda"&gt;Publish Conda&lt;/a&gt;! Here's the code snippet for the workflow:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;publish_conda&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;release&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;types&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;published&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;publish&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;publish-to-conda&lt;/span&gt;
      &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;fcakyon/conda-publish-action@v1.3&lt;/span&gt;
      &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;subdir&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;conda'&lt;/span&gt;
        &lt;span class="na"&gt;anacondatoken&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ANACONDA_TOKEN }}&lt;/span&gt;
        &lt;span class="na"&gt;platforms&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;win&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;osx&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;linux'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The world of anaconda does a great service to the data science community and I hope that this post decreases the barrier for publishing things at anaconda. 😄 I wish you all a great time!&lt;/p&gt;

</description>
      <category>tooling</category>
      <category>devops</category>
      <category>productivity</category>
      <category>python</category>
    </item>
    <item>
      <title>Underrated React Hooks</title>
      <author>SalarC123</author>
      <pubDate>Sun, 09 May 2021 17:34:20 +0000</pubDate>
      <link>https://dev.to/salarc123/underrated-react-hooks-jek</link>
      <guid>https://dev.to/salarc123/underrated-react-hooks-jek</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-are-custom-hooks"&gt;
  &lt;/a&gt;
  What Are Custom Hooks 👐
&lt;/h1&gt;

&lt;p&gt;Considering that much of the react fanbase has switched over to using functional components, there has been an increased necessity for hooks, so today, I'll tell you about 3 custom hooks that I feel don’t get the attention they deserve. &lt;/p&gt;

&lt;p&gt;But first, what really is a custom hook and how do you make one? A custom hook is "a JavaScript function whose name starts with 'use' and that may call other Hooks" according to the React docs, but they typically return a value and a function that can change that value as well. For example, the &lt;code&gt;setState&lt;/code&gt; hook:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;initialValue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;returns &lt;code&gt;state&lt;/code&gt; and &lt;code&gt;setState&lt;/code&gt; when destructured. So, when making your own custom hook, you would do the same. It’s actually really simple. And when making your own hook, you can utilize previously created hooks and add more functionality. This is how the useLocalStorage hook below is made.&lt;/p&gt;

&lt;p&gt;Custom hooks provide a layer of abstraction that make your code easier to read and can boost your productivity. I would advise that you try making your own in your next React project because they can be used to add any functionality. For example, the three hooks I list below allow you to use local storage, toggle between light and dark mode, and manipulate the browser clipboard.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#uselocalstorage"&gt;
  &lt;/a&gt;
  useLocalStorage 📍
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xGv4ijmQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3dxrjmd7vgx1jk30c44f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xGv4ijmQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3dxrjmd7vgx1jk30c44f.png" alt="undraw_Memory_storage_reh0"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;thanks to &lt;a href="https://usehooks.com"&gt;usehooks.com&lt;/a&gt; and &lt;a href="https://www.youtube.com/watch?v=6ThXsUwLWvc"&gt;Web Dev Simplified&lt;/a&gt; for this one&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you’re unfamiliar with the localStorage API, it works very similar to &lt;em&gt;cookies&lt;/em&gt; in that it lets you save user data in the browser so that it’s not lost when one refreshes the page or closes the website. This could be very helpful for saving a user’s palettes on a color palette website without forcing them to sign up for example. In localStorage, data is stored in a JSON format, so you need a key and value representing the data.&lt;/p&gt;

&lt;p&gt;The useLocalStorage hook is basically the useState hook but each state will also be saved to localStorage. A practical application of this is saving a user's current song and saved songs which I did when making a personal music player. In the code below which I pulled from my project, you can see that I just built upon the useState hook:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useLayoutEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;useLocalStorage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;useLayoutEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;

    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let me explain the parts of this snippet:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;useLocalStorage(key, value)&lt;/code&gt;&lt;/strong&gt; - Similarly to useState, this hook will take in the initial value but it will also require a key &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;const [state, setState] = useState(value)&lt;/code&gt;&lt;/strong&gt; - initializing the state with the value parameter&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;useLayoutEffect(...)&lt;/code&gt;&lt;/strong&gt; - there are two useEffects used, but this first one is used to grab the items from localStorage, and since there are no dependencies, it only runs once on the mounting of the component. I utilized useLayoutEffect because it runs before the component is mounted rather than after. This prevents the problem of the content rendering the default data and then changing to the localStorage data one second later. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;useEffect(...)&lt;/code&gt;&lt;/strong&gt; - the second useEffect is used to set the new state to localStorage, and has the state as a dependency so that it saves to localStorage upon each change of the state. Read &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage"&gt;this&lt;/a&gt; to learn more about localStorage methods such as setItem and getItem which I used above&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;return [state, setState]&lt;/code&gt;&lt;/strong&gt; - this is the part that establishes the function as a hook. You can replace all your calls to setState with this function now because it can also be destructured in the same way. You just need to add the key as a first parameter&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#usedarkmode"&gt;
  &lt;/a&gt;
  useDarkMode 🌕🌗🌑
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F9Hz7F4P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p7q9ej9xbrdvvvgxwz6g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F9Hz7F4P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p7q9ej9xbrdvvvgxwz6g.png" alt="dark-mode-5771054_1280"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;In the modern day, dark mode is essential for any portfolio website, so why not create a reusable hook that simplifies the process? &lt;/p&gt;

&lt;p&gt;For this hook, I am not going to show the code that makes the hook because it's a little more advanced, but you can check it out &lt;a href="https://github.com/donavon/use-dark-mode/blob/develop/src/index.js"&gt;here&lt;/a&gt;. Nonetheless, I will still show you how to use it once it has been defined. This hook actually returns an object with the value and the functions required to toggle, enable, and disable dark mode, but it's still the same concept just written in a different way. You will need to write a little CSS to configure how your light mode and dark mode will look, but the toggling can be handled by the hook.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;useDarkMode&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use-dark-mode&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DarkModeToggle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;darkMode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useDarkMode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;darkMode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;disable&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="err"&gt;☀&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;checkbox&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;checked&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;darkMode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;darkMode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;darkMode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enable&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="err"&gt;☾&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Code explanation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;const darkMode = useDarkMode(false)&lt;/code&gt;&lt;/strong&gt; - the "false" passed to the hook specifies that it will be in light mode by default&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;\&amp;lt;button type="button" onClick={darkMode.disable}&amp;gt;&lt;/code&gt;&lt;/strong&gt; - since the return value of the hook is an object, you can call darkMode.disable to change the state&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;\&amp;lt;input type="checkbox" checked={darkMode.value} onChange={darkMode.toggle} /&amp;gt;&lt;/code&gt;&lt;/strong&gt; - the value returned by the hook is either true or false, so you can set checkboxes or toggles to the right mode with the "checked" attribute&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#useclippy"&gt;
  &lt;/a&gt;
  useClippy 📋
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B77XoXEr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8le6b9qh6xhw76nphx1e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B77XoXEr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8le6b9qh6xhw76nphx1e.png" alt="undraw_photocopy_gj0t"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;useClippy is a hook that allows you to view your copy/paste clipboard and copy items to the clipboard. This can be used to make a button which copies a URL when clicked for example.&lt;/p&gt;

&lt;p&gt;Again, with this hook, I will only show the code used to apply it, but you can view the actual hook &lt;a href="https://github.com/CharlesStover/use-clippy/blob/master/src/use-clippy.ts"&gt;here&lt;/a&gt; (written in Typescript though)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;useClippy&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use-clippy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;clipboard&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setClipboard&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useClippy&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;
        &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Your clipboard contains: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;clipboard&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;Read&lt;/span&gt; &lt;span class="nx"&gt;my&lt;/span&gt; &lt;span class="nx"&gt;clipboard&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;
        &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;setClipboard&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Random number: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;Copy&lt;/span&gt; &lt;span class="nx"&gt;something&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Code explanation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;const [clipboard, setClipboard] = useClippy();&lt;/code&gt;&lt;/strong&gt; - useClippy is destructured the same way as useState but returns the last thing on the clipboard and a function to save to the clipboard&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;button&amp;gt;...&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/strong&gt; - the buttons grab the last thing from the clipboard and set new items to the clipboard on click (pretty self-explanatory)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion 👊
&lt;/h1&gt;

&lt;p&gt;Feel free to leave any custom hooks you've found or made that didn't make it on this list.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Weekly Digest 18/2021 - Top of the Week</title>
      <author>Marco Biedermann</author>
      <pubDate>Sun, 09 May 2021 17:32:53 +0000</pubDate>
      <link>https://dev.to/worldindev/weekly-digest-18-2021-top-of-the-week-28b0</link>
      <guid>https://dev.to/worldindev/weekly-digest-18-2021-top-of-the-week-28b0</guid>
      <description>&lt;p&gt;Welcome to my Weekly Digest #18 of this year.&lt;/p&gt;

&lt;p&gt;This weekly digest contains a lot of interesting and inspiring articles, videos, tweets, podcasts, and designs I consumed during this week.&lt;/p&gt;




&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#giveaway"&gt;
  &lt;/a&gt;
  🎉 Giveaway
&lt;/h2&gt;

&lt;p&gt;We are giving away any course you need on Udemy. Any price any course.&lt;br&gt;
To enter you have to do the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;👍 React to this post&lt;/li&gt;
&lt;li&gt;✉️ Subscribe to our &lt;a href="https://worldindev.ck.page"&gt;newsletter&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You will receive &lt;a href="https://dev.to/worldindev"&gt;our articles&lt;/a&gt; directly to your &lt;a href="https://worldindev.ck.page"&gt;inbox&lt;/a&gt; 📬.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#interesting-articles-to-read"&gt;
  &lt;/a&gt;
  Interesting articles to read
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#should-devtools-teach-the-css-cascade"&gt;
  &lt;/a&gt;
  Should DevTools teach the CSS cascade?
&lt;/h3&gt;

&lt;p&gt;Should browser developer tools show CSS specificity and provide additional resources?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.stefanjudis.com/blog/should-devtools-teach-the-css-cascade/"&gt;Should DevTools teach the CSS cascade?&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#say-hello-to-css-container-queries"&gt;
  &lt;/a&gt;
  Say Hello To CSS Container Queries
&lt;/h3&gt;

&lt;p&gt;Let's learn about how CSS container queries work with lots of examples and use-cases.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ishadeed.com/article/say-hello-to-css-container-queries/?ref=sidebar"&gt;Say Hello To CSS Container Queries - Ahmad Shadeed&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#all-you-need-to-know-to-move-from-commonjs-to-ecmascript-modules-in-nodejs"&gt;
  &lt;/a&gt;
  All you need to know to move from CommonJS to ECMAScript Modules in Node.js
&lt;/h3&gt;

&lt;p&gt;One of the most revolutionary features introduced as part of ECMAScript 2015 specification is modules (ESM). In April 2020, Node v14.0.0 landed without experimental modules warning. Even though it was still experimental, it felt like the right timing to adopt ESM for some toy projects and insignificant clients' work. Eventually, Node v15.3.0 arrived and marked modules implementation as stable.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pawelgrzybek.com/all-you-need-to-know-to-move-from-commonjs-to-ecmascript-modules-esm-in-node-js/"&gt;All you need to know to move from CommonJS to ECMAScript Modules (ESM) in Node.js | pawelgrzybek.com&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#super-simple-start-to-remix"&gt;
  &lt;/a&gt;
  Super Simple Start to Remix
&lt;/h3&gt;

&lt;p&gt;The simplest distraction-free version of a remix app&lt;/p&gt;

&lt;p&gt;&lt;a href="https://kentcdodds.com/blog/super-simple-start-to-remix"&gt;Super Simple Start to Remix&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#some-great-videos-i-watched-this-week"&gt;
  &lt;/a&gt;
  Some great videos I watched this week
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#dogecoin-price-analysis"&gt;
  &lt;/a&gt;
  Dogecoin Price Analysis
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/T8zUt0pV50s"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/CsEverything"&gt;Computer Science&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dependabot-version-updates-are-now-generally-available"&gt;
  &lt;/a&gt;
  Dependabot version updates are now generally available
&lt;/h3&gt;

&lt;p&gt;The big news is that Dependabot on GitHub is now generally available! It's got all the Dependency updating goodness of Dependabot Preview, but with a fully integrated GitHub experience.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/nBq1aedtTfM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/github"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-a-cpu-works-in-100-seconds"&gt;
  &lt;/a&gt;
  How a CPU Works in 100 Seconds
&lt;/h3&gt;

&lt;p&gt;Learn how the central processing unit (CPU) works in your computer. Compare performance and processor architecture between the Intel and Apple Silicon M1 chips&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/vqs_0W-MSB0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/fireship_dev"&gt;Fireship&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#filters-amp-backdrop-filters"&gt;
  &lt;/a&gt;
  Filters &amp;amp; Backdrop Filters
&lt;/h3&gt;

&lt;p&gt;In this video, we take look at the new filter and backdrop-filter utilities added in Tailwind CSS v2.1.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/qGEZdGMgXL4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/tailwindlabs"&gt;Tailwind Labs&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#build-a-3d-world-in-react-with-threejs-and-react-three-fiber"&gt;
  &lt;/a&gt;
  Build a 3D World in React with ThreeJS and React Three Fiber
&lt;/h3&gt;

&lt;p&gt;This video starts with me talking about the difference between React and ReactDOM. React Three Fiber uses React to keep track of 3D objects that gets rendered in a webGL canvas via three.js . The result is the ability to code 3D environments the same way you are used to code a React Web Application. We can even add physics and animation to the 3D objects in the world. In this example we place a Box on a Plane inside a Skybox of stars.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/9ZEjSxDRIik"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/barelydaniel"&gt;Daniel Bark&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#useful-github-repositories"&gt;
  &lt;/a&gt;
  Useful GitHub repositories
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#bestwebsitesaprogrammershouldvisit"&gt;
  &lt;/a&gt;
  Best-websites-a-programmer-should-visit
&lt;/h3&gt;

&lt;p&gt;When learning CS, there are some useful sites you must know to get always informed to do your technologies even better and learn new things. Here is a non-exhaustive list of some sites you should visit.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/sdmg15"&gt;
        sdmg15
      &lt;/a&gt; / &lt;a href="https://github.com/sdmg15/Best-websites-a-programmer-should-visit"&gt;
        Best-websites-a-programmer-should-visit
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🔗 Some useful websites for programmers.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
    &lt;br&gt;
    &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/sindresorhus/awesome/main/media/logo.svg"&gt;&lt;img width="200" src="https://res.cloudinary.com/practicaldev/image/fetch/s--kIHHythx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/sindresorhus/awesome/main/media/logo.svg" alt="awesome"&gt;&lt;/a&gt;
    &lt;br&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/sdmg15/Best-websites-a-programmer-should-visit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c73606b24ca2da12a791dff378aaaf03f2cafa2ec13efba14c5c733e58591b5d/68747470733a2f2f6170692e7472617669732d63692e6f72672f73646d6731352f426573742d77656273697465732d612d70726f6772616d6d65722d73686f756c642d76697369742e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Best-websites-a-programmer-should-visit&lt;/h1&gt;
&lt;p&gt;Some useful websites for programmers.&lt;/p&gt;
&lt;p&gt;When learning CS, there are some useful sites you must know to get always informed to do your technologies even better and learn new things. Here is a non-exhaustive list of some sites you should visit. This list will get updated as soon as I can get another link, but you can also contribute by adding those you know 😉&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : &lt;a href="https://github.com/tuteng/Best-websites-a-programmer-should-visit-zh"&gt;Chinese Version&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Index&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sdmg15/Best-websites-a-programmer-should-visit/master/#when-you-get-stuck"&gt;When you get stuck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sdmg15/Best-websites-a-programmer-should-visit/master/#news"&gt;News&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sdmg15/Best-websites-a-programmer-should-visit/master/#magazines"&gt;Magazines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sdmg15/Best-websites-a-programmer-should-visit/master/#coding-practice-for-beginners"&gt;Coding practice for beginners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sdmg15/Best-websites-a-programmer-should-visit/master/#cryptocurrency"&gt;Cryptocurrency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sdmg15/Best-websites-a-programmer-should-visit/master/#for-those-who-want-to-start-a-small-project-but-cant-find-the-ideas"&gt;For those who want to start a small project but can't find the ideas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sdmg15/Best-websites-a-programmer-should-visit/master/#general-coding-advice"&gt;General Coding advice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sdmg15/Best-websites-a-programmer-should-visit/master/#coding-style"&gt;Coding Style&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sdmg15/Best-websites-a-programmer-should-visit/master/#general-tools"&gt;General Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sdmg15/Best-websites-a-programmer-should-visit/master/#interview-preparation"&gt;Interview Preparation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sdmg15/Best-websites-a-programmer-should-visit/master/#documentaries"&gt;Documentaries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sdmg15/Best-websites-a-programmer-should-visit/master/#moocs-for-learning-something-new"&gt;MOOCs for learning something new&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sdmg15/Best-websites-a-programmer-should-visit/master/#sites-related-to-your-preferred-programming-language-for-me-c"&gt;Sites related to your preferred programming language (For me C++)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sdmg15/Best-websites-a-programmer-should-visit/master/#learn-ai"&gt;Learn AI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sdmg15/Best-websites-a-programmer-should-visit/master/#seminar-research-writing-talks-etc"&gt;Seminar , research writing , talks etc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sdmg15/Best-websites-a-programmer-should-visit/master/#everything-in-one-place"&gt;Everything in one place&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sdmg15/Best-websites-a-programmer-should-visit/master/#youtube-channels"&gt;YouTube Channels&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sdmg15/Best-websites-a-programmer-should-visit/master/#good-articles"&gt;Good Articles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sdmg15/Best-websites-a-programmer-should-visit/master/#bash-and-shell-scripting"&gt;Bash and Shell scripting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sdmg15/Best-websites-a-programmer-should-visit/master/#podcasts"&gt;Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sdmg15/Best-websites-a-programmer-should-visit/master/#building-a-simple-compilerinterpreter"&gt;Building a Simple Compiler/Interpreter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sdmg15/Best-websites-a-programmer-should-visit/master/#watch-others-code"&gt;Watch others code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/sdmg15/Best-websites-a-programmer-should-visit"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#awesome-python"&gt;
  &lt;/a&gt;
  Awesome Python
&lt;/h3&gt;

&lt;p&gt;A curated list of awesome Python frameworks, libraries, software and resources.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/vinta"&gt;
        vinta
      &lt;/a&gt; / &lt;a href="https://github.com/vinta/awesome-python"&gt;
        awesome-python
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A curated list of awesome Python frameworks, libraries, software and resources
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Awesome Python &lt;a href="https://github.com/sindresorhus/awesome"&gt;&lt;img src="https://camo.githubusercontent.com/abb97269de2982c379cbc128bba93ba724d8822bfbe082737772bd4feb59cb54/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f617765736f6d652f643733303566333864323966656437386661383536353265336136336531353464643865383832392f6d656469612f62616467652e737667" alt="Awesome"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;A curated list of awesome Python frameworks, libraries, software and resources.&lt;/p&gt;
&lt;p&gt;Inspired by &lt;a href="https://github.com/ziadoz/awesome-php"&gt;awesome-php&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#awesome-python"&gt;Awesome Python&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#admin-panels"&gt;Admin Panels&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#algorithms-and-design-patterns"&gt;Algorithms and Design Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#asgi-servers"&gt;ASGI Servers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#asynchronous-programming"&gt;Asynchronous Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#audio"&gt;Audio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#authentication"&gt;Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#build-tools"&gt;Build Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#built-in-classes-enhancement"&gt;Built-in Classes Enhancement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#caching"&gt;Caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#chatops-tools"&gt;ChatOps Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#cms"&gt;CMS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#code-analysis"&gt;Code Analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#command-line-interface-development"&gt;Command-line Interface Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#command-line-tools"&gt;Command-line Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#compatibility"&gt;Compatibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#computer-vision"&gt;Computer Vision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#concurrency-and-parallelism"&gt;Concurrency and Parallelism&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#cryptography"&gt;Cryptography&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#data-analysis"&gt;Data Analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#data-validation"&gt;Data Validation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#data-visualization"&gt;Data Visualization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#database-drivers"&gt;Database Drivers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#database"&gt;Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#date-and-time"&gt;Date and Time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#debugging-tools"&gt;Debugging Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#deep-learning"&gt;Deep Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#devops-tools"&gt;DevOps Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#distributed-computing"&gt;Distributed Computing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#distribution"&gt;Distribution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#downloader"&gt;Downloader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#e-commerce"&gt;E-commerce&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#editor-plugins-and-ides"&gt;Editor Plugins and IDEs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#email"&gt;Email&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#enterprise-application-integrations"&gt;Enterprise Application Integrations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#environment-management"&gt;Environment Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#files"&gt;Files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#foreign-function-interface"&gt;Foreign Function Interface&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#forms"&gt;Forms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#functional-programming"&gt;Functional Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#game-development"&gt;Game Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#geolocation"&gt;Geolocation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#gui-development"&gt;GUI Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#hardware"&gt;Hardware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#html-manipulation"&gt;HTML Manipulation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#http-clients"&gt;HTTP Clients&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#image-processing"&gt;Image Processing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#implementations"&gt;Implementations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#interactive-interpreter"&gt;Interactive Interpreter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#internationalization"&gt;Internationalization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#job-scheduler"&gt;Job Scheduler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#logging"&gt;Logging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#machine-learning"&gt;Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#miscellaneous"&gt;Miscellaneous&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#natural-language-processing"&gt;Natural Language Processing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#network-virtualization"&gt;Network Virtualization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#news-feed"&gt;News Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#orm"&gt;ORM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#package-management"&gt;Package Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#package-repositories"&gt;Package Repositories&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#penetration-testing"&gt;Penetration testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#permissions"&gt;Permissions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#processes"&gt;Processes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#recommender-systems"&gt;Recommender Systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#refactoring"&gt;Refactoring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#restful-api"&gt;RESTful API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#robotics"&gt;Robotics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#rpc-servers"&gt;RPC Servers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#science"&gt;Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#search"&gt;Search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#serialization"&gt;Serialization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#serverless-frameworks"&gt;Serverless Frameworks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#shell"&gt;Shell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/vinta/awesome-python/master/#specific-formats-processing"&gt;Specific Formats&lt;/a&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/vinta/awesome-python"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#git-quick-statistics"&gt;
  &lt;/a&gt;
  GIT quick statistics
&lt;/h3&gt;

&lt;p&gt;Git quick statistics is a simple and efficient way to access various statistics in git repository.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/arzzen"&gt;
        arzzen
      &lt;/a&gt; / &lt;a href="https://github.com/arzzen/git-quick-stats"&gt;
        git-quick-stats
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ▁▅▆▃▅ Git quick statistics is a simple and efficient way to access various statistics in git repository.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
GIT quick statistics &lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#backers"&gt;&lt;img src="https://camo.githubusercontent.com/80d487a992260f2541359bbe1db498e051747023bf9dc5e28e1e9e28f9bde628/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6769742d717569636b2d73746174732f6261636b6572732f62616467652e737667" alt="Backers on Open Collective"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#sponsors"&gt;&lt;img src="https://camo.githubusercontent.com/08937a5d625943a48395e0528499e61c42a125584c80450b1ced4fd1910d7ec8/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6769742d717569636b2d73746174732f73706f6e736f72732f62616467652e737667" alt="Sponsors on Open Collective"&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/tweet?text=Simple%20and%20efficient%20way%20to%20access%20various%20statistics%20in%20git%20repository&amp;amp;url=https://github.com/arzzen/git-quick-stat&amp;amp;via=arzzen&amp;amp;hashtags=git,stats,tool,statistics,developers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c" alt="Tweet"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.org/arzzen/git-quick-stats" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1c3d6e1cf52dc2aff96e9b948e5402beff7d5051bb05387d4b79e95fc2212c7f/68747470733a2f2f6170692e7472617669732d63692e6f72672f61727a7a656e2f6769742d717569636b2d73746174732e7376673f6272616e63683d6d6173746572" alt="Travis"&gt;&lt;/a&gt; &lt;a href="https://formulae.brew.sh/formula/git-quick-stats#default" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/00a59d0840c11b4ee0585e4114eac3e2ec56b55634695cfe5100da468a1ab2c9/68747470733a2f2f7265706f6c6f67792e6f72672f62616467652f76657273696f6e2d666f722d7265706f2f686f6d65627265772f6769742d717569636b2d73746174732e737667" alt="Homebrew package"&gt;&lt;/a&gt; &lt;a href="https://repology.org/metapackage/git-quick-stats/packages" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7e1a84cf513dd30e1621ff70f45f06d4269935abedad2cd81fba6c3b95fae621/68747470733a2f2f7265706f6c6f67792e6f72672f62616467652f76657273696f6e2d666f722d7265706f2f6c696e7578627265772f6769742d717569636b2d73746174732e737667" alt="Linuxbrew package"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;git-quick-stats&lt;/code&gt; is a simple and efficient way to access various statistics in a git repository.&lt;/p&gt;
&lt;p&gt;Any git repository may contain tons of information about commits, contributors, and files. Extracting this information is not always trivial, mostly because there are a gadzillion options to a gadzillion git commands – I don’t think there is a single person alive who knows them all. Probably not even &lt;a href="https://github.com/torvalds"&gt;Linus Torvalds&lt;/a&gt; himself :).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/8818630/58364013-61e53800-7e7b-11e9-87f9-790d6744fbd5.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SbCZdF49--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/8818630/58364013-61e53800-7e7b-11e9-87f9-790d6744fbd5.png" alt="mainMenuScreenshot"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Table of Contents&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#screenshots"&gt;&lt;strong&gt;Screenshots&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#usage"&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#interactive"&gt;&lt;strong&gt;Interactive&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#non-interactive"&gt;&lt;strong&gt;Non-interactive&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#command-line-arguments"&gt;&lt;strong&gt;Command-line arguments&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#git-log-since-and-until"&gt;&lt;strong&gt;Git log since and until&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#git-log-limit"&gt;&lt;strong&gt;Git log limit&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#git-log-options"&gt;&lt;strong&gt;Git log options&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#git-pathspec"&gt;&lt;strong&gt;Git pathspec&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#git-merge-view-strategy"&gt;&lt;strong&gt;Git merge view strategy&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#color-themes"&gt;&lt;strong&gt;Color themes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#installation"&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#unix-and-linux"&gt;&lt;strong&gt;UNIX and Linux&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#macos-homebrew"&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#windows"&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#docker"&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#system-requirements"&gt;&lt;strong&gt;System requirements&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#dependencies"&gt;&lt;strong&gt;Dependencies&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#faq"&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#contribution"&gt;&lt;strong&gt;Contribution&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#code-reviews"&gt;&lt;strong&gt;Code reviews&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#some-tips-for-good-pull-requests"&gt;&lt;strong&gt;Some tips for good pull requests&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#formatting"&gt;&lt;strong&gt;Formatting&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#tests"&gt;&lt;strong&gt;Tests&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#licensing"&gt;&lt;strong&gt;Licensing&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#contributors"&gt;&lt;strong&gt;Contributors&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#backers"&gt;&lt;strong&gt;Backers&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/arzzen/git-quick-stats/master/#sponsors"&gt;&lt;strong&gt;Sponsors&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/8818630/58364011-61e53800-7e7b-11e9-9417-16cbb241ac2e.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FMXbX7pG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/8818630/58364011-61e53800-7e7b-11e9-9417-16cbb241ac2e.png" alt="commitsByWeekdayScreenshot"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/8818630/58364010-61e53800-7e7b-11e9-8711-a40b50aebf52.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8QSTdxfE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/8818630/58364010-61e53800-7e7b-11e9-8711-a40b50aebf52.png" alt="commitsByHourScreenshot"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;h3&gt;
Interactive&lt;/h3&gt;
&lt;p&gt;git-quick-stats has a built-in interactive menu that can be executed as such:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;git-quick-stats&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Or&lt;/p&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;git quick-stats&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Non-interactive&lt;/h3&gt;
&lt;p&gt;For those who prefer to…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/arzzen/git-quick-stats"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#dribbble-shots"&gt;
  &lt;/a&gt;
  dribbble shots
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#popovers-dark-black-light-mode"&gt;
  &lt;/a&gt;
  Popovers Dark / Black / Light mode
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---5h1U63n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/149817/screenshots/15606068/comp_1_1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---5h1U63n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/149817/screenshots/15606068/comp_1_1.png" alt="https://cdn.dribbble.com/users/149817/screenshots/15606068/comp_1_1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15606068-Popovers-Dark-Black-Light-mode"&gt;Jakub Antalik&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#boxboard-dashboard-ui-kit-i"&gt;
  &lt;/a&gt;
  Boxboard Dashboard UI Kit I
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--veFg7QpM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/1145170/screenshots/15611120/dribbble_interaction_1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--veFg7QpM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/1145170/screenshots/15611120/dribbble_interaction_1.png" alt="https://cdn.dribbble.com/users/1145170/screenshots/15611120/dribbble_interaction_1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15611120-Boxboard-Dashboard-UI-Kit-I"&gt;Anton Tkachev&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#air-ticket-app-concept"&gt;
  &lt;/a&gt;
  Air Ticket App Concept
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0cxB_6UX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/1963775/screenshots/15615286/media/88525345400edb4724d94109b1f3a576.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0cxB_6UX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/1963775/screenshots/15615286/media/88525345400edb4724d94109b1f3a576.png" alt="https://cdn.dribbble.com/users/1963775/screenshots/15615286/media/88525345400edb4724d94109b1f3a576.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15615286-Air-Ticket-App-Concept"&gt;Conceptzilla&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#small-fun-project"&gt;
  &lt;/a&gt;
  Small fun project
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--urg9rPzy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/182238/screenshots/15616181/media/98eae2cd5d02c072634337bbbd6e1bcb.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--urg9rPzy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/182238/screenshots/15616181/media/98eae2cd5d02c072634337bbbd6e1bcb.jpg" alt="https://cdn.dribbble.com/users/182238/screenshots/15616181/media/98eae2cd5d02c072634337bbbd6e1bcb.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15616181-Small-fun-project"&gt;Roma Korolev&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#travel-app"&gt;
  &lt;/a&gt;
  Travel app
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p9NtEpV6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/6027442/screenshots/15613705/media/681541ccbb570077d3bbbf2c8db138bf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p9NtEpV6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/6027442/screenshots/15613705/media/681541ccbb570077d3bbbf2c8db138bf.jpg" alt="https://cdn.dribbble.com/users/6027442/screenshots/15613705/media/681541ccbb570077d3bbbf2c8db138bf.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15613705-Travel-app"&gt;Faruk Ahmed&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#grocery-and-food-order-app-exploration"&gt;
  &lt;/a&gt;
  Grocery and Food Order App Exploration
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---4rcOoJx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/7252479/screenshots/15613036/media/57ae09295fa51165d23835b0847378aa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---4rcOoJx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/7252479/screenshots/15613036/media/57ae09295fa51165d23835b0847378aa.png" alt="https://cdn.dribbble.com/users/7252479/screenshots/15613036/media/57ae09295fa51165d23835b0847378aa.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15613036-Grocery-and-Food-Order-App-Exploration"&gt;Amelia Dita Handayani&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tweets"&gt;
  &lt;/a&gt;
  Tweets
&lt;/h2&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
    &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__two-pics"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uTWSPbPY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E0ZDD6bXMAAFWow.jpg" alt="unknown tweet media content"&gt;
    &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1bH67n2n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1379109905311928322/E0YheLeY_normal.jpg" alt="George Moller profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        George Moller
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @_georgemoller
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      🗺 2021 &lt;a href="https://twitter.com/hashtag/HTML"&gt;#HTML&lt;/a&gt; learning roadmap&lt;br&gt;&lt;br&gt;🧵 Thread 👇 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:14 PM - 02 May 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1388874423797784581" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1388874423797784581" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1388874423797784581" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H0-M3tig--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E0dgE8NWQAMTTe9.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--5xi8VV3a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1262113303729524738/vIQ3JUer_normal.png" alt="François Chalifour profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        François Chalifour
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @francoischlfr
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      After over a year's worth of work, months of API design, nights of hair-pulling on TypeScript, and an exhilarating docs race, &lt;a href="https://twitter.com/algolia"&gt;@algolia&lt;/a&gt; Autocomplete v1 is finally out 🔮✨&lt;br&gt;&lt;br&gt;Build an accessible, as-you-type autocomplete UI to integrate anywhere.&lt;br&gt;&lt;a href="https://t.co/NMEbvcnkpp"&gt;alg.li/autocomplete&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      12:14 PM - 03 May 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1389191741991964677" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1389191741991964677" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1389191741991964677" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--seXJlWzN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1380071732736835584/JiUeFsgG_normal.jpg" alt="Emma Bostian 🐞 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Emma Bostian 🐞
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/emmabostian"&gt;@emmabostian&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Things I do as a technical interviewer:&lt;br&gt;1. State this is a conversation, not a test&lt;br&gt;2. Let the candidate look up APIs&lt;br&gt;3. Tell them when they do a great job&lt;br&gt;4. Problem solve together&lt;br&gt;5. Tell them if I learned something new from them&lt;br&gt;&lt;br&gt;Normalize collaborative interviews!
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      09:35 AM - 05 May 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1389876391248900102" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1389876391248900102" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1389876391248900102" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--qSPvXUNf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1391053627117109252/VdGsdRC4_normal.jpg" alt="Pratham profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Pratham
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/prathkum"&gt;@prathkum&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      My handwritten Web Development notes ✍️&lt;br&gt;&lt;br&gt;🧵👇
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      08:06 AM - 21 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1384780558165680135" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1384780558165680135" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1384780558165680135" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6IINNWLD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E0oX_6CWQAApohI.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--RRCbCR14--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1298738738621820930/IDNZZcQF_normal.jpg" alt="Alana Bishop profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Alana Bishop
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @alanabishop_
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Me all day every day &lt;a href="https://twitter.com/hashtag/developer"&gt;#developer&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      14:27 PM - 05 May 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1389949827199471617" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1389949827199471617" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1389949827199471617" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--YAsvtdzy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1368667185879584770/pKNxJut-_normal.jpg" alt="Santiago profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Santiago
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @svpino
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      12 machine learning YouTube videos.&lt;br&gt;&lt;br&gt;On libraries, algorithms, tools, and theory.&lt;br&gt;&lt;br&gt;↓
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      10:01 AM - 06 May 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1390245210827984896" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1390245210827984896" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1390245210827984896" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;





&lt;h2&gt;
  &lt;a href="#picked-pens"&gt;
  &lt;/a&gt;
  Picked Pens
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#css-skateboard"&gt;
  &lt;/a&gt;
  CSS Skateboard
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/deren2525/embed/dyvyLev?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/study_dedede"&gt;Deren&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pericles-mi-loro-querido"&gt;
  &lt;/a&gt;
  Pericles mi loro querido
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/judag/embed/NWpPMQE?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://codepen.io/judag"&gt;Judith Neumann&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#podcasts-worth-listening"&gt;
  &lt;/a&gt;
  Podcasts worth listening
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#the-css-podcast-transforms"&gt;
  &lt;/a&gt;
  The CSS Podcast - Transforms
&lt;/h3&gt;

&lt;p&gt;In this episode we enter the 3rd dimension with CSS, placing and manipulating objects in 3D space with the transform property. 2D and 3D transforms are spectacular ways to animate and create a sense of depth in a design, follow along for how it all works.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/2YquD5g8fE0eidiALuS2UV"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;Thank you for reading, talk to you next week, and stay safe! 👋&lt;/p&gt;




&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Make sure to subscribe to our &lt;a href="https://worldindev.ck.page"&gt;newsletter&lt;/a&gt; 💌 to receive our weekly recap directly on your email and react to this post to automatically participate in our giveaway 🎁&lt;/p&gt;

&lt;p&gt;If you would like to join our discussions, you can find us on &lt;a href="https://discord.gg/aWS2YKk6"&gt;Discord&lt;/a&gt; 📣.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

</description>
      <category>css</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Get Real Time Date and Time using JavaScript</title>
      <author>Atif Iqbal</author>
      <pubDate>Sun, 09 May 2021 17:20:25 +0000</pubDate>
      <link>https://dev.to/atif_dev/get-real-time-date-and-time-using-javascript-5eep</link>
      <guid>https://dev.to/atif_dev/get-real-time-date-and-time-using-javascript-5eep</guid>
      <description>&lt;p&gt;So our topic is Get &lt;strong&gt;Real time date and Time using JavaScript&lt;/strong&gt;. Real time date and time is same time and date that we see at our computer,mobile or watch screen. We just once set the time on our devices and they gave us updated time whenever we see.&lt;br&gt;
So the question is how can we see such Real time date and Time on our web page.&lt;br&gt;
&lt;em&gt;Let’s get this...&lt;/em&gt;&lt;br&gt;
First we will create a demo page using HTML and CSS to visualize how our time and date will look like...let’s create a beautiful demo page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Time and Date&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="sx"&gt;url('https://fonts.googleapis.com/css2?family=Fredoka+One&amp;amp;display=swap')&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nf"&gt;#time&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#004AAD&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nf"&gt;#day&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#FF5757&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nf"&gt;#date&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#FF5757&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Fredoka One'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;cursive&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"time"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;1:20PM&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"day"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;SUN&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"date"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;9 May 2021&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we run our code until now it will look like this on our browser window&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lgrvOpFB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ztp3cyec8odjaupk24o9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lgrvOpFB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ztp3cyec8odjaupk24o9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
We have just created a demo page. At this stage our current date and time will not change, it will always remain the same.&lt;br&gt;
So how can we get the real time date and time or you can say Live time and date. This we can achieve using JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Let’s understand JavaScript portion of the code with steps...&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#1: Call new Date() constructor&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;currentTimeDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have &lt;code&gt;currentTimeDate&lt;/code&gt; object that will help us to get time and date...just wait and see how we get time and date with the help of &lt;code&gt;currentTimeDate&lt;/code&gt; Object.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#2: Create array for weekday&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;weekday&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SUN&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;MON&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;TUE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;WED&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;THU&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;FRI&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SAT&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Current day will be picked from &lt;code&gt;weekday&lt;/code&gt; array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#3: Create an array for month&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;month&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JAN&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;FEB&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;MAR&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;APR&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;May&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JUN&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JUL&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;AUG&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SEP&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;OCT&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;NOV&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DEC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Current month will be picked from &lt;code&gt;month&lt;/code&gt; array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#4: Get current hours&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;hours&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nx"&gt;currentTimeDate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getHours&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We had created &lt;code&gt;currentTimeDate&lt;/code&gt; object previously in &lt;strong&gt;Step#1&lt;/strong&gt;. And now we are using dot operator along with &lt;code&gt;getHours()&lt;/code&gt; to get current hour of time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#5: Get current minutes&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;minutes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nx"&gt;currentTimeDate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMinutes&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;we are getting current minutes of time using &lt;code&gt;currentTimeDate.getMinutes()&lt;/code&gt; and saving these minutes in &lt;code&gt;minutes&lt;/code&gt; variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;minutes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;minutes&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;minutes&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;minutes&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This line of code is just a way to properly organize our minutes because we don’t want to get &lt;code&gt;0&lt;/code&gt;,&lt;code&gt;1&lt;/code&gt;,&lt;code&gt;3&lt;/code&gt; etc as minutes instead we want minutes as &lt;code&gt;00&lt;/code&gt;, &lt;code&gt;01&lt;/code&gt;, &lt;code&gt;03&lt;/code&gt; etc.&lt;br&gt;
This line of code just says, hey if &lt;code&gt;minutes&lt;/code&gt; are less than &lt;code&gt;10&lt;/code&gt;then append &lt;code&gt;0&lt;/code&gt; with &lt;code&gt;minutes&lt;/code&gt; and save &lt;code&gt;minutes&lt;/code&gt; in &lt;code&gt;minutes&lt;/code&gt; variable but if &lt;code&gt;minutes&lt;/code&gt; are greater than &lt;code&gt;10&lt;/code&gt; then do nothing and just save &lt;code&gt;minutes&lt;/code&gt; in &lt;code&gt;minutes&lt;/code&gt; variable.&lt;br&gt;
If this statement is confusing, you can use old approach  that will be as&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;minutes&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="nx"&gt;minutes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;minutes&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;minutes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;minutes&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step#6: Set AM and PM&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;AMPM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;PM&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;AM&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This statement just says, if &lt;code&gt;hours&lt;/code&gt; are greater or equal to &lt;code&gt;12&lt;/code&gt; then assign &lt;code&gt;PM&lt;/code&gt; string to &lt;code&gt;AMPM&lt;/code&gt; variable otherwise assign &lt;code&gt;AM&lt;/code&gt; string to &lt;code&gt;AMPM&lt;/code&gt; variable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#7: Getting 12hr format&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="nx"&gt;hours&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

            &lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hours&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, We have used the &lt;code&gt;if else&lt;/code&gt; statement to get 12hr time format.If &lt;code&gt;hours&lt;/code&gt; will be equal to  &lt;code&gt;12&lt;/code&gt; then &lt;code&gt;12&lt;/code&gt; will be assign to &lt;code&gt;hours&lt;/code&gt; variable otherwise we will fall into &lt;code&gt;else&lt;/code&gt; part of the condition and will tackle expression &lt;code&gt;hours = hours%12;&lt;/code&gt;&lt;br&gt;
&lt;code&gt;hours = hours%12&lt;/code&gt;===&amp;gt; here &lt;code&gt;%&lt;/code&gt; is mod operator that will give us remainder. For example if &lt;code&gt;hours&lt;/code&gt; are &lt;code&gt;13&lt;/code&gt; then we will get &lt;code&gt;1&lt;/code&gt;,if &lt;code&gt;hours&lt;/code&gt; are &lt;code&gt;14&lt;/code&gt; then we will get &lt;code&gt;2&lt;/code&gt;, if &lt;code&gt;hours&lt;/code&gt; will be &lt;code&gt;15&lt;/code&gt; we will get &lt;code&gt;3&lt;/code&gt; and so on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#8: Get currentTime, currentDay, fullDate&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;currentTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;hours&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;minutes&lt;/span&gt;&lt;span class="p"&gt;}${&lt;/span&gt;&lt;span class="nx"&gt;AMPM&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using JavaScript Template literals we are appending &lt;code&gt;hours&lt;/code&gt;, &lt;code&gt;minutes&lt;/code&gt; and &lt;code&gt;AMPM&lt;/code&gt; values and saving whole string in &lt;code&gt;currentTime&lt;/code&gt; variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;currentDay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;currentTimeDate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDay&lt;/span&gt;&lt;span class="p"&gt;()];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;currentTimeDate.getDay()&lt;/code&gt; gives us number value from 0-6, for example if current day is &lt;code&gt;Sunday&lt;/code&gt; then &lt;code&gt;currentTimeDate.getDay()&lt;/code&gt; will give us &lt;code&gt;0&lt;/code&gt;, if current day is &lt;code&gt;Monday&lt;/code&gt; then &lt;code&gt;currentTimeDate.getDay()&lt;/code&gt; will give us number &lt;code&gt;1&lt;/code&gt; and so on for the rest of the days. &lt;br&gt;
Now let’s say we get &lt;code&gt;0&lt;/code&gt; by &lt;code&gt;currentTimeDate.getDay()&lt;/code&gt;, let’s enter value &lt;code&gt;0&lt;/code&gt; into our statement...&lt;br&gt;
&lt;code&gt;var currentDay = weekday[0];&lt;/code&gt; Remember we have initialized &lt;code&gt;weekday&lt;/code&gt; array before. So &lt;code&gt;weekday[0]&lt;/code&gt; will give us value of &lt;code&gt;0&lt;/code&gt;index(value is SUN) and the value will be saved in the &lt;code&gt;currentDay&lt;/code&gt; variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;currentDate&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;currentTimeDate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This statement will give current date.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;currentMonth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;currentTimeDate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMonth&lt;/span&gt;&lt;span class="p"&gt;()];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Similar to &lt;code&gt;currentDay&lt;/code&gt; here we will get a number as a result of &lt;code&gt;currentTimeDate.getMonth()&lt;/code&gt; and will access value from a index of &lt;code&gt;month&lt;/code&gt; array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;CurrentYear&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;currentTimeDate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getFullYear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now here we will get current full year.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;fullDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;currentDate&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;currentMonth&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;CurrentYear&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we are appending &lt;code&gt;currentDate&lt;/code&gt;, &lt;code&gt;currentMonth&lt;/code&gt;, &lt;code&gt;CurrentYear&lt;/code&gt; and making a complete string, this string then will be saved in &lt;code&gt;fullDate&lt;/code&gt; variable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#9: Change hard coded value of time, day and date using DOM&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;time&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;currentTime&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here value of &lt;code&gt;currentTime&lt;/code&gt; variable is being saved into element that has id as &lt;code&gt;time&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;day&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;currentDay&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Value of &lt;code&gt;currentDay&lt;/code&gt; variable into element that has id as &lt;code&gt;day&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;date&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fullDate&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Save value of &lt;code&gt;fullDate&lt;/code&gt; variable into element that has id as &lt;code&gt;date&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#10: Get Real time Date and Time&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getCurrentTimeDate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;setTimeout&lt;/code&gt; function with value of 500 will change the value of our time after every minute by calling &lt;code&gt;getCurrentTimeDate&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#11: Enclose code from Step#1 to Step#10 into a function&lt;/strong&gt; &lt;code&gt;getCurrentTimeDate&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getCurrentTimeDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="c1"&gt;//Code from Step#1 to Step#10 will be here&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step#12: Call function getCurrentTimeDate&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;getCurrentTimeDate();&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Step#10 to Step#12 might be confusing, please see whole code below for proper flow.&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Time and Date&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="sx"&gt;url('https://fonts.googleapis.com/css2?family=Fredoka+One&amp;amp;display=swap')&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nf"&gt;#time&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#004AAD&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nf"&gt;#day&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#FF5757&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nf"&gt;#date&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#FF5757&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Fredoka One'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;cursive&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"time"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;1:20PM&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"day"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;SUN&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"date"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;9 May 2021&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getCurrentTimeDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;currentTimeDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;weekday&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SUN&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;MON&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;TUE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;WED&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;THU&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;FRI&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SAT&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;month&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JAN&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;FEB&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;MAR&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;APR&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;May&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JUN&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JUL&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;AUG&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SEP&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;OCT&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;NOV&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DEC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;hours&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nx"&gt;currentTimeDate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getHours&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;minutes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nx"&gt;currentTimeDate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMinutes&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;minutes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;minutes&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;minutes&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;minutes&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

         &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;AMPM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;PM&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;AM&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="nx"&gt;hours&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

            &lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hours&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;currentTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;hours&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;minutes&lt;/span&gt;&lt;span class="p"&gt;}${&lt;/span&gt;&lt;span class="nx"&gt;AMPM&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;currentDay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;currentTimeDate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDay&lt;/span&gt;&lt;span class="p"&gt;()];&lt;/span&gt;

        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;currentDate&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;currentTimeDate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;currentMonth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;currentTimeDate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMonth&lt;/span&gt;&lt;span class="p"&gt;()];&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;CurrentYear&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;currentTimeDate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getFullYear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;fullDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;currentDate&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;currentMonth&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;CurrentYear&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;time&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;currentTime&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;day&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;currentDay&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;date&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fullDate&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getCurrentTimeDate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;getCurrentTimeDate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;When our html page will load, we will get Real Time Date and Time. Just keep looking the page the time will increment automatically.&lt;/em&gt;&lt;br&gt;
See live demo at &lt;a href="https://atif-dev.github.io/javaScriptRealTimeDateTime/"&gt;https://atif-dev.github.io/javaScriptRealTimeDateTime/&lt;/a&gt;&lt;br&gt;
Or at&lt;br&gt;
&lt;a href="https://codepen.io/Atitemp/pen/xxqGXOO"&gt;https://codepen.io/Atitemp/pen/xxqGXOO&lt;/a&gt;&lt;br&gt;
💻🙂👍&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
