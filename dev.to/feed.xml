<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Introducing Noteture</title>
      <author>Abhiraj Bhowmick</author>
      <pubDate>Wed, 22 Sep 2021 13:24:32 +0000</pubDate>
      <link>https://dev.to/visualway/introducing-noteture-4bhb</link>
      <guid>https://dev.to/visualway/introducing-noteture-4bhb</guid>
      <description>&lt;p&gt;Ever thought of a great idea but eventually forgot about it?&lt;/p&gt;

&lt;p&gt;Don't. Anymore.&lt;/p&gt;

&lt;p&gt;Introducing &lt;a href="https://noteture.netlify.app"&gt;Noteture&lt;/a&gt;&lt;br&gt;
the first product of Visualway&lt;/p&gt;

&lt;p&gt;Noteture is probably the simplest note taking app you have ever use and believe me, you will love it. All your notes are saved in local storage so that you don't need to worry about them.&lt;/p&gt;

&lt;p&gt;Tech Stack&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; HTML
&lt;/li&gt;
&lt;li&gt; CSS
&lt;/li&gt;
&lt;li&gt; Javascript
&lt;/li&gt;
&lt;li&gt; React
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To be honest, this has been my first venture with React and I am not afraid to say it is highly efficient and flexible. I will be exploring react as well as other javascript frameworks in future under Visualway's upcoming projects.&lt;/p&gt;

&lt;p&gt;Key features of Noteture&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; Light and dark mode
&lt;/li&gt;
&lt;li&gt; Unlimited notes 
&lt;/li&gt;
&lt;li&gt; Open source and completely free
&lt;/li&gt;
&lt;li&gt; Hassle-free and easy to use
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can view the repository here&lt;br&gt;
&lt;a href="https://github.com/Visualway/Noteture"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZI-EzTtz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://forthebadge.com/images/badges/open-source.svg" alt="forthebadge"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have also released it on ProductHunt so feel free to drop an upvote, maybe a comment?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.producthunt.com/posts/noteture"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VemSwF5c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.producthunt.com/widgets/embed-image/v1/featured.svg%3Fpost_id%3D313229%26theme%3Dlight" alt="Noteture - The simplest note taking app you have ever used | Product Hunt"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can support us by buying us a coffee&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/rainboestrykr"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y61HrVIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-blue.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Go on and use the app here&lt;/p&gt;

&lt;p&gt;&lt;a href="https://noteture.vercel.app"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_JRTgHzH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://forthebadge.com/images/badges/check-it-out.svg" alt="forthebadge"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Jaeger vs Prometheus - Key differences, use-cases and alternatives</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Wed, 22 Sep 2021 13:00:35 +0000</pubDate>
      <link>https://dev.to/signoz/jaeger-vs-prometheus-key-differences-use-cases-and-alternatives-1ig5</link>
      <guid>https://dev.to/signoz/jaeger-vs-prometheus-key-differences-use-cases-and-alternatives-1ig5</guid>
      <description>&lt;p&gt;Both Jaeger and Prometheus are popular open-source application performance monitoring tools. While Jaeger is an end-to-end distributed tracing tool, Prometheus is used as a time-series database for monitoring metrics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Application performance monitoring is the key to keep your system's health in check. In today's digital economy, no business can afford to have failed or delayed completion of user requests. Latencies of a few milliseconds can lead to lost business opportunities running in millions.&lt;br&gt;
Distributed tracing and metrics monitoring are both important for setting up a robust monitoring framework for your application.&lt;/p&gt;

&lt;p&gt;Jaeger and Prometheus are both popular open-source projects under Cloud Native Computing Foundation. While Jaeger is focused on providing distributed tracing for microservice architecture, Prometheus is famous as time-series metrics monitoring tool.&lt;/p&gt;

&lt;p&gt;Distributed tracing gives you insights into how user requests are performing across different services. Metrics provide insights into the behavior and health of your systems, especially when analyzed in aggregate. Metrics can be of any type, like host-based metrics, application metrics, and network and connectivity metrics.&lt;/p&gt;

&lt;p&gt;Now that you understand a little bit about distributed tracing and metrics monitoring let us look at the features of Jaeger and Prometheus in detail.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#key-features-of-jaeger"&gt;
  &lt;/a&gt;
  Key features of Jaeger
&lt;/h2&gt;

&lt;p&gt;Jaeger was originally built by teams at Uber and then open-sourced. It is used for end-to-end distributed tracing for microservices. Some of the key features of Jaeger includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Distributed context propagation&lt;/strong&gt;&lt;br&gt;
One of the challenges of distributed systems is to have a standard format for passing context across process boundaries and services. Jaeger provides client libraries that support code instrumentation in multiple languages to propagate context across services&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Distributed transaction monitoring&lt;/strong&gt;&lt;br&gt;
Jaeger comes with a web UI written in Javascript. The dashboard can be used to see traces and spans across services.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Root Cause Analysis&lt;/strong&gt;&lt;br&gt;
Using traces you can drill down to services causing latency in particular user request.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Server dependency analysis&lt;/strong&gt;&lt;br&gt;
Using Jaeger's web UI, you can see how requests flow through different services and different servers interact while serving user requests.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Performance/latency optimization&lt;/strong&gt;&lt;br&gt;
Once you have identified, which service or query is creating latency, you can use the information to optimize it.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PBiBbLYG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/jaeger_ui-min.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PBiBbLYG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/jaeger_ui-min.png" alt="Jaeger UI"&gt;&lt;/a&gt;Jaeger UI showing services and corresponding traces&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#key-features-of-prometheus"&gt;
  &lt;/a&gt;
  Key features of Prometheus
&lt;/h2&gt;

&lt;p&gt;Prometheus was initially developed at SoundCloud in 2012 before being released as an open-source project. It got accepted into the CloudNative Computing Foundation in 2016 and was the second project to graduate from the foundation, following Kubernetes.&lt;/p&gt;

&lt;p&gt;Prometheus enables you to capture time-series data as metrics. These metrics can be aggregated to give insights into the behavior of our systems. Some of the key features of Prometheus includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Multi-dimensional data model&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Prometheus stores data as time-series. For example, it can store time-stamped values of the total number of HTTP requests received. You can also store an optional set of key-value pairs called labels for that metric. The multi-dimensional data model enables rich contextual metrics monitoring.&lt;br&gt;
  Notation of time-series metrics:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;metric&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;=&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;, ...}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Flexible query language&lt;/strong&gt;&lt;br&gt;
Prometheus provides a query language called PromQL. Using PromQL, you can filter and aggregate metrics data in real-time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Pull model data collection&lt;/strong&gt;&lt;br&gt;
In contrast to most APM tools, Prometheus data collection is pull-based. It requires you to run an HTTP server that exposes Prometheus metrics.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Graphing and dashboarding support&lt;/strong&gt;&lt;br&gt;
For visualization, Prometheus has three options: Prometheus Expression Browser, Grafana, and Prometheus Console Templates. Grafana is a popular data visualization tool, and it supports querying Prometheus. Although it requires time and effort to set up custom Prometheus metrics with Grafana, it can give you some solid visualization.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z-DRx73a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://signoz.io/img/blog/2021/09/jaeger_vs_prometheus_grafana%2520dashboard-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z-DRx73a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://signoz.io/img/blog/2021/09/jaeger_vs_prometheus_grafana%2520dashboard-min.jpg" alt="Prometheus metrics visualized with Grafana"&gt;&lt;/a&gt;Prometheus metrics data visualization using Grafana&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#jaeger-vs-prometheus-key-differences"&gt;
  &lt;/a&gt;
  Jaeger vs Prometheus: key differences
&lt;/h2&gt;

&lt;p&gt;From the description above, you might have a good idea about the differences between Jaeger and Prometheus. The major difference between the two is that Jaeger is specifically meant for distributed tracing, and Prometheus is specifically meant for monitoring metrics.&lt;/p&gt;

&lt;p&gt;Summarizing the key differences between Jaeger and Prometheus:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Jaeger is an &lt;strong&gt;end-to-end distributed tracing tool&lt;/strong&gt; used  to track user requests across services in microservice architecture. On the other hand, Prometheus is a &lt;strong&gt;time-series metrics monitoring tool&lt;/strong&gt; used to track metrics like resource usage.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Jaeger has &lt;strong&gt;push-based data collection&lt;/strong&gt; where trace data is sent to collectors, while Prometheus has a &lt;strong&gt;pull-based data collection&lt;/strong&gt; model where it scrapes endpoints exposing Prometheus metrics.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Jaeger's web UI comes with out of box trace data visualization and service dependency diagrams. Prometheus out of box web UI is limited. You need to set up custom visualization with Grafana for better insights.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Jaeger supports pluggable storage backends for trace data. Cassandra and Elasticsearch are the primarily supported storage backends by Jaeger. Prometheus includes a local on-disk time-series database, but it does not provide any pluggable database.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Jaeger has a scalable architecture by design. On the other hand, Prometheus is designed for a single machine. It &lt;strong&gt;cannot be scaled horizontally.&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The issue with both tools is that they are limited to particular use-cases of distributed tracing and metrics monitoring. But for a robust monitoring framework, you need both metrics and traces. Engineering teams need to resolve issues fast, and they need access to a unified view of metrics and traces. That's where &lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt; comes into the picture.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#alternative-to-jaeger-and-prometheus-signoz"&gt;
  &lt;/a&gt;
  Alternative to Jaeger and Prometheus - SigNoz
&lt;/h2&gt;

&lt;p&gt;SigNoz is a full-stack open-source application performance monitoring and observability tool which can be used in place of Jaeger and Prometheus. It provides advanced distributed tracing capabilities along with metrics under a single dashboard.&lt;/p&gt;

&lt;p&gt;SigNoz is built to support OpenTelemetry natively. &lt;a href="https://opentelemetry.io/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;OpenTelemetry&lt;/b&gt;&lt;/a&gt;  is becoming the world standard for generating and managing telemetry data (Logs, metrics, and traces). It also provides users flexibility in terms of storage. You can choose between ClickHouse or Kafka + Druid as your backend storage while installing SigNoz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6BdjoEB_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/SigNoz_architecture_clickhouse.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6BdjoEB_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/SigNoz_architecture_clickhouse.png" alt="Architecture of SigNoz with OpenTelemetry and ClickHouse"&gt;&lt;/a&gt;Architecture of SigNoz with ClickHouse as storage backend and OpenTelemetry for code instrumentatiion&lt;/p&gt;

&lt;p&gt;SigNoz comes with out of box visualization of things like RED metrics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OKFqZ_PP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_charts_application_metrics.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OKFqZ_PP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_charts_application_metrics.png" alt="SigNoz UI showing the popular RED metrics"&gt;&lt;/a&gt;SigNoz UI showing application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/p&gt;

&lt;p&gt;You can also use flamegraphs to visualize spans from your trace data. All of this comes out of the box with SigNoz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FOoIlefK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_flamegraphs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FOoIlefK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_flamegraphs.png" alt="Flamegraphs used to visualize spans of distributed tracing in SigNoz UI"&gt;&lt;/a&gt;Flamegraphs showing exact duration taken by each spans - a concept of distributed tracing&lt;/p&gt;

&lt;p&gt;Some of the things SigNoz can help you track:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/li&gt;
&lt;li&gt;Slowest endpoints in your application&lt;/li&gt;
&lt;li&gt;See exact request trace to figure out issues in downstream services, slow DB queries, call to 3rd party services like payment gateways, etc&lt;/li&gt;
&lt;li&gt;Filter traces by service name, operation, latency, error, tags/annotations.&lt;/li&gt;
&lt;li&gt;Run aggregates on trace data&lt;/li&gt;
&lt;li&gt;Unified UI for both metrics and traces&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can check out SigNoz's GitHub repo here 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>microservices</category>
      <category>monitoring</category>
      <category>jaeger</category>
      <category>prometheus</category>
    </item>
    <item>
      <title>Comunidade Tech e Sensação de Pertencimento</title>
      <author>TechSisters Brasil</author>
      <pubDate>Wed, 22 Sep 2021 12:43:17 +0000</pubDate>
      <link>https://dev.to/techsistersbrasil/comunidade-tech-e-sensacao-de-pertencimento-5dii</link>
      <guid>https://dev.to/techsistersbrasil/comunidade-tech-e-sensacao-de-pertencimento-5dii</guid>
      <description>&lt;p&gt;&lt;em&gt;“O sentimento de pertencer é altamente motivador. Quando nos sentimos parte de algo, nossa entrega é muito maior. Coisas incríveis acontecem quando um time motivado entra em ação!” Autor desconhecido&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CmeueFAg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/za3t7lbcdmixisg09jjm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CmeueFAg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/za3t7lbcdmixisg09jjm.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Créditos da Imagem&lt;/em&gt; &lt;a href="https://pixabay.com/photos/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=1245776%22%20Free-Photos&amp;lt;/a&amp;gt;&amp;gt;%20por%20&amp;lt;a%20href="&gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;É incrível como a sensação de não-pertencimento mexe com a gente e, ultimamente, tenho percebido esse sentimento bem forte, conversando com pessoas que estão passando por &lt;strong&gt;uma transição de carreira.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A impressão é de que estamos num LIMBO entre um universo e outro. É como se a gente não pertencesse mais a carreira anterior - por não se identificar mais, ou por já ter tomado a decisão de que não queremos mais seguir aquele caminho - somada com a sensação de que ainda não fazemos parte da nova área. &lt;/p&gt;

&lt;p&gt;Muitos questionamentos surgem nessa etapa, principalmente se estamos fazendo a escolha correta. Afinal, temos a sensação de ainda estarmos entrando num mundo desconhecido e ainda não entendemos muito como ele funciona. 🤷🏽‍♀️&lt;/p&gt;

&lt;p&gt;Por muito tempo, esse sentimento me acompanhou, pelas várias mudanças de cidades, estados e países que enfrentei. Foram inúmeras casas, escolas, culturas e comidas. E a falta de vínculos e a falta de conexão com as pessoas e o lugar onde você vive é algo que impacta bastante.🌎&lt;/p&gt;




&lt;p&gt;Mas com o passar do tempo eu comecei a criar técnicas para que esse processo fosse mais tranquilo. E então, quando chegou a hora da transição de carreira, eu já sabia o que fazer! &lt;/p&gt;

&lt;p&gt;Por isso, resolvi compartilhar um pouco da minha experiência, pois ela pode te ajudar a passar com mais tranquilidade por esse processo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Em primeiro lugar é importante saber, que como tudo na vida, &lt;strong&gt;esse sentimento PASSA.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;É normal se sentir deslocado em um novo ambiente. Mas não fique observando ele de fora por muito tempo. Dê pequenos passos diários que te levem pra dentro daquele universo. 🚀&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Faça com que aquele ambiente seja mais acolhedor&lt;/strong&gt;, você tem a faca e o queijo na mão, coloque suas melhores qualidades em ação - seja a comunicação, o ensino ou a criação de algo. &lt;em&gt;Aproxime-se das pessoas. Entre em comunidades. Compartilhe o que você sabe. O pouco pra você, poder ser o muito pra alguém.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Absorva todo conhecimento que você puder.&lt;/strong&gt; E eu não digo só de qualidade técnicas, também entenda como aquela área funciona, saiba quem é referencia na área, quais a notícias mais relevantes e o que há de novo. Fique atento! &lt;em&gt;Pegue a “onda das novidades” e utilize elas como ponte para se conectar e conversar com as pessoas da área.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Não tenho medo e nem vergonha de pedir ajuda.&lt;/strong&gt; Desde que o mundo é mundo, pessoas ajudam pessoas e o conhecimento é passado de geração em geração. Quando você mostra interesse as pessoas lembram de você em outras oportunidades.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Siga pessoas que te inspirem diariamente.&lt;/strong&gt; Motivação é algo passageiro e quando ela passa só sobra você e o seu sonho de continuar seguindo aquele percurso. Não permita que os obstáculos no meio do caminho te desanimem. Ouça quem já está na área e utilize isso como combustível para chegar onde você quer. 💪🏼&lt;/p&gt;




&lt;p&gt;A comunidade tech é altamente ativa. Tem muita gente acolhedora e com vontade de ajudar. Aproveite esse ambiente de troca e aprendizado para vencer os seus medos e inseguranças. E quando você se sentir preparado e livre para voar, volte, e inspire quem está iniciando. Não deixe esse ciclo se quebrar! ❤️&lt;/p&gt;




&lt;p&gt;Se esse conteúdo foi útil pra você, compartilhe!&lt;/p&gt;

&lt;p&gt;📝 escrito com 💜 por &lt;a href="https://dev.to/simonepedrosa"&gt;Simone Pedrosa&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>technology</category>
      <category>developer</category>
      <category>womanintech</category>
    </item>
    <item>
      <title>Watch me build a product and launch in 30 days with just HTML and CSS</title>
      <author>Lucian Tartea</author>
      <pubDate>Wed, 22 Sep 2021 12:42:10 +0000</pubDate>
      <link>https://dev.to/luciantartea/watch-me-build-a-product-and-launch-in-30-days-with-just-html-and-css-2fei</link>
      <guid>https://dev.to/luciantartea/watch-me-build-a-product-and-launch-in-30-days-with-just-html-and-css-2fei</guid>
      <description>&lt;p&gt;There is a misconception floating around that you need to follow a certain roadmap and learn a lot of technologies to create products that people will love to use. Words like LAMP, LEMP, MERN, MEAN come to squash every aspiring web developer's dream to create their own products. It seams that it will take forever to master one of those stacks to be able to create a product that is so useful people will actually pay money for.&lt;/p&gt;

&lt;p&gt;I am starting an experiment about &lt;strong&gt;how I build a product and launch it in 30 days with just HTML and CSS&lt;/strong&gt; and would like to invite you to join me as I tweet my progress, challenges and results with full transparency on my actions and the reasoning behind them.&lt;/p&gt;

&lt;p&gt;My craft is making HTML templates and recently I've launched my main project &lt;a href="%5Bhttps://inovatik.com%5D"&gt;Inovatik.com&lt;/a&gt; as a Free resource for devs and makers on Product Hunt. It won  &lt;a href="https://www.producthunt.com/posts/inovatik-html-templates"&gt;3rd product of the day&lt;/a&gt; . Quite successful for a project built with just HTML and CSS.&lt;/p&gt;

&lt;p&gt;Now I want to channel my energy and focus on a paid product to support my dream of making a decent living from creating my own web products. It will be a paid HTML templates website focused on converting the value I can offer in $.&lt;/p&gt;

&lt;p&gt;I am a marketer that learned design and code by building projects to meet the goals of my employers, my customers and ultimately my own. I always learn by doing since I get bored fast of long courses. Results keep me focused.&lt;/p&gt;

&lt;p&gt;For this &lt;strong&gt;30 days journey&lt;/strong&gt; I am taking with me some marketing skills, good design abilities Photoshop and Illustrator, good HTML CSS and that's about it. Besides these I also carry a lot of motivation because my savings are only enough for this last push. &lt;/p&gt;

&lt;p&gt;If the product fails I will need to go freelancing full force to survive and will put away the product making dreams for a while. Nothing wrong with freelancing it's just that it's not my idea of freedom. And everything I fight for is being a free person. Not everyone's priority I know and that is Ok.&lt;/p&gt;

&lt;p&gt;Many of you already have these minimum coding skills or you are trying to find motivation to start learning. My experiment can inspire you to create something similar with the resources you already have available in a short time span. &lt;/p&gt;

&lt;p&gt;Also I would like to emphasize that HTML and CSS are quite easy to master and very few peers believe they can build a paid product just with them. They move quickly to JavaScript, get stuck and lose motivation. &lt;/p&gt;

&lt;p&gt;There are opportunities at every level of web development if you can deliver complete products. You can find good jobs based on completed projects, make money on the side or even a good living if you invest the required time.&lt;/p&gt;

&lt;p&gt;During these 30 days I will tweet daily about my progress, challenges and the launch results. It will be exciting both for you and me. So if you are somewhat a beginner web dev, advanced FE dev or an aspiring product maker I invite you to &lt;strong&gt;follow me on Twitter  &lt;a href="https://twitter.com/Inovatik"&gt;@Inovatik&lt;/a&gt;&lt;/strong&gt; to take part in the journey. This is Day 1 of my #launchin30&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>HackOnLisk2</title>
      <author>Lisk</author>
      <pubDate>Wed, 22 Sep 2021 12:32:28 +0000</pubDate>
      <link>https://dev.to/liskhq/hackonlisk2-1994</link>
      <guid>https://dev.to/liskhq/hackonlisk2-1994</guid>
      <description>&lt;p&gt;Build your own blockchain application with the Lisk SDK in JavaScript. Blockchain applications should be submitted to either the DeFi or GameFi category. 60,000 CHF in prizes.&lt;/p&gt;

&lt;p&gt;Here's everything you need to know: &lt;a href="https://hackonlisk2.devpost.com/"&gt;https://hackonlisk2.devpost.com/&lt;/a&gt; 👈&lt;/p&gt;

&lt;p&gt;Join our community at Lisk.chat 💙&lt;/p&gt;

</description>
      <category>programming</category>
      <category>javascript</category>
      <category>challenge</category>
    </item>
    <item>
      <title>How to create MCQs WordPress Website</title>
      <author>Academy365</author>
      <pubDate>Wed, 22 Sep 2021 12:29:57 +0000</pubDate>
      <link>https://dev.to/academy365/how-to-create-mcqs-wordpress-website-3ad2</link>
      <guid>https://dev.to/academy365/how-to-create-mcqs-wordpress-website-3ad2</guid>
      <description>&lt;p&gt;Learn how to create a complete MCQs website using WordPress Plugin. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/xQdOixr9t_E"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>wordpress</category>
      <category>mcqs</category>
    </item>
    <item>
      <title>Choose. Build. Get Rewarded. $1.3M+ funding.</title>
      <author>Lisk</author>
      <pubDate>Wed, 22 Sep 2021 12:18:04 +0000</pubDate>
      <link>https://dev.to/liskhq/choose-build-get-rewarded-1-3m-funding-4hla</link>
      <guid>https://dev.to/liskhq/choose-build-get-rewarded-1-3m-funding-4hla</guid>
      <description>&lt;p&gt;Never heard of Lisk or the Lisk SDK, but you would like to develop a project/business with blockchain technology, and you know Javascript and/or Typescript?&lt;/p&gt;

&lt;p&gt;Current opportunities for funding:&lt;br&gt;
🔹 &lt;a href="https://lisk.com/grant-program"&gt;https://lisk.com/grant-program&lt;/a&gt; 👈&lt;br&gt;
🔹 &lt;a href="https://hackonlisk2.devpost.com/"&gt;https://hackonlisk2.devpost.com/&lt;/a&gt; 👈&lt;/p&gt;

&lt;p&gt;Interested? ⚡ &lt;a href="https://bit.ly/QuickStartLisk"&gt;https://bit.ly/QuickStartLisk&lt;/a&gt; ⚡&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>blockchain</category>
      <category>programming</category>
      <category>challenge</category>
    </item>
    <item>
      <title>How to become a console.log() ninja</title>
      <author>Eli H. Schei</author>
      <pubDate>Wed, 22 Sep 2021 12:16:10 +0000</pubDate>
      <link>https://dev.to/elischei/how-to-become-a-console-log-ninja-dk2</link>
      <guid>https://dev.to/elischei/how-to-become-a-console-log-ninja-dk2</guid>
      <description>&lt;p&gt;If you are a web developer I'm guessing you have used console.log() a couple of (thousand) times. But did you know that the console object has some other usefull methods you can use to structure the output you get?&lt;/p&gt;

&lt;h2&gt;What is the console object?&lt;/h2&gt;

&lt;p&gt;First, a very with a short introduction to the console object before we dive in to its methods.&lt;/p&gt;

&lt;p&gt;So what is the console object? The &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/console" rel="noreferrer noopener" title="https://developer.mozilla.org/en-US/docs/Web/API/console"&gt;MDN Web docs&lt;/a&gt; sais "The &lt;strong&gt;&lt;code&gt;console&lt;/code&gt;&lt;/strong&gt; object provides access to the browser's debugging console (e.g. the &lt;a href="https://developer.mozilla.org/en-US/docs/Tools/Web_Console"&gt;Web console&lt;/a&gt; in Firefox). The specifics of how it works varies from browser to browser, but there is a &lt;em&gt;de facto&lt;/em&gt; set of features that are typically provided." &lt;/p&gt;

&lt;p&gt;In other words, it is a object that is available to use for debugging purposes. &lt;/p&gt;

&lt;p&gt;Lets take a look at some of the methods it provides. &lt;/p&gt;




&lt;h2&gt;console.table() &lt;/h2&gt;

&lt;p&gt;You have two objects that contains the same structure of information about two pets. You add both pets to an array.&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myPet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Poppy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;animal&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cat&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;favoriteToy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ball&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myOtherPet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Harry&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;animal&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pig&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;favoriteToy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;food&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;pets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;myPet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;myOtherPet&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to print the array to the console you can use &lt;code&gt;console.log()&lt;/code&gt;, that will look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5US9GgEN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9vmtp07q3up42i8x5h6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5US9GgEN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9vmtp07q3up42i8x5h6.png" alt="Image of console.log ouput"&gt;&lt;/a&gt;&lt;br&gt;
If you would like a better overview of what the array contains you can use &lt;code&gt;console.table()&lt;/code&gt; instead.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That will give you a nice table presentation of the array content, like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MyOFXu5---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8a442hjir1d8c7aywtrz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MyOFXu5---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8a442hjir1d8c7aywtrz.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;console.group()&lt;/h2&gt;

&lt;p&gt;You can use console.group() to create collapsible groups of outputs. For instance you can use it to group output from functions.&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;function1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Function 1 output&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;this is a message from function1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groupEnd&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;function2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Other function output&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Well hello there!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groupEnd&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;function1&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;function2&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the functions are called you will get the messages presented like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--08wlurOU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f0vsc7sjefk9di4y4mcs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--08wlurOU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f0vsc7sjefk9di4y4mcs.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nested groups&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can also nest groups inside eachother&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;function2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Other function output&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Well hello there!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;This group is nested inside of the 'Other function output' group&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello from inside this group&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groupEnd&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groupEnd&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SbDwslN1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gqiijsdmjbvdio2rurg7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SbDwslN1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gqiijsdmjbvdio2rurg7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;collapsed groups&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you want the groups to collapsed as default you can use &lt;code&gt;console.groupCollapsed("name of group")&lt;/code&gt; instead of &lt;code&gt;console.group("name of group")&lt;/code&gt;&lt;/p&gt;




&lt;h2&gt;console.dir()&lt;/h2&gt;

&lt;p&gt;When you want to output information about an object in a structured manner you can also use &lt;code&gt;console.dir(object);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JCQUoJaV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9muyilbh9q0molmk0jxi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JCQUoJaV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9muyilbh9q0molmk0jxi.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;console.assert()&lt;/h2&gt;

&lt;p&gt;If you want some condition to decide if your ouput is displayed in the console, &lt;code&gt;console.assert()&lt;/code&gt; is the function for you. This function takes two parameters, a boolean and a string. The message (string) will only be displayed in the console if the boolean value is &lt;code&gt;false&lt;/code&gt;.  &lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;function1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;This message will be displayed as a warning if the condition equals false&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;function1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OZDHnAWV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fyoo6m4pg3s6tsxd8gil.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OZDHnAWV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fyoo6m4pg3s6tsxd8gil.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;Adding color to your console output&lt;/h2&gt;

&lt;p&gt;The console object have two built in functions that will add color to the displad text. These are console.warn() and console.error(). And as you might have guessed they will be displayed as a warning and an error.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VXMNfbLE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/swtsefstpg0jks4u8q4c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VXMNfbLE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/swtsefstpg0jks4u8q4c.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Add your own styling&lt;/h3&gt;

&lt;p&gt;If you add %c before your string, and pass a string of styling as a second parameter you can style your output.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V6Uyoe3X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ilto9etcm91ecicwrn7v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V6Uyoe3X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ilto9etcm91ecicwrn7v.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;Other usefull console methods&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Create and use a timer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can use&lt;code&gt; console.time()&lt;/code&gt; to start a timer, and &lt;code&gt;console.timeEnd() &lt;/code&gt;to end it. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Where is your function being called?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Use &lt;code&gt;console.trace()&lt;/code&gt; to see where the function was called from&lt;/p&gt;

&lt;h2&gt;Resources&lt;/h2&gt;

&lt;ul&gt;&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/console" rel="noreferrer noopener" title="https://developer.mozilla.org/en-US/docs/Web/API/console"&gt;console &lt;/a&gt;(MDN)&lt;/li&gt;&lt;/ul&gt;




&lt;p&gt;Did you find this article usefull? &lt;a href="https://twitter.com/acupof_dev"&gt;Follow me on twitter&lt;/a&gt; to be notified when I publish something new!&lt;/p&gt;

&lt;p&gt;Also, if you have any feedback or questions, please let me know in the comments below. :)&lt;/p&gt;

&lt;p&gt;Thank you for reading!&lt;/p&gt;

&lt;p&gt;/Eli&lt;/p&gt;

</description>
      <category>console</category>
      <category>tips</category>
    </item>
    <item>
      <title>Learning Python- Intermediate course: Day 30, Spinbox and Labelbox</title>
      <author>Aatmaj</author>
      <pubDate>Wed, 22 Sep 2021 12:07:01 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-day-30-spinbox-and-labelbox-1b35</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-day-30-spinbox-and-labelbox-1b35</guid>
      <description>&lt;h2&gt;
  &lt;a href="#today-let-us-see-how-to-use-the-spinbox-and-listbox-widgets-widget"&gt;
  &lt;/a&gt;
  Today let us see how to use the spinbox and listbox widgets widget.
&lt;/h2&gt;




&lt;h2&gt;
  &lt;a href="#spin-box-widget"&gt;
  &lt;/a&gt;
  Spin box widget.
&lt;/h2&gt;

&lt;p&gt;The spinbox widget is a type of widget which lets the users choose values in an easy way. The user can navigate through the values using the up and down arrows. You can read more about it &lt;a href="https://anzeljg.github.io/rin2/book2/2405/docs/tkinter/spinbox.html"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#making-the-spinbox-widget"&gt;
  &lt;/a&gt;
  Making the spinbox widget
&lt;/h3&gt;

&lt;p&gt;The spinbox widget is very similar to the slider widget we learnt in the last part. &lt;code&gt;v&lt;/code&gt; all we need to do is replace slider by spinbox&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"200x200"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;spinbox&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Spinbox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;from_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;spinbox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;showbutton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;spinbox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;showbutton&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"show"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;showbutton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pBQFvyHb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qc3et3mzybli3ky0rcll.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pBQFvyHb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qc3et3mzybli3ky0rcll.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MBuulqXW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7efky3z3yzxlcfxoeskf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MBuulqXW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7efky3z3yzxlcfxoeskf.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q4RZbJwt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/la37pd672vh4yb20a9ga.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q4RZbJwt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/la37pd672vh4yb20a9ga.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here we get the value from the spinbox in the same manner as we did for slider widget, that is, by using the &lt;code&gt;get()&lt;/code&gt; method.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#listbox-widget"&gt;
  &lt;/a&gt;
  Listbox widget
&lt;/h2&gt;

&lt;p&gt;The listbox widget also allows the users to choose values from a given set of string or numerical values. These value sets are determined by the program. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The Listbox widget is used to display a list of items from which a user can select a number of items.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#making-a-listbox-widget"&gt;
  &lt;/a&gt;
  Making a listbox widget
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Lb = Listbox(frame)&lt;/code&gt; creates a listbox widget. We can add values to the widget using the &lt;code&gt;insert()&lt;/code&gt; method. &lt;br&gt;
Here is an example which creates a Listbox&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"200x200"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;Lb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Listbox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Lb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Python"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Lb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"R"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Lb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Julia"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Lb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"MATLAB"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Lb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Mathematica"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Lb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Haskell"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;Lb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#getting-the-value-from-the-listbox"&gt;
  &lt;/a&gt;
  Getting the value from the listbox.
&lt;/h3&gt;

&lt;p&gt;We can get the value using the &lt;code&gt;curselection()&lt;/code&gt; method. The curselection returns the position of the selected item.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"200x200"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;Lb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Listbox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Lb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Python"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Lb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"R"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Lb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Julia"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Lb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"MATLAB"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Lb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Mathematica"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Lb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Haskell"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;Lb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;showbutton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Lb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;curselection&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;showbutton&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"show"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;showbutton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--McmuOQQY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7uyohpnk8ltlaqk4lctm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--McmuOQQY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7uyohpnk8ltlaqk4lctm.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6MZNHpgw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7rwdbysjk1x979bh6cs1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6MZNHpgw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7rwdbysjk1x979bh6cs1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In order to get the value, we can use listbox method &lt;code&gt;get()&lt;/code&gt; to return the tuple of values and index the position.&lt;code&gt;showbutton.config(text=Lb.get(Lb.curselection()))&lt;/code&gt;&lt;br&gt;
But instead it will be more flexible if we make a tuple of those values themselves and feed them into the program. moreover using a for loop to feed in values enhances flexibility and extensibility.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"200x200"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Python"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"R"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Julia"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"MATLAB"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Mathematica"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Haskell"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Lb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Listbox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
    &lt;span class="n"&gt;Lb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;Lb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;showbutton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Lb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;curselection&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;span class="n"&gt;showbutton&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"show"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;showbutton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5GbbBmUU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3jfujp1a322mtapuvu4e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5GbbBmUU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3jfujp1a322mtapuvu4e.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Exercise-&lt;br&gt;
1) Should &lt;code&gt;item&lt;/code&gt; be a tuple or a list??&lt;br&gt;
2) What will happen if we remove &lt;code&gt;[0]&lt;/code&gt; in &lt;code&gt;items[Lb.curselection()[0]]&lt;/code&gt;?&lt;br&gt;
3) Use &lt;code&gt;Lb.get(Lb.curselection())&lt;/code&gt; and rewrite the entire program&lt;br&gt;
4) The above program, lot of lines are wasted. use the &lt;code&gt;height&lt;/code&gt; attribute to adjust the number of lines.&lt;br&gt;
5) Does the height attribute take in the number of lines or pixel space? Try to find out using trial and error methods.&lt;br&gt;
6) When you set the height, did you feel the usefulness of flexibility initializing a tuple and setting the values?&lt;/p&gt;

&lt;p&gt;Answer in the comments below. Answers will be found in the &lt;a href="https://github.com/Aatmaj-Zephyr/Learning-Python"&gt;Learning Python Repository&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#types-of-selections"&gt;
  &lt;/a&gt;
  Types of selections
&lt;/h3&gt;

&lt;p&gt;In the listbox object, there is a attribute called as &lt;code&gt;selectmode&lt;/code&gt;. By using this attribute, we can set how we want to select the items.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Selectmode determines how many items can be selected, and how mouse drags affect the selection −&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;BROWSE − Normally, you can only select one line out of a listbox. If you click on an item and then drag to a different line, the selection will follow the mouse. This is the default.&lt;/li&gt;
&lt;li&gt;SINGLE − You can only select one line, and you can't drag the mouse. Wherever you click button 1, that line is selected.&lt;/li&gt;
&lt;li&gt;MULTIPLE − You can select any number of lines at once. Clicking on any line toggles whether or not it is selected.&lt;/li&gt;
&lt;li&gt;EXTENDED − You can select any adjacent group of lines at once by clicking on the first line and dragging to the last line.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"200x200"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Python"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"R"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Julia"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"MATLAB"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Mathematica"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Haskell"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Lb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Listbox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;selectmode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;MULTIPLE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
    &lt;span class="n"&gt;Lb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;Lb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mQFSsRfV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibbq5hroe9nqa220u1c0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mQFSsRfV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibbq5hroe9nqa220u1c0.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"200x200"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Python"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"R"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Julia"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"MATLAB"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Mathematica"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Haskell"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Lb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Listbox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;selectmode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;EXTENDED&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
    &lt;span class="n"&gt;Lb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;Lb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aR8IVsME--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0a127qouctumjuhftnb4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aR8IVsME--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0a127qouctumjuhftnb4.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
In the extended mode, you cannot choose two non-continues values at once. Example, you cannot choose only Haskell and Julia in the above program. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For displaying the contents we will require a better method, like for example textbox. We will need to extract out all values out from the tuple, or convert it out into a string before displaying it.&lt;/p&gt;



&lt;p&gt;In tomorrows part, as promised we will make a program with slider and repeat the same with the spinbox widget. &lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>tutorual</category>
    </item>
    <item>
      <title>Best Node.js apps examples to inspire your next project</title>
      <author>Monika Ambrozowicz</author>
      <pubDate>Wed, 22 Sep 2021 12:04:29 +0000</pubDate>
      <link>https://dev.to/forestadmin/best-node-js-apps-examples-to-inspire-your-next-project-3bkh</link>
      <guid>https://dev.to/forestadmin/best-node-js-apps-examples-to-inspire-your-next-project-3bkh</guid>
      <description>&lt;p&gt;Fast, flexible, comfortable to work with — these are just a few words Node.js developers use to describe this extremely popular JavaScript runtime environment. The fact that it allows front-end developers to build and execute code on the server side makes the development faster, perfect for building light and real-time web applications. It shouldn’t come as a surprise that both well-established companies and ambitious startups have chosen Node.js to build their products. Let’s have a look at examples of reputable apps built in Node.js.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#nodejs-fintech-apps"&gt;
  &lt;/a&gt;
  Node.js Fintech apps
&lt;/h1&gt;

&lt;p&gt;Security and reliability are crucial in building any apps, however, this statement is particularly relevant for fintech products. No users would trust an app with their money if there is even the tiniest chance their assets or data could be stolen, compromised, or misused. That’s why, many financial services eventually chose to build their applications in Node.js, as it’s known for data safety and reliability, and its huge open-source community makes sure that if there is any vulnerability, it gets fixed immediately.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#paypal"&gt;
  &lt;/a&gt;
  PayPal
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4bCDRGhl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/09/PayPal-Logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4bCDRGhl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/09/PayPal-Logo.png" alt="PayPal logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Being one of the world’s first FinTech companies, for many years PayPal has been almost considered a synonym for this term. Although this is no longer the case as financial services have been blooming globally, PayPal is still one of the oldest and most well-known systems for online payments, trusted by millions of users around the world. At first, PayPal has been developed in Java, and then, in 2013, the customer-facing side of the app was migrated to JavaScript and Node.js. The new app was built almost twice as fast with fewer people, in 33% fewer lines of code, with 40% fewer files. On top of that, it has visibly higher performance and the dev team witnessed a 35% decrease in the average response time that eventually resulted in the pages being served 200ms faster.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#juspay"&gt;
  &lt;/a&gt;
  JusPay
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fPF8KMYJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/09/juspay.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fPF8KMYJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/09/juspay.png" alt="JusPay logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;JusPay is a younger but yet reputable fintech solution providing a digital payment platform similar to Google Play. One of their products is Express Checkout, a payment gateway that facilitates making secure online payments. The company created a dashboard that shows user metrics in real-time, and they needed to make sure there are no safety or performance issues. After all, JusPay products process over 4 million transactions every day on more than 100 million devices. Their choice fell on Node.js, mostly due to its real-time capabilities and high performance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.forestadmin.com/customers/fintech?utm_source=referral&amp;amp;utm_medium=devto&amp;amp;utm_campaign=devto-organic&amp;amp;utm_content=customers-fintech"&gt;Read how FinTech companies use Forest Admin to manage KYC, fraud prevention, compliance, and more.&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#nodejs-realtime-applications"&gt;
  &lt;/a&gt;
  Node.js real-time applications
&lt;/h1&gt;

&lt;p&gt;Real-time apps have become ubiquitous, as we all expect our favorite products to be able to perform actions that occur instantly, like streaming videos, instant messaging, gaming, performing e-commerce transactions, just to name a few. In such applications speed, scalability, and performance are absolutely critical, and they need to be developed using technologies that are able to handle all of that well. Node.js is proven to bring the expected results and is chosen by household names like Netflix or Uber.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#netflix"&gt;
  &lt;/a&gt;
  Netflix
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jf9_8p5t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/09/netflix-interface.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jf9_8p5t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/09/netflix-interface.jpg" alt="Netflix main page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Netflix clearly shows that Node.js is capable of dealing with huge real-time applications with an enormous library of content watched by over 192 million subscribers in over 190 countries. One of the reasons to build the Netflix.com website UI in Node.js was its speed and effectiveness. Reducing startup time as much as possible was one of the most important goals and it was achieved with flying colors — the startup time of the new Netflix application has been reduced by 70%. On top of that, the overall performance improved.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#uber"&gt;
  &lt;/a&gt;
  Uber
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XL-ewbs8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/09/uber-app.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XL-ewbs8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/09/uber-app.jpg" alt="A smartphone with an Uber app open"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Real-time applications deal with many real-time users, and this is very true for Uber. After all, the platform is used by over 3 million drivers and 75 million users who take the ride. The company was aware from the beginning that its global online transportation network will require the ability to process large amounts of data almost instantly, and performance must be the key as both customers and drivers rely on that. Their choice fell on Node.js when it wasn’t as obvious as now — in fact, Uber is one of the first companies that used Node.js in production. Now, the process more than 2 million remote procedure calls per second, and praise Node.js for its ability to process huge amounts of data instantly, and for appropriate error handling.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#nodejs-in-social-media-and-singlepage-applications"&gt;
  &lt;/a&gt;
  Node.js in Social Media and single-page applications
&lt;/h1&gt;

&lt;p&gt;Node.js is also a good choice for both social media and single-page applications that look light and simple from a user perspective, but require complex work to be handled by the server.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#linkedin"&gt;
  &lt;/a&gt;
  LinkedIn
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cmoQn-nW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/09/linkedin-app.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cmoQn-nW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/09/linkedin-app.jpg" alt="A smartphone with a Linkedin app open"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LinkedIn is a well-established business-oriented social networking website purchased by Microsoft in 2016 for an impressive $26 billion. The first mobile app has been initially built in Ruby on Rails, and then the tech team decided to switch to Node.js. According to Kiran Prasad, LinkedIn’s Mobile Development Lead, the main reason was its ability to scale, and the new app is 20 times faster and uses only a fraction of previous resources — servers were cut to 3 from 30.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#twitter-lite"&gt;
  &lt;/a&gt;
  Twitter Lite
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rXifKvcV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/09/twitter-lite.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rXifKvcV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/09/twitter-lite.jpg" alt="Twitter Lite logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Twitter’s ambition is to reach almost every internet user in the world. It seems there is just one major obstacle — poor internet connection and the cost of data in developing countries. The idea to tackle this problem was simple - to create a lightweight version of the Twitter application.&lt;/p&gt;

&lt;p&gt;Twitter Lite uses React and frontend and Node.js on the backend, which makes it accessible from any browser and any device. The Service Worker caches the content and makes it available even if the internet connection is currently down. According to Twitter, its Lite version loads in up to 5 seconds in incredibly slow 3G network.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#trello"&gt;
  &lt;/a&gt;
  Trello
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PbWzLS66--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/09/Trello-Logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PbWzLS66--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/09/Trello-Logo.png" alt="Trello logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Trello is a good example of a single-page application that looks simple but requires complex work on the server-side. The creators of one of the most popular project management tools launched in 2011 have chosen Node.js as their core technology from the early days. Trello looks simple and it’s easy, and in fact, the team wanted to keep the simplicity of its first HTML mockup while creating a solid server and a maintainable client. Their choice fell on Node.js. Quoting the Trello blog, We knew we wanted instant propagation of updates, which meant that we needed to be able to hold a lot of open connections, so an event-driven, non-blocking server seemed like a good choice.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#iot-solutions"&gt;
  &lt;/a&gt;
  IoT Solutions
&lt;/h1&gt;

&lt;p&gt;Node.js is capable to handle a large volume of data generated by multiple concurrent requests and events coming from multiple IoT devices. No wonder we often see opinions that IoT and Node.js is the perfect match, and it’s safe to say that the number of IoT products developed with Node.js will only continue to grow.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connected-boat"&gt;
  &lt;/a&gt;
  Connected boat
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--huSOj06F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/09/connected-boat.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--huSOj06F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/09/connected-boat.png" alt="Connectet Boat logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Connected boat is an example of such an application, as it monitors key parameters of vessels through smart IoT sensors. The company needs to make sure everything is well monitored, as safety is one of the most significant concerns faced by boat owners. The mobile app built with Node.js together with sensors makes it possible for the owners to access all important information and to ensure the safety of the boat.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#skycatch"&gt;
  &lt;/a&gt;
  Skycatch
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E4wIskcD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/09/skycatch-logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E4wIskcD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/09/skycatch-logo.png" alt="Sky Catch logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Skycatch is another example of an IoT application powered by Node.js. It allows capturing high-quality drone imagery of the construction sites, and then process them in order to give their clients actionable insights about what is happening there. Drone monitoring is increasingly popular in the construction, mining, and energy industry because it surveying such vast sites traditionally is a huge and expensive task that drones can significantly improve.&lt;/p&gt;

&lt;p&gt;Skycatch uses Node.js in its backend development, data processing, and creating drones.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h1&gt;

&lt;p&gt;All of the examples presented above prove that Node.js clearly reveals several advantages to both well-established companies and ambitious startups. At Forest Admin, we work with Node.js on a daily basis (&lt;a href="https://www.forestadmin.com/integration-page/nodejs-sequelize?utm_source=referral&amp;amp;utm_medium=devto&amp;amp;utm_campaign=devto-organic&amp;amp;utm_content=nodejs-sequelize-lp"&gt;try our Node.js integration for free&lt;/a&gt;), and we can clearly see why a big part of our users has chosen Node.js to build their product with:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;High speed of both development and use. Node.js is famous for its micro-services that allow for making changes in the set of features instead of the complete software. Code is reusable, execution faster, everything is scalable.&lt;/li&gt;
&lt;li&gt;High performance makes it a reliable technology, perfect for even the most demanding products&lt;/li&gt;
&lt;li&gt;The ability to process even massive volumes of real-time data makes it the first choice for applications such as Uber or Netflix.&lt;/li&gt;
&lt;li&gt;Access to a global pool of talent as JavaScript is one of the most popular programming languages, and Node.js is a JavaScript runtime built Chrome’s V8 JavaScript engine.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#are-you-looking-for-the-perfect-internal-tool-solution-for-your-nodejs-application-look-no-further-and-try-forest-admin-for-free"&gt;
  &lt;/a&gt;
  Are you looking for the perfect internal tool solution for your Node.js application? Look no further and &lt;a href="https://app.forestadmin.com/signup?utm_source=referral&amp;amp;utm_medium=devto&amp;amp;utm_campaign=devto-organic&amp;amp;utm_content=nodejs-apps-examples"&gt;try Forest Admin for free.&lt;/a&gt; 🌲🌲🌲
&lt;/h2&gt;

</description>
      <category>node</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>startup</category>
    </item>
    <item>
      <title>Running React Native everywhere: Windows &amp; macOS</title>
      <author>Matteo Mazzarolo</author>
      <pubDate>Wed, 22 Sep 2021 11:58:00 +0000</pubDate>
      <link>https://dev.to/mmazzarolo/running-react-native-everywhere-windows-macos-7lp</link>
      <guid>https://dev.to/mmazzarolo/running-react-native-everywhere-windows-macos-7lp</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;p&gt;Third part of the &lt;a href="https://dev.to/mmazzarolo/running-react-native-everywhere-4gpp"&gt;"Running React Native everywhere"&lt;/a&gt; series: a tutorial about structuring your monorepo to run multiple React Native apps targeting different platforms.&lt;/p&gt;

&lt;p&gt;This time, we'll focus on the &lt;strong&gt;Windows&lt;/strong&gt; and &lt;strong&gt;macOS&lt;/strong&gt; platforms.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about-react-native-for-windows-macos"&gt;
  &lt;/a&gt;
  About React Native for Windows + macOS
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://microsoft.github.io/react-native-windows/"&gt;React Native for Windows + macOS&lt;/a&gt; brings React Native support for the &lt;a href="https://developer.microsoft.com/en-us/windows/downloads"&gt;Windows SDK&lt;/a&gt; as well as the &lt;a href="https://www.apple.com/newsroom/2017/09/macos-high-sierra-now-available-as-a-free-update/"&gt;macOS 10.13 SDK&lt;/a&gt;&lt;/strong&gt;. With this, you can use JavaScript to build native Windows apps for &lt;a href="https://developer.microsoft.com/windows/get-started-windows-10"&gt;all devices supported by Windows 10 and higher&lt;/a&gt; including PCs, tablets, 2-in-1s, Xbox, Mixed reality devices, etc., as well as the macOS desktop and laptop ecosystems.&lt;/p&gt;

&lt;p&gt;The React Native for Windows + macOS development flow is very similar to the Android and iOS one. If you're already familiar with building mobile React Native apps and with the Windows or macOS SDK, you should be able to quickly jump into a React Native for Windows + macOS codebase.&lt;/p&gt;

&lt;p&gt;Both the Windows and macOS platforms are currently being maintained by Microsoft.&lt;br&gt;&lt;br&gt;
As of today, React Native for Windows is in a much more stable shape than React Native for macOS, but they're both getting better and better.&lt;/p&gt;

&lt;p&gt;The React Native for Windows + macOS documentation follows a classic approach to setup the projects: it shows you how to add them directly in an existing React Native mobile app, resulting in having the Android, iOS, macOS, and Windows code located in the same directory, sharing a single metro bundler setup.&lt;br&gt;&lt;br&gt;
As explained in the &lt;a href="https://dev.to/mmazzarolo/running-react-native-everywhere-yarn-workspaces-monorepo-3j5g"&gt;monorepo setup guide&lt;/a&gt;, we'll follow a slightly different approach and create a workspace for each platform. By doing so, &lt;strong&gt;we're making our codebase a bit more complex in exchange for a simplified incremental React Native update path&lt;/strong&gt;, because we won't be forced to use the same React Native version on all platforms.  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Please keep in mind that this solution is probably a bit over-engineered if you &lt;strong&gt;do&lt;/strong&gt; already expect to always use the same React Native version on all platforms. In that case, I'd suggest you to go with the classic approach shown in the React Native for Windows + macOS documentation 👍&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To add support for the Windows and macOS platforms to our monorepo, we'll follow the same pattern we used with the mobile app, creating a workspace for each platform:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;.&lt;/span&gt;
└── &amp;lt;project-root&amp;gt;/
    └── packages/
        &lt;span class="c"&gt;# React Native JavaScript code shared across the apps&lt;/span&gt;
        ├── app/
        │   ├── src/
        │   └── package.json
        &lt;span class="c"&gt;# macOS app configuration files and native code&lt;/span&gt;
        └── macos/
        │   ├── macos/
        │   ├── index.js
        │   ├── metro.config.js
        │   └── package.json
        &lt;span class="c"&gt;# Android/iOS app configuration files and native code&lt;/span&gt;
        └── mobile/
        │   ├── android/
        │   ├── ios/
        │   ├── index.js
        │   ├── metro.config.js
        │   └── package.json
        &lt;span class="c"&gt;# Windows app configuration files and native code&lt;/span&gt;
        └── windows/
            ├── windows/
            ├── index.js
            ├── metro.config.js
            └── package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Something worth noticing is that React Native for Windows + macOS uses metro bundler, just like React Native mobile does.&lt;br&gt;&lt;br&gt;
So we can leverage the same monorepo tooling we used in our mobile app! 💥&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#windows"&gt;
  &lt;/a&gt;
  Windows
&lt;/h2&gt;

&lt;p&gt;To create the &lt;code&gt;windows&lt;/code&gt; workspace we'll follow the same procedure we used for the &lt;code&gt;mobile&lt;/code&gt; one.&lt;/p&gt;

&lt;p&gt;First of all, add the &lt;code&gt;react-native-windows&lt;/code&gt; library to the &lt;code&gt;nohoist&lt;/code&gt; list in the root's &lt;code&gt;package.json&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt; {
   "name": "my-app",
   "version": "0.0.1",
   "private": true,
   "workspaces": {
     "packages": [
       "packages/*"
     ],
     "nohoist": [
       "**/react",
       "**/react-dom",
       "**/react-native",
       "**/react-native/**",
&lt;span class="gi"&gt;+      "**/react-native-windows",
&lt;/span&gt;     ]
   }
 }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, from the &lt;code&gt;packages&lt;/code&gt; directory, scaffold a new React Native for Windows project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx react-native init MyApp &lt;span class="nt"&gt;--template&lt;/span&gt; react-native@^0.65.0 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;mv &lt;/span&gt;MyApp windows
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Update &lt;code&gt;windows/package.json&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt; {
&lt;span class="gd"&gt;-  "name": "MyApp",
&lt;/span&gt;&lt;span class="gi"&gt;+  "name": "@my-app/windows",
&lt;/span&gt;   "version": "0.0.1",
   "private": true,
   "scripts": {
     "android": "react-native run-android",
     "ios": "react-native run-ios",
     "start": "react-native start",
     "test": "jest",
     "lint": "eslint ."
   },
   "dependencies": {
&lt;span class="gi"&gt;+    "@my-app/app": "*",
&lt;/span&gt;     "react": "17.0.2",
     "react-native": "0.65.1"
   }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Update &lt;code&gt;windows/index.js&lt;/code&gt; to point to our &lt;code&gt;app&lt;/code&gt; workspace:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt; import { AppRegistry } from "react-native";
&lt;span class="gd"&gt;-import App from "./App";
&lt;/span&gt;&lt;span class="gi"&gt;+import App from "@my-app/app";
&lt;/span&gt; import { name as appName } from "./app.json";

 AppRegistry.registerComponent(appName, () =&amp;gt; App);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And finalize the Windows project setup:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://microsoft.github.io/react-native-windows/docs/rnw-dependencies"&gt;all the required dependencies&lt;/a&gt;. Microsoft has done a phenomenal job here: you can check and install all the development dependencies &lt;a href="https://microsoft.github.io/react-native-windows/docs/rnw-dependencies#install-the-development-dependencies"&gt;with a single script&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://microsoft.github.io/react-native-windows/docs/getting-started#install-the-windows-extension"&gt;the Windows extensions&lt;/a&gt;. This process will add the &lt;code&gt;windows&lt;/code&gt; directory (with the native Windows SDK code) to the workspace and update the metro configuration to support the Windows platform.&lt;/li&gt;
&lt;li&gt;Remove the &lt;code&gt;ios&lt;/code&gt; and &lt;code&gt;android&lt;/code&gt; directories from the workspace.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Last but not least, use &lt;a href="https://github.com/mmazzarolo/react-native-monorepo-tools"&gt;&lt;code&gt;react-native-monorepo-tools&lt;/code&gt;&lt;/a&gt; to make metro compatible with Yarn Workspaces:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="p"&gt;const path = require("path");
const exclusionList = require("metro-config/src/defaults/exclusionList");
const { getMetroConfig } = require("react-native-monorepo-tools");
&lt;/span&gt;
+// Get the metro settings to make it compatible with Yarn workspaces.
&lt;span class="gi"&gt;+const monorepoMetroConfig = getMetroConfig({
+  reactNativeAlias: "react-native-windows",
+});
&lt;/span&gt;
module.exports = {
  resolver: {
    blockList: exclusionList([
      // This stops "react-native run-windows" from causing the metro server to crash if its already running
      new RegExp(
        `${path.resolve(__dirname, "windows").replace(/[/\\]/g, "/")}.*`
      ),
      // This prevents "react-native run-windows" from hitting: EBUSY: resource busy or locked, open msbuild.ProjectImports.zip
      /.*\.ProjectImports\.zip/,

+     // Ensure we resolve nohoist libraries from this directory.
&lt;span class="gi"&gt;+     ...monorepoMetroConfig.blockList,
&lt;/span&gt;    ]),
&lt;span class="gi"&gt;+   // Ensure we resolve nohoist libraries from this directory.
+   extraNodeModules: monorepoMetroConfig.extraNodeModules,
&lt;/span&gt;  },
&lt;span class="gi"&gt;+ // Add additional Yarn workspace package roots to the module map.
+ // This allows importing from any workspace.
+ watchFolders: monorepoMetroConfig.watchFolders,
&lt;/span&gt;  transformer: {
    getTransformOptions: async () =&amp;gt; ({
      transform: {
        experimentalImportSupport: false,
        inlineRequires: true,
      },
    }),
  },
&lt;span class="err"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That should be it! We can now run &lt;code&gt;yarn windows&lt;/code&gt; from the &lt;code&gt;windows&lt;/code&gt; workspace to run the app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#macos"&gt;
  &lt;/a&gt;
  macOS
&lt;/h2&gt;

&lt;p&gt;Like for Windows setup, to create the &lt;code&gt;macos&lt;/code&gt; workspace we'll follow the same procedure we used for the &lt;code&gt;mobile&lt;/code&gt; one.&lt;/p&gt;

&lt;p&gt;The main difference here is that, as of today, &lt;strong&gt;the latest stable version available for React Native for macOS is 0.63&lt;/strong&gt;.&lt;br&gt;&lt;br&gt;
So we need to take into account that our app will run on two different React Native versions: &lt;code&gt;0.65&lt;/code&gt; for Android, iOS, and Windows, and &lt;code&gt;0.63&lt;/code&gt; for macOS.&lt;/p&gt;

&lt;p&gt;Let's start by adding the &lt;code&gt;react-native-macos&lt;/code&gt; library to the &lt;code&gt;nohoist&lt;/code&gt; list in the root's &lt;code&gt;package.json&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="err"&gt;{&lt;/span&gt;
  "name": "my-app",
  "version": "0.0.1",
  "private": true,
  "workspaces": {
    "packages": [
      "packages/*"
    ],
    "nohoist": [
      "**/react",
      "**/react-dom",
      "**/react-native",
      "**/react-native/**",
&lt;span class="gi"&gt;+     "**/react-native-macos",
&lt;/span&gt;      "**/react-native-windows"
    ]
  }
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, from the &lt;code&gt;packages&lt;/code&gt; directory, scaffold a new React Native for macOS project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx react-native init MyApp &lt;span class="nt"&gt;--template&lt;/span&gt; react-native@^0.65.0 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;mv &lt;/span&gt;MyApp macos
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Update &lt;code&gt;macos/package.json&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt; {
&lt;span class="gd"&gt;-  "name": "MyApp",
&lt;/span&gt;&lt;span class="gi"&gt;+  "name": "@my-app/macos",
&lt;/span&gt;   "version": "0.0.1",
   "private": true,
   "scripts": {
     "android": "react-native run-android",
     "ios": "react-native run-ios",
     "start": "react-native start",
     "test": "jest",
     "lint": "eslint ."
   },
   "dependencies": {
&lt;span class="gi"&gt;+    "@my-app/app": "*",
&lt;/span&gt;     "react": "16.13.1",
     "react-native": "0.63.0"
   }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Update &lt;code&gt;macos/index.js&lt;/code&gt; to point to our &lt;code&gt;app&lt;/code&gt; workspace:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt; import { AppRegistry } from "react-native";
&lt;span class="gd"&gt;-import App from "./App";
&lt;/span&gt;&lt;span class="gi"&gt;+import App from "@my-app/app";
&lt;/span&gt; import { name as appName } from "./app.json";

 AppRegistry.registerComponent(appName, () =&amp;gt; App);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And finalize the macOS project setup:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://microsoft.github.io/react-native-windows/docs/0.63/rnm-getting-started#install-the-macos-extension"&gt;the macOS extensions&lt;/a&gt;. This process will add the &lt;code&gt;macos&lt;/code&gt; directory (with the native macOS SDK code) to the workspace and update the metro configuration to support the macOS platform.&lt;/li&gt;
&lt;li&gt;Remove the &lt;code&gt;ios&lt;/code&gt; and &lt;code&gt;android&lt;/code&gt; directories from the workspace.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Last but not least, use &lt;code&gt;react-native-monorepo-tools&lt;/code&gt; to make metro compatible with Yarn Workspaces:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="p"&gt;const path = require("path");
const exclusionList = require("metro-config/src/defaults/exclusionList");
const { getMetroConfig } = require("react-native-monorepo-tools");
&lt;/span&gt;
+// Get the metro settings to make it compatible with Yarn workspaces.
&lt;span class="gi"&gt;+const monorepoMetroConfig = getMetroConfig({
+  reactNativeAlias: "react-native-macos",
+});
&lt;/span&gt;
module.exports = {
  transformer: {
    getTransformOptions: async () =&amp;gt; ({
      transform: {
        experimentalImportSupport: false,
        inlineRequires: true,
      },
    }),
  },
&lt;span class="gi"&gt;+ // Add additional Yarn workspace package roots to the module map.
+ // This allows importing from any workspace.
+ watchFolders: monorepoMetroConfig.watchFolders,
+ resolver: {
+   // Ensure we resolve nohoist libraries from this directory.
+   blacklistRE: exclusionList(monorepoMetroConfig.blockList),
+   extraNodeModules: monorepoMetroConfig.extraNodeModules,
+ },
&lt;/span&gt;&lt;span class="err"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run &lt;code&gt;yarn macos&lt;/code&gt; (from the &lt;code&gt;macos&lt;/code&gt; workspace) et voilà, our React Native app is now running on macOS!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qShebOvn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mmazzarolo.com/static/c618cffccc8665dcaf1fb392767b6810/7321b/macos.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qShebOvn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mmazzarolo.com/static/c618cffccc8665dcaf1fb392767b6810/7321b/macos.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#on-supporting-different-react-native-versions"&gt;
  &lt;/a&gt;
  On supporting different React Native versions
&lt;/h2&gt;

&lt;p&gt;Generally, supporting different React Native versions might sound complicated.&lt;br&gt;&lt;br&gt;
From my experience, though, it will rarely be a problem. We only have to worry about breaking changes of React Native JavaScript API/components, which aren't &lt;strong&gt;that&lt;/strong&gt; common nowadays.&lt;br&gt;&lt;br&gt;
And, even if it happens, let's keep in mind that we can always &lt;a href="https://reactnative.dev/docs/platform-specific-code"&gt;encapsulate platform-specific code in multiple ways&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#rootlevel-scripts"&gt;
  &lt;/a&gt;
  Root-level scripts
&lt;/h2&gt;

&lt;p&gt;Just like we did for the &lt;code&gt;mobile&lt;/code&gt; package, I recommend adding a few scripts to the top-level &lt;code&gt;package.json&lt;/code&gt; to invoke workspace-specific scripts (to avoid having to &lt;code&gt;cd&lt;/code&gt; into a directory every time you need to run a script).&lt;/p&gt;

&lt;p&gt;Add the following scripts to the Windows workspace:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"scripts": {
  "start": "react-native start",
  "windows": "react-native run-windows"
},
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the following scripts to the macOS workspace:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"scripts": {
  "macos": "react-native run-macos",
  "xcode": "xed macos",
  "start": "react-native start",
},
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then you can reference them from the project root this way:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"scripts": {
  "macos:metro": "yarn workspace @my-app/macos start",
  "macos:start": "yarn workspace @my-app/macos macos",
  "macos:xcode": "yarn workspace @my-app/macos xcode",
  "windows:start": "yarn workspace @my-app/windows windows",
  "windows:metro": "yarn workspace @my-app/windows start"
},
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#compatibility-and-platformspecific-code"&gt;
  &lt;/a&gt;
  Compatibility and platform-specific code
&lt;/h2&gt;

&lt;p&gt;React Native for Windows + macOS provides compatibility with the vast majority of React Native’s JavaScript API. Features deprecated in React Native should be considered unsupported in React Native for Windows + macOS.&lt;br&gt;&lt;br&gt;
See &lt;a href="https://microsoft.github.io/react-native-windows/docs/parity-status"&gt;"API Parity"&lt;/a&gt; for details.&lt;/p&gt;

&lt;p&gt;Also, React Native provides two ways to organize your Windows-specific and macOS-specific code and separate it from the other platforms:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Using the &lt;a href="https://reactnative.dev/docs/platform-specific-code#platform-module"&gt;&lt;code&gt;platform&lt;/code&gt; module&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Using &lt;a href="https://reactnative.dev/docs/platform-specific-code#platform-specific-extensions"&gt;platform-specific file extensions&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next steps
&lt;/h2&gt;

&lt;p&gt;In the next step, we'll add support for the web to our monorepo.&lt;/p&gt;

&lt;p&gt;Stay tuned!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/mmazzarolo/running-react-native-everywhere-4gpp"&gt;Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/mmazzarolo/running-react-native-everywhere-yarn-workspaces-monorepo-3j5g"&gt;Monorepo setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/mmazzarolo/running-react-native-everywhere-android-ios-3451"&gt;Android &amp;amp; iOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Windows &amp;amp; macOS (☜ you’re here)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;The web (🚧 WIP)&lt;/li&gt;
&lt;li&gt;Electron (🚧 WIP)&lt;/li&gt;
&lt;li&gt;Chrome extension (🚧 WIP)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://mmazzarolo.com/blog/2021-09-19-running-react-native-everywhere-windows-macos/"&gt;mmazzarolo.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>reactnative</category>
    </item>
    <item>
      <title>EpyNN: Educational python for Neural Networks.</title>
      <author>Synthaze</author>
      <pubDate>Wed, 22 Sep 2021 11:36:55 +0000</pubDate>
      <link>https://dev.to/synthaze/epynn-educational-python-for-neural-networks-177g</link>
      <guid>https://dev.to/synthaze/epynn-educational-python-for-neural-networks-177g</guid>
      <description>&lt;p&gt;For those wishing to understand and build from basic implementations of Neural Network architectures, in Python.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Synthaze/EpyNN"&gt;EpyNN - Github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://epynn.net"&gt;EpyNN - Documentation&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>machinelearning</category>
    </item>
  </channel>
</rss>
