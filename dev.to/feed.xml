<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Still Deep in Type Hierarchy Hell Code, Building DDTJ - Day 5</title>
      <author>Shai Almog</author>
      <pubDate>Fri, 24 Dec 2021 11:27:20 +0000</pubDate>
      <link>https://dev.to/codenameone/still-deep-in-type-hierarchy-hell-code-building-ddtj-day-5-19ho</link>
      <guid>https://dev.to/codenameone/still-deep-in-type-hierarchy-hell-code-building-ddtj-day-5-19ho</guid>
      <description>&lt;p&gt;Yesterday I was &lt;a href="https://dev.to/codenameone/end-to-end-debug-object-modeling-first-hard-problem-in-building-ddtj-day-4-179h"&gt;running into a roadblock&lt;/a&gt; which unfortunately I still didn't clear today... &lt;/p&gt;

&lt;p&gt;There’s a point in project development where you feel a bit like those war movie scenes. The hero is surrounded and is just fighting left and right; it seems hopeless, and it’s unclear how they’ll survive. This is where I am right now with DDTJ, deep in the swamp, with a hard to model problem. &lt;/p&gt;

&lt;p&gt;Unfortunately, it doesn’t make for great writing. I can’t really communicate what I’m doing because a lot of it is just “shooting left and right”. The code I write is pretty bad since I’m trying to “get something working” and to be fair, I keep changing my mind. Hopefully, when I get something working, I’ll have the motivation to do a cleanup. But those are pretty hard to do for a spare time project. &lt;/p&gt;

&lt;p&gt;One question I got is “why don’t you just use the JDI object model?”. &lt;/p&gt;

&lt;p&gt;JDI (Java Debug Interface) already did all the work I’m doing. At first I felt it was over-designed but now I appreciate it more (it’s a tough problem). Unfortunately, I can’t reuse their object model. If I could, it would save me a ton of work. But their model isn’t the actual data. It’s tied to a remote VM state. So as the application continues its execution, the data is lost. &lt;/p&gt;

&lt;p&gt;I need to replicate remote VM data locally so I can have it later when I want to generate a test case based on that data. That means doing something similar to what they did. But also pretty different. I need to transfer all the remote state information to my local VM. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#that-doesnt-sound-too-hard"&gt;
  &lt;/a&gt;
  That Doesn’t Sound too Hard
&lt;/h2&gt;

&lt;p&gt;It isn’t when your object model only includes basic building blocks. But it becomes pretty hard when you need to mirror entire object graphs which are built from classes you don’t have in your local VM. If you’re thinking about fetching the classes to the local VM, that’s probably not the right idea. &lt;/p&gt;

&lt;p&gt;Classes don’t work in isolation, you can’t just pull one class without pulling the entire application. Adding the entire application to the current VM is again... Not a good idea. It will break isolation and create a situation where we can affect execution significantly. &lt;/p&gt;

&lt;p&gt;So the solution is to use the JDI API to take a full snapshot of the state with everything we’ll need later to generate the code. That also includes method/class meta-data. The complexity is mostly in the way we store the data and interact with this API. A lot of the code I write looks very “ugly”.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dealing-with-project-stalls"&gt;
  &lt;/a&gt;
  Dealing with Project Stalls
&lt;/h2&gt;

&lt;p&gt;I made little progress today. I was debating posting this day at all, but I think it’s important that people read about the short-term failures as much as on the success.&lt;/p&gt;

&lt;p&gt;Every decently complex project has a grunt/uncertainty phase. You still don’t know if you’ll make it on the other side of the tunnel and have something “good”. Unfortunately, there’s no real cure for that. But there are strategies to “manage” this and avoid a long setback.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#iterative-process"&gt;
  &lt;/a&gt;
  Iterative Process
&lt;/h3&gt;

&lt;p&gt;When you start a project from scratch, you’re effectively in front of an empty canvas. There’s nothing there and you can’t yet see your creation. Frustration and despair are common before you see something running. That’s why it’s important to aim much lower than your eventual goal.&lt;/p&gt;

&lt;p&gt;We need to avoid “theorized” problems, such as performance optimizations, unnecessary features, etc. Stick to the MVP religiously, even at the cost of rewriting extensive parts of the code later on. You’re better off writing bad code and throwing it away if you reach an intermediate goal. &lt;/p&gt;

&lt;p&gt;This maps very well to the concept of sprints. I’m not a big methodology fan and feel that people sometimes apply these processes too religiously. But the idea of aiming for short term quantifiable goals is powerful. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#shortcuts-and-stopgaps"&gt;
  &lt;/a&gt;
  Shortcuts and Stopgaps
&lt;/h3&gt;

&lt;p&gt;Hacks, or halfway points, are an excellent way to get something working. Right now, I’m mostly ignoring the test generation aspect of the project and only focusing on the data collection portion. &lt;/p&gt;

&lt;p&gt;I also picked other shortcuts by avoiding a web interface and focusing only on the CLI for now. We can update later a lot of these decisions, but getting the first running version is crucial. Once you have things running, progress will speed up and compensate for any detours you took for these shortcuts/stopgaps.&lt;/p&gt;

&lt;p&gt;It’s important to file issues for fixing such shortcuts/stopgaps. I don’t bother doing this on a single developer project (because I’m lazy). But if you’re doing this as part of your job, it's important. A good project manager would schedule some of your time for code cleanup and will make sure to revert to these issues.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#backtracking"&gt;
  &lt;/a&gt;
  Backtracking
&lt;/h3&gt;

&lt;p&gt;This is the hardest thing to do. We sometimes take the wrong direction and spend too much time trying to get it to work.&lt;/p&gt;

&lt;p&gt;It might be the “right direction” for the finished product. But for a sprint it might be too much. Unfortunately, once we started in a direction that seems “right” in the long term. It’s very hard to stop and throw away “correct code” in order to do what is effectively a hack. &lt;/p&gt;

&lt;p&gt;This is something that sometimes works. It just takes a lot of effort. In this case, I’m conflicted if the data collection logic I’m trying to implement is over-engineered for this stage of the project. I can’t see a simpler solution that would actually work, but if there was a shortcut, I would take it...&lt;/p&gt;

&lt;p&gt;One thing I might need to backtrack is my focus on quality and testing. I think I might need to put the quality aspect on hold and ignore code coverage for now.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-week"&gt;
  &lt;/a&gt;
  Next Week
&lt;/h2&gt;

&lt;p&gt;I was hoping to have something running this weekend as a Christmas present... These hopes crashed against the harsh reality and constrained time because of family obligations. I have a feeling I would have made it if I was working at an office. &lt;/p&gt;

&lt;p&gt;I hope to get data collection working early next week, otherwise code generation just wouldn’t happen and the whole experiment would tank. I’m not sure when I’ll be able to get time off work to finish such an extensive project if I don’t do this now, so this is pretty crucial. &lt;/p&gt;

&lt;p&gt;In retrospect, for this week I feel I spent too much time on coverage and quality, which was probably the wrong thing to do at this early stage. Usually, I only add these tools later on when the project is functional.&lt;/p&gt;

&lt;p&gt;I’m holding off on this decision. I want to see how next week starts and where I’m at. &lt;/p&gt;

&lt;p&gt;If you find this series interesting/useful feel free to &lt;a href="https://twitter.com/debugagent"&gt;follow me on twitter&lt;/a&gt;...&lt;/p&gt;

</description>
      <category>startup</category>
      <category>tutorial</category>
      <category>java</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Every React Developer Should Know The Fundamental Concepts Of React.js</title>
      <author>Nazma Khatun Nishe</author>
      <pubDate>Fri, 24 Dec 2021 10:59:46 +0000</pubDate>
      <link>https://dev.to/nisheshoha/every-react-developer-should-know-the-fundamental-concepts-of-reactjs-54</link>
      <guid>https://dev.to/nisheshoha/every-react-developer-should-know-the-fundamental-concepts-of-reactjs-54</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o6PzPXha--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zrza1gxuxcihy24v5aqj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o6PzPXha--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zrza1gxuxcihy24v5aqj.jpg" alt="Image description" width="880" height="880"&gt;&lt;/a&gt;Optimize performance of the React application:-&lt;br&gt;
React is defined as a JavaScript library for building user interfaces. There are many ways to speed up your react application.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Use the Production Build-
If you’re facing performance problems in your React apps, make sure you’re testing with the minified production build. By default, React includes many helpful warnings. These warnings are very useful in development. However, they make React larger and slower so you should make sure to use the production version when you deploy the app.
You can check it by installing React Developer Tools for Chrome. If you visit a site with React in production mode, the icon will have a dark background:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you visit a site with React in development mode, the icon will have a red background:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;useMemo( ) :-&lt;br&gt;
This is a React hook that is used to cache functions in React, CPU-expensive functions.&lt;br&gt;
Now see an example:&lt;br&gt;
function App() {&lt;br&gt;
const [count, setCount] = useState(0)&lt;/p&gt;

&lt;p&gt;const expFunc = (count)=&amp;gt; {&lt;br&gt;
    waitSync(3000);&lt;br&gt;
    return count * 90;&lt;br&gt;
}    const resCount = useMemo(()=&amp;gt; {&lt;br&gt;
    return expFunc(count)&lt;br&gt;
}, [count])    return (&lt;br&gt;
    &amp;lt;&amp;gt;&lt;br&gt;
        Count: {resCount}&lt;br&gt;
         setCount(e.target.value)} placeholder="Set Count" /&amp;gt;&lt;br&gt;
    &amp;lt;/&amp;gt;&lt;br&gt;
)&lt;br&gt;
}&lt;br&gt;
The expFunc results will be cached against the input when the same input occurs again useMemo will skip calling the expFunc and return the output cached against the input.&lt;br&gt;
This will make the App component highly optimized.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Virtualize long lists:&lt;br&gt;
If you render large lists of data, it is recommended that you render only a small portion of the datasets within the visible viewport of a browser, then the next data are rendered as the lists are scrolled called “windowing”. Awesome React libraries have been built for this, there is the react-window and react-virtualized by Brian Vaughn.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Avoid Reconciliation:&lt;br&gt;
React compares the newly returned elements with the previously rendered ones by comparing a snapshot of a new object with the last updated object. This way React has to update only changed nodes in React DOM&lt;br&gt;
This whole process is how to React updates DOM which is called Reconciliation.&lt;br&gt;
This process is way faster than Real DOM manipulation.&lt;br&gt;
Even though React is clever enough to update only changed nodes. But when props and state change, re-rendering takes place which takes some time.&lt;br&gt;
So we need to avoid unnecessary re-rendering for such cases.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Power Of Not Mutataing Data:&lt;br&gt;
You should avoid object mutations and instead create a new object. The reason for this design pattern is because React will start by doing a shallow check to see if the snapshots of your state object are the same. Mutable data types like arrays and objects can be updated without creating new copies. As a result, React must traverse these structures comparing all the values to determine if a change has occurred.&lt;br&gt;
The solution to this problem is to follow a more functional approach to setState ( ) updates. Strings and Numbers are non-issues as they are immutable, however, it can be tempting to update an array for example for just pushing a new value onto the end.&lt;br&gt;
The following is the preferred way for updating arrays in React:&lt;br&gt;
// Adding to end of array// Bad&lt;br&gt;
this.state.arr.push('foo');// Good&lt;br&gt;
this.setState({&lt;br&gt;
arr: [...this.state.arr, 'foo']&lt;br&gt;
})// Adding to middle of an array// Bad&lt;br&gt;
this.state.arr[3] = 'foo';//Good&lt;br&gt;
this.setState({&lt;br&gt;
arr: this.state.arr.map((item, index) =&amp;gt; index === 3 ? 'foo' : item)&lt;br&gt;
})// Array deletion// Bad&lt;br&gt;
this.state.arr.splice(2,1)// Good&lt;br&gt;
this.setState({&lt;br&gt;
arr: this.state.arr.filter((item, index) =&amp;gt; index !== 2 )&lt;br&gt;
})&lt;br&gt;
5 things you need to know about React&lt;br&gt;
If you are in the middle of learning it right now, you might be interested in reading this post.&lt;br&gt;
1) It’s not a framework&lt;br&gt;
Angular and other frameworks where some decisions are already made for you. React is just a library and you need to make all decisions by yourself. It helps you to build user interfaces.&lt;br&gt;
It doesn’t help you with server communication, translations, routing, and so on. Some perceive this as a weakness. React is thin and it’s extremely easy to mix it with other 3rd party libraries.&lt;br&gt;
2) JSX&lt;br&gt;
If you looking at React examples you’ve seen JSX in action already. But React code can be written in plain js too.&lt;br&gt;
const rootElement =&lt;br&gt;
React.createElement(‘div’, {},&lt;br&gt;
React.createElement(‘h1’, {style: {color: ‘red’}}, &lt;br&gt;
 ‘The world is yours’),&lt;br&gt;
React.createElement(‘p’, {}, &lt;br&gt;
 ‘Say hello to my little friend’)&lt;br&gt;
)&lt;br&gt;
ReactDOM.render(rootElement, document.getElementById(‘app’))&lt;br&gt;
The people at Facebook came up with JSX — a “syntactic sugar for the React.createElement(component, props, …children) function”.That’s why we can refactor the above example to this:&lt;br&gt;
const RootElement = (&lt;/p&gt;


&lt;h1&gt;The world is yours&lt;/h1&gt;
&lt;p&gt;Say hello to my little friend&lt;/p&gt;


&lt;p&gt;)&lt;br&gt;
ReactDOM.render(RootElement, document.getElementById('app'))&lt;br&gt;
During the build process, Babel will transpile the markup to plain JS.&lt;br&gt;
3) It’s declarative&lt;br&gt;
In React you can use declarative style to write your components.&lt;br&gt;
&lt;br&gt;
{somearray.map(element =&amp;gt; &lt;br&gt;
                          {element.text}&lt;br&gt;
                        )}&lt;br&gt;
&lt;br&gt;
In this  example you are not using for loop to manually create a mapped collection. You are not saying what should be done just how it should look like.&lt;br&gt;
4) You separate the concerns&lt;br&gt;
In React you keep HTML, JS, and often CSS together as a component. You also split JS, HTML, and CSS into different files. “If you keep HTML and JS in separate files you can easily replace the HTML and keep the JS intact”. It doesn’t work that way if you think about it. Most changes to the HTML structure require refactoring of JS logic.&lt;br&gt;
5) State&lt;br&gt;
It’s needed to create a stateful component where the state is changing over time.&lt;br&gt;
const InputBox = React.createClass({&lt;br&gt;
getInitialState () {&lt;br&gt;
return {&lt;br&gt;
  text: ''&lt;br&gt;
}&lt;br&gt;
},&lt;br&gt;
changeText (event) {&lt;br&gt;
this.setState({text: event.target.value})&lt;br&gt;
},&lt;br&gt;
render () {&lt;br&gt;
return (&lt;br&gt;
  &lt;br&gt;
    
      placeholder='text' value={this.state.text} /&amp;gt;&lt;br&gt;
    &lt;span&gt;{this.state.text}&lt;/span&gt;&lt;br&gt;
  &lt;br&gt;
)&lt;br&gt;
}&lt;br&gt;
})&lt;br&gt;
The state update will be scheduled and the component will re-render when it’s done. setState() call needs to be used to inform React about pending state change so it can apply the changes.&lt;br&gt;
Asif Hasan Irfan&lt;br&gt;
I'm a junior web developer. JavaScript is my favorite programming language. As a programmer, I love taking on challenges and love being part of the solution.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Follow&lt;/p&gt;

&lt;p&gt;Your journey starts here.&lt;/p&gt;

&lt;p&gt;Bros., Lecce: We Eat at The Worst Michelin Starred Restaurant, Ever&lt;/p&gt;

&lt;p&gt;My 2021 End of Year Lists&lt;br&gt;
Here’s my annual list of favorite books, music, and movies. Art always sustains and nourishes the soul. But for me, music and storytelling…&lt;br&gt;
MONEY&lt;/p&gt;

&lt;p&gt;Sorry, but the Mother of All Crashes Is Coming and It Won’t Be Fun&lt;br&gt;
MATH&lt;/p&gt;

&lt;p&gt;The Shortest Scientific Papers Ever Published&lt;br&gt;
React&lt;br&gt;
React Performance&lt;/p&gt;

&lt;p&gt;More from Nazma Khatun Nishe&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Follow&lt;/p&gt;

&lt;p&gt;I'm a junior web developer. JavaScript is my favorite programming language. As a programmer, I love taking on challenges and love being part of the solution.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Cyber Security Online Training in Hyderabad </title>
      <author>hemantho7</author>
      <pubDate>Fri, 24 Dec 2021 10:22:07 +0000</pubDate>
      <link>https://dev.to/hemantho7/cyber-security-online-training-in-hyderabad-4hc1</link>
      <guid>https://dev.to/hemantho7/cyber-security-online-training-in-hyderabad-4hc1</guid>
      <description>&lt;p&gt;"India's Cyber Security market is projected to develop to $35.5 billion by 2025. Network safety specialists are attracting pay rates the scope of 7-24 lakhs." - (Source). The term Cyber Security has turned into a question of worldwide interest and significance. As, organizations and associations, particularly the individuals who are given the obligation to protect data identifying with public safety, monetary records, licensed innovation, or wellbeing, need to find critical ways to shield this data from the volume and complexity of digital assaults. Associations today need to accomplish advanced change without thinking twice about security. They are focusing on to ensure delicate information by employing Cyber Security staff to shield their association from security provisos and future assaults. &lt;a href="https://hkrtrainings.com/cyber-security-training-hyderabad"&gt;cyber security training in Hyderabad&lt;/a&gt; includes different instruments, hazard the board approaches, and best practices intended to shield networks from assaults or precluded admittance.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>AWS re:Invent 2021 was a delight</title>
      <author>Bhuvaneswari Subramani</author>
      <pubDate>Fri, 24 Dec 2021 10:06:13 +0000</pubDate>
      <link>https://dev.to/aws-heroes/aws-reinvent-2021-was-a-delight-58g4</link>
      <guid>https://dev.to/aws-heroes/aws-reinvent-2021-was-a-delight-58g4</guid>
      <description>&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#registration"&gt;Registration&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#speaker"&gt;Speaking at Breat-out session &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#awshero"&gt;AWS Hero&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#keynotes"&gt;Keynotes&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#adam"&gt;Adam's Keynote&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#werner"&gt;Dr.Werner's Keynote&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#awscommunity"&gt;AWS Community&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#teaminfor"&gt;Team Infor&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#gallery"&gt;Gallery&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#registration"&gt;
  &lt;/a&gt;
  Registration &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;AWS re:Invent as usual started with magnanimous registration counters for seamless registration on Sunday - 28th Nov 2021. Completed the registration, collected the trademark hoodie, headed to speaker registration followed by Slide Deck copy edit, technical check. All set to re:Invent for a week and looking forward to present, learn and interact.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pHHMyTuJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2yb7suu214n193c2fy8a.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pHHMyTuJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2yb7suu214n193c2fy8a.jpeg" alt="Registration" width="880" height="806"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#speaking-at-breatout-session"&gt;
  &lt;/a&gt;
  Speaking at Breat-out session &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;One solid reason to take all the effort to travel to reInvent 2021 was to honour the opportunity to present in Community Track on  &lt;strong&gt;Enable continuous delivery and resiliency for a static website&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And definitely that warrants a dedicated blog page - &lt;a href="https://dev.to/aws-heroes/speaker-at-aws-reinvent-2021-dk5"&gt;Speaking at AWS re:Invent 2021&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keynotes"&gt;
  &lt;/a&gt;
  Keynotes &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;To witness the most awaited keynote of Adam Selipsky, CEO, AWS, Swami Sivasubramanian, VP AI ML, AWS, and Dr.Werner Vogels, VP &amp;amp; CTO, Amazon.com, from the front row - reserved seating was quite interesting.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#adams-keynote"&gt;
  &lt;/a&gt;
  Adam's Keynote &lt;a&gt;&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lk02Ies4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2xczrtg4xtyl1by1vuu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lk02Ies4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2xczrtg4xtyl1by1vuu.png" alt="Adam's Keynote" width="880" height="499"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Loved ⁦Linda Jojo⁩ in Adam's keynote bringing in proudly about her 60% of diverse workforce and United Airlines association with #aws. Here is one of the best moment at #reinvent. More power to you, mam!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rsIDGvUe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k4w1subc88x1l6lmda1o.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rsIDGvUe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k4w1subc88x1l6lmda1o.jpeg" alt="Linda JoJo" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I would want to stop and say it loudly that #awsskillbuilder and #aws re/start programs could be a game changer for larger chunk of folks who return to work after #careerbreak or who cannot afford for paid courses. Kudos to #awscloud #reinvent #womenintech&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i32fJSWY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w8we49rag5rbyu0kg3dd.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i32fJSWY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w8we49rag5rbyu0kg3dd.jpeg" alt="AWS Skill Builder" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here you go with &lt;a href="https://aws.amazon.com/blogs/aws/top-announcements-of-aws-reinvent-2021/"&gt;Top Announcements of AWS re:Invent 2021&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#drwerners-keynote"&gt;
  &lt;/a&gt;
  Dr.Werner's Keynote &lt;a&gt;&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;AWS Heroes troop waiting to witness ⁦Dr.Werner's keynote.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SmWnUK5o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efpwjd1twgo9i3rsrlp8.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SmWnUK5o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efpwjd1twgo9i3rsrlp8.jpeg" alt="AWS Heroes" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-hero"&gt;
  &lt;/a&gt;
  AWS Hero &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#aws-community"&gt;
  &lt;/a&gt;
  AWS Community &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Finally got to meet ⁦Karissa Wood in person Sridevi⁩ at #reinvent #developerlounge. Thank you so much for all your support for #awscommunity #awscommunitybuilder #awsusergroups&lt;br&gt;
Start a world tour post pandemic 🥰&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--anI91vrZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jyybc3b71gg96lp0r89a.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--anI91vrZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jyybc3b71gg96lp0r89a.jpeg" alt="With Karissa" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#team-infor"&gt;
  &lt;/a&gt;
  Team Infor &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;AWS &amp;amp; Infor Team at Dinner&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oBS_T-92--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k78knh9gyy8ksc079knd.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oBS_T-92--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k78knh9gyy8ksc079knd.jpg" alt="AWS Infor Team" width="880" height="363"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy to meet, Ravi Prakash from Infor Oakland office.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ngRN21ML--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e7b9rjl41zkcm0myz5tu.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ngRN21ML--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e7b9rjl41zkcm0myz5tu.jpeg" alt="Happy to meet, Ravi Prakash" width="768" height="1024"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#gallery"&gt;
  &lt;/a&gt;
  Gallery &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Hello Rashmi!!&lt;br&gt;
We met after 2 years 😊&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6uO_BjYF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7nnkgdknvhnwb2wewq8w.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6uO_BjYF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7nnkgdknvhnwb2wewq8w.jpeg" alt="Mandatory Pic with Rashmi" width="880" height="1173"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>reinvent</category>
      <category>devops</category>
    </item>
    <item>
      <title>CURD operations, NodeJs, JWT</title>
      <author>Md Shah Jalal </author>
      <pubDate>Fri, 24 Dec 2021 09:51:33 +0000</pubDate>
      <link>https://dev.to/programmershahjalal/curd-operations-nodejs-jwt-pel</link>
      <guid>https://dev.to/programmershahjalal/curd-operations-nodejs-jwt-pel</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-the-curd-operations"&gt;
  &lt;/a&gt;
  What is the CURD operations?
&lt;/h2&gt;

&lt;p&gt;When we create a project with React as a client site and with NodeJs as a server site, we have to process some operations on the server site with NodeJs. CURD is an acronym that stands for Create, Update, Read, and Delete. According to our needs, We use to get, post, put, delete methods.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-nodejs"&gt;
  &lt;/a&gt;
  What is NodeJs?
&lt;/h2&gt;

&lt;p&gt;Node.js is an open-source, cross-platform, back-end, JavaScript runtime build on Chrome V8 engine that can execute JavaScript code outside of web browser.&lt;/p&gt;

&lt;p&gt;Node.js runs single-threaded, non-blocking, asynchronous programming, which is very memory efficient.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Important Note:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;NodeJs is a separate or another runtime of JavaScript.&lt;/li&gt;
&lt;li&gt;NASA, Uber, IBM, Paypal use NodeJs.&lt;/li&gt;
&lt;li&gt;The V8 engine makes JavaScript fast Just in time (JIT) compile.&lt;/li&gt;
&lt;li&gt;npm stands for Node Package Manager.&lt;/li&gt;
&lt;li&gt;MongoDB keeps the data in JSON structure.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#what-can-nodejs-do"&gt;
  &lt;/a&gt;
  What can NodeJs do:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Node.js can generate the dynamic page content&lt;/li&gt;
&lt;li&gt;Node.js can create, open, read, write, delete, and close files on the server&lt;/li&gt;
&lt;li&gt;Node.js can collect form data&lt;/li&gt;
&lt;li&gt;Node.js can add, delete, modify data in your database&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-jwt"&gt;
  &lt;/a&gt;
  What is JWT?
&lt;/h2&gt;

&lt;p&gt;Most web apps use security measures to make sure user data stays private. Authentication is a key part of security and JSON Web Tokens (JWT) are a great way to implement authentication.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-are-json-web-tokens"&gt;
  &lt;/a&gt;
  So what are JSON Web Tokens?
&lt;/h2&gt;

&lt;p&gt;JWT is a standard that defines a compact and self-contained way to securely transmit information between a client and a server as a JSON object. The compact size makes the tokens easy to transfer through an URL, POST parameter, or inside an HTTP header. Also, since they are self-contained they include all the necessary information about a user so the database does not need to be queried more than once.&lt;br&gt;
The information in a JWT can be trusted because it is digitally signed using a secret or public/private key pair.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#authentication"&gt;
  &lt;/a&gt;
  Authentication
&lt;/h2&gt;

&lt;p&gt;JWT is mainly used for authentication. After a user logs in to an application, the application will create a JWT and send it back to the user. Subsequent requests by the user will include the JWT. The token tells the server what routes, services, and resources the user is allowed to access. JWT can be easily used across multiple domains so they are often used for Single Sign-On.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#install"&gt;
  &lt;/a&gt;
  Install
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;npm install react-jwt&lt;br&gt;
or&lt;br&gt;
yarn add react-jwt&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";
import { useJwt } from "react-jwt";
const token = "Your JWT";

const Example = () =&amp;gt; {
  const { decodedToken, isExpired } = useJwt(token);
  /*
    If is a valid jwt, 'decodedToken' will be a object
    it could look like:
    {
      "name": "Gustavo",
      "iat": 1596408259,
      "exp": 4752168259
    }

    'isExpired' will return a boolean
    true =&amp;gt; your token is expired
    false =&amp;gt; your token is not expired
  */

  return (
    &amp;lt;div&amp;gt;
      ...
    &amp;lt;/div&amp;gt;
  );
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You can also use the methods isExpired(token) and decodeToken(token)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";
import { isExpired, decodeToken } from "react-jwt";
const token = "Your JWT";

const Example = () =&amp;gt; {
  const myDecodedToken = decodeToken(token);
  const isMyTokenExpired = isExpired(token);

  return (
    &amp;lt;div&amp;gt;
      ...
    &amp;lt;/div&amp;gt;
  );
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#refresh-state"&gt;
  &lt;/a&gt;
  Refresh state
&lt;/h2&gt;

&lt;p&gt;If you use the refreshToken(newToken) method, useJwt's state will be updated&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";
import { useJwt } from "react-jwt";
const token = "Your JWT";

const Example = () =&amp;gt; {
  const { decodedToken, isExpired, reEvaluateToken } = useJwt(token);

  const updateToken = () =&amp;gt; {
    const newToken = "A new JWT";
    reEvaluateToken(newToken); // decodedToken and isExpired will be updated
  }

  return (
    &amp;lt;div&amp;gt;
      ...
    &amp;lt;/div&amp;gt;
  );
};

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
    </item>
    <item>
      <title>My first post</title>
      <author>Fabio Costa</author>
      <pubDate>Fri, 24 Dec 2021 09:26:31 +0000</pubDate>
      <link>https://dev.to/fabiocosta89/my-first-post-4629</link>
      <guid>https://dev.to/fabiocosta89/my-first-post-4629</guid>
      <description>&lt;p&gt;Hello, my name is Fábio and I am a &lt;a href="https://fabiocosta.eu/#about"&gt;Web developer&lt;/a&gt;, specialized in .NET. Although I have a developer degree, I always considered myself a web developer, since I started my career doing web development and I love it.&lt;/p&gt;

&lt;p&gt;I live in &lt;a href="https://en.wikipedia.org/wiki/Luxembourg"&gt;Luxembourg&lt;/a&gt; for almost 8 years now, and I like it. It's a very international (small) country, where you can find several different cultures.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xDqAbUpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rzesr83qpkv8c14vpy71.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xDqAbUpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rzesr83qpkv8c14vpy71.jpg" alt="Luxembourg flag" width="800" height="319"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now the question, why did I create a blog? I could have just created my website, with just my information and done, right?..&lt;/p&gt;

&lt;p&gt;Well, I could do that and then go to &lt;a href="https://medium.com/"&gt;Medium&lt;/a&gt; or &lt;a href="https://dev.to/"&gt;Dev&lt;/a&gt; and read some post from some other developer. The world is full of content consumers and there aren't many creators. Most people spend their free time reading newspapers, on Facebook, Instagram, blogs, etc. I am one of those people also...&lt;/p&gt;

&lt;p&gt;So, I decided I need to create content. Even if it's only for myself. About what? Wherever comes to my mind at the time. About thoughts, tech, coding, .NET, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Avpt4hk8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr4m3lebyvhmii3ed0z4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Avpt4hk8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr4m3lebyvhmii3ed0z4.jpg" alt="Une person at the top of a rock" width="800" height="1067"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And here is my first post, with a small introduction and a promise (that I will give my best, not to fail), with my quest of producing content, relevant and interesting preferentially, and contributing to the world's content. I will share my knowledge and learn a lot with this challenge.&lt;/p&gt;

&lt;p&gt;Accept yourself the challenge. Produce some content for others. Contribute with your knowledge. It will be hard, but you will learn in the process and feel good in the end.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This was first published on my website &lt;a href="https://fabiocosta.eu/blog/my-first-post"&gt;fabiocosta.eu&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>firstpost</category>
      <category>dotnet</category>
      <category>challenge</category>
      <category>writing</category>
    </item>
    <item>
      <title>React-Native/React - VsCode Extensions for effective development</title>
      <author>Rajshekhar Yadav</author>
      <pubDate>Fri, 24 Dec 2021 09:21:57 +0000</pubDate>
      <link>https://dev.to/iamrajshekhar/react-nativereact-vscode-extensions-for-effective-development-26f1</link>
      <guid>https://dev.to/iamrajshekhar/react-nativereact-vscode-extensions-for-effective-development-26f1</guid>
      <description>&lt;p&gt;When it comes to react-native development, VsCode is my go-to IDE. I'd want to share my VsCode experience over the last year. So, let's have a look at some of these React/React-Native extensions that will help you out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;React-Native-Tools&lt;/strong&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=msjsdiag.vscode-react-native"&gt;Install&lt;/a&gt;&lt;br&gt;
Using this extension, you can debug your code and quickly run react-native commands from the command palette.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LKR7oiyg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5n19epzdkxs9pw3iv9pe.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LKR7oiyg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5n19epzdkxs9pw3iv9pe.gif" alt="React-Native tools gif" width="880" height="512"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;VSCode React Refactor&lt;/strong&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=planbcoding.vscode-react-refactor"&gt;Install&lt;/a&gt;&lt;br&gt;
This extension will help you refactor JSX code. It will help you to extract methods from long component and make your code more readable.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Flhrqbm6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5zoc4bhb9kyvuyb8smh.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Flhrqbm6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5zoc4bhb9kyvuyb8smh.gif" alt="Image for Vscode refactor" width="880" height="652"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Eslint&lt;/strong&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint"&gt;Install&lt;/a&gt;&lt;br&gt;
Linting allows you to check your code for potential errors. This process helps you improve the quality of your code, and helps enforce coding standards especially when you’re working in a team.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vO_xAwlM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvrs40f3ze8l1wdx6x81.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vO_xAwlM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvrs40f3ze8l1wdx6x81.gif" alt="From Giphy.com" width="480" height="268"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Prettier - Code formatter&lt;/strong&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode"&gt;Install&lt;/a&gt;&lt;br&gt;
Prettier is a JavaScript code formatting tool. It is particularly useful to ensure that all developers working on a project are formatting code the same way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Spell Checker&lt;/strong&gt; &lt;a href="(https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker)"&gt;Install&lt;/a&gt;&lt;br&gt;
This isn't anything special; it's simply a spell checker for your code. You'll wish you had this after spending 30 minutes debugging only to discover you misspelt a word. Code Spell Checker highlights misspelt terms, saving you time and trouble in the long run.&lt;br&gt;
&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"prettier.singleQuote"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"prettier.eslintIntegration"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"prettier.tabWidth"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"editor.formatOnSave"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;&lt;strong&gt;GitLens&lt;/strong&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens"&gt;Install&lt;/a&gt;&lt;br&gt;
GitLens is a popular extension that enhances VS Code's built-in Git capabilities. It allows you to see who, why, and when a line or code block was changed, as well as hop back in time to learn more about the code's progress.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Color Highlight&lt;/strong&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=naumovs.color-highlight"&gt;Install&lt;/a&gt;&lt;br&gt;
Whenever I have a hex colour in my files, the colour will be set as background of the string.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZLGgzMzW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kb6k37zdp9q25ss006g6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZLGgzMzW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kb6k37zdp9q25ss006g6.png" alt="Color Highlight " width="874" height="88"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Highlight Matching Tag&lt;/strong&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=vincaslt.highlight-matching-tag"&gt;Install&lt;/a&gt;&lt;br&gt;
This extension highlights the matching tag when your cursor is placed on one.&lt;br&gt;
&lt;strong&gt;Auto rename tag&lt;/strong&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag"&gt;Install&lt;/a&gt;&lt;br&gt;
If you rename one HTML/XML tag, the corresponding HTML/XML tag is also renamed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wku9JiaI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d98egzzmeembk504v4h2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wku9JiaI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d98egzzmeembk504v4h2.gif" alt="Auto rename tag" width="880" height="573"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Todo Tree&lt;/strong&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.todo-tree"&gt;Install&lt;/a&gt;&lt;br&gt;
This plugin scans your workspace for TODO and FIXME comment tags and presents them in a tree view in the explorer window. When you click a TODO in the tree, the file will open and the cursor will be placed on the line containing the TODO.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mdk5sCAm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4862k1y4gs9byapgmkkc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mdk5sCAm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4862k1y4gs9byapgmkkc.png" alt="Todo tree" width="880" height="264"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ES7 REACT/REDUX/GRAPHQL/REACT-NATIVE SNIPPETS&lt;/strong&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=dsznajder.es7-react-js-snippets"&gt;Install&lt;/a&gt;&lt;br&gt;
For your VS Code, this extension provides JavaScript and React/Redux related snippets in ES7 with Babel plugin options.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Image preview&lt;/strong&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=kisstkondoros.vscode-gutter-preview"&gt;Install&lt;/a&gt;&lt;br&gt;
The Image Preview extension provides inline previews for images included HTML file types. The extension shows a pop-up window in the editor surface, and an optional image preview in the gutter, which can be toggled on or off in User Settings.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thanks for reading&lt;/strong&gt;&lt;br&gt;
Hope this article helps you in some form or the other. Feel free to add your favourite VsCode Extension.&lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href="https://twitter.com/yrajshekhar231"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Happy Coding !!!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>reactnative</category>
      <category>vscode</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>Which language is used for iOS app development?</title>
      <author>Jhonth Smith</author>
      <pubDate>Fri, 24 Dec 2021 08:33:57 +0000</pubDate>
      <link>https://dev.to/jhonthsmith/which-language-is-used-for-ios-app-development-5fih</link>
      <guid>https://dev.to/jhonthsmith/which-language-is-used-for-ios-app-development-5fih</guid>
      <description>&lt;p&gt;Swift programming language used for &lt;a href="https://www.franticpro.com/ios-app-development/"&gt;Ios app development&lt;/a&gt;, swift programming language  is very powerful and easy to learn. Swift also powerful programming language for IOS, Ipad OS, MacOS, tvOS and watch OS. Swift code is safe by UI design productive software that is running in smoothly and fast.  Swift is the result of the latest research on the programming language.&lt;br&gt;
In this article, I'll clarify precisely what programming language choices you have for coding iOS applications. We'll check out the promising and less promising times of programming in those dialects, and assets for learning them.&lt;br&gt;
At long last, we'll cover methodologies you can use to soar your learning speed and get your application to showcase in record time.&lt;br&gt;
Contemplate your application costs. On the whole, we want to think about an essential inquiry. The "best" &lt;a href="https://www.franticpro.com/ios-app-development/"&gt;iOS programming language&lt;/a&gt; to learn relies completely upon the objectives you've gone ahead for your application.&lt;br&gt;
&lt;strong&gt;Modern:&lt;/strong&gt; Swift is the consequence of the most recent exploration on programming dialects, joined with many years of involvement building Apple stages. Named boundaries are communicated in a perfect linguistic structure that makes APIs in Swift much simpler to peruse and keep up with. Stunningly better, you don't have to type semi-colons. Surmised types make code cleaner and less inclined to botches, while modules kill headers and give namespaces. To best help worldwide dialects and emoticon, Strings are Unicode-right and utilize an UTF-8 based encoding to enhance execution for a wide-assortment of utilization cases. Memory is overseen consequently utilizing tight, deterministic reference counting, downplaying memory utilization without the overhead of trash assortment.&lt;br&gt;
&lt;strong&gt;UI Designing Safely:&lt;/strong&gt; Swift takes out whole classes of perilous code. Factors are constantly introduced before use, exhibits and numbers are checked for flood, memory is consequently made due, and requirement of select admittance to memory prepares for some programming botches. Punctuation is tuned to make it simple to characterize your aim — for instance, straightforward three-character watchwords characterize a variable ( var ) or consistent ( let ). Also Swift vigorously use esteem types, particularly for generally utilized sorts like Arrays and Dictionaries. This implies that when you make a duplicate of something with that kind, you realize it will not be changed somewhere else.&lt;br&gt;
Another wellbeing highlight is that naturally Swift items can never be anything. Indeed, the Swift compiler will prevent you from attempting to make or utilize a nothing object with an aggregate time mistake. This makes composing code a lot of cleaner and more secure, and forestalls an immense classification of runtime crashes in your applications. In any case, there are situations where nothing is legitimate and proper. For these circumstances Swift has a creative element known as optional. A discretionary may contain nothing, however Swift sentence structure constrains you to securely manage it utilizing the? Grammar to show to the compiler you comprehend the conduct and will deal with it securely.&lt;/p&gt;

</description>
      <category>ios</category>
      <category>javascript</category>
      <category>programming</category>
      <category>react</category>
    </item>
    <item>
      <title>Basic Concepts every Node.js developer must know</title>
      <author>DhiWise</author>
      <pubDate>Fri, 24 Dec 2021 08:30:41 +0000</pubDate>
      <link>https://dev.to/dhiwise/basic-concepts-every-nodejs-developer-must-know-4l5</link>
      <guid>https://dev.to/dhiwise/basic-concepts-every-nodejs-developer-must-know-4l5</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RthX5g_N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2AVgJr7GuYaWNNZwN1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RthX5g_N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2AVgJr7GuYaWNNZwN1" alt="" width="624" height="353"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What makes the JavaScript community happy?&lt;/p&gt;

&lt;p&gt;A sure answer is a Node.js technology that shines in the world of real-time web application development. The technology is created in 2009 by Ryan Dahl to solve many issues related to app performance.&lt;/p&gt;

&lt;p&gt;It is worth choosing node.js as the next technology to learn as it allows you to use JavaScript both at the server and client-side. In this article, we are going to explore technology and its basic concepts every node.js beginner must know.&lt;/p&gt;

&lt;p&gt;Well, before that check this out:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#major-insights-of-nodejs"&gt;
  &lt;/a&gt;
  Major insights of Node.js
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Big organizations such as &lt;strong&gt;PayPal, eBay, Netflix, Reddit, LinkedIn, and Tumbler use Node.js.&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;More than **50% of the developers use Node.js **in their projects.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;According to the Stack Overflow developers survey, it is among the top 10 most popular technologies used by developers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It helps to reduce development costs by 58% and increase application performance by 50%.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;85% of the users use it primarily for web app development.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Serverless friendly technology.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can find more information about &lt;a href="https://nodejs.org/en/blog/announcements/nodejs-foundation-survey/"&gt;Node.js insights here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-nodejs-and-why-do-we-need-it"&gt;
  &lt;/a&gt;
  What is Node.js and why do we need it?
&lt;/h2&gt;

&lt;p&gt;Node.js is an asynchronous event-driven javascript runtime built on the V8 JavaScript engine, designed to build scalable network applications.&lt;/p&gt;

&lt;p&gt;JavaScript is the only language Node.js supports natively but many languages can be directly compiled to JS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why do we need Node.js?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Node.js eliminates the limitations of the multithread approach with its single-threaded characteristic.&lt;/p&gt;

&lt;p&gt;Unlike PHP where most functions are blocked until their completion, Node.js functions are nonblocking which means commands are executed concurrently or even in parallel without blocking other commands using callbacks and other advanced mechanisms.&lt;/p&gt;

&lt;p&gt;There are build-in modules and multiple libraries built by the developer community that simplifies and speeds up the app development process.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#basic-concept-in-nodejs"&gt;
  &lt;/a&gt;
  Basic Concept in Node.js
&lt;/h2&gt;

&lt;p&gt;If you are a beginner then you must have a good understanding of following Node.js concepts.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Node.js as an event-driven technology&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Node.js makes extensive use of events that means the control flow of the server-side platform is driven by occurrences of events. When the application starts, it initializes the variables and functions, and then the event listener calls the Event loop.&lt;/p&gt;

&lt;p&gt;The Event loop is nothing but a single thread that receives incoming requests. These requests are checked and executed if they are nonblocking and the blocking request is allocated to the background thread in the worker’s pool. Meanwhile, the event loop waits until the background thread completes its operation and gives the result back to the event loop.&lt;/p&gt;

&lt;p&gt;There are mainly two-component of event-driven programming:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Event handlers&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Event Loop&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;2. Node.js applications run on the single thread&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;JavaScrip is the single-threaded programming language and thus the Node.js applications are single-threaded.&lt;/p&gt;

&lt;p&gt;A Node.js app can deal with multiple events at a time using a single thread(Event loop). However, when you look into its &lt;a href="https://www.geeksforgeeks.org/node-js-web-application-architecture/"&gt;architecture&lt;/a&gt; you will find that there are background threads (worker threads) running in the background that carry out CPU-intensive tasks.&lt;/p&gt;

&lt;p&gt;The above arrangement allows Node.js to perform non-blocking operations.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Note: Worker treads were introduced in the Node.js version 11.7.0 and above, if you are using the prior version, enable it using — experimental-worker flag when invoking Node.js)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. NPM- A package manager for Node.js&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;NPM (Node package manager) is the world’s largest open-source library. Using the NPM package manager you can install the packages you want to build the app faster. Also, you can install custom modules(independent node.js components) using NPM.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h2&gt;

&lt;p&gt;In this short article, we have learned about Node.js, why we need it, and its basic concepts. Now, you have a basic understanding of how Node.js works.&lt;/p&gt;

&lt;p&gt;The technology is used by many companies and startups because of its ultra-modern features. If you started using Node.js, try &lt;a href="https://hubs.la/H0_-wmC0"&gt;DhiWise&lt;/a&gt;- A revolutionary platform to build scalable web and mobile apps.&lt;/p&gt;

&lt;p&gt;The platform supports popular technologies including Node.js and MongoDB. So, what are you waiting for &lt;a href="https://app.dhiwise.com/signin"&gt;sign up&lt;/a&gt; today!&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>javascript</category>
      <category>node</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Routing in React | React Router Update</title>
      <author>Kunal Garg</author>
      <pubDate>Fri, 24 Dec 2021 08:29:38 +0000</pubDate>
      <link>https://dev.to/gargkunal/routing-in-react-react-router-update-4831</link>
      <guid>https://dev.to/gargkunal/routing-in-react-react-router-update-4831</guid>
      <description>&lt;p&gt;In this post, we will learn new react routing and all&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/yL5DqxqnX-A"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Thanks for watching and reading&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>react</category>
      <category>javascript</category>
      <category>be</category>
    </item>
    <item>
      <title>Implementing Linter in a Large Codebase</title>
      <author>Akbar Nafisa</author>
      <pubDate>Fri, 24 Dec 2021 07:50:28 +0000</pubDate>
      <link>https://dev.to/akbarnafisa/implementing-linter-in-a-large-codebase-362p</link>
      <guid>https://dev.to/akbarnafisa/implementing-linter-in-a-large-codebase-362p</guid>
      <description>&lt;p&gt;Linter such as ESlint is a useful tool to improve productivity in the team, it will make the codebase more consistent and improve the code quality. But have you ever implemented linter in a large codebase? you will be greeted with thousands of errors in your terminal. It’s expected that the previous code is written without any linter but when you want to add new code, you need to fix the error to get your code compiled and also to remove the error from a terminal because it’s quite noisy. In this post, I want to share my experience to handle this situation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h2&gt;

&lt;p&gt;The solution that I want to share is not perfect and probably not every team member will agree, the idea is to only lint the file that currently change, thus you only focus to fix the error on the file that you currently working with. It will take a while to lint all of your code files or even some files might never get fixed if you never touch it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#part-1-install-the-dependencies"&gt;
  &lt;/a&gt;
  Part 1: Install the Dependencies
&lt;/h2&gt;

&lt;p&gt;The main dependencies that we need are:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#eslintwebpackplugin"&gt;
  &lt;/a&gt;
  eslint-webpack-plugin
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;eslint-webpack-plugin&lt;/code&gt; has the option &lt;code&gt;lintDirtyModulesOnly&lt;/code&gt; to lint only changed files, and also skip lint on start. This is the key step to implementing our solution.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#husky-and-lintstaged"&gt;
  &lt;/a&gt;
  husky and lint-staged
&lt;/h3&gt;

&lt;p&gt;Add pre-commit hook to run linter when we want to push the code&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#linter"&gt;
  &lt;/a&gt;
  Linter
&lt;/h3&gt;

&lt;p&gt;Add any linter that you wanna use, it can be ESLint, airbnb, typescript, etc&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prettier"&gt;
  &lt;/a&gt;
  prettier
&lt;/h3&gt;

&lt;p&gt;Prettier is an opinionated code formatted. It has a lot of configurations that we can use to match our liking.&lt;/p&gt;

&lt;p&gt;Copy this to install all of the dependencies that we need:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;eslint-webpack-plugin husky lint-staged eslint prettier eslint-config-prettier &lt;span class="nt"&gt;--save-dev&lt;/span&gt;

OR

yarn add eslint-webpack-plugin husky lint-staged eslint prettier eslint-config-prettier &lt;span class="nt"&gt;--dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#part-2-implementation"&gt;
  &lt;/a&gt;
  Part 2: Implementation
&lt;/h2&gt;

&lt;p&gt;First, I assume that you already have &lt;code&gt;.eslintrc&lt;/code&gt; configured, the next step is to add &lt;code&gt;eslint-webpack-plugin&lt;/code&gt; in your Webpack configuration file, make sure to add &lt;code&gt;lintDirtyModulesOnly&lt;/code&gt; in the option.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ESLintPlugin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;eslint-webpack-plugin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
   &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ESLintPlugin&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;files&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./src/**/*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;lintDirtyModulesOnly&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="p"&gt;}),&lt;/span&gt;
 &lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, because we only need to fix the file that’s changed, we can use &lt;code&gt;git diff&lt;/code&gt; to automate the fixing process. Add this script below to the &lt;code&gt;package.json&lt;/code&gt;, the script will diff the branch against your current branch &lt;code&gt;HEAD&lt;/code&gt; and run &lt;code&gt;ESlint&lt;/code&gt; or &lt;code&gt;prettier&lt;/code&gt; to it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"script"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"lint-diff"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"eslint $(git diff --diff-filter=ACMRTUXB --name-only HEAD src/**/* | grep -E &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;.(js|ts)$&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; | xargs) --fix"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"prettier-diff"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"prettier $(git diff --diff-filter=ACMRTUXB --name-only HEAD src/**/* | grep -E &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;.(js|ts)$&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; | xargs) --write"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, add ESlint and prettier in pre-commit hooks, in the &lt;code&gt;package.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"husky"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"hooks"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"pre-commit"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"lint-staged"&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"lint-staged"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"src/**/*.{js,ts}"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="s2"&gt;"prettier --write"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="s2"&gt;"eslint --fix"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Implementing a linter in the codebase and being greeted with thousands of errors in your terminal could be a huge task at first, but using the steps above the errors can be fixed over time and the codebase should get better as your team work on it.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Java/ Convert PPS/PPT to PPTX</title>
      <author>carlwils</author>
      <pubDate>Fri, 24 Dec 2021 07:41:51 +0000</pubDate>
      <link>https://dev.to/carlwils/java-convert-ppsppt-to-pptx-3kd2</link>
      <guid>https://dev.to/carlwils/java-convert-ppsppt-to-pptx-3kd2</guid>
      <description>&lt;p&gt;PPS is a PowerPoint Show format that opens in full-screen slideshow mode and automatically exits when finishing displaying . While PPT is the default file extension for saving presentations in PowerPoint 2003 and earlier versions. Sometimes, you may receive a PowerPoint presentation in .pps or .ppt format. In this article, you will learn how to programmatically convert them to PPTX format using Free Spire.Presentation for Java.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#import-jar-dependency"&gt;
  &lt;/a&gt;
  Import jar dependency
&lt;/h3&gt;

&lt;p&gt;● You can download the &lt;a href="https://www.e-iceblue.com/Download/presentation-for-java-free.html"&gt;free library&lt;/a&gt; and unzip it, and then add the Spire.Presentation.jar file to your project as dependency.&lt;/p&gt;

&lt;p&gt;● Or you can directly add the jar dependency to your maven project by adding the following configurations to the pom.xml.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;repositories&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;repository&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;id&amp;gt;&lt;/span&gt;com.e-iceblue&lt;span class="nt"&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;e-iceblue&lt;span class="nt"&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;url&amp;gt;&lt;/span&gt;http://repo.e-iceblue.com/nexus/content/groups/public/&lt;span class="nt"&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/repository&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/repositories&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;e-iceblue&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spire.presentation.free&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.9.0&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;【The &lt;strong&gt;Presentation.saveToFile()&lt;/strong&gt; method offered by Free Spire.Presentation for Java allows you to convert the pps and ppt file fromat to pptx with just a few lines of code.】&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#convert-pps-to-pptx"&gt;
  &lt;/a&gt;
  Convert PPS to PPTX
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.spire.presentation.*&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;convertPPSToPPTX&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="nc"&gt;Exception&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//Create an instance of presentation document&lt;/span&gt;
        &lt;span class="nc"&gt;Presentation&lt;/span&gt; &lt;span class="n"&gt;ppt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Presentation&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="c1"&gt;//Load PowerPoint  file&lt;/span&gt;
        &lt;span class="n"&gt;ppt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;loadFromFile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sample.pps"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;//Save the PPS document to PPTX file format&lt;/span&gt;
        &lt;span class="n"&gt;ppt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;saveToFile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"output/convertPPSToPPTX.pptx"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;FileFormat&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;PPTX_2013&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f0m6unIE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g403j1b3ojqpdcd7mbkq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f0m6unIE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g403j1b3ojqpdcd7mbkq.jpg" alt="PPStoPPTX" width="346" height="163"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#convert-ppt-to-pptx"&gt;
  &lt;/a&gt;
  Convert PPT to PPTX
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.spire.presentation.*&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;toPPTX&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="nc"&gt;Exception&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//Create an instance of presentation document&lt;/span&gt;
        &lt;span class="nc"&gt;Presentation&lt;/span&gt; &lt;span class="n"&gt;ppt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Presentation&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="c1"&gt;//Load the PowerPoint file from disk&lt;/span&gt;
        &lt;span class="n"&gt;ppt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;loadFromFile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sample.ppt"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;//Save the PPT document to PPTX file format&lt;/span&gt;
        &lt;span class="n"&gt;ppt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;saveToFile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"output/PPTtoPPTX_result.pptx"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;FileFormat&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;PPTX_2013&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;ppt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;dispose&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NN3TfgK2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/scjbj3onkqud97crrk8w.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NN3TfgK2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/scjbj3onkqud97crrk8w.jpg" alt="PPTtoPPTX" width="311" height="150"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>programming</category>
      <category>pptx</category>
      <category>api</category>
    </item>
  </channel>
</rss>
