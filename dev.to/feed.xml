<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Thank you, Apple, for hijacking port 5000 üò£</title>
      <author>Chris Bongers</author>
      <pubDate>Fri, 03 Dec 2021 09:23:50 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/thank-you-apple-for-hijacking-port-5000-nm</link>
      <guid>https://dev.to/dailydevtips1/thank-you-apple-for-hijacking-port-5000-nm</guid>
      <description>&lt;p&gt;You might have already upgraded to Mac OS Monterey. If not, there might be an unpleasant surprise awaiting you.&lt;/p&gt;

&lt;p&gt;For me, it was running the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And getting a message stating port 5000 is already in use...&lt;/p&gt;

&lt;p&gt;It took me a good couple of minutes to find out no other application was using this port, and I was baffled at this point.&lt;/p&gt;

&lt;p&gt;Surely all I did was upgrade to Monterey...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reopening-port-5000-on-mac-os-monterey"&gt;
  &lt;/a&gt;
  Re-opening port 5000 on Mac OS Monterey
&lt;/h2&gt;

&lt;p&gt;After doing some research, I did a portscan and noticed "AirPlay Receiver" was using this port.&lt;/p&gt;

&lt;p&gt;That didn't sound like anything I made.&lt;br&gt;
Did some more research to find out that the AirPlay receiver is on by default.&lt;/p&gt;

&lt;p&gt;To re-enable port 5000, you can simply turn off this checkbox.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fimsbWqp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637558048297/YHaewxiZ2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fimsbWqp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637558048297/YHaewxiZ2.png" alt="AirPlay Receiver in macOS Monterey listening on port 5000" width="880" height="740"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can find this checkbox in &lt;code&gt;Settings&lt;/code&gt; &amp;gt; &lt;code&gt;Sharing&lt;/code&gt; &amp;gt; &lt;code&gt;AirPlay Receiver&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This is not a new thing though, Apple has been using port 5000 for AirPlay since 2004.&lt;br&gt;
The only new part is the introduction to having a Mac listening to AirPlay, which, as mentioned, uses port 5000.&lt;/p&gt;

&lt;p&gt;If you wish to use AirPlay on your Mac, I'd suggest switching your development to a different port.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>How to use Margin in CSS?</title>
      <author>dev-ashishsethi</author>
      <pubDate>Fri, 03 Dec 2021 08:41:21 +0000</pubDate>
      <link>https://dev.to/devashishsethi/how-to-use-margin-in-css-501i</link>
      <guid>https://dev.to/devashishsethi/how-to-use-margin-in-css-501i</guid>
      <description>&lt;p&gt;According to box model in CSS margin is the outer most edge of any element, it can be set on all the four sides of the element. It can be written in shorthand or assigning different values to individual margin properties for example, margin-top:10px, margin-right:20px, margin-left:2px, margin-bottom:8px.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#writing-margin-in-shorthand"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;u&gt;Writing margin in shorthand&lt;/u&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;For writing margin in shorthand there are some things to learn first, let me tell what those are.&lt;/p&gt;

&lt;p&gt;In shorthand you can specify only &lt;strong&gt;one value&lt;/strong&gt; or &lt;strong&gt;two values&lt;/strong&gt; or &lt;strong&gt;three values&lt;/strong&gt; or &lt;strong&gt;four values&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#one-value"&gt;
  &lt;/a&gt;
  One Value
&lt;/h2&gt;

&lt;p&gt;example-&amp;gt; margin: 2rem;&lt;br&gt;
 It applies same measurement(2rem here) to all the four sides.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#two-values"&gt;
  &lt;/a&gt;
  Two Values
&lt;/h2&gt;

&lt;p&gt;example-&amp;gt; margin: 2rem 4rem&lt;br&gt;
 First value gets applied to top and bottom and second value gets &lt;br&gt;
 applied to left and right of element.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#three-values"&gt;
  &lt;/a&gt;
  Three Values
&lt;/h2&gt;

&lt;p&gt;example-&amp;gt; margin: 2rem 4rem 1rem;&lt;br&gt;
 First value applies to top, second value applies to right and &lt;br&gt;
 left and third value applies to bottom.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#four-values"&gt;
  &lt;/a&gt;
  Four Values
&lt;/h2&gt;

&lt;p&gt;example-&amp;gt; margin: 2rem 4rem 3rem 1rem;&lt;br&gt;
 First value gets assigned to top, second values is assigned to &lt;br&gt;
 right, third values gets assigned to bottom and fourth value gets &lt;br&gt;
 assigned to left.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>Create HTML, CSS &amp; Javascript Folder üìÅ Structure </title>
      <author>Pratik</author>
      <pubDate>Fri, 03 Dec 2021 08:13:26 +0000</pubDate>
      <link>https://dev.to/pratikdhame/create-html-css-javascript-folder-structure-4m5p</link>
      <guid>https://dev.to/pratikdhame/create-html-css-javascript-folder-structure-4m5p</guid>
      <description>&lt;p&gt;&lt;strong&gt;1. You need to have node.js installed in your computer&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MGkfXwA0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://encrypted-tbn0.gstatic.com/images%3Fq%3Dtbn:ANd9GcRaz4IN0nOGPud9MV0QlkWdO_RXtnyIfh77hg%26usqp%3DCAU" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MGkfXwA0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://encrypted-tbn0.gstatic.com/images%3Fq%3Dtbn:ANd9GcRaz4IN0nOGPud9MV0QlkWdO_RXtnyIfh77hg%26usqp%3DCAU" alt="node.js" width="739" height="415"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1.&lt;em&gt;Download the Windows installer from Nodejs.org.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;2.&lt;em&gt;Run the installer (the . msi file you downloaded in the previous step.)&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;3.&lt;em&gt;Follow the prompts in the installer (Accept the license agreement, click the NEXT button a bunch of times and accept the default installation settings).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;4.&lt;em&gt;Restart your computer.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.Open Terminal&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7ptOoYhK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/7/78/Appleterminal2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7ptOoYhK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/7/78/Appleterminal2.png" alt="Terminal" width="880" height="617"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Open Terminal wherever you want to create project&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Write Command &lt;code&gt;npx touch-5&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Final Output&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QjGTUPT---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://encrypted-tbn0.gstatic.com/images%3Fq%3Dtbn:ANd9GcQuTwTkLgQs7xOKdMy9k4KW5QLP-TVYpMqpaA%26usqp%3DCAU" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QjGTUPT---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://encrypted-tbn0.gstatic.com/images%3Fq%3Dtbn:ANd9GcQuTwTkLgQs7xOKdMy9k4KW5QLP-TVYpMqpaA%26usqp%3DCAU" alt="CSS and JavaScript Files linked to HTML" width="640" height="479"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can see Folder üìÅ and Files linked together&lt;/li&gt;
&lt;li&gt;HTML boiler-plate code in HTML file&lt;/li&gt;
&lt;li&gt;You can see css and javascript files linked to the html file&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>beginners</category>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>HTML tags | img</title>
      <author>Carlos Espada</author>
      <pubDate>Fri, 03 Dec 2021 08:11:29 +0000</pubDate>
      <link>https://dev.to/carlosespada/html-tags-img-44p1</link>
      <guid>https://dev.to/carlosespada/html-tags-img-44p1</guid>
      <description>&lt;p&gt;It is used to &lt;strong&gt;embed an image into the document&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The HTML standard doesn't list what image formats to support, so user agents &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types"&gt;may support different formats&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The image file formats that are most commonly used on the web are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;APNG&lt;/strong&gt; (&lt;em&gt;Animated Portable Network Graphics&lt;/em&gt;): good choice for lossless animation sequences (GIF is less performant).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;AVIF&lt;/strong&gt; (&lt;em&gt;AV1 Image File Format&lt;/em&gt;): good choice for both images and animated images due to high performance.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;GIF&lt;/strong&gt; (&lt;em&gt;Graphics Interchange Format&lt;/em&gt;): good choice for simple images and animations.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;JPEG&lt;/strong&gt; (&lt;em&gt;Joint Photographic Expert Group&lt;/em&gt;): good choice for lossy compression of still images (currently the most popular).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;PNG&lt;/strong&gt; (&lt;em&gt;Portable Network Graphics&lt;/em&gt;): good choice for lossy compression of still images (slightly better quality than JPEG).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;SVG&lt;/strong&gt; (&lt;em&gt;Scalable Vector Graphics&lt;/em&gt;): vector image format. Use for images that must be drawn accurately at different sizes.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;WebP&lt;/strong&gt; (&lt;em&gt;Web Picture&lt;/em&gt;): excellent choice for both images and animated images.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Formats like WebP and AVIF are highly recommended as they are now broadly (and somewhat deeply) supported by web browsers, and perform much better than PNG, JPEG, GIF for both still and animated images. SVG remains the recommended format for images that must be drawn accurately at different sizes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#image-loading-errors"&gt;
  &lt;/a&gt;
  Image loading errors
&lt;/h2&gt;

&lt;p&gt;If an error occurs while loading or rendering an image, and an &lt;code&gt;onerror&lt;/code&gt; event handler has been set on the &lt;code&gt;error&lt;/code&gt; event, that event handler will get called. This can happen in a number of situations, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;src&lt;/code&gt; attribute is empty (&lt;code&gt;""&lt;/code&gt;) or &lt;code&gt;null&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;src&lt;/code&gt; URL is the same as the URL of the page the user is currently on.&lt;/li&gt;
&lt;li&gt;The image is corrupted in some way that prevents it from being loaded.&lt;/li&gt;
&lt;li&gt;The image's metadata is corrupted in such a way that it's impossible to retrieve its dimensions, and no dimensions were specified in the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element's attributes.&lt;/li&gt;
&lt;li&gt;The image is in a format not supported by the user agent.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#attributes"&gt;
  &lt;/a&gt;
  Attributes
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#alt"&gt;
  &lt;/a&gt;
  alt
&lt;/h3&gt;

&lt;p&gt;Defines an alternative text description of the image. It isn't mandatory but is &lt;strong&gt;incredibly useful for accessibility&lt;/strong&gt; ‚Äî screen readers read this description out to their users so they know what the image means. &lt;/p&gt;

&lt;p&gt;Browsers do not always display images. There are a number of situations in which a browser might not display images, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Non-visual browsers (such as those used by people with visual impairments).&lt;/li&gt;
&lt;li&gt;The user chooses not to display images (saving bandwidth, privacy reasons)&lt;/li&gt;
&lt;li&gt;The image is invalid or an unsupported type&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In these cases, the browser may replace the image with the text in the element's &lt;code&gt;alt&lt;/code&gt; attribute. For these reasons and others, provide a useful value for &lt;code&gt;alt&lt;/code&gt; whenever possible.&lt;/p&gt;

&lt;p&gt;Omitting &lt;code&gt;alt&lt;/code&gt; altogether indicates that the image is a key part of the content and no textual equivalent is available. &lt;strong&gt;Setting this attribute to an empty string&lt;/strong&gt; (&lt;code&gt;alt=""&lt;/code&gt;) indicates that this image is not a key part of the content (it‚Äôs decoration or a tracking pixel), and that &lt;strong&gt;non-visual browsers may omit it from rendering&lt;/strong&gt;. Visual browsers will also hide the broken image icon if the alt is empty and the image failed to display.&lt;/p&gt;

&lt;p&gt;This attribute is also used when copying and pasting the image to text, or saving a linked image to a bookmark.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#crossorigin"&gt;
  &lt;/a&gt;
  crossorigin
&lt;/h3&gt;

&lt;p&gt;Indicates if the fetching of the image must be done using a CORS request. Image data from a CORS-enabled image returned from a CORS request can be reused in the &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; element without being marked "tainted".&lt;/p&gt;

&lt;p&gt;If the &lt;code&gt;crossorigin&lt;/code&gt; attribute is not specified, then a non-CORS request is sent (without the &lt;code&gt;Origin&lt;/code&gt; request header), and the browser marks the image as tainted and restricts access to its image data, preventing its usage in &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; elements.&lt;/p&gt;

&lt;p&gt;If the &lt;code&gt;crossorigin&lt;/code&gt; attribute is specified, then a CORS request is sent (with the &lt;code&gt;Origin&lt;/code&gt; request header); but if the server does not opt into allowing cross-origin access to the image data by the origin site (by not sending any &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; response header, or by not including the site's origin in any &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; response header it does send), then the browser blocks the image from loading, and logs a CORS error to the devtools console.&lt;/p&gt;

&lt;p&gt;Allowed values:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;anonymous&lt;/code&gt;: a CORS request is sent with credentials omitted (that is, no cookies, X.509 certificates, or &lt;code&gt;Authorization&lt;/code&gt; request header).&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;use-credentials&lt;/code&gt;: the CORS request is sent with any credentials included (that is, cookies, X.509 certificates, and the &lt;code&gt;Authorization&lt;/code&gt; request header). If the server does not opt into sharing credentials with the origin site (by sending back the &lt;code&gt;Access-Control-Allow-Credentials: true&lt;/code&gt; response header), then the browser marks the image as tainted and restricts access to its image data.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If the attribute has an invalid value, browsers handle it as if the &lt;code&gt;anonymous&lt;/code&gt; value was used.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#decoding"&gt;
  &lt;/a&gt;
  decoding
&lt;/h3&gt;

&lt;p&gt;Provides an image decoding hint to the browser. Allowed values:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;sync&lt;/code&gt;: decode the image synchronously, for atomic presentation with other content.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;async&lt;/code&gt;: decode the image asynchronously, to reduce delay in presenting other content.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;auto&lt;/code&gt; (default): no preference for the decoding mode. The browser decides what is best for the user.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#height"&gt;
  &lt;/a&gt;
  height
&lt;/h3&gt;

&lt;p&gt;The intrinsic height of the image, in pixels. Must be an integer without a unit. Allows image to take up space before it loads, to mitigate content layout shifts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#intrinsicsize"&gt;
  &lt;/a&gt;
  intrinsicsize
&lt;/h3&gt;

&lt;p&gt;This attribute tells the browser to ignore the actual intrinsic size of the image and pretend it‚Äôs the size specified in the attribute. Specifically, the image would raster at these dimensions and &lt;code&gt;naturalWidth/naturalHeight&lt;/code&gt; on images would return the values specified in this attribute.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ismap"&gt;
  &lt;/a&gt;
  ismap
&lt;/h3&gt;

&lt;p&gt;This Boolean attribute indicates that the image is part of a server-side map. If so, the coordinates where the user clicked on the image are sent to the server.&lt;/p&gt;

&lt;p&gt;This attribute is allowed only if the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element is a descendant of an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element with a valid &lt;code&gt;href&lt;/code&gt; attribute. This gives users without pointing devices a fallback destination.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#loading"&gt;
  &lt;/a&gt;
  loading
&lt;/h3&gt;

&lt;p&gt;Indicates how the browser should load the image:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;eager&lt;/code&gt; (default): loads the image immediately, regardless of whether or not the image is currently within the visible viewport.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;lazy&lt;/code&gt;: defers loading the image until it reaches a calculated distance from the viewport, as defined by the browser. The intent is to avoid the network and storage bandwidth needed to handle the image until it's reasonably certain that it will be needed. This generally improves the performance of the content in most typical use cases.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Loading is only deferred when JavaScript is enabled&lt;/strong&gt;. This is an anti-tracking measure, because if a user agent supported lazy loading when scripting is disabled, it would still be possible for a site to track a user's approximate scroll position throughout a session, by strategically placing images in a page's markup such that a server can track how many images are requested and when.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#referrerpolicy"&gt;
  &lt;/a&gt;
  referrerpolicy
&lt;/h3&gt;

&lt;p&gt;A string indicating which referrer to use when fetching the resource:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;no-referrer&lt;/code&gt;: the &lt;code&gt;Referer&lt;/code&gt; header will not be sent.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;no-referrer-when-downgrade&lt;/code&gt;: the &lt;code&gt;Referer&lt;/code&gt; header will not be sent to origins without TLS (HTTPS).&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;origin&lt;/code&gt;: the sent referrer will be limited to the origin of the referring page: its scheme, host and port.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;origin-when-cross-origin&lt;/code&gt;: the referrer sent to other origins will be limited to the scheme, the host and the port. Navigations on the same origin will still include the path.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;same-origin&lt;/code&gt;: a referrer will be sent for same origin, but cross-origin requests will contain no referrer information.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;strict-origin&lt;/code&gt;: only send the origin of the document as the referrer when the protocol security level stays the same (HTTPS‚ÜíHTTPS), but don't send it to a less secure destination (HTTPS‚ÜíHTTP).&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;strict-origin-when-cross-origin&lt;/code&gt; (default): send a full URL when performing a same-origin request, only send the origin when the protocol security level stays the same (HTTPS‚ÜíHTTPS), and send no header to a less secure destination (HTTPS‚ÜíHTTP).&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;unsafe-url&lt;/code&gt;: the referrer will include the origin and the path (but not the fragment, password or username). This value is unsafe, because it leaks origins and paths from TLS-protected resources to insecure origins.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#sizes"&gt;
  &lt;/a&gt;
  sizes
&lt;/h3&gt;

&lt;p&gt;One or more strings separated by commas, indicating a set of source sizes. Each source size consists of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A media condition. This must be omitted for the last item in the list.&lt;/li&gt;
&lt;li&gt;A source size value.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Media Conditions describe properties of the viewport, not of the image. For example, &lt;code&gt;(max-height: 500px) 1000px&lt;/code&gt; proposes to use a source of 1000px width, if the viewport is not higher than 500px.&lt;/p&gt;

&lt;p&gt;Source size values specify the intended display size of the image. User agents use the current source size to select one of the sources supplied by the &lt;code&gt;srcset&lt;/code&gt; attribute, when those sources are described using width (&lt;code&gt;w&lt;/code&gt;) descriptors. The selected source size affects the intrinsic size of the image (the image‚Äôs display size if no CSS styling is applied). If the &lt;code&gt;srcset&lt;/code&gt; attribute is absent, or contains no values with a width descriptor, then the sizes attribute has no effect.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#src"&gt;
  &lt;/a&gt;
  src
&lt;/h3&gt;

&lt;p&gt;The image URL. &lt;strong&gt;Mandatory&lt;/strong&gt; for the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element. On browsers supporting &lt;code&gt;srcset&lt;/code&gt;, &lt;code&gt;src&lt;/code&gt; is treated like a candidate image with a pixel density descriptor &lt;code&gt;1x&lt;/code&gt;, unless an image with this pixel density descriptor is already defined in &lt;code&gt;srcset&lt;/code&gt;, or unless &lt;code&gt;srcset&lt;/code&gt; contains &lt;code&gt;w&lt;/code&gt; descriptors.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#srcset"&gt;
  &lt;/a&gt;
  srcset
&lt;/h3&gt;

&lt;p&gt;One or more strings separated by commas, indicating possible image sources for the user agent to use. Each string is composed of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A URL to an image&lt;/li&gt;
&lt;li&gt;Optionally, whitespace followed by one of:

&lt;ul&gt;
&lt;li&gt;A width descriptor (a positive integer directly followed by &lt;code&gt;w&lt;/code&gt;). The width descriptor is divided by the source size given in the &lt;code&gt;sizes&lt;/code&gt; attribute to calculate the effective pixel density.&lt;/li&gt;
&lt;li&gt;A pixel density descriptor (a positive floating point number directly followed by &lt;code&gt;x&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If no descriptor is specified, the source is assigned the default descriptor of &lt;code&gt;1x&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It is incorrect to mix width descriptors and pixel density descriptors in the same &lt;code&gt;srcset&lt;/code&gt; attribute. Duplicate descriptors (for instance, two sources in the same &lt;code&gt;srcset&lt;/code&gt; which are both described with &lt;code&gt;2x&lt;/code&gt;) are also invalid.&lt;/p&gt;

&lt;p&gt;The user agent selects any of the available sources at its discretion. This provides them with significant leeway to tailor their selection based on things like user preferences or bandwidth conditions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#width"&gt;
  &lt;/a&gt;
  width
&lt;/h3&gt;

&lt;p&gt;The intrinsic width of the image in pixels. Must be an integer without a unit. Allows image to take up space before it loads, to mitigate content layout shifts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#usemap"&gt;
  &lt;/a&gt;
  usemap
&lt;/h3&gt;

&lt;p&gt;The partial URL (starting with &lt;code&gt;#&lt;/code&gt;) of an image map associated with the element.&lt;/p&gt;

&lt;p&gt;You cannot use this attribute if the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element is inside an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; element.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#styling"&gt;
  &lt;/a&gt;
  Styling
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; is a replaced element; it has a display value of &lt;code&gt;inline&lt;/code&gt; by default, but its default dimensions are defined by the embedded image's intrinsic values, like it were &lt;code&gt;inline-block&lt;/code&gt;. You can set properties like &lt;code&gt;border&lt;/code&gt;/&lt;code&gt;border-radius&lt;/code&gt;, &lt;code&gt;padding&lt;/code&gt;/&lt;code&gt;margin&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, etc. on an image.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; has no baseline, so when images are used in an inline formatting context with &lt;code&gt;vertical-align: baseline&lt;/code&gt;, the bottom of the image will be placed on the text baseline.&lt;/p&gt;

&lt;p&gt;You can use the &lt;code&gt;object-position&lt;/code&gt; property to position the image within the element's box, and the &lt;code&gt;object-fit&lt;/code&gt; property to adjust the sizing of the image within the box (for example, whether the image should fit the box or fill it even if clipping is required).&lt;/p&gt;

&lt;p&gt;Depending on its type, an image may have an intrinsic width and height. For some image types, however, intrinsic dimensions are unnecessary. SVG images, for instance, have no intrinsic dimensions if their root &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; element doesn't have a &lt;code&gt;width&lt;/code&gt; or &lt;code&gt;height&lt;/code&gt; set on it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#accessibility"&gt;
  &lt;/a&gt;
  Accessibility
&lt;/h2&gt;

&lt;p&gt;An &lt;code&gt;alt&lt;/code&gt; attribute's value &lt;strong&gt;should clearly and concisely describe the image's content&lt;/strong&gt;. It should not describe the presence of the image itself or the file name of the image. If the &lt;code&gt;alt&lt;/code&gt; attribute is purposefully left off because the image has no textual equivalent, consider alternate methods to present what the image is trying to communicate.&lt;/p&gt;

&lt;p&gt;Don't&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;img alt="image" src="penguin.jpg"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Do&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;img alt="A Rockhopper Penguin standing on a beach." src="penguin.jpg"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When an &lt;code&gt;alt&lt;/code&gt; attribute &lt;strong&gt;is not present&lt;/strong&gt; on an image, some screen readers &lt;strong&gt;may announce the image's file name instead&lt;/strong&gt;. This can be a confusing experience if the file name isn't representative of the image's contents.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;title&lt;/code&gt; attribute is not an acceptable substitute for the &lt;code&gt;alt&lt;/code&gt; attribute. Additionally, avoid duplicating the &lt;code&gt;alt&lt;/code&gt; attribute's value in a &lt;code&gt;title&lt;/code&gt; attribute declared on the same image. Doing so may cause some screen readers to announce the description twice, creating a confusing experience.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;title&lt;/code&gt; attribute should also not be used as supplemental captioning information to accompany an image's &lt;code&gt;alt&lt;/code&gt; description. If an image needs a caption, use the &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;figcaption&amp;gt;&lt;/code&gt; elements.&lt;/p&gt;

&lt;p&gt;The value of the &lt;code&gt;title&lt;/code&gt; attribute is usually presented to the user as a tooltip, which appears shortly after the cursor stops moving over the image. While this can provide additional information to the user, you should not assume that the user will ever see it: the user may only have keyboard or touchscreen. &lt;strong&gt;If you have information that's particularly important or valuable for the user, present it inline using one of the methods mentioned above&lt;/strong&gt; instead of using &lt;code&gt;title&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It has an &lt;strong&gt;implicit ARIA role&lt;/strong&gt; &lt;code&gt;img&lt;/code&gt; (with non-empty &lt;code&gt;alt&lt;/code&gt; attribute or no &lt;code&gt;alt&lt;/code&gt; attribute) or no corresponding role (with empty &lt;code&gt;alt&lt;/code&gt; attribute).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Type: &lt;em&gt;inline&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Self-closing: &lt;em&gt;Yes&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Semantic value: &lt;em&gt;No&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.w3schools.com/tags/tag_img.asp"&gt;Definition&lt;/a&gt; | &lt;a href="https://www.w3schools.com/tags/tryit.asp?filename=tryhtml_image_test"&gt;Example&lt;/a&gt; | &lt;a href="https://caniuse.com/mdn-html_elements_img"&gt;Support&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>tags</category>
      <category>img</category>
    </item>
    <item>
      <title>Cloud Technology News of the Month: November 2021</title>
      <author>CAST AI</author>
      <pubDate>Fri, 03 Dec 2021 08:10:29 +0000</pubDate>
      <link>https://dev.to/castai/cloud-technology-news-of-the-month-november-2021-464g</link>
      <guid>https://dev.to/castai/cloud-technology-news-of-the-month-november-2021-464g</guid>
      <description>&lt;p&gt;Already feeling the vibe of this year‚Äôs festive season? Here‚Äôs some fresh cloud technology news to keep you on the right track.¬†&lt;/p&gt;

&lt;p&gt;This series brings you up to speed with the latest releases, acquisitions, research, and hidden gems in the world of cloud computing ‚Äì the stuff actually worth reading.&lt;/p&gt;

&lt;p&gt;What happened in the cloud world this November? Keep on reading to find out!&lt;/p&gt;

&lt;p&gt;_____&lt;/p&gt;

&lt;h2&gt;Story of the month: All the new things at AWS, re:Invent style&lt;/h2&gt;

&lt;p&gt;Our team is at &lt;strong&gt;AWS re:Invent&lt;/strong&gt; right now and shared some blazingly hot news with us, including the big news from AWS CEO Adam Selipsky‚Äôs keynote.&lt;/p&gt;

&lt;p&gt;Here are the top things that stood out to us:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;More speed for less money! &lt;/strong&gt;AWS announced &lt;strong&gt;Graviton 3&lt;/strong&gt;, the freshest generation of its Arm-based Graviton processors. The new chip will be 25% faster and use 60% less power, powering some new instance types AWS is rolling out as well (C7g).&lt;/li&gt;
&lt;li&gt;AWS released its open-source &lt;strong&gt;autoscaling tool Karpenter&lt;/strong&gt; to production. We hope that it helps people save money on their cloud bills because back when we tried an earlier version a year ago it wasn‚Äôt all that different from a vanilla Kubernetes cluster autoscaler.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Machine learning &lt;/strong&gt;made easy with a new service called &lt;strong&gt;Amazon SageMaker Canvas&lt;/strong&gt; made for non-specialized engineers or business users. The promise? Anyone can build machine learning prediction models using a point-and-click interface.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s6Qru-jD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/08/dollar-banner.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s6Qru-jD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/08/dollar-banner.png" alt="" width="870" height="324"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;_____&lt;/h2&gt;

&lt;h2&gt;The Business of Cloud&lt;/h2&gt;

&lt;p&gt;The top cloud vendors have a hard time breaking our CAPEX on their IaaS and SaaS offerings, but they manage to make it overall. Take a look at the recent public cloud growth rates, and you‚Äôll see a &lt;strong&gt;correlation between capital expenditure and revenue&lt;/strong&gt;. The top cloud vendor, &lt;strong&gt;AWS grew 10% faster&lt;/strong&gt; in the last quarter than it did a year ago. Scale matters a lot in the cloud and CAPEX helps to secure it.¬†&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://www.infoworld.com/article/3639017/cloud-costs-a-lot-of-money.html"&gt;InfoWorld&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/charlesfitz/status/1453828546040721416"&gt;Charles Fitzgerald on Twitter&lt;/a&gt;¬†&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dell&lt;/strong&gt; is setting up one of the largest corporate spin-offs ever by shedding its 81% stake in &lt;strong&gt;VMware&lt;/strong&gt; to create a software company with a stock market value of &lt;strong&gt;almost $64 billion&lt;/strong&gt;. This is the epilogue to Dell‚Äôs 8-year-long commitment to transforming his interest in the slightly forgotten PC maker into a data center hardware and software company worth $40 billion.&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://arstechnica.com/information-technology/2021/11/dell-spins-off-64-billion-vmware-as-it-battles-debt-hangover/"&gt;Arstechnica&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In an interesting turn of events, the &lt;strong&gt;UK‚Äôs spy agencies&lt;/strong&gt; - MI5, MI6, and GCHQ - are going to use AWS for cloud storage and computing.¬†&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://www.ft.com/content/74782def-1046-4ea5-b796-0802cfb90260"&gt;Financial Times&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nvidia‚Äôs acquisition of Arm&lt;/strong&gt; saga just released another chapter. The deal is now under scrutiny by the FTC, and the EU won‚Äôt hesitate to shut it either. The global chip shortage is probably one of the reasons why.&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://arstechnica.com/tech-policy/2021/11/nvidia-acquisition-of-arm-now-under-scrutiny-by-ftc/"&gt;Arstechnica&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The cloud data service vendor partly owned by an Indonesian tycoon - DCI Indonesia - just became &lt;strong&gt;the world‚Äôs top IPO of 2021&lt;/strong&gt;, noting a 10,852% increase since its share float in January. This makes the company the second-biggest contributor to this year‚Äôs 12% gain of the Jakarta Composite Index.&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://www.bloomberg.com/news/articles/2021-11-26/a-10-000-jump-makes-indonesia-data-firm-world-s-top-gaining-ipo"&gt;Bloomberg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;_____&lt;/p&gt;

&lt;h2&gt;Food for thought&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Single and private clouds are out of the door&lt;/strong&gt;. IBM released a study where it shows how this trend dropped from 29% in 2019 to only 2% in 2021. Who won the race instead? Hybrid cloud and multi cloud! Yet another piece of research showing us that multi cloud is set to become the dominant architecture for cloud service delivery.¬†&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://www.ibm.com/downloads/cas/K0ZGR6BW"&gt;IBM&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, &lt;strong&gt;Google Cloud went down&lt;/strong&gt; in the middle of the month and &lt;strong&gt;took down services like Home Depot, Snap, and Spotify&lt;/strong&gt;. What caused the outage? A glitch in a network configuration. It‚Äôs yet another scenario demonstrating the risk of betting on a single cloud provider to handle all your applications.&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://status.cloud.google.com/incidents/6PM5mNd43NbMqjCZ5REh"&gt;Google Cloud Status Dashboard&lt;/a&gt;¬†&lt;/p&gt;

&lt;p&gt;_____&lt;/p&gt;

&lt;h2&gt;Meanwhile in CAST AI&lt;/h2&gt;

&lt;p&gt;Here are some new product features hot off the press:¬†¬†&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you have ever worked with manual cost management tools, you know how time-consuming that can be. We built a feature that brings you from zero to an optimized state in a few minutes - &lt;strong&gt;Instant Rebalancing&lt;/strong&gt;. Learn more about it &lt;a href="https://cast.ai/blog/introducing-instant-rebalancing-for-a-fully-autonomous-kubernetes-optimization-platform/"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Also, we are &lt;a href="https://cast.ai/blog/cast-ai-is-officially-soc-2-type-ii-compliant/"&gt;&lt;strong&gt;officially SOC 2 Type II compliant!&lt;/strong&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;We also added the &lt;strong&gt;Spot Fallback&lt;/strong&gt; feature that guarantees capacity by temporarily moving your workloads to other nodes until there are new spot instances available.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;Available savings report&lt;/strong&gt; is now enhanced with a graph that displays point in time actual and optimal cluster costs as well as other dimensions (i.e. CPU, Memory, node count).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Scrapable cluster metrics&lt;/strong&gt; are now available, here‚Äôs a handy &lt;a href="https://github.com/castai/examples/tree/main/metrics"&gt;guide&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For &lt;strong&gt;AWS/Kops clusters&lt;/strong&gt; we previously deployed a &lt;strong&gt;Lambda function&lt;/strong&gt; per cluster, it‚Äôs no longer the case. From now on a single Lambda function is deployed per account.&lt;/li&gt;
&lt;li&gt;Added support for &lt;strong&gt;Kops version 1.20&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;_____&lt;/p&gt;

&lt;p&gt;Why not get the next portion of cloud technology news directly to your inbox?&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>news</category>
      <category>kubernetes</category>
      <category>cloudnative</category>
    </item>
    <item>
      <title>Free Bootstrap 5 Admin Template - Dash UI
</title>
      <author>Jitu Chauhan</author>
      <pubDate>Fri, 03 Dec 2021 08:08:09 +0000</pubDate>
      <link>https://dev.to/imjituchauhan/free-bootstrap-5-admin-template-dash-ui-19j2</link>
      <guid>https://dev.to/imjituchauhan/free-bootstrap-5-admin-template-dash-ui-19j2</guid>
      <description>&lt;p&gt;Dash-UI is a Bootstrap 5 Admin &amp;amp; Dashboard Theme. Dash UI Kit a free and open source components and templates kit fully coded with Bootstrap 5.&lt;/p&gt;

&lt;p&gt;Download - &lt;a href="https://codescandy.gumroad.com/l/dashui"&gt;Dash UI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Demo - &lt;a href="https://codescandy.com/dashui/index.html"&gt;Dash UI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Support - &lt;a href="https://github.com/codescandy/Dash-UI/discussions"&gt;Join the Community&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-in-the-package"&gt;
  &lt;/a&gt;
  What's in the package
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;50+ Components&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bootstrap 5.1.3&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;HTML5 &amp;amp; SCSS&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gulp Based Workflow&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;100% Responsive&lt;/li&gt;
&lt;li&gt;Authentication Pages&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Collapsible Sidebar&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Font Icons&lt;/li&gt;
&lt;li&gt;Google Fonts&lt;/li&gt;
&lt;li&gt;Developer &lt;a href="https://codescandy.com/dashui/docs/index.html"&gt;Docs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#pages"&gt;
  &lt;/a&gt;
  Pages
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://codescandy.com/dashui/index.html"&gt;Project Dashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codescandy.com/dashui/pages/profile.html"&gt;Profile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codescandy.com/dashui/pages/settings.html"&gt;Account Settings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codescandy.com/dashui/pages/billing.html"&gt;Billing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codescandy.com/dashui/pages/pricing.html"&gt;Pricing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Authentication Pages&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://codescandy.com/dashui/pages/sign-in.html"&gt;Sign In&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codescandy.com/dashui/pages/sign-up.html"&gt;Sign Up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codescandy.com/dashui/pages/forget-password.html"&gt;Forgot Password&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;404 Error&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Menu Level&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Layout&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Thank you for reading.&lt;/strong&gt;&lt;br&gt;
If you like this product, please support us by sharing our GitHub repository! &lt;a href="https://github.com/codescandy/Dash-UI"&gt;Github&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>opensource</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to customize your Transistor.fm Website with JS and CSS</title>
      <author>swyx</author>
      <pubDate>Fri, 03 Dec 2021 07:58:15 +0000</pubDate>
      <link>https://dev.to/swyx/how-to-customize-your-transistorfm-website-with-js-and-css-3afc</link>
      <guid>https://dev.to/swyx/how-to-customize-your-transistorfm-website-with-js-and-css-3afc</guid>
      <description>&lt;p&gt;The default Transistor.fm website is kinda ugly. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PKQCqj4B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yoyklslz9swh8k9e317s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PKQCqj4B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yoyklslz9swh8k9e317s.png" alt="Image description" width="880" height="924"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's mine: &lt;a href="https://swyx.transistor.fm/"&gt;https://swyx.transistor.fm/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Ctv-5H9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c6t2nf9pgwfmfvv91x5r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Ctv-5H9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c6t2nf9pgwfmfvv91x5r.png" alt="Image description" width="880" height="706"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's how to customize your Transistor.fm website if you use Transistor. But also it's a simple guide to do clientside customizations of almost any website whose code you don't control.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-video-3mins"&gt;
  &lt;/a&gt;
  How To Video (3mins)
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/EyV6QHk63lg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h2&gt;

&lt;p&gt;Head HTML:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pathname&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/episodes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;el&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;site-content&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parentNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertBefore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;site-content&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// assuming index page&lt;/span&gt;
    &lt;span class="nx"&gt;el&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;site-first-episode&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`
&amp;lt;iframe title="swyx mixtape embed" width="100%" height="390" frameborder="no" scrolling="no" seamless src="https://share.transistor.fm/e/learn-in-podcast/playlist/dark"&amp;gt;&amp;lt;/iframe&amp;gt;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;swyxembed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;makeLive&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;swyxembed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;makeLive&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;makeLive&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;CSS:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.site-intro&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.25rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60ch&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="nc"&gt;.site-credits&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="nf"&gt;#site-footer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="nf"&gt;#swyxembed&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="nc"&gt;.site-featured-episodes&lt;/span&gt; &lt;span class="nc"&gt;.site-episode&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="nc"&gt;.site-episode&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="py"&gt;grid-template-areas&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"date title"&lt;/span&gt; &lt;span class="s1"&gt;"date desc"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="py"&gt;grid-template-rows&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;minmax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="py"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10ch&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="py"&gt;grid-column-gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="nc"&gt;.site-episode&lt;/span&gt; &lt;span class="nt"&gt;time&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="py"&gt;grid-area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="nc"&gt;.site-episode&lt;/span&gt; &lt;span class="nt"&gt;time&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="nc"&gt;.site-episode&lt;/span&gt; &lt;span class="nt"&gt;h2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="py"&gt;grid-area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5rem&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="nc"&gt;.site-episode&lt;/span&gt; &lt;span class="nc"&gt;.site-episode-summary&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="py"&gt;grid-area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;desc&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="nc"&gt;.site-episode&lt;/span&gt; &lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>tips</category>
      <category>javascript</category>
      <category>css</category>
    </item>
    <item>
      <title>Stop pushing your React API Key on GitHub üò™</title>
      <author>Mansour Mahamat</author>
      <pubDate>Fri, 03 Dec 2021 07:48:07 +0000</pubDate>
      <link>https://dev.to/mahamatmans/stop-pushing-your-react-api-key-on-github-b2j</link>
      <guid>https://dev.to/mahamatmans/stop-pushing-your-react-api-key-on-github-b2j</guid>
      <description>&lt;p&gt;Have you ever create an application with React, in this application you use external API‚Äôs and you pushed these API keys on GitHub ? &lt;/p&gt;

&lt;p&gt;Oh no bad practice now everybody can use your API key.&lt;/p&gt;

&lt;p&gt;We will see how we can avoid this and hide your API‚Äôs keys on Github, you need .env file.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-setup-env-file-inside-react-app-"&gt;
  &lt;/a&gt;
  How to setup .env file inside React app ?
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;You don‚Äôt need to install env package, this feature is available with &lt;a href="mailto:react-scripts@0.2.3"&gt;react-scripts@0.2.3&lt;/a&gt; and higher.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Make a file called .env in your project root&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Inside the env file, add your variables and API keys value like this :&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;REACT_APP_GITHUB_API_KEY=Hello world 12345
REACT_APP_MOOVIE_API=0123456789
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;You should prefix all your variables name by REACT_APP if not it will be ignored&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Now you need to restart your React server with npm start to access these variables &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Inside your React application, you can now access these variables in using this syntax :&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{process.env.REACT_APP_GITHUB_API_KEY}
{process.env.REACT_APP_MOOVIE_API}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BKbZ975F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6nntrz8tnubutirqppv9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BKbZ975F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6nntrz8tnubutirqppv9.png" alt="API Usage" width="880" height="336"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you have zero excuse to push your API key in your React application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://create-react-app.dev/docs/adding-custom-environment-variables/"&gt;Here you have the React documentation about using environment variables &lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Efeito Scroll Suave (Scroll smooth)</title>
      <author>jeft97</author>
      <pubDate>Fri, 03 Dec 2021 07:45:30 +0000</pubDate>
      <link>https://dev.to/jeft_97/efeito-scroll-suave-scroll-smooth-33b3</link>
      <guid>https://dev.to/jeft_97/efeito-scroll-suave-scroll-smooth-33b3</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nrbQLUdR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yxo5jf7idorsue0sqo46.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nrbQLUdR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yxo5jf7idorsue0sqo46.gif" alt="Image description" width="880" height="478"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Premissa:&lt;/strong&gt;&lt;br&gt;
Antes mesmo de navegarmos nesse grande mar de c√≥digos e explica√ß√µes, gostaria de ser seguro que voc√™ esteje completamente ciente que o nosso foco principal ser√° explicar os conceitos de JavaScript, portanto se tiveres problemas em entender html e alguns conceitos b√°sicos de JavaScript, por favor este tutorial n√£o ser√° muito √∫til para voc√™, ao contr√°rio, ser√° provavelmente uma frustra√ß√£o. &lt;/p&gt;

&lt;p&gt;dito isso, gostaria de listar aqui o nosso c√≥digo html, compreende-o fortemente antes mesmo que eu o explique e assim ajudar√° voc√™ tamb√©m a ter uma melhor compreens√£o do conteudo.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I4-8SzB9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f2h52rcje993n4i0567d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I4-8SzB9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f2h52rcje993n4i0567d.png" alt="Image description" width="880" height="236"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;descri√ß√£o:imagem-1&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;a imagem acima apresenta o nosso bot√£o que servir√° como elemento a ser clicado e posteriormente nos levar√° at√© a sec√ß√£o desejada.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y71Z1vew--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1qrdmata7tep3mhpr18.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y71Z1vew--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1qrdmata7tep3mhpr18.png" alt="Image description" width="880" height="526"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;descri√ß√£o:imagem-2&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;a imagem acima refere-se a sec√ß√£o na qual queremos chegar com o nosso scroll suave uma vez clicado ao nosso bot√£o descrito na imagem-1.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tendo o nosso c√≥digo html efeito, agora √© necess√°rio selecionarmos estes dois elementos, o bot√£o (descrito na imagem-1) e a sec√ß√£o (section descrito na imagem-2) no nosso javascript, para isso devemos usar seguir os seguintes passos:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aUGEWEpd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4eif6rdbz8tvmbltwgez.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aUGEWEpd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4eif6rdbz8tvmbltwgez.png" alt="Image description" width="880" height="288"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;descri√ß√£o:imagem-3&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;como voc√™ v√™, a ideia √© selecionar os dois elementos no qual precisaremos, o bot√£o, que servir√° para aplicarmos o evento, a sec√ß√£o (section), que ouvir√° e executar√° esse evento atrav√©s de uma fun√ß√£o contendo as instru√ß√µes necess√°rias&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Agora que estamos prontos com as ideias fundamentais que giram em torno do nosso desafio de hoje, por favor entre no barco e vamos navegar por mais de 3000 mil milhas da costa.&lt;/p&gt;

&lt;p&gt;Para a aplica√ß√£o do nosso efeito scroll suave (scroll smooth) existe duas t√©cnicas bastante usadas que s√£o:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Usando coordenadas explicitas (scrollTo(object))&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Usando coordenadas impl√≠citas (scrollIntoView(object))&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#usando-coordenadas-explicitas-scrolltoobject"&gt;
  &lt;/a&gt;
  Usando coordenadas explicitas (scrollTo(object))
&lt;/h4&gt;

&lt;p&gt;A primeira ideia sobre essa t√©cnica √© obtermos coordenadas do nosso elemento no qual queremos que a nossa barra de rolagem tenha como destino, Em nosso caso ser√° a nossa &lt;strong&gt;section1&lt;/strong&gt;.√â importante real√ßar que est√° t√©cnica √© bastante antiga e ela comporta um custo computacional alto, mas para fins did√°ticos e tamb√©m por compatibilidade com alguns browsers antigos que n√£o suportam a nova t√©cnica que veremos posteriormente, decidi trazer ela para um estudo.&lt;br&gt;
Sendo que a ideia √© ter as coordenadas X e Y da nossa &lt;strong&gt;section1&lt;/strong&gt;, existe um m√©todo do nosso pr√≥prio elemento que se chama &lt;strong&gt;getBluidingClientReact()&lt;/strong&gt; que obt√©m os valor das coordenadas desejada, este m√©todo nos retorna um objeto &lt;strong&gt;DOMRect&lt;/strong&gt;  que cont√©m v√°rias propriedades, mas para o nosso estudo estaremos interessados em utilizar as propriedades Left e Top. Left representa a coordenada no eixo X, ou seja ela representa a dist√¢ncia no eixo X entre o elemento clicado(bot√£o) at√© ao elemento na qual queremos rolar (section1) no eixo X do plano cartesiano, e o Top representa a coordenada do eixo Y, ou seja ela representa a dist√¢ncia no eixo Y entre o elemento clicado (Bot√£o) at√© ao elemento na qual queremos rolar (section1) no eixo Y do plano cartesiano.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fiDuzoeW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ijm2t33pyvg2rlu2lpzg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fiDuzoeW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ijm2t33pyvg2rlu2lpzg.jpg" alt="Image description" width="880" height="880"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;descri√ß√£o:imagem-4&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Como um m√≠nimo de matem√°tica b√°sica conseguimos perceber e ter uma ideia sobre os nossos dois eixos.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Se notarmos com aten√ß√£o o nosso eixo X representado por Left, o seu valor ser√° zero porque o elemento ocupa toda p√°gina e esse valor permanece inalter√°vel, J√° o eixo  Y representado por Top o seu valor vai mudando  em fun√ß√£o da nossa barra de rolagem, quando o scroll(barra de rolagem) chega at√© a section1 o Top (eixo Y) assume valor 0 simbolizando assim que chegamos da nossa barra de rolagem. Tendo em posse esses dois valores preciosos, nos √© hora de aplicar esses valores em nosso objeto &lt;strong&gt;windows&lt;/strong&gt; porque √© este objeto que controla a nossa barra de rolagem. para isso, basta usarmos um m√©todo do nosso objeto windows chamado scrollTo() passando um objecto que recebe as nossas coordenadas e uma propriedade especial chamada &lt;strong&gt;behavior&lt;/strong&gt; que ter√° como valor &lt;strong&gt;smooth&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;obs:&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A propriedade &lt;strong&gt;behavior&lt;/strong&gt; recebe dois valores, um √© o &lt;strong&gt;auto&lt;/strong&gt;, que representa o comportamento padr√£o das barraras de rolagem de um navegador, j√° o &lt;strong&gt;smooth&lt;/strong&gt; torna a rolagem da barra suave. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UQCjvJb4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gdpmo799lhwytd4mpgc5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UQCjvJb4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gdpmo799lhwytd4mpgc5.png" alt="Image description" width="880" height="668"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;descri√ß√£o:imagem-5&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Aplicando o evento click ao bot√£o e executado a fun√ß√£o callback para realiza√ß√£o do nosso efeito.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ok, agora parece que chegamos ao fim do nosso trabalho, mas n√£o, infelizmente n√£o, com um pouco mais de aten√ß√£o percebemos que temos que resolver ainda mais um pequeno problema, que problema? Se eu quando fa√ßo click ao bot√£o me leva a sec√ß√£o deseja e com efeito do scroll suave. Realmente s√≥ com essas linhas de c√≥digos o nosso efeito j√° funciona, mas se redimensionarmos o nosso browser no eixo Y perceber√°s que n√£o teremos o resultado esperado. Mas qual √© o motivo deste comportamento?&lt;br&gt;
Bem, o nosso problema existe pelo facto que as nossas viewport dos browsers t√™m dimens√µes relativas e n√£o fixas, e cada vez que eu altero a dimens√£o do nosso browser a nossa viewport muda as suas dimens√µes. Uma outra causa clara sobre isso, √© a exist√™ncia de v√°rios dispositivos que executar√£o o nosso programa, visto que elas possuem dimens√µes diferentes em base ao dispositivo que estamos usando, ent√£o tamb√©m nos pode gerar esse problema.&lt;br&gt;
&lt;em&gt;Exemplo:&lt;/em&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;uma viewport de um smartphone Galaxy n√£o √© igual a de um computador ou iPhone.&lt;/p&gt;

&lt;p&gt;Agora que identificamos o nosso problema, a nossa solu√ß√£o passa por ter mais outras duas coordenadas que representam a nossa viewport com valores relativos, para isso temos  duas propriedades do objeto windows  que retornam os valores das coordenadas X e Y da nossa viewport e posteriormente esses valores devem ser somando com as coordenadas vinda do nosso elemento (section1), ou seja, a coordenada Y retornada do objeto window deve somar com a coordenada Y do nosso elemento, e a coordenada X  retornada do objeto window deve somar com a coordenada X do nosso elemento.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OQiHtu-g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n5actm3t2egpt5vn5fcu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OQiHtu-g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n5actm3t2egpt5vn5fcu.png" alt="Image description" width="880" height="639"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;descri√ß√£o:imagem-6&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Window.pageXOffset = coordenada X da janela (Windows = viewport) &lt;br&gt;
Window.pageYOffset = coordenada Y da janela (Windows = viewport)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#usando-coordenadas-impl%C3%ADcitas-scrollintoviewobject"&gt;
  &lt;/a&gt;
  Usando coordenadas impl√≠citas (scrollIntoView(object))
&lt;/h4&gt;

&lt;p&gt;Antes de explicar o uso da segunda t√©cnica gostaria de fazer uma premissa muito importante, O uso deste m√©todo √© recente, e para browsers antigos possivelmente n√£o funcionar√° por n√£o terem suporte ao mesmo, por isso antes do uso do mesmo √© necess√°ria uma verifica√ß√£o onde o seu servi√ßo poder√° ser consumido, assim poder√°s evitar qualquer problema de funcionamento, voc√™ pode der essa informa√ß√£o visitando o &lt;strong&gt;can I use&lt;/strong&gt; para ter ideia do suporte na data atual em que voc√™ l√™ este artigo, mas contudo deixarei aqui tamb√©m uma imagem da visita feita no can I use com o suporte da data atual. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0ZDXIyGp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lple2iz0sa04pp66vgtz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ZDXIyGp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lple2iz0sa04pp66vgtz.png" alt="Image description" width="880" height="451"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;descri√ß√£o:imagem-7&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Consulta no &lt;strong&gt;can I use&lt;/strong&gt; para verificar o suporte do m√©todo scrollIntoView nos browsers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Depois dessa pequena observa√ß√£o gostaria de dizer que este m√©todo √© ainda mais f√°cil do que o primeiro, porque com este m√©todo n√£o nos preocupamos em ter essas coordenadas que parecem extremamente tediosa de entender, a ideia primaria √© ter a refer√™ncia do elemento no qual queremos que o nosso scroll v√° suavemente depois do click, Posteriormente devemos pegar esse elemento e executar simplesmente um seu m√©todo  chamado scrollIntoView passando como par√¢metro do m√©todo um objeto com a propriedade behavior tendo o valor smooth.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QuGS0hDr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yf30psq7lrh4zyqe65zg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QuGS0hDr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yf30psq7lrh4zyqe65zg.png" alt="Image description" width="880" height="445"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;descri√ß√£o:imagem-8&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Executando o nosso efeito s√≥ com uma linha de c√≥digo &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Simplesmente f√°cil e satisfat√≥rio, neste tutorial n√£o mexemos com o delay na qual o scroll poderia ter para chegar ao elemento desejado, mais nos pr√≥ximos artigos espero trazer isso pra voc√™s de uma maneira mais simples de se implementar, mas sem esquecer os fundamentos por tr√°s. Sei que n√£o nos conv√©m refazer a roda, mas √© necess√°rio saber com que material √© feito e como √© feito para que saibamos escolher uma boa roda e distinguir ela no meio de qualquer coisa circular com a mesma cor.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;author: Jeft F. Matamba&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Bootiful - a Bootstrap v5 template</title>
      <author>David Boureau</author>
      <pubDate>Fri, 03 Dec 2021 07:21:19 +0000</pubDate>
      <link>https://dev.to/bdavidxyz/bootiful-a-bootstrap-v5-template-phd</link>
      <guid>https://dev.to/bdavidxyz/bootiful-a-bootstrap-v5-template-phd</guid>
      <description>&lt;p&gt;I created an open-source Bootstrap v5 theme on my free time. It is Bootstrap v5, but I tried to code it "the Tailwind way", thus, there is no extra CSS components : utility-classes only, using Bootstrap v5 utility API most of the time (and very few "style" attributes for corner cases). At the end of this small project, I enjoyed a lot to code in this way, saved lot of time and mental headaches. &lt;/p&gt;

&lt;p&gt;Here is the demo : &lt;a href="https://bootiful.org/"&gt;https://bootiful.org/&lt;/a&gt; &lt;br&gt;
The GitHub repo : &lt;a href="https://github.com/bdavidxyz/bootiful/"&gt;https://github.com/bdavidxyz/bootiful/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What do you think ? &lt;/p&gt;

</description>
      <category>bootstrap</category>
      <category>css</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What Are the Common Misconceptions About Machine Learning?</title>
      <author>Abid</author>
      <pubDate>Fri, 03 Dec 2021 07:16:29 +0000</pubDate>
      <link>https://dev.to/kingabzpro/what-are-the-common-misconceptions-about-machine-learning-4937</link>
      <guid>https://dev.to/kingabzpro/what-are-the-common-misconceptions-about-machine-learning-4937</guid>
      <description>&lt;p&gt;There is a hype train going on about ML (Machine Learning) and most of the beginners are getting victims of this hype as they are getting in for the wrong reasons. Your professor will explain how getting a Ph.D. is necessary if you want to get better at machine learning or your peers are telling you how to get better GPU and IDE (Integrated Development Environment) will help you get better results. As you start to learning from the online course you realize that you need a bigger dataset and expertise in Python. After learning the required skills when you apply for a job you realize that you need more than a few courses or certifications to make it. In the end, after getting the job, you realize that it is demanding work and sometimes these jobs don't pay well at the initial stages.&lt;/p&gt;




&lt;p&gt;This article will help you get through those disappointments and prepare you to face these problems. We will be learning a lot about the real-life problem faced by a beginner getting into the machine learning field.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There is clear empirical evidence that you don‚Äôt need lots of math, you don‚Äôt need lots of data, and you don‚Äôt need lots of expensive computers. ‚Äî Jeremy Howard (Practical Deep Learning for Coders)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Continue reading: &lt;a href="https://pub.towardsai.net/what-are-the-common-misconceptions-about-machine-learning-2f43bfd40002"&gt;What Are the Common Misconceptions About Machine Learning?&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>beginners</category>
      <category>career</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to Create a Loader!</title>
      <author>Ustariz Enzo</author>
      <pubDate>Fri, 03 Dec 2021 07:03:08 +0000</pubDate>
      <link>https://dev.to/ziratsu/how-to-create-a-loader-2f7h</link>
      <guid>https://dev.to/ziratsu/how-to-create-a-loader-2f7h</guid>
      <description>&lt;p&gt;Hey &lt;strong&gt;fellow creators&lt;/strong&gt;,&lt;/p&gt;

&lt;p&gt;You want to add a &lt;em&gt;loader&lt;/em&gt; to your app, but don't know where to start? Look no further!&lt;/p&gt;

&lt;p&gt;If you prefer to watch the video &lt;strong&gt;version&lt;/strong&gt;, it's right here :&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/fnv9lifum1w"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Here's the &lt;a href="https://codepen.io/Enzo-Ustariz/pen/LYygJEK"&gt;source code&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-the-html-structure"&gt;
  &lt;/a&gt;
  1. The HTML structure.
&lt;/h2&gt;

&lt;p&gt;Create a &lt;em&gt;loader-container&lt;/em&gt; with three dots inside it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"loader-container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"dot d1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"dot d2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"dot d3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-style-the-loader"&gt;
  &lt;/a&gt;
  2. Style the loader.
&lt;/h2&gt;

&lt;p&gt;Style the loader with a &lt;em&gt;position: absolute&lt;/em&gt; and make it take the full width and height of the viewport. Then, make sure the three dots are centered in the page:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*,&lt;/span&gt;
&lt;span class="nd"&gt;::before&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nd"&gt;::after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Helvetica&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.loader-container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f1f1f1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;opacity&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt; &lt;span class="n"&gt;ease-in-out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-animate-the-loader"&gt;
  &lt;/a&gt;
  3. Animate the loader.
&lt;/h2&gt;

&lt;p&gt;Now, style the dots so that they can be easily seen (make it 25px wide and 25px high) and color them black. Finally, add an animation that you'll create right after this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.dot&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;loader&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt; &lt;span class="m"&gt;0.3s&lt;/span&gt; &lt;span class="n"&gt;alternate&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The key to the animation is to add a delay to the second and third dots' animation:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.d2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.05s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.d3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.1s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, create the animation with a keyframe:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;loader&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-30px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You've created a simple but effective &lt;em&gt;loader in CSS&lt;/em&gt;, well done!&lt;/p&gt;

&lt;p&gt;Come and take a look at my &lt;strong&gt;Youtube channel&lt;/strong&gt;: &lt;a href="https://www.youtube.com/c/Learntocreate/videos"&gt;https://www.youtube.com/c/Learntocreate/videos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;See you soon!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Enzo. &lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
