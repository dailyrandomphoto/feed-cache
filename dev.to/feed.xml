<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Complete Glossary of Keras Optimizers and When to Use Them (With Code)</title>
      <author>Avi Arora</author>
      <pubDate>Wed, 06 Oct 2021 20:43:34 +0000</pubDate>
      <link>https://dev.to/aarora4/complete-glossary-of-keras-optimizers-and-when-to-use-them-with-code-iij</link>
      <guid>https://dev.to/aarora4/complete-glossary-of-keras-optimizers-and-when-to-use-them-with-code-iij</guid>
      <description>&lt;p&gt;Read the full article here: &lt;a href="https://analyticsarora.com/complete-glossary-of-keras-optimizers-and-when-to-use-them-with-code/"&gt;https://analyticsarora.com/complete-glossary-of-keras-optimizers-and-when-to-use-them-with-code/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;When a deep neural network ends up going through a training batch, where it propagates the inputs through the layers, it needs a mechanism to decide how it will use the predicted results against the known values to adjust the parameters of the neural network. These parameters are commonly known as the weights and biases of the nodes within the hidden layers.&lt;/p&gt;

&lt;p&gt;This above-mentioned mechanism is where the optimizers kick in. Optimizers are the algorithms deciding how the learning parameters are adjusted. These optimizers, along with the loss functions, are the backbone of all deep neural networks.&lt;/p&gt;

&lt;p&gt;Throughout this guide, we'll go through a detailed explanation of how the optimizers work and the different types of optimizers that Keras provides us, along with instantiation examples. Moreover, we'll also be taking a look at the situations where certain optimizers work better than others.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;Article Overview&lt;/strong&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;How Do Optimizers Work?&lt;/li&gt;
&lt;li&gt;How To Use Optimizers in Keras?&lt;/li&gt;
&lt;li&gt;SGD Optimizer&lt;/li&gt;
&lt;li&gt;Adagrad Optimizer&lt;/li&gt;
&lt;li&gt;RMS Optimizer&lt;/li&gt;
&lt;li&gt;Adadelta Optimizer&lt;/li&gt;
&lt;li&gt;Adam Optimizer&lt;/li&gt;
&lt;li&gt;Summary&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>machinelearning</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>python</category>
    </item>
    <item>
      <title>3 Free super duper Tailwind CSS templates for your next project. </title>
      <author>Michael Andreuzza</author>
      <pubDate>Wed, 06 Oct 2021 20:37:26 +0000</pubDate>
      <link>https://dev.to/mike_andreuzza/3-free-super-duper-tailwind-css-templates-for-your-next-project-2kne</link>
      <guid>https://dev.to/mike_andreuzza/3-free-super-duper-tailwind-css-templates-for-your-next-project-2kne</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hello-everyone"&gt;
  &lt;/a&gt;
  Hello everyone!
&lt;/h2&gt;

&lt;p&gt;Long time no read, how are you all doing? Hope good.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h3&gt;

&lt;p&gt;Well, I haven't post because I have been very busy working on side projects with &lt;a class="mentioned-user" href="https://dev.to/gabrielperales"&gt;@gabrielperales&lt;/a&gt;
, and because I took a brake on DevTo also... In fact this is the new account, I deleted my past with 5k followers to start over again.&lt;/p&gt;

&lt;p&gt;If you do not know me, this is &lt;a href="https://wickedlabs.dev/"&gt;what I do&lt;/a&gt; and you can follow our projects on &lt;a href="https://twitter.com/Mike_Andreuzza"&gt;my Twitter&lt;/a&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#straight-to-the-point"&gt;
  &lt;/a&gt;
  Straight to the point.
&lt;/h3&gt;

&lt;p&gt;We have made free templates that you can download from our main side projects &lt;a href="https://www.wickedtemplates.com/"&gt;Wicked Templates&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#let-me-tell-you-about-the-stack"&gt;
  &lt;/a&gt;
  Let me tell you about the stack.
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#html-version"&gt;
  &lt;/a&gt;
  HTML Version
&lt;/h4&gt;

&lt;p&gt;We mainly use plain HTML with Tailwind CSS to create our projects, then we use also build the same template with Next.js ( well, &lt;a class="mentioned-user" href="https://dev.to/gabrielperales"&gt;@gabrielperales&lt;/a&gt;
 passes and I build the HTML Version )&lt;/p&gt;

&lt;p&gt;This scaffolding uses gulp to create workflows to make esier the development. These are other of the dependencies and technologies we use:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tailwind CSS as utility CSS framework&lt;/li&gt;
&lt;li&gt;Handlebars as template engine to join our layouts, partials into pages.&lt;/li&gt;
&lt;li&gt;Imagemin to minify images and optimize them for web.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#nextjs-version"&gt;
  &lt;/a&gt;
  Next.js version
&lt;/h4&gt;

&lt;p&gt;This is a Next.js project bootstrapped with create-next-app.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#this-are-the-templates"&gt;
  &lt;/a&gt;
  This are the templates
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#marfil-built-in-htmltailwind-css"&gt;
  &lt;/a&gt;
  Marfil built in HTML/Tailwind CSS:
&lt;/h4&gt;

&lt;p&gt;This template is a one page portfolio to list all your projects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PdTM6a0w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/2212936/screenshots/16328731/media/f883d1d0cd0d4938ee6ba4af7983a7b6.png%3Fcompress%3D1%26resize%3D1600x1200" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PdTM6a0w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/2212936/screenshots/16328731/media/f883d1d0cd0d4938ee6ba4af7983a7b6.png%3Fcompress%3D1%26resize%3D1600x1200" alt="Marfil"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#gradientti-is-available-on-htmltailwind-css-and-nextjstailwind-css"&gt;
  &lt;/a&gt;
  Gradientti is available on HTML/Tailwind CSS and Next.js/Tailwind CSS
&lt;/h4&gt;

&lt;p&gt;(&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sthaPhAi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x2kfjm9i8dgfm2ck1ui5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sthaPhAi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x2kfjm9i8dgfm2ck1ui5.png" alt="Gradientti"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#synthwave-is-available-on-htmltailwind-css"&gt;
  &lt;/a&gt;
  Synthwave is available on HTML/Tailwind CSS
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B0C-1s6W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcjlkydp3bwmgwuhu5yd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B0C-1s6W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcjlkydp3bwmgwuhu5yd.png" alt="synthwave"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#download"&gt;
  &lt;/a&gt;
  Download
&lt;/h3&gt;

&lt;p&gt;If you like them, feel free to download them &lt;a href="https://www.wickedtemplates.com/demos"&gt;from here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions feel free to reach out here or on twitter:&lt;/p&gt;

&lt;p&gt;Michael: &lt;a href="https://twitter.com/Mike_Andreuzza"&gt;https://twitter.com/Mike_Andreuzza&lt;/a&gt;&lt;br&gt;
Gabriel: &lt;a href="https://twitter.com/g_perales"&gt;https://twitter.com/g_perales&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#other-free-projects-for-web-developers-and-digital-designers"&gt;
  &lt;/a&gt;
  Other free projects for web developers and digital designers:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://www.colorsandfonts.com/"&gt;Color and typography for Web Developers and Digital Designers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://wickedblocks.dev/"&gt;Wickedblocks, ready Made Tailwind CSS blocks, for your next project. &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://wickedbackgrounds.com/"&gt;Wicked Backgrounds, Create beautiful backgrounds waves for your next project&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>webdev</category>
      <category>nextjs</category>
      <category>portfolio</category>
    </item>
    <item>
      <title>Data Visualization with D3, React, visx and Typescript: 2 - Data Basics
</title>
      <author>Pedro Filho</author>
      <pubDate>Wed, 06 Oct 2021 20:31:14 +0000</pubDate>
      <link>https://dev.to/pedroapfilho/data-visualization-with-d3-react-visx-and-typescript-2-data-basics-3igl</link>
      <guid>https://dev.to/pedroapfilho/data-visualization-with-d3-react-visx-and-typescript-2-data-basics-3igl</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/SDU0hgDLxMg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;It's not every day that you have a perfect dataset to work with, most of the time you'll need to apply transformations to properties to get it right for your visualization. This is pretty simple, and usually it's the first thing you do when you think about a chart.&lt;/p&gt;

&lt;p&gt;Let's say that you have something like this to build a single line chart&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bitcoin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;base&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;USD&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1560507303&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;creator&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Satoshi Nakamoto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bitcoin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;base&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;USD&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1592129703&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;creator&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Satoshi Nakamoto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I need an X and an Y, and I already have it, right? But you need the date to be something more human-friendly, and the price, you want it to be in cents, not dollars. How would you do it?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;format&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;%B %d, %Y&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rawData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;oldData&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;oldData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;price&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;oldData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But this isn't very functional, right? We should do something better for it! What if we create a function to transform A to B? Something like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;format&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;%B %d, %Y&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getPrice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;price&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;oldData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then you can use it like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rawData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;oldData&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;getPrice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;oldData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;price&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;getDate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;oldData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, you would have something like this in the end&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;June 14, 2019&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;June 14, 2020&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;   
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Nice, right?&lt;/p&gt;

&lt;p&gt;This is what we call &lt;code&gt;accessors&lt;/code&gt;, and they are really helpful to get and transform data inside your dataset.&lt;/p&gt;

&lt;p&gt;I hope you liked it! For the next chapter, I'll talk about &lt;code&gt;D3&lt;/code&gt;, so stay tuned!&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>What does inheritance mean when we talk about programming?</title>
      <author>Leo Barnuevo</author>
      <pubDate>Wed, 06 Oct 2021 19:59:12 +0000</pubDate>
      <link>https://dev.to/leobdev/what-does-inheritance-mean-when-we-talk-about-programming-3714</link>
      <guid>https://dev.to/leobdev/what-does-inheritance-mean-when-we-talk-about-programming-3714</guid>
      <description>&lt;p&gt;When it comes to developing code for apps, websites, or any other software product, time is a key resource in the task. It quickly becomes a crucial factor that can make the difference between a pleasant and easy-to-carry project, or a real nightmare.&lt;/p&gt;

&lt;p&gt;However, in our area, fast is not synonymous with easy. It is important to have an order in what we do, even if it takes us a little more time, in this way we ensure that in the end, everything responds as it is supposed to. When it comes to code, a small mistake can cause us to damage our entire work, so keeping it neat and clean is a priority.&lt;/p&gt;

&lt;p&gt;There are things we can do to make our chores easier for us, and the main one is code reuse. This simplifies on a large scale the action of designing, creating, and maintaining all our software projects. &lt;strong&gt;It is in this process that the concept of Inheritance comes into play.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is inheritance in programming:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Inheritance is a concept used when we talk about code reuse that involves creating new classes from previously created classes. What happens is that the new class INHERITS functions and attributes of an existing class.&lt;/p&gt;

&lt;p&gt;Putting it in a visual example, we can take as a base any product that we use in our daily life such as a coffee maker. The first coffee maker that the world knew was Caféolette, a cylinder with a plate full of holes that filtered the ground coffee, from which the industrial coffee maker is derived with variations in its form and operation but with the same beginning and end.&lt;/p&gt;

&lt;p&gt;From them, all the coffee machines that we know today emerged. Some have new functions in them or new ways of preparing coffee, but we continue to call them coffee makers, all with their differences but starting from the same place.&lt;/p&gt;

&lt;p&gt;Now that we have a visual example we can see what this definition means in our code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Inheritance in the code:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's take as an example a virtual library-type app, where each user can open their accounts and organize their readings. For example, we create the class for our user, a person who can access the library and read the content, but we also need a user type only for the staff that works in the app.&lt;/p&gt;

&lt;p&gt;As this user requires different functionalities and attributes, what we will do is create a new class that inherits all the info from the class that already existed, and give it the corresponding name. In this case, it would be staff, and from that already existing class we begin to give it new responsibilities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How does inheritance work?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In order to reuse the code of the classes to create new objects, we have the parent classes and the child classes. As in a family, it is the child class that inherits the code from the parent class to adapt it to what is required.&lt;/p&gt;

&lt;p&gt;As in real life, a child inherits characteristics from his parents without ceasing to have its own essence, it is not the same or a copy, but it comes from another existing class.&lt;/p&gt;

&lt;p&gt;If one class derives from another, it inherits its functions and attributes, then you can add new attributes, functions, or redefine the inherited ones.&lt;/p&gt;

&lt;p&gt;Code reuse is a resource that we must use, things can get a bit complex doing it, resulting in dirty, messy, and long code. &lt;/p&gt;

&lt;p&gt;Knowing the reality of the concepts that we apply makes us understand how to use them properly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are your tips to reuse code successfully?&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Welcome Thread - v145</title>
      <author>dev.to staff</author>
      <pubDate>Wed, 06 Oct 2021 19:58:23 +0000</pubDate>
      <link>https://dev.to/thepracticaldev/welcome-thread-v145-3led</link>
      <guid>https://dev.to/thepracticaldev/welcome-thread-v145-3led</guid>
      <description>&lt;p&gt;&lt;a href="https://i.giphy.com/media/3ohhwESi9BLJqW7J1C/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3ohhwESi9BLJqW7J1C/giphy.gif" alt="Polar Bear Graphic Waving Hi"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#welcome-to-dev"&gt;
  &lt;/a&gt;
  Welcome to DEV!
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Leave a comment below to introduce yourself! You can talk about what brought you here, what you're learning, or just a fun fact about yourself.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reply to someone's comment, either with a question or just a hello. 👋 &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Great to have you in the community!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>welcome</category>
    </item>
    <item>
      <title>My setup</title>
      <author>Juraj Maťaše</author>
      <pubDate>Wed, 06 Oct 2021 19:58:15 +0000</pubDate>
      <link>https://dev.to/majur/my-setup-3l69</link>
      <guid>https://dev.to/majur/my-setup-3l69</guid>
      <description>&lt;p&gt;As an IT professional, your computer (and staff in it) is your weapon. You need to keep it sharp and ready to fight.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ideal-setup"&gt;
  &lt;/a&gt;
  Ideal setup
&lt;/h2&gt;

&lt;p&gt;Forget about the ideal setup. You don't need it. But you need to think about what is ideal for you. You don't need to spend thousands of dollars on high-end hardware. Basically, the software is way more important in this field. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-software-setup"&gt;
  &lt;/a&gt;
  My software setup
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kS9LnRyR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633529329706/opSp0y0Zc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kS9LnRyR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633529329706/opSp0y0Zc.gif" alt="the-git-whats-in-the-box.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, what's in my box? (Baseline M1 Macbook Air)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vs-code"&gt;
  &lt;/a&gt;
  VS Code
&lt;/h3&gt;

&lt;p&gt;I was trying many text editors and finally, I stopped with VS Code. RubyMine wasn't free, Atom wasn't stable and few others weren't right for me. VS Code is the only thing from Microsoft I really love. It's easy and powerful. Here are my top extensions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=rebornix.Ruby"&gt;Ruby&lt;/a&gt;  and  &lt;a href="https://marketplace.visualstudio.com/items?itemName=wingrunr21.vscode-ruby"&gt;VSCode Ruby&lt;/a&gt; for Ruby syntax highlighting, code completion and more.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens"&gt;GitLens&lt;/a&gt; for code authorship, comparison between branches and another useful git staff. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=HookyQR.beautify"&gt;Beautify&lt;/a&gt; when I need some help with beautifying my code. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--20ov0hNA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633547517075/zxRHVlMUZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--20ov0hNA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633547517075/zxRHVlMUZ.png" alt="Snímka obrazovky 2021-10-06 o 21.11.25.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#iterm"&gt;
  &lt;/a&gt;
  iTerm
&lt;/h3&gt;

&lt;p&gt;Instead of macOS's Terminal, I using iTerm. I have &lt;a href="https://github.com/romkatv/powerlevel10k"&gt;Powerlevel10k&lt;/a&gt; theme installed. Thanks to the colors everything is clear:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wEbaSuhc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633547320906/TsalIOYY5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wEbaSuhc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633547320906/TsalIOYY5.png" alt="Snímka obrazovky 2021-10-06 o 21.04.53.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#obsidian"&gt;
  &lt;/a&gt;
  Obsidian
&lt;/h3&gt;

&lt;p&gt;I love this app. If you need to build your own wiki, you have few options: From Evernote, Notion to Roam Research. I'm with  &lt;a href="https://obsidian.md"&gt;Obsidian&lt;/a&gt;  for now. I like Notion too. Especially for databases, but Obsidian is lightweight and elegant. Greate for text (and code) based notes. And it generates a nice graph from your links between notes: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--za8ZHL60--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633548146908/pIYE0f_g7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--za8ZHL60--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633548146908/pIYE0f_g7.png" alt="Snímka obrazovky 2021-10-06 o 21.22.09.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#todoist"&gt;
  &lt;/a&gt;
  Todoist
&lt;/h3&gt;

&lt;p&gt;I've been using  &lt;a href="https://todoist.com/"&gt;Todoist&lt;/a&gt;  for many years. From time to time I try to switch to another to-do list app, but there is no competitor. Everything I don't want to remember is in Todoist. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_53LjuxO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633548683583/spO2jD54w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_53LjuxO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633548683583/spO2jD54w.png" alt="Snímka obrazovky 2021-10-06 o 21.31.03.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hardware-bonus"&gt;
  &lt;/a&gt;
  Hardware bonus
&lt;/h2&gt;

&lt;p&gt;Speaking of hardware, I have my gems. My vertical mouse, which was a gamechanger for me. No more pain in my hand:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J95xGrKy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633549005347/2niedoRcI.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J95xGrKy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633549005347/2niedoRcI.jpeg" alt="06422553-4.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And little mechanical keyboard  &lt;a href="https://www.keychron.com/products/keychron-k6-wireless-mechanical-keyboard?variant=31440990404697"&gt;Keychrone K6&lt;/a&gt;: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AjGqBQ5K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633549100723/bNF2zOCW7.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AjGqBQ5K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633549100723/bNF2zOCW7.jpeg" alt="71OxWdtMs8L._AC_SL1500_.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What is your setup? Comment down below, or sent a link od your post 😊&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>vscode</category>
    </item>
    <item>
      <title>Budgie Console</title>
      <author>Yash Datir</author>
      <pubDate>Wed, 06 Oct 2021 18:51:48 +0000</pubDate>
      <link>https://dev.to/yashdatir/budgie-console-e3k</link>
      <guid>https://dev.to/yashdatir/budgie-console-e3k</guid>
      <description>&lt;p&gt;Hey guys, Here I am publishing my new package. It has the capability for changing background, foreground and styles of a boring console that we all use. It also has built in function for displaying loaders in console with greater controls. I don't know how much more can we add to it, but yeah- its simple, yet have no limits to creativity.&lt;/p&gt;

&lt;p&gt;Please checkout: &lt;a href="https://www.npmjs.com/package/budgie-console"&gt;https://www.npmjs.com/package/budgie-console&lt;/a&gt;&lt;br&gt;
Git Repo: &lt;a href="https://github.com/yashdatir/budgie-console"&gt;https://github.com/yashdatir/budgie-console&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>javascript</category>
      <category>node</category>
      <category>npm</category>
    </item>
    <item>
      <title>Vanilla JS "Who's that Pokémon?" game with the PokéAPI</title>
      <author>JS Bits with Bill</author>
      <pubDate>Wed, 06 Oct 2021 18:24:18 +0000</pubDate>
      <link>https://dev.to/js_bits_bill/vanilla-js-who-s-that-pokemon-game-with-pokeapi-34m4</link>
      <guid>https://dev.to/js_bits_bill/vanilla-js-who-s-that-pokemon-game-with-pokeapi-34m4</guid>
      <description>&lt;p&gt;Remember that &lt;em&gt;"Who's that Pokémon?"&lt;/em&gt; TV game? Well we can build our own version of this with the &lt;a href="https://pokeapi.co/"&gt;PokéAPI&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;If we make a &lt;code&gt;fetch&lt;/code&gt; call to this endpoint (and specify that we want to limit it to the first 151 Pokémon), we'll get a results array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://pokeapi.co/api/v2/pokemon?limit=151&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;

&lt;span class="c1"&gt;// Logs:&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bulbasaur&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://pokeapi.co/api/v2/pokemon/1/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ivysaur&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://pokeapi.co/api/v2/pokemon/2/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;venusaur&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://pokeapi.co/api/v2/pokemon/3/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That &lt;code&gt;url&lt;/code&gt; property inside each object is the pokémon-specific endpoint that can be hit for more information about that individual character. Inside this JSON, there will be a sprite URL like so: &lt;br&gt;
&lt;code&gt;https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1.png&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This is the sprite for Pokémon &lt;code&gt;#1&lt;/code&gt;:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jv6aebj8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jv6aebj8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Since we saw in the original data that Bulbasaur's &lt;code&gt;url&lt;/code&gt; property shows its number  (&lt;code&gt;1&lt;/code&gt;), and this number is the same that's used in the sprite URL, we can use just this original request to get all the information we need to create a "Who's that Pokémon?" game:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ecEhr_c8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dzynqn10l/image/upload/v1633385632/JS%2520Bits/bulbasaur_kga7x0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ecEhr_c8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dzynqn10l/image/upload/v1633385632/JS%2520Bits/bulbasaur_kga7x0.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The full code for this project is hosted &lt;a href="https://github.com/doctafaustus/whos-that-pokemon"&gt;here&lt;/a&gt;, but the rest of this article will show the core components we'll need to make this work.&lt;/p&gt;

&lt;p&gt;First, our HTML structure:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;main&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fetching"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"pokemon-container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"pokeball"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"background.jpg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"pokemon-image"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"placeholder.png"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"answer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"bg-overlay"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"text-overlay"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"controls"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"play"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Play&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"choices"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;#pokemon-image&lt;/code&gt; source will be set dynamically to show the featured pokémon, and the &lt;code&gt;#choices&lt;/code&gt; element will be populated with multiple-choice answers from the PokéAPI data. The steps to get the need we'll need is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;getPokeData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pokemon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getPokemon&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// #1&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;randomPokemon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;shuffle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pokemon&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// #2&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pokemonChoices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get4Pokemon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;randomPokemon&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// #3&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="nx"&gt;firstPokemon&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pokemonChoices&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// #4&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getPokemonImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firstPokemon&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// # 5&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="na"&gt;pokemonChoices&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;shuffle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pokemonChoices&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;correct&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;firstPokemon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;1) Fetch the array of 151 Pokémon objects (show above).&lt;/p&gt;

&lt;p&gt;2) Shuffle the array show we can show a random group to the user:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;shuffle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;unshuffled&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shuffled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;unshuffled&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;}))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(({&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;shuffled&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3) Save the first 4 objects from this shuffled array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;get4Pokemon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;randomPokemon&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;randomPokemon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;splice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;4) Save a reference to the first Pokémon object (the one we'll feature).&lt;/p&gt;

&lt;p&gt;5) Return an object containing the 4 Pokémon choices (shuffled again), and a "correct" object, containing both the name of the featured pokémon and the image URL to show:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getPokemonImage&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getNumber&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`https://raw.githubusercontent.com/PokeAPI/`&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="s2"&gt;`sprites/master/sprites/pokemon/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.png`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getNumber&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numberRegEx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;(\d&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;)\/&lt;/span&gt;&lt;span class="sr"&gt;$/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numberRegEx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;[])[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We'll then plug this URL source into our &lt;code&gt;&amp;lt;img id="pokemon-image"&amp;gt;&lt;/code&gt; element and set the brightness of the PNG to &lt;code&gt;0&lt;/code&gt; with CSS:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#pokemon-image&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;brightness&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;filter&lt;/span&gt; &lt;span class="m"&gt;.5s&lt;/span&gt; &lt;span class="n"&gt;ease-out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And generate our &lt;code&gt;#choices&lt;/code&gt; content with answer buttons:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;pokemonChoices&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;gameData&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;choicesHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pokemonChoices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;button data-name="&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/button&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;choices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;choicesHTML&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once we hook up some additional event handlers and logic to check if the &lt;code&gt;dataset.name&lt;/code&gt; selected matches the correct pokémon, we can toggle some classes to reveal both the right answers and show the full-color pokémon image!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vD9QI_Iz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dzynqn10l/image/upload/v1633387082/JS%2520Bits/bulbasaur-revealed_fadwt7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vD9QI_Iz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dzynqn10l/image/upload/v1633387082/JS%2520Bits/bulbasaur-revealed_fadwt7.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Project code available here: &lt;a href="https://github.com/doctafaustus/whos-that-pokemon"&gt;https://github.com/doctafaustus/whos-that-pokemon&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#full-youtube-tutorial"&gt;
  &lt;/a&gt;
  Full YouTube Tutorial:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=iBR-Pmr-l6E"&gt;&lt;br&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cc_8s-p_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dzynqn10l/image/upload/v1633388056/JS%2520Bits/maxresdefault_hvhdzq.jpg"&gt;&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;b&gt;Yo!&lt;/b&gt; I post byte-sized tips like these often. Follow me if you crave more! 🍿&lt;/p&gt;

&lt;p&gt;I'm on &lt;a href="https://www.tiktok.com/@js_bits"&gt;TikTok&lt;/a&gt;, &lt;a href="https://twitter.com/JS_Bits_Bill"&gt;Twitter&lt;/a&gt; and I have a new &lt;a href="https://jsbits-yo.com/bug-bash/"&gt;debugging course&lt;/a&gt; dropping soon!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Machine Learning meets DevOps: MLOps</title>
      <author>Ashish Salunkhe</author>
      <pubDate>Wed, 06 Oct 2021 18:15:43 +0000</pubDate>
      <link>https://dev.to/ashishsalunkhe/machine-learning-meets-devops-mlops-4g9n</link>
      <guid>https://dev.to/ashishsalunkhe/machine-learning-meets-devops-mlops-4g9n</guid>
      <description>&lt;h1&gt;
  &lt;a href="#production-ml-systems"&gt;
  &lt;/a&gt;
  Production ML Systems
&lt;/h1&gt;

&lt;p&gt;There's a lot more to machine learning. Implementation of an ML algorithm is just the tip of the iceberg. Machine learning systems are a part of a much larger ecosystem. Creating a well-performing machine learning model is just a small aspect of real-world machine learning solutions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gm3yl_UY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m9ralgaf6y69w4xht8xd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gm3yl_UY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m9ralgaf6y69w4xht8xd.png" alt="mlsystems"&gt;&lt;/a&gt;&lt;br&gt;
Image Source: &lt;a href="https://developers.google.com/machine-learning/crash-course/production-ml-systems"&gt;ML Crash Course by Google&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#scenario-and-the-challenge"&gt;
  &lt;/a&gt;
  Scenario and the Challenge
&lt;/h3&gt;

&lt;p&gt;Let's say you are on the verge of signing the first customer for your startup. Your start-up has an amazing team of ML Engineers, Data Analysts, Data Scientists. They have been successful in creating state-of-the-art models with unprecedented results and metrics. &lt;/p&gt;

&lt;p&gt;The real problem here that arises is its deployment at the production level. In the &lt;a href="https://info.algorithmia.com/hubfs/2019/Whitepapers/The-State-of-Enterprise-ML-2020/Algorithmia_2020_State_of_Enterprise_ML.pdf?utm_campaign=The%20Batch&amp;amp;utm_source=hs_email&amp;amp;utm_medium=email&amp;amp;_hsenc=p2ANqtz-8dfpb_B2Fa0nNTtRa6cO2tl5CysdXFLGpPo6KYPnp5gFRXGXy8TLlKoGcIXlVFsUTb1E_s"&gt;2020 State of Enterprise Report&lt;/a&gt;, based on a survey of nearly 750 domain experts and practitioners in Machine Learning, had the following conclusions:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;There was an increase in spending on AI by more than 2/3rds of the subgroups that were interviewed about their budget.&lt;/li&gt;
&lt;li&gt;43% of respondents cited difficulty in scaling their ML projects as to 30% in the previous year.&lt;/li&gt;
&lt;li&gt;Half of the respondents deploy their systems between a week and 3 months, while 18 percent require more than 3 months.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Machine Learning is evolving swiftly, growing into new sectors and industries yet building projects at scale is difficult. This marks a huge gap between models generated through scripts, notebooks, and their deployment in a production system at scale. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#traditional-software-engineering-approaches-vs-mlops-tradeoff"&gt;
  &lt;/a&gt;
  Traditional Software Engineering approaches v/s MLOps Trade-off
&lt;/h3&gt;

&lt;p&gt;As MLOps corresponds to DevOps for ML, there are challenges needed to be addressed.&lt;/p&gt;

&lt;p&gt;As highlighted by Arnab Bose, and Aditya Aggarwal in their &lt;a href="https://www.kdnuggets.com/2020/12/mlops-why-required-what-is.html"&gt;blog&lt;/a&gt;, an example of such challenge is the role of data. There are two different Software paradigms involved in traditional software engineering and machine learning - software developers have well-defined logic and code for their software programs whereas data scientists follow a parameterized problem-solving coding approach. These parameters depend on data which vary with changes in data thus altering the entire code behavior. Therefore, another aspect of data and its irregular variation causes difficulties in tracking a well-defined software.&lt;/p&gt;

&lt;p&gt;List of challenges that make it difficult to deploy ML models to production:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Data Management

&lt;ul&gt;
&lt;li&gt;Huge Datasets&lt;/li&gt;
&lt;li&gt;Dataset Tracking&lt;/li&gt;
&lt;li&gt;Data Privacy&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Trial and Error and Iterative Development

&lt;ul&gt;
&lt;li&gt;Tracking changes: Hyper-parameter tuning, code changes, architecture changes&lt;/li&gt;
&lt;li&gt;Code Quality: Production-ready code, code optimizations&lt;/li&gt;
&lt;li&gt;Model Evaluation&lt;/li&gt;
&lt;li&gt;Training, Inference, and Retraining&lt;/li&gt;
&lt;li&gt;Testing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Production Deployment

&lt;ul&gt;
&lt;li&gt;Monitoring&lt;/li&gt;
&lt;li&gt;Cloud / On-premise - batch and real-time predictions&lt;/li&gt;
&lt;li&gt;Infrastructure Requirements&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Security&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Shout out to &lt;a href="https://twitter.com/karpathy"&gt;Andrej Karpathy&lt;/a&gt; for the wonderful blog emphasizing Software 2.0 and the ongoing transition into the 2.0 stack.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="https://medium.com/@karpathy/software-2-0-a64152b37c35" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VS1hgjhi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/fit/c/56/56/0%2A8ldFdx9B6FhSkQmV.jpeg" alt="Andrej Karpathy"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="https://medium.com/@karpathy/software-2-0-a64152b37c35" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Software 2.0. I sometimes see people refer to neural… | by Andrej Karpathy | Medium&lt;/h2&gt;
      &lt;h3&gt;Andrej Karpathy ・ &lt;time&gt;Mar 13, 2021&lt;/time&gt; ・ 
      &lt;div class="ltag__link__servicename"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ze5yh_2q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/medium_icon-90d5232a5da2369849f285fa499c8005e750a788fdbf34f5844d5f2201aae736.svg" alt="Medium Logo"&gt;
        Medium
      &lt;/div&gt;
    &lt;/h3&gt;
&lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h4&gt;
  &lt;a href="#how-does-an-mlops-life-cycle-look-like"&gt;
  &lt;/a&gt;
  How does an MLOps Life Cycle look like?
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Data Engineering and Management&lt;/li&gt;
&lt;li&gt;Training / Modeling (Machine Learning Pipeline)&lt;/li&gt;
&lt;li&gt;Continuous Deployment&lt;/li&gt;
&lt;li&gt;Monitoring&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;At first, one needs to define a business problem and translate it into objectives that can be addressed through machine learning solutions. &lt;br&gt;
Second, there should be a focus on collaboration between data engineers and data scientists to explore, create and manage dataset(s) for modeling.&lt;br&gt;
Third, designing a pipeline comprising of operations like Model Training, Model Evaluation, Model Testing, and Model Packaging to be integrated with CI/CD for experimentation, tracking, validation, and testing.&lt;br&gt;
Fourth, seamless deployment into production server - cloud, on-premise, or hybrid.&lt;br&gt;
Finally, monitoring both model and computing resources (infrastructure) and their management. Key Performance Indicators (KPIs) help monitor the changes. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--enEg7ZEY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ujx0p6369qtmp1ex2snk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--enEg7ZEY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ujx0p6369qtmp1ex2snk.png" alt="mlops"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thus, the aim is to provide an end-to-end machine learning pipeline for designing, building and managing reproduciable ML Software alongside test-driven development.&lt;/p&gt;

&lt;p&gt;Co-author: &lt;a class="mentioned-user" href="https://dev.to/sonishreyas"&gt;@sonishreyas&lt;/a&gt;
 &lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>mlops</category>
      <category>devops</category>
      <category>python</category>
    </item>
    <item>
      <title>Explore Geopolitical data from GDELT
</title>
      <author>Shreyas Soni</author>
      <pubDate>Wed, 06 Oct 2021 18:15:11 +0000</pubDate>
      <link>https://dev.to/sonishreyas/explore-geopolitical-data-from-gdelt-2hnm</link>
      <guid>https://dev.to/sonishreyas/explore-geopolitical-data-from-gdelt-2hnm</guid>
      <description>&lt;p&gt;In this blog, we will explore the geopolitical data from GDELT and see how that data can be used in the analysis.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-gdelt"&gt;
  &lt;/a&gt;
  What is GDELT?
&lt;/h2&gt;

&lt;p&gt;The GDELT Project created by Kalev H. Leetaru monitors the world's news from every country in over 100 languages and identifies the people, locations, organizations, themes, sources, emotions, counts, quotes, images, and events driving our global society.&lt;/p&gt;

&lt;p&gt;In this blog, we will have a look at the Events database of GDELT and how this data can be used for analysis.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#event-database"&gt;
  &lt;/a&gt;
  Event Database
&lt;/h2&gt;

&lt;p&gt;The GDELT Event Database catalog over 20 main categories and more than 300 subcategories. Each category is given a particular cameo code. We will be looking into the 20 main cameo codes. That includes&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make Public Statement&lt;/li&gt;
&lt;li&gt;Appeal&lt;/li&gt;
&lt;li&gt;Express intent to cooperate&lt;/li&gt;
&lt;li&gt;Consult&lt;/li&gt;
&lt;li&gt;Engage in diplomatic cooperation&lt;/li&gt;
&lt;li&gt;Engage in material cooperation&lt;/li&gt;
&lt;li&gt;Provide aid&lt;/li&gt;
&lt;li&gt;Yield&lt;/li&gt;
&lt;li&gt;Investigate&lt;/li&gt;
&lt;li&gt;Demand&lt;/li&gt;
&lt;li&gt;Disapprove&lt;/li&gt;
&lt;li&gt;Reject&lt;/li&gt;
&lt;li&gt;Threaten&lt;/li&gt;
&lt;li&gt;Protest&lt;/li&gt;
&lt;li&gt;Exhibit military posture&lt;/li&gt;
&lt;li&gt;Reduce relations&lt;/li&gt;
&lt;li&gt;Coerce&lt;/li&gt;
&lt;li&gt;Assault&lt;/li&gt;
&lt;li&gt;Fight&lt;/li&gt;
&lt;li&gt;Use unconventional mass violence&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's see how we can get the data for these events for all countries.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-get-the-data"&gt;
  &lt;/a&gt;
  How to get the data?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;BigQuery
You can query any data you want according to your need. Here is an example of a query.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;select SQLDATE,EventRootCode,Actor1CountryCode,NumMentions from gdeltv2.events;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Using gdelt python package&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Installation: &lt;code&gt;pip install gdelt&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Call the gdelt version 2 database.
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gd2 = gdelt.gdelt(version=2)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Use gd2 object to search for the data of a given date and set table to events.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;results = gd2.Search(['2020-01-01'],table='events',coverage=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#processing-the-data-to-get-timeseries-data-for-all-countries"&gt;
  &lt;/a&gt;
  Processing the data to get Timeseries data for all countries
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Load the data into the notebook.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;df = pd.read_csv("gdelt.csv");
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;The data output of the gdelt object has all the columns present in the events database. Now filter it to the columns necessary, i.e., SQLDATE, EventRootCode, Actor1CountryCode, NumMentions
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;results = results[['SQLDATE','EventRootCode','NumMentions','Actor1CountryCode']]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Convert the SQLDATE format from 'YYYYMMDD' to 'YYYY-MM-DD'.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;results['SQLDATE'] = results['SQLDATE'].apply(lambda x: pd.to_datetime(str(x), format='%Y-%m-%d'))            
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Aggregate the data based on SQLDATE, EventRootCode, and Actor1CountryCode.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;results = results.groupby(['SQLDATE','EventRootCode','Actor1CountryCode']).agg('sum').reset_index()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#data-analysis-and-visualization"&gt;
  &lt;/a&gt;
  Data Analysis and Visualization
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Mapping a Line Chart of a particular Cameo code for the country over time.&lt;br&gt;
Example: Protest in USA (Aggregated to Weekly basis)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1VbZLHfk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/538qmq746r0pxo7y1v21.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1VbZLHfk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/538qmq746r0pxo7y1v21.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mapping Top Cameo codes in a country based on the Number of Mentions of the particular cameo code.&lt;br&gt;
Example: Top Trends in USA (Last Week)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qhX-NyW9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o83j465hua7r8udx6mor.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qhX-NyW9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o83j465hua7r8udx6mor.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Mapping Top Countries in a particular cameo code based on the Number of Mentions of the particular cameo code in the country.&lt;br&gt;
Example: Top Countries in Protest (Last Week)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KWw9Oyp_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7eejebzd5yi58hugr471.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KWw9Oyp_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7eejebzd5yi58hugr471.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Plot a choropleth map for a particular cameo code.&lt;br&gt;
Example: Protest (Today)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dazr6iSa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g8kc0hnua6twynecf301.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dazr6iSa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g8kc0hnua6twynecf301.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#technology-used"&gt;
  &lt;/a&gt;
  Technology Used
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;Pandas&lt;/li&gt;
&lt;li&gt;Plotly&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Code: &lt;a href="https://colab.research.google.com/drive/11gFRPtbPK7fz6OOUR7dYtmtdnN-O_pWM?usp=sharing"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Co-author: &lt;a class="mentioned-user" href="https://dev.to/ashishsalunkhe"&gt;@ashishsalunkhe&lt;/a&gt;
 &lt;/p&gt;

</description>
      <category>python</category>
      <category>datascience</category>
      <category>gdelt</category>
    </item>
    <item>
      <title>3 tips from "Atomic habits" that helped me on my journey to becoming a full-stack dev at Microsoft</title>
      <author>kapeel kokane</author>
      <pubDate>Wed, 06 Oct 2021 18:09:22 +0000</pubDate>
      <link>https://dev.to/comscience/3-tips-from-atomic-habits-that-helped-me-get-a-job-at-microsoft-56ih</link>
      <guid>https://dev.to/comscience/3-tips-from-atomic-habits-that-helped-me-get-a-job-at-microsoft-56ih</guid>
      <description>&lt;p&gt;Hey There 👋🏾&lt;/p&gt;

&lt;p&gt;Hope you are doing well. 🙌🏾&lt;/p&gt;

&lt;p&gt;I joined &lt;strong&gt;Microsoft&lt;/strong&gt; as a full-stack developer last month and the announcement tweet went viral on Twitter.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--tCoQBxER--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1372919009939652612/E9s309tH_normal.jpg" alt="Kapeel 💙 Typescript profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Kapeel 💙 Typescript
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @kokaneka
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Today is my first day at &lt;a href="https://twitter.com/Microsoft"&gt;@Microsoft&lt;/a&gt; as a full-stack dev 🙂 Hope its the start of an amazing journey 🙌🏾
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      08:17 AM - 06 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1434792888433446927" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1434792888433446927" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1434792888433446927" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Many of the fellow devs asked me for my journey and what helped me reach there. So I thought of putting this article together by listing out a few small habits that added up over time which helped me get the desired result. Many of the things that I talk about are mentioned in the amazing book &lt;strong&gt;Atomic habits&lt;/strong&gt; by James Clear which I think, every human being must read at least once!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;disclaimer&lt;/strong&gt;: This article is not a place for &lt;strong&gt;tips and tricks&lt;/strong&gt; or a list of &lt;strong&gt;important questions&lt;/strong&gt; to crack any particular interview. It was a long &amp;amp; gradual process for me and I'm just listing down what worked for me. You can try it out and see if it works for you.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#design-your-environment"&gt;
  &lt;/a&gt;
  1️⃣ Design your environment
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w0Rhh5Ri--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/_Ss12EWsZHEAAAAd/plan-yoda-plan.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w0Rhh5Ri--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/_Ss12EWsZHEAAAAd/plan-yoda-plan.gif" alt="yoda plan"&gt;&lt;/a&gt;&lt;br&gt;
James talks about the power of &lt;a href="https://jamesclear.com/power-of-environment"&gt;environment design&lt;/a&gt; over motivation and here's how we can apply that. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#phone"&gt;
  &lt;/a&gt;
  Phone
&lt;/h4&gt;

&lt;p&gt;People say phones are distracting and toxic. I say people do not know how to use phones. If used properly, it can act as a prime weapon in your arsenal. &lt;br&gt;
Structure your home screen so that instead of Facebook, Instagram, you see &lt;a href="https://dev.to/"&gt;dev.to&lt;/a&gt;, &lt;a href="https://hashnode.com/"&gt;hashnode&lt;/a&gt;, &lt;a href="https://daily.dev/"&gt;daily.dev&lt;/a&gt; so that when you open your phone, the decision is easy for you to scroll some technical content instead of mindless binge-scrolling!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#youtube"&gt;
  &lt;/a&gt;
  YouTube
&lt;/h4&gt;

&lt;p&gt;Most people under-estimate YouTube's capabilities when it comes to learning. You can create a separate Google account and only subscribe learning channels through it. That way, when you switch accounts from the menu bar, you get a nicely curated feed of tutorials and tech updates that you might be interested in. Here are a few awesome channels:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/c/TraversyMedia"&gt;Traversy media&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Freecodecamp"&gt;Freecodecamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Academind"&gt;Academind&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#twitter"&gt;
  &lt;/a&gt;
  Twitter
&lt;/h4&gt;

&lt;p&gt;Twitter is also an amazing place to learn and connect with industry experts. If you do not have a Twitter account, create one today and &lt;strong&gt;ONLY&lt;/strong&gt; follow the accounts that are creating content around the tech that you are interested in. That way, even if you wanted to binge-scroll, it will be curated. You can also follow accounts specific to a particular language like &lt;a href="https://twitter.com/JavaScript"&gt;Javascript&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-systems"&gt;
  &lt;/a&gt;
  2️⃣ Create systems
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vn47pwl4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/2AQR9FgLS4UAAAAC/do-it-shia-la-beouf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vn47pwl4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/2AQR9FgLS4UAAAAC/do-it-shia-la-beouf.gif" alt="just do it"&gt;&lt;/a&gt;&lt;br&gt;
James also talks about the importance of &lt;a href="https://jamesclear.com/goals-systems"&gt;creating systems&lt;/a&gt; rather that setting goals to be successful in the long run. &lt;br&gt;
Hence, instead of trying to rely on motivation which comes and goes, try to set up systems. Those systems can be something like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set 7pm to 8pm as &lt;strong&gt;learning time&lt;/strong&gt; (can be any time slot)&lt;/li&gt;
&lt;li&gt;Listen to &lt;strong&gt;audio books&lt;/strong&gt; while taking a walk&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Never&lt;/strong&gt; watch television alone&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These systems, once established in your mind would make it highly improbable for you not to do the right thing. And they also take out decision fatigue. For instance, if its 7:15pm, you definitely know that you must be learning stuff right now and hence you do that, without thinking much. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#identity-based-habits"&gt;
  &lt;/a&gt;
  3️⃣ Identity based habits
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vqBEyl8l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j8gaeekfy4dsa63ugw5r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vqBEyl8l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j8gaeekfy4dsa63ugw5r.png" alt="layers of identity"&gt;&lt;/a&gt;&lt;br&gt;
The third thing that can help you on your journey is this concept of &lt;a href="https://jamesclear.com/identity-based-habits"&gt;identity based habits&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;How this can help you on your tech journey is, instead of &lt;strong&gt;trying to build&lt;/strong&gt; stuff using a new tech stack, you can think of &lt;strong&gt;becoming&lt;/strong&gt; a curious developer. &lt;/p&gt;

&lt;p&gt;Instead of studying about algorithms and data structure, you can become the sort of person who &lt;strong&gt;wonders&lt;/strong&gt; about how stuff works. &lt;/p&gt;

&lt;p&gt;If you are also on the path of content creation, then don't try to create content. Become a person who &lt;strong&gt;shares knowledge&lt;/strong&gt; consistently. &lt;/p&gt;

&lt;p&gt;Maybe the examples that I provided are not perfect. Go through the article link that I provided and try to come up with your own identity that would help you stick to your habit.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Doing these things would push you in the direction wherein over a long term, you will see yourself grow as a developer. I did. For me, cracking the interviews was not just a process for those 3 or 4 months. It was an amalgamation of the things that I did over the last 5 years. If you are in it for the long run, you will definitely succeed. And even it you don't. there is nothing to loose here! 🙌🏾&lt;/p&gt;

&lt;p&gt;Cheers ✌🏽&lt;/p&gt;

</description>
      <category>career</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>First Glance: WSL2 &amp; GoLand on Windows 11</title>
      <author>Daniil Maslov</author>
      <pubDate>Wed, 06 Oct 2021 18:07:17 +0000</pubDate>
      <link>https://dev.to/s0xzwasd/first-glance-wsl2-goland-on-windows-11-26l4</link>
      <guid>https://dev.to/s0xzwasd/first-glance-wsl2-goland-on-windows-11-26l4</guid>
      <description>&lt;p&gt;Windows 11 was just released a few days ago and GoLand introduces support for projects inside the WSL2 mount and it is available in the &lt;a href="https://www.jetbrains.com/go/nextversion/"&gt;Early Access Program&lt;/a&gt;. It is a good time to get started and combine things for modern Go development step-by-step.&lt;/p&gt;

&lt;p&gt;I will show you a small introduction to configure WSL2 and GoLand, how to install Go SDK and open projects inside WSL2 mounts. First off, we have to install WSL2 under Windows 11. There are a few steps to consider.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configure-wsl2-on-windows-11"&gt;
  &lt;/a&gt;
  Configure WSL2 on Windows 11
&lt;/h2&gt;

&lt;p&gt;First off, we are going to install WSL2 itself via &lt;code&gt;wsl --install&lt;/code&gt; in PowerShell with &lt;em&gt;admin rights&lt;/em&gt;. The operation takes a bit of time and at the end of it, you can see the successful message: &lt;em&gt;The requested operation is successful. Changes will not be effective until the system is rebooted&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I would say that the process of installing WSL2 in Windows 11 is much easier than earlier. One command does all things.&lt;/p&gt;

&lt;p&gt;After that, open Ubuntu distribution (or change to a different one using &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install#change-the-default-linux-distribution-installed"&gt;Microsoft article&lt;/a&gt;), enter username, password and install Go SDK.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-go-sdk-under-wsl2"&gt;
  &lt;/a&gt;
  Install Go SDK under WSL2
&lt;/h3&gt;

&lt;p&gt;There are a few ways to install Go SDK:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://golang.org/doc/install"&gt;Official guide&lt;/a&gt; from Go team.&lt;/li&gt;
&lt;li&gt;Go &lt;a href="https://snapcraft.io/go"&gt;snap package&lt;/a&gt; on Ubuntu.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I prefer an official guide. It is pretty well documented and easy to start. Pay attention that it requires &lt;em&gt;sudo&lt;/em&gt; privileges for the user.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;wget -c https://golang.org/dl/go1.17.1.linux-amd64.tar.gz -O - | sudo tar -xz -C /usr/local
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A few preparations to use it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Specify &lt;code&gt;export PATH=$PATH:/usr/local/go/bin&lt;/code&gt; under &lt;code&gt;$HOME/.profile&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Load &lt;code&gt;$PATH&lt;/code&gt; changes to the current shell session: &lt;code&gt;source ~/.profile&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To confirm that Go is configured properly, we can execute &lt;code&gt;go version&lt;/code&gt; and should get the following output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go version go1.17.1 linux/amd64
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are good to go to the next section.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-opening-in-goland"&gt;
  &lt;/a&gt;
  Project opening in GoLand
&lt;/h2&gt;

&lt;p&gt;Let's create our project right from GoLand. On Welcome Screen, select New Project and specify project location under WSL2 mount. You can create directories from the pop-up by right-clicking on the root folder. Make sure that the path to the project contains &lt;code&gt;\\wsl$&lt;/code&gt; prefix:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;\\wsl$\Ubuntu\home\s0xzwasd\Projects\Go\dev-to-example
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uWSoDL5---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwx6qv6hrm1zj8g8hwh6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uWSoDL5---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwx6qv6hrm1zj8g8hwh6.png" alt="An option to create directories in GoLand"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GoLand highlights a warning and requires Go SDK in WSL. We can click on the Plus icon and choose Local, then find Go SDK (&lt;code&gt;\\wsl$\Ubuntu\usr\local\go&lt;/code&gt; by default). Create a project and wait for Go SDK indexing.&lt;/p&gt;

&lt;p&gt;As an example, I take &lt;a href="https://gobyexample.com/interfaces"&gt;Go by Example: Interfaces&lt;/a&gt; code snippet. Let's run it via gutter icons around &lt;code&gt;main()&lt;/code&gt; function. After that, try to debug a bit.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1YgYBlkC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6wo1ycbak06psplcz24x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1YgYBlkC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6wo1ycbak06psplcz24x.png" alt="GoLand runs code from WSL2 mount"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We've configured all necessary environments to get developer things done. 🎉&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#limitations"&gt;
  &lt;/a&gt;
  Limitations
&lt;/h3&gt;

&lt;p&gt;So, there are several limitations at the moment, especially symlinks and File Watchers are not supported (&lt;a href="https://youtrack.jetbrains.com/issue/IDEA-253253"&gt;IDEA-253253&lt;/a&gt;, &lt;a href="https://youtrack.jetbrains.com/issue/WEB-38925"&gt;WEB-38925&lt;/a&gt;) as well as External Tools (&lt;a href="https://youtrack.jetbrains.com/issue/IDEA-201045"&gt;IDEA-201045&lt;/a&gt;) and Mozilla RR (&lt;a href="https://github.com/rr-debugger/rr/issues/2506"&gt;GITHUB-2506&lt;/a&gt;).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We can use WSL2 and GoLand for Go development for now. It is much easier to get started and separate personal and development environments. As a benefit of Windows 11, we can &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/tutorials/gui-apps"&gt;run GUI apps&lt;/a&gt; inside WSL2 and it looks really promising.&lt;/p&gt;

</description>
      <category>go</category>
      <category>windows</category>
      <category>goland</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
