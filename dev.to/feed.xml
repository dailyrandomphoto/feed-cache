<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>JavaScript Jungle: Convert any object to Iterable</title>
      <author>Vikas yadav</author>
      <pubDate>Mon, 04 Oct 2021 01:16:54 +0000</pubDate>
      <link>https://dev.to/xenoxdev/javascript-jungle-convert-any-object-to-iterable-40l6</link>
      <guid>https://dev.to/xenoxdev/javascript-jungle-convert-any-object-to-iterable-40l6</guid>
      <description>&lt;p&gt;When &lt;strong&gt;ES6&lt;/strong&gt; launched,  it introduced two important protocols &lt;code&gt;Iterable&lt;/code&gt; and &lt;code&gt;Iterator&lt;/code&gt;. Basically we can convert any type of &lt;code&gt;object&lt;/code&gt; to &lt;code&gt;iterable&lt;/code&gt; by implementing these two &lt;code&gt;protocols&lt;/code&gt;. By converting the &lt;code&gt;object&lt;/code&gt; to &lt;code&gt;iterable&lt;/code&gt; we can perform looping with &lt;code&gt;for...of&lt;/code&gt; loop.  We can also use &lt;code&gt;spread operator&lt;/code&gt; in array (which is &lt;code&gt;...&lt;/code&gt; symbol in JS) on these objects. First let's understand these two protocols: &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#iterable-protocol"&gt;
  &lt;/a&gt;
  Iterable Protocol:
&lt;/h2&gt;

&lt;p&gt;As per MDN &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;iterable protocol&lt;/code&gt; allows JavaScript objects to &lt;code&gt;define&lt;/code&gt; or &lt;code&gt;customize&lt;/code&gt; their &lt;code&gt;iteration behavior&lt;/code&gt;,  such as what values are looped over in a &lt;code&gt;for...of&lt;/code&gt; construct.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In simple terms it is a rule and by following this rule we can do two things: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If an object is already iterable, we can modify it's existing &lt;code&gt;iteration behaviour&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;If an object is not iterable, we can add &lt;code&gt;iteration&lt;/code&gt; behaviour to it. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have used JavaScript as a beginner then you have already used one of the famous iterable &lt;code&gt;Array&lt;/code&gt;s. Obviously there are other built in &lt;code&gt;iterables&lt;/code&gt; in JavaScript as well. Some of the examples are : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Map&lt;/li&gt;
&lt;li&gt;Set &lt;/li&gt;
&lt;li&gt;WeakMap&lt;/li&gt;
&lt;li&gt;WeakSet&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now the main question comes into picture. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How do we implement this protocol ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is very simple. We just need to implement &lt;code&gt;@@iterator&lt;/code&gt;. This &lt;code&gt;@@iterator&lt;/code&gt; is special property in JS. So to make any object &lt;code&gt;iterable&lt;/code&gt; we need to add this &lt;code&gt;@@iterable&lt;/code&gt; property to it. &lt;/p&gt;

&lt;p&gt;We can get this by using constant symbol &lt;code&gt;[Symbol.iterator]&lt;/code&gt;. If you do not known what Symbols are, please read &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;@@iterator&lt;/code&gt; should be a simple method with &lt;code&gt;no arguments&lt;/code&gt; which will return a value that should comply with &lt;code&gt;iterator protocol&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;To summarise, we can convert any object to &lt;code&gt;Iterable&lt;/code&gt; by using following steps: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Take an object &lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;@@iterable&lt;/code&gt; property via &lt;code&gt;[Symbol.iterator]&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;@@iterable&lt;/code&gt; should be a &lt;code&gt;no argument&lt;/code&gt; method &lt;/li&gt;
&lt;li&gt;Return of &lt;code&gt;@@iterable&lt;/code&gt; method should be an &lt;code&gt;iterator&lt;/code&gt;. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rdj3_nSl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wfrj0osqnvemow7odtpj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rdj3_nSl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wfrj0osqnvemow7odtpj.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before we explore deep into Iterable Jungle. Let's talk about &lt;code&gt;iterator protocol&lt;/code&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#iterator-protocol"&gt;
  &lt;/a&gt;
  Iterator protocol:
&lt;/h2&gt;

&lt;p&gt;As per MDN &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;iterator protocol&lt;/code&gt; defines a standard way to produce a sequence of values (either finite or infinite), and potentially a return value when all values have been generated.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In plain English: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It is a rule which defines &lt;code&gt;shape&lt;/code&gt; of values during iteration. &lt;/li&gt;
&lt;li&gt;It also needs to tell us that there are &lt;code&gt;no more values&lt;/code&gt; when we have gone through all the values. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To make any object &lt;code&gt;iterator&lt;/code&gt; we need to implement &lt;code&gt;next()&lt;/code&gt; method which will return an object which should have these two properties to it: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;value&lt;/strong&gt; - value which will be available during iteration&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;done&lt;/strong&gt; - boolean value to indicate that there are more values or not&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's quite simple. Isn't it ? here is an example of &lt;code&gt;Infinite Counter&lt;/code&gt; iterator&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aRzCjrO2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wrip91e8ea8wp1kcopyx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aRzCjrO2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wrip91e8ea8wp1kcopyx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can create a &lt;code&gt;finite counter&lt;/code&gt; iterator as well &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C0ycLwGE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a19udcd2y0a3g93m1kc7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C0ycLwGE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a19udcd2y0a3g93m1kc7.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notice how when limit is reached we return &lt;code&gt;done: true&lt;/code&gt;. This is to tell the iterator like &lt;code&gt;for...of&lt;/code&gt; loop that there is no more values and you can stop the loop. &lt;/p&gt;

&lt;p&gt;Now that we know how to implement &lt;code&gt;iterator&lt;/code&gt;, let's head back to our &lt;code&gt;iterable&lt;/code&gt; and implement it fully. &lt;/p&gt;

&lt;p&gt;So for our example we want &lt;code&gt;user&lt;/code&gt; to be &lt;code&gt;iterable&lt;/code&gt; and return us &lt;code&gt;[key, value]&lt;/code&gt; when we iterate through &lt;code&gt;for...of&lt;/code&gt; loop. If you try to iterate &lt;code&gt;user&lt;/code&gt; in &lt;code&gt;for...of&lt;/code&gt; without implementing &lt;code&gt;iterable&lt;/code&gt; you will get following error:  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;TypeError: user is not iterable&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eBDt0mHo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5td63m0022h3zfk9ybp9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eBDt0mHo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5td63m0022h3zfk9ybp9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So here is a &lt;a href="https://codesandbox.io/s/iterable-pqj4b?file=/src/userIterable.js"&gt;codesandbox&lt;/a&gt; implementation of making &lt;code&gt;user&lt;/code&gt; iterable: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yF_VuA0i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/871wg9ypjx4lmdsfieix.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yF_VuA0i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/871wg9ypjx4lmdsfieix.png" alt="Screenshot 2021-10-02 at 6.38.29 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, we have added &lt;code&gt;[Symbol.iterator]&lt;/code&gt; which intern return an object containing our &lt;code&gt;next()&lt;/code&gt; function which implements &lt;code&gt;iterator&lt;/code&gt; protocol. &lt;/p&gt;

&lt;p&gt;We can reduce some of code if we use as special kind of function called &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#generator_functions"&gt;Generator Functions&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="c1"&gt;// with our own implementation of iterator &lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Symbol&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;iterator&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;keys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
          &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="na"&gt;done&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
          &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;done&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;//with Generator function&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Symbol&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;iterator&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;keys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#generator-functions"&gt;
  &lt;/a&gt;
  Generator Functions:
&lt;/h2&gt;

&lt;p&gt;Generator Functions are just a syntactic sugar. In our own implementation of &lt;code&gt;iterator&lt;/code&gt; function we need to keep track of internal states like &lt;code&gt;value&lt;/code&gt; and &lt;code&gt;done&lt;/code&gt;. Generator functions returns a special iterator which is called &lt;code&gt;Generator&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;Generator functions are declared with &lt;code&gt;function*&lt;/code&gt; syntax. And it uses a special keyword &lt;code&gt;yield&lt;/code&gt; to give us values over course of iteration.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;//definde function with * &lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="c1"&gt;//yield something here&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#yield-vs-return"&gt;
  &lt;/a&gt;
  yield Vs return
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;yield&lt;/code&gt; is very different from &lt;code&gt;return&lt;/code&gt;. When we return from a function, it simply means end of execution and we come out of function. Where as when we &lt;code&gt;yield&lt;/code&gt;, generator function pauses the execution and keep track of what to yield next. So when we call &lt;code&gt;next&lt;/code&gt; again on our generator it will &lt;code&gt;yield&lt;/code&gt; next value in line. &lt;/p&gt;

&lt;p&gt;Let's take a look of an example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// defined Counter generator&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// create an instance of COunter&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;counterInstance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;//first call &lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;counterInstance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; 
&lt;span class="c1"&gt;//{done: false, value: 1}&lt;/span&gt;

&lt;span class="c1"&gt;// second call &lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;counterInstance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; 
&lt;span class="c1"&gt;//{done: false, value: 2}&lt;/span&gt;

&lt;span class="c1"&gt;// Third call &lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;counterInstance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; 
&lt;span class="c1"&gt;//{done: true, value: undefined}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see when we create instance of our &lt;code&gt;generator&lt;/code&gt; it return us an &lt;code&gt;iterator&lt;/code&gt;. It does following: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When we call &lt;code&gt;next&lt;/code&gt; first time it will &lt;code&gt;yield&lt;/code&gt; a &lt;code&gt;{done: false, value: 1}&lt;/code&gt; and pause.&lt;/li&gt;
&lt;li&gt;When we call &lt;code&gt;next&lt;/code&gt; again it keeps track of it's state and &lt;code&gt;yield&lt;/code&gt; &lt;code&gt;{done: false, value: 2}&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;When we call last &lt;code&gt;next&lt;/code&gt; as there is nothing to yield any more it gives us &lt;code&gt;{done: true, value: undefined}&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can keep on calling &lt;code&gt;next()&lt;/code&gt; after it is done, but it will always give you &lt;code&gt;{done: true, value: undefined}&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Now let's use generator for our &lt;code&gt;Infinite Counter&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#infinite-counter-with-generators"&gt;
  &lt;/a&gt;
  Infinite Counter with Generators
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;InfiniteCounter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;infinity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;counterInstance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;InfiniteCounter&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;counterInstance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; 
&lt;span class="c1"&gt;// {done: false, value: 1}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;counterInstance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; 
&lt;span class="c1"&gt;// {done: false, value: 2}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;counterInstance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; 
&lt;span class="c1"&gt;// {done: false, value: 3}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, with &lt;code&gt;Generator&lt;/code&gt; it is a lot cleaner. &lt;/p&gt;

&lt;p&gt;You might be thinking, it's all cool. But I do not want to do all this just to make an object &lt;code&gt;Iterable&lt;/code&gt;. I have &lt;code&gt;Object.entries&lt;/code&gt; I will use that. Give me some good practical example. &lt;/p&gt;

&lt;p&gt;So here it is.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#practical-example"&gt;
  &lt;/a&gt;
  Practical example
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LinkedList&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am going to implement very basic &lt;a href="https://dev.to/vaidehijoshi/linked-lists--basecs-video-series--2le8"&gt;LinkedList&lt;/a&gt;. It only contain following methods &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;add - To add new elements to LinkedList&lt;/li&gt;
&lt;li&gt;size - A getter the size of LinkedList&lt;/li&gt;
&lt;li&gt;head - A getter for head node&lt;/li&gt;
&lt;li&gt;tail - A getter for tail
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;LinkedList&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Symbol&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;iterator&lt;/span&gt;&lt;span class="p"&gt;]()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;currentNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentNode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="nx"&gt;currentNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;currentNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;currentNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`[&lt;/span&gt;&lt;span class="p"&gt;${[...&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="s2"&gt;]`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Main portion of code to check is this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Symbol&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;iterator&lt;/span&gt;&lt;span class="p"&gt;]()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;currentNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentNode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="nx"&gt;currentNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;currentNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;currentNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see how I made &lt;code&gt;LinkedList&lt;/code&gt; iterable by implementing &lt;code&gt;[Symbol.iterator]&lt;/code&gt;. &lt;code&gt;*&lt;/code&gt; in front of &lt;code&gt;[Symbol.iterator]&lt;/code&gt; makes it a &lt;code&gt;generator&lt;/code&gt; and I am &lt;code&gt;yield&lt;/code&gt;ing the values until whole list is exhausted. &lt;/p&gt;

&lt;p&gt;Next portion to look at is &lt;code&gt;toString&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`[&lt;/span&gt;&lt;span class="p"&gt;${[...&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="s2"&gt;]`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see here use take advantage of &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax#spread_in_array_literals"&gt;Spread operator&lt;/a&gt; in array  of Iterable. I spread it in an array then take advantage of &lt;code&gt;toString&lt;/code&gt; of Array object.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Redux Saga&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Recently I got to know that one of Redux libraries &lt;a href="https://redux-saga.js.org/"&gt;Saga&lt;/a&gt; uses generators heavily. &lt;/p&gt;

&lt;p&gt;Some of example used here can be found in this Codesandbox.&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/iterable-pqj4b"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Thank you for reading.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#read-my-other-articles"&gt;
  &lt;/a&gt;
  Read my other articles
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/xenoxdev/special-kind-of-array-tuple-4l1h"&gt;Special kind of array in Typescript - Tuple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/xenoxdev/curious-case-of-sparse-array-in-js-38h7"&gt;Curious case of sparse Arrays in JS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Follow me on &lt;a href="https://twitter.com/VikasYadav_Dev"&gt;twitter&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol"&gt;Official MDN Iterable and Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#generator_functions"&gt;Official MDN Generator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>programming</category>
    </item>
    <item>
      <title>t3rm.dev is a web-based terminal where commands are minted as collectible NFTs</title>
      <author>t3rm.dev</author>
      <pubDate>Mon, 04 Oct 2021 00:11:45 +0000</pubDate>
      <link>https://dev.to/t3rmdotdev/t3rm-dev-is-a-web-based-terminal-where-commands-are-minted-as-collectible-nfts-1nb8</link>
      <guid>https://dev.to/t3rmdotdev/t3rm-dev-is-a-web-based-terminal-where-commands-are-minted-as-collectible-nfts-1nb8</guid>
      <description>&lt;h1&gt;
  &lt;a href="#welcome-to-t3rmdev-the-unstoppable-cli-where-commands-are-minted-as-nfts"&gt;
  &lt;/a&gt;
  Welcome to t3rm.dev, the unstoppable CLI where commands are minted as NFTs.
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Why do we need a command line interface on IPFS, connected through Ethereum, where commands are minted as NFTs, you ask? &lt;strong&gt;Because it’s f*cking cool.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You will find &lt;a href="https://t3rm.dev"&gt;t3rm.dev&lt;/a&gt; at the intersection of art, dev, and 80s nostalgia.&lt;/p&gt;

&lt;p&gt;Each command line program is minted as a unique NFT using the IPFS protocol to store the metadata and source code, similar to artwork / video NFTs.&lt;/p&gt;

&lt;p&gt;The website runs as a serverless dApp, hosted with a dnsLink over IPNS using Fleek, where commands are discovered and mirrored by a peer-to-peer network and cached onto Cloudflare and other gateways. There is no API or backend running underneath t3rm — everything runs through the Ethereum blockchain.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Visit &lt;a href="https://t3rm.dev"&gt;t3rm.dev&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Run the command: &lt;code&gt;connect&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Run the command: &lt;code&gt;info&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To get information about a token or package, you can run the command &lt;code&gt;info token &amp;lt;id&amp;gt;&lt;/code&gt; or &lt;code&gt;info pkg dev.t3rm.&amp;lt;name&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#discover-your-identity"&gt;
  &lt;/a&gt;
  Discover your identity
&lt;/h1&gt;

&lt;p&gt;There are &lt;strong&gt;1,337&lt;/strong&gt; unique identities on &lt;a href="https://t3rm.dev"&gt;t3rm.dev&lt;/a&gt; for users to discover. Each identity is a tradable collectible NFT rendered in text-form. These NFTs grant their owner access to special privileges within the platform and voting rights inside the &lt;a href="https://snapshot.org/#/t3rm.eth"&gt;t3rm DAO&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Run the command: &lt;code&gt;connect&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Run the command: &lt;code&gt;whoami&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#mint-your-command"&gt;
  &lt;/a&gt;
  Mint your command
&lt;/h1&gt;

&lt;p&gt;To create a new package on the t3rm platform:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Run the command: &lt;code&gt;connect&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Run the command: &lt;code&gt;mint&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Note: we recommend that packages use the bundle prefix: &lt;code&gt;dev.t3rm.&lt;/code&gt; for best compatibility.&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#create-your-artwork"&gt;
  &lt;/a&gt;
  Create your artwork
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://art-txt.xyz"&gt;Art.txt&lt;/a&gt; allows anyone to mint quotes and artwork as 100% on-chain text-based NFTs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GLNKTsrX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydv45jzvlfwxzdp2i5u0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GLNKTsrX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydv45jzvlfwxzdp2i5u0.png" alt="Art-txt.xyz homepage"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Run the command: &lt;code&gt;connect&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Run the command: &lt;code&gt;art&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Art.txt has a new graphical interface at &lt;a href="https://art-txt.xyz"&gt;https://art-txt.xyz&lt;/a&gt;. While many projects claim to be "on-chain," Art.txt is 100% on-chain with the storage of each character forever etched into the Ethereum smart contract.&lt;/p&gt;

&lt;p&gt;The artwork created on Art.txt is viewable in SVG-form (see: &lt;a href="https://opensea.io/collection/art-txt"&gt;https://opensea.io/collection/art-txt&lt;/a&gt;) or raw-text form.&lt;/p&gt;

&lt;p&gt;For help setting up your package or using &lt;a href="https://t3rm.dev"&gt;t3rm.dev&lt;/a&gt;, stop by our Discord community at &lt;a href="//discord.gg/t99bHhMQtK"&gt;discord.gg/t99bHhMQtK&lt;/a&gt;&lt;/p&gt;

</description>
      <category>nfts</category>
      <category>ethereum</category>
      <category>crypto</category>
      <category>nft</category>
    </item>
    <item>
      <title>Fazendo um curso na EduTools</title>
      <author>Ederson Ferreira</author>
      <pubDate>Sun, 03 Oct 2021 23:56:28 +0000</pubDate>
      <link>https://dev.to/kotlinautas/fazendo-um-curso-na-edutools-1kbp</link>
      <guid>https://dev.to/kotlinautas/fazendo-um-curso-na-edutools-1kbp</guid>
      <description>&lt;h2&gt;
  &lt;a href="#kotlinautas"&gt;
  &lt;/a&gt;
  Kotlinautas
&lt;/h2&gt;

&lt;p&gt;Esse conteúdo é oferecido e distribuído pela comunidade &lt;a href="https://twitter.com/kotlinautas/"&gt;Kotlinautas&lt;/a&gt;, uma comunidade brasileira que busca oferecer conteúdo gratuito sobre a linguagem Kotlin em um espaço plural.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BE6z6Pw1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jreawpvk6whxigcpmctf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BE6z6Pw1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jreawpvk6whxigcpmctf.png" alt="capa Kotlinautas"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#o-qu%C3%AA-%C3%A9-edutools"&gt;
  &lt;/a&gt;
  O quê é EduTools?
&lt;/h2&gt;

&lt;p&gt;EduTools é um recurso de diversas IDE's da &lt;a href="https://www.jetbrains.com"&gt;Jetbrains&lt;/a&gt; onde pessoas que buscam aprender diferentes linguagens podem fazer um curso, ou resolver uma série de exercícios sobre um conceito ou uma linguagem.&lt;/p&gt;

&lt;p&gt;A EduTools também serve como plataforma para pessoas educadoras que querem criar exercícios ou cursos sobre uma linguagem ou conceito específico, disponibilizando esse curso tanto de maneira privada quanto pública.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#materiais"&gt;
  &lt;/a&gt;
  Materiais
&lt;/h2&gt;

&lt;p&gt;Será necessário ter o &lt;a href="https://www.jetbrains.com/idea/"&gt;IntelliJ&lt;/a&gt; instalado na máquina.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#instalando-plugin-da-edutools"&gt;
  &lt;/a&gt;
  Instalando plugin da EduTools
&lt;/h2&gt;

&lt;p&gt;Precisaremos instalar o plugin da EduTools para IntelliJ para podermos criar e fazer um curso com EduTools. Primeiro vá ás configurações do IntelliJ em &lt;em&gt;File&lt;/em&gt; &amp;gt; &lt;em&gt;Settings&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KcX4Mt8U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/v1/assets/menu-settings-intellij-01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KcX4Mt8U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/v1/assets/menu-settings-intellij-01.png" alt="Localização do menu settings do IntelliJ"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora vá á seção &lt;em&gt;Plugins&lt;/em&gt;, pesquise por EduTools na parte de &lt;em&gt;Marketplace&lt;/em&gt; e instale o plugin:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rKK0iapU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tzr6fo0cqnu7axg4g7dm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rKK0iapU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tzr6fo0cqnu7axg4g7dm.png" alt="edutools no marketplace do IntelliJ"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#come%C3%A7ando-um-curso-na-edutools"&gt;
  &lt;/a&gt;
  Começando um curso na EduTools
&lt;/h2&gt;

&lt;p&gt;Para começar um novo curso na EduTools, vá á opção &lt;strong&gt;My Courses&lt;/strong&gt; na tela inicial do IntelliJ, e clique no botão &lt;strong&gt;Start New Course&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XSzprkdG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ja25e59gidfxzrd1925.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XSzprkdG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ja25e59gidfxzrd1925.png" alt="botão start new course intellij"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Com isso, irá aparecer uma lista de cursos que podem ser feitos na EduTools. O primeiro é um curso feito pela própria JetBrains chamado &lt;strong&gt;Kotlin Koans&lt;/strong&gt;. Vamos usar esse curso como exemplo neste artigo.&lt;/p&gt;

&lt;p&gt;Para começar esse curso, clique no botão &lt;strong&gt;Start&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_PYy0fU_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/93qr9pgzp7w595cs08lm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_PYy0fU_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/93qr9pgzp7w595cs08lm.png" alt="botão start no curso kotlin koans"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Quando a tela carregar, a interface será mostrada com três partes, uma referente ao seu progresso no curso, com todas as lições e atividades que podem ser feitas, uma com o editor de código, e outra com o texto da lição atual, junto com um botão de &lt;strong&gt;Check&lt;/strong&gt; para testar a resposta atual.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7IYYWrLO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqv3o5pawm5dfemcj9wb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7IYYWrLO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqv3o5pawm5dfemcj9wb.png" alt="interface kotlin koans na edutools"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fazendo-um-exerc%C3%ADcio"&gt;
  &lt;/a&gt;
  Fazendo um exercício
&lt;/h2&gt;

&lt;p&gt;Para fazer um exercício na EduTools, você precisa ler a descrição o exercício, e fazer a tarefa que está sendo proposta. No caso, para o primeiro exercício, devemos retornar uma string &lt;code&gt;OK&lt;/code&gt; da função &lt;code&gt;start&lt;/code&gt; (Veja na seção 3 da captura acima)&lt;/p&gt;

&lt;p&gt;Logo, para resolver o exercício, use o editor de texto no meio da tela para mudar o &lt;code&gt;TODO&lt;/code&gt; da função, retornando a string &lt;code&gt;OK&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Antes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;TODO&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Depois:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"OK"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Depois disso, clique no botão &lt;strong&gt;Check&lt;/strong&gt; para rodar os testes unitários e ver se a sua reposta foi correta ou não.&lt;/p&gt;

&lt;p&gt;Caso você tenha seguido os passos corretamente, a EduTools informará que todos os testes passaram corretamente:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h_s9dJmq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kqhjgatmz4o19yhnnskl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h_s9dJmq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kqhjgatmz4o19yhnnskl.png" alt="Testes do primeiro exercício com saída verdadeira"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Após isso, você pode clicar em &lt;strong&gt;Next&lt;/strong&gt; para ir á proxima lição, e poder ir concluindo as atividades do Koans. Todas seguiram exatamente o mesmo esquema, um enunciado dando enredo e explicando o quê deve ser feito na atividade, e um editor de texto para você codar a solução, sempre buscando passar dos testes unitários.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finaliza%C3%A7%C3%A3o"&gt;
  &lt;/a&gt;
  Finalização
&lt;/h2&gt;

&lt;p&gt;Nesse artigo, você aprendeu como abrir um curso no EduTools, e como fazer um exercício nessa plataforma.&lt;/p&gt;

&lt;p&gt;Obrigado por ler 💙&lt;/p&gt;

</description>
      <category>kotlin</category>
      <category>jetbrains</category>
    </item>
    <item>
      <title>Backdrop-filters!</title>
      <author>Ellaine Tolentino</author>
      <pubDate>Sun, 03 Oct 2021 23:17:10 +0000</pubDate>
      <link>https://dev.to/tolentinoel/backdrop-filters-3ec8</link>
      <guid>https://dev.to/tolentinoel/backdrop-filters-3ec8</guid>
      <description>&lt;p&gt;Hi! This blog is just to show recent backdrop-filters I've used!&lt;br&gt;
I am no expert but this is just me sharing what I've encountered in the hopes to help other newbie devs like me that might have an interest testing these effects out!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#backdropfilter"&gt;
  &lt;/a&gt;
  backdrop-filter:
&lt;/h2&gt;

&lt;p&gt;While filter applies the effect on the entire element including its children, backdrop-filter is more specific since it only applies as a ‘background effect’ or anything behind that element.&lt;/p&gt;

&lt;p&gt;It is limited on compatibility, so please bare with me since almost all of these would still need a workaround to apply the same effect.&lt;/p&gt;



&lt;p&gt;There are multiple values which backdrop-filter may be:&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#blur"&gt;
  &lt;/a&gt;
  blur()
&lt;/h3&gt;

&lt;p&gt;Starting of with blur, which values can be of pixels or rem. The length value refers to the length of pixels blurring together hence, longer the length the blurry it is.&lt;br&gt;
I have examples on blur application on my previous blog(&lt;a href="https://dev.to/tolentinoel/frosted-glass-on-css-37bg"&gt;Frosted glass on CSS&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OZwyd0Yb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qd7pq3h8nrx19m98zns2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OZwyd0Yb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qd7pq3h8nrx19m98zns2.png" alt="blur example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other workarounds for other browser were also discussed on &lt;a href="https://stackoverflow.com/questions/38145368/css-workaround-to-backdrop-filter"&gt;stackoverflow&lt;/a&gt; by other fellow devs!&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#sepia"&gt;
  &lt;/a&gt;
  sepia()
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;backdrop-filter&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;sepia&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;90&lt;/span&gt;&lt;span class="o"&gt;%)&lt;/span&gt; 

&lt;span class="c"&gt;/* Can be an IE &amp;amp; Firefox fallback: */&lt;/span&gt;
&lt;span class="c"&gt;/* Not exactly the same but definitely can be altered for a more similar effect*/&lt;/span&gt;
&lt;span class="nt"&gt;background&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#715515&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; 
&lt;span class="nt"&gt;opacity&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="err"&gt;6&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_Y9n9qZQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bnyvkt8arx3tenr9aem6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Y9n9qZQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bnyvkt8arx3tenr9aem6.png" alt="Sepia example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Workaround:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yX5P-XUw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1u7vhw2wf0xx4pauxb5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yX5P-XUw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1u7vhw2wf0xx4pauxb5.png" alt="Sepia workaround"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#grayscale"&gt;
  &lt;/a&gt;
  grayscale()
&lt;/h3&gt;

&lt;p&gt;Values can be a number or percentage.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;backdrop-filter&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;sepia&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%);&lt;/span&gt;
&lt;span class="nt"&gt;backdrop-filter&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;sepia&lt;/span&gt;&lt;span class="o"&gt;(.&lt;/span&gt;&lt;span class="err"&gt;5&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c"&gt;/* 50% of the effect */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ov3RP6u0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pfzbtzjvqx0x6gldoiid.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ov3RP6u0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pfzbtzjvqx0x6gldoiid.png" alt="grayscale"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#huerotate"&gt;
  &lt;/a&gt;
  hue-rotate()
&lt;/h3&gt;

&lt;p&gt;I think this is my current favorite effect. This effect changes the whole hue of the image or background color depending on the angle values!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;backdrop-filter&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;hue-rotate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;220&lt;/span&gt;&lt;span class="nt"&gt;deg&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c"&gt;/* same effect as -140deg */&lt;/span&gt;
&lt;span class="nt"&gt;backdrop-filter&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;hue-rotate&lt;/span&gt;&lt;span class="o"&gt;(.&lt;/span&gt;&lt;span class="err"&gt;61&lt;/span&gt;&lt;span class="nt"&gt;turn&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c"&gt;/* same effect as 220deg */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j7alPjgF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s54a8bq3l6ewrp3o573b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j7alPjgF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s54a8bq3l6ewrp3o573b.png" alt="hue-rotate"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you wanted to take a peek of each's compatibility on browsers, check out &lt;a href="https://caniuse.com/"&gt;caniuse.com&lt;/a&gt; and browse around for any css compatibility you wanna know about.&lt;/p&gt;

&lt;p&gt;There are more backdrop-filter effects you should try! Check out these CodePens by other creators!&lt;/p&gt;
Simon's CodePen



&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/typo3-freelancer/embed/YzGQMmP?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;
Mahdi's CodePen



&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/hamidimahdi92/embed/oNZZdjg?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>css</category>
      <category>codenewbie</category>
      <category>frontend</category>
    </item>
    <item>
      <title>Python 101 Series</title>
      <author>Sahil</author>
      <pubDate>Sun, 03 Oct 2021 23:11:00 +0000</pubDate>
      <link>https://dev.to/sahilfruitwala/python-101-series-9em</link>
      <guid>https://dev.to/sahilfruitwala/python-101-series-9em</guid>
      <description>&lt;p&gt;Python, world's one of the most popular general-purpose programming languages. According to the &lt;a href="https://insights.stackoverflow.com/survey/2021?_ga=2.236209345.190202062.1628102352-126161871.1625855113#technology-most-popular-technologies"&gt;2021 Developer Survey&lt;/a&gt; Python is the 4th most popular technology rated by &lt;em&gt;Professional  Developers&lt;/em&gt;. Python is easy to learn and use programming language, and I believe that is one of the reasons why YOU also wanted to learn Python.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cdVlKMF4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3bcumar4y01u9jm70sf1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cdVlKMF4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3bcumar4y01u9jm70sf1.png" alt="Survey"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-you-will-get-from-this-series"&gt;
  &lt;/a&gt;
  What you will get from this series
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; You will learn about Python's history&lt;/li&gt;
&lt;li&gt; You will understand basic concepts of programming&lt;/li&gt;
&lt;li&gt; You will be able to write and understand code on your own&lt;/li&gt;
&lt;li&gt; You will work on some small projects&lt;/li&gt;
&lt;li&gt; You will get knowledge to know "what to google when you stuck"&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#outline-of-this-series"&gt;
  &lt;/a&gt;
  Outline of this  series
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; Introduction

&lt;ul&gt;
&lt;li&gt;  History&lt;/li&gt;
&lt;li&gt;  Install Python&lt;/li&gt;
&lt;li&gt;  Test Installation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt; Variable &amp;amp; DataType&lt;/li&gt;
&lt;li&gt; Conditional Statements&lt;/li&gt;
&lt;li&gt; Data Structures&lt;/li&gt;
&lt;li&gt; Loops &amp;amp; Iterations&lt;/li&gt;
&lt;li&gt; Functions&lt;/li&gt;
&lt;li&gt; Regular Expression &amp;amp; Files&lt;/li&gt;
&lt;li&gt; Object-Oriented Programming&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#is-this-series-for-you"&gt;
  &lt;/a&gt;
  Is this series for you?
&lt;/h2&gt;

&lt;p&gt;I know, I know! You are the audience. But I am specifically targeting the people who are just getting started or new to the programming world. It does not mean people who know programming won't get anything. There might be some concepts that you have not learned yet, or you want to refresh the concepts you have learned once. It is always a good idea to develop a strong core.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-use-of-python"&gt;
  &lt;/a&gt;
  What is the use of Python?
&lt;/h2&gt;

&lt;p&gt;Nowadays, you will see everyone exaggerating the use of Python. People will say, python can be used here and here and here. But should you use Python everywhere?&lt;/p&gt;

&lt;p&gt;The simple answer is NO. I agree, Python is an amazing language, but every programming language has its use case. Python is broadly used for the following tasks:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Back-end development&lt;/li&gt;
&lt;li&gt;System Scripting / Automation Scripting&lt;/li&gt;
&lt;li&gt;Internet of Things&lt;/li&gt;
&lt;li&gt;Data Science &amp;amp; Machine Learning&lt;/li&gt;
&lt;li&gt;Small Part of Software / Game Development&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Time to decide. Now, after reading all these if you think that Python can be useful to you then let's do it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U8JuHpo8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xkngnb03sfmjwgk0k3s1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U8JuHpo8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xkngnb03sfmjwgk0k3s1.png" alt="Let's do it!"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or doubts, mention them in the comment section or reach out to me on &lt;a href="https://twitter.com/Sahil_Fruitwala"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/sahilfruitwala/"&gt;LinkedIn&lt;/a&gt; or &lt;a href="https://www.instagram.com/motivated.manush/"&gt;Instagram&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you want me to explain any specific topic, mention that in the comment section below 👇.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>python</category>
      <category>machinelearning</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Resources that every developer should know.</title>
      <author>Ivan Zadivar</author>
      <pubDate>Sun, 03 Oct 2021 22:17:24 +0000</pubDate>
      <link>https://dev.to/ivanz123/resources-that-every-developer-should-know-3jkd</link>
      <guid>https://dev.to/ivanz123/resources-that-every-developer-should-know-3jkd</guid>
      <description>&lt;p&gt;Hi guys! I have created this publication, because I wanted to share some tools or resources that I use in my day to day when I am developing an app. And some of these may work for you. Get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#online-code-editors"&gt;
  &lt;/a&gt;
  Online Code Editors.
&lt;/h2&gt;

&lt;p&gt;Sometimes when we are developing an app, we need to perform a process, create an algorithm, and we do not want to perform in our project. We have the alternative of creating a new project and testing. But sometimes we need it to be fast, so online code editors are not great.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#codesandbox"&gt;
  &lt;/a&gt;
  Codesandbox.
&lt;/h3&gt;

&lt;p&gt;Is defined as "Where teams build faster, together&lt;br&gt;
Create, share, and get feedback with collaborative sandboxes for rapid web development". Visit the following link: &lt;a href="https://codesandbox.io"&gt;https://codesandbox.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vjjfaSLH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rd5bhjau2t4e241k14yx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vjjfaSLH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rd5bhjau2t4e241k14yx.png" alt="Codesandbox Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#codeopen"&gt;
  &lt;/a&gt;
  Codeopen.
&lt;/h3&gt;

&lt;p&gt;Is defined as "The best place to build, test, and discover front-end code. CodePen is a social development environment for front-end designers and developers. Build and deploy a website, show off your work, build test cases to learn and debug, and find inspiration.". Visit the following link: &lt;a href="https://codepen.io"&gt;https://codepen.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PO8LBkCW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8hn869rcgkv5hstfxapj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PO8LBkCW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8hn869rcgkv5hstfxapj.png" alt="Codeopen Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stackblitz"&gt;
  &lt;/a&gt;
  Stackblitz.
&lt;/h3&gt;

&lt;p&gt;Is defined as "The fastest, most secure dev environment on the planet.". Visit the following link: &lt;a href="https://stackblitz.com"&gt;https://stackblitz.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YziwlJpk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xrgi12eor2jzwlaraijk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YziwlJpk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xrgi12eor2jzwlaraijk.png" alt="Stackblitz Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other online code editors.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://codeanywhere.com"&gt;https://codeanywhere.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jsfiddle.net"&gt;https://jsfiddle.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codeshare.io"&gt;https://codeshare.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing.
&lt;/h2&gt;

&lt;p&gt;When we have finished our app, it is time to test that everything we have done works correctly, and prevent things from breaking once in production.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cypressio"&gt;
  &lt;/a&gt;
  Cypress.io
&lt;/h3&gt;

&lt;p&gt;Cypress is a front-end automated testing tool built for the modern web. Cypress is based on a new architecture and runs on the same execution cycle as the application under test. As a result, Cypress provides better, faster, and more reliable tests for everything that runs in a browser. Cypress works on any front-end website or framework. Visit the following link: &lt;a href="https://www.cypress.io"&gt;https://www.cypress.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--88FrdrCv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z8hj9xeucl2xyjmpz659.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--88FrdrCv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z8hj9xeucl2xyjmpz659.png" alt="Cypress.io Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#api-platform"&gt;
  &lt;/a&gt;
  API Platform.
&lt;/h2&gt;

&lt;p&gt;I use this tool when I am creating an API and I do not want to develop the Frontend at the time of API development, I know that there are extensions in VSCode such as REST Client. But I want to share some programs with you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#postman"&gt;
  &lt;/a&gt;
  Postman.
&lt;/h3&gt;

&lt;p&gt;Postman is an API platform for building and using APIs. Postman simplifies each step of the API lifecycle and streamlines collaboration so you can create better APIs—faster. You can download in the following link: &lt;a href="https://www.postman.com"&gt;https://www.postman.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tcjSpBze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qzosysvkhih5fo50fcs8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tcjSpBze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qzosysvkhih5fo50fcs8.png" alt="Postman Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#insomnia"&gt;
  &lt;/a&gt;
  Insomnia.
&lt;/h3&gt;

&lt;p&gt;Is defined as "Deliver high quality APIs through standards and collaboration with the Insomnia API design platform". You can download in the following link: &lt;a href="https://insomnia.rest"&gt;https://insomnia.rest&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--atWxoo9d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p4w5jaiyrkl7y5kx85b3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--atWxoo9d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p4w5jaiyrkl7y5kx85b3.png" alt="Insomnia Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#email-testing"&gt;
  &lt;/a&gt;
  Email Testing.
&lt;/h2&gt;

&lt;p&gt;Many times when we want to incorporate email verification for our users, or we are developing an ecommerce, we send offers to our clients we need to send emails. Here are some tools that allow us to test this entire process.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mailtrap"&gt;
  &lt;/a&gt;
  Mailtrap.
&lt;/h3&gt;

&lt;p&gt;This is one of the best tools that I have used when I am developing an app that needs to send emails. Click in the following link: &lt;a href="https://mailtrap.io"&gt;https://mailtrap.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kAYifqBg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jpo5uiu16ycxwu6zej8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kAYifqBg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jpo5uiu16ycxwu6zej8.png" alt="Mailtrap Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sendgrid"&gt;
  &lt;/a&gt;
  Sendgrid.
&lt;/h3&gt;

&lt;p&gt;Now sendgrid brings new functionalities, and one of these is to be able to test our emails before going to production. Click here: &lt;a href="https://sendgrid.com/solutions/email-marketing/email-testing"&gt;https://sendgrid.com/solutions/email-marketing/email-testing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RJrB1WDb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pkmjx7m9z92jfnu5kgur.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RJrB1WDb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pkmjx7m9z92jfnu5kgur.png" alt="Senedgrid Testing Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other tools.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.htmlemailcheck.com"&gt;https://www.htmlemailcheck.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#mock-data"&gt;
  &lt;/a&gt;
  Mock Data.
&lt;/h2&gt;

&lt;p&gt;Data generators. Many times when we are developing an app, we need to generate false records to be able to carry out tests, and check that everything works perfectly. Imagine that you are creating a virtual store, and it contains products, categories, customers, promotions, among others. If you realize there are many things, and it is a tedious and boring task, enter all these data. With these tools, you will take off that burden.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mockaroo"&gt;
  &lt;/a&gt;
  Mockaroo.
&lt;/h3&gt;

&lt;p&gt;Mockaroo is a website where you can create thousands of test data in just seconds, modify the fields that your database models will have and more ... Personally, this is the one I use the most. Visit the following link: &lt;a href="https://www.mockaroo.com"&gt;https://www.mockaroo.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hFOqNnDJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i05irw8f6fg7oz2fi5x0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hFOqNnDJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i05irw8f6fg7oz2fi5x0.png" alt="Image Mockaroo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#generatedata"&gt;
  &lt;/a&gt;
  Generatedata.
&lt;/h3&gt;

&lt;p&gt;Generatedata, on a website that allows you to create false data immediately, you can obtain streets, addresses, names, telephone numbers. In addition, to specify is what format you want, be it JSON, HTML, SQL and more. Visit the following link: &lt;a href="https://generatedata.com"&gt;https://generatedata.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qwn43MHx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lfjcy4ys18j9shz7eeon.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qwn43MHx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lfjcy4ys18j9shz7eeon.png" alt="Generatedata image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other generate data.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mockapi.io"&gt;https://mockapi.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://designer.mocky.io"&gt;https://designer.mocky.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.onlinedatagenerator.com"&gt;https://www.onlinedatagenerator.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.randomuser.me"&gt;https://www.randomuser.me&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#images"&gt;
  &lt;/a&gt;
  Images.
&lt;/h2&gt;

&lt;p&gt;It is very common to add images to our websites, but sometimes we want to have images in high definition. That is why I leave you some of the websites with the best images.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#undraw"&gt;
  &lt;/a&gt;
  Undraw.
&lt;/h3&gt;

&lt;p&gt;Allows you to add svg images. In addition, it allows you to make aesthetic changes so that they are in sync with our website. Visit following link: &lt;a href="https://undraw.co/illustrations"&gt;https://undraw.co/illustrations&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uohDDr5i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uquykjkgag4adtgr7qjy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uohDDr5i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uquykjkgag4adtgr7qjy.png" alt="Undraw Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pexels"&gt;
  &lt;/a&gt;
  Pexels.
&lt;/h3&gt;

&lt;p&gt;This is one of the websites that I use the most to add images to my websites.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B3Txphuz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jlgsgelxy6ftal9xxbnc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B3Txphuz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jlgsgelxy6ftal9xxbnc.png" alt="Pexels Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#uiavatars"&gt;
  &lt;/a&gt;
  UiAvatars.
&lt;/h3&gt;

&lt;p&gt;If you've ever wondered how Google can add an avatar with your first and last name, take a look here: &lt;a href="https://ui-avatars.com"&gt;https://ui-avatars.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3JEaQus9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gpwiky6jw660d257ux8t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3JEaQus9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gpwiky6jw660d257ux8t.png" alt="UiAvatars Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#unsplash"&gt;
  &lt;/a&gt;
  Unsplash.
&lt;/h3&gt;

&lt;p&gt;Is defined as "The internet’s source of freely-usable images.&lt;br&gt;
Powered by creators everywhere". Visit the following link: &lt;a href="https://unsplash.com"&gt;https://unsplash.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZFMQbFop--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/111j5ed2474j1dxqp3qq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZFMQbFop--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/111j5ed2474j1dxqp3qq.png" alt="Unsplash Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other websites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pixabay.com"&gt;https://pixabay.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://picsum.photos"&gt;https://picsum.photos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#image-compression"&gt;
  &lt;/a&gt;
  Image Compression.
&lt;/h2&gt;

&lt;p&gt;There are times that our images are too heavy, and that slows down the loading of our website, now is the time to minify our images. Or use Lazy-Loading.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tinypng"&gt;
  &lt;/a&gt;
  TinyPNG.
&lt;/h3&gt;

&lt;p&gt;This site allows us to compress images of all resolutions and extensions. Click in the following link: &lt;a href="https://tinypng.com"&gt;https://tinypng.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ynmzi139--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6p832bgykk2q0dlb5lku.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ynmzi139--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6p832bgykk2q0dlb5lku.png" alt="TinyPNG Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other websites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ezgif.com/optipng"&gt;https://ezgif.com/optipng&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#favicon-generators"&gt;
  &lt;/a&gt;
  Favicon generators.
&lt;/h2&gt;

&lt;p&gt;When we are about to deploy an application (or in development) we want to see an icon on the page. This icon is as follows.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--92PpeM3---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6s08up4d0iemv9ag3z8r.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--92PpeM3---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6s08up4d0iemv9ag3z8r.jpg" alt="Favivon example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#faviconico"&gt;
  &lt;/a&gt;
  Favicon.ico
&lt;/h3&gt;

&lt;p&gt;The only favicon generator you need for your next project. Quickly generate your favicon from text, image, or choose from hundreds of emojis.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YKt3VY1w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/32d00xtramj7ypcv9qjc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YKt3VY1w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/32d00xtramj7ypcv9qjc.png" alt="Favicon.io Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Others websites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.favicon-generator.org"&gt;https://www.favicon-generator.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://realfavicongenerator.net"&gt;https://realfavicongenerator.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.favicon.cc"&gt;https://www.favicon.cc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#colors"&gt;
  &lt;/a&gt;
  Colors.
&lt;/h2&gt;

&lt;p&gt;The safest thing is that you already know these pages, but I'll leave them here anyway.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flatuicolors"&gt;
  &lt;/a&gt;
  Flatuicolors.
&lt;/h3&gt;

&lt;p&gt;In this page you will find beautiful colors for adding in your page, website or webapp. Visit the following link: &lt;a href="https://flatuicolors.com"&gt;https://flatuicolors.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o66EjZAA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6b3ylk9xuc6942cba67v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o66EjZAA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6b3ylk9xuc6942cba67v.png" alt="Flatuicolors Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#uigradients"&gt;
  &lt;/a&gt;
  UiGradients.
&lt;/h3&gt;

&lt;p&gt;This site, I use it normally when I need to have colors with gradients. Visit the following link: &lt;a href="https://uigradients.com"&gt;https://uigradients.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LnkB6n_r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pg153t1krf97eqvdtmm9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LnkB6n_r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pg153t1krf97eqvdtmm9.png" alt="UiGradient Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#htmlcolorcodes"&gt;
  &lt;/a&gt;
  Htmlcolorcodes.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y4tblgc3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/otp53ztexczmllvvya80.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y4tblgc3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/otp53ztexczmllvvya80.png" alt="HtmlColorCodes image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other websites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://htmlcolors.com"&gt;https://htmlcolors.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.webfx.com/web-design/color-picker"&gt;https://www.webfx.com/web-design/color-picker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3schools.com/colors/colors_picker.asp"&gt;https://www.w3schools.com/colors/colors_picker.asp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#icons"&gt;
  &lt;/a&gt;
  Icons.
&lt;/h2&gt;

&lt;p&gt;When we are developing an application we need to add icons to our buttons, card, toolbar and others.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#boxicons"&gt;
  &lt;/a&gt;
  Boxicons.
&lt;/h3&gt;

&lt;p&gt;On this site you will find a lot of icons to add to your components. Click in the following link: &lt;a href="https://boxicons.com"&gt;https://boxicons.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_lHyw3PG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88lfd5zni0obemhddm2t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_lHyw3PG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88lfd5zni0obemhddm2t.png" alt="Boxicons Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#font-awesome"&gt;
  &lt;/a&gt;
  Font Awesome.
&lt;/h3&gt;

&lt;p&gt;Well, every developer who is a few weeks old knows about this tool. 😂😂😂 I leave the link: &lt;a href="https://fontawesome.com"&gt;https://fontawesome.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0-m1N-vH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4g2nj8cfwm7egz8h3p4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0-m1N-vH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4g2nj8cfwm7egz8h3p4.png" alt="Font Awesome Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#google-icons"&gt;
  &lt;/a&gt;
  Google Icons.
&lt;/h3&gt;

&lt;p&gt;Google also offers very nice icons, it also allows filtering these by categories, names, etc; so that the icon we are looking for is faster. Click here: &lt;a href="https://fonts.google.com/icons"&gt;https://fonts.google.com/icons&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d7_bl0S2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dknefm2h6dm8fu2t9yaf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d7_bl0S2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dknefm2h6dm8fu2t9yaf.png" alt="Google Icons Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other websites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.flaticon.com"&gt;https://www.flaticon.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://icons8.com"&gt;https://icons8.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#text-generators"&gt;
  &lt;/a&gt;
  Text generators.
&lt;/h2&gt;

&lt;p&gt;The text generator is very useful when we are developing an application and we need to add filler text to see how it is being. And the truth is that it is quite tedious if we add it, especially when it is a large text. Here are some websites:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#loremipsumio"&gt;
  &lt;/a&gt;
  Loremipsum.io
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eb76dbic--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q0a4olhcsmnklvfza8mi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eb76dbic--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q0a4olhcsmnklvfza8mi.png" alt="Image Lorem Ipsum"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lorem Ipsum is a placeholder text commonly used in the graphics, graphics, and publishing industries to preview visual layouts and mockups. Click in the following link: &lt;a href="https://loremipsum.io"&gt;https://loremipsum.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other websites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.lipsum.com"&gt;https://www.lipsum.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://getlorem.com"&gt;https://getlorem.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.webfx.com/tools/lorem-ipsum-generator"&gt;https://www.webfx.com/tools/lorem-ipsum-generator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At the time of making this post, they are the tools that I use in my day to day, at least the one I remember. If there are tools that you use, do not forget to comment, which is very helpful for all of us to grow as a community. Regards and until next time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#follow-me-on-social-networks"&gt;
  &lt;/a&gt;
  Follow me on social networks.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;🎉 Twitter: &lt;a href="https://twitter.com/ToSatn2"&gt;https://twitter.com/ToSatn2&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;💡 Github: &lt;a href="https://github.com/IvanZM123"&gt;https://github.com/IvanZM123&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
      <category>tooling</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Do it in Keras! - Hacktoberfest</title>
      <author>Sebastian Ponce</author>
      <pubDate>Sun, 03 Oct 2021 22:09:39 +0000</pubDate>
      <link>https://dev.to/sebaspv/do-it-in-keras-hacktoberfest-4g2h</link>
      <guid>https://dev.to/sebaspv/do-it-in-keras-hacktoberfest-4g2h</guid>
      <description>&lt;h3&gt;
  &lt;a href="#modern-deep-learning-architectures-and-tasks-all-implemented-in-keras"&gt;
  &lt;/a&gt;
  Modern deep learning architectures and tasks, all implemented in Keras
&lt;/h3&gt;

&lt;p&gt;Have you ever been in a situation where you scroll through forums, reddit, journal posts or even 5 year old github repos trying to find an example for a Deep Learning task that you want to implement using Python and Keras?&lt;/p&gt;

&lt;p&gt;Is your code not working because the original code was outdated?&lt;/p&gt;

&lt;p&gt;Are you tired of always seeing the same benchmark datasets without the possibility of implementing your own?&lt;/p&gt;

&lt;p&gt;Do you like to contribute to the spread of Deep Learning and want to implement your own examples in Keras?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Well, then Do it in Keras is for you!&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-do-it-in-keras"&gt;
  &lt;/a&gt;
  What is Do it in Keras?
&lt;/h3&gt;

&lt;p&gt;Do it in Keras is a collection of easy to use Jupyter Notebooks hosted in Github which have various implementations of Deep Learning with custom datasets and future exercises for you to learn the most popular Deep Learning library: Keras.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-do-i-contribute-to-it"&gt;
  &lt;/a&gt;
  How do I contribute to it?
&lt;/h3&gt;

&lt;p&gt;Do it in Keras is now participating in Hacktoberfest, so you can not only learn a lot more about Keras and Open Source, but you can also win a lot of cool prizes!&lt;/p&gt;

&lt;p&gt;If you've never heard about Hacktoberfest, you can check it out &lt;a href="https://hacktoberfest.digitalocean.com/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To contribute to Do it in Keras, you only need to make a pull request on the official &lt;a href="https://github.com/sebaspv/do-it-in-keras"&gt;Do it in Keras repository&lt;/a&gt;. Anything related to Deep Learning with Keras helps, and you can also upload your own implementation of a Deep Learning task.&lt;/p&gt;

</description>
      <category>deeplearning</category>
      <category>jupyter</category>
      <category>machinelearning</category>
      <category>hacktoberfest</category>
    </item>
    <item>
      <title>The React Lifecycle</title>
      <author>Thomas(Tripp) White </author>
      <pubDate>Sun, 03 Oct 2021 22:09:31 +0000</pubDate>
      <link>https://dev.to/turpp/the-react-lifecycle-3635</link>
      <guid>https://dev.to/turpp/the-react-lifecycle-3635</guid>
      <description>&lt;p&gt;Wait! React has a lifecycle? Is this the web form of the Terminator? No humankind is safe! React is such a great frontend tool. For those unaware, React uses components to control what is rendered on the screen for the user. If you want to learn more about how React controls this with the Virtual DOM check out my article &lt;a href="https://dev.to/turpp/what-is-the-virtual-dom-in-react-3afn"&gt;What is the Virtual DOM in React&lt;/a&gt;. React Class Components have a built in lifecycle that gives them even more utility. Every react component has 3 phases of its life. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Mounting&lt;/li&gt;
&lt;li&gt;Updating&lt;/li&gt;
&lt;li&gt;Unmounting&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As a developer we have access to unique methods in each phase of the components lifecycle. In this article I will discuss what each phase is and also some of the common methods we have access to. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mounting"&gt;
  &lt;/a&gt;
  Mounting
&lt;/h2&gt;

&lt;p&gt;This is the very first phase in a components life. The lifecycle methods included in this phase are designed to create/setup and put the component in view. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;constructor()&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;very first lifecycle method called&lt;/li&gt;
&lt;li&gt;sets the initial state of the component and binds event handler methods&lt;/li&gt;
&lt;li&gt;if there is no state or methods to bind you don’t need to include this in your component&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;render()&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt; only required method in a class component&lt;/li&gt;
&lt;li&gt; this is where you place your JSX to get rendered onto the DOM.&lt;/li&gt;
&lt;li&gt; needs to be pure in nature. Meaning that it returns the same thing every time under the same circumstances. If you need to interact with the browser or change state make sure to use other lifecycle methods and not &lt;code&gt;render()&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;componentDidMount()&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;called right after the component is rendered.&lt;/li&gt;
&lt;li&gt;since its called after its rendered you have access to DOM nodes.&lt;/li&gt;
&lt;li&gt;place to make network request to APIs etc.
only called on initial rendering&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#updating"&gt;
  &lt;/a&gt;
  Updating
&lt;/h2&gt;

&lt;p&gt;We know that when state or props change in a component it will trigger a re-render. The lifecycle methods in this phase gives us control over the re-render and allows the component to update.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;shouldComponentUpdate()&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;called when new props are received&lt;/li&gt;
&lt;li&gt;used to let React know if the new props should trigger a re-render or not.&lt;/li&gt;
&lt;li&gt;defaults to true and triggers a re-render and if returns false will not re-render&lt;/li&gt;
&lt;li&gt;used for performance optimization&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;render()&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;automatically gets called&lt;/li&gt;
&lt;li&gt;same as before. Puts the updated component on the DOM.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;componentDidUpdate()&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;gets called after the re-render&lt;/li&gt;
&lt;li&gt;works just like &lt;code&gt;componentDidMount()&lt;/code&gt; but gets called during updating phase and re-renders&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#unmounting"&gt;
  &lt;/a&gt;
  Unmounting
&lt;/h2&gt;

&lt;p&gt;This phase happens as our component rides off into the sunset. This is were we would preform any clean up operations. Once this phase is complete this component will be destroyed.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;componentWillUnmount()&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;invoked right before a component is unmounted&lt;/li&gt;
&lt;li&gt;used to preform any clean up operations that was created earlier. (timers, network request, etc.)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#functional-components-and-hooks"&gt;
  &lt;/a&gt;
  Functional Components and Hooks
&lt;/h2&gt;

&lt;p&gt;Lifecycle methods used to only be available to class components. This has since changed with the introduction of React Hooks. We use the &lt;code&gt;useEffect&lt;/code&gt; hook to access these methods. Accessing these lifecycle methods is a bit different from class components. I may do a separate article about this in the future but in the mean time I encourage you to check out the React documentation on this &lt;a href="https://reactjs.org/docs/hooks-effect.html"&gt;https://reactjs.org/docs/hooks-effect.html&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thats React components lifecycle in a nutshell. There are more lifecycle methods in each of the phases, but they are used for very specific cases. To learn more detail about the above methods or to dig a little deeper on the more rare lifecycle methods check out the &lt;a href="https://reactjs.org/docs/state-and-lifecycle.html"&gt;React documentation&lt;/a&gt;. &lt;br&gt;
Knowing more about the different phases of a component and the lifecycle methods associated with each phase will do nothing but make you a stronger React developer.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Writing my own minimal shell in C - Part 1 (The constraints)</title>
      <author>harsh banthiya</author>
      <pubDate>Sun, 03 Oct 2021 21:38:52 +0000</pubDate>
      <link>https://dev.to/harshbanthiya/writing-my-own-minimal-shell-in-c-part-1-the-constraints-20cg</link>
      <guid>https://dev.to/harshbanthiya/writing-my-own-minimal-shell-in-c-part-1-the-constraints-20cg</guid>
      <description>&lt;h1&gt;
  &lt;a href="#day-1-understanding-the-problem"&gt;
  &lt;/a&gt;
  Day 1 - Understanding the Problem.
&lt;/h1&gt;

&lt;p&gt;This is my attempt to replicate the behavior of BASH or (Bourne again shell) command line interpreter for a school project. Before we get into how to get into the solution and the general approach of making the shell. Let's first look at all the constraints and what is expected from this minimal shell. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-and-foremost-standard-library-functions-i-am-allowed-to-use"&gt;
  &lt;/a&gt;
  First and foremost, standard library functions I am allowed to use.
&lt;/h2&gt;

&lt;p&gt;Below is the list of the external functions / standard library functions that I am allowed to use, if I need any another function I must code it myself. Please see the man pages of these functions if you do not recognize them. &lt;/p&gt;

&lt;p&gt;readline, rl_clear_history, rl_on_new_line, rl_replace_line, rl_redisplay, add_history, printf, malloc, free, write, access, open, read, close, fork, wait, waitpid, wait3, wait4, signal, sigaction, kill, exit, getcwd, chdir, stat, lstat, fstat, unlink, execve, dup, dup2, pipe, opendir, readdir, closedir, strerror, perror, isatty, ttyname, ttyslot, ioctl, getenv, tcsetattr, tcgetattr, tgetflag, tgetnum, tgetstr, tgoto, tputs&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#expectations-from-the-shell-what-must-this-minimal-shell-do"&gt;
  &lt;/a&gt;
  Expectations from the shell, what must this minimal shell do
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It must implement the builtin shell functions &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; echo with the option -n&lt;/li&gt;
&lt;li&gt; cd with only a relative or absolute path&lt;/li&gt;
&lt;li&gt; pwd with no options &lt;/li&gt;
&lt;li&gt; export with no options &lt;/li&gt;
&lt;li&gt; unset with no options &lt;/li&gt;
&lt;li&gt; env with no options or arguments &lt;/li&gt;
&lt;li&gt; exit with no options &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Redirections &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &amp;lt; should redirect input&lt;/li&gt;
&lt;li&gt; &amp;gt; should redirect output &lt;/li&gt;
&lt;li&gt; &amp;lt;&amp;lt; read input from the current source until a line containing only the delimiter is even. &lt;/li&gt;
&lt;li&gt; &amp;gt;&amp;gt; should redirect output in append mode.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pipes &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; | The output of each command in the pipeline is connected via a pipe to the input of the next command&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Environment Variables ($ followed by characters ) should expand to their values.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;$? should expand to the exit status of the most recently executed foreground pipeline&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For some simplification, the shell must not interpret unclosed quotes or unspecified special characters like '\' or ';' etc&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The shell must show a prompt waiting for next command, have a working history and must only use one global variable.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ctrl-C ctrl-D ctrl-\ should work like bash. When interactive:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; ctrl-C print a new prompt on a newline&lt;/li&gt;
&lt;li&gt; ctrl-D exit the shell.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#lets-begin-researching-the-problems-and-the-areas-of-operating-system-i-am-less-familiar-with-in-the-next-part-of-this-series-i-will-break-down-the-general-overview-of-the-design-and-i-will-try-to-make-it-super-modular"&gt;
  &lt;/a&gt;
  Lets begin researching the problems and the areas of Operating System I am less familiar with, in the next part of this series I will break down the general overview of the design and I will try to make it super modular.
&lt;/h2&gt;

</description>
      <category>c</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>AWS Database Services Fundamentals</title>
      <author>John Bulla</author>
      <pubDate>Sun, 03 Oct 2021 21:14:53 +0000</pubDate>
      <link>https://dev.to/aws-builders/aws-database-services-fundamentals-4ml6</link>
      <guid>https://dev.to/aws-builders/aws-database-services-fundamentals-4ml6</guid>
      <description>&lt;p&gt;A database is a collection of information that is organized in a way that can be easily accessed, managed, and updated. Computer databases often contain record sets or data files, which contain information about sales transactions or interactions with specific customers. Databases are important back-end systems used to store, manage, update, and analyze data for all types of applications, from small back-office systems to consumer and mobile web applications on a global scale. Most databases use structured query language (SQL) to write and query data.&lt;/p&gt;

&lt;p&gt;Databases have evolved dramatically since their inception in the early 1960s. Navigation databases, such as the hierarchical database (which was based on a tree-like model and only allowed a one-to-many relationship), and the network database (a more flexible model that allowed multiple relationships), were the original systems used to store and manipulate data. Although simple, these early systems were inflexible. In the 1980s, relational databases became popular, followed by object-oriented databases in the 1990s. More recently, NoSQL databases emergedin response to the growth of the internet and the need for greater speed and processing of unstructured data. Today, the cloud database and separate databases are opening up new ways as to how to collect, store, manage and use the data.&lt;/p&gt;

&lt;p&gt;According to their type, the databases can be classified as relational and non-relational databases. Relational databases became popular in the eighties, the elements of a relational database are organized as a set of tables with columns and rows. Relational database technology provides the most efficient and flexible way to access structured information. NoSQL or non-relational databases allow unstructured and semi-structured data to be stored and manipulated, unlike a relational database, which defines how all the data inserted into the database should be composed. NoSQL databases became popular as web applications became more common and complex.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2zU85A36--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h39g7ktn3ei7tw88d50k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2zU85A36--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h39g7ktn3ei7tw88d50k.png" alt="Database Relational and Non-Relational"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The databases can also be classified according to their type of workload into operational databases (OLTP - Online Transaction Processing) or analytical databases (OLAP - Online Analytical Processing). OLTP systems are databases oriented to transaction processing. A transaction generates an atomic process (which must be validated with a commit, or invalidated with a rollback), and that may involve data insertion, modification and deletion operations. The transactional process is typical of operational databases. OLAP systems are databases oriented to analytical processing. This analysis usually involves, generally, the reading of large amounts of data to get to extract some type of useful information that is helpful for decision making, such as sales trends, consumer behavior patterns, elaboration of complex reports, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkQoz7YF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o547ifm4v97f5zxd97bu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkQoz7YF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o547ifm4v97f5zxd97bu.png" alt="Database OLTP and OLAP"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS offers a wide variety of custom databases for your specific application use cases. Our fully managed database services include relational databases for transactional applications, non-relational databases for Internet-scale applications, a data warehouse for analytics, an in-memory database for caching and workloads in real time, and a graphs database to create applications with strongly connected data. With AWS Database Migration Service, migrating existing databases to AWS is easy and cost-effective.&lt;/p&gt;

&lt;p&gt;AWS Databases were designed from the ground up to support the scale, performance, and availability demands of modern globally distributed applications with microservices architectures.&lt;/p&gt;

&lt;p&gt;AWS offers 15 database engines and continues to grow, including relational and non-relational types for every application need. The types of AWS databases are described below:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Relational&lt;/strong&gt;&lt;br&gt;
Description: Relational databases store data with predefined schemas and relationships between them. These databases are designed to support ACID transactions, and maintain referential integrity and strong data consistency.&lt;/p&gt;

&lt;p&gt;Use cases: Aplicaciones tradicionales, ERP, CRM y e-commerce&lt;/p&gt;

&lt;p&gt;AWS service: &lt;a href="https://aws.amazon.com/es/rds/aurora"&gt;Amazon Aurora&lt;/a&gt;, &lt;a href="https://aws.amazon.com/es/rds/"&gt;Amazon RDS&lt;/a&gt;, &lt;a href="https://aws.amazon.com/es/redshift/"&gt;Amazon Redshift&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key-value&lt;/strong&gt;&lt;br&gt;
Description: Key-value databases are optimized for common access patterns, typically to store and retrieve large volumes of data. These databases deliver quick response times, even in extreme volumes of concurrent requests.&lt;/p&gt;

&lt;p&gt;Use cases: High-traffic web apps, e-commerce systems, gaming applications&lt;/p&gt;

&lt;p&gt;AWS service: &lt;a href="https://aws.amazon.com/es/dynamodb/"&gt;Amazon DynamoDB&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In-memory&lt;/strong&gt;&lt;br&gt;
Description: In-memory databases are used for applications that require real-time access to data. By storing data directly in memory, these databases deliver microsecond latency to applications for whom millisecond latency is not enough.&lt;/p&gt;

&lt;p&gt;Use cases: Caching, session management, gaming leaderboards, geospatial applications&lt;/p&gt;

&lt;p&gt;AWS service: &lt;a href="https://aws.amazon.com/es/elasticache/memcached/"&gt;Amazon ElastiCache for Memcached&lt;/a&gt;, &lt;a href="https://aws.amazon.com/es/elasticache/redis/"&gt;Amazon ElastiCache for Redis&lt;/a&gt;, &lt;a href="https://aws.amazon.com/es/memorydb"&gt;Amazon MemoryDB for Redis&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Document&lt;/strong&gt;&lt;br&gt;
Description: A document database is designed to store semistructured data as JSON-like documents. These databases help developers build and update applications quickly.&lt;/p&gt;

&lt;p&gt;Use cases: Content management, catalogs, user profiles&lt;br&gt;
AWS service: &lt;a href="https://aws.amazon.com/es/documentdb/"&gt;Amazon DocumentDB (with MongoDB compatibility)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wide column&lt;/strong&gt;&lt;br&gt;
Description: A wide column store is a type of NoSQL database. It uses tables, rows, and columns, but unlike a relational database, the names and format of the columns can vary from row to row in the same table.&lt;/p&gt;

&lt;p&gt;Use cases: High scale industrial apps for equipment maintenance, fleet management, and route optimization&lt;/p&gt;

&lt;p&gt;AWS service: &lt;a href="https://aws.amazon.com/es/keyspaces/"&gt;Amazon Keyspaces (for Apache Cassandra)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Graph&lt;/strong&gt;&lt;br&gt;
Description: Graph databases are for applications that need to navigate and query millions of relationships between highly connected graph datasets with millisecond latency at large scale.&lt;/p&gt;

&lt;p&gt;Use cases: Fraud detection, social networking, recommendation engines&lt;/p&gt;

&lt;p&gt;AWS service: &lt;a href="https://aws.amazon.com/es/neptune/?c=db&amp;amp;sec=srv"&gt;Amazon Neptune&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time series&lt;/strong&gt;&lt;br&gt;
Description: Time-series databases efficiently collect, synthesize, and derive insights from data that changes over time and with queries spanning time intervals.&lt;/p&gt;

&lt;p&gt;Use cases: IoT applications, DevOps, industrial telemetry&lt;/p&gt;

&lt;p&gt;AWS service: &lt;a href="https://aws.amazon.com/es/timestream/"&gt;Amazon Timestream&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ledger&lt;/strong&gt;&lt;br&gt;
Description: Systems of record, supply chain, registrations, banking transactions&lt;/p&gt;

&lt;p&gt;Use cases: Systems of record, supply chain, registrations, banking transactions&lt;/p&gt;

&lt;p&gt;AWS service: &lt;a&gt;Amazon QLDB&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=AbhnNqlOYWY"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YOzs18B4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.youtube.com/vi/AbhnNqlOYWY/0.jpg" alt="AWS Databases: Break Free to Save, Grow, and Innovate Faster"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Strategy for selecting a database&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The optimal database solution for a system varies depending on the requirements for availability, consistency, partition tolerance, latency, durability, scalability, and query capacity. Many systems use different database solutions for various subsystems and allow different features to improve performance. Selecting the wrong database features and solutions can result in lower performance efficiencies.&lt;/p&gt;

&lt;p&gt;When selecting a database service, consider the dimensions and choose the one that best suits each of your requirements and components of your application and architecture.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Leader in Gartner's New Magic Quadrant&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;LIndustry analyst firm Gartner has published a new report, the &lt;a href="https://pages.awscloud.com/GLOBAL-multi-DL-gartner-mq-cdbms-2020-learn.html?trk=el_a134p000006gMUAAA2&amp;amp;trkCampaign=WW-FY20-AR-104-gartner-mq-cdbms_Download_Report&amp;amp;sc_channel=el&amp;amp;sc_campaign=DB_Blog&amp;amp;sc_outcome=Global_Marketing_Campaigns&amp;amp;sc_geo=NAMER&amp;amp;sc_country=mult"&gt;Magic Quadrant for Cloud Database Management Systems&lt;/a&gt;, naming AWS as a Leader and placing AWS highest among the 16 vendors evaluated for “Ability to Execute.” This report is Gartner’s first database and analytics report exclusively evaluating cloud-based services, doubling down on their assertion in a June 2019 report that The Future of the DBMS Market is Cloud. More info &lt;a href="https://aws.amazon.com/es/blogs/database/aws-named-a-leader-in-new-gartner-magic-quadrant-report-evaluating-cloud-database-and-analytics-services/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b6fKFtOt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7a292dtyua8grl153ur.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b6fKFtOt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7a292dtyua8grl153ur.png" alt="Magic Quadrant for Cloud Database Management Systems"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Databases free tier&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;he AWS Free Tier offers users an opportunity to explore products for free, with offers including products that are always free, free for 12 months, and short-term free trials. AWS offers the widest selection of purpose-built databases, allowing you to save, grow, and innovate faster.&lt;/p&gt;

&lt;p&gt;Build database solutions using &lt;a href="https://aws.amazon.com/es/free/database/"&gt;these product offerings&lt;/a&gt; of the AWS Free Tier.&lt;/p&gt;

&lt;p&gt;To obtain updated information on AWS database services, I invite you to follow their page “&lt;a href="https://www.linkedin.com/showcase/aws-databases/"&gt;AWS Databases &amp;amp; Analytics&lt;/a&gt;” on Linkedin.&lt;/p&gt;

&lt;p&gt;Later, I will delve into each of the AWS database services. I hope this information is useful !!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Follow us:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://wiki-cloud.co/"&gt;Wiki Cloud&lt;/a&gt;, &lt;a href="https://www.facebook.com/groups/wikicloud"&gt;Facebook&lt;/a&gt;, &lt;a href="https://twitter.com/johnbulla"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.linkedin.com/groups/12529878"&gt;LinkedIn&lt;/a&gt;, &lt;a href="https://www.youtube.com/user/johnbulla"&gt;Youtube&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>database</category>
      <category>cloud</category>
      <category>cloudskills</category>
    </item>
    <item>
      <title>Dyslexia Awareness Week</title>
      <author>Terry Child</author>
      <pubDate>Sun, 03 Oct 2021 20:47:37 +0000</pubDate>
      <link>https://dev.to/terrychild/dyslexia-awareness-week-2klp</link>
      <guid>https://dev.to/terrychild/dyslexia-awareness-week-2klp</guid>
      <description>&lt;p&gt;October the 4th to 10th is Dyslexia Awareness Week, a time to raise awareness and understanding of dyslexia and how it affects the people who have it.  It is believed up to 10% of people experience dyslexia, I’m one of them.  I would like to share with you some of my thoughts on the subject, some of the challenges I experience and the incredible gift I consider dyslexia to be.&lt;/p&gt;

&lt;p&gt;I’d like to start by explaining how I was tested for dyslexia, it gives some insight into what educational psychologists are looking for and what dyslexia is. The main part of the evaluation process consists of a series of short tests covering all kinds of areas.  As you might expect there are reading, writing and spelling tests.  There are also comprehension, logical reasoning, spatial awareness and memory tests, the list goes on.  It’s a complete workout for the brain and the whole process takes a few hours.&lt;/p&gt;

&lt;p&gt;Each test starts easy (spell "cat" for example), and gets progressively more difficult (spell "dyslexia") before you fail or run out of time.  Some tests are repeated using different communication styles, for example the spelling test will be done as a written test and then as an oral test.&lt;/p&gt;

&lt;p&gt;The results for each test are compared to the national averages to see which percentile they scored in.  Scoring in the 50th percentile means half the nation scored better, half worse, in other words a perfectly average score.&lt;/p&gt;

&lt;p&gt;The psychologist is interested in the differences in the percentiles.  Everyone has their strengths and will score higher on some tests than others, for most people the spread should be relatively small, within 10 to 15 points of each other.  When a person has a significantly lower score for some tests compared to others, this suggests a specific learning difficulty.  When those lower scores are for reading, writing, short term memory etc this is called dyslexia, which was the case for me.&lt;/p&gt;

&lt;p&gt;There is more to the evaluation than this, but an important point is that people who experience dyslexia have notably below average ability when it comes to reading and writing, but often above average skills when it comes to creative thinking, logical analysis and problem solving.&lt;/p&gt;

&lt;p&gt;Not everyone who is diagnosed with dyslexia has the same difficulties.  My particular brand of dyslexia manifests itself in a few ways, but I'm lucky as my symptoms just tend to slow me down.  For the more serious cases it can be debilitating where words and letters are hard to even focus on let alone read.&lt;/p&gt;

&lt;p&gt;I have big problems with vowels, they all sound the same to me and when spelling I know that words are supposed to have vowels, I’m just never sure which ones and where they go.  This has become less of a problem over the years as spell checkers have gotten smarter.  For anything important I always get someone to proofread my work.  Mistakes slip through though, for the longest time an application I developed had a view titled “pepole”.&lt;/p&gt;

&lt;p&gt;I'll often transpose numbers.  I almost missed my driving test because I thought it was on the "23rd of the 4th [April]", but it was actually on the "24th of the 3rd [March]".  To avoid this problem I’ll use copy and paste wherever I can, especially if that number has something to do with money.&lt;/p&gt;

&lt;p&gt;The most embarrassing effect is my inability to retain abstract details like names.  I’m not exaggerating to say that when meeting a new person I can remember their name for only a few seconds.  For meetings the key here is to be prepared, if I’ve already studied the invite list I have a better chance to remember as I’m matching faces to names.  In most other situations I simply hope I don’t need to use the person’s name until I’ve had time to look it up and relearn it.&lt;/p&gt;

&lt;p&gt;Reading takes longer than average, writing takes way longer.  Writing documentation, specifications etc is something I have to psych myself up for.  The task this affects me the most often however is reading and replying to emails.  Emails are relentless and I have to put aside a good portion of my day to deal with them.  If an email did not ask me a question and therefore does not require a response, I don’t respond, this saves me a lot of stress.  Otherwise I’ve developed an infamously terse email style, sometimes “Done.” is all that needs to be said.&lt;/p&gt;

&lt;p&gt;In contrast to the one word responses, when asked a technical question that requires a detailed response, I labour over the email often writing a few drafts as I try to get the level of detail correct and convince myself what I’ve written is understandable.&lt;/p&gt;

&lt;p&gt;My dyslexia is primarily a communication problem, my analytical reasoning is good, something to be proud of.  I’m just never sure the information arrives correctly and I’m not sure the messages I deliver are understood.  This is why I agonise over emails.  It’s also why in face to face communication I will initially start quietly absorbing as much information as I can, re-organise that information in my own overly logical order and repeat it back out to ensure I understood it.  Often because I’m not sure I said it correctly I repeat myself but with a slightly different structure.&lt;/p&gt;

&lt;p&gt;My coping mechanism for dealing with dyslexia turns out to be a really useful skill in the business world.  My job is to build applications that support business processes.  This requires really understanding the process, breaking down the sometimes messy analog real world steps into logical, predictable, repeatable, programmable steps we can turn into a digital application.  This comes very naturally to me, it’s the same process I use to assimilate information and I’ve been doing it my entire life.&lt;/p&gt;

&lt;p&gt;It is not original advice to play to your strengths and mitigate your weaknesses.  I strongly believe that being diagnosed with dyslexia has given me an extra advantage in life as I know with some confidence what my strengths are and where I need to take special care.  I’ve used this information to pick a career path that has allowed me to excel.  I know which development areas I need to focus on and have been given expert advice on how to improve.&lt;/p&gt;

&lt;p&gt;I’m not the only person in the DEV community with dyslexia, given the nature of our work/hobby I am willing to bet it’s higher than the 10% average.  Others have written on this &lt;a href="https://dev.to/search?q=dyslexia"&gt;site&lt;/a&gt; about how they cope with dyslexia, I’ve found their stories encouraging and their suggestions useful.  I’m keen to hear your thoughts in the comments, I’m especially eager to swap coping strategies.  The reality is they work for everyone, not just people diagnosed with dyslexia.&lt;/p&gt;

&lt;p&gt;Most importantly if you are worried about a child you think might be struggling with dyslexia, there is no need to worry, dyslexia is increasingly well understood and there is a lot of help available.  Search for &lt;a href="https://www.google.com/search?q=dyslexia+awareness+week"&gt;Dyslexia Awareness Week&lt;/a&gt; to find events that may be happening local to you.  Alternatively schools will know how to proceed.  Besides they are in great company; Jamie Oliver, Keira Knightley, Richard Branson, Whoopi Goldberg, Steve Jobs, Gwen Stefani and Albert Einstein are all people who didn’t let dyslexia stop them from achieving great things.&lt;/p&gt;

</description>
      <category>career</category>
    </item>
    <item>
      <title>Deploy Rails 7 with Docker and Nginx</title>
      <author>Roeland</author>
      <pubDate>Sun, 03 Oct 2021 20:36:52 +0000</pubDate>
      <link>https://dev.to/roelandmoors/deploy-rails-7-with-docker-and-nginx-b11</link>
      <guid>https://dev.to/roelandmoors/deploy-rails-7-with-docker-and-nginx-b11</guid>
      <description>&lt;p&gt;The easiest solution to deploy a Rails application is something like &lt;a href="https://heroku.com"&gt;Heroku&lt;/a&gt; or &lt;a href="https://www.hatchbox.io/"&gt;Hatchbox&lt;/a&gt; or &lt;a href="https://www.digitalocean.com/products/app-platform/"&gt;DigitalOcean Apps&lt;/a&gt;. But for some small projects I like to use my existing VPS. &lt;/p&gt;

&lt;p&gt;I assume you have a VPS with Ubuntu 20.04 and Docker and Nginx installed.&lt;br&gt;
If you use &lt;a href="https://m.do.co/c/238c76f53b4f"&gt;DigitalOcean&lt;/a&gt; you can select the Docker image in the marketplace and add Nginx to it.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#new-rails-7-app"&gt;
  &lt;/a&gt;
  New Rails 7 app
&lt;/h2&gt;

&lt;p&gt;Lets create a new Rails project with &lt;a href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt;, &lt;a href="https://esbuild.github.io/"&gt;esbuild&lt;/a&gt; and &lt;a href="https://tailwindcss.com/"&gt;Tailwind&lt;/a&gt; on your local machine:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;rails new demo &lt;span class="nt"&gt;-d&lt;/span&gt; postgresql &lt;span class="nt"&gt;--edge&lt;/span&gt; &lt;span class="nt"&gt;-j&lt;/span&gt; esbuild &lt;span class="nt"&gt;--css&lt;/span&gt; tailwind
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Adjust you config/database.yml with the settings for your database.&lt;/p&gt;

&lt;p&gt;Scaffold a simple table:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bin/rails g scaffold Book name:string
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then create your database and tables:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bin/rails db:create
bin/rails db:migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can create a root path in routes.rb:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="s2"&gt;"books#index"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can start the website with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bin/dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#docker"&gt;
  &lt;/a&gt;
  Docker
&lt;/h2&gt;

&lt;p&gt;Let's go to the VPS. I transfer my code with Github.&lt;br&gt;&lt;br&gt;
For large projects you would probably use CI, but this is just a small project.&lt;/p&gt;

&lt;p&gt;I prefer to create a small shell script to do the build steps and start rails.&lt;br&gt;
This is the content of &lt;code&gt;bin/prod&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/usr/bin/env bash&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;RAILS_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;production
bundle &lt;span class="nb"&gt;install
&lt;/span&gt;yarn &lt;span class="nb"&gt;install
&lt;/span&gt;yarn build
yarn build:css
bin/rails assets:precompile
bin/rails server &lt;span class="nt"&gt;-b&lt;/span&gt; 0.0.0.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's make it executable with: &lt;code&gt;chmod a+x bin/prod&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now create a Dockerfile:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; ruby:3&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;apt-get update &lt;span class="nt"&gt;-qq&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-y&lt;/span&gt; nodejs npm postgresql-client
&lt;span class="k"&gt;RUN &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; yarn
&lt;span class="k"&gt;RUN &lt;/span&gt;gem update &lt;span class="nt"&gt;--system&lt;/span&gt;

&lt;span class="c"&gt;# use a global path instead of vendor&lt;/span&gt;
&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; GEM_HOME="/usr/local/bundle"&lt;/span&gt;
&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; BUNDLE_PATH="$GEM_HOME"&lt;/span&gt;
&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; BUNDLE_SILENCE_ROOT_WARNING=1&lt;/span&gt;
&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; BUNDLE_APP_CONFIG="$GEM_HOME"&lt;/span&gt;
&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; PATH="$GEM_HOME/bin:$BUNDLE_PATH/gems/bin:${PATH}"&lt;/span&gt;

&lt;span class="c"&gt;# make 'docker logs' work&lt;/span&gt;
&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; RAILS_LOG_TO_STDOUT=true&lt;/span&gt;

&lt;span class="c"&gt;# copy the source&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /app&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . /app&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt; tmp/pids/server.pid
&lt;span class="k"&gt;RUN &lt;/span&gt;bundle &lt;span class="nb"&gt;install&lt;/span&gt;

&lt;span class="c"&gt;# build and start&lt;/span&gt;
&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["bin/prod"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The master.key file is not in git for safety. &lt;br&gt;
There are several solutions for this, but I just recreate the file on the server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"30acf9tralalalalala7af75eb7"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; config/master.key
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now it's time to create the docker image.&lt;br&gt;&lt;br&gt;
Run this inside the root folder of the demo project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker build &lt;span class="nt"&gt;-t&lt;/span&gt; demo:0.0.1 &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should now see the image with &lt;code&gt;docker images&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Lets run it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; 3001:3000 &lt;span class="nt"&gt;--name&lt;/span&gt; demo &lt;span class="nt"&gt;--env&lt;/span&gt; &lt;span class="nv"&gt;RAILS_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;production &lt;span class="nt"&gt;-v&lt;/span&gt; ~/demo:/app demo:0.0.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The docker container is exposing port 3000, but I map that to 3001 since I already have an other website running on port 3000.&lt;/p&gt;

&lt;p&gt;You should probably have a seperate Postgres server, but I also run that inside a Docker.&lt;br&gt;
To allow access to this container I create a seperate network and add the two containers in it.&lt;br&gt;
In database.yml you can than use postgres_container as host.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker network create demo_network
docker network connect demo_network demo
docker network connect demo_network postgres_container
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To create the database and tables:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker &lt;span class="nb"&gt;exec &lt;/span&gt;demo bin/rails db:create
docker &lt;span class="nb"&gt;exec &lt;/span&gt;demo bin/rails db:migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In case of errors you can use &lt;code&gt;docker logs demo&lt;/code&gt; to find the error.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nginx"&gt;
  &lt;/a&gt;
  Nginx
&lt;/h2&gt;

&lt;p&gt;I use Nginx as a proxy to the different Rails projects and to load the assets directly.&lt;br&gt;
To create a new configuration:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;vi /etc/nginx/sites-available/demo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this is the content: (you need to change the domain and paths)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight nginx"&gt;&lt;code&gt;&lt;span class="k"&gt;upstream&lt;/span&gt; &lt;span class="s"&gt;demo&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;server&lt;/span&gt; &lt;span class="nf"&gt;localhost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3001&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;demo.example.org&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;root&lt;/span&gt; &lt;span class="n"&gt;/home/user/demo/public&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;access_log&lt;/span&gt; &lt;span class="n"&gt;/home/user/demo/log/nginx.access.log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;error_log&lt;/span&gt; &lt;span class="n"&gt;/home/user/demo/log/nginx.error.log&lt;/span&gt; &lt;span class="s"&gt;info&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;^~&lt;/span&gt; &lt;span class="n"&gt;/assets/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;gzip_static&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;expires&lt;/span&gt; &lt;span class="s"&gt;max&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;Cache-Control&lt;/span&gt; &lt;span class="s"&gt;public&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kn"&gt;try_files&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt;&lt;span class="n"&gt;/index.html&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="s"&gt;@demo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;@demo&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt; &lt;span class="s"&gt;X-Forwarded-For&lt;/span&gt; &lt;span class="nv"&gt;$proxy_add_x_forwarded_for&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt; &lt;span class="s"&gt;Host&lt;/span&gt; &lt;span class="nv"&gt;$http_host&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;  &lt;span class="s"&gt;X-Forwarded-Proto&lt;/span&gt; &lt;span class="nv"&gt;$scheme&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;  &lt;span class="s"&gt;X-Forwarded-Ssl&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;# Optional&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;  &lt;span class="s"&gt;X-Forwarded-Port&lt;/span&gt; &lt;span class="nv"&gt;$server_port&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;  &lt;span class="s"&gt;X-Forwarded-Host&lt;/span&gt; &lt;span class="nv"&gt;$host&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kn"&gt;proxy_redirect&lt;/span&gt; &lt;span class="no"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kn"&gt;proxy_pass&lt;/span&gt; &lt;span class="s"&gt;http://demo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kn"&gt;error_page&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt; &lt;span class="mi"&gt;502&lt;/span&gt; &lt;span class="mi"&gt;503&lt;/span&gt; &lt;span class="mi"&gt;504&lt;/span&gt; &lt;span class="n"&gt;/500.html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;client_max_body_size&lt;/span&gt; &lt;span class="mi"&gt;100M&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;keepalive_timeout&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Enable it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo ln&lt;/span&gt; &lt;span class="nt"&gt;-s&lt;/span&gt; /etc/nginx/sites-available/demo /etc/nginx/sites-enabled/demo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Test the configuration:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;nginx &lt;span class="nt"&gt;-t&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And restart Nginx:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl restart nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should now have a working website.&lt;br&gt;
It's a good idea to add Let's Encrypt with the certbot tool.&lt;br&gt;
This is explained &lt;a href="https://certbot.eff.org/lets-encrypt/ubuntufocal-nginx"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>rails</category>
      <category>docker</category>
      <category>nginx</category>
      <category>devops</category>
    </item>
  </channel>
</rss>
