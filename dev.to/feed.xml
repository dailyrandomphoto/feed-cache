<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>The complete DevOps roadmap  🚀</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Sat, 19 Jun 2021 15:38:29 +0000</pubDate>
      <link>https://dev.to/ankit01oss/the-complete-devops-roadmap-28n1</link>
      <guid>https://dev.to/ankit01oss/the-complete-devops-roadmap-28n1</guid>
      <description>&lt;p&gt;Hi there,&lt;/p&gt;

&lt;p&gt;This is Ankit, your friendly DevOps content curator. I read a lot of articles about DevOps, distributed systems, performance monitoring, etc. and then share key takeaways from those articles so that you can stay updated and learn a few things quickly.🙂&lt;/p&gt;

&lt;p&gt;DevOps for any organization is a cultural shift. It's not just about tools and technologies but a continuous practice needed for building and maintaining scalable web applications.&lt;/p&gt;

&lt;p&gt;Today I want to share an amazing resource useful for anyone in the journey of becoming an Ops Engineer. This &lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Github project&lt;/a&gt; has 163k stars, showing how popular it is. It has roadmaps on becoming a frontend, backend &amp;amp; DevOps engineer.&lt;/p&gt;

&lt;p&gt;Link to the GitHub repo👇&lt;br&gt;
&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Developer roadmaps&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-2021-devops-roadmap"&gt;
  &lt;/a&gt;
  The 2021 DevOps roadmap
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nASeIddu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hq7ryh40b1fpvf2zmuf1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nASeIddu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hq7ryh40b1fpvf2zmuf1.png" alt="DevOps roadmap"&gt;&lt;/a&gt;Click to enlarge&lt;/p&gt;

&lt;p&gt;Now let's go through the steps of the roadmap one by one.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#1-learning-a-programming-language"&gt;
  &lt;/a&gt;
  1. Learning a programming language
&lt;/h3&gt;

&lt;p&gt;You need to get a good grasp of a programming language. It doesn't matter which one, but it's needed for writing automation code. Automation is a key part of DevOps. You can learn Python, Java, Ruby, Golang etc.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#2-understand-different-os-concepts"&gt;
  &lt;/a&gt;
  2. Understand different OS concepts
&lt;/h3&gt;

&lt;p&gt;As suggested in the roadmap, you need to learn about process management, threads &amp;amp; concurrency, sockets, I/O management, virtualization, memory system, etc.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#3-learn-to-live-in-terminal"&gt;
  &lt;/a&gt;
  3. Learn to Live in terminal
&lt;/h3&gt;

&lt;p&gt;Terminal commands are essential for a DevOps engineer, especially if you are working on linux. You need to learn commands for process monitoring, text manipulation, system performance, etc. When you practice these commands, you can become a master at shell scripting.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#4-network-security-amp-protocols"&gt;
  &lt;/a&gt;
  4. Network, Security &amp;amp; Protocols
&lt;/h3&gt;

&lt;p&gt;You need to be familiar with various types of protocols which play a major role in communicating with different devices across the network like TCP/IP, HTTP, HTTPS, SMTP, FTP etc. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#5-what-is-and-how-to-setup"&gt;
  &lt;/a&gt;
  5. What is and how to setup
&lt;/h3&gt;

&lt;p&gt;In general, a DevOps engineer should know how to set up a web server like IIS, Nginx, Apache and Tomcat. They should also know about Caching Server, Load balancer, Reverse Proxy, and Firewall, etc.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#6-learn-infrastructure-as-code"&gt;
  &lt;/a&gt;
  6. Learn Infrastructure as code
&lt;/h3&gt;

&lt;p&gt;This is one of the most critical component in the learning path of a DevOps engineer. You need to learn about app containerization and have thorough understand of container tools like Docker and Kubernetes. Configuration management tools like Ansible, Chef, Salt &amp;amp; Puppet. Other areas include container orchestration and infrastructure provisioning.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#7-learn-some-continuous-integration-and-delivery-cicd-tools"&gt;
  &lt;/a&gt;
  7. Learn some Continuous Integration and Delivery (CI/CD) tools
&lt;/h3&gt;

&lt;p&gt;Continuous Integration/Continuous Deployment is now a core part of setting a DevOps culture. So you should get familiar with CI/CD tools like Gitlab, Jenkins, Github actions etc.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#8-learn-to-monitor-software-and-infrastructure"&gt;
  &lt;/a&gt;
  8. Learn to monitor software and infrastructure
&lt;/h3&gt;

&lt;p&gt;When you have thousands of services running, it's important to make sure that the system is running in fine health. Both your infrastructure and application should be continuously monitored. Tools like &lt;a href="https://github.com/SigNoz/signoz"&gt;Signoz&lt;/a&gt; can help you in setting up a robust monitoring system for your applications.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#9-learn-about-cloud-providers"&gt;
  &lt;/a&gt;
  9. Learn about Cloud Providers
&lt;/h3&gt;

&lt;p&gt;Most of the apps today are built as cloud-native. So you need to make yourself familiar with major cloud providers. AWS, Azure and Google Cloud are the leading players and they provide free courses about their tools too.&lt;/p&gt;



&lt;p&gt;There is lot to learn in this field with constantly changing landscape. But with a good foundation and practice, you can build a solid career in this field which is growing very quickly.&lt;/p&gt;



&lt;p&gt;Currently building &lt;a href="https://github.com/SigNoz/signoz"&gt;Signoz&lt;/a&gt; - an open-source APM &amp;amp; observability tool 💙&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/SigNoz"&gt;
        SigNoz
      &lt;/a&gt; / &lt;a href="https://github.com/SigNoz/signoz"&gt;
        signoz
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      SigNoz helps developers monitor their applications &amp;amp; troubleshoot problems, an open-source alternative to DataDog, NewRelic, etc. 🔥 🖥
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667"&gt;&lt;img src="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667" alt="SigNoz-logo" width="240"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;p&gt;Monitor your applications and troubleshoot problems in your deployed applications, an open-source alternative to DataDog, New Relic, etc.&lt;/p&gt;
&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;img alt="License" src="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;img alt="Downloads" src="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;img alt="GitHub issues" src="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;/a&gt; 
    &lt;a href="https://twitter.com/intent/tweet?text=Monitor%20your%20applications%20and%20troubleshoot%20problems%20with%20SigNoz,%20an%20open-source%20alternative%20to%20DataDog,%20NewRelic.&amp;amp;url=https://signoz.io/&amp;amp;via=SigNozHQ&amp;amp;hashtags=opensource,signoz,observability" rel="nofollow"&gt; 
        &lt;img alt="tweet" src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c"&gt; &lt;/a&gt; 
&lt;/p&gt;

&lt;p&gt;SigNoz helps developers monitor applications and troubleshoot problems in their deployed applications. SigNoz uses distributed tracing to gain visibility into your software stack.&lt;/p&gt;

&lt;p&gt;👉 You can see metrics like p99 latency, error rates for your services, external API calls and individual end points.&lt;/p&gt;

&lt;p&gt;👉 You can find the root cause of the problem by going to the exact traces which are causing the problem and see detailed flamegraphs of individual request traces.&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/863718997bae95953d22cbd6c1001d4ec23695aad4244d7de596660f33833496/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343033322f7369676e6f7a2d696d616765732f73637265656e7a792d313631383930343031333732395f636c737376792e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/863718997bae95953d22cbd6c1001d4ec23695aad4244d7de596660f33833496/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343033322f7369676e6f7a2d696d616765732f73637265656e7a792d313631383930343031333732395f636c737376792e706e67" alt="SigNoz Feature"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
👇 Features:&lt;/h3&gt;


&lt;ul&gt;
&lt;li&gt;Application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/li&gt;
&lt;li&gt;Slowest endpoints in your application&lt;/li&gt;
&lt;li&gt;See exact request trace to figure out issues in downstream services, slow DB queries, call to 3rd party services like payment gateways, etc&lt;/li&gt;
&lt;li&gt;Filter traces by service name, operation, latency, error, tags/annotations.&lt;/li&gt;
&lt;li&gt;Aggregate metrics on filtered traces. Eg, you can get error…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/SigNoz/signoz"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


</description>
      <category>devops</category>
      <category>docker</category>
      <category>cloud</category>
      <category>aws</category>
    </item>
    <item>
      <title>Securing Azure Logic apps with Private Endpoints</title>
      <author>Marcel.L</author>
      <pubDate>Sat, 19 Jun 2021 15:11:43 +0000</pubDate>
      <link>https://dev.to/pwd9000/securing-azure-logic-apps-with-private-endpoints-4c3f</link>
      <guid>https://dev.to/pwd9000/securing-azure-logic-apps-with-private-endpoints-4c3f</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-an-azure-logic-app"&gt;
  &lt;/a&gt;
  What is an Azure Logic app?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/logic-apps/logic-apps-overview"&gt;Azure Logic Apps&lt;/a&gt; is a cloud-based platform for creating and running automated workflows that integrate your apps, data, services, and systems. With this platform, you can quickly develop highly scalable integration solutions for your enterprise and business-to-business (B2B) scenarios. As a member of Azure Integration Services, Logic Apps simplifies the way that you connect legacy, modern, and cutting-edge systems across cloud, on premises, and hybrid environments.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-azure-private-link-private-endpoint"&gt;
  &lt;/a&gt;
  What is Azure Private Link (Private Endpoint)?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/private-link/private-link-overview"&gt;Azure Private Link&lt;/a&gt; (Private Endpoint) allows you to access Azure PaaS services over a Private IP address within the VNet. The PaaS resource gets a new private IP via a virtual network interface (NIC) on your Virtual Network (VNET) attached to the PaaS resource or service, making the resource truly an internal &lt;strong&gt;private&lt;/strong&gt; resource to your virtual network. When you send traffic to the resource that has been private endpointed, it will always ensure traffic stays within your VNet boundary.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GaJyFeEs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/private-link.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GaJyFeEs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/private-link.png" alt="private-link"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-new-in-azure-logic-apps"&gt;
  &lt;/a&gt;
  What's new in Azure Logic apps?
&lt;/h2&gt;

&lt;p&gt;There has been some major architectural changes and improvements made in recent days to Azure Logic apps (multi-tenant implementation), especially the new logic apps runtime which is a re-hostable containerised, single-tenant runtime, which is built on top of the &lt;strong&gt;Azure Functions runtime&lt;/strong&gt;, adding some excellent new features that we can now utilise in our logic apps. Such as enabling &lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview"&gt;managed service identity (MSI)&lt;/a&gt;, cross-platform support, local development and testing using VSCode, enabling new advanced networking features such as &lt;strong&gt;private endpoints&lt;/strong&gt; which we will focus on in todays tutorial or even running our logic apps in a dedicated compute resource in Azure, Docker or Kubernetes environments.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-do-we-need"&gt;
  &lt;/a&gt;
  What do we need?
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Azure Virtual Network:&lt;/strong&gt; We will need either a new or an existing VNET in which we can attach our logic app private endpoint interface.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Azure Private DNS Zone:&lt;/strong&gt; For this tutorial we will also create a Private DNS zone to host our &lt;a href="https://docs.microsoft.com/en-us/azure/private-link/private-endpoint-dns#azure-services-dns-zone-configuration"&gt;private endpoint DNS Configuration&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Azure Logic App:&lt;/strong&gt; We will need to create the new &lt;strong&gt;single-tenant&lt;/strong&gt; logic app as described above.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Private Endpoint:&lt;/strong&gt; We will use a private endpoint to connect our logic app to our VNET.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#creating-an-azure-virtual-network-vnet"&gt;
  &lt;/a&gt;
  Creating an Azure Virtual Network (VNET)?
&lt;/h2&gt;

&lt;p&gt;For this section I will be using Azure CLI in a powershell console. First we will log into Azure by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;az&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we will create a &lt;strong&gt;resource group&lt;/strong&gt;, and a &lt;strong&gt;VNET&lt;/strong&gt; by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="c"&gt;# variables.&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$resourceGroupName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"MyLogicAppRG"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$vnetName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"LogicAppNet"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$subnetName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"LogicAppSub"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$region&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"uksouth"&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Create a resource resourceGroupName&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;az&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$resourceGroupName&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--location&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$region&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Create a new Vnet&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;az&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;network&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;vnet&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;--name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$vnetName&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;--resource-group&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$resourceGroupName&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;--address-prefixes&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;10.2.0.0/16&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;--subnet-name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$subnetName&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;--subnet-prefixes&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;10.2.0.0/24&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-an-azure-private-dns-zone"&gt;
  &lt;/a&gt;
  Creating an Azure Private DNS Zone?
&lt;/h2&gt;

&lt;p&gt;We will need to register our private endpoint in DNS so for this step we will create a Private DNS Zone and link the &lt;strong&gt;Azure services DNS Zone configuration&lt;/strong&gt; for &lt;strong&gt;azurewebsites.net&lt;/strong&gt; because our new logic app runtime is within an &lt;strong&gt;App Service Plan (ASP)&lt;/strong&gt; we will configure the zone as &lt;code&gt;privatelink.azurewebsites.net&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To see more detailed information on DNS configurations for private endpoints please see &lt;a href="https://github.com/dmauser/PrivateLink/tree/master/DNS-Integration-Scenarios"&gt;DNS Integration Scenarios&lt;/a&gt; for additional information, as well as &lt;a href="https://docs.microsoft.com/en-us/azure/private-link/private-endpoint-dns#azure-services-dns-zone-configuration"&gt;Private link DNS Zone configuration&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next we will run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Create Private DNS Zone&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;az&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;network&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;private-dns&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;zone&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;--resource-group&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$resourceGroupName&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;--name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"privatelink.azurewebsites.net"&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Link Private DNS Zone with VNET&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;az&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;network&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;private-dns&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;vnet&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;--resource-group&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$resourceGroupName&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;--name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$vnetName&lt;/span&gt;&lt;span class="s2"&gt;-DNS-Link"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;--zone-name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"privatelink.azurewebsites.net"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;--virtual-network&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$vnetName&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;--registration-enabled&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"true"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--27_o42it--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/private-dns.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--27_o42it--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/private-dns.png" alt="private-dns"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-an-azure-logic-app-singletenant"&gt;
  &lt;/a&gt;
  Creating an Azure Logic app (Single-tenant)?
&lt;/h2&gt;

&lt;p&gt;Now that we have everything in place we will create our logic app. Navigate to the Azure portal and go to the resource group we created and create a new &lt;strong&gt;Logic app (Standard)&lt;/strong&gt; resource.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--73N5IrGa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/CreateLogicApp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--73N5IrGa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/CreateLogicApp.png" alt="CreateLogicApp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Under the &lt;strong&gt;Basics&lt;/strong&gt; blade, add the following &lt;strong&gt;Instance Details:&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Type&lt;/td&gt;
&lt;td&gt;Standard (Preview)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Logic App name&lt;/td&gt;
&lt;td&gt;{Name}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Publish&lt;/td&gt;
&lt;td&gt;Workflow&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Region&lt;/td&gt;
&lt;td&gt;{Region}&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--owshFP0B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/CreateLogicAppBasics.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--owshFP0B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/CreateLogicAppBasics.png" alt="CreateLogicAppBasics"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Under the &lt;strong&gt;Hosting&lt;/strong&gt; blade, add the following &lt;strong&gt;Plan:&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Plan type&lt;/td&gt;
&lt;td&gt;Workflow Standard&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Windows Plan&lt;/td&gt;
&lt;td&gt;{ASP - App Service Plan}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sku and size&lt;/td&gt;
&lt;td&gt;{SKU}&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gLQRTpFU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/CreateLogicAppHosting.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gLQRTpFU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/CreateLogicAppHosting.png" alt="CreateLogicAppHosting"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Move to the next blade &lt;strong&gt;Monitoring&lt;/strong&gt; and enable/disable &lt;strong&gt;Application Insights&lt;/strong&gt; and then add any &lt;strong&gt;Tags&lt;/strong&gt;. Click on &lt;strong&gt;Review + create&lt;/strong&gt; and create the new logic app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-private-endpoint"&gt;
  &lt;/a&gt;
  Creating the Private Endpoint?
&lt;/h2&gt;

&lt;p&gt;Before we continue to our last step, also note that our newly created Logic App has already been enabled with a &lt;code&gt;system assigned managed identity&lt;/code&gt;. Pretty neat!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jc6NQ3jl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/msi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jc6NQ3jl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/msi.png" alt="MSI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next we will create our private endpoint. Select the &lt;strong&gt;Networking&lt;/strong&gt; blade and click on &lt;strong&gt;Private endpoints&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NIvFicp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/bladeprivateendpoint.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NIvFicp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/bladeprivateendpoint.png" alt="bladeprivateendpoint"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You will see that our inbound address to access our logic app is currently configured using a &lt;code&gt;public endpoint&lt;/code&gt; (Public IP address).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I1vZ1hX4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/pubip.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I1vZ1hX4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/pubip.png" alt="pubip"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Under the &lt;strong&gt;Private Endpoint connections&lt;/strong&gt; blade, click &lt;strong&gt;+ Add&lt;/strong&gt; and add the following:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Name&lt;/td&gt;
&lt;td&gt;{Name private endpoint}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Subscription&lt;/td&gt;
&lt;td&gt;{Subscription}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Virtual Network&lt;/td&gt;
&lt;td&gt;{Virtual Network Name}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Subnet&lt;/td&gt;
&lt;td&gt;{Subnet Name}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Integrate with private DNS Zone&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q1NFuEC2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/peconfig.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q1NFuEC2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/peconfig.png" alt="peconfig"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You will now see that our inbound address to access our logic app has changed and is configured to use our &lt;code&gt;private endpoint&lt;/code&gt; (Private IP address from our VNET).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xIpwaoqT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/privip.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xIpwaoqT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/privip.png" alt="privip"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make a note of the &lt;strong&gt;private IP&lt;/strong&gt; and navigate to the Azure Private DNS zone we created earlier. Click on &lt;strong&gt;+ Record set&lt;/strong&gt; and add the following:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Name&lt;/td&gt;
&lt;td&gt;{Name of Logic App}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Type&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TTL&lt;/td&gt;
&lt;td&gt;1 Hour&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IP address&lt;/td&gt;
&lt;td&gt;{Private Inbound IP of Logic App}&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UqdWzE-M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/privipconfig.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UqdWzE-M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/privipconfig.png" alt="privipconfig"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That is it! We have now secured our logic app to be a completely internal resource keeping it within our network boundaries as if it was an internally hosted resource inside of our Virtual Network.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JmyyqwD2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/secdiag.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JmyyqwD2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/secdiag.png" alt="secdiag"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#testing-our-logic-app"&gt;
  &lt;/a&gt;
  Testing our Logic App?
&lt;/h2&gt;

&lt;p&gt;Let's test out our Logic App and see what happens if we try to access it from an external source vs. a source from our VNET such as a Virtual machine running inside of our VNET.&lt;/p&gt;

&lt;p&gt;HTTP POST Url from an external source:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tptN5IEg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/external.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tptN5IEg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/external.png" alt="external"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;HTTP POST Url from an internal Virtual Machine running inside of our VNET:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v4L_kxVi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/internal.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v4L_kxVi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Azure-Private-Endpoint-Logic-App/assets/internal.png" alt="internal"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope you have enjoyed this post and have learned something new. You can also find the code samples used in this blog post on my &lt;a href="https://github.com/Pwd9000-ML/blog-devto/tree/master/posts/Azure-Private-Endpoint-Logic-App/code"&gt;Github&lt;/a&gt;. ❤️&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#author"&gt;
  &lt;/a&gt;
  &lt;em&gt;Author&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;Marcel.L - &lt;a href="mailto:pwd9000@hotmail.co.uk"&gt;pwd9000@hotmail.co.uk&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>azure</category>
      <category>productivity</category>
      <category>security</category>
    </item>
    <item>
      <title>What keeps you motivated to write?</title>
      <author>Jean-Michel Fayard 🇫🇷🇩🇪🇬🇧🇪🇸🇨🇴</author>
      <pubDate>Sat, 19 Jun 2021 14:20:10 +0000</pubDate>
      <link>https://dev.to/jmfayard/what-keeps-you-motivated-to-write-2jfh</link>
      <guid>https://dev.to/jmfayard/what-keeps-you-motivated-to-write-2jfh</guid>
      <description>&lt;p&gt;I struggle to keep writing right now, so I wondered what strategies do you use to keep writing when that happens&lt;/p&gt;

</description>
      <category>writing</category>
      <category>discuss</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>Sublime Text 3 (Build 3211) license key</title>
      <author>Rajib Ahmed</author>
      <pubDate>Sat, 19 Jun 2021 14:18:05 +0000</pubDate>
      <link>https://dev.to/rajibdpi/sublime-text-3-build-3211-license-key-o5b</link>
      <guid>https://dev.to/rajibdpi/sublime-text-3-build-3211-license-key-o5b</guid>
      <description>&lt;h2&gt;
  &lt;a href="#sublime-text-3-build-3211-license-key"&gt;
  &lt;/a&gt;
  Sublime Text 3 (Build 3211) license key
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The latest version of &lt;strong&gt;Sublime Text 3 (Build 3211)&lt;/strong&gt; 100% working License Key. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#downlod-sublime-text-3-from-their-official-website"&gt;
  &lt;/a&gt;
  Downlod Sublime Text 3 from their Official Website:
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#pointright-for-windows"&gt;
  &lt;/a&gt;
  👉 For Windows
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;a href="https://download.sublimetext.com/Sublime%20Text%20Build%203211%20Setup.exe"&gt;🔗 Download Sublime Text 3 x86bit&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;&lt;em&gt;&lt;a href="https://download.sublimetext.com/Sublime%20Text%20Build%203211%20x64%20Setup.exe"&gt;🔗 Download Sublime Text 3 x64bit&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#pointrightfor-mac-os"&gt;
  &lt;/a&gt;
  👉For Mac OS
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;a href="https://download.sublimetext.com/Sublime%20Text%20Build%203211%20Setup.exe"&gt;🔗 Download Sublime Text 3 x86bit&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;&lt;em&gt;&lt;a href="https://download.sublimetext.com/Sublime%20Text%20Build%203211%20x64%20Setup.exe"&gt;🔗 Download Sublime Text 3 x64bit&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#pointright-for-linux"&gt;
  &lt;/a&gt;
  👉 For Linux&lt;br&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Ubuntu/Debian&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
   &lt;strong&gt;&lt;em&gt;&lt;a href="https://download.sublimetext.com/sublime-text_build-3211_amd64.deb"&gt;🔗 Download Sublime Text 3 64bit .Deb&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fedora/Redhat/CentOS&lt;/strong&gt; &lt;br&gt;&lt;br&gt;
    &lt;strong&gt;&lt;em&gt;&lt;a href="https://download.sublimetext.com/sublime-text-3211-1.x86_64.rpm"&gt;🔗 Download Sublime Text 3 64bit .rpm&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Other Linux&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;&lt;em&gt;&lt;a href="https://download.sublimetext.com/sublime-text-3211-1-x86_64.pkg.tar.xz"&gt;🔗 Download Sublime Text 3 64bit .pkg.tar.xz&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;&lt;em&gt;&lt;a href="https://download.sublimetext.com/sublime_text_3_build_3211_x64.tar.bz2"&gt;🔗 Download Sublime Text 3 64bit .tar.bz2&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;&lt;em&gt;&lt;a href="https://download.sublimetext.com/sublime_text_3_build_3211_x32.tar.bz2"&gt;🔗 Download Sublime Text 3 32bit .tar.bz2&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#license-key"&gt;
  &lt;/a&gt;
  License Key
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Copy&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;paste&lt;/em&gt;&lt;/strong&gt; the below license serial from beginning to the end into your Sublime Text 3 license key area.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;----- BEGIN LICENSE -----
Member J2TeaM
Single User License
EA7E-1011316
D7DA350E 1B8B0760 972F8B60 F3E64036
B9B4E234 F356F38F 0AD1E3B7 0E9C5FAD
FA0A2ABE 25F65BD8 D51458E5 3923CE80
87428428 79079A01 AA69F319 A1AF29A4
A684C2DC 0B1583D4 19CBD290 217618CD
5653E0A0 BACE3948 BB2EE45E 422D2C87
DD9AF44B 99C49590 D2DBDEE1 75860FD2
8C8BB2AD B2ECE5A4 EFC08AF2 25A9B864
------ END LICENSE ------
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#finally-enjoy-the-sublime-text-3-build-3211-with-licensed-versionsmile"&gt;
  &lt;/a&gt;
  Finally enjoy the &lt;strong&gt;Sublime Text 3 (Build 3211)&lt;/strong&gt; with Licensed version😄
&lt;/h4&gt;

</description>
      <category>sublime</category>
      <category>sublimetext3</category>
      <category>license</category>
      <category>download</category>
    </item>
    <item>
      <title>Beginner JavaScript - 6 - Operators </title>
      <author>The Nerdy Dev</author>
      <pubDate>Sat, 19 Jun 2021 13:51:04 +0000</pubDate>
      <link>https://dev.to/thenerdydev/beginner-javascript-6-operators-2o8e</link>
      <guid>https://dev.to/thenerdydev/beginner-javascript-6-operators-2o8e</guid>
      <description>&lt;p&gt;Hey everyone 👋🏻,&lt;/p&gt;

&lt;p&gt;In this article, let us discuss about Operators in JavaScript. This is the sixth part of my &lt;strong&gt;Beginner JavaScript Series&lt;/strong&gt; on Dev.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#operators-in-javascript"&gt;
  &lt;/a&gt;
  Operators in JavaScript
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s2YUoN3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2wun0dogec9celuxydp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s2YUoN3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2wun0dogec9celuxydp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-operators-"&gt;
  &lt;/a&gt;
  What are operators ?
&lt;/h3&gt;

&lt;p&gt;Just like other programming languages, we also have operators in JavaScript. An operator performs some operation on single or multiple operands (data values) and produces a result. For example 3 * 2, where *  sign is an operator and 3 is left operand and 2 is right operand. * operator multiplies two numeric values and produces a result which is 6 in this case.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#categories-of-operators-in-javascript"&gt;
  &lt;/a&gt;
  Categories of operators in JavaScript
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Arithmetic Operators &lt;/li&gt;
&lt;li&gt;Comparison Operators &lt;/li&gt;
&lt;li&gt;Logical Operators &lt;/li&gt;
&lt;li&gt;Assignment Operators &lt;/li&gt;
&lt;li&gt;Conditional Operators &lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#arithmetic-operators"&gt;
  &lt;/a&gt;
  Arithmetic Operators
&lt;/h3&gt;

&lt;p&gt;Arithmetic operators are used to perform mathematical operations between numeric operands&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+   Adds two numeric operands.
-   Subtract right operand from left operand
*   Multiply two numeric operands.
/   Divide left operand by right operand.
%   Modulus operator. Returns remainder of two 
        operands.
++  Increment operator. Increase operand value by 
        one.
--  Decrement operator. Decrease value by one.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aMW2z-7A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/caphw670qr44xclnighx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aMW2z-7A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/caphw670qr44xclnighx.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;+ operator performs concatenation operation when one of the operands is of string type.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--22Mbi6NP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ovfsqwoi1peclsjd7d3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--22Mbi6NP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ovfsqwoi1peclsjd7d3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#comparison-operators"&gt;
  &lt;/a&gt;
  Comparison Operators
&lt;/h3&gt;

&lt;p&gt;Comparison Operators are those operators that compare two operands and return Boolean value true or false.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;==  Compares the equality of two operands without considering 
        type.
=== Compares equality of two operands with type.
!=  Compares inequality of two operands.
&amp;gt;   Checks whether left side value is greater than right side 
        value. If yes then returns true otherwise false.
&amp;lt;   Checks whether left operand is less than right operand. If 
        yes then returns true otherwise false.
&amp;gt;=  Checks whether left operand is greater than or equal to 
        right operand. If yes then returns true otherwise false.
&amp;lt;=  Checks whether left operand is less than or equal to right 
        operand. If yes then returns true otherwise false.

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h0Uo30D6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xqe35t23iev2wualopiz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h0Uo30D6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xqe35t23iev2wualopiz.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#logical-operators"&gt;
  &lt;/a&gt;
  Logical Operators
&lt;/h3&gt;

&lt;p&gt;Logical operators are used to combine two or more conditions. In JavaScript, we have the following logical operators.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;amp;&amp;amp;  &amp;amp;&amp;amp; is known as AND operator. It checks whether two 
        operands are non-zero (0, false, undefined, null or "" are 
        considered as zero), if yes then returns 1 otherwise 0.
||  || is known as OR operator. It checks whether any one of 
        the two operands is non-zero (0, false, undefined, null or 
        "" is considered as zero).
!   ! is known as NOT operator. It reverses the boolean result 
        of the operand (or condition)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n-sKtrZh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eof8dqjhm43j7tw8hgs6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n-sKtrZh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eof8dqjhm43j7tw8hgs6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#assignment-operators"&gt;
  &lt;/a&gt;
  Assignment Operators
&lt;/h3&gt;

&lt;p&gt;In JavaScript, we have assignment operators to assign values to variables. Let us go over them.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;=   Assigns right operand value to left operand.
+=  Sums up left and right operand values and assign the 
        result to the left operand.
-=  Subtract right operand value from left operand value and 
        assign the result to the left operand.
*=  Multiply left and right operand values and assign the 
        result to the left operand.
/=  Divide left operand value by right operand value and 
        assign the result to the left operand.
%=  Get the modulus of left operand divide by right operand 
        and assign resulted modulus to the left operand.

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BMaucztK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iahb0ibepvxvx8q1wx74.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BMaucztK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iahb0ibepvxvx8q1wx74.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#ternary-operators"&gt;
  &lt;/a&gt;
  Ternary Operators
&lt;/h3&gt;

&lt;p&gt;JavaScript includes special operator called ternary operator :? that assigns a value to a variable based on some condition. This is like short form of if-else condition.&lt;/p&gt;

&lt;p&gt;Ternary operator starts with conditional expression followed by ? operator. Second part ( after ? and before : operator) will be executed if condition turns out to be true. If condition becomes false then third part (after :) will be executed.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;some_variable&amp;gt; = &amp;lt;some_condition&amp;gt; ? &amp;lt;some_value_based_on_some_expression&amp;gt; : &amp;lt;some_other_value_based_on_some_expression&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZCGc6c-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6r4vuaxu0e7qvcu1m8rc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZCGc6c-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6r4vuaxu0e7qvcu1m8rc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check my video on &lt;strong&gt;Operators in JavaScript&lt;/strong&gt; to get more understanding on these: &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/h4NRGsI1Aro"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;So this is it for this one.&lt;/p&gt;

&lt;p&gt;If you are looking to learn Web Development, I have curated a &lt;strong&gt;FREE&lt;/strong&gt; course for you on my YouTube Channel, check the below article :&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev ・ Apr 28 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;p&gt;Spare 2 Hours ?  If so, utilize them by creating these &lt;strong&gt;10 JavaScript Projects in under 2 Hours&lt;/strong&gt; &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/10-javascript-projects-in-2-hours-3p1c" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;10 JavaScript Projects in 2 Hours&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev ・ Oct 26 '20 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;👉🏻 Follow me on Twitter : &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;👉🏻 Check out my YouTube Channel : &lt;a href="https://youtube.com/thenerdydev"&gt;https://youtube.com/thenerdydev&lt;/a&gt; &lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What are the most annoying things in the work of a developer?  </title>
      <author>Anastasia 🏄🏻‍♀️</author>
      <pubDate>Sat, 19 Jun 2021 13:44:04 +0000</pubDate>
      <link>https://dev.to/coffeestasia/what-are-the-most-annoying-things-in-the-work-of-a-developer-for-you-4io0</link>
      <guid>https://dev.to/coffeestasia/what-are-the-most-annoying-things-in-the-work-of-a-developer-for-you-4io0</guid>
      <description></description>
      <category>career</category>
      <category>productivity</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Skip every ad (Advertisment) in Youtube with this simple trick.</title>
      <author>FRADAR</author>
      <pubDate>Sat, 19 Jun 2021 13:43:29 +0000</pubDate>
      <link>https://dev.to/fradar/skip-every-ad-advertisment-in-youtube-with-this-simple-trick-40ik</link>
      <guid>https://dev.to/fradar/skip-every-ad-advertisment-in-youtube-with-this-simple-trick-40ik</guid>
      <description>&lt;p&gt;Tired of Youtube's pesky ad breaks?&lt;br&gt;
Do you want them to just... vanish away?&lt;/p&gt;

&lt;p&gt;Then your at the right place.&lt;/p&gt;

&lt;p&gt;All you need is one bookmarklet.&lt;/p&gt;

&lt;p&gt;"What's a bookmarklet" you may ask?&lt;br&gt;
A bookmarklet is a bookmark stored in a web browser that contains JavaScript commands that add new features to the browser. Bookmarklets are unobtrusive JavaScripts stored as the URL of a bookmark in a web browser or as a hyperlink on a web page. Bookmarklets are usually JavaScript programs. Regardless of whether bookmarklet utilities are stored as bookmarks or hyperlinks, they add one-click functions to a browser or web page. When clicked, a bookmarklet performs one of a wide variety of operations, such as running a search query or extracting data from a table. For example, clicking on a bookmarklet after selecting text on a webpage could run an Internet search on the selected text and display a search engine results page.&lt;/p&gt;

&lt;p&gt;Now that you know what a bookmarklet is, how do you create one?&lt;br&gt;
All you need to do is:&lt;/p&gt;

&lt;p&gt;Go here: &lt;a href="https://codepen.io/FRADAR/full/yLgyowv"&gt;https://codepen.io/FRADAR/full/yLgyowv&lt;/a&gt;&lt;br&gt;
Then drag the button where it says "Skip Ad" to your bookmark bar.&lt;/p&gt;

&lt;p&gt;Your done!&lt;/p&gt;

&lt;p&gt;Now whenever there is an advertisment on youtube,just click the bookmark button and the ad will skip on it's own!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you want to know how this is happening, basically there is some javascript in the bookmarklet that gets embedded on the page when you click the bookmarlet. The javascript is this: "javascript:(function()%7Bdocument.querySelector('video').currentTime %3D document.querySelector('video').duration%7D)()%3B"&lt;/em&gt; &lt;/p&gt;

</description>
      <category>youtube</category>
      <category>showdev</category>
      <category>bookmarklet</category>
      <category>advertisment</category>
    </item>
    <item>
      <title>How to create a custom cursor in React Part — 1</title>
      <author>GermaVinsmoke</author>
      <pubDate>Sat, 19 Jun 2021 13:41:19 +0000</pubDate>
      <link>https://dev.to/germavinsmoke/how-to-create-a-custom-cursor-in-react-part-1-4fio</link>
      <guid>https://dev.to/germavinsmoke/how-to-create-a-custom-cursor-in-react-part-1-4fio</guid>
      <description>&lt;p&gt;&lt;strong&gt;P.S — No modules were used while writing this code&lt;/strong&gt; 😆&lt;/p&gt;

&lt;p&gt;If you’re looking for the source code then it’s available in the video 😉&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/VSZhw54yO3I"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Please support by watching this video 😢&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#basic-html-css-layout-of-the-cursor"&gt;
  &lt;/a&gt;
  Basic HTML — CSS layout of the cursor
&lt;/h2&gt;

&lt;p&gt;We’re gonna start with writing the &lt;strong&gt;JSX(HTML)&lt;/strong&gt; for cursor dot and cursor outline.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zJq32OmJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3swrmb3kfhu1i3enb3cn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zJq32OmJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3swrmb3kfhu1i3enb3cn.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We also created the &lt;code&gt;ref&lt;/code&gt; for these elements so that we can access the DOM elements later on.&lt;/p&gt;

&lt;p&gt;Next, we’re gonna add the &lt;strong&gt;CSS&lt;/strong&gt; styling to these elements.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7to6mScX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nnzo98yo8nyytpqb8n8o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7to6mScX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nnzo98yo8nyytpqb8n8o.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cursor: none&lt;/code&gt; is added to the universal selector &lt;code&gt;*&lt;/code&gt; because we want to hide the default cursor.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;pointer-events: none&lt;/code&gt; so that this element doesn’t become a target of the pointer-events. &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events"&gt;MDN pointer-events&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;absolute&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;top&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;50&lt;/span&gt;&lt;span class="o"&gt;%;&lt;/span&gt;
&lt;span class="nt"&gt;left&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;50&lt;/span&gt;&lt;span class="o"&gt;%;&lt;/span&gt;
&lt;span class="nt"&gt;transform&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;translate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;-50&lt;/span&gt;&lt;span class="o"&gt;%,&lt;/span&gt; &lt;span class="nt"&gt;-50&lt;/span&gt;&lt;span class="o"&gt;%);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code snippet is used to move both elements in the centre.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;opacity: 1;&lt;/code&gt; is used so that later on we can hide and show our cursor based on &lt;code&gt;mouseenter&lt;/code&gt; and &lt;code&gt;mouseleave&lt;/code&gt; event. That’s why &lt;code&gt;transition&lt;/code&gt; is also used on the &lt;code&gt;opacity&lt;/code&gt; property.&lt;/p&gt;

&lt;p&gt;Transition on &lt;code&gt;transform&lt;/code&gt; is used so that we can increase and reduce the size of the dot and outline based on some mouse events (will soon get to know which one 😉).&lt;/p&gt;

&lt;p&gt;It’ll look something like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YRIrn1-4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ubu9ok7sqrleabrv4icz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YRIrn1-4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ubu9ok7sqrleabrv4icz.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-images-to-show-cursor-hover-effect"&gt;
  &lt;/a&gt;
  Adding images to show cursor hover effect
&lt;/h2&gt;

&lt;p&gt;We’re gonna add some images to show that smooth cursor hover transition.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gNQZQjtb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ncmsvw1b22wwu5jrqq9u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gNQZQjtb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ncmsvw1b22wwu5jrqq9u.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Created this &lt;code&gt;&amp;lt;Link /&amp;gt;&lt;/code&gt; component which can be reused for displaying the images.&lt;/p&gt;

&lt;p&gt;Now, we need to import this into our &lt;code&gt;&amp;lt;Cursor /&amp;gt;&lt;/code&gt; component and pass the images. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HwPUa66A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u0w3sazwn3uputweisbj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HwPUa66A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u0w3sazwn3uputweisbj.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We’ve added &lt;code&gt;ref&lt;/code&gt; to its container because we’ll be adding the mouse events to all those images.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;getImage&lt;/code&gt; is a util function that I created in order to get the images based on the index value provided by the map function. You can find the function in the source code (not adding any image because it isn’t that important. Sorry &lt;code&gt;getImage&lt;/code&gt; function! 😥). &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bonus Points 🤩&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The import statement’s path&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In order to use that I used &lt;code&gt;jsconfig.json&lt;/code&gt;. You can add this file at the root of your project and add the &lt;code&gt;baseUrl&lt;/code&gt; property inside &lt;code&gt;compilerOptions&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xF2luH5I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aeam0pmlpzoq77bfhoh5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xF2luH5I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aeam0pmlpzoq77bfhoh5.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;The &lt;code&gt;[...Array(4).keys()]&lt;/code&gt; code snippet&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;code&gt;Array(4)&lt;/code&gt; will create an empty array of size 4.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;&lt;code&gt;keys()&lt;/code&gt;&lt;/strong&gt; method returns a new &lt;strong&gt;Array Iterator&lt;/strong&gt; object that contains the keys for each index in the array.&lt;/p&gt;

&lt;p&gt;And spreading the array will give us an array — &lt;code&gt;[0, 1, 2, 3]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Okay, let’s get back to what we were doing 😅.&lt;/p&gt;

&lt;p&gt;The final thing is to add a bit of styling to our images container.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3mig2NXm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sdqh9ock2mtp4hyrmrym.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3mig2NXm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sdqh9ock2mtp4hyrmrym.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And now the final outcome will look something like this —&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iiqJnNwf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6yga51kat9e48ver4g84.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iiqJnNwf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6yga51kat9e48ver4g84.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-animation-to-our-cursor"&gt;
  &lt;/a&gt;
  Adding Animation to our cursor
&lt;/h2&gt;

&lt;p&gt;Finally, the time has come to add the animation to our cursor (poor cursor sitting alone at the centre of the screen 😥).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Adding ref variables&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We need to add some more &lt;code&gt;refs&lt;/code&gt; to our &lt;strong&gt;Cursor&lt;/strong&gt; component so that we can update the changes.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jR7MpxWi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/odudpqgveq4qxyuti75q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jR7MpxWi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/odudpqgveq4qxyuti75q.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;delay&lt;/strong&gt; will be used as a factor by which we will change how quickly or slowly the cursor outline should follow the cursor dot. A higher number means slow and vice versa.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cursorVisible&lt;/strong&gt; will help in toggling the visibility of the cursor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cursorEnlarged&lt;/strong&gt; will help in toggling the size of the cursor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;endX&lt;/strong&gt; is the X-position of the cursor dot. We will be saving the X position of the dot in this variable. It is initialised with &lt;code&gt;window.innerWidth/2&lt;/code&gt; because that’s mid of X-axis.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;endY&lt;/strong&gt; is the Y-position of the cursor dot. We will be saving the Y position of the dot in this variable. The concept is same as &lt;strong&gt;endX&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;_x&lt;/strong&gt; is the X-position of the cursor outline. We will be saving the X position of the outline in this variable. It’s initialised with 0 because we want to show movement animation. (The outline coming from the top left corner of the screen to the middle point where the dot is present at the start of the application).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;_y&lt;/strong&gt; is the Y-position of the cursor outline. We will be saving the Y position of the outline in this variable. The concept is same as &lt;strong&gt;_x&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;requestRef&lt;/strong&gt; will save an ID returned from one important function (will see it when we add an animation to the cursor outline). &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Adding cursor toggle functions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dcjLoTMX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/98rj5236xx61xx5s2n82.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dcjLoTMX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/98rj5236xx61xx5s2n82.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;toggleCursorVisibility&lt;/strong&gt; — If the cursor is visible then we will change the opacity to 1 otherwise we will change it to 0. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;toggleCursorSize&lt;/strong&gt; — If the cursorEnlarged is true then we will decrease the size of the dot and increase the size of the outline. In case of a false, we will change it back to the original size.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Adding over, out, enter, leave mouse events&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wGGwnAJA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llxr2c4pp7ocgeoc5yqn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wGGwnAJA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llxr2c4pp7ocgeoc5yqn.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‘mouseover’&lt;/strong&gt; — The &lt;strong&gt;mouseover&lt;/strong&gt; event is fired when the cursor comes on top of the element or its children.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‘mouseout’&lt;/strong&gt; — The &lt;strong&gt;mouseout&lt;/strong&gt; event is fired when the cursor is not on top of the element or its children.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‘mouseleave’&lt;/strong&gt; — The &lt;strong&gt;mouseleave&lt;/strong&gt; event is fired when we leave the page viewport.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‘mouseenter’&lt;/strong&gt; — The &lt;strong&gt;mouseenter&lt;/strong&gt; event is fired when we enter the page viewport.&lt;/p&gt;

&lt;p&gt;Now, we can pass &lt;strong&gt;mouseOverEvent&lt;/strong&gt; and &lt;strong&gt;mouseOutEvent&lt;/strong&gt; to our image component. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DIiQzsD5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kp73xmcbt9j3aeieh14y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DIiQzsD5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kp73xmcbt9j3aeieh14y.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These functions will be called whenever the mouse cursor comes on top of the image.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Adding mousemove event&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aGTSAHaC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bib52lgss0f0wox0gij.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aGTSAHaC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bib52lgss0f0wox0gij.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first thing we need to make sure is that our cursor is visible, that’s why we’ve updated the &lt;strong&gt;currentVisible&lt;/strong&gt; and called the &lt;strong&gt;toggleCursorVisibility&lt;/strong&gt; function.&lt;/p&gt;

&lt;p&gt;Then, we are taking the current position of the cursor with the help of &lt;strong&gt;pageX&lt;/strong&gt; and &lt;strong&gt;pageY&lt;/strong&gt;. The next step is to update the top and left property of the dot cursor to show it moving around on the page.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P.S&lt;/strong&gt; — This &lt;a href="https://stackoverflow.com/questions/6073505/what-is-the-difference-between-screenx-y-clientx-y-and-pagex-y"&gt;StackOverflow&lt;/a&gt; answer has a very good explanation about the difference between &lt;strong&gt;clientX&lt;/strong&gt; and &lt;strong&gt;pageX&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Adding cursor outline animation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SxwJNpQd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9gjzklaxac396ecszsgk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SxwJNpQd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9gjzklaxac396ecszsgk.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a special recursive function that we call inside &lt;code&gt;requestAnimationFrame&lt;/code&gt; function. In this function, we update the position of &lt;strong&gt;cursor outline&lt;/strong&gt; with respect to the position of &lt;strong&gt;cursor dot&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The mathematical explanation for this is present in part 2 of the article.&lt;/p&gt;

&lt;p&gt;This &lt;a href="http://www.javascriptkit.com/javatutors/requestanimationframe.shtml"&gt;article&lt;/a&gt; is great to understand how &lt;strong&gt;requestAnimationFrame&lt;/strong&gt; works and why it was created.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Calling all event functions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rc2XvOIA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lh98n6c0ri86g8aw0fr3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rc2XvOIA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lh98n6c0ri86g8aw0fr3.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can call all our event functions inside &lt;code&gt;useEffect&lt;/code&gt; (componentDidMount). At the time of unmounting, we should remove all the event listeners and also cancel the requestAnimationFrame using &lt;strong&gt;cancelAnimationFrame&lt;/strong&gt; function.&lt;/p&gt;

&lt;p&gt;And with all these functions, our poor cursor can finally move 🥳 &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZQEoFNNU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7m3f6sjii8gn6pns44r9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZQEoFNNU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7m3f6sjii8gn6pns44r9.gif" alt="2021-06-13 22-32-53"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://germavinsmoke.medium.com/how-to-create-a-custom-cursor-in-react-part-2-mathematical-explanation-2193b52c43ba"&gt;Part 2&lt;/a&gt; of the article is having a little bit of mathematical explanation. So you can check it out if you want to.&lt;/p&gt;

&lt;p&gt;Some of the important links —  &lt;/p&gt;

&lt;p&gt;MDN requestAnimationFrame — &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame"&gt;https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;StackOverflow answer on requestAnimationFrame — &lt;a href="https://stackoverflow.com/questions/52212703/using-requestanimationframe-in-react/52213728"&gt;https://stackoverflow.com/questions/52212703/using-requestanimationframe-in-react/52213728&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using requestAnimationFrame in React — &lt;a href="https://css-tricks.com/using-requestanimationframe-with-react-hooks/"&gt;https://css-tricks.com/using-requestanimationframe-with-react-hooks/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using event listeners in React — &lt;a href="https://www.pluralsight.com/guides/event-listeners-in-react-components"&gt;https://www.pluralsight.com/guides/event-listeners-in-react-components&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;VanillaJS codepen for custom cursor — &lt;a href="https://codepen.io/kjbrum/pen/qooQJJ"&gt;https://codepen.io/kjbrum/pen/qooQJJ&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>🔥 Amazing Neon Card Hover Effect using only CSS</title>
      <author>Techy Programmers</author>
      <pubDate>Sat, 19 Jun 2021 13:41:08 +0000</pubDate>
      <link>https://dev.to/kunaal438/awesome-neon-card-hover-effect-with-pure-css-18om</link>
      <guid>https://dev.to/kunaal438/awesome-neon-card-hover-effect-with-pure-css-18om</guid>
      <description>&lt;p&gt;Hello, glad you are here. I am kunaal and today we will see how to make an awesome neon card with an awesome card hover effect using only CSS. You can see demo below.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h1&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/kunaal_kumar/embed/rNybVVe?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#video-tutorial"&gt;
  &lt;/a&gt;
  Video Tutorial
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/QD35tx9lYEQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I hope you understood everything. If you have any doubt or you find any mistake that I made or you have any suggestion feel free to ask me in comment.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are interested in programming and want to know how I a 15yr old teen do coding make these design. You can follow me on my Instagram. I am also planning to post my game development stuff on Instagram.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/c/TechyProgrammers/"&gt;My youtube Channel&lt;/a&gt;, &lt;a href="https://www.instagram.com/techy_programmers/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

</description>
      <category>uiweekly</category>
      <category>css</category>
      <category>beginners</category>
      <category>html</category>
    </item>
    <item>
      <title>React Native Google Custom Map Style Example</title>
      <author>avani-trivedi</author>
      <pubDate>Sat, 19 Jun 2021 13:23:58 +0000</pubDate>
      <link>https://dev.to/avanitrivedi/react-native-google-custom-map-style-example-1pko</link>
      <guid>https://dev.to/avanitrivedi/react-native-google-custom-map-style-example-1pko</guid>
      <description>&lt;p&gt;Hi Guys, Today,I will learn you how to draw google custom map style in react native.we will show example of react native custom map style .First i will create import namespace MapView and Polyline from npm i react-native-maps, after I will using MapView using for MapView and polyline tag add polyline in react native example.&lt;br&gt;
Here, I will give you full example for simply display google custom map style using react native as bellow.&lt;/p&gt;

&lt;p&gt;More...&lt;br&gt;
&lt;a href="https://www.mywebtuts.com/blog/react-native-google-custom-map-style-example"&gt;https://www.mywebtuts.com/blog/react-native-google-custom-map-style-example&lt;/a&gt;&lt;/p&gt;

</description>
      <category>reactnative</category>
      <category>google</category>
    </item>
    <item>
      <title>A guide for CSS units (px, em, rem ...)</title>
      <author>Sarah Abdelfattah</author>
      <pubDate>Sat, 19 Jun 2021 13:23:54 +0000</pubDate>
      <link>https://dev.to/sarah23s/a-guide-for-css-units-px-em-rem-2oh1</link>
      <guid>https://dev.to/sarah23s/a-guide-for-css-units-px-em-rem-2oh1</guid>
      <description>&lt;p&gt;CSS allows users to specify values with a variety of choices in choosing the unit. Usually the most recognizable was px, but there are more beyond that. To start with, units can be divided into two categories:&lt;/p&gt;

&lt;p&gt;1- Absolute: the value will be fixed, no matter where it is used&lt;br&gt;
2- Relative: the value depends on external factors or in respect to another property or element.&lt;/p&gt;

&lt;p&gt;Under absolute units, we find cm, in, pt. Yet the most used unit is px, mainly for its simplicity. Since it is an absolute unit, regardless of the window size, elements, properties or hierarchy, a pixel will appear the same size in all cases, and a px is 1/96th of an inch.&lt;/p&gt;

&lt;p&gt;*We need to note that 1 CSS pixel does not necessarily mean 1 physical pixel on the monitor.&lt;/p&gt;

&lt;p&gt;The biggest drawback of px is that they are not scalable, which makes them not suitable to be used in responsive websites or in elements that depend on other properties (without the excessive use of media queries). For example, a title with a font-size: 32px may look well on a large screen, but how will it look on a smaller one?&lt;/p&gt;

&lt;p&gt;Relative units come in handy in this case. Usually, developers avoid using relative units because of the unpredictable and changeable behaviour it shows and the abstraction it creates. Yet relative units make it possible to set the size of the elements relative to the base or parent elements, then in this case when a page is resized, all elements will be resized all at once.&lt;/p&gt;

&lt;p&gt;First are ems, which have two different behaviours:&lt;br&gt;
1- Ems used for properties other than font-size, then the current font size will be taken as a reference, which means 1 em is equivalent to the font size of the current element. For example:&lt;/p&gt;

&lt;p&gt;.container{&lt;br&gt;
  font-size: 16px;&lt;br&gt;
  padding: 2em;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;This means that the container will have a padding of 2 * its font size, which is 32px. If later the font size was changed, the padding will also change.&lt;/p&gt;

&lt;p&gt;2- Ems used for font-size property, in this case, an inherited font size will be taken as a reference. For example:&lt;/p&gt;

&lt;p&gt;.container{&lt;br&gt;
  font-size: 32px;&lt;br&gt;
}&lt;br&gt;
.child{&lt;br&gt;
  font-size: 0.5em;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;This means that the child will have 0.5 * the parent’s font size, which will be 16px;&lt;/p&gt;

&lt;p&gt;**Note that when ems is used for both font size and any other properties on the same element, first the browser will calculate the font size, then the resulted value will be used to calculate other properties.&lt;/p&gt;

&lt;p&gt;The biggest drawback is when ems are used in nested elements, resulting in elements constantly shrinking or enlarging, and you need to go up the tree to find the value that was inherited from the parent’s parent’s parent’s … value.&lt;/p&gt;

&lt;p&gt;We then need rem (root em) which is a relative unit, but relative to the root element not relative to the current element (like em), which means that 1 rem is equivalent to 1 * the font size of the root element.&lt;/p&gt;

&lt;p&gt;Moreover, there are also viewport-relative units that define the value relative to the browser’s viewport, not relative to font-size (like ems and rems).&lt;/p&gt;

&lt;p&gt;vh — 1% of the height of the viewport&lt;br&gt;
vw — 1% of the width of the viewport&lt;br&gt;
vmin — 1% of the smaller dimension, height or width&lt;br&gt;
vmax — 1% of the larger dimension, height or width&lt;/p&gt;

&lt;p&gt;**Note that using % in defining width or height is relative to the parent element, which by default excludes spaced for scrollbars for example.&lt;/p&gt;

&lt;p&gt;Which unit is more convenient?&lt;br&gt;
In a nutshell, it depends mainly on which elements you need to be responsive and relative to what, but you can consider this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;rems for font size&lt;/li&gt;
&lt;li&gt;pixels for borders&lt;/li&gt;
&lt;li&gt;ems for properties like padding, height, width, or border-radius&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That’s it! Thanks for reading, and I hope things are more clear with css units and the best of luck!&lt;/p&gt;

&lt;p&gt;Regards,&lt;br&gt;
Sarah&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>The Game of Life</title>
      <author>Luke Garrigan</author>
      <pubDate>Sat, 19 Jun 2021 13:16:47 +0000</pubDate>
      <link>https://dev.to/lukegarrigan/the-game-of-life-28fm</link>
      <guid>https://dev.to/lukegarrigan/the-game-of-life-28fm</guid>
      <description>&lt;p&gt;The Game of Life or  &lt;a href="https://www.wikiwand.com/en/Cellular_automaton"&gt;cellular automaton&lt;/a&gt; was developed by  &lt;a href="https://en.wikipedia.org/wiki/John_Horton_Conway"&gt;John Horton Conway&lt;/a&gt;  in 1970 with just some paper and a Go board. It takes place on a two-dimensional grid where each cell is in one of two states on (alive) or off (dead). The state of a cell is determined by its neighbours, and 4 simple rules determine whether the given state will live or die.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rules"&gt;
  &lt;/a&gt;
  Rules
&lt;/h2&gt;

&lt;p&gt;There are four rules that determine a cell’s fate.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;strong&gt;Underpopulation:&lt;/strong&gt; Any live cell that has less than two neighbours dies.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Overpopulation:&lt;/strong&gt; Any live cell that has more than three neighbours dies.&lt;/li&gt;
&lt;li&gt; Any cell with two or three neighbours survives.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Reproduction:&lt;/strong&gt;  Any dead cell with exactly three neighbours becomes a live cell.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These rules can be further simplified for implementation:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Any live cell with two or three neighbours survives&lt;/li&gt;
&lt;li&gt; Any dead cell with three live neighbours becomes a live cell&lt;/li&gt;
&lt;li&gt; Everything else is now a dead cell&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#implementing"&gt;
  &lt;/a&gt;
  Implementing
&lt;/h2&gt;

&lt;p&gt;I’m going to  &lt;a href="https://codeheir.com/2019/02/01/what-is-p5-js-0/"&gt;be using p5.js to implement&lt;/a&gt;  this,  &lt;a href="https://editor.p5js.org/codeheir/sketches/gu41ikOre"&gt;all the code can be found here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The first step is to create a grid and randomly choose whether the cell is dead or alive:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;createCanvas&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;grid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createGrid&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which should give us something like the following, where the blue colour represents a live cell:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NKIhr9BA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/codeheir.com/wp-content/uploads/2021/06/image-1.png%3Fresize%3D720%252C540%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NKIhr9BA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/codeheir.com/wp-content/uploads/2021/06/image-1.png%3Fresize%3D720%252C540%26ssl%3D1" alt="image of grid"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The next step is to create the next generation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;createNewGeneration&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;nextGeneration&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createGrid&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;currentState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;countNeighbours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentState&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;nextGeneration&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentState&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;nextGeneration&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;nextGeneration&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;nextGeneration&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;countNeighbours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nx"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="nx"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now all that's needed is to assign the new generation to the current grid:  &lt;code&gt;grid = createNewGeneration()&lt;/code&gt;  in the draw function and we're good to go!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gsh28efl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/codeheir.com/wp-content/uploads/2021/06/1-1.gif%3Fresize%3D711%252C532%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gsh28efl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/codeheir.com/wp-content/uploads/2021/06/1-1.gif%3Fresize%3D711%252C532%26ssl%3D1" alt="image of grid moving game of life"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's make each cell a little smaller, thus increasing the population size:  &lt;code&gt;let size = 5&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1IUZq4JM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/codeheir.com/wp-content/uploads/2021/06/2-1.gif%3Fresize%3D711%252C532%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1IUZq4JM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/codeheir.com/wp-content/uploads/2021/06/2-1.gif%3Fresize%3D711%252C532%26ssl%3D1" alt="image of grid moving game of life more cells"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The Game of Life is a marvellous simulation. It demonstrates how just a few simple rules and structures can form very complex systems. There's far more to learn about the Game of Life,  &lt;a href="https://playgameoflife.com/lexicon/295P5H1V1"&gt;there's a whole lexicon of patterns&lt;/a&gt;  that perform particular behaviours.&lt;/p&gt;

&lt;p&gt;What is even more remarkable about the Game of Life is that it is  &lt;a href="https://www.wikiwand.com/en/Turing_completeness"&gt;Turing Complete&lt;/a&gt;. It is able to make any arbitrarily complex computation, meaning a computer can be built in the Game of Life that can run a simulation of the Game of Life, which of course,  &lt;a href="https://www.youtube.com/watch?v=hsXCKPt8u3I"&gt;has been done&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
  </channel>
</rss>
