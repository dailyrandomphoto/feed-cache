<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>CSS Pseudo Elements</title>
      <author>Avinash Gupta</author>
      <pubDate>Tue, 02 Nov 2021 16:00:58 +0000</pubDate>
      <link>https://dev.to/tier3guy/css-pseudo-elements-3npb</link>
      <guid>https://dev.to/tier3guy/css-pseudo-elements-3npb</guid>
      <description>&lt;p&gt;Hey friend, are you finding CSS pseudo-elements difficult?&lt;br&gt;
No worries, I was also finding it difficult when I was new to this CSS. In this doc I will be explaining you &lt;code&gt;CSS pseudo-elements&lt;/code&gt; in a very easy manner. So lets start,&lt;br&gt;
Suppose I have given you a task to design only the first letter of a word in your &lt;code&gt;HTML&lt;/code&gt; page. How will you do this? One will say that okay I will apply a span tag to that letter, and then I will style it. But my friend its 2021 are you thinking that is it a good practice. At the end it's a single word then why will you apply &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;

&lt;p&gt;Right?&lt;/p&gt;

&lt;p&gt;Here comes the role of this &lt;code&gt;pseudo-elements&lt;/code&gt;. Pseudo-elements is used to customize any specific part of any element.&lt;br&gt;
Till now you have understood that okay &lt;strong&gt;a CSS pseudo-element is used to style specified parts of an element&lt;/strong&gt;. But I you don't know how to do that. &lt;br&gt;
Before jumping into that let me explain you the different types of &lt;em&gt;CSS pseudo-elements&lt;/em&gt; present.&lt;/p&gt;

&lt;p&gt;There are majorly 6 pseudo-elements available and they are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;::before&lt;/li&gt;
&lt;li&gt;::after&lt;/li&gt;
&lt;li&gt;::first-letter&lt;/li&gt;
&lt;li&gt;::first-line&lt;/li&gt;
&lt;li&gt;::marker&lt;/li&gt;
&lt;li&gt;::selection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, let just discuss them one by one.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;::before&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;p::before{
   content: 'Hello world';
   color: blue;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, before is used to add a content before any class or element. In the above written example &lt;code&gt;Hello world&lt;/code&gt; will be embedded before the paragraph with blue color. Now you can customize it according to your choice.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;::after&lt;/strong&gt;&lt;br&gt;
There is no difference in &lt;code&gt;::before&lt;/code&gt; and &lt;code&gt;::after&lt;/code&gt; but as their name suggests before adds content before any element while after will embed it after the element.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;::first-letter&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;p::first-letter{
   color: blue;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is used customize the first letter of any element as we have discussed in the example.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;::first-line&lt;/strong&gt;&lt;br&gt;
Again there is no difference between ::first-line and ::first-letter but as their name is suggesting it is used to customize the first line of any element.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;::marker&lt;/strong&gt;&lt;br&gt;
The marker is used to style the markers of the list item.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;::selection&lt;/strong&gt;&lt;br&gt;
Honestly talking this is my favourite pseudo-element, as it helps to customize the area that has been selected/high-lighted by the user on the dom.&lt;br&gt;
Example speaks: means by default if you high-light any text on the browser the background color changes to blue, but now you customize it by your own. Isn't it amazing. I think you will agree with me.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, this is was all about the pseudo-elements, hope you liked it and get some new knowledge. &lt;br&gt;
Thank you!&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>Get started with Medusa: the open-source alternative to Shopify</title>
      <author>Shahed Nasser</author>
      <pubDate>Tue, 02 Nov 2021 15:53:36 +0000</pubDate>
      <link>https://dev.to/medusajs/get-started-with-medusa-the-open-source-alternative-to-shopify-305j</link>
      <guid>https://dev.to/medusajs/get-started-with-medusa-the-open-source-alternative-to-shopify-305j</guid>
      <description>&lt;p&gt;There are many popular ecommerce platforms that come to developers’ minds first, and one of these is Shopify. Shopify established itself as one of the go-to platforms to create an ecommerce store for any business. However, it has a lot of disadvantages including the fact that it is not free and it has minimal customizability. This is where Medusa comes in.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.medusa-commerce.com"&gt;Medusa&lt;/a&gt; is an open-source headless commerce engine that is fast and customizable. As Medusa is split into 3 core components - the headless commerce part that exposes the REST APIs for your store, the frontend of your store, and the admin panel - you are free to use the platform as a whole, or use the parts that you need for your ecommerce store.&lt;/p&gt;

&lt;p&gt;In this tutorial series, you will learn how to create an ecommerce store with Medusa. This includes setting up your development environment, adding features and plugins to your backend, frontend, and admin panel each, and everything you might need to set up your ecommerce store with Medusa.&lt;/p&gt;

&lt;p&gt;In this part of the tutorial series, you will learn how to install and run each part of the platform separately, and you will learn the structure of each part to understand where you need to do what. Then, you will learn how to set up all the different parts together with a single command.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-medusa"&gt;
  &lt;/a&gt;
  Why Medusa
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#customization-abilities"&gt;
  &lt;/a&gt;
  Customization Abilities
&lt;/h3&gt;

&lt;p&gt;Shopify is a great choice if you are creating a basic store with no need for customization, or you are not a tech-savvy person. However, you should not use Shopify if you are looking to own your tech stack and make changes per your business requirements. When you choose Shopify, you are stuck with the features and architecture that the platform provides out of the box.&lt;/p&gt;

&lt;p&gt;On the other hand, Medusa’s main feature is its flexibility and extendibility. You can use all of the 3 core components together, or take some of them and couple or integrate them with other technologies or systems.&lt;/p&gt;

&lt;p&gt;You can still use it as a whole and you will get a great development and user experience. The backend is built on Node.js, Express, and by default SQLite when you first install the server with the option to use &lt;a href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt; and &lt;a href="https://redis.io"&gt;Redis&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For the frontend, you have the option to use a starter storefront built with either &lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt; or &lt;a href="https://www.gatsbyjs.com"&gt;Gatsby&lt;/a&gt;. As with both options, you will end up with a static website that connects to the headless server, the speed of your website is almost guaranteed to be fast.&lt;/p&gt;

&lt;p&gt;As for the backend, it is also built with Gatsby and connects to your server just like the frontend.&lt;/p&gt;

&lt;p&gt;This sets Medusa apart from other ecommerce platforms that are tightly coupled, complex and slow. Medusa offers a lot of features out of the box and is built to allow you to customize it based on your needs. Compared to Shopify, which provides less ownership over your tech stack, it allows you to completely own your tech stack.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Suggested Read: &lt;a href="https://blog.shahednasser.com/medusa-create-fast-and-highly-customizable-ecommerce-store/"&gt;Medusa: Create A Fast and Highly Customizable E-Commerce Store&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pricing"&gt;
  &lt;/a&gt;
  Pricing
&lt;/h3&gt;

&lt;p&gt;Shopify’s pricing models can be a big disadvantage as there are a lot of other alternatives, including Medusa, that offer their ecommerce platform for free.&lt;/p&gt;

&lt;p&gt;Not only do you have to pay to use and deploy the platform, but also it is hard to find plugins or themes for free. In addition, installing plugins is not easy due to the platform’s inflexibility.&lt;/p&gt;

&lt;p&gt;This is where open-source shines. You are free to use and deploy Medusa free of charge. You also have an open-source community backing you up, providing free plugins for you to use. Due to Medusa’s flexibility, installing plugins is very easy.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#business-use-cases"&gt;
  &lt;/a&gt;
  Business Use Cases
&lt;/h3&gt;

&lt;p&gt;As mentioned earlier, Shopify is not flexible and is hard to customize. This means that a lot of business use cases, including B2B, market places, custom shopping experiences, and more are not available or possible with Shopify. &lt;/p&gt;

&lt;p&gt;If you are sure that your business will just sell products with the conventional ecommerce experience, that might not be a problem for you. However, if you are already planning for the growth of your business and need an ecommerce platform that can grow and extend as needed with your business use cases, then choosing Shopify will prove to be a hassle.&lt;/p&gt;

&lt;p&gt;Medusa’s headless APIs and flexibility allow you to easily create plugins to customize the shopping experience to your use case or integrate Medusa with other services as needed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;Before we start, make sure you install &lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt; if you have not. You will also need &lt;a href="https://www.npmjs.com"&gt;NPM&lt;/a&gt; but it will install with Node.js when you install it.&lt;/p&gt;

&lt;p&gt;To check if you have Node.js and NPM installed you can run these commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;node &lt;span class="nt"&gt;-v&lt;/span&gt;
npm &lt;span class="nt"&gt;-v&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the output of each of the commands shows a number version, then you have them installed. Otherwise, you need to install them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#set-up-medusa"&gt;
  &lt;/a&gt;
  Set Up Medusa
&lt;/h2&gt;

&lt;p&gt;At its core, Medusa is the backend that exposes the REST APIs, which will allow your frontend or admin panel to retrieve or modify the data. You can replace the storefront or admin panel with a platform of your own that connects to the APIs, but you at least need this part of Medusa in your system.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-medusa"&gt;
  &lt;/a&gt;
  Install Medusa
&lt;/h3&gt;

&lt;p&gt;Installing Medusa is easy. First, you need to install the CLI tool that allows you to set up the server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; @medusajs/medusa-cli
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once this part is done, you can use the CLI to set up a new Medusa store on your machine:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;medusa new my-store &lt;span class="nt"&gt;--seed&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create a new Medusa installation in the directory my-store. You can change the name of the store or directory by changing my-store. By applying the --seed option, it will seed the database with basic data including a demo product.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#run-medusa"&gt;
  &lt;/a&gt;
  Run Medusa
&lt;/h3&gt;

&lt;p&gt;Once this command is done, you are ready to run your server! First, change to the directory of the medusa store:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;my-store
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, run the &lt;code&gt;develop&lt;/code&gt; command using the CLI tool to run the server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;medusa develop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will run the server by default at &lt;code&gt;localhost:9000&lt;/code&gt;. You can test it by going to &lt;code&gt;localhost:9000/store/products&lt;/code&gt; in your browser and you should see a JSON array of products. It will include just one product as the seeder adds just one.&lt;/p&gt;

&lt;p&gt;You can check the full list of &lt;a href="https://docs.medusa-commerce.com/api/store/auth"&gt;API endpoints in the documentation&lt;/a&gt;. For the storefront, all endpoints are prefixed with &lt;code&gt;/store&lt;/code&gt;, whereas for the admin panel, all endpoints are prefixed with &lt;code&gt;/admin&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#structure-overview"&gt;
  &lt;/a&gt;
  Structure Overview
&lt;/h3&gt;

&lt;p&gt;Let us take a look at the directory structure for the server. It should look something like this:&lt;/p&gt;

&lt;p&gt;As you can see we have the following directories:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XUbyNDS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5pf3w9kemzshbz74akdr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XUbyNDS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5pf3w9kemzshbz74akdr.png" alt="Structure Overview" width="540" height="656"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;data&lt;/code&gt;: This directory holds the data that will be used to seed the database. It has the file &lt;code&gt;seed.json&lt;/code&gt; which includes the configuration for the basic store. These data are the data added to your store when you add the &lt;code&gt;--seed&lt;/code&gt; option which we did.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;dist&lt;/code&gt;: This directory will hold the build of your server when you run &lt;code&gt;npm run build&lt;/code&gt;. When you deploy your server, you will run this command and the compiled files in the &lt;code&gt;dist&lt;/code&gt; directory will be used.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;src&lt;/code&gt;: Inside the &lt;code&gt;src&lt;/code&gt; directory, you can add any of the plugins or changes you might need to make. Inside the &lt;code&gt;api&lt;/code&gt; subdirectory, you can add new endpoints to your store. Inside the &lt;code&gt;services&lt;/code&gt; subdirectory, you can add new services which you can use globally in different endpoints. Inside the &lt;code&gt;subscribers&lt;/code&gt; subdirectory, you can add event listeners to different events e.g., when an order is placed.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;uploads&lt;/code&gt;: will include any files to be uploaded like product images.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#set-up-the-storefront"&gt;
  &lt;/a&gt;
  Set Up the Storefront
&lt;/h2&gt;

&lt;p&gt;Next, we'll install and set up the storefront. As mentioned earlier, you can use the &lt;a href="https://github.com/medusajs/gatsby-starter-medusa"&gt;Gatsby&lt;/a&gt; starter or &lt;a href="https://github.com/medusajs/nextjs-starter-medusa"&gt;Next.js&lt;/a&gt; starter. For this tutorial, we'll use the Next.js starter.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-the-storefront"&gt;
  &lt;/a&gt;
  Install the Storefront
&lt;/h3&gt;

&lt;p&gt;To install the Next.js storefront just run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-next-app &lt;span class="nt"&gt;-e&lt;/span&gt; https://github.com/medusajs/nextjs-starter-medusa my-storefront
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create a Next.js storefront in the directory my-storefront. If you want to name it something else you can change the name in the command.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#run-the-storefront"&gt;
  &lt;/a&gt;
  Run the Storefront
&lt;/h3&gt;

&lt;p&gt;Before running the storefront, make sure that the server is running first as the storefront will connect to the server to retrieve the data of the store. To run the server, you can follow the steps in the previous section.&lt;/p&gt;

&lt;p&gt;To run the storefront, first change to the directory of the storefront:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;my-storefront
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, run the following command to run the storefront:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will run the storefront at &lt;code&gt;localhost:8000&lt;/code&gt; by default. If you open it, you should see a basic storefront with links to different documentations. You can also see the products and try out the full checkout experience.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q0F9f-gc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8q4ww6jvs6ei0jpgsnvf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q0F9f-gc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8q4ww6jvs6ei0jpgsnvf.png" alt="Medusa Storefront" width="880" height="512"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-stripe-integration"&gt;
  &lt;/a&gt;
  Add Stripe Integration
&lt;/h3&gt;

&lt;p&gt;To add the &lt;a href="https://stripe.com"&gt;Stripe&lt;/a&gt; integration, first copy the &lt;code&gt;.env.template&lt;/code&gt; to &lt;code&gt;.env.local&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mv&lt;/span&gt; .env.template .env.local
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, change the environment variable for Stripe's public key:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;NEXT_PUBLIC_STRIPE_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;pk_test_something
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#structure-overview"&gt;
  &lt;/a&gt;
  Structure Overview
&lt;/h3&gt;

&lt;p&gt;The structure of the directory should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bZpAEA2S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7u0vyffglxyx22koc0e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bZpAEA2S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7u0vyffglxyx22koc0e.png" alt="Structure Overview" width="536" height="728"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;components&lt;/code&gt;: This directory includes different components in the storefront like the cart, checkout, navigation bar, and more. Here you can make changes to the components if needed.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;context&lt;/code&gt;: This includes some easy to toggle or change settings for your store through the context. For example, you can toggle showing the full cart in &lt;code&gt;context/display-context.js&lt;/code&gt; by changing the value of &lt;code&gt;cartView&lt;/code&gt; in the &lt;code&gt;defaultDisplayContext&lt;/code&gt; object.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;pages&lt;/code&gt;: This includes the different pages in the storefront. By default, the storefront will have 3 pages: Checkout, Product page, and landing page. You can add more pages to your store here.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;public&lt;/code&gt;: You can add the public assets like images here.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;styles&lt;/code&gt;: This directory holds all the styles of the store and you can make changes here to change the styles of the storefront.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;utils&lt;/code&gt;: This includes helper functions like getting Stripe's public key, helper functions, configurations, and more.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#set-up-the-admin-panel"&gt;
  &lt;/a&gt;
  Set Up the Admin Panel
&lt;/h2&gt;

&lt;p&gt;Finally, we'll install and set up the admin panel. The admin panel is built with Gatsby. Through the admin panel, you can use the APIs exposed by the server to view or make changes to the data in the store. This includes viewing and adding products, orders, customers, and more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-the-admin-panel"&gt;
  &lt;/a&gt;
  Install the Admin Panel
&lt;/h3&gt;

&lt;p&gt;To set up the admin panel, first, clone &lt;a href="https://github.com/medusajs/admin"&gt;the repository of the admin panel&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone https://github.com/medusajs/admin my-admin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, change to the directory of the admin panel, which is my-admin. You can change that by changing it in the command above.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;my-admin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, you need to install the dependencies with NPM:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#run-the-admin-panel"&gt;
  &lt;/a&gt;
  Run the Admin Panel
&lt;/h3&gt;

&lt;p&gt;Once all the dependencies are installed, we are ready to run the admin panel:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will open the admin panel at &lt;code&gt;localhost:7000&lt;/code&gt; by default. When you first open it, you will be asked to log in. To log in you can use the email "&lt;a href="mailto:admin@medusa-test.com"&gt;admin@medusa-test.com&lt;/a&gt;" with the password "supersecret".&lt;/p&gt;

&lt;p&gt;When you log in, you will see an admin panel with a sidebar that you can use to view orders, customers, products, and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Aa6x8Vyi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f63nku8x3selobtumzh6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Aa6x8Vyi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f63nku8x3selobtumzh6.png" alt="Medusa Admin" width="880" height="337"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#structure-overview"&gt;
  &lt;/a&gt;
  Structure Overview
&lt;/h3&gt;

&lt;p&gt;The structure of the directory should look something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NVhekaBI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/800zajsxaalkcoupi1cl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NVhekaBI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/800zajsxaalkcoupi1cl.png" alt="Structure Overview" width="546" height="916"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;src&lt;/code&gt;: Here you will find the main code for the admin panel. You can edit components, pages, context, and more. Any edits or additions to the admin panel can be done here.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;public&lt;/code&gt;: This will include the build generated by Gatsby for the admin panel.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;static&lt;/code&gt;: The public static assets you will need for the admin panel like images.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As mentioned, this admin panel is built with Gatsby. Although you do not necessarily need to learn Gatsby to set it up and run it, making changes to it would require some understanding of how Gatsby works, depending on the kind of change you will be making.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#alternative-solution-create-medusa-app"&gt;
  &lt;/a&gt;
  Alternative Solution: Create Medusa App
&lt;/h2&gt;

&lt;p&gt;As mentioned, Medusa decouples the three core components of the platform to give you the flexibility and ability to customize the platform as fitting for you. However, if you will use the three components, you can install them all at once.&lt;/p&gt;

&lt;p&gt;Medusa introduces &lt;a href="https://docs.medusa-commerce.com/how-to/create-medusa-app"&gt;create-medusa-app&lt;/a&gt;. If you've used &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt; before, before, you will notice that this is similar to &lt;a href="https://create-react-app.dev"&gt;create-react-app&lt;/a&gt;. by using this tool, you will be able to set up the 3 components of the platform all at once.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#set-up-medusa-app"&gt;
  &lt;/a&gt;
  Set Up Medusa App
&lt;/h3&gt;

&lt;p&gt;In your terminal, you just need to run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-medusa-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will then be asked some questions related to naming your store, what technologies you want to use for the different parts of the platform and more.&lt;/p&gt;

&lt;p&gt;Once the installation is done, you will have 3 directories ready. One for the server which will be called &lt;code&gt;backend&lt;/code&gt;, one for the storefront which will be called &lt;code&gt;storefront&lt;/code&gt;, and one for the admin which will be called &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#run-the-medusa-app"&gt;
  &lt;/a&gt;
  Run the Medusa App
&lt;/h3&gt;

&lt;p&gt;Similar to the instructions of each component in the first method, when we install them separately, you will have to run each component separately.&lt;/p&gt;

&lt;p&gt;The Medusa server is required for both the storefront and the admin panel, so make sure that it is running before running either of them.&lt;/p&gt;

&lt;p&gt;To run the Medusa server you need to change to the backend directory then run it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;backend
npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To run the Medusa storefront you need to change to the storefront directory then run it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;storefront
npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To run the Medusa admin you need to change to the admin directory then run it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;admin
npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Although no one can deny Shopify’s popularity and many advantages, it is also good to recognize some of its disadvantages and what other options or alternatives you have. &lt;/p&gt;

&lt;p&gt;Its lack of extendibility and ownership are disadvantages that should not be taken lightly when choosing an ecommerce platform for your system.&lt;/p&gt;

&lt;p&gt;Medusa is a great alternative when it comes to these cons. Medusa is an open-source platform that will provide you with an extensible and fast development experience, as you have probably seen from this tutorial. Its setup is quick, and you can easily make changes or additions to any part of its components.&lt;/p&gt;

&lt;p&gt;In addition to all that, the team behind Medusa is always happy to assist you with any questions you might have regarding how to set up Medusa on &lt;a href="https://discord.gg/F87eGuwkTp"&gt;the Discord&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;In the next part of the series, you will see how to make changes to the server. This includes how to add API endpoints, services, and more. As we go through the tutorial series you will be able to master and understand each component of Medusa to help you build your ecommerce store.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>opensource</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Create Teams for Collaboration in Hoppscotch</title>
      <author>Liyas Thomas</author>
      <pubDate>Tue, 02 Nov 2021 15:44:10 +0000</pubDate>
      <link>https://dev.to/liyasthomas/create-teams-for-collaboration-in-hoppscotch-58a</link>
      <guid>https://dev.to/liyasthomas/create-teams-for-collaboration-in-hoppscotch-58a</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TzwmxmaQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0hs98fv0w5okbbakdz5w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TzwmxmaQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0hs98fv0w5okbbakdz5w.png" alt="Image description" width="880" height="533"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;TL;DR&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hoppscotch is an open-source API development ecosystem.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Today we're launching Teams Collaboration support [public beta] in Hoppscotch.&lt;/p&gt;

&lt;p&gt;✅   Unlimited teams&lt;/p&gt;

&lt;p&gt;✅   Unlimited shared collections&lt;/p&gt;

&lt;p&gt;✅   Unlimited team members&lt;/p&gt;

&lt;p&gt;✅   Role-based access control&lt;/p&gt;

&lt;p&gt;✅   Cloud sync&lt;/p&gt;

&lt;p&gt;✅   Multiple devices&lt;/p&gt;

&lt;p&gt;&lt;a href="https://hoppscotch.io"&gt;Try Hoppscotch Teams now ✨ ✨&lt;/a&gt;     &lt;a href="https://github.com/hoppscotch/hoppscotch"&gt;GitHub&lt;/a&gt; &lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#create-teams-for-collaboration-in-hoppscotch"&gt;
  &lt;/a&gt;
  Create Teams for Collaboration in Hoppscotch
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://hoppscotch.io"&gt;Hoppscotch&lt;/a&gt;  is a collaborative API development tool that helps you test, save and share APIs, from any device. You can use Hoppscotch Teams to have an instant API development environment with members of your team or collaborators outside your organization. You can make shared collections, set role-based access control, test, save and share APIs in real-time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#best-practices"&gt;
  &lt;/a&gt;
  Best practices
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Create teams for shared API collections.&lt;/li&gt;
&lt;li&gt;Create an org-wide team for communication with everyone across your organization.&lt;/li&gt;
&lt;li&gt;Create teams for specific projects and apply the right amount of protection based on who should be included.&lt;/li&gt;
&lt;li&gt;Create specific teams for communication with external users to keep them separate from anything sensitive for your business.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For example, a start-up, enterprise firm, or SaaS company could create the following teams:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A business-, firm-, or practice-wide team: This is for everyone to use for day-to-day communications and work across your business. You can use this team to share public APIs or share information of interest for your whole firm or practice.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Individual teams: Set up teams for smaller groups to collaborate about their day-to-day work.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;An external communications team or teams: Coordinate with your vendors, partners, or clients without allowing them into anything sensitive. Set up different collections for specific groups.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8BZ0WG9d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635782976048/Bj9wgrzk2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8BZ0WG9d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635782976048/Bj9wgrzk2.png" alt="pretty_snap_2021_10_1_21_39.png" width="880" height="533"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#set-it-up"&gt;
  &lt;/a&gt;
  Set it up
&lt;/h2&gt;

&lt;p&gt;Create a team for just the development team and testers, or product manager and head of departments in just two easy steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a team&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Visit  &lt;a href="https://hoppscotch.io/profile"&gt;&lt;strong&gt;Profile page&lt;/strong&gt;&lt;/a&gt;   &amp;gt;   Teams tab&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click "&lt;strong&gt;Create new team&lt;/strong&gt;"&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Give team a name   &amp;gt;   "&lt;strong&gt;Save&lt;/strong&gt;"&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;Invite team members&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;Click "&lt;a href="https://hoppscotch.io"&gt;&lt;strong&gt;Invite&lt;/strong&gt;&lt;/a&gt;" on top-right corner   &amp;gt;   Select a team&lt;/li&gt;
&lt;li&gt;Add team members email and set permissions   &amp;gt;   Click "&lt;strong&gt;Invite&lt;/strong&gt;"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's it, you've successfully created a team and sent invites to your team members. Ask your team members to check their inbox to accept the invitation from the email received from Hoppscotch.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ykbtgapm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635785448594/qc6gpBy_Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ykbtgapm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635785448594/qc6gpBy_Q.png" alt="pretty_snap_2021_10_1_22_20.png" width="880" height="529"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;NOTE: Team owners can revoke pending invitations from "&lt;/em&gt;&lt;em&gt;Invite window&lt;/em&gt;&lt;em&gt;"&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#user-roles"&gt;
  &lt;/a&gt;
  User roles
&lt;/h2&gt;

&lt;p&gt;Roles are used to control access to the shared collections.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ROLE&lt;/th&gt;
&lt;th&gt;PERMISSIONS&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;OWNER&lt;/td&gt;
&lt;td&gt;Owners can add, edit, and delete requests, collections, and team members.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;EDITOR&lt;/td&gt;
&lt;td&gt;Editors can add, edit, and delete collections and requests.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VIEWER&lt;/td&gt;
&lt;td&gt;Viewers can only view and use requests.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Follow the project on GitHub for more product updates.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/hoppscotch"&gt;
        hoppscotch
      &lt;/a&gt; / &lt;a href="https://github.com/hoppscotch/hoppscotch"&gt;
        hoppscotch
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      👽 Open source API development ecosystem https://hoppscotch.io
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;In two years, Hoppsotch has grown to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;500,000+&lt;/strong&gt; all-time users&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;22,000+&lt;/strong&gt; monthly users&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;32,500+&lt;/strong&gt; GitHub stars&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;150&lt;/strong&gt; contributors&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Starting with Hoppscotch for Teams — we're laying the foundation to build a truly open, transparent, and flexible API development tool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We'll be focusing on every life cycle of API development:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Design&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Development&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Testing&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Deployment&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Consumption&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Our roadmap aligns with this vision.&lt;/p&gt;

&lt;p&gt;Join our &lt;a href="https://hoppscotch.io/discord"&gt;&lt;strong&gt;Discord server&lt;/strong&gt;&lt;/a&gt; or  &lt;a href="https://hoppscotch.io/newsletter"&gt;&lt;strong&gt;Subscribe to our Newsletter&lt;/strong&gt;&lt;/a&gt; to stay up to date with the latest happenings in the product.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#join-us-were-hiring"&gt;
  &lt;/a&gt;
  Join us - we're hiring!
&lt;/h3&gt;

&lt;p&gt;Join our journey to build Hoppscotch for an API-first software era.&lt;/p&gt;

&lt;p&gt;We're hiring in product, engineering, and design.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#join-our-team-apply-now"&gt;
  &lt;/a&gt;
  &lt;a href="https://hoppscotch.io/careers"&gt;Join our team - Apply now ✨&lt;/a&gt;
&lt;/h3&gt;

</description>
      <category>opensource</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Firefox Developer on Linux</title>
      <author>Walter Nascimento</author>
      <pubDate>Tue, 02 Nov 2021 15:25:26 +0000</pubDate>
      <link>https://dev.to/walternascimentobarroso/firefox-developer-on-linux-31bo</link>
      <guid>https://dev.to/walternascimentobarroso/firefox-developer-on-linux-31bo</guid>
      <description>&lt;p&gt;&lt;a href="https://medium.com/walternascimentobarroso-pt/firefox-developer-no-linux-71a0295641a8"&gt;[Clique aqui para ler em português]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Firefox is one of the best open source browsers. Developed and maintained by Mozilla, it offers a simple interface and support for various plugins and extensions.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Firefox Developer Edition is the extremely fast browser that offers cutting-edge development tools and latest features&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#download"&gt;
  &lt;/a&gt;
  Download
&lt;/h2&gt;

&lt;p&gt;Para fazer o download do browser, acesse o link abaixo&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.mozilla.org/en-US/firefox/developer/"&gt;https://www.mozilla.org/en-US/firefox/developer/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When downloading comes a compressed file, by default a shortcut will not be created as it is just an extraction.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-icon"&gt;
  &lt;/a&gt;
  Creating the icon
&lt;/h2&gt;

&lt;p&gt;For the shortcut to be created follow the steps below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First extract the file into an easily accessible folder, in my case I like to put third-party programs in the &lt;code&gt;/opt&lt;/code&gt; folder
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo tar&lt;/span&gt; &lt;span class="nt"&gt;-jxvf&lt;/span&gt; firefox-94.0b9.tar.bz2 &lt;span class="nt"&gt;-C&lt;/span&gt; /opt/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create a shortcut to make the program easier to run;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo ln&lt;/span&gt; &lt;span class="nt"&gt;-sf&lt;/span&gt; /opt/firefox-developer/firefox /usr/bin/firefox-developer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Open the text editor and paste the code below
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;Desktop Entry]
&lt;span class="nv"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Firefox Developer
&lt;span class="nv"&gt;GenericName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Firefox Developer Edition
&lt;span class="nv"&gt;Exec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/opt/firefox-developer/firefox
&lt;span class="nv"&gt;Terminal&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false
&lt;/span&gt;&lt;span class="nv"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/opt/firefox-developer/browser/chrome/icons/default/default128.png
&lt;span class="nv"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Application
&lt;span class="nv"&gt;Categories&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Application&lt;span class="p"&gt;;&lt;/span&gt;Network&lt;span class="p"&gt;;&lt;/span&gt;X-Developer&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;Comment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Firefox Developer Edition Web Browser.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Save the file with the name of firefox-developer.desktop&lt;/li&gt;
&lt;li&gt;Now open the terminal and enter the commands below.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo chmod&lt;/span&gt; +x firefox-developer.desktopsudo &lt;span class="nb"&gt;mv &lt;/span&gt;firefox-developer.desktop /usr/share/applications
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;(optional) steps 3,4 and 5 summarized in one command.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="s1"&gt;'
[Desktop Entry]
Name=Firefox Developer
GenericName=Firefox Developer Edition
Exec=/opt/firefox-developer/firefox
Terminal=false
Icon=/opt/firefox-developer/browser/chrome/icons/default/default128.png
Type=Application
Categories=Application;Network;X-Developer;
Comment=Firefox Developer Edition Web Browser.
'&lt;/span&gt; | &lt;span class="nb"&gt;sudo tee&lt;/span&gt; /usr/share/applications/firefox-developer.desktop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now just look in the menu or type &lt;code&gt;firefox-developer&lt;/code&gt; in the terminal.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading!
&lt;/h2&gt;

&lt;p&gt;If you have any questions, complaints or tips, you can leave them here in the comments. I will be happy to answer!&lt;/p&gt;

&lt;p&gt;😊😊 See you! 😊😊&lt;/p&gt;

</description>
      <category>firefox</category>
      <category>linux</category>
      <category>developer</category>
      <category>browser</category>
    </item>
    <item>
      <title>Implementation Of Stacks Using Array In JAVA</title>
      <author>Gourav Kadu</author>
      <pubDate>Tue, 02 Nov 2021 15:20:58 +0000</pubDate>
      <link>https://dev.to/gouravmpk/implementation-of-stacks-using-array-in-java-599h</link>
      <guid>https://dev.to/gouravmpk/implementation-of-stacks-using-array-in-java-599h</guid>
      <description>&lt;h1&gt;
  &lt;a href="#statement"&gt;
  &lt;/a&gt;
  Statement
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;I created an Stack using array and created its Three Basic operations i.e. PUSH , POP and Top.&lt;br&gt;&lt;br&gt;
where PUSH is insertion operation.&lt;br&gt; POP is deletion operation. &lt;br&gt; Top just returns variable at top of stack. &lt;br&gt; I also added Logic of "Overflow" and "Underflow" state with some exception handling.&lt;br&gt;
The code is explained in details using comments .&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;To Tinker the inputs and check the operations&lt;/strong&gt;  &lt;a href="https://www.jdoodle.com/a/3XbY"&gt;Click Here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import java.util.*;

public class Template {
    static int max_size;
    static int top ;
    int temp;
    static int arr[];
    public void Stack(int size) {
         arr = new int[size];
         max_size = arr.length;
         top = -1;
    }

    public boolean empty() {          //checking if stack is empty .
        return temp  == -1;
    }

    public boolean full() {  //checking if stack is full .
        return top + 1 == max_size;
    }

    public void push(int Ip) { //PUSH operation 
        top++;
        try {                           //bit of exception handling while insertion/PUSH operation
            if(top &amp;gt;max_size) {
                throw new ArrayIndexOutOfBoundsException();       
            }
            else if(empty()|| top&amp;lt;=max_size) {
            arr[top] = Ip; 
            }
        } catch (ArrayIndexOutOfBoundsException e) {
            System.out.println("Stack overflow");
        }   
    }


    public void pop() {       // POP 
         temp = top;
    if(top &amp;gt; -1) {           // stop top from further decrementing if already -1,
        top--;              // if not it will interfere with push operation.
        }else { temp--;}        
    try {                       //bit of exception handling while deletion/POP operation
        if(temp &amp;lt; -1) throw new ArrayIndexOutOfBoundsException();
    }catch (ArrayIndexOutOfBoundsException e) {
            System.out.println("Stack underflow");  

    }
    }



    public static void main(String[] args)
    {

        Template t = new Template();
        t.Stack(4);
        t.push(6);
          System.out.println(arr[top]);
        t.pop(); // &amp;lt;--- 6 is removed from the stack so stack will be empty
        t.pop(); // &amp;lt;-- so removing element from empty stack will return UnderFlow
        t.push(101);
          System.out.println(arr[top]);
        t.push(10);
          System.out.println(arr[top]);
        t.push(112);   
          System.out.println(arr[top]);
        t.push(14); //&amp;lt;----- stack will be full at this point
          System.out.println(arr[top]);
        t.push(146); // so if you push anything it will print OverFlow

    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>java</category>
      <category>database</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>2 Ways to Improve your Node.js Application</title>
      <author>Dakota Lewallen</author>
      <pubDate>Tue, 02 Nov 2021 15:17:03 +0000</pubDate>
      <link>https://dev.to/therealdakotal/2-ways-to-improve-your-nodejs-application-1830</link>
      <guid>https://dev.to/therealdakotal/2-ways-to-improve-your-nodejs-application-1830</guid>
      <description>&lt;p&gt;Use &lt;code&gt;npm ci --production&lt;/code&gt;. Thanks for coming to my ted talk. 🎉&lt;/p&gt;

&lt;p&gt;Kinda kidding, but not really.&lt;/p&gt;

&lt;p&gt;For demonstration purposes, lets define a sample package.json, omitting some of the less important stuff.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"test project"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Our sample project"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"first-dep"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1.0.0"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So let's say you've been hard at work on this "test project" all morning working with the "first-dep" library. Unfortunately for you, "first-dep" released a minor version the night before, going up to "1.1.0" and breaking one of the API's you use. You run your test suite locally and everything is as green as grass. You push your code and &lt;strong&gt;egads batman&lt;/strong&gt; a bunch of tests are broken. You run your tests locally over and over again racking your brain for what's happening. So you push another change &lt;em&gt;just to see&lt;/em&gt; and watch the integration environment break again. So as is common practice in Node, you delete your local dependencies, reinstall and &lt;strong&gt;boom&lt;/strong&gt;. Tests are broken. &lt;em&gt;Finally.&lt;/em&gt; Now you go to source control provider to look for what's changed and you see a single change in your package.json&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;-    "first-dep": "1.0.0",
+    "first-dep": "1.1.0",
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The dreaded stealth patch. After some investigation, you discover that in your testing setup you run &lt;code&gt;npm install&lt;/code&gt;. Causing the version to get modified in that environments package.json before it was changed in yours. Now you've come to a cross roads. &lt;em&gt;Typically&lt;/em&gt; most updates your dependencies release don't directly affect your project and are fine to push through. But wait!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n8m81W0u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v59fq4qo8bwbrvtqjiq9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n8m81W0u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v59fq4qo8bwbrvtqjiq9.jpg" alt="There is another" width="640" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm ci&lt;/code&gt; stops this discussion dead in its tracks. Using &lt;em&gt;ci&lt;/em&gt; over &lt;em&gt;install&lt;/em&gt; in your build environments defends against this versioning mismatch. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;(npm) will never write to package.json or any of the package-locks: installs are essentially frozen. &lt;a href="https://docs.npmjs.com/cli/v7/commands/npm-ci#description"&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This brings us to the first usage improvement&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create highly reproducible builds of your dependencies&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As long as you haven't specified dependency changes, there shouldn't be any in your automated environments.&lt;/p&gt;

&lt;p&gt;What does this mean?&lt;/p&gt;

&lt;p&gt;Typically, when you run the command &lt;code&gt;npm install&lt;/code&gt;, you will have your dependencies installed, as well as some of your dependency versions updated if there are updates available. This can lead to some hard to find issues when running in an automated environment, similar to the one above.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Smaller production bundles&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Going back to our example package.json. Lets say we want to add typescript to our workflow. First thing you'll want to do is &lt;code&gt;npm install typescript&lt;/code&gt;. Now our package.json looks something like,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"first-dep"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"typescript"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^4.4.3"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But typescript isn't &lt;em&gt;required&lt;/em&gt; to run our application. Typescript is a build tool. So even though we're only using it some of the time, it will be included in our node_modules every time. Irregardless of what command we use to set them up. To address this, we should pass the "-D" flag when installing packages that aren't required to run our application in production. So now our command should look like &lt;code&gt;npm install -D typescript&lt;/code&gt;. Looking at our revised package.json, you should see something like,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"first-dep"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"devDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"typescript"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^4.4.3"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Awesome! But... typescript still shows up in node_modules when you run &lt;code&gt;npm ci&lt;/code&gt;. So it's great that we've started dividing our dependencies up between production and development, but the default behavior of &lt;em&gt;both&lt;/em&gt; install commands is to install &lt;em&gt;all&lt;/em&gt; dependencies. So we've got one more piece to this puzzle and that is the &lt;code&gt;--production&lt;/code&gt; flag. This instructs npm that we want to ignore all of the packages listed in devDependencies.&lt;/p&gt;

&lt;p&gt;So in short, if you're running your application in an automated environment (shared development servers, production, testing) make sure you setup your dependencies with the command &lt;code&gt;npm ci --production&lt;/code&gt;. And while you're working any time you install a dependency that is not directly required by your app, install it with the "-D" flag.&lt;/p&gt;




&lt;p&gt;Find me on &lt;a href="https://twitter.com/therealdakotal"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/dakota-lewallen/"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sponsor me on &lt;a href="https://github.com/iamflowz"&gt;Github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Like the article? &lt;a href="https://www.buymeacoffee.com/iamflowz"&gt;Buy me a coffee!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>node</category>
      <category>devops</category>
      <category>npm</category>
    </item>
    <item>
      <title>Your note-taking process</title>
      <author>scottshipp</author>
      <pubDate>Tue, 02 Nov 2021 15:13:23 +0000</pubDate>
      <link>https://dev.to/scottshipp/your-note-taking-process-d7g</link>
      <guid>https://dev.to/scottshipp/your-note-taking-process-d7g</guid>
      <description>&lt;p&gt;I detailed my own personal note-taking process in the &lt;a href="https://dev.to/scottshipp/my-note-taking-process-49pa"&gt;last article&lt;/a&gt;. It is unlikely that your note-taking needs will be met by the same tools or the same processes.&lt;/p&gt;

&lt;p&gt;I would now like to cover some other common use cases, and show how you might use other tools to build a process of your own.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-youre-not-a-heavy-terminal-user"&gt;
  &lt;/a&gt;
  When you're not a heavy terminal user
&lt;/h2&gt;

&lt;p&gt;Not everybody lives in a terminal and that's ok. Might the same approach still work within an IDE or a text editor?&lt;/p&gt;

&lt;p&gt;I actually have set up both of the main text editors I use, &lt;a href="https://www.jetbrains.com/idea/"&gt;IntelliJ IDEA&lt;/a&gt; and &lt;a href="https://macromates.com/"&gt;TextMate&lt;/a&gt;, with the same template that my &lt;a href="https://github.com/scottashipp/noted/"&gt;Noted cli&lt;/a&gt; uses to produce time-stamped note entries.&lt;/p&gt;

&lt;p&gt;My own reason for doing this is to double the goodness. If I happen to be in a terminal when I want to take a note, great! I just use &lt;em&gt;Noted&lt;/em&gt;. If I happen to be in one of my text editors and I want to take a note, great! I don't necessarily need to switch over to a terminal.&lt;/p&gt;

&lt;p&gt;Most text editors have some kind of templating / macro / snippet capability. In TextMate, I've set it up such that by typing "note" and then pressing the tab key, it produces a note entry, which as you recall looks something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
--------

07:07:51 Pacific

# 

--------

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The way to set that up is outlined in the manual, but it is surprisingly easier than you might think. The timestamp is the difficult part, and that is accomplished fairly easily. If you happen to use TextMate, here is the actual template text:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;--------
`date "+%H:%M:%S Pacific"`

# $0

--------
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The backticks just execute a shell command and capture the output. The &lt;code&gt;$0&lt;/code&gt; piece just instructs the editor to place your cursor there.&lt;/p&gt;

&lt;p&gt;In IntelliJ, the related feature is called &lt;a href="https://www.jetbrains.com/help/idea/2021.2/generate-custom-code-constructs-using-live-templates.html"&gt;live templates&lt;/a&gt; and you can make them do all kinds of wonderful things.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-you-have-add-adhd"&gt;
  &lt;/a&gt;
  When you have ADD / ADHD
&lt;/h2&gt;

&lt;p&gt;I know that many people adopt strategies like &lt;a href="https://dev.to/sumusiriwardana/a-simple-method-to-manage-your-work-effectively-4jmg"&gt;bullet journaling&lt;/a&gt; or the &lt;a href="https://davidseah.com/node/the-emergent-task-planner/"&gt;Emergent Task Planner&lt;/a&gt; to help them focus. These are surprisingly effective strategies to get things done.&lt;/p&gt;

&lt;p&gt;In either case, a paper notebook may actually be the best approach. Just because some tool isn't inside a computer doesn't remove it as an option! Sometimes the best tech pre-existed computers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-you-want-to-set-an-alarm"&gt;
  &lt;/a&gt;
  When you want to set an alarm
&lt;/h2&gt;

&lt;p&gt;You may want to remind yourself to do some task on some given date or time. Although there are plenty of great tools to do this, I find that most of them are rather heavy. Do you really need to run Outlook or the Mac Reminders app all the time just for this purpose?&lt;/p&gt;

&lt;p&gt;(There's nothing wrong with using either, though, if you already use them all the time.)&lt;/p&gt;

&lt;p&gt;For me, Slack becomes a good tool for such "alarms" or "reminders." You can set personal reminders by messaging Slackbot. Just open Slackbot's direct message and type &lt;code&gt;/remind help&lt;/code&gt; to see a bevy of options. Or &lt;a href="https://slack.com/help/articles/208423427-Set-a-reminder"&gt;read the help&lt;/a&gt;. Whatever works for you.&lt;/p&gt;

&lt;p&gt;On the other hand, Slack is a heavyweight tool itself. I wouldn't bet on Slack being open and running when I need to receive a critical reminder. Did you know there is something rather lightweight and built-in on macOS systems already?&lt;/p&gt;

&lt;p&gt;To set a reminder that you will always receive regardless of what you happen to have open at the time, you can use a &lt;a href="https://dev.to/kelvinvmwinuka/how-to-set-up-cronjobs-on-macos-523"&gt;cronjob&lt;/a&gt; to send a notification to yourself in the &lt;a href="https://support.apple.com/guide/mac-help/notification-center-mchl2fb1258f/mac"&gt;macOS Notification Center&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The only "difficult" part of this is deciding exactly how you want to send the notification to the notification center. You have many options including the two most common,  &lt;a href="https://dev.to/kelvinvmwinuka/how-to-set-up-cronjobs-on-macos-523"&gt;Growl&lt;/a&gt; and &lt;a href="https://github.com/julienXX/terminal-notifier"&gt;terminal-notifier&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-you-periodically-repeat-a-set-of-tasks"&gt;
  &lt;/a&gt;
  When you periodically repeat a set of tasks
&lt;/h2&gt;

&lt;p&gt;With all the automation in the world, there still tends to be quite a lot of daily or weekly tasks we do which in turn consist of a series of manual steps. I run into this frequently when some IT group thinks I shouldn't have API access to somewhere with data I need. I end up logging in through their GUI, downloading the data, importing it into some other tool, massaging it slightly, and then sharing it out.&lt;/p&gt;

&lt;p&gt;It's dumb but it's the reality.&lt;/p&gt;

&lt;p&gt;If you're the kind of person who likes to make sure you don't miss a step in such a process, then you need a step-by-step list that you can generate fresh each time and check off as you go. Actually, this also applies to you if the process in question doesn't happen very often (maybe it's monthly or quarterly) and involves some series of esoteric steps that you can't be bothered to hold in mind all the time.&lt;/p&gt;

&lt;p&gt;I have found that Markdown isn't great for this but it still works much better than other ways. So I build a very basic Markdown "snippet" or "live template" with the entire process, similar to:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- Step 1
- Step 2
- Step 3
- Step 4
- Step 5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I used to prepend some series of characters like &lt;code&gt;[X]&lt;/code&gt; whenever I had completed each step, but that experience is kind of meh. The better process seems to be to use strikeout to cross off each step when it is completed. This is usually represented with tildes, such as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- ~~Step 1~~
- ~~Step 2~~
- Step 3
- Step 4
- Step 5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I'm still looking for a better way to do this, actually. The macOS Reminders app can be useful because if you set up a separate list with the steps, and configure all the steps to repeat on the same frequency, you will receive them all at once, but, again, the Reminders app is not as portable and flexible as Markdown is, and configuring all of that is a pain.&lt;/p&gt;

&lt;p&gt;Someone really should work on making the equivalent of a paper pad where each sheet is the same template, items can be checked off, and starting on a new one is as easy as tearing off the top sheet.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-youre-a-visual-person"&gt;
  &lt;/a&gt;
  When you're a visual person
&lt;/h2&gt;

&lt;p&gt;I personally don't think you can beat a paper notebook when you are visual. And, frankly, a whiteboard isn't a bad idea either.&lt;/p&gt;

&lt;p&gt;I have a confession to make to close out this so far entirely digital diatribe. I still keep a &lt;a href="https://rhodiapads.com/explore_bullet_dot.php"&gt;dotted Rhodia Reverse Book&lt;/a&gt; by my side all day every day. If I don't have one of those nearby (but I always do), I have also been just fine with &lt;a href="https://duckduckgo.com/?q=engineer%27s+quadrille+pad&amp;amp;t=newext&amp;amp;atb=v288-1&amp;amp;ia=web"&gt;engineer's quadrille pads&lt;/a&gt; or I could make do in a pinch with a soft-skinned plain- or dot-papered Moleskine. I'm sure there's a reason that police detectives use vertically-spiralbound pads. Use what works.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;And that brings me to my final point. There are many options, and no single one of them is perfect for everyone. A customized approach seems to always work the best. &lt;/p&gt;

&lt;p&gt;I'd love to hear more from all of you about what you use. It's been great to read all the comments with even more recommendations than I have included. I have learned that the note-taking space is a thriving and diverse ecosystem that still has room to grow. As Bruce Lee once said:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Adapt what is useful, reject what is useless, and add what is specifically your own."&lt;br&gt;
—Bruce Lee&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
      <category>learning</category>
    </item>
    <item>
      <title>.NET MAUI — 7 Cool New features (+400ms Optimization Benchmark)🚀</title>
      <author>Dotnetsafer</author>
      <pubDate>Tue, 02 Nov 2021 14:58:08 +0000</pubDate>
      <link>https://dev.to/dotnetsafer/net-maui-7-cool-new-features-400ms-optimization-benchmark-3814</link>
      <guid>https://dev.to/dotnetsafer/net-maui-7-cool-new-features-400ms-optimization-benchmark-3814</guid>
      <description>&lt;p&gt;.NET MAUI is a new &lt;strong&gt;toolkit for building apps&lt;/strong&gt; that run on many different devices. People who use &lt;strong&gt;C#&lt;/strong&gt; and &lt;strong&gt;.NET&lt;/strong&gt; can use it to create cross-platform apps.&lt;/p&gt;

&lt;p&gt;It has new features including an easier UI design, rich set of controls, and easy data binding. There are &lt;strong&gt;7 new cool features&lt;/strong&gt; in the &lt;strong&gt;latest preview of .NET MAUI.&lt;/strong&gt; Let’s check it.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#imagebutton"&gt;
  &lt;/a&gt;
  ImageButton
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;ImageButton&lt;/code&gt; view can combine a Button and an Image into one button. When someone clicks the &lt;code&gt;ImageButton&lt;/code&gt;, it does something different than if they click a Button. It has no idea of what is written on the text and how it is displayed, as opposed to the Button view.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LZ7M_qni--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fe88kolxf4enbd15qyiv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LZ7M_qni--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fe88kolxf4enbd15qyiv.png" alt="ImageButton (By. Microsoft)" width="400" height="375"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#webview"&gt;
  &lt;/a&gt;
  WebView
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;WebView&lt;/code&gt; renders any online or embedded HTML material using the platform’s native browser control; suitable for displaying markup that is more complicated than the subset of HTML supported by &lt;code&gt;Label&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cNxp69m0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9i9hybs9e256f1f2xwgk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cNxp69m0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9i9hybs9e256f1f2xwgk.png" alt="New .NET MAUI WebView" width="400" height="372"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#boxview"&gt;
  &lt;/a&gt;
  BoxView
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;BoxView&lt;/code&gt; is a &lt;strong&gt;basic rectangle&lt;/strong&gt; with a given width, height, and color. It could be used for &lt;code&gt;BoxView&lt;/code&gt; decorating, basic graphics, and touch interaction with the user.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TIq9Ws7b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/moqn4m2k2u8v8ug8fhlm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TIq9Ws7b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/moqn4m2k2u8v8ug8fhlm.png" alt=".NET MAUI BoxView" width="800" height="400"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#indicatorview"&gt;
  &lt;/a&gt;
  IndicatorView
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;IndicatorView&lt;/code&gt; is a &lt;strong&gt;control&lt;/strong&gt; that shows indications in a &lt;code&gt;CarrouselView&lt;/code&gt; that reflect the number of items and the current position:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mIIaX67k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h493ao3nf9zrifjf9pnk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mIIaX67k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h493ao3nf9zrifjf9pnk.png" alt=".NET MAUI IndicatorView control" width="400" height="380"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#ecosystem-controls"&gt;
  &lt;/a&gt;
  Ecosystem Controls
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://community.devexpress.com/blogs/mobile/archive/2021/09/30/net-maui-free-early-access-preview-of-data-editors-and-more-for-mobile-development-v21-2.aspx"&gt;DevExpress&lt;/a&gt;, &lt;a href="https://www.syncfusion.com/blogs/post/introducing-the-first-set-of-syncfusion-net-maui-controls.aspx"&gt;Syncfusion&lt;/a&gt;, and &lt;a href="https://www.telerik.com/maui-ui"&gt;Telerik&lt;/a&gt; have all recently released new sets of controls for.NET MAUI that take use of Microsoft’s strong graphics capabilities. Maui.Graphics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rZoInAGW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v66ytfc21mcggbygq948.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rZoInAGW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v66ytfc21mcggbygq948.png" alt="New .NET MAUI Ecosystem Controls" width="700" height="203"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#shadows-corners-and-borders"&gt;
  &lt;/a&gt;
  Shadows, corners, and borders
&lt;/h2&gt;

&lt;p&gt;Here we have &lt;code&gt;Microsoft.Maui.Graphics&lt;/code&gt; library, that offers an &lt;strong&gt;uniform UI&lt;/strong&gt; drawing API based on native graphics engines, &lt;strong&gt;allowing&lt;/strong&gt; us to &lt;strong&gt;quickly add&lt;/strong&gt; borders, corner rendering, and gorgeous shadows to nearly any .NET MAUI layout or control.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Im5AI6s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky1bj0qz8lkkubzhkwz2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Im5AI6s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky1bj0qz8lkkubzhkwz2.png" alt="Corners and borders in .NET MAUI" width="703" height="202"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Microsoft offers a new &lt;code&gt;border&lt;/code&gt; control. It may be used to provide borders and individual corner management on any layout or control. This functionality is &lt;strong&gt;accessible&lt;/strong&gt; in &lt;strong&gt;WPF, UWP, Silverlight&lt;/strong&gt;, and the most recent &lt;strong&gt;Windows App SDK&lt;/strong&gt; templates.&lt;/p&gt;

&lt;p&gt;In this example, we can see how is used a &lt;strong&gt;border check&lt;/strong&gt; to wrap the counter label in order to round the &lt;strong&gt;top-left&lt;/strong&gt; and &lt;strong&gt;bottom-right&lt;/strong&gt; corners. This is an excellent choice for small business owners that are downsizing or wanting to create a more minimalist appearance on their new site.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Border&lt;/span&gt; 
    &lt;span class="n"&gt;Grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Row&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt;
    &lt;span class="n"&gt;Padding&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"16,8"&lt;/span&gt;
    &lt;span class="n"&gt;Stroke&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"{StaticResource PrimaryBrush}"&lt;/span&gt;
    &lt;span class="n"&gt;Background&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#2B0B98"&lt;/span&gt;
    &lt;span class="n"&gt;StrokeThickness&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"4"&lt;/span&gt;
    &lt;span class="n"&gt;HorizontalOptions&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Center"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Border&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StrokeShape&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;RoundRectangle&lt;/span&gt; &lt;span class="n"&gt;CornerRadius&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"40,0,0,40"&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Border&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StrokeShape&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt; 
        &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;".NET MAUI Preview: 9"&lt;/span&gt;                
        &lt;span class="n"&gt;FontSize&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"18"&lt;/span&gt;
        &lt;span class="n"&gt;FontAttributes&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Bold"&lt;/span&gt;
        &lt;span class="n"&gt;TextColor&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"White"&lt;/span&gt;
        &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"CounterLabel"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Border&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The specified shape’s corner radius accepts a &lt;code&gt;Thickness&lt;/code&gt; type value, allowing separate &lt;strong&gt;control&lt;/strong&gt; of each of the rectangle’s &lt;strong&gt;four corners:&lt;/strong&gt; bottom-left, bottom-right, top-left and top-right.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;border&lt;/code&gt; control can make your content wrap around. You can customize the background color and padding. There are more attributes that you can change, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;StrokeLineCap:&lt;/strong&gt; is a form that appears at the end of a line.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;StrokeDashOffset:&lt;/strong&gt; is the distance between the dots in the dash pattern.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;StrokeMiterLimit:&lt;/strong&gt; set the miter length ratio to half of the stroke thickness.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;StrokeLineJoin:&lt;/strong&gt; a type of vertices join.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;StrokeDashArray:&lt;/strong&gt; a dash and gap pattern in the stroke.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Are you ready to give your user interface some &lt;strong&gt;depth?&lt;/strong&gt; Any layout or control, including pictures and objects, can be given with &lt;code&gt;Shadow&lt;/code&gt; 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Shadow&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Shadow&lt;/span&gt; &lt;span class="n"&gt;Brush&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#000000"&lt;/span&gt; 
                &lt;span class="n"&gt;Offset&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"20,20"&lt;/span&gt;
                &lt;span class="n"&gt;Radius&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"40"&lt;/span&gt;
                &lt;span class="n"&gt;Opacity&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"0.8"&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Shadow&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZGOtOzjr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kcdh4lauhks84cbueozm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZGOtOzjr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kcdh4lauhks84cbueozm.png" alt="Shadows in .NET MAUI" width="880" height="803"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#android-quick-start"&gt;
  &lt;/a&gt;
  Android Quick Start
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Ahead-of-time (AOT)&lt;/strong&gt; compilation helps your Android application to code faster. If you’re trying to stay below the wifi installation bar, then full AOT may make your app’s artifacts larger than you want. Startup tracing is a solution in this case.&lt;/p&gt;

&lt;p&gt;You can &lt;strong&gt;balance performance and space&lt;/strong&gt; by only partially AOT’ing the parts of your program that run at startup&lt;/p&gt;

&lt;p&gt;The following are the &lt;strong&gt;results&lt;/strong&gt; of device testing on the &lt;strong&gt;Pixel 5:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tiwq60nG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6lizksxe0e5q85tfobvp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tiwq60nG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6lizksxe0e5q85tfobvp.png" alt="Test" width="592" height="274"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#400ms-benchmark"&gt;
  &lt;/a&gt;
  400ms benchmark
&lt;/h2&gt;

&lt;p&gt;Here we can see an &lt;strong&gt;incredible increase in the performance&lt;/strong&gt; made by &lt;a href="https://github.com/jonathanpeppers"&gt;Jonathan Peppers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;He found a &lt;strong&gt;systemic problem&lt;/strong&gt; with Xamarin.Android class libraries:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Include &lt;strong&gt;AndroidX&lt;/strong&gt; &amp;amp; &lt;strong&gt;Google Material&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Include at least one @(AndroidResource) and use the ID from C#&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Resource.designer.cs has &lt;strong&gt;2,700+ fields&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This problem compounds itself as you include more class libraries that depend on each other. The main app &lt;strong&gt;will end up&lt;/strong&gt; repeatedly setting these fields at startup for each library that contains fields in &lt;code&gt;Resource.designer.cs&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Reviewing the .NET MAUI fields, Jonathan Peppers found:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Core&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Debug&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;net6&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Resource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;designer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cs&lt;/span&gt;
&lt;span class="m"&gt;5310&lt;/span&gt;
&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Controls&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Core&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Debug&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;net6&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Resource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;designer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cs&lt;/span&gt;
&lt;span class="m"&gt;5167&lt;/span&gt; &lt;span class="n"&gt;fields&lt;/span&gt;
&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Controls&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Xaml&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Release&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;net6&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Resource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;designer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cs&lt;/span&gt;
&lt;span class="m"&gt;5167&lt;/span&gt; &lt;span class="n"&gt;fields&lt;/span&gt;
&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Compatibility&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Core&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Debug&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;net6&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Resource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;designer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cs&lt;/span&gt;
&lt;span class="m"&gt;5333&lt;/span&gt; &lt;span class="n"&gt;fields&lt;/span&gt;
&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Essentials&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Debug&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;net6&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Resource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;designer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cs&lt;/span&gt;
&lt;span class="m"&gt;204&lt;/span&gt; &lt;span class="n"&gt;fields&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;He found &lt;strong&gt;21,497 fields&lt;/strong&gt; were set at startup for a &lt;code&gt;dotnet new maui&lt;/code&gt; app in &lt;code&gt;Resource.designer.cs&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To solve this problem, he came up with a &lt;a href="https://github.com/jonathanpeppers/CustomResourceDesigner"&gt;new pattern&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;He only copy the contents of Resource.designer.cs and manually delete all the fields we don't need.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#results"&gt;
  &lt;/a&gt;
  Results
&lt;/h3&gt;

&lt;p&gt;Building a &lt;code&gt;dotnet new maui&lt;/code&gt; then &lt;code&gt;dotnet build -c Release&lt;/code&gt; and&lt;br&gt;
running on a Pixel 5.&lt;/p&gt;

&lt;p&gt;Before:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;21,497 fields&lt;/strong&gt; set at startup in &lt;code&gt;UpdateIdValues()&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Activity Displayed: &lt;strong&gt;1s454ms&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;.apk size: &lt;strong&gt;17300275 bytes&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;65 fields&lt;/strong&gt; set at startup in &lt;code&gt;UpdateIdValues()&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Activity Displayed: &lt;strong&gt;1s079ms&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;.apk size: &lt;strong&gt;16677683 bytes&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can check the benchmark at &lt;a href="https://github.com/dotnet/maui/pull/2606"&gt;GitHub&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The news and features of.NET MAUI are numerous; however, the most of them have yet to be properly utilized, and we will have to wait for Microsoft to explore them in depth in the not-too-distant future.&lt;/p&gt;

&lt;p&gt;If you liked this article, don’t forget to FOLLOW US, so that you can be one of the first to read what’s new in .NET.&lt;/p&gt;

&lt;p&gt;And if you are reading this, it means that you belong to the &lt;strong&gt;1% of the people&lt;/strong&gt; who read the articles UNTIL THE END, tell me how many coffees ☕ you need per day to continue programming, if I see many coffees ☕ I will not feel alone and &lt;strong&gt;you will make my day!!!&lt;/strong&gt; 😃👍&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nTBUsnr6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/vog34yj.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nTBUsnr6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/vog34yj.gif" alt="a" width="500" height="250"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>csharp</category>
      <category>dotnet</category>
      <category>netcore</category>
      <category>netmaui</category>
    </item>
    <item>
      <title>Key Principles To Build an Eye-Catching Design System (+ Best Examples)</title>
      <author>TechMagic</author>
      <pubDate>Tue, 02 Nov 2021 14:51:30 +0000</pubDate>
      <link>https://dev.to/techmagic/key-principles-to-build-an-eye-catching-design-system-best-examples-5aop</link>
      <guid>https://dev.to/techmagic/key-principles-to-build-an-eye-catching-design-system-best-examples-5aop</guid>
      <description>&lt;p&gt;In this article, you can discover tips on how to build a design system for your software product and explore the best design system examples.&lt;/p&gt;

&lt;p&gt;A well-thought-out design system facilitates the work of development and design teams and opens the door to cooperation as one mechanism. One that includes every detail, from the buttons to entire pages, helps to reach the goal faster, dramatically saves time and other resources.&lt;/p&gt;

&lt;p&gt;This article explains in simple words what it is and how to build a design system, why it shouldn't be considered as a guide or a brand book, why companies need it, how to use them, and what are the best cases to take as examples.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-design-system"&gt;
  &lt;/a&gt;
  What is a Design System?
&lt;/h2&gt;

&lt;p&gt;In a nutshell, a design system is a collection of documents, articles, code snippets, screenshots, guidelines, components, and other digital assets that product companies use. It's usually hosted online as a website and can be open for everyone or internal.&lt;/p&gt;

&lt;p&gt;A design system is an extensive database broken into categories: documentation, visual elements, recommendations, and references. It can and should be scaled, improved, and supplemented with new components.&lt;/p&gt;

&lt;p&gt;If it still sounds like the usual guideline to you, we'll debunk this idea right away. The style guide includes tips or tricks for visual design: color, font, logo, and more. The design system, in turn, consists of much more. Here we can find recommendations for style, tone of voice, brand positioning, bits of advice for collaborations, and advertising. One of the main principles of the design system is being holistic and covering every single detail.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#design-system-development-main-steps"&gt;
  &lt;/a&gt;
  Design System Development: Main Steps
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TKph84q---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-00.-Design-System.-Main-Steps-%402x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TKph84q---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-00.-Design-System.-Main-Steps-%402x.png" alt="main step to create design system" width="880" height="361"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The design system creation process differs for each company since there are influencing factors: the presence of the system design being or used to be in use, variety of elements, their types, etc. The design system for startups will differ from the one for enterprises. These factors, in turn, rely on business characteristics and objectives.&lt;/p&gt;

&lt;p&gt;If we try to generalize, the process of creating a design system can be divided into four main stages: visual audit, design language development, pattern library creation, maintenance, and support.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#visual-audit"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Visual Audit&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Before going to elements, you start building a design system with careful analysis of the data you already have. Clearly define the objectives of every element, its role. Most likely, you'll come up with ones related to interface, style, documentation, etc.&lt;/p&gt;

&lt;p&gt;If you need a design system for an existing product, start collecting and grouping all the current components. First of all, it will give you a base and a place to start, and secondly, the chance to understand what to delete, what to modify, and what should be considered a piece of crucial information.&lt;/p&gt;

&lt;p&gt;All these decisions are matched against available resources and goals.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#visual-design-language-system-creation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Visual Design Language System Creation&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Here we are talking about everything concerning the visible part of the product: colour, graphics, typography, etc. Let's walk through the main ones in more detail.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Colour&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Describe the colour scheme, and determine the primary and secondary colours, including all their shades and hues. Prescribe which of them should be used for which element.&lt;/p&gt;

&lt;p&gt;Pay extra attention to the contrast since it copes with highlighting every single element, helps to group them and improves the user experience.&lt;/p&gt;

&lt;p&gt;This section will and should be supplemented and slightly changed; you'll add new elements since the product will scale. And using a design system will significantly improve UI / UX and speed up the work.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Typography&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Typography is a critical element of any design system. This section includes name, size, height, colour, weight, spacing, etc. Indicate which typography needs to be applied to the specific elements and whether it matches their purpose. Nothing helps to set the accents better.&lt;/p&gt;

&lt;p&gt;When considering fonts, remember their purpose - to maintain a hierarchy of elements, distinct accents, carry information in the correct sequence, and preserve and enhance the recognizability of the product.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Sizing and Arrangement&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here we work with the placement of all elements, indents, alignment, lines, white space, etc. Proper arrangement significantly affects the UX and, subsequently, the achievement of the aims and goals of the website and the product itself.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Graphics&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Describe in detail all graphic elements: size, proportions, recommendations and prescriptions, messages they should broadcast, and so on.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;The best thing about having the design system is that the developer works with components. And if there is the need to change all similar ones, a color of some button, for example, there's no need to do this manipulation with every single button. You change one, and all related components will be changed in a matter of a few clicks.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#library-creation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Library Creation&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Having this done, you can create the library itself. Start with cutting extra details and elements, combine all collected and generated information and materials, and draw conclusions. Pay attention to the following to-dos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Notify developers.&lt;/strong&gt;  All of them who work or will work with the library need to know about the update immediately. Everyone should be aware of even the most minor changes; they can significantly impact their work.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Share the library with all developers.&lt;/strong&gt;  When needed, any employee should use the library and find or check the required information.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Convert elements into code.&lt;/strong&gt;  This will significantly speed up the work of developers and contribute to the further growth of the product. As it's been said, tens and hundreds of elements can be changed in parallel if you work with a design system.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Write a detailed explanation&lt;/strong&gt;. It applies to the design system as a whole and every single element. Ensure the primary function - to simplify and speed up the work - is achieved. This information will also be helpful during the onboarding of new employees.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#main-mistakes-in-design-system-development"&gt;
  &lt;/a&gt;
  Main Mistakes in Design System Development
&lt;/h2&gt;

&lt;p&gt;A well-thought-out and accurately created design system work as a bridge between designers and developers, linking them and facilitating their work. Nonetheless, even knowing how to build a design system, there are some mistakes commonly made. The most problems appear when creators:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Make a system too complicated.&lt;/strong&gt;  The better option is to focus on scalability since small and simple elements can be folded into more complex ecosystems. Once created with this approach, a design system becomes easy to work with. And, logically, the chances of using a maximum number of elements become greater.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Focus on elements but not their mission.&lt;/strong&gt;  As it's been said, the point of creating a design system is not just having it but applying it to work; it’s one of the design system principles. Detailed explanations, descriptions, and tutorials are necessary.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ignore feedback.&lt;/strong&gt;  No one knows better what the design system should look like and work like than people that use it. Get feedback and recommendations, use them in the next iteration. Every time questions or doubts arise - catch up with the developers and designers.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ignore basic principles of design.&lt;/strong&gt;  Arrange the meeting, define and write them down, dividing them into short-term and long-term perspectives, vital and optional, etc. Thus, you'll have pillars holding your design system and the basis for future work.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-best-design-systems"&gt;
  &lt;/a&gt;
  The best design systems
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. Google Material Design System&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Alongside Amazon, Apple, and Microsoft, Google is one of the Big Four technology companies. In many fields, it's a synonym of high quality and excellent organization of processes.&lt;/p&gt;

&lt;p&gt;Their publicly shared  &lt;a href="https://material.io/design"&gt;Material Design System&lt;/a&gt;  also illustrates the exceptional attention to detail: categorized and catalogued components in a way the design world has never seen before. They gave order and meaning to the atomic design principles that all design systems are built on today.&lt;/p&gt;

&lt;p&gt;Their main goal was to create a visual language that would mix the classic principles of good design with technology and science innovations. Material Design System's main features are layout, colour, typography, components, material theming, design source files, and more. You can easily download files for design software like Sketch and Figma.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ocI-ZgpR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-01.-Design-System.-Google-Material%402x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ocI-ZgpR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-01.-Design-System.-Google-Material%402x.png" alt="google material design system" width="880" height="361"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Apple Human Interface Guidelines&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Elegant and recognizable design is what we love Apple for and what makes people want every new "iAnything" before it was launched.  &lt;a href="https://developer.apple.com/design/human-interface-guidelines/"&gt;Apple's Human Interface Guideline&lt;/a&gt;  is an incredible resource full of downloadable templates, elements and UI design principles that you can use in your projects.&lt;/p&gt;

&lt;p&gt;Apple Human Interface Guidelines features best practices, numerous guidelines for developers, designers, and distributors. You can easily download a wide variety of resources and tools and use them in your work. Those are design files, mockups, code snippets, references, and how-tos. It could change your digital visions dramatically.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pp5M6M0E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-02.-Design-System.-Apple-Human-Interface-Guidelines%402x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pp5M6M0E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-02.-Design-System.-Apple-Human-Interface-Guidelines%402x.png" alt="apple human interface guidelines" width="880" height="361"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Uber Design System&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Uber is a worldwide known taxi (and not only) service and a part of the gig economy, which means it's working for both passengers and drivers. Uber offers services that include point-to-point ridesharing, ride-service hailing, food delivery (Uber Eats), passenger transport (Uber Shuttle), and a micro-mobility network with electric bikes and scooters.&lt;/p&gt;

&lt;p&gt;From the very beginning and to the whole, Uber is all about giving people an opportunity to get to the needed place fast and smoothly. Striving to comfort is easy to read in every element of their design system and its concept.  &lt;a href="https://eng.uber.com/introducing-base-web/"&gt;Uber Design System&lt;/a&gt;  BaseWeb includes brand architecture, visual components, tone of voice, composition, and other features.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JmR5PJOG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-03.-Design-System.-Uber%402x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JmR5PJOG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-03.-Design-System.-Uber%402x.png" alt="uber design system" width="880" height="361"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Shopify Polaris&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Shopify is a worldwide known all-in-one e-commerce platform created to help people start, run, and grow businesses. As we write, it powers  &lt;a href="https://www.nasdaq.com/articles/shopify-just-made-a-huge-move-to-boost-its-international-sales-2021-09-26"&gt;over a million firms worldwide&lt;/a&gt;. It applies to companies of all sizes and doesn't have any field or industry limits.&lt;/p&gt;

&lt;p&gt;At Shopify, they believe there is a lot of space for fantasy and work to make commerce more convenient and accessible to people and businesses. They aim to help everyone achieve independence by making starting, running, and growing a business as easy as possible. As they say, they constantly work on recharging their users' trust batteries and want people to feel comfortable using their products, whether it's their first experience or hundredth.&lt;/p&gt;

&lt;p&gt;The easiest way to benefit from  &lt;a href="https://polaris.shopify.com/"&gt;Shopify's design system&lt;/a&gt;  is to use it as a practical guide that helps you understand how to design specifically for the Shopify platform. Moreover, it grants knowledge and inspiration for using language, content, visual elements, and UI components. Having and using this, you deliver better product experiences for any eCommerce-related project. Shopify Design System itself is an example of a beautiful design.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wItskFBg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-04.-Design-System.-Shopify-Polaris%402x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wItskFBg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-04.-Design-System.-Shopify-Polaris%402x.png" alt="shopify polaris design system" width="880" height="361"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Salesforce Lightning Design System&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Salesforce pioneered cloud-based CRM software and has helped over 150,000 companies run effectively and smoothly. They deliver personalized experiences through integrated CRM systems enhancing marketing, sales, and service.&lt;/p&gt;

&lt;p&gt;The  &lt;a href="https://www.lightningdesignsystem.com/"&gt;Salesforce Lightning Design System&lt;/a&gt;  is a great one to take as an example if you work on content management systems, AI, sales, commerce, or analytics platforms development. This design system is all about improving user experience, interactions, and flows. The main features are essential, but what catches the attention is a massive number of small components, which means constant improvement and attention to details, even the tiniest.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HSmcOA5M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-05.-Design-System.-Salesforce-Lightning%402x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HSmcOA5M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-05.-Design-System.-Salesforce-Lightning%402x.png" alt="salesforce lightning design system" width="880" height="361"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final thoughts
&lt;/h2&gt;

&lt;p&gt;Work on the design system always remains ongoing. According to new demands, trends, and feedback from designers, developers, and users, the UX design system and the UI design system includes constant improvement, adjustment, and supplementation. But once implemented, it sets the course and puts limitations within this course. That is why a solid and development-oriented design system should be scalable and grow together with the product.&lt;/p&gt;

&lt;p&gt;Each page, screen, component, and element have a unique purpose and goal you can't neglect. A design system describes principles and approaches to design and development supporting and massively impacting the overall product mission. It's not the most effortless work, but the benefits for your teamwork and the product delivery become apparent from the first use.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>เขียน Go ต่อ Oauth ทุกค่าย</title>
      <author>Pallat Anchaleechamaikorn</author>
      <pubDate>Tue, 02 Nov 2021 14:48:12 +0000</pubDate>
      <link>https://dev.to/pallat/ekhiiyn-go-t-oauth-thukkhaay-4glj</link>
      <guid>https://dev.to/pallat/ekhiiyn-go-t-oauth-thukkhaay-4glj</guid>
      <description>&lt;p&gt;ก่อนหน้านี้เคยสงสัยว่าเวลาไปเขียน Frontend มันจะมี lib ให้ไปยิง Oauth2 กับ Facebook ง่ายๆเลย แล้วถ้าจะเขียนด้วย Go มันจะมี lib ง่ายๆแบบนั้นบ้างไหม&lt;/p&gt;

&lt;p&gt;วันนี้ก็หาเจอละครับ มันคือเจ้าตัวนี้ github.com/markbates/goth&lt;/p&gt;

&lt;p&gt;โดยในหน้า git จะมีบอกว่ามี example ให้ดูด้วยนะ &lt;a href="https://github.com/markbates/goth/blob/v1.68.0/examples"&gt;https://github.com/markbates/goth/blob/v1.68.0/examples&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;พอเปิดเข้าไปดู โอ้โห ตัวอย่างมันต่อทุกค่ายเลย ผมก็เลยทดลอง Facebook โดยวิธีลองก็แสนจะง่าย ก็ copy เจ้า example มาทั้งไฟล์เลย ซึ่งมันมีแค่ไฟล์เดียวคือ main.go&lt;/p&gt;

&lt;p&gt;จากนั้น สิ่งที่มันต้องการก็คือ Facebook App ID กับ App Secret โดยให้เอาไปใส่ในค่า env แบบนี้&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;FACEBOOK_KEY&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;Facebook App ID&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;FACEBOOK_SECRET&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;App Secret&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;SESSION_SECRET&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;123
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ค่า SESSION_SECRET ใส่อะไรลงไปก็ได้&lt;br&gt;
ส่วนที่หน้า Facebook for Developers ก็ให้ตรวจสอบค่า&lt;/p&gt;

&lt;p&gt;App Authentication ว่าอย่าให้มันเป็น Native or desktop app?&lt;/p&gt;

&lt;p&gt;จากนั้นก็&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;go run main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;เสร็จแล้วมันจะ serve ที่ port :3000 บนเครื่องเรา ก็ทดลองเปิด&lt;/p&gt;

&lt;p&gt;&lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;จากนั้นก็ไปลองกด Login with Facebook ดูโลด&lt;/p&gt;

&lt;p&gt;จบการทดลอง&lt;/p&gt;

</description>
      <category>go</category>
    </item>
    <item>
      <title>HTTPS Domain Forwarding for Free via Netlify</title>
      <author>Alvin Lim</author>
      <pubDate>Tue, 02 Nov 2021 14:39:09 +0000</pubDate>
      <link>https://dev.to/alvinqingxing/https-domain-forwarding-for-free-via-netlify-2dha</link>
      <guid>https://dev.to/alvinqingxing/https-domain-forwarding-for-free-via-netlify-2dha</guid>
      <description>&lt;p&gt;This evening GoDaddy reminded me of an unused personal domain, &lt;code&gt;alvinlim-writer.com&lt;/code&gt;, which is due to expire late next year. Several years ago I had used it for my personal website, and it still appears as a search result on Google. As such I decided to forward this domain to my current website &lt;a href="https://alvinlim.dev"&gt;alvinlim.dev&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I had previously done this with another domain via &lt;a href="https://dev.to/alvinqingxing/https-domain-forwarding-for-free-via-github-pages-bf6"&gt;GitHub Pages&lt;/a&gt;, but this time I decided to go with Netlify as I suspected doing so would be easier.&lt;/p&gt;

&lt;p&gt;So first I created a bare bones &lt;code&gt;index.html&lt;/code&gt; file containing a meta refresh tag that would load my target URL:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv="refresh" content="0; URL=https://alvinlim.dev"&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then in Netlify I deployed this &lt;code&gt;index.html&lt;/code&gt; file as a running website. Usually I deploy projects to Netlify by connecting to the appropriate repo on GitHub, but for this I just clicked the &lt;code&gt;Sites&lt;/code&gt; tab and dragged and dropped the folder containing the &lt;code&gt;index.html&lt;/code&gt; file into the following button:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WR8CpI6q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/opojtof0c9ceftkaieoq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WR8CpI6q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/opojtof0c9ceftkaieoq.png" alt="Folder upload button on Netlify" width="550" height="145"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the &lt;code&gt;index.html&lt;/code&gt; file was deployed as an active website -- just a few seconds later -- Netlify gave me the option to set up a custom domain for this website. This was my opportunity to connect my old domain &lt;code&gt;alvinlim-writer.com&lt;/code&gt; to this &lt;code&gt;index.html&lt;/code&gt; file which would automatically redirect the user to my current website &lt;a href="https://alvinlim.dev"&gt;alvinlim.dev&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To set up this custom domain, Netlify gave me the A and CNAME records that I would need to set up in my domain name registrar, in this case, GoDaddy. In GoDaddy, I set up the Netlify A and CNAME records in my &lt;code&gt;alvinlim-writer.com&lt;/code&gt; management panel, and almost immediately the URL pointed to the website I had set up in Netlify! Which meant typing &lt;a href="https://alvinlim-writer.com"&gt;alvinlim-writer.com&lt;/a&gt; in the browser would automatically redirect you to &lt;a href="https://alvinlim.dev"&gt;alvinlim.dev&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;From my recollection, setting this up on Netlify was much easier than doing the same on GitHub Pages. Having said that, setting up HTTPS domain forwarding on &lt;a href="https://dev.to/alvinqingxing/https-domain-forwarding-for-free-via-github-pages-bf6"&gt;GitHub Pages&lt;/a&gt; can't be described as a difficult task either!&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Working Backwards  </title>
      <author>Dahye Ji</author>
      <pubDate>Tue, 02 Nov 2021 14:36:50 +0000</pubDate>
      <link>https://dev.to/daaahailey/working-backwards-4kkl</link>
      <guid>https://dev.to/daaahailey/working-backwards-4kkl</guid>
      <description>&lt;p&gt;It was a workshop day today and the person who held the workshop is our mentor till the end of the course. We will have sprints every two weeks and will get our feedbacks as well.&lt;/p&gt;

&lt;p&gt;We talked about &lt;strong&gt;&lt;em&gt;what's good portfolio&lt;/em&gt;&lt;/strong&gt; today but instead of him giving us guidelines or examples, we learnt to think it through ourselves by brainstorming and adding each others thoughts into it.&lt;br&gt;
So, the method we used today was &lt;em&gt;&lt;u&gt;working backwards&lt;/u&gt;&lt;/em&gt;. We did not talked about portfolio straight away but instead, we shared our opinions about what would make a good portfolio, what kind of skills or abilities we would like to get at the end of course, what we would like to show in our portfolios and to do that, what we need to do.&lt;/p&gt;

&lt;p&gt;Through the session today, I realised that I am not used to planning things &lt;strong&gt;in detail&lt;/strong&gt;. I heard and read other people's plans and also what kind of skills they wanted to have.&lt;br&gt;
Some of the most wanted skills were being good at communication not only being good at programming. So, to work better with other people, what can we do?&lt;br&gt;
We can be open minded, listen carefully what other people say. Be respectful. We can give feedbacks to each others when working together and find out what we are good or bad at, maybe try to improve our weaknesses. We will be also working with people who are not developers or people don't have enough knowledge in tech as developers sometimes. So, it would be also great if we can explain technical things in easier way.&lt;/p&gt;

&lt;p&gt;At the workshop, we were teamed up with about five people and exchanged our thoughts, made checklist and then shared those with whole members of bootcamp.&lt;br&gt;
First, we chose three skills/abilities we wanted to have and made checklist that will help us to get those skillset.&lt;br&gt;
These are  I wanted to have and who I wanted to be.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A developer who grows constantly and have programming knowledge required for junior developer.&lt;/li&gt;
&lt;li&gt;Experience working with TDD(Test Driven Development) and be comfortable with it.&lt;/li&gt;
&lt;li&gt;A developer can think from user's perspective(+ Be a person that many people want to work with)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So for the first one, I wrote those.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Have a time to review things I've newly learnt&lt;/li&gt;
&lt;li&gt;Try to write code with things I've learnt, make anything even for small feature or function.&lt;/li&gt;
&lt;li&gt;Record daily what I've learnt on my blog. Make it as a routine/habit.&lt;/li&gt;
&lt;li&gt;Stop procrastinating.&lt;/li&gt;
&lt;li&gt;Read more of official documents (This also will help me to learn English since my first language isn't English)&lt;/li&gt;
&lt;li&gt;Do clone coding (services or websites that I think that are interesting or things I like.) &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For the second one,&lt;br&gt;
I chose this because I tried to apply for dev jobs and I've asked if I have experiences in TDD which I don't yet.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Learn about TDD.&lt;/li&gt;
&lt;li&gt;Learn about Jest.&lt;/li&gt;
&lt;li&gt;Try to write test code even for small part then gradually increase the amount of it.&lt;/li&gt;
&lt;li&gt;Write down what I've learnt, make my own document so that other people can also learn from it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and for the last one,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Read more books.&lt;/li&gt;
&lt;li&gt;Try to practice explaining technical things in easy way&lt;/li&gt;
&lt;li&gt;Learn good communication skills&lt;/li&gt;
&lt;li&gt;Make opportunities to work with many people not only programmers but possibly with designers, marketers and etc&lt;/li&gt;
&lt;li&gt;Ask for feedbacks and improve myself.&lt;/li&gt;
&lt;li&gt;Try to use lots of different services and see what's good or bad. See if there are anything that I can make them better. (Try to think it as an user)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These were what my team and I wrote but to continue working on it everyday, these might be too much. So we tried to make it as simple as possible and &lt;strong&gt;&lt;em&gt;doable&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;What I came up with at the end are these!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Review and record what I've learnt everyday(Mon-Fri) on my blog which is this where I am writing right now.&lt;/li&gt;
&lt;li&gt;Write code using things I've learnt. Also do this course &lt;a href="https://fullstackopen.com/"&gt;https://fullstackopen.com/&lt;/a&gt; (try to do it one each day)&lt;/li&gt;
&lt;li&gt;Make a plan for group project(gaining experience working with other people), Contribute to open source project!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;First thing is what I must do, second and third are lists that I would like to do as much as possible. We will check these again at the next sprint and will revise plans when it's needed.&lt;/p&gt;

&lt;p&gt;It was great time for me and I thought about my planning a lot and learnt how I can improve. I think I can make my own roadmap in this way as well. I can't wait till the next sprint and will try my best to do what I planned 😊&lt;/p&gt;

</description>
      <category>workingbackwards</category>
      <category>portfolio</category>
      <category>planning</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
