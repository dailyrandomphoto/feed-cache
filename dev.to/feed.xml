<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Implement Chain of Responsibility/Commands in C# Using ChainRunner</title>
      <author>Mohammad Shafie-Zadeh</author>
      <pubDate>Wed, 16 Jun 2021 20:24:33 +0000</pubDate>
      <link>https://dev.to/litenova/implement-chain-of-responsibility-commands-in-c-using-chainrunner-2420</link>
      <guid>https://dev.to/litenova/implement-chain-of-responsibility-commands-in-c-using-chainrunner-2420</guid>
      <description>&lt;p&gt;I have been working on an ASP.NET Core Web API application which is responsible for users' comments. This application needs to reject or censor new comments based on multiple business criteria. In simple words, each new comment must go through the following steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Censor curse words&lt;/li&gt;
&lt;li&gt;Modify incorrect words&lt;/li&gt;
&lt;li&gt;Reject if it has improper tone&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The steps are not that complex and must be executed sequentially. To implement these steps, I decided to go for &lt;a href="https://refactoring.guru/design-patterns/chain-of-responsibility"&gt;chain of responsibility pattern&lt;/a&gt;. However, I could not find a simple and proper library to implement this pattern so I created a library called &lt;a href="https://github.com/litenova/ChainRunner"&gt;ChainRunner&lt;/a&gt; to make all this work.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wVxMqRt8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rdd21e32wmd4nx7is0tg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wVxMqRt8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rdd21e32wmd4nx7is0tg.jpg" alt="ChainRunner Schema"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This picture depicts how ChainRunner works&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h2&gt;

&lt;p&gt;For each step I created a responsibility handler:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CensorCurseWordsHandler&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IResponsibilityHandler&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Comment&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;HandleAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Comment&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CancellationToken&lt;/span&gt; &lt;span class="n"&gt;cancellationToken&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// process comment ...&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ModifyIncorrectWordsHandler&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IResponsibilityHandler&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Comment&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;HandleAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Comment&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CancellationToken&lt;/span&gt; &lt;span class="n"&gt;cancellationToken&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// process comment ...&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ImproperToneHandler&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IResponsibilityHandler&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Comment&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;HandleAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Comment&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CancellationToken&lt;/span&gt; &lt;span class="n"&gt;cancellationToken&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// process comment ...&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, I configured the chain in startup:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddChain&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Comment&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WithHandler&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;CensorCurseWordsHandler&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WithHandler&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ModifyIncorrectWordsHandler&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WithHandler&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ImproperToneHandler&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, I injected the chain into my class and ran the chain like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ApiController&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"[controller]"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CommentController&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;IChain&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Comment&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_chain&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;CommentController&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IChain&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Comment&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;chain&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;_chain&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;chain&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;HttpPost&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Comment&lt;/span&gt; &lt;span class="n"&gt;comment&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_chain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;RunAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;comment&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/litenova/ChainRunner"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nuget.org/packages/ChainRunner"&gt;NuGet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>csharp</category>
      <category>chainofresponsibility</category>
      <category>chainofcommands</category>
    </item>
    <item>
      <title>Make Fathom Analytics work with Turbolinks / Turbo in your Rails project</title>
      <author>rinas</author>
      <pubDate>Wed, 16 Jun 2021 19:45:38 +0000</pubDate>
      <link>https://dev.to/onerinas/make-fathom-analytics-work-with-turbolinks-turbo-in-your-rails-project-2d2i</link>
      <guid>https://dev.to/onerinas/make-fathom-analytics-work-with-turbolinks-turbo-in-your-rails-project-2d2i</guid>
      <description>&lt;p&gt;If you have Turbolinks or Turbo in your Rails project, only the first page view would be counted and tracked by Fathom Analytics. Here is how you can make use of &lt;code&gt;load&lt;/code&gt; event to track the page views.&lt;/p&gt;

&lt;p&gt;For turbolinks:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;turbolinks:load&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fathom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fathom&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trackPageview&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For turbo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;turbo:load&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fathom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fathom&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trackPageview&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;I had recently confirmed the same with Fathom team:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ljoyAUA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/ExlA-x5UUAgK3rN.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ldVVmSRi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1405208648536657921/ZQAgfiIq_normal.png" alt="rinas 🧑‍💻 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        rinas 🧑‍💻
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/onerinas"&gt;@onerinas&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/usefathom"&gt;@usefathom&lt;/a&gt; I'm using Turbolinks and after navigating to another page, it doesn't get updated in the dashboard. After having a look at the script.js, came up with the solution below. Anything else to do other than this?&lt;br&gt;cc &lt;a href="https://twitter.com/JackEllis"&gt;@JackEllis&lt;/a&gt; / &lt;a href="https://twitter.com/pjrvs"&gt;@pjrvs&lt;/a&gt;&lt;br&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:27 PM - 28 Mar 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1376209437094895620" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1376209437094895620" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1376209437094895620" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
&lt;br&gt;
and looks like this is the way to go:&lt;br&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--3ZipmTYE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1341510067238006784/5oV_bWrr_normal.jpg" alt="Fathom Analytics profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Fathom Analytics
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @usefathom
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/onerinas"&gt;@onerinas&lt;/a&gt; &lt;a href="https://twitter.com/JackEllis"&gt;@JackEllis&lt;/a&gt; &lt;a href="https://twitter.com/pjrvs"&gt;@pjrvs&lt;/a&gt; Because turbolinks runs its own events, this is the way we typically recommend. I don’t think the spa option works with turbolinks. - Jack
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:33 PM - 28 Mar 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1376210757218562053" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1376210757218562053" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1376210757218562053" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


</description>
      <category>rails</category>
      <category>analytics</category>
      <category>turbolinks</category>
    </item>
    <item>
      <title>Reasons why Django is the best web framework</title>
      <author>Nishant Mittal</author>
      <pubDate>Wed, 16 Jun 2021 19:35:45 +0000</pubDate>
      <link>https://dev.to/nishantwrp/reasons-why-django-is-the-best-web-framework-3f4h</link>
      <guid>https://dev.to/nishantwrp/reasons-why-django-is-the-best-web-framework-3f4h</guid>
      <description>&lt;p&gt;Choosing a web framework is hard especially now when there are a lot of frameworks on the market, each designed to address different project needs. Here is why I think that Django is the best choice in most cases.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-django"&gt;
  &lt;/a&gt;
  What is Django?
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Django - The web framework for perfectionists with deadlines.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt; is an open source and powerful web framework written in Python that encourages rapid development and clean, pragmatic design. It takes care of much of the hassle of Web development, so you can focus on writing your app without needing to reinvent the wheel.&lt;/p&gt;

&lt;p&gt;It is being used by a lot of companies including &lt;em&gt;Instagram, Pinterest, Spotify, Disqus, Dropbox, Mozilla, Reddit&lt;/em&gt; which makes it obvious that the applications built with this framework are &lt;strong&gt;exceedingly scalable&lt;/strong&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-can-you-do-with-django"&gt;
  &lt;/a&gt;
  What can you do with Django?
&lt;/h1&gt;

&lt;p&gt;If you are a beginner, you'll love the approach the platform takes for making web development easier. If you want to make robust web apps with a minimal amount of coding, you will appreciate what Django framework has to offer.&lt;/p&gt;

&lt;p&gt;You can do anything web-based using Django. From building e-commerce systems, CRM Systems, Email Systems to developing a REST/GraphQL based API server for your frontend application there's nothing that you can't do using Django.&lt;/p&gt;

&lt;p&gt;The most awesome thing about Django that I'll talk about later too in this article is it's large community. Most of the times the features you need are already present in Django. However, if there not there's a very high probability that you'll find a Django plugin or package developed by the community that does that task for you.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h1&gt;

&lt;p&gt;There are a lot of things about Django that I like. I won't be able to write about all of them, So, here are some of the most awesome features among them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#batteries-included"&gt;
  &lt;/a&gt;
  Batteries Included
&lt;/h2&gt;

&lt;p&gt;You don’t need to code basic stuff, it comes pre-packaged. These packages were developed by professional developers, so you won’t need to spend time making sure they work correctly. Some of the features included in this framework are as follows.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It has a very &lt;strong&gt;powerful ORM&lt;/strong&gt;. Once you’ve created your data models, Django automatically gives you a database-abstraction API that lets you create, retrieve, update and delete objects.&lt;/li&gt;
&lt;li&gt;It makes handling the &lt;strong&gt;database migrations easy&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;It has in-built &lt;strong&gt;Session handling&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;It also handles &lt;strong&gt;URL Routing&lt;/strong&gt; for you along with dynamic URLs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#admin-panel"&gt;
  &lt;/a&gt;
  Admin panel
&lt;/h2&gt;

&lt;p&gt;Django has an customizable admin interface, so you can manage data using basic CRUD operations. It’s a very useful feature so you can start your project right away, without having to code this functionality. The admin panel can also be configured to have customized filters, or the data can be grouped using a particular field.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#template-system"&gt;
  &lt;/a&gt;
  Template System
&lt;/h2&gt;

&lt;p&gt;Django has it's own in-built templating system also known as Django template language (DTL). However, if you want you can also use any other template engine like &lt;em&gt;Jinja2&lt;/em&gt;. Moreover, you also have an option to write your own custom template system. How cool is that?&lt;/p&gt;

&lt;p&gt;Your template can be divided into further re-useable components, which also alignes with one of Django’s core template design principles and it’s a design pattern that stands for Don’t-Repeat-Yourself (DRY). It’s exactly what it sounds like, it means that you shouldn’t, at least in most cases, by copying and pasting the code. Your template, can be divided into reusable components such as the side navigation bar, the main navigation bar, the header of the page, the footer of the page and so on. This minimizes repetition and makes for writing efficient and cleaner code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#super-customizable"&gt;
  &lt;/a&gt;
  Super Customizable
&lt;/h2&gt;

&lt;p&gt;You can tackle just about any web app development project, whether it is a basic website or a high-end web app. It is also compatible with all major databases and even works with multiple database management systems at the same time like &lt;em&gt;PostgreSQL, SQLite, Oracle, etc&lt;/em&gt;. It’s fully loaded with extras and scalable, so you can make applications that handle heavy traffic and large volumes of information. &lt;/p&gt;

&lt;p&gt;Django offers a large amount of custom web development options. Since Django is built around Python, the design rules of the coding language dictate that web development time needs to be optimized. You can get your custom apps developed in a much smaller time frame than any other framework would allow you to.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security
&lt;/h2&gt;

&lt;p&gt;Django takes security seriously and helps developers avoid many common security mistakes. You do not have to implement security features manually to keep web development going. he framework has protection against XSS and CSRF attacks, SQL injections, clickjacking, etc. A Django web application is fully secured with industry-standard user authentication systems.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scalable-and-reliable"&gt;
  &lt;/a&gt;
  Scalable and Reliable
&lt;/h2&gt;

&lt;p&gt;As said above, some of the largest web applications like &lt;em&gt;Instagram, Reddit, Spotify&lt;/em&gt; use Django as a backend framework, we can agree that it's both scalable and reliable.  If you’re just starting, Django provides the functionality that enables you to create a small project and scale it as needed. You can handle more user requests and greater volumes of data if your web app goes through a growth spurt.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#community"&gt;
  &lt;/a&gt;
  Community
&lt;/h2&gt;

&lt;p&gt;Django has been around for a while now, and its large community makes the platform even better.  As it's an open source project, Django is supported by active volunteers who constantly work on stabilizing and improving the framework. It has about &lt;em&gt;58k&lt;/em&gt; Github stars.&lt;/p&gt;

&lt;p&gt;Apart from the developers that directly contribute to Django, there are people in the community who develop great plugins to make app development easier for budding developers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#documentation"&gt;
  &lt;/a&gt;
  Documentation
&lt;/h2&gt;

&lt;p&gt;As a result of super huge community, Django has a suberb documentation. It has detailed quick-start guides, detailed release notes, backward-compatible changes. There are dedicated websites for the platform where you can find help for any issues that you may run into. If you need help with your projects, the community support can always be banked on.&lt;/p&gt;




&lt;p&gt;That's it for this article. I would love to know what do you think about Django and this article. Please feel free to comment below or reach out. Thanks for reading!&lt;/p&gt;

</description>
      <category>django</category>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>python</category>
    </item>
    <item>
      <title>Home automation with Lars Richter</title>
      <author>Ben Halpern</author>
      <pubDate>Wed, 16 Jun 2021 19:09:55 +0000</pubDate>
      <link>https://dev.to/devteam/home-automation-with-lars-richter-2bdo</link>
      <guid>https://dev.to/devteam/home-automation-with-lars-richter-2bdo</guid>
      <description>&lt;p&gt;This week on the show, you'll meet a new guest co-host, &lt;a href="https://dev.to/jgaskins"&gt;Jamie Gaskins&lt;/a&gt;. &lt;a class="mentioned-user" href="https://dev.to/jgaskins"&gt;@jgaskins&lt;/a&gt;
 is the Principal Site Reliability Engineer at Forem. We are very lucky to have Jamie helping us make Forem scalable and highly reliable ✨ &lt;/p&gt;

&lt;p&gt;On this week's episode, we talked about something that &lt;em&gt;is&lt;/em&gt; very nerdy but &lt;em&gt;isn't&lt;/em&gt; directly related to either of our work. In other words, we had a lot of fun with this. &lt;/p&gt;


&lt;div class="podcastliquidtag"&gt;
  &lt;div class="podcastliquidtag__info"&gt;
    &lt;a href="/devdiscuss/s5-e6-home-automation-nerd-out"&gt;
      &lt;h1 class="podcastliquidtag__info__episodetitle"&gt;S5:E6 - Home Automation Nerd-Out!&lt;/h1&gt;
    &lt;/a&gt;
    &lt;a href="/devdiscuss"&gt;
      &lt;h2 class="podcastliquidtag__info__podcasttitle"&gt;
        DevDiscuss  

      &lt;/h2&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div id="record-s5-e6-home-automation-nerd-out" class="podcastliquidtag__record"&gt;
    &lt;img class="button play-butt" id="play-butt-s5-e6-home-automation-nerd-out" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png" alt="play"&gt;
    &lt;img class="button pause-butt" id="pause-butt-s5-e6-home-automation-nerd-out" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png" alt="pause"&gt;
    &lt;img class="podcastliquidtag__podcastimage" id="podcastimage-s5-e6-home-automation-nerd-out" alt="DevDiscuss" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZtvK04RF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j-SdIkjZ--/c_fill%2Cf_auto%2Cfl_progressive%2Cq_auto/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/235/08786d8b-7ef4-4c00-bc40-f4b3cbca5834.jpg"&gt;
  &lt;/div&gt;

  &lt;div class="hidden-audio" id="hidden-audio-s5-e6-home-automation-nerd-out"&gt;
  
    
    Your browser does not support the audio element.
  
  &lt;div id="progressBar" class="audio-player-display"&gt;
    &lt;a href="/devdiscuss/s5-e6-home-automation-nerd-out"&gt;
      &lt;img id="episode-profile-image" alt="S5:E6 - Home Automation Nerd-Out!" width="420" height="420" src="https://res.cloudinary.com/practicaldev/image/fetch/s--zTELFWpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--otY2jCJh--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_420/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/235/08786d8b-7ef4-4c00-bc40-f4b3cbca5834.jpg"&gt;
      &lt;img id="animated-bars" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzrPEFmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev.to/assets/animated-bars-4e8c57c8b58285fcf7d123680ad8af034cd5cd43b4d9209fe3aab49d1e9d77b3.gif" alt="animated volume bars"&gt;
    &lt;/a&gt;
    &lt;span id="barPlayPause"&gt;
      &lt;img class="butt play-butt" alt="play" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png"&gt;
      &lt;img class="butt pause-butt" alt="pause" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png"&gt;
    &lt;/span&gt;
    &lt;span id="volume"&gt;
      &lt;span id="volumeindicator" class="volume-icon-wrapper showing"&gt;
        &lt;span id="volbutt"&gt;
          &lt;img alt="volume" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTou7JP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-cd20707230ae3fc117b02de53c72af742cf7d666007e16e12f7ac11ebd8130a7.png"&gt;
        &lt;/span&gt;
        &lt;span class="range-wrapper"&gt;
          
        &lt;/span&gt;
      &lt;/span&gt;
      &lt;span id="mutebutt" class="volume-icon-wrapper hidden"&gt;
        &lt;img alt="volume-mute" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OX5NjT0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-mute-8f08ec668105565af8f8394eb18ab63acb386adbe0703afe3748eca8f2ecbf3b.png"&gt;
      &lt;/span&gt;
      &lt;span class="speed" id="speed"&gt;1x&lt;/span&gt;
    &lt;/span&gt;
    &lt;span class="buffer-wrapper" id="bufferwrapper"&gt;
      &lt;span id="buffer"&gt;&lt;/span&gt;
      &lt;span id="progress"&gt;&lt;/span&gt;
      &lt;span id="time"&gt;initializing...&lt;/span&gt;
      &lt;span id="closebutt"&gt;×&lt;/span&gt;
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;


&lt;p&gt;Our guest this week was &lt;strong&gt;&lt;a href="https://twitter.com/n_develop"&gt;Lars Richter&lt;/a&gt;, Application Developer at Parship Group.&lt;/strong&gt; I have been excited to chat with Lars about all things home automation for a while now and he did not disappoint!&lt;/p&gt;

&lt;p&gt;As I describe in the episode, I am really fascinated by home automation — so much so that I created a new Forem community dedicated to this topic called &lt;a href="https://www.hometechnica.com/"&gt;Hometechnica&lt;/a&gt;. I hope you'll take a look and consider joining!&lt;/p&gt;

&lt;p&gt;Take a listen to DevDiscuss S5E6 to hear us define, nerd out, and complain about home automation. &lt;/p&gt;




&lt;p&gt;&lt;em&gt;You can &lt;a href="//dev.to/devdiscuss"&gt;follow DevDiscuss&lt;/a&gt; to get episode notifications and listen right in your feed&lt;/em&gt; — or subscribe on your platform of choice! Plus, if you leave us a review, we'll send you a free pack of thank-you stickers. Details &lt;a href="https://airtable.com/shr8oKAIMZgdYnBxx"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-listening-links"&gt;
  &lt;/a&gt;
  Quick Listening Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/s5-e6-home-automation-nerd-out/id1513053883?i=1000525725291"&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/episode/0GZkjHIl0ZGfdpaCxUHWCA"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.google.com/feed/aHR0cHM6Ly9mZWVkcy5kZXZwb2RzLmRldi9kZXZkaXNjdXNzX3BvZGNhc3QueG1s/episode/aHR0cHM6Ly9kZXZwb2RzLmRldi9wb2RjYXN0cy9kZXZkaXNjdXNzLzM5?sa=X&amp;amp;ved=0CAQQkfYCahcKEwjYquuH7ZzxAhUAAAAAHQAAAAAQCA"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.listennotes.com/podcasts/devdiscuss/s5e6-home-automation-nerd-out-dHfmCZM-nK6/"&gt;Listen Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tunein.com/podcasts/Technology-Podcasts/DevDiscuss-p1324596/?topicId=163810390"&gt;TuneIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feeds.codenewbie.org/devnews_podcast.xml"&gt;RSS Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devpods.herokuapp.com/podcasts/devdiscuss/episodes/171"&gt;DEV Pods Site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;em&gt;Acknowledgements&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a class="mentioned-user" href="https://dev.to/levisharpe"&gt;@levisharpe&lt;/a&gt;
 for producing &amp;amp; mixing the show&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Our season five sponsors: &lt;a href="//cockroachlabs.com/devdiscuss"&gt;CockroachDB&lt;/a&gt;, &lt;a href="https://www.cloudways.com/en/?id=893892"&gt;Cloudways&lt;/a&gt;, &amp;amp; &lt;a href="https://rudderstack.com/?utm_source=devto&amp;amp;utm_medium=podcast&amp;amp;utm_campaign=CMPGN_3_PS&amp;amp;utm_content=None&amp;amp;utm_term=%7Bkeyword%7D&amp;amp;raid=6dbc05eeb293b421f68d02ce12648240"&gt;Rudderstack&lt;/a&gt;!&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  🗣️🗣️🗣️
&lt;/h1&gt;

</description>
      <category>discuss</category>
      <category>podcast</category>
      <category>hardware</category>
    </item>
    <item>
      <title>Snake VS. Blocks | A snake game.</title>
      <author>FRADAR</author>
      <pubDate>Wed, 16 Jun 2021 19:01:40 +0000</pubDate>
      <link>https://dev.to/fradar/snake-vs-blocks-a-snake-game-o98</link>
      <guid>https://dev.to/fradar/snake-vs-blocks-a-snake-game-o98</guid>
      <description>&lt;p&gt;Eat all the food (circles) in this 15 level snake game! Don't hit blocks and lasers, and eat the white blocks that randomly flicker around the map. They give you powerups. Use WASD or the arrow keys to move, P to pause, and C to copy the save code. The sound/volume might crash the game. More levels in this game will be added soon.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;P.S&lt;/em&gt;  I would love to improve to this game, so if there are any glitches/bugs in this game, please tell me about them in the comments.&lt;/p&gt;

&lt;p&gt;Try it here:&lt;br&gt;
&lt;a href="https://codepen.io/FRADAR/full/JjWwOZX"&gt;https://codepen.io/FRADAR/full/JjWwOZX&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more games,&lt;br&gt;
Click here:&lt;br&gt;
&lt;a href="https://codepen.io/FRADAR"&gt;https://codepen.io/FRADAR&lt;/a&gt;&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>gamedev</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>GIT Basics / Cheatsheet</title>
      <author>Andre Reus</author>
      <pubDate>Wed, 16 Jun 2021 18:50:40 +0000</pubDate>
      <link>https://dev.to/andrereus/git-basics-cheatsheet-50hh</link>
      <guid>https://dev.to/andrereus/git-basics-cheatsheet-50hh</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-git"&gt;
  &lt;/a&gt;
  What is GIT?
&lt;/h2&gt;

&lt;p&gt;Best short and also official description:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Benefits / Comparison:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Git is easy to learn and has a tiny footprint with lightning fast performance. It outclasses SCM tools like Subversion, CVS, Perforce, and ClearCase with features like cheap local branching, convenient staging areas, and multiple workflows.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;p&gt;Download and install it from &lt;a href="https://git-scm.com/"&gt;https://git-scm.com/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#git-commands"&gt;
  &lt;/a&gt;
  GIT Commands
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#basic-commands"&gt;
  &lt;/a&gt;
  Basic Commands
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git status // Show the current status
git init // Initialize project folder with GIT
git add // Add changes to the stage
git commit // Commit changes in the stage to the history / log
git log // Show the commit history
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#git-help"&gt;
  &lt;/a&gt;
  GIT Help
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git help // Help Overview
git help -a // GIT Commands
git help -g // GIT Guides
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#git-branching-in-visual-form"&gt;
  &lt;/a&gt;
  GIT Branching in visual form
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RzJGkll5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8pu5h21m48akfpolc913.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RzJGkll5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8pu5h21m48akfpolc913.png" alt="GIT Branching"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#branching-commands"&gt;
  &lt;/a&gt;
  Branching Commands
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git branch // Create a branch
git checkout (in future "git switch") // Switch to a branch
git merge // Merge a branch into an other one
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Playground for GIT Commands: &lt;a href="https://git-school.github.io/visualizing-git/"&gt;https://git-school.github.io/visualizing-git/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#git-client"&gt;
  &lt;/a&gt;
  GIT Client
&lt;/h2&gt;

&lt;p&gt;Some good free GIT Clients (GUIs) are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git-fork.com/"&gt;https://git-fork.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sourcetreeapp.com/"&gt;https://www.sourcetreeapp.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Optional useful Diff Tool: Beyond Compare&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#collaboration"&gt;
  &lt;/a&gt;
  Collaboration
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#collaboration-or-cloud-backup"&gt;
  &lt;/a&gt;
  Collaboration (or cloud backup)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a-el7vmC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9izaxoz4ibechdeucxgm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a-el7vmC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9izaxoz4ibechdeucxgm.png" alt="GIT Collaboration"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hosting-services"&gt;
  &lt;/a&gt;
  Hosting services
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/"&gt;https://github.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/"&gt;https://bitbucket.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://about.gitlab.com/"&gt;https://about.gitlab.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://azure.microsoft.com/"&gt;https://azure.microsoft.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#collaboration-commands"&gt;
  &lt;/a&gt;
  Collaboration Commands
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone // Download a repository to your PC
git fetch // Download the latest content from the server
git pull // Download the latest content from the server and merge it with your local content
git push // Upload your content to the server
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://help.github.com/en/articles/github-glossary"&gt;https://help.github.com/en/articles/github-glossary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.github.com/training-kit/"&gt;https://github.github.com/training-kit/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://rogerdudler.github.io/git-guide/"&gt;http://rogerdudler.github.io/git-guide/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.atlassian.com/git/tutorials/setting-up-a-repository"&gt;https://www.atlassian.com/git/tutorials/setting-up-a-repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://try.github.io/"&gt;https://try.github.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>git</category>
      <category>tutorial</category>
      <category>productivity</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What's new in React 18? </title>
      <author>Shruti Kapoor</author>
      <pubDate>Wed, 16 Jun 2021 18:44:46 +0000</pubDate>
      <link>https://dev.to/shrutikapoor08/what-s-new-in-react-18-1713</link>
      <guid>https://dev.to/shrutikapoor08/what-s-new-in-react-18-1713</guid>
      <description>&lt;p&gt;&lt;a href="https://reactjs.org/blog/2021/06/08/the-plan-for-react-18.html"&gt;React 18 alpha version was just announced&lt;/a&gt;. The theme of React 18 is to make the UI more performant by removing janky user experiences by introducing out of the box features and improvements powered by "concurrent rendering". React 18 introduces minimal breaking changes.&lt;/p&gt;

&lt;p&gt;Let's take a look at the major updates of React 18: &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#root-api"&gt;
  &lt;/a&gt;
  Root API
&lt;/h2&gt;

&lt;p&gt;React 18 introduces Root API &lt;code&gt;ReactDOM.createRoot&lt;/code&gt;. Before React 18, we used &lt;code&gt;ReactDOM.render&lt;/code&gt; to render a component to the page. Going forward with React 18, we will use ReactDOM.createRoot to create a root, and then pass the root to the render function. The good news is that your current code with &lt;code&gt;ReactDOM.render&lt;/code&gt; will still work, however, it is strongly recommended to start transitioning to &lt;code&gt;createRoot&lt;/code&gt; as &lt;code&gt;render&lt;/code&gt; will be marked &lt;code&gt;deprecated&lt;/code&gt; starting React 18. The current &lt;code&gt;ReactDOM.render&lt;/code&gt; is only provided to ease the transition to React 18.&lt;/p&gt;

&lt;p&gt;React 17:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;container&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;App&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;,&lt;/span&gt; &lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;React 18:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;container&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// create a root&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createRoot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//render app to root&lt;/span&gt;
&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;App&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#automatic-batching-out-of-the-box-optout-available"&gt;
  &lt;/a&gt;
  Automatic batching ( Out of the box, opt-out available):
&lt;/h2&gt;

&lt;p&gt;Batching is the process of grouping multiple state updates into one to prevent multiple re-renders. Previously, React batched state updates that happened in a single event callback managed by React event system, however state updates that happened outside the event were not batched. &lt;/p&gt;

&lt;p&gt;However, with automatic batching, all updates, even within promises, setTimeouts, will be batched. Check this example -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;=== click ===&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Does not re-render yet&lt;/span&gt;
    &lt;span class="nx"&gt;setFlag&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Does not re-render yet&lt;/span&gt;
    &lt;span class="c1"&gt;// React will only re-render once at the end (that's batching!)&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;timeoutCallback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Previously, batching didn't work inside timeouts, fetch, promises.&lt;/span&gt;
      &lt;span class="c1"&gt;// These two setStates causesd re-render in React 17.&lt;/span&gt;
      &lt;span class="c1"&gt;// With React 18, these are now batched.&lt;/span&gt;
      &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;setFlag&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;timeoutCallback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://codesandbox.io/s/romantic-pare-efklq?file=/src/index.js:192-695"&gt;See codesanbox link for full example&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Opt-out:&lt;/strong&gt; You can opt-out of automatic batching by using &lt;code&gt;flushSync&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#starttransition-optin"&gt;
  &lt;/a&gt;
  startTransition (opt-in)
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;startTransition&lt;/code&gt; can be used to mark UI updates that do not need urgent resources for updating. For eg: when typing in a typeahead field, there are two things happening - a blinking cursor that shows visual feedback of your content being typed, and a search functionality in the background that searches for the data that is typed. &lt;/p&gt;

&lt;p&gt;Showing a visual feedback to the user is important and therefore urgent. Searching is not so urgent, and hence can be marked as non-urgent. This is where &lt;code&gt;startTransition&lt;/code&gt; comes into play. &lt;/p&gt;

&lt;p&gt;By marking non-urgent UI updates as "transitions" , React will know which updates to prioritize making it easier to optimize rendering and get rid of stale rendering. Updates marked in non-urgent &lt;code&gt;startTransition&lt;/code&gt; can be interrupted by urgent updates such as clicks or key presses.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;startTransition&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="c1"&gt;// Urgent: Show what was typed&lt;/span&gt;
&lt;span class="nx"&gt;setInputValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Mark any state updates inside as transitions&lt;/span&gt;
&lt;span class="nx"&gt;startTransition&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Transition: Show the results&lt;/span&gt;
  &lt;span class="nx"&gt;setSearchQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;How is it different from debouncing or setTimeout?&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;startTransition executes immediately unlike setTimeout. setTimeout has a guaranteed delay, whereas startTransition's delay depends on the speed of the device, and other urgent renders.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;startTransition updates can be interrupted unlike setTimeout and won't freeze the page. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;React can track the pending state for you when marked with startTransition.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#how-to-move-to-react-18"&gt;
  &lt;/a&gt;
  How to move to React 18?
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;alpha&lt;/span&gt; &lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;dom&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;alpha&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Change React.render to React.createRoot&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rootElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createRoot&lt;/span&gt;&lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;App&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;,&lt;/span&gt; &lt;span class="nx"&gt;rootElement&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;App&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;a href="https://github.com/reactwg/react-18/discussions/categories/announcement"&gt;Checkout the full list of updates on React Working Group's GitHub&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://tinyletter.com/shrutikapoor"&gt;Get articles like this in your inbox&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Car riding Simulator game (VR) (3D)</title>
      <author>FRADAR</author>
      <pubDate>Wed, 16 Jun 2021 18:42:45 +0000</pubDate>
      <link>https://dev.to/fradar/car-riding-simulator-game-vr-3d-3k91</link>
      <guid>https://dev.to/fradar/car-riding-simulator-game-vr-3d-3k91</guid>
      <description>&lt;p&gt;A car riding simulator. It's virtual reality. Use the arrow keys or WASD to move the car through the hills.&lt;/p&gt;

&lt;p&gt;Try it here:&lt;br&gt;
&lt;a href="https://codepen.io/FRADAR/pen/zYNWZQQ"&gt;https://codepen.io/FRADAR/pen/zYNWZQQ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more games like this,&lt;br&gt;
click here: &lt;a href="https://codepen.io/FRADAR"&gt;https://codepen.io/FRADAR&lt;/a&gt;&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>gamedev</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>I Just Want to Download You!</title>
      <author>John Neuhaus</author>
      <pubDate>Wed, 16 Jun 2021 18:22:58 +0000</pubDate>
      <link>https://dev.to/jneuhaus20/i-just-want-to-download-you-fo2</link>
      <guid>https://dev.to/jneuhaus20/i-just-want-to-download-you-fo2</guid>
      <description>&lt;p&gt;If you have software that people download from your site, there is a finite set of versions people actually care about.  Yes, some people want all of them, and you should satisfy that.  But honestly, no one should have to actually read to get the "right" version.  We have plenty of other shit to read, and so do you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sets-of-downloads-people-want"&gt;
  &lt;/a&gt;
  Sets of downloads people want
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The latest version (or current major)&lt;/li&gt;
&lt;li&gt;All the currently supported Long-Term Stable versions (explicit LTS, or latest of all supported majors)&lt;/li&gt;
&lt;li&gt;Latest plus all LTS&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#needs-work"&gt;
  &lt;/a&gt;
  Needs Work
&lt;/h2&gt;

&lt;p&gt;Here we have pgAdmin. Not the most egregious, but this is also the update process when the running app has already informed you of the latest version.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tw5xp52H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h0a57s6ugm57f4jercs1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tw5xp52H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h0a57s6ugm57f4jercs1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
Multiplatform, sure



&lt;p&gt;&lt;br&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cI2iJJd1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y7xhnvulyqx71kt3vpjx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cI2iJJd1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y7xhnvulyqx71kt3vpjx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
*Squints*



&lt;p&gt;&lt;br&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fuf1Ixo8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q8eu5pud8bxd2yh41mlw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fuf1Ixo8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q8eu5pud8bxd2yh41mlw.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
Oh, come on!



&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#done-well"&gt;
  &lt;/a&gt;
  Done Well
&lt;/h2&gt;

&lt;p&gt;Contrast this with Node.js. This is the first page off Google search results:&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ydt5pGCC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7805i25f62w2x83wryn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ydt5pGCC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7805i25f62w2x83wryn.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
Already the right platform, two options, perfectly follows the time axis literally with version number and figuratively by risk level. It even flips for RTL!



&lt;p&gt;&lt;br&gt;There are no other screens, because those buttons immediately trigger the download.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#be-kind-to-your-users"&gt;
  &lt;/a&gt;
  Be Kind to Your Users
&lt;/h2&gt;

&lt;p&gt;It's the Golden Rule, and just good citizenship! Respect others' time and effort as you would like yours to be.&lt;/p&gt;

</description>
      <category>versioning</category>
      <category>devops</category>
      <category>ux</category>
      <category>webdev</category>
    </item>
    <item>
      <title>GIT-FLOW: UMA ESTRATÉGIA DE SUCESSO PARA ADAPTAR AO PROCESSO DO SEU TIME</title>
      <author>Jilcimar Fernandes</author>
      <pubDate>Wed, 16 Jun 2021 18:22:40 +0000</pubDate>
      <link>https://dev.to/jilcimar/git-flow-uma-estrategia-de-sucesso-para-adaptar-ao-processo-do-seu-time-1bah</link>
      <guid>https://dev.to/jilcimar/git-flow-uma-estrategia-de-sucesso-para-adaptar-ao-processo-do-seu-time-1bah</guid>
      <description>&lt;h1&gt;
  &lt;a href="#bulb-o-que-%C3%A9-o-gitflow"&gt;
  &lt;/a&gt;
  💡 O que é o Git-Flow?
&lt;/h1&gt;

&lt;p&gt;Ao trabalhar em equipe, é necessário definir convenções ou boas práticas para que todos saibam trabalhar juntos. O Git-Flow é um dos muitos chamados workflows, bastante popular por sua praticidade e aprendizado relativamente rápido. É uma forma de organizar as branches do seu repositório. Só pegar o Git-Flow e aplica-lo talvez não atenda a necessidade da sua equipe, principalmente pensando na maioria das empresas que possuem setores de Quality Assurance (QA) e esse workflow não leva em consideração. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;OBS.: Não irei me atentar em ficar citando os comandos do Git-Flow, o foco neste artigo é outro e você pode consultar esses comandos acessando a &lt;a href="https://danielkummer.github.io/git-flow-cheatsheet/index.pt_BR.html"&gt;Documentação&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#star-motiva%C3%A7%C3%A3o"&gt;
  &lt;/a&gt;
  ⭐ Motivação
&lt;/h1&gt;

&lt;p&gt;Usando essa estratégia, o objetivo é: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Redução de conflitos, pois o git flow irá ficar responsável por criar e fechar a branch de desenvolvimento no local correto (de forma automática)&lt;/li&gt;
&lt;li&gt;Padronização do nome de branchs, pois o git flow coloca prefixos automáticos como “feature/nome-da-branch” ou “hotfix/nome-da-branch”&lt;/li&gt;
&lt;li&gt;Segurança no processo de desenvolvimento

&lt;ul&gt;
&lt;li&gt;Só sobe o que está OK pelo QA&lt;/li&gt;
&lt;li&gt;Possibilidade de voltar a produção com base na versão desejada&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Versionamento do sistema através das tags&lt;/li&gt;
&lt;li&gt;Todos os desenvolvedores alinhados com o processo&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#organiza%C3%A7%C3%A3o"&gt;
  &lt;/a&gt;
  Organização
&lt;/h1&gt;

&lt;p&gt;Se você pesquisou por "Git Flow" certamente deve ter se deparado com uma imagem parecida com essa: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--twX9zDLS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3xwqxp14q6uvf17xrxuj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--twX9zDLS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3xwqxp14q6uvf17xrxuj.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Essa é a base do Git-Flow e já atende quase todo o fluxo de desenvolvimento, a única adaptação que iremos fazer é inserir o processo de Code Review e o QA que não são contemplados nesse flow. &lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#adapta%C3%A7%C3%A3o"&gt;
  &lt;/a&gt;
  Adaptação
&lt;/h1&gt;

&lt;p&gt;Então, como já foi dito irei propor um modelo que engloba o Code Review e também os ambientes de teste (QA). A modificação no fluxo fica assim:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZYXSPagg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mgnbwi9s5i8s6y4zx0ur.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZYXSPagg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mgnbwi9s5i8s6y4zx0ur.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Veja que entrou uma nova camada entre as &lt;em&gt;feature&lt;/em&gt; e &lt;em&gt;develop&lt;/em&gt;. O que significa que antes de ser dado um "finish" na &lt;em&gt;feature&lt;/em&gt;, a branch deve passar pelo processo de Code Review e em seguida ir para o QA validar. Se tudo ocorrer bem a ramificação é integrada na &lt;em&gt;develop&lt;/em&gt; ao executar:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git flow feature finish nome_da_branch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#develop"&gt;
  &lt;/a&gt;
  Develop
&lt;/h2&gt;

&lt;p&gt;Outro ponto que podemos observar é que a develop além de ser um "espelho" da "master" em alguns momentos, ela sempre irá conter as features finalizadas (foram testadas pelo QA e validadas). &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#seguran%C3%A7a"&gt;
  &lt;/a&gt;
  Segurança
&lt;/h2&gt;

&lt;p&gt;Essas camadas do Git-Flow adicionam mais segurança na subida das novas funcionalidades do seu software, já que para um desenvolvimento chegar em produção (branch master) ele precisa passar pela camada de teste (QA) e em seguida develop. A partir desse ponto é que o desenvolvimento pode ser disponibilizado caso seja criada uma &lt;em&gt;release&lt;/em&gt;. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#como-aplicar-a-metodologia-a-minha-equipe-"&gt;
  &lt;/a&gt;
  Como aplicar a metodologia a minha equipe ?
&lt;/h1&gt;

&lt;p&gt;O processo pode ser que não se adeque totalmente a realidade do seu time, porém, pode adapta-lo para que chegue em um modelo que atende a necessidade do projeto. &lt;/p&gt;

&lt;p&gt;Como dica eu sugiro começar por um repositório e em seguida ir aplicando nos demais (se na sua equipe trabalha em mais de um projeto). &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;OBS: Processo bom é aquele que resolve o problema do seu trabalho, se a sua equipe já funciona bem com uma metodologia diferente eu não vejo motivos para mudar. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;É isso galera, espero ter ajudado vocês falando em uma perspectiva diferente sobre o Git-Flow, pois a maioria dos artigos que vejo são focados no uso da ferramenta (como executar os comandos) e não se atentando a estrutura e organização. &lt;/p&gt;

</description>
      <category>git</category>
      <category>flow</category>
      <category>software</category>
      <category>process</category>
    </item>
    <item>
      <title>Top 10 Animation Libraries – (CSS + JavaScript )</title>
      <author>Rezaul karim</author>
      <pubDate>Wed, 16 Jun 2021 17:59:35 +0000</pubDate>
      <link>https://dev.to/rezaulkarim/top-10-animation-libraries-css-javascript-47cj</link>
      <guid>https://dev.to/rezaulkarim/top-10-animation-libraries-css-javascript-47cj</guid>
      <description>&lt;p&gt;After Designing a static website with HTML and CSS most of the time, you need to add some animation on your website.&lt;/p&gt;

&lt;p&gt;There are many CSS animation and JavaScript animation you can find on the Internet. But sometimes you may confused what should you use on your website.Don’t worry, here we discuss about top 10 Animation Libraries.&lt;/p&gt;

&lt;p&gt;These libraries are really good fit with your website and you can find all the beautiful and most uses animation libraries here. However, you can easily use any one from this list below:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#to-begin-with"&gt;
  &lt;/a&gt;
  To begin with:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-wowjs"&gt;
  &lt;/a&gt;
  1. wow.js
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YC0hhWMk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623864980066/Q-gz9X1gP.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YC0hhWMk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623864980066/Q-gz9X1gP.jpeg" alt="wow js — Reveal Animations When Scrolling.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Very powerful and friendly animation library it is.Reveal CSS animation as you scroll down a page. By default, you can use it to trigger animate.css animations. But you can easily change the settings to your favorite animation library.&lt;/p&gt;

&lt;p&gt;You can easily  &lt;a href="https://wowjs.uk/"&gt;download it from here&lt;/a&gt; .&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-animate-css-animation"&gt;
  &lt;/a&gt;
  2. animate CSS animation
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6iGlehgs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865036826/FnMDeo-P-.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6iGlehgs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865036826/FnMDeo-P-.jpeg" alt="Animate css A cross-browser library of CSS animations.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Animate CSS is free animation libraries. It deliver the most power for the smallest file size. Relatively, easy to use for reasonably code-savvy designers and developers.&lt;/p&gt;

&lt;p&gt;You can easily  &lt;a href="https://animate.style/"&gt;download it from here&lt;/a&gt; .&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-bouncejs"&gt;
  &lt;/a&gt;
  3. bounce.js
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8tF4hqT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865087275/x09ORcsDZ.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8tF4hqT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865087275/x09ORcsDZ.jpeg" alt="Bounce js.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bounce.js is a tool and JS library that lets you create beautiful CSS3 powered animations. Animation that you can do with bounce.js: scale, rotate, translate, skew and so on …&lt;/p&gt;

&lt;p&gt;You can easily  &lt;a href="http://bouncejs.com/"&gt;download it from here&lt;/a&gt; .&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-csshake-css-animation"&gt;
  &lt;/a&gt;
  4. csshake -CSS animation
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2VIMCqt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865389361/vCgtZ24zM.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2VIMCqt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865389361/vCgtZ24zM.jpeg" alt="CSShake.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#csshake-some-css-classes-to-move-your-dom"&gt;
  &lt;/a&gt;
  csshake. Some CSS classes to move your DOM!
&lt;/h4&gt;

&lt;p&gt;You could download the complete  &lt;a href="https://elrumordelaluz.github.io/csshake/"&gt;csshake.css&lt;/a&gt;  file or separated files for each shake animation (i.e csshake-little.css). Each one expanded or minified.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-anime-js"&gt;
  &lt;/a&gt;
  5. anime js
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NjIxgasP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865422296/ZBNhP4CrG.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NjIxgasP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865422296/ZBNhP4CrG.jpeg" alt="anime js.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Anime. js is a lightweight JavaScript animation library with a simple, yet powerful API. There are many JavaScript animation libraries out there. But  &lt;a href="https://animejs.com/"&gt;anime.js&lt;/a&gt;  is one of the best. It’s easy to use. It works with CSS properties, SVG, DOM attributes and JavaScript Objects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-gsap-greensock"&gt;
  &lt;/a&gt;
  6. GSAP – GreenSock
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FVPaBPbM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865465877/YuV-8uReh.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FVPaBPbM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865465877/YuV-8uReh.jpeg" alt="GSAP.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Professional-grade JavaScript animation for the modern web. One of the most Important animation libraries.Some core features:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Crazy fast, Freakishly robust, Compatible, Animate anything, Lightweight &amp;amp; expandable, No dependencies, Advanced sequencing, Permissive license and so on …&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can easily  &lt;a href="https://greensock.com/gsap/"&gt;download it from here&lt;/a&gt; .&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-mo-js"&gt;
  &lt;/a&gt;
  7. mo js
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qw4zJ05B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865491980/HQT_b0oqX.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qw4zJ05B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865491980/HQT_b0oqX.jpeg" alt="mo js.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Motion for the web.  &lt;a href="https://github.com/mojs/mojs"&gt;mo·js&lt;/a&gt;  is A Complete Motion Graphics Library For The Website. That is a** fast, retina ready, modular and open source*&lt;em&gt;. Using mo js on your site will enhance the user experience, enrich your content visually and create **delightful animations&lt;/em&gt;* precisely.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-konvajs"&gt;
  &lt;/a&gt;
  8. konva.js
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r2oEbyqp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865516097/AVmviyXE0.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r2oEbyqp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865516097/AVmviyXE0.jpeg" alt="Konva js - JavaScript 2d canvas library.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Konva.js – HTML5 2d canvas js library for desktop and mobile applications.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Object Oriented API with support of many shapes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Support for desktop and mobile devices.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Animations and tweens.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Node nesting, grouping and event bubbling and so on …&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can easily  &lt;a href="https://konvajs.org/"&gt;download it from here&lt;/a&gt; .&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-animista-css-animation"&gt;
  &lt;/a&gt;
  9. animista CSS animation
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q2sX5RmD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865562225/_KqKWnGOv.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q2sX5RmD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865562225/_KqKWnGOv.jpeg" alt="Animista.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://animista.net/"&gt;Animista&lt;/a&gt;  is a place where you can play with a collection of ready to use CSS animations. Tweak them and download only those you will actually use.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-wicked-css-animation"&gt;
  &lt;/a&gt;
  10. wicked CSS animation
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cEWZ0Lqv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865606852/8Ki-n97su.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cEWZ0Lqv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623865606852/8Ki-n97su.jpeg" alt="Wicked CSS3 Animations.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, wicked css. A library for CSS3 animations. The animations includes regular CSS3 animations to be used in all settings. Additionally, the library includes a number of wicked animations, which aren’t applicable in all situations. And they can be fun to play with.&lt;/p&gt;

&lt;p&gt;You can easily  &lt;a href="https://kristofferandreasen.github.io/wickedCSS/"&gt;download it from here&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;In conclusion, here are the top 10 animation libraries you can use on your website .Thanks for reading and Share if you like this article.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mrezaulkarim.com/top-10-animation-libraries-css-animation-javascript-animation/"&gt;Read this article on my blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more exciting tips and tricks please read our  &lt;a href="https://mrezaulkarim.com/blog/"&gt;others articles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find My page on Instagram:  &lt;a href="//instagram.com/stack.content"&gt;@stack.content&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>It's OK to useStore with React-Redux</title>
      <author>Dylan Grandmont</author>
      <pubDate>Wed, 16 Jun 2021 17:56:32 +0000</pubDate>
      <link>https://dev.to/dylangrandmont/it-s-ok-to-usestore-with-react-redux-1fia</link>
      <guid>https://dev.to/dylangrandmont/it-s-ok-to-usestore-with-react-redux-1fia</guid>
      <description>&lt;p&gt;I recently had two members of my team independently confuse themselves with a subtle point in the &lt;a href="https://react-redux.js.org/api/hooks"&gt;react-redux bindings&lt;/a&gt;. We have a few instances where a component includes callbacks and inside of those callbacks we need to compute some values from our redux state. We take those values and dispatch an action:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useDispatch&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-redux&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useDispatch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="c1"&gt;// requires us to compute a value from the state&lt;/span&gt;
    &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;someAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;    
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="err"&gt;...&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are two relevant APIs in react-redux here: &lt;code&gt;useSelector&lt;/code&gt; and &lt;code&gt;useStore&lt;/code&gt;. &lt;code&gt;useSelector&lt;/code&gt; accepts a selector, a function which computes a value from state; when that value changes, the component will re-render.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;useStore&lt;/code&gt; on the other-hand, provides access to the redux store within  component, but it will not re-render the component on any state changes.&lt;/p&gt;

&lt;p&gt;The confusion I've seen comes from a small comment within the react-redux docs:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[useStore] should probably not be used frequently. Prefer useSelector() as your primary choice. However, this may be useful for less common scenarios that do require access to the store, such as replacing reducers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I think this statement makes sense. The primary use-case is to connect your component to a store so that when a particular &lt;em&gt;part&lt;/em&gt; of the store changes, the component re-renders. &lt;code&gt;useSelector&lt;/code&gt; achieves this and that is the intent of the statement. However, it's easy to misunderstand this as &lt;code&gt;useStore&lt;/code&gt; is "discouraged" and this causes trouble.&lt;/p&gt;

&lt;p&gt;Suppose you interpret the statement, as my team members did, as "&lt;code&gt;useSelector&lt;/code&gt; should always be preferred". In the above example, this will produce a solution like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useDispatch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useSelector&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-redux&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useDispatch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useSelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;someSelector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// compute value from state&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;someAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;    
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="err"&gt;...&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But this doesn't make sense. We don't need to re-render the component when &lt;code&gt;value&lt;/code&gt; changes! Nothing in the rendered output displays the result of &lt;code&gt;value&lt;/code&gt;. We only need to evaluate &lt;code&gt;value&lt;/code&gt; when the callback is executed. And if &lt;code&gt;value&lt;/code&gt; changes frequently in the state, then we are doing a lot of re-renders that we don't need to.&lt;/p&gt;

&lt;p&gt;This is one of those "less common scenarios" where we do want  access to the store directly:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useDispatch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useStore&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-redux&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useDispatch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useStore&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;someSelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getState&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;someAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;    
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="err"&gt;...&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This allows the UI to update only when needed and for the correct value to be computed just-in-time, when the callback is executed.&lt;/p&gt;

</description>
      <category>react</category>
      <category>redux</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
