<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Operating Systems: Introduction</title>
      <author>Kathan Vakharia</author>
      <pubDate>Wed, 28 Jul 2021 08:30:42 +0000</pubDate>
      <link>https://dev.to/kathanvakharia/operating-systems-introduction-2hne</link>
      <guid>https://dev.to/kathanvakharia/operating-systems-introduction-2hne</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-os"&gt;
  &lt;/a&gt;
  What is O.S.?
&lt;/h2&gt;

&lt;p&gt;It is software that manages a computer's hardware.&lt;/p&gt;

&lt;p&gt;To put it more concretely, it acts as an &lt;strong&gt;interface&lt;/strong&gt; between &lt;em&gt;hardware&lt;/em&gt; and &lt;em&gt;software&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;For example, have you ever wondered how does &lt;code&gt;printf&lt;/code&gt; ( in C ), &lt;code&gt;print&lt;/code&gt;( in Python ), &lt;code&gt;println&lt;/code&gt; ( in Java ) function displays stuff on the console? The majority of you haven't!&lt;/p&gt;

&lt;p&gt;Let's take the example of &lt;code&gt;printf&lt;/code&gt; function of &lt;strong&gt;C&lt;/strong&gt; language, &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pqJINGyC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q585p09r06khsv8k0lap.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pqJINGyC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q585p09r06khsv8k0lap.jpg" alt="Image 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you try to print some stuff on the console using &lt;code&gt;printf("blah blah");&lt;/code&gt; , the internal code of &lt;code&gt;printf&lt;/code&gt; makes a &lt;em&gt;system&lt;/em&gt; call &lt;code&gt;write&lt;/code&gt; which is provided by your operating system( windows, mac, linux, etc. ) Its because of this &lt;code&gt;write&lt;/code&gt; call, you can display things on the console. The code for this &lt;code&gt;write&lt;/code&gt;  call is veryy complex as it is used to access the &lt;em&gt;hardware&lt;/em&gt;(your monitor). &lt;/p&gt;

&lt;p&gt;In a world devoid of operating systems, think how complex it would be to just print stuff on the console!! I didn't even mention the complexity of reading input 😶 &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#duties-of-os"&gt;
  &lt;/a&gt;
  Duties of O.S.
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v8PAs2OV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3f00bj815noa803krnxb.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v8PAs2OV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3f00bj815noa803krnxb.jpg" alt="Image 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It acts as a &lt;em&gt;resource allocator&lt;/em&gt;. The resource here means, CPU, memory(RAM + ROM), printer, scanner, etc.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;facing numerous possibly conflicting requests to the printer(for example), the OS must decide how to allocate the printer to requesting programs or processes to be more precise.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It acts as a &lt;em&gt;manager&lt;/em&gt;: It manages memory, processes, files, security, etc. In a simple sense, you can think it does book-keeping job in a library.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;primary&lt;/strong&gt; goal of an operating system is &lt;em&gt;convenience&lt;/em&gt; to the end-users. Being &lt;em&gt;efficient&lt;/em&gt; is the &lt;strong&gt;secondary&lt;/strong&gt; goal surprisingly 😯&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-os"&gt;
  &lt;/a&gt;
  Types of O.S.
&lt;/h2&gt;

&lt;p&gt;Assume we have &lt;strong&gt;single&lt;/strong&gt; CPU until unless specified.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#batch-operating-system"&gt;
  &lt;/a&gt;
  Batch Operating System
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Jobs once arrived are addressed in &lt;strong&gt;First-In-First-Out&lt;/strong&gt; Order.
&lt;/li&gt;
&lt;li&gt;For example, let's say we have jobs J1, J2, J3 coming in order. Then unless J1 completes its execution, J2 and J3 are not executed.&lt;/li&gt;
&lt;li&gt;The major &lt;strong&gt;disadvantage&lt;/strong&gt; here is even if J1 needs more IO( Input Output ) time thereby keeping CPU idle, still J2, J3 is not executed or &lt;em&gt;starved&lt;/em&gt; in OS lingo. &lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#multiprogramming-operating-system"&gt;
  &lt;/a&gt;
  Multiprogramming Operating System
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;‼ The definition varies from author to author so take it with a pinch of salt 🙂&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The idea behind multiprogramming is, &lt;em&gt;CPU should not be idle.&lt;/em&gt; Taking the above example, if J1 goes for IO, then CPU can happily execute J2. If J2 also goes for IO, CPU can execute J3. &lt;/p&gt;

&lt;p&gt;So it seems like this is the best approach? &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UNutZP7l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nws9ttiay2pipvms51xj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UNutZP7l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nws9ttiay2pipvms51xj.jpg" alt="Image 3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There's a problem here, for example, let's say J2 takes 1 unit time, J3 takes 2 unit time and J1 takes 100 unit time to execute and no IO is involved for any of the jobs. Now if J1 arrives first, it will not leave CPU for loooong time and thereby starving J2 and J3 which otherwise would have been executed in less time.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 In operating system lingo, this is called &lt;em&gt;non-preemptive&lt;/em&gt; type of scheduling( of jobs ) because once we start a job, we don't stop executing it unless the job itself asks for IO or anything else.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#multitasking-or-time-sharing-os"&gt;
  &lt;/a&gt;
  Multitasking or Time Sharing O.S.
&lt;/h3&gt;

&lt;p&gt;A certain time is given to every process(job). If it is not completed in that time quantum, the process is scheduled later, and another process gets the chance. &lt;/p&gt;

&lt;p&gt;In other words, it is &lt;strong&gt;preemptive multiprogramming.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Benefit: Responsiveness i.e. Starvation doesn't happen.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#multiprocessing-os"&gt;
  &lt;/a&gt;
  Multiprocessing O.S.
&lt;/h3&gt;

&lt;p&gt;We have more than one CPU which is common these days!&lt;/p&gt;

&lt;p&gt;So, idea is to apply multitasking principles to every CPU. This scheme is also known as &lt;strong&gt;parallelism&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;In simple words, assign jobs to every CPU.&lt;/p&gt;

&lt;p&gt;Benefit: less costly, more efficient than having separate computers, more reliable i.e. if CPU1 fails, still our work is not halted.&lt;/p&gt;

</description>
      <category>os</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>How to get Thread dump from Heap dump</title>
      <author>Pavel Polívka</author>
      <pubDate>Wed, 28 Jul 2021 08:25:05 +0000</pubDate>
      <link>https://dev.to/pavel_polivka/how-to-get-thread-dump-from-heap-dump-44h7</link>
      <guid>https://dev.to/pavel_polivka/how-to-get-thread-dump-from-heap-dump-44h7</guid>
      <description>&lt;p&gt;Recently I was debugging some nasty deadlocks and as one does in this kind of situation I needed to look into thread dumps. Unfortunately for me, the only thing I had was heap dump. Do not get me wrong heap dumps contain much more information, including the needed thread info. But heap dumps are also very big (can be gigabytes) so they are not very practical if you want to share them with a co-worker or upload them to online analyzer tools like &lt;a href="https://fastthread.io/"&gt;FastThread&lt;/a&gt;. All I wanted was a simple text file with the thread dump. &lt;/p&gt;

&lt;p&gt;I started to google and my surprise I was not able to find easy to use tool that can do this. Most heap dump analysis tools can show you the thread data, but cannot export it in the format that is associated with thread dumps. I accepted my faith and continue. Until I noticed this nice button in VisualVM that did exactly what I wanted.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-by-step"&gt;
  &lt;/a&gt;
  Step by step
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#open-visualvm"&gt;
  &lt;/a&gt;
  Open VisualVM
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://visualvm.github.io/"&gt;VisualVM&lt;/a&gt; is a JVM troubleshooting tool, it was bundled with JDK 6,7,8 and is a standalone free tool. It can help you with JMX, profiling, memory monitoring, taking and displaying thread and heap dumps and so much more. If you do not have it on your local machine, download it and learn how to use it. I will definitely improve your troubleshooting capabilities. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#open-your-heap-dump-in-visualvm"&gt;
  &lt;/a&gt;
  Open your heap dump in VisualVM
&lt;/h3&gt;

&lt;p&gt;It's straightforward. Open the heap dump (hprof file) via the Load Snapshot button.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#switch-to-the-thread-view"&gt;
  &lt;/a&gt;
  Switch to the thread view
&lt;/h3&gt;

&lt;p&gt;After the heap dump is loaded in the top left corner of the tab is a dropdown. Switch it to Threads.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#switch-the-thread-view-to-html-moved"&gt;
  &lt;/a&gt;
  Switch the thread view to HTML moved
&lt;/h3&gt;

&lt;p&gt;This is named confusingly, but it will do exactly what you need. &lt;/p&gt;

&lt;p&gt;Next to the dropdown is a couple of buttons to switch how the thread view is displayed. The first one is the fancy UI and the second one (confusingly named HTML) will convert the thread info into a thread dump text format. This operation will take some time as VisualVM is converting the thread info into the format. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#copy-and-paste"&gt;
  &lt;/a&gt;
  Copy and paste
&lt;/h3&gt;

&lt;p&gt;Now you can copy the text and enjoy your thread dump.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#one-image-instead-of-1000-words"&gt;
  &lt;/a&gt;
  One image instead of 1000 words
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7QuItDGh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ppolivka.com/images/thread-dump.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7QuItDGh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ppolivka.com/images/thread-dump.png" alt="VisualVM with thread info"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;For more tips like this, you can follow me on &lt;a href="https://twitter.com/pavel_polivka"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>java</category>
      <category>jvm</category>
      <category>tooling</category>
    </item>
    <item>
      <title>Developer Project For Beginners</title>
      <author>Tousif</author>
      <pubDate>Wed, 28 Jul 2021 07:45:50 +0000</pubDate>
      <link>https://dev.to/project_beginner/developer-project-for-beginners-4h9b</link>
      <guid>https://dev.to/project_beginner/developer-project-for-beginners-4h9b</guid>
      <description>&lt;p&gt;&lt;a href="https://bit.ly/3zEccM7"&gt;&lt;span&gt;AI Project For Beginners&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;&lt;span&gt;&lt;a href="https://bit.ly/36YTCSA"&gt;Nodejs Project For Beginners&lt;/a&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bit.ly/2TCFknJ"&gt;&lt;span&gt;ReactJS project for Beginners&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bit.ly/3eZUpHf"&gt;&lt;span&gt;JavaScript Project For Beginners&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;&lt;span&gt;&lt;a href="https://www.codelivly.com/top-c-project-for-beginners/"&gt;C++ Project For Beginners&lt;/a&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/top-python-developer-skills-you-need-to-know/"&gt;&lt;span&gt;Top Skill You need as a python developer&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/top-skills-you-need-as-a-javascript-developer"&gt;&lt;span&gt;Top Skill You need as a Javascript developer&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href="https://bit.ly/3fl4dvV"&gt;Build a Facebook Chatbot for Beginners&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;


</description>
    </item>
    <item>
      <title>HTML TUTORIAL FOR BEGINNERS PART 8</title>
      <author>ahmadullah</author>
      <pubDate>Wed, 28 Jul 2021 07:21:00 +0000</pubDate>
      <link>https://dev.to/ahmadullahnikzad/html-tutorial-for-beginners-part-8-3p9d</link>
      <guid>https://dev.to/ahmadullahnikzad/html-tutorial-for-beginners-part-8-3p9d</guid>
      <description>&lt;p&gt;If you have a Facebook account you have to submit your first name, lastname,email address or phone, password, date of birth, country, gender and more to Facebook to record your information in its servers or databases.&lt;br&gt;
Today you learn how to create those kinda textfields you've experienced on Facebook.&lt;br&gt;
As I mentioned earlier Facebook wants your firstname, lastname, email or phone,password, date of birth, gender, country.&lt;br&gt;
All of these are input fields that we're going to learn them.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#like-the-below-image-which-is-from-facebook-signup-form"&gt;
  &lt;/a&gt;
  Like the below image which is from Facebook signup form👇
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e-pP2uFo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hoe5vri9yzrmmetahax1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e-pP2uFo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hoe5vri9yzrmmetahax1.jpg" alt="Facebook's sign up form"&gt;&lt;/a&gt;&lt;br&gt;
To create this of forms in HTML we use form element.&lt;br&gt;
Every other content is wrapped inside form element like: first name input field. Last name input field...&lt;br&gt;
Look at the below code 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;form&amp;gt;
&amp;lt;!--Your input fields come here--&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In HTML when we create form, it has some attributes like other elements for example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;method&lt;/li&gt;
&lt;li&gt;action&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#method-attribute-takes-two-parameters"&gt;
  &lt;/a&gt;
  Method attribute takes two parameters:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;POST&lt;/li&gt;
&lt;li&gt;GET&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These parameters are very crucial and important when submitting form to a server.&lt;br&gt;
Differences between POST and GET parameters is as follow:&lt;br&gt;
GET is for getting data from form.&lt;br&gt;
POST is for sending data through a form like comment,story...&lt;br&gt;
These are some useful form attributes👇&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;action&lt;/li&gt;
&lt;li&gt;autocomplete&lt;/li&gt;
&lt;li&gt;method&lt;/li&gt;
&lt;li&gt;novalidate&lt;/li&gt;
&lt;li&gt;target&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#now-lets-learn-how-to-create-a-basic-form-in-html"&gt;
  &lt;/a&gt;
  Now let's learn how to create a basic form in HTML:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;form method="POST"&amp;gt;
&amp;lt;label for="firstname"&amp;gt;First Name&amp;lt;/label&amp;gt;
&amp;lt;input type="text" id="firstname" placeholder="First Name"&amp;gt;
&amp;lt;br&amp;gt;
&amp;lt;label for="lastname"&amp;gt;Lastname&amp;lt;/label&amp;gt;
&amp;lt;input type="text" id="lastname" placeholder="Lastname"&amp;gt;
&amp;lt;br&amp;gt;
&amp;lt;input type="submit" value="submit"&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6HgKl_-Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jf7firdql9f9yshoykjz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6HgKl_-Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jf7firdql9f9yshoykjz.jpg" alt="Preview"&gt;&lt;/a&gt;&lt;br&gt;
We can create email input field just by changing the type value to email and to create password field change into password and so on so.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#some-are-the-useful-form-input-fields"&gt;
  &lt;/a&gt;
  Some are the useful form input fields 👇
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;text&lt;/li&gt;
&lt;li&gt;email&lt;/li&gt;
&lt;li&gt;password &lt;/li&gt;
&lt;li&gt;file&lt;/li&gt;
&lt;li&gt;submit&lt;/li&gt;
&lt;li&gt;image&lt;/li&gt;
&lt;li&gt;date&lt;/li&gt;
&lt;li&gt;local-date&lt;/li&gt;
&lt;li&gt;week&lt;/li&gt;
&lt;li&gt;color&lt;/li&gt;
&lt;li&gt;number&lt;/li&gt;
&lt;li&gt;tel&lt;/li&gt;
&lt;li&gt;reset&lt;/li&gt;
&lt;li&gt;url&lt;/li&gt;
&lt;li&gt;search&lt;/li&gt;
&lt;li&gt;radio&lt;/li&gt;
&lt;li&gt;checkbox
As well these input fields like email, password, number, url, search, tel have some attributes like below👇&lt;/li&gt;
&lt;li&gt;placeholder&lt;/li&gt;
&lt;li&gt;type&lt;/li&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;li&gt;id&lt;/li&gt;
&lt;li&gt;value&lt;/li&gt;
&lt;li&gt;autocomplete&lt;/li&gt;
&lt;li&gt;spellcheck
Forms are very useful in a website and a web app.
### Look at the below Examples👇
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  &amp;lt;form&amp;gt;
            &amp;lt;label for="username"&amp;gt;Username&amp;lt;/label&amp;gt;
            &amp;lt;input type="text" id="username" placeholder="Username"&amp;gt;
            &amp;lt;br&amp;gt;
            &amp;lt;label for="email"&amp;gt;Email&amp;lt;/label&amp;gt;
            &amp;lt;input type="email" id="email" placeholder="Email"&amp;gt;
            &amp;lt;br&amp;gt;
            &amp;lt;label for="password"&amp;gt;Password&amp;lt;/label&amp;gt;
            &amp;lt;input type="password" id="password"&amp;gt;
            &amp;lt;br&amp;gt;
            &amp;lt;h1&amp;gt;Choose your favourite subjects?&amp;lt;/h1&amp;gt;
            &amp;lt;input type="checkbox" id="math"&amp;gt;
            &amp;lt;label for="math"&amp;gt;Math&amp;lt;/label&amp;gt;
            &amp;lt;br&amp;gt;
            &amp;lt;input type="checkbox" id="biology" checked&amp;gt;
            &amp;lt;label for="biology"&amp;gt;Biology&amp;lt;/label&amp;gt;
            &amp;lt;br&amp;gt;
            &amp;lt;h1&amp;gt;Choose your gender?&amp;lt;/h1&amp;gt;
            &amp;lt;input type="radio" name="gender" id="male"&amp;gt;
            &amp;lt;label for="male"&amp;gt;Male&amp;lt;/label&amp;gt;
            &amp;lt;br&amp;gt;
            &amp;lt;input type="radio" name="gender" id="female"&amp;gt;
            &amp;lt;label for="female"&amp;gt;Femalr&amp;lt;/label&amp;gt;
            &amp;lt;br&amp;gt;,
            &amp;lt;input type="color"&amp;gt;
            &amp;lt;input type="date"&amp;gt;
            &amp;lt;input type="week"&amp;gt;
            &amp;lt;input type="number"&amp;gt;
            &amp;lt;input type="file"&amp;gt;
            &amp;lt;input type="tel"&amp;gt;
            &amp;lt;label for="languages"&amp;gt;Choose your language&amp;lt;/label&amp;gt;
            &amp;lt;select id="languages" multiple&amp;gt;
                &amp;lt;option value="English" selected&amp;gt;English&amp;lt;/option&amp;gt;
                &amp;lt;option&amp;gt;Arabic&amp;lt;/option&amp;gt;
            &amp;lt;/select&amp;gt;
            &amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r8VCrNSQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7dwyhy2c11gahgdzt4k.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r8VCrNSQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7dwyhy2c11gahgdzt4k.jpg" alt="Form Examples"&gt;&lt;/a&gt;&lt;br&gt;
I hope you enjoy the video and also share and like it&lt;/p&gt;

</description>
      <category>html</category>
      <category>programming</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>The Million.js Manifesto</title>
      <author>Aiden Bai</author>
      <pubDate>Wed, 28 Jul 2021 06:52:22 +0000</pubDate>
      <link>https://dev.to/aidenybai/the-million-js-manifesto-1ipg</link>
      <guid>https://dev.to/aidenybai/the-million-js-manifesto-1ipg</guid>
      <description>&lt;h2&gt;
  &lt;a href="#past"&gt;
  &lt;/a&gt;
  Past
&lt;/h2&gt;

&lt;p&gt;Back in the days when JavaScript was first manifested, direct DOM manipulation was used to introduce interactivity for static web sites. Eventually, the JavaScript scene moved on to new technologies such as MooTools and jQuery, which helped &lt;strong&gt;simplify certain actions into simple, reusable functions&lt;/strong&gt;. However, there was still one pressing issue.&lt;/p&gt;

&lt;p&gt;Even though web development became easier, scaling large web applications that required an extensive amount of interactivity was difficult, as operations were generally imperative and difficult to organize. This led the rise to several frameworks and libraries, notably React. React aimed to allow for &lt;strong&gt;declarative development and componentization to compose user interfaces scalably&lt;/strong&gt;. To achieve this, the team behind React used a Virtual DOM architecture, where computation and logic was deferred to an algorithm to determine changes. This means that the developer just has to figure out how the markup will look.&lt;/p&gt;

&lt;p&gt;React helped to pioneer extensive usage of JavaScript to render web applications, leading to the rise of the Virtual DOM architecture in other libraries and usage of new technologies like JSX.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#present"&gt;
  &lt;/a&gt;
  Present
&lt;/h2&gt;

&lt;p&gt;Nowadays, the prevalence of web applications is non-negligible. JavaScript and React &lt;a href="https://nextjs.org/showcase"&gt;are everywhere&lt;/a&gt;, and the Virtual DOM architecture is used in many of the popular libraries today (React.js, Vue.js, Preact.js, Elm, etc). "Pure JavaScript rendering" has subsided as development of preprocessors such as Webpack have taken hold as a standard, leading the way to preprocessors, allowing for &lt;strong&gt;cross-browser compatibility (e.g. Babel), prerendering, and JAMstack technologies&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;JavaScript frameworks and libraries have entire ecosystems around them, with tools like Next.js around React supercharging how web development is done. Library developers are slowly realizing the importance of performance sacrificed in the previous generation of developers for the purpose of developer experience. This is seen with &lt;strong&gt;trends towards static analysis&lt;/strong&gt; with Svelte, which currently leverages the prevalent usage of bundlers in most web applications.&lt;/p&gt;

&lt;p&gt;Performance is slowly becoming a priority, but &lt;strong&gt;technologies that depend on the Virtual DOM like React are fundamentally outdated&lt;/strong&gt;, even with incremental improvements with lazy loading and ISR in Next.js.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#future"&gt;
  &lt;/a&gt;
  Future
&lt;/h2&gt;

&lt;p&gt;It is easy to to recite, reinvent, and monkey-patch what exists. With React and the Virtual DOM being such a backbone technology in the JavaScript library space, it is paramount that bleeding-edge libraries like Next.js leverage their position in the ecosystem to pioneer &lt;a href="https://tomdale.net/2017/09/compilers-are-the-new-frameworks/"&gt;compiler-based optimizations&lt;/a&gt;. While the most straightforward solution is to ditch everything and use the browser just as compile target with a series of imperative operations, the Virtual DOM arguably brings many advantages. It helps us write declarative interfaces &lt;strong&gt;without templating, meaning conditions are constrained to the limit of JavaScript&lt;/strong&gt;, as well as &lt;a href="https://reactjs.org/blog/2013/06/05/why-react.html"&gt;many other benefits&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The future of the Virtual DOM is not destruction of the Virtual DOM, rather it is to &lt;strong&gt;constrain usage of the Virtual DOM where it is powerful&lt;/strong&gt; while leveraging static analysis and compilation (&lt;a href="https://dev.to/aidenybai/million-js-the-future-of-virtual-dom-1e6d"&gt;This is done through Million.js&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/aidenybai/million-js-the-future-of-virtual-dom-1e6d"&gt;→ Interested in how Million is different?&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I recently had the opportunity to chat with &lt;a href="https://twitter.com/rauchg"&gt;@rauchg&lt;/a&gt; about Million.js as well as some of my thoughts on the current state of Virtual DOM. He explained to me that optimization of the Virtual DOM was only a facet of the next phase of web frameworks. This includes how we can improve development mode experience, tree-shaking and bundle size, etc.&lt;br&gt;
aggressive tree shaking - reduce bundle size. I highly recommend you to check out his &lt;a href="https://twitter.com/rauchg"&gt;Twitter&lt;/a&gt; and &lt;a href="https://rauchg.com/"&gt;blog&lt;/a&gt;, as he has so much valuable insight into the industry and how impact can and needs to be made.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Publish your own NPM package</title>
      <author>Chris Bongers</author>
      <pubDate>Wed, 28 Jul 2021 06:38:22 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/publish-your-own-npm-package-2na4</link>
      <guid>https://dev.to/dailydevtips1/publish-your-own-npm-package-2na4</guid>
      <description>&lt;p&gt;The title might sound scary to you. I know it was for me.&lt;br&gt;
However, I'll show you it's not so scary and a fun experience to publish your very first NPM package in this article.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ckFWm4gl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933416963/OiSxYBefx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ckFWm4gl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626933416963/OiSxYBefx.png" alt="Publish your NPM package"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're interested in this article, I'm sure you've heard of NPM and even used it before.&lt;/p&gt;

&lt;p&gt;Just a quick reminder, NPM is the biggest software registry, but also a package manager and installer.&lt;/p&gt;

&lt;p&gt;Are you wondering how to install NPM?&lt;br&gt;
It actually comes shipped with Node. If you're looking to install Node, check out &lt;a href="https://formulae.brew.sh/formula/node"&gt;Homebrew&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#why-publish-an-npm-package"&gt;
  &lt;/a&gt;
  Why publish an NPM package?
&lt;/h2&gt;

&lt;p&gt;Perhaps you made something that you use all the time in your own projects?&lt;br&gt;
Then you might have realized it's a pain to update it in all those projects.&lt;br&gt;
Then imagine being able just to run the NPM update command 🤯.&lt;/p&gt;

&lt;p&gt;Another reason might be you made something that you think the public might find valuable.&lt;br&gt;
For me, this is the case, as I made my very first &lt;a href="https://www.npmjs.com/package/@rebelchris/astro-static-tweet"&gt;Astro public component&lt;/a&gt;. (Still a WIP, actually)&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#create-your-own-npm-package"&gt;
  &lt;/a&gt;
  Create your own NPM package
&lt;/h2&gt;

&lt;p&gt;Let me start from scratch as it will be easier to explain like that.&lt;/p&gt;

&lt;p&gt;First, we'll create our local folder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;astro-static-tweet &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd &lt;/span&gt;astro-static-tweet
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can initialize NPM.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fill out the questions as you go along.&lt;/p&gt;

&lt;p&gt;As for the naming of your package, you can use a public name like &lt;code&gt;my-plugin&lt;/code&gt;, but chances are it's already taken.&lt;/p&gt;

&lt;p&gt;You can use the &lt;code&gt;npm search&lt;/code&gt; command to see if your name is still valid.&lt;/p&gt;

&lt;p&gt;However, another option is to publish a scoped package, meaning it's prefixed with your username.&lt;/p&gt;

&lt;p&gt;You can then use a name like &lt;code&gt;@username/my-plugin&lt;/code&gt;, making it pretty unique.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#writing-our-code"&gt;
  &lt;/a&gt;
  Writing our code
&lt;/h3&gt;

&lt;p&gt;Now let's add some code, so our plugin does something.&lt;/p&gt;

&lt;p&gt;Let's make a super simple example as a package that will do some basic math for us.&lt;/p&gt;

&lt;p&gt;Create an &lt;code&gt;index.js&lt;/code&gt; file and add the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;one&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;two&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;one&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;two&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now when we want to use this package later on we can require the add function like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;plugin-name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#adding-multiple-functions"&gt;
  &lt;/a&gt;
  Adding multiple functions
&lt;/h3&gt;

&lt;p&gt;Of course, it's not a nice plugin if we can only use add calculations.&lt;/p&gt;

&lt;p&gt;Let's add some more functions and see how we can export and use those.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;one&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;two&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;one&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;two&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;subtract&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;one&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;two&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;one&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;two&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;one&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;two&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;one&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;two&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;subtract&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And we can then import those once we load our package like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;subtract&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;plugin-name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#adding-a-readme"&gt;
  &lt;/a&gt;
  Adding a README
&lt;/h3&gt;

&lt;p&gt;A good habit of doing is to add a Readme in your project. You can make these as extensive as you like.&lt;br&gt;
However, there should be a minimum requirement of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Installation guide&lt;/li&gt;
&lt;li&gt;Example of how to use it&lt;/li&gt;
&lt;li&gt;Tell people how to log issues&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some optional parts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What you're still working on&lt;/li&gt;
&lt;li&gt;License&lt;/li&gt;
&lt;li&gt;Contribution guide&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#testing-your-package"&gt;
  &lt;/a&gt;
  Testing your package
&lt;/h2&gt;

&lt;p&gt;It's always a good idea to include some tests in your package. This makes it easy to check if your code is still working once you change something.&lt;/p&gt;

&lt;p&gt;I won't go into detail about testing code, as that is another topic on its own.&lt;/p&gt;

&lt;p&gt;However, the most basic test we can do is a manual test.&lt;br&gt;
We can test out the package before it even is live on the NPM registry.&lt;/p&gt;

&lt;p&gt;To do this, we need to link it locally.&lt;/p&gt;

&lt;p&gt;Navigate to your package folder and execute the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;link&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then in the project where you want to test out this package, use the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;link &lt;/span&gt;your-package-name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you're happy with the package, move on to the next step.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#publishing-our-own-npm-package"&gt;
  &lt;/a&gt;
  Publishing our own NPM package
&lt;/h2&gt;

&lt;p&gt;Before we can publish to the NPM registry, we need to make sure we have an account for the NPM website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/signup"&gt;Signup for NPM&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you have an account, you can run the following command in your terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Follow the steps as the script will prompt you.&lt;/p&gt;

&lt;p&gt;Once you are done and ready to push your code live, use the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm publish
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Did you use a scoped package? (@username/my-package).&lt;br&gt;
Then you'll get a message saying scoped packages can't be published without paying.&lt;/p&gt;

&lt;p&gt;However, we must publish it as a public package and use the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm publish &lt;span class="nt"&gt;--access&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;public
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And now you can head over to &lt;a href="https://www.npmjs.com/package/@rebelchris/astro-static-tweet"&gt;npmjs&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#updating-your-package"&gt;
  &lt;/a&gt;
  Updating your package
&lt;/h3&gt;

&lt;p&gt;As it comes to updating, you change the code as you need to.&lt;br&gt;
The next step here is to update your package version.&lt;/p&gt;

&lt;p&gt;The best approach is to use semantic versioning.&lt;br&gt;
Meaning we use a three-point version number.&lt;/p&gt;

&lt;p&gt;Version: &lt;strong&gt;1.2.3&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Where the following can be said:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;1&lt;/code&gt;: Major change can have incompatible function changes&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;2&lt;/code&gt;: Minor change, mostly backward compatible&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;3&lt;/code&gt;: Patch change, bugfix for instance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can read more on the &lt;a href="https://semver.org/"&gt;semver website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once you updated the version, you can publish it as you did before:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm publish
&lt;span class="c"&gt;# OR IF YOU SCOPED YOUR PACKAGE:&lt;/span&gt;
npm publish &lt;span class="nt"&gt;--access&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;public
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclussion"&gt;
  &lt;/a&gt;
  Conclussion
&lt;/h2&gt;

&lt;p&gt;And that's it. We now have our own package on the NPM registry!&lt;/p&gt;

&lt;p&gt;Keep an eye out for issues logged by people using your package and keep your package up to date with security issues.&lt;/p&gt;

&lt;p&gt;Made an exciting package?&lt;br&gt;
Let me know on Twitter/email me ✨&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>npm</category>
      <category>node</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How To Develop An App In 2021: 6 Ways</title>
      <author>Pablo Discobar</author>
      <pubDate>Wed, 28 Jul 2021 06:37:20 +0000</pubDate>
      <link>https://dev.to/pablonax/how-to-develop-an-app-in-2021-6-ways-1ai</link>
      <guid>https://dev.to/pablonax/how-to-develop-an-app-in-2021-6-ways-1ai</guid>
      <description>&lt;p&gt;&lt;span&gt;Application development is a labor-intensive process. There is a long way to go from the idea to the full launching of the application. Based on the analysis of the application development market, we can give exact figures that the development of an app for a clothing store, for example, will take an average from 3 to 6 months. It all depends on the orientation of the app and the objective of it. For instance, developing an app for a calculator doesn't take a lot of time and effort, but creating a high-quality UI with a lot of features and animations is already a more difficult job. Everyone would like to observe the perfect equation, do it fast, high-quality and inexpensive. That's why the IT services market has foreseen a variety of options that enable you to do the work faster and cheaper.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;&lt;b&gt;Request application development in studio
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wpHUyRog--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/07/Studio-900x272.jpg" alt="Studio"&gt;
&lt;/b&gt;&lt;/h2&gt;

&lt;p&gt;&lt;span&gt;This is the simplest way if you don't have time to develop code, create a design, merge one with another, and so on down the list. A good studio will help you choose the necessary functions for the needs of your business. For clarity, you can use the &lt;a href="https://buildfire.com/how-much-to-make-a-mobile-app-calculator/#"&gt;&lt;strong&gt;application calculator&lt;/strong&gt;&lt;/a&gt; to find out what you need to add to your own.&lt;/span&gt;&lt;span&gt;&lt;br&gt;
&lt;/span&gt;&lt;span&gt;But this way has its drawbacks, such as cost and speed of execution. Of course, this will be faster than making everything from scratch yourself, but there are also faster ways.&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;&lt;/h2&gt;

&lt;h2&gt;&lt;b&gt;No code &lt;/b&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzgEKJE8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/07/no-code-900x272.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzgEKJE8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/07/no-code-900x272.jpg" alt="no code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Another frequent way is to develop applications using no code services. To develop an application in this way, you don't need any special programming knowledge. This will be the most financially profitable solution, and much faster than the other ways. But the quality of the application itself can be inappropriate. Again, it all depends on the needs of your business.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;There are many similar services, but I will tell you about Bubble. Do you want to know how to work with it? It's simple. You don't even require programming knowledge, you can configure the application without code. &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;It works like this: you select application components from the standard library, and then customize them at your discretion. This service will allow you to reduce time by doing everything much faster and cheaper than with the traditional approach with the search for developers. The service itself tells you what steps you need to take to make the application functionally more convenient. &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;But meanwhile, there are also disadvantages to this approach. This will never be an app, it's a web version of the app. And compared with real applications, you will lose. Because it will be inconvenient for the users of your application. And for you as well!&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;&lt;/h2&gt;

&lt;h2&gt;&lt;b&gt;Freelance services&lt;/b&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1wTfYC_F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/07/Freelancer-900x272.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1wTfYC_F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/07/Freelancer-900x272.jpg" alt="Freelancer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Freelancers allow you to make development cheaper than in the studio, but often at the same level of development. However, to work with a freelancer, you will definitely need programming knowledge. Freelancers, like some studios, often use application templates in their work. This allows to reduce the time for development and significantly lower the cost of providing services. &lt;/span&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;&lt;b&gt;Go through the courses and develop the application yourself&lt;/b&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eA76YoUx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/07/Courses-900x272.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eA76YoUx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/07/Courses-900x272.jpg" alt="Courses"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;If you are a developer, or just starting out, then the courses are a great opportunity to learn new stuff. Now the Flutter application development industry is growing fast. And every day the demand for applications developed on Flutter skyrockets. This will be the longest way to develop an application, but it will open up fresh opportunities for you. Get more profitable right now, by placing a bet on yourself! As an option, I suggest that you consider courses on &lt;a href="https://www.udemy.com/course/flutter-bootcamp-with-dart/"&gt;&lt;strong&gt;Udemy.&lt;/strong&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;&lt;b&gt;Use open resources&lt;/b&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0prDqydv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/07/open-resource-1-900x292.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0prDqydv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/07/open-resource-1-900x292.jpg" alt="open resource"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Now there are many resources where you can easily find pieces of code for different tasks. For example, the well-known Github. If you have problems writing code, then you can look for a ready-made free solution on this service. But you can't be completely sure how it will work. Sometimes free solutions are not the most reliable. But if you are lucky, then you will save your time and effort.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;&lt;b&gt;Templates (Flutter templates, react-native templates)&lt;/b&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sd2GB7Fl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/07/Templates-900x272.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sd2GB7Fl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/07/Templates-900x272.jpg" alt="Templates"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;At the moment, there are some other ways to develop an application.  For example, use a ready-made template for the app. The ready-made UI template will complement your application with an attractive design and an improved interface. &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Application templates exist for different platforms, such as React Native or Flutter for example. I won't tell you that Flutter allows you to develop an application for all software at once, or that it is a young and growing service. I will tell you about the advantages that await you.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Let's look at the example of the &lt;strong&gt;&lt;a href="https://code.market/product/flutter-e-commerce-template/?utm_source=blog&amp;amp;utm_medium=article&amp;amp;utm_campaign=6-ways-make-app-article"&gt;Airmart template&lt;/a&gt;&lt;/strong&gt;. This is a high-quality template that even a person without high programming knowledge can work with, because everything has already been done for you. It only remains to customize the template, and it's very handy to do it.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jBCpkkUs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/07/2021-07-14-12.29.57.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jBCpkkUs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/07/2021-07-14-12.29.57.jpg" alt="Widgets"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;You can see that everything is neatly organized inside the template. The reused widgets are placed in a separate block. Which makes the process of customizing your app more convenient, because you don't need to compose a ton of code. &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kcjb-LH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/07/2021-07-14-12.30.02-900x666.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kcjb-LH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/07/2021-07-14-12.30.02-900x666.jpg" alt="blanks of ListView.builder"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;There are blanks of ListView.builder, which allow you to easily join the back end to the code. This template is prepared for the stretch of the API.&lt;/span&gt;&lt;span&gt;&lt;br&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0XzcocxX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/07/2021-07-14-12.30.05-900x1184.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0XzcocxX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/07/2021-07-14-12.30.05-900x1184.jpg" alt="multi-functional widgets with conditional logics"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;The template already includes clearly written reusable multi-functional widgets with conditional logic. This allows you to save your time and not repeat the code. And moreover, it is very easy to understand. &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OF2IGvYc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/07/2021-07-14-12.30.10.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OF2IGvYc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/07/2021-07-14-12.30.10.jpg" alt="bootstrap"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Another advantage is the principle of bootstrap, which allows you to change the size of paddings and margins. You can change the application in just a couple of clicks, getting a completely new, high-quality product.  The same thing applies to changing fonts, colors, and shapes of objects in the app. They will automatically change throughout the code, and you will never need to spend your time on manually lifting objects.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8x3PR05G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/07/2021-07-14-12.30.16.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8x3PR05G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/07/2021-07-14-12.30.16.jpg" alt="Dummy data lists"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Dummy data lists will let you run your application easily and effortlessly. When you connect your app, your list of brands or categories will fall into place automatically.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;span&gt;Using templates in the work on the app is a great opportunity to save your time and money on development. Just a few simple steps will allow you to succeed. The first step is to buy a high-quality template, for example, on such a service as Code.Market, the second step is customized, the third step is connected to the backend. That's it, your application is ready. The development of such a product will take a maximum of a month, taking into account the writing of the backend. &lt;/span&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Now you have a clear illustration of the quality of the done work, how much you will spend your time and money. It's up to you, choose the most practical and convenient way for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MZwNHvc6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/07/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-07-19-%25D0%25B2-13.43.17-900x390.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MZwNHvc6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/07/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-07-19-%25D0%25B2-13.43.17-900x390.png" alt="Comparison"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>react</category>
      <category>android</category>
      <category>ios</category>
    </item>
    <item>
      <title>How to make your first contribution to Open Source? A Beginner's Guide
</title>
      <author>Roli Gautam</author>
      <pubDate>Wed, 28 Jul 2021 06:04:13 +0000</pubDate>
      <link>https://dev.to/roligautam/how-to-make-your-first-contribution-to-open-source-a-beginner-s-guide-2cni</link>
      <guid>https://dev.to/roligautam/how-to-make-your-first-contribution-to-open-source-a-beginner-s-guide-2cni</guid>
      <description>&lt;p&gt;I know that you might be thinking🤔 that Is this blog really help you to start your open-source journey? So, I promise you that after reading this blog, you will definitely feel much confident to make your first open-source contribution.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/f6PLkivnzaxMZwk0MH/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/f6PLkivnzaxMZwk0MH/giphy.gif" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am sure that you might be hear about the term “open-source”. And you might be thinking What exactly is it? How can you contribute in it? What are the tech or tools need to know to do open source? How can you get started? So, you are at right place. In this blog, I will cover all this and much more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-what-is-an-open-source"&gt;
  &lt;/a&gt;
  1. What is an open source?
&lt;/h2&gt;

&lt;p&gt;Open Source refers to the source code that is available for modification, enhancement and anyone can use freely. Open-source software is usually developed as a public collaboration and made freely available. Anyone can also contribute in the source code to make it better. GitHub is also an example of an open collaboration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-why-should-you-contribute-in-an-opensource-program"&gt;
  &lt;/a&gt;
  2. Why should you contribute in an open-source program?
&lt;/h2&gt;

&lt;p&gt;This is the first question that arises in our mind that why should you contribute to open-source programs?&lt;br&gt;
So, there are plenty of purposes such as :&lt;br&gt;
• Learn new skills&lt;br&gt;
• Share your knowledge&lt;br&gt;
• Grow together and learn together&lt;br&gt;
• Gain experience in Real-World Development&lt;br&gt;
• Build your Networking with like-minded peoples&lt;br&gt;
• Networking will help you to grow your career&lt;br&gt;
• Know about the workflow of Git and GitHub&lt;br&gt;
• Brushed up your skills&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#3-who-can-contribute-what-do-you-need-to-participate-in-an-opensource-program"&gt;
  &lt;/a&gt;
  3. Who can Contribute? What do you need to participate in an open-source program?
&lt;/h2&gt;

&lt;p&gt;If you are a beginner then most probably, these questions arise in your mind. And you might be thinking that, Are you eligible for this program or not?  Well, the answer is Yes. You can contribute to open-source programs. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/4vV84se27YjvWWS1PU/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/4vV84se27YjvWWS1PU/giphy.gif" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well, For contributing to any open source program,  you don’t need to have a deeper understanding of any tech. Just need to learn the basics of any tech according to your interest and make contributions.&lt;/p&gt;

&lt;p&gt;Let's say, If you know only the basics of HTML and CSS, then you can contribute to any open source project of Web development.  You can make changes in the UI of that project, change color or change the font style. These are very basics issues and you can easily contribute to them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Tip-1&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;: I know, you are much excited to make your first open-source contribution, but before going through all these steps, I would recommend  you to go through this &lt;a href="https://www.javatpoint.com/git-cheat-sheet"&gt;Git Cheat Sheet&lt;/a&gt; and download it on your local PC so that you can review it in future.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#4-how-to-get-involved-in-an-opensource-program"&gt;
  &lt;/a&gt;
  4. How to get involved in an open-source program?
&lt;/h2&gt;

&lt;p&gt;The first step is to register yourself for any beginner-friendly &lt;br&gt;
  open-source program.&lt;/p&gt;

&lt;p&gt;There are some beginner-friendly open-source programs like :&lt;/p&gt;

&lt;p&gt;•       GirlScript Summer of Code(&lt;a href="https://gssoc.girlscript.tech/"&gt;GSSOC&lt;/a&gt;)&lt;br&gt;
• Lets Grow More Summer of Code(&lt;a href="https://gssoc.girlscript.tech/"&gt;LGMSOC&lt;/a&gt;)&lt;br&gt;
• Script Winter of Code(&lt;a href="https://swoc.tech/"&gt;SWOC&lt;/a&gt;)&lt;br&gt;
• Delta Winter of Code(&lt;a href="https://dwoc.io/"&gt;DWOC&lt;/a&gt;)&lt;br&gt;
• NJACK Winter of Code(&lt;a href="https://njackwinterofcode.github.io/"&gt;NWOC&lt;/a&gt;)&lt;br&gt;
• Kharagpur Winter of Code(&lt;a href="https://kwoc.kossiitkgp.org/"&gt;KWOC&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Checkout &lt;a href="https://github.com/deepanshu1422/List-Of-Open-Source-Internships-Programs"&gt;this&lt;/a&gt; to know about more open-source programs and open-source competitions.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After enrolling yourself, I am pretty sure that you will get selected.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Tip-2&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;: Try to fill the application form carefully and write your answers properly, You will definitely get selected.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#5-how-to-choose-an-opensource-project"&gt;
  &lt;/a&gt;
  5. How to choose an open-source project?
&lt;/h2&gt;

&lt;p&gt;This is a very crucial step. After getting selected, visit on the official website of that open-source program and Check projects according to your tech interest and convenience.&lt;/p&gt;

&lt;p&gt;Within those projects, whenever you catch yourself thinking that something could be better or altered, act on your instinct.&lt;/p&gt;

&lt;p&gt;And Make sure, your selected project will follow these things :&lt;/p&gt;

&lt;p&gt;• The project must have a license&lt;br&gt;
• It should be a recent project that means mentors and admin are active&lt;br&gt;
• Make sure, people are contributing to that project&lt;br&gt;
• There should be an active discussion on the project issue&lt;br&gt;
• Check that mentors are reviewing pull requests of the participants&lt;/p&gt;

&lt;p&gt;If all the above conditions are satisfied by the project then you should go for that project.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#6-create-your-first-issue"&gt;
  &lt;/a&gt;
  6. Create your first issue
&lt;/h2&gt;

&lt;p&gt;• After selecting a project, open that project on GitHub&lt;br&gt;
• And check what can you make changes so that this project becomes better?&lt;br&gt;
• Now, after finding an issue on which you can work without any difficulty, visit that project on &lt;code&gt;GitHub&lt;/code&gt; .&lt;br&gt;
• There will be a section of &lt;code&gt;Issues&lt;/code&gt; as shown in this image :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DqOLwLFa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qbf9bci5iek1lislz5vr.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DqOLwLFa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qbf9bci5iek1lislz5vr.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;• Click here and you will find a option of &lt;code&gt;New issue&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e8t239mN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aog8dc3tdn3uzngp2irx.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e8t239mN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aog8dc3tdn3uzngp2irx.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;• After clicking on &lt;code&gt;New issue&lt;/code&gt;, you will find some type of issue as shown in this image:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ufanIZek--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qemxsulrc01p836dlj5w.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ufanIZek--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qemxsulrc01p836dlj5w.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;• You can choose any option according to your issue type.&lt;br&gt;
• And Fill all the details of your issue and click on &lt;code&gt;Submit new issue&lt;/code&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m0wDcWSj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25mclg7fl2mhn2a40i5h.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m0wDcWSj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25mclg7fl2mhn2a40i5h.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Congratulation!👏 Finally, you created your first issue.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Tip-3&lt;/em&gt;&lt;/strong&gt; : &lt;em&gt;I would suggest that you should describe your issue properly and also mention that how will you solve this issue.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#7-what-can-you-do-to-get-assigned-that-issue-to-you"&gt;
  &lt;/a&gt;
  7. What can you do to get assigned that issue to you??
&lt;/h2&gt;

&lt;p&gt;• After submitting your issue, Wait for 2-3 days and a mentor or admin will assign you to work on that issue.&lt;br&gt;
• If you are not getting any response from a mentor then you can text them on the discord channel (most of the open-source programs make a discord channel). &lt;/p&gt;

&lt;p&gt;• After that, I am pretty sure that you will get assigned and get a message on GitHub something like this :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZijoHQ3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wt7wnd3mee1k2bood5om.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZijoHQ3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wt7wnd3mee1k2bood5om.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Tip-4&lt;/em&gt;&lt;/strong&gt; : &lt;em&gt;I would suggest you to text individually to the mentor on discord or any other platform like LinkedIn, So that they can notice your message and assign you.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#8-how-to-start-working-on-the-project"&gt;
  &lt;/a&gt;
  8. How to start working on the project?
&lt;/h2&gt;

&lt;p&gt;If you followed all the above steps, then you are good to go.🙌 So let's talk about how to actually start working on the project?&lt;/p&gt;

&lt;p&gt;There are few steps such as : &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(i) Fork the project :&lt;/strong&gt; At the top right corner, you will see the term &lt;code&gt;fork&lt;/code&gt;. All you need to do is click it and you will have created a copy of the same project in your account. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NWRKMJcW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ua59rali2sgwjw1m2bvu.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NWRKMJcW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ua59rali2sgwjw1m2bvu.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(ii) Git SetUp :&lt;/strong&gt; Now, first thing is need to set your Git environment so that you can work on that. &lt;/p&gt;

&lt;p&gt;If you have Git installed then open CMD, but if you haven't then install it from &lt;a href="https://git-scm.com/downloads"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are two steps to setup your git environment :&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(a)Set your user :&lt;/strong&gt; You need to set your user name because every git commit use this information. So use this command to set your user name :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git config --global user.name "Your_Name"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;(b)Set your email address :&lt;/strong&gt; Also you need to set your email address and for that use this command :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git config --global user.email &amp;lt;your_email@gmail.com&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, you are done with the Git Setup. Now, You can work on that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(iii) Initialize your Project as a Git Project:&lt;/strong&gt; Before cloning the project, first thing is to initialize your repository as git repo. So for that, run this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git init  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command is used to create a new blank repository and to make an existing project as a Git project. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vz8hwKM2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zkkuqoytqfaq1bxdr2wy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vz8hwKM2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zkkuqoytqfaq1bxdr2wy.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(iv) Clone the project :&lt;/strong&gt; Now, You need to copy the link of that project, which will be available under the &lt;code&gt;Code&lt;/code&gt; option as shown :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kcpUeSyg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yomx2ybc7m9t7bwodq22.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kcpUeSyg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yomx2ybc7m9t7bwodq22.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, now to clone the repository, use this command :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git clone &amp;lt;url&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command will create a copy of the project on your local pc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---9kiVuNt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/245tsiaybwv2dvagmh5s.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---9kiVuNt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/245tsiaybwv2dvagmh5s.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(v) Create a Branch:&lt;/strong&gt; Before start working on the project, you need to create a branch. Run this command to create a branch:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git checkout -b &amp;lt;your_branch_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D-B3I_qe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w1xzo3krhk5rj3vcnw65.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D-B3I_qe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w1xzo3krhk5rj3vcnw65.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;• As shown in the image, before creating the branch, we were in the master branch.&lt;br&gt;
• After creating a branch, we will enter into our newly created branch&lt;br&gt;
• We can also check all the branches present in the project by using this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git branch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UT6NwrAK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f2ysv393nrj6cjxl6c9s.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UT6NwrAK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f2ysv393nrj6cjxl6c9s.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;• Now, you can see in the image that there are two branches in our project:&lt;br&gt;
&lt;strong&gt;a. master branch:&lt;/strong&gt; This will always be present in your project as default or main branch.&lt;br&gt;
&lt;strong&gt;b. new branch:&lt;/strong&gt; This is our newly created branch.&lt;/p&gt;

&lt;p&gt;• We are in our newly created branch &lt;code&gt;newbranch&lt;/code&gt; that’s why it is shown in green color and now, you can write your code in that project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Tip-5&lt;/em&gt;&lt;/strong&gt; : &lt;em&gt;Try to run &lt;code&gt;$ git status&lt;/code&gt; command as much as possible to check the status of your project at any instant.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git status
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#9-add-and-commit-your-changes"&gt;
  &lt;/a&gt;
  9. Add and commit your changes:
&lt;/h2&gt;

&lt;p&gt;After making the required changes in your code, you need to add and commit these changes to your project. &lt;/p&gt;

&lt;p&gt;• To add your changes run this command :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git add -A
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;• Run this command to commit :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git commit -m "Your_commit_message"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command is used to create a snapshot of the staged changes along a timeline of a Git project's history.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MXqnApm---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2l6iu3mxr1ypjjtyrtb.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MXqnApm---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2l6iu3mxr1ypjjtyrtb.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After running the &lt;code&gt;$ git status&lt;/code&gt; command, we can see in the image that the working tree is clean.&lt;/p&gt;

&lt;p&gt;You can also use &lt;code&gt;git log&lt;/code&gt; command to check the history of commits that are made in the repository.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git log
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After running the &lt;code&gt;$ git log&lt;/code&gt; command, you might be thinking that how to return back to your CMD. So, for that Press the q key to return to your command prompt.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Tip-6&lt;/em&gt;&lt;/strong&gt;: &lt;em&gt;Write your commit message properly. You can write about what you made changes in that repository?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Let's say you created an issue to make changes in a submit button. Then your commit message should be like :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git commit -m "Modification in submit button" 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#10-push-your-project-to-the-github"&gt;
  &lt;/a&gt;
  10. Push your project to the GitHub
&lt;/h2&gt;

&lt;p&gt;Now, you need to push your project. The git push command is used to upload local repository content to a remote repository.  Use this command for pushing your project :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git push origin &amp;lt;your_branch_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git push --set -upstream origin &amp;lt;your_branch_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Og6rErVt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mv9mrpegc4t4jw4f02id.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Og6rErVt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mv9mrpegc4t4jw4f02id.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Tip-7&lt;/em&gt;&lt;/strong&gt;: &lt;em&gt;You are doing great. Just try to explore more git commands. And if possible, you can take a print out of the &lt;code&gt;CheatSheet&lt;/code&gt; and paste it near your study table.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#11-create-a-pull-request-"&gt;
  &lt;/a&gt;
  11. Create a pull request :
&lt;/h2&gt;

&lt;p&gt;After pushing your project, visit on GitHub and there you will find a big green button of &lt;code&gt;compare &amp;amp; pull request&lt;/code&gt; as shown in the image : &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0_pKWlWf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ycmmrq9gto0e6kgopzi3.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0_pKWlWf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ycmmrq9gto0e6kgopzi3.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on that and create a pull request in the given format of that project such as :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LJS3JAHb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vyyqu8wv48buugmoc6nv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LJS3JAHb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vyyqu8wv48buugmoc6nv.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Tip-8&lt;/em&gt;&lt;/strong&gt; : &lt;em&gt;You can also commit an additional message as shown in the image, so that mentor can review your pull request soon.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k68ZYtdG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qp1pz4r1q4luuvlnpqjh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k68ZYtdG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qp1pz4r1q4luuvlnpqjh.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Congratulation!🤩 Finally, you created your first pull request. You should feel proud on yourself for making your first contribution to an open-source program.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/2hfFmnev3vdNTYKR6x/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/2hfFmnev3vdNTYKR6x/giphy.gif" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>github</category>
      <category>git</category>
      <category>firstpost</category>
    </item>
    <item>
      <title>Difference between accessing the JavaScript Object properties using dot notation and bracket notation</title>
      <author>capscode</author>
      <pubDate>Wed, 28 Jul 2021 06:02:25 +0000</pubDate>
      <link>https://dev.to/capscode/difference-between-accessing-the-javascript-object-properties-using-dot-notation-and-bracket-notation-76b</link>
      <guid>https://dev.to/capscode/difference-between-accessing-the-javascript-object-properties-using-dot-notation-and-bracket-notation-76b</guid>
      <description>&lt;p&gt;In JavaScript we can access the properties of object using dot notation(person.first_name) and bracket notation(person[first_name]).&lt;br&gt;
But what's the difference between these two notations and when to use which one ?&lt;br&gt;
Just stay here with me for another 20 mins and I promise you will never forget this concept.&lt;/p&gt;

&lt;p&gt;First we will see what's the issue we will face using dot operator.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;lname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fname&lt;/span&gt; &lt;span class="c1"&gt;// John&lt;/span&gt;
    &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fname&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// John&lt;/span&gt;

    &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;//ReferenceError: fname is not defined&lt;/span&gt;
    &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fname&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="c1"&gt;//SyntaxError: Unexpected string&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;first_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fname&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;first_name&lt;/span&gt; &lt;span class="c1"&gt;// undefined&lt;/span&gt;
    &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// John&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Why is it soooooo......&lt;br&gt;
I hope you got at least 2% of clarity from this example !!&lt;/p&gt;

&lt;p&gt;lets see one more example and clarification,&lt;br&gt;
when to use dot and when not too.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
      &lt;span class="na"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;meow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
      &lt;span class="na"&gt;dog&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;woof&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;  
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cat&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dog&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;// woof (not as expected ?)&lt;/span&gt;


    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
      &lt;span class="na"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;meow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
      &lt;span class="na"&gt;dog&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;woof&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;  
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cat&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;dog&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="c1"&gt;// meow (the expected result)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, &lt;br&gt;
obj.dog does not evaluate the dog property and it directly denotes the dog property of the obj object, if dog property is present then it return the value otherwise undefined.&lt;/p&gt;

&lt;p&gt;in obj[dog], here dog is first evaluated to get the property name. Upon evaluating the value of dog i.e cat is assigned and the final result is obj["cat"] and this will return "meow"&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#why-are-we-looking-into-these-many-comparisons-"&gt;
  &lt;/a&gt;
  Why are we looking into these many comparisons ?
&lt;/h2&gt;

&lt;p&gt;Sometimes when we are working in production with some API calls and with JSON data, then their might be the chance to get the key name with spaces, (&amp;amp; that we might don't know being a frontend developer)&lt;br&gt;
then in that case we cannot access it with dot notation.&lt;br&gt;
eg.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;first name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="c1"&gt;//error&lt;/span&gt;
&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;first name"] // John
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#lets-see-some-of-the-important-points-of-dot-and-bracket-notations"&gt;
  &lt;/a&gt;
  Lets see some of the important points of dot and bracket notations
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;(obj.x &amp;lt;---- here x is a property identifier)&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#to-access-javascript-object-properties-using-dot-notation-the"&gt;
  &lt;/a&gt;
  To access javascript object properties using dot notation, the
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  Property identifiers &lt;strong&gt;can only be&lt;/strong&gt; alphanumeric (and  &lt;code&gt;_&lt;/code&gt;  and  &lt;code&gt;$&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;  Property identifiers &lt;strong&gt;cannot start&lt;/strong&gt; with a number.&lt;/li&gt;
&lt;li&gt; Property identifiers &lt;strong&gt;cannot contain&lt;/strong&gt; variables.&lt;/li&gt;
&lt;li&gt; Valid Identifier (&lt;strong&gt;contain&lt;/strong&gt; Unicode letters, $, _, and digits (0-9), but may &lt;strong&gt;not start&lt;/strong&gt; with a digit)&lt;/li&gt;
&lt;li&gt;do &lt;strong&gt;not start&lt;/strong&gt; with a digit or hyphen&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;no&lt;/strong&gt; spaces&lt;/li&gt;
&lt;li&gt;do &lt;strong&gt;not include&lt;/strong&gt; special characters except  $ and _ (underscore)&lt;/li&gt;
&lt;li&gt;  obj.prop_1, obj.prop$ is correct&lt;/li&gt;
&lt;li&gt;  obj.1prop, obj.prop name is incorrect&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#to-access-javascript-object-properties-using-bracket-notation-the-key-should-be"&gt;
  &lt;/a&gt;
  To access javascript object properties using bracket notation, the key should be
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  Property identifiers &lt;strong&gt;have to be&lt;/strong&gt; a String or a variable that references a String.&lt;/li&gt;
&lt;li&gt;  we &lt;strong&gt;can use&lt;/strong&gt; variables, spaces, and Strings that start with numbers&lt;/li&gt;
&lt;li&gt;it can be an expression &lt;/li&gt;
&lt;li&gt; obj["1prop"], obj["prop name"] is correct
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fav&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;game&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cricket&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;coffee&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;some_value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;temp&lt;/span&gt; &lt;span class="c1"&gt;//undefined&lt;/span&gt;
    &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;//coffee&lt;/span&gt;
    &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="c1"&gt;//NaN&lt;/span&gt;
    &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="c1"&gt;//syntax error&lt;/span&gt;
    &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// "some value"&lt;/span&gt;
    &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;favgame&lt;/span&gt; &lt;span class="c1"&gt;// "cricket"&lt;/span&gt;
    &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;game&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// "cricket"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;In Simple words,&lt;/strong&gt;&lt;br&gt;
The two most common ways to access properties in JavaScript are with a dot and with square brackets. Both &lt;code&gt;value.x and value[x]&lt;/code&gt; access a property on value—but not necessarily the same property. &lt;br&gt;
The difference is in how &lt;strong&gt;x&lt;/strong&gt; is interpreted. When using a dot, the part after the dot must be a valid variable name, and it directly names the property. When using square brackets, the expression between the brackets is evaluated to get the property name. Whereas value.x fetches the property of value named “x”, value[x] tries to evaluate the expression x and uses the result as the property name.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#lets-see-how-to-assign-variable-as-key-of-an-object-in-javascript"&gt;
  &lt;/a&gt;
  Lets see how to assign variable as key of an object in JavaScript
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//undefined&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//John&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Why we are getting undefined ?&lt;br&gt;
because we have not assigned the variable as the key of an object in proper way.&lt;br&gt;
To assign variable as key we have to use bracket notation [] as below,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//undefined&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//John&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#dot-notations-limitation"&gt;
  &lt;/a&gt;
  Dot Notation’s Limitation
&lt;/h2&gt;

&lt;p&gt;if we take this object :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;digit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;start with digit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;name123&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;does not start with digit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;$ sign&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hyphen&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;NAME&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;upper case&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lower case&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="c1"&gt;//source: stackoverflow&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;accessing their proprieties using dot notation&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="c1"&gt;// ❌ SyntaxError&lt;/span&gt;
&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// ❌ SyntaxError&lt;/span&gt;
&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name123&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// ✅ 'does not start with digit'&lt;/span&gt;
&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="c1"&gt;// ✅  '$ sign'&lt;/span&gt;
&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// ❌ SyntaxError&lt;/span&gt;
&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name-123&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;// ❌ SyntaxError&lt;/span&gt;
&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NAME&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// ✅ 'upper case'&lt;/span&gt;
&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// ✅ 'lower case'&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But none of this is a problem for the Bracket Notation:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;123&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;     &lt;span class="c1"&gt;// ✅ 'digit'&lt;/span&gt;
&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;123name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="c1"&gt;// ✅ 'start with digit'&lt;/span&gt;
&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name123&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="c1"&gt;// ✅ 'does not start with digit'&lt;/span&gt;
&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;$name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;   &lt;span class="c1"&gt;// ✅ '$ sign'&lt;/span&gt;
&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name-123&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="c1"&gt;// ✅ 'does not start with digit'&lt;/span&gt;
&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;NAME&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="c1"&gt;// ✅ 'upper case'&lt;/span&gt;
&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="c1"&gt;// ✅ 'lower case'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#some-more-mind-blowing-examples-of-dot-and-bracket-notation-in-js-object"&gt;
  &lt;/a&gt;
  Some more mind blowing examples of dot and bracket notation in JS object
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;true&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;john&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;//john&lt;/span&gt;
&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;//john&lt;/span&gt;
&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;//john&lt;/span&gt;
&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;//john&lt;/span&gt;
&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;//undefined&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;john&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kc"&gt;undefined&lt;/span&gt; &lt;span class="c1"&gt;//john&lt;/span&gt;
&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;//john&lt;/span&gt;
&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;//john&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thank you for reading this far. This is a brief introduction of &lt;strong&gt;Difference between accessing object properties using dot and bracket notation in JS&lt;/strong&gt; .&lt;br&gt;
If you find this article useful, like and share this article. Someone could find it useful too. If you find anything technically inaccurate please feel free to comment below.&lt;br&gt;
Now you can also play around the objects in JS.&lt;/p&gt;

&lt;p&gt;Hope its a nice and informative read for you.&lt;br&gt;
VISIT &lt;a href="https://www.capscode.in/#/blog"&gt;https://www.capscode.in/#/blog&lt;/a&gt; TO LEARN MORE...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#if-my-article-helped-you"&gt;
  &lt;/a&gt;
  IF MY ARTICLE HELPED YOU
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/capscode"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zQj764Ae--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-orange.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br&gt;
&lt;a class="mentioned-user" href="https://dev.to/capscode"&gt;@capscode&lt;/a&gt;
&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>10 Newsletters for Developers</title>
      <author>Suraj Vishwakarma</author>
      <pubDate>Wed, 28 Jul 2021 05:53:55 +0000</pubDate>
      <link>https://dev.to/basecampxd/10-newsletters-for-developers-5c7j</link>
      <guid>https://dev.to/basecampxd/10-newsletters-for-developers-5c7j</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;A newsletter can be a good source of getting updated about the progress that is happening within the industry, a programming language, or any particular topic and product. &lt;/p&gt;

&lt;p&gt;Today's Newsletter provides much useful information that can be useful. It saves our time providing great articles, tips, useful resources, and et cetera.&lt;/p&gt;

&lt;p&gt;So today, we are going to see 10+ newsletter that is created by developers and organization for developers.&lt;/p&gt;

&lt;p&gt;So let's get started.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#weekly-newsletter-of-surajondev"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.getrevue.co/profile/surajondev"&gt;Weekly Newsletter of SurajOnDev&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Time for &lt;a href="https://michelletanpy.hashnode.dev/what-ive-learnt-the-importance-of-self-promotion"&gt;self promotion&lt;/a&gt;. This is a weekly newsletter by myself.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cL1qWSEE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/boivc5mdfzzs2kt0s5wg.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cL1qWSEE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/boivc5mdfzzs2kt0s5wg.PNG" alt="Weekly Newsletter of SurajOnDev"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-you-will-get"&gt;
  &lt;/a&gt;
  What you will get?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Read of the Week&lt;/strong&gt;: 5 best articles hand-picked by myself from different platforms. This article will be developer, self-growth, and productivity-oriented.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tool of the Week&lt;/strong&gt;: A resource or tool link that will help in easing your work.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Our latest blog post&lt;/strong&gt;: Latest 3 blog post from SurajOnDev that is me.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Free eBook and Resources&lt;/strong&gt;: Occasionally you will get free eBook that are by developers and for developers.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Frequency&lt;/strong&gt;: Weekly&lt;br&gt;
&lt;strong&gt;Subscribe Here&lt;/strong&gt;:  &lt;a href="https://4qrqcv1momr.typeform.com/to/RVoZX0uD"&gt;Weekly Newsletter of SurajOnDev&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#javascript-weekly"&gt;
  &lt;/a&gt;
  &lt;a href="https://javascriptweekly.com/"&gt;JavaScript Weekly&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;A newsletter of JavaScript articles, news and cool projects&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FUy69nNU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/16hsoz6m6i31quuyuq54.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FUy69nNU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/16hsoz6m6i31quuyuq54.png" alt="JavaScript Weekly"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-you-will-get"&gt;
  &lt;/a&gt;
  What you will get?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;JavaScript Tutorials&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Articles&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Jobs Details related to JavaScript&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Code and Tools&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Frequency&lt;/strong&gt;: Weekly&lt;br&gt;
&lt;strong&gt;Subscribe Here&lt;/strong&gt;:  &lt;a href="https://javascriptweekly.com/"&gt;JavaScript Weekly&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#pycoders-weekly"&gt;
  &lt;/a&gt;
  &lt;a href="https://pycoders.com/"&gt;PyCoder's Weekly&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;A free, weekly e-mail newsletter for those interested in Python development and various topics around Python and the communi‍‍‍ty:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BYQVpg1u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4q8zw60sy6lp1f8yu638.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BYQVpg1u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4q8zw60sy6lp1f8yu638.png" alt="PyCoder's Weekly"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-you-will-get"&gt;
  &lt;/a&gt;
  What you will get?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Upcoming Python Events&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Python Article and Tutorials&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Discussion post of reddit&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Python Jobs&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Projects and Code&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Frequency&lt;/strong&gt;: Weekly&lt;br&gt;
&lt;strong&gt;Subscribe Here&lt;/strong&gt;:  &lt;a href="https://pycoders.com/"&gt;PyCoder's Weekly&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#dev-digest"&gt;
  &lt;/a&gt;
  &lt;a href="https://dev.to/"&gt;Dev Digest&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;A Newsletter by The Dev Community.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5j9WASfj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llnyk0jeu79qt4uj1qi6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5j9WASfj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llnyk0jeu79qt4uj1qi6.png" alt="Dev Digest"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-you-will-get"&gt;
  &lt;/a&gt;
  What you will get?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Curated list of Articles based on your interest&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Frequency&lt;/strong&gt;: Mostly Weekly&lt;br&gt;
&lt;strong&gt;Subscribe Here&lt;/strong&gt;:  &lt;a href="https://dev.to/"&gt;Dev Digest&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#oreilly-newsletters"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.oreilly.com/emails/newsletters/"&gt;O'Reilly Newsletters&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Stay informed. Receive weekly insight from industry insiders—plus exclusive content, offers, and more on the topic of software development.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h06iCdFG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c5jsorxrvjcr8qy7vk1f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h06iCdFG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c5jsorxrvjcr8qy7vk1f.png" alt="O'Reilly Newsletters"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-you-will-get"&gt;
  &lt;/a&gt;
  What you will get?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Interesting Projects&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Programming Articles&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Exclusive Content&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Offers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Frequency&lt;/strong&gt;: Weekly&lt;br&gt;
&lt;strong&gt;Subscribe Here&lt;/strong&gt;:  &lt;a href="https://www.oreilly.com/emails/newsletters/"&gt;O'Reilly Newsletters&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#github-explore"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/explore/email"&gt;GitHub Explore&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;The perfect way to keep on top of everything GitHub. Every Tuesday, we’ll send you an email with everything we found for you in the past week based on your interests.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S96Y-kZe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oi9q8odoyfdglbub6a4n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S96Y-kZe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oi9q8odoyfdglbub6a4n.png" alt="GitHub Explore"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-you-will-get"&gt;
  &lt;/a&gt;
  What you will get?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Trending Repositories&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Trending Developers&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Articles&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Events&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Frequency&lt;/strong&gt;: Weekly/Daily/Monthly&lt;br&gt;
&lt;strong&gt;Subscribe Here&lt;/strong&gt;:  &lt;a href="https://github.com/explore/email"&gt;GitHub Explore&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#software-lead-weekly"&gt;
  &lt;/a&gt;
  &lt;a href="https://softwareleadweekly.com/"&gt;Software Lead Weekly&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;A weekly email for busy people who care about people, culture and leadership.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--efAOfWcL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q848njf3qpaei6d36y08.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--efAOfWcL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q848njf3qpaei6d36y08.png" alt="software-lead-weekly"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-you-will-get"&gt;
  &lt;/a&gt;
  What you will get?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Inspiring tweets&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Article about People and Culture&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Guide on Leadership&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Frequency&lt;/strong&gt;: Weekly&lt;br&gt;
&lt;strong&gt;Subscribe Here&lt;/strong&gt;:  &lt;a href="https://softwareleadweekly.com/"&gt;Software Lead Weekly&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#newsletter-by-sitepoint"&gt;
  &lt;/a&gt;
  &lt;a href="https://softwareleadweekly.com/"&gt;Newsletter by SitePoint&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Get the freshest resources and stories for developers, designers, and digital creators in your inbox each week.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NixsAFNj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zdtuokx4gpyd2v14luw2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NixsAFNj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zdtuokx4gpyd2v14luw2.png" alt="SitePoint"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-you-will-get"&gt;
  &lt;/a&gt;
  What you will get?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Tips for writing better code&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Article for Web Development&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Resources&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Frequency&lt;/strong&gt;: Daily&lt;br&gt;
&lt;strong&gt;Subscribe Here&lt;/strong&gt;:  &lt;a href="https://www.sitepoint.com/newsletters/"&gt;Newsletter by SitePoint&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#hackernewsletter"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.hackernewsletter.com/"&gt;Hackernewsletter&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;They've put out a weekly newsletter of the best articles on startups, technology, programming, and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CJBkGrIw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kkypvai3cprdmznw9hpp.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CJBkGrIw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kkypvai3cprdmznw9hpp.PNG" alt="\Hackernewsletter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-you-will-get"&gt;
  &lt;/a&gt;
  What you will get?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Articles handpicked by them&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;List of Books&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Startup News&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;And some fun stuff&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Frequency&lt;/strong&gt;: Weekly&lt;br&gt;
&lt;strong&gt;Subscribe Here&lt;/strong&gt;:  &lt;a href="https://www.hackernewsletter.com/"&gt;Hackernewsletter&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#smashing-magazine"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.smashingmagazine.com/the-smashing-newsletter/"&gt;Smashing Magazine&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Every Tuesday we send out an editorial email newsletter with useful tips and techniques on front-end and UX. Subscribe and get the Interface Design Checklists (131 MB, PDF) as a lil' gift.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sPMmcjEv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n443gzvdgtm2hghpas92.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sPMmcjEv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n443gzvdgtm2hghpas92.png" alt="Smashing Magazine"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-you-will-get"&gt;
  &lt;/a&gt;
  What you will get?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Tips and tricks for frontend&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UI/UX&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Frequency&lt;/strong&gt;: Weekly&lt;br&gt;
&lt;strong&gt;Subscribe Here&lt;/strong&gt;:  &lt;a href="https://www.hackernewsletter.com/"&gt;Hackernewsletter&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#last-note"&gt;
  &lt;/a&gt;
  Last Note
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;I hope this newsletter will be beneficial for you. Thank you reading the blog post.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>watercooler</category>
      <category>beginners</category>
    </item>
    <item>
      <title>31 Front-End Development Study Topics to Improve Your Code Quality</title>
      <author>Tim Winfred (He/She/They)</author>
      <pubDate>Wed, 28 Jul 2021 05:20:02 +0000</pubDate>
      <link>https://dev.to/twinfred/28-front-end-development-study-topics-to-improve-your-code-quality-3mh9</link>
      <guid>https://dev.to/twinfred/28-front-end-development-study-topics-to-improve-your-code-quality-3mh9</guid>
      <description>&lt;p&gt;If you spend a lot of time doing front-end development, you know how big the the world of HTML, CSS and JavaScript are. I came up with this list of topics after chatting with several different front-end developers over the past nine months. Some of the topics also came from my own experiences working as a full-time front-end engineer for the past three years.&lt;/p&gt;

&lt;p&gt;The list (written in no particular order) may feel a bit intimidating to me now, but I am remaining optimistic about being able to continually grow my knowledge about each of these topics and hopefully commit them to memory as I use them in the wild. I actually decided to create this list after feeling a bout of imposter syndrome today at work. Now, I'm feeling excited to continue digging into each topic further!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The Document Object Model (DOM) and CSS Object Model (CSSOM)&lt;/li&gt;
&lt;li&gt;The JavaScript Event Loop, Promises, Asyc/Await&lt;/li&gt;
&lt;li&gt;CSS &lt;code&gt;position&lt;/code&gt; Property&lt;/li&gt;
&lt;li&gt;CSS Flexbox Layout&lt;/li&gt;
&lt;li&gt;HTML Roles&lt;/li&gt;
&lt;li&gt;Common Accessibility Issues to Always Check For&lt;/li&gt;
&lt;li&gt;Unit &amp;amp; Integration Testing (Jest, Mocha, Chai, Cypress, Axe-Core)&lt;/li&gt;
&lt;li&gt;Form &lt;code&gt;action&lt;/code&gt; and &lt;code&gt;target&lt;/code&gt; Attributes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/twinfred/design-patterns-in-javascript-1l2l"&gt;JavaScript Design Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Closures and Thunks&lt;/li&gt;
&lt;li&gt;CSS Variables and Preprocessors&lt;/li&gt;
&lt;li&gt;JavaScript as a Statically Types Language (TypeScript)&lt;/li&gt;
&lt;li&gt;Mutable and Immutable Types in JavaScript&lt;/li&gt;
&lt;li&gt;JavaScript Passed by Reference / Passed by Value&lt;/li&gt;
&lt;li&gt;JSON, JSON-LD, JSON Schemas &amp;amp; UI Schemas&lt;/li&gt;
&lt;li&gt;HTML Meta Tags (Especially Viewport)&lt;/li&gt;
&lt;li&gt;Different Ways Pages Zoom and How To Optimize For That&lt;/li&gt;
&lt;li&gt;Front-End Frameworks (React, Vue, Angular)&lt;/li&gt;
&lt;li&gt;HTML Templating (Handlebars, EJS)&lt;/li&gt;
&lt;li&gt;Webpack / Babel&lt;/li&gt;
&lt;li&gt;Git, Version Control and Rebasing&lt;/li&gt;
&lt;li&gt;Jenkins, Docker, Continuous Integration&lt;/li&gt;
&lt;li&gt;Caching&lt;/li&gt;
&lt;li&gt;CSS Methodologies (i.e. BEM)&lt;/li&gt;
&lt;li&gt;JavaScript Array Methods: &lt;code&gt;.sort()&lt;/code&gt;, &lt;code&gt;.filter()&lt;/code&gt;, &lt;code&gt;.map()&lt;/code&gt;, &lt;code&gt;.reduce()&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;JavaScript Object Methods: &lt;code&gt;.keys()&lt;/code&gt;, &lt;code&gt;.entries()&lt;/code&gt;, &lt;code&gt;.values()&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Front-End Performance Optimization &amp;amp; Speed&lt;/li&gt;
&lt;li&gt;CSS Specificity and Inheritance&lt;/li&gt;
&lt;li&gt;State Management (i.e. Redux)&lt;/li&gt;
&lt;li&gt;Semantic HTML&lt;/li&gt;
&lt;li&gt;Communicating with RESTful APIs&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Feel free to leave a comment below if you have any suggestions for more topics to add to the list. Also, feel free to &lt;a href="https://twitter.com/Contimporary"&gt;hit me up on Twitter @Contimporary&lt;/a&gt; to follow my journey to become a senior developer!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>Learning Python-Basic course: Day 23, String Methods Part-2</title>
      <author>Aatmaj</author>
      <pubDate>Wed, 28 Jul 2021 05:15:14 +0000</pubDate>
      <link>https://dev.to/aatmaj/day-23-fi9</link>
      <guid>https://dev.to/aatmaj/day-23-fi9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#today-we-cover-more-about-string-functions"&gt;
  &lt;/a&gt;
  Today we cover more about string functions.
&lt;/h2&gt;




&lt;p&gt;String functions are inbuilt methods to modify and change strings. In case you missed yesterday's part, &lt;a href="https://dev.to/aatmaj/learning-python-basic-course-day-22-string-methods-part-1-9j8"&gt;click here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#string-functions-for-gui"&gt;
  &lt;/a&gt;
  String functions for GUI.
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;isalpha()- to check if all characters are alphabets.&lt;/li&gt;
&lt;li&gt;isalnum()- to check if all characters are alphanumeric.&lt;/li&gt;
&lt;li&gt;isdigit()- to check if all characters are digits.&lt;/li&gt;
&lt;li&gt;islower()- to check if all characters are lower case.&lt;/li&gt;
&lt;li&gt;isspace()- to check if all characters are blank spaces.&lt;/li&gt;
&lt;li&gt;istitle()- to check if all characters &lt;a href="https://www.w3schools.com/python/ref_string_title.asp#:~:text=The%20title()%20method%20returns,be%20converted%20to%20upper%20case."&gt;follow title rules&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;isupper()-to check if all characters are upper case.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;The methods above are useful especially when we deal with GUI. For example, when we want the users to enter only alphanumeric values for passwords, alphabets for names and only digits for pin-codes These are useful to prevent errors in complex operations like OOP, GUI or file reading which we will cover in the next module.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;" Computer Academy"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#Returns True if all characters in the string are alphabets
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"1."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;isalpha()&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isalpha&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;


&lt;span class="c1"&gt;#Returns True if all characters in the string are only alphanumeric
&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Level1"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"2."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;isalnum()&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isalnum&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; 


&lt;span class="c1"&gt;#Returns True if all characters in the string are digits
&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"1154"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"3."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;isdigit()&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdigit&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; 


&lt;span class="c1"&gt;#Returns True if all characters in the string are lower case
&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"computer academy"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"4."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;islower()&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;islower&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; 


&lt;span class="c1"&gt;#Returns True if all characters in the string are whitespaces
&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"computer academy"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"5."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;isspace()&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isspace&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; 


&lt;span class="c1"&gt;#Returns True if the string follows the rules of a title
&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Computer Academy"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"6."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;istitle()&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;istitle&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; 


&lt;span class="c1"&gt;#Returns True if all characters in the string are upper case
&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"PYTHON PROGRAMMING"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"7."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;isupper()&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isupper&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; Computer Academy
1.  isalpha()    False

 Level1
2.  isalnum()    True

 1154
3.  isdigit()    True

 computer academy
4.  islower()    True

 computer academy
5.  isspace()    False

 Computer Academy
6.  istitle()    True

 PYTHON PROGRAMMING
7.  isupper()    True

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#exercise"&gt;
  &lt;/a&gt;
  Exercise-
&lt;/h2&gt;

&lt;p&gt;Write a program to check if a string is alphabetic, numeric or alphanumeric or none.. answer in the &lt;a href="https://github.com/Aatmaj-Zephyr/Learning-Python"&gt;Learning Python repo&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;So friends that's all for this part. 😊 Hope you all are enjoying.😎 Please let me know in the comment section if you liked it or not. 🧐 And don't forget to like the post if you did. 😍 I am open to any suggestions or doubts. 🤠 Just post in the comments below or gmail me. 😉&lt;br&gt;
Thank you for being so patient.👍&lt;/p&gt;

</description>
      <category>python</category>
      <category>learningpython</category>
      <category>tutorial</category>
      <category>codenewbie</category>
    </item>
  </channel>
</rss>
