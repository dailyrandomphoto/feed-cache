<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Making an esolang</title>
      <author>JavaCode7</author>
      <pubDate>Tue, 01 Jun 2021 19:20:57 +0000</pubDate>
      <link>https://dev.to/javacode7/making-an-esolang-e89</link>
      <guid>https://dev.to/javacode7/making-an-esolang-e89</guid>
      <description>&lt;p&gt;I have posted about esolangs a lot in the past. From good ones to mine to the esolist but never have I posted about making one.&lt;/p&gt;

&lt;p&gt;In this article, I am going to go through a step by step procedure to make an esolang like &lt;a href="https://github.com/technetium-inc/loo"&gt;loo&lt;/a&gt;. It is a simple language with only 4 commands. &lt;code&gt;+&lt;/code&gt; to increment the value of the one variable it can hold, &lt;code&gt;-&lt;/code&gt; to decrement, &lt;code&gt;#&lt;/code&gt; to print out the value in ascii form (e.g. 97 would be the lowercase letter a) and finally &lt;code&gt;;&lt;/code&gt; stops the program. I will be making this in python but you can use any language you like.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  Note
&lt;/h4&gt;

&lt;p&gt;This is not the only way to create an esolang and it is not the only syntax for one. There are many types, each with their own peculiarities. I recommend looking at &lt;a href="https://esolangs.org"&gt;esolangs.org&lt;/a&gt; to see these.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-1-accepting-the-code"&gt;
  &lt;/a&gt;
  Step 1: Accepting the code
&lt;/h1&gt;

&lt;p&gt;This code takes in input from the user that &lt;em&gt;should&lt;/em&gt; contain the loo code. It also sets up the variable for the value that loo holds.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Enter your loo code here please &amp;gt; "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#step-2-string-to-list"&gt;
  &lt;/a&gt;
  Step 2: String to List
&lt;/h1&gt;

&lt;p&gt;This block of code basically splits the loo code string into a list that will be iterated through later.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;lexed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;lexed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#step-3-execution"&gt;
  &lt;/a&gt;
  Step 3: Execution
&lt;/h1&gt;

&lt;p&gt;Now we iterate through the &lt;code&gt;lexed&lt;/code&gt; list and execute the code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;lexed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"+"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"-"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;";"&lt;/span&gt;
        &lt;span class="n"&gt;quit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is as simple as that! I hope you enjoyed this and hopefully I will post again soon.&lt;/p&gt;

</description>
      <category>esolang</category>
      <category>esoteric</category>
    </item>
    <item>
      <title>Laravel Job Boards</title>
      <author>torshid</author>
      <pubDate>Tue, 01 Jun 2021 19:13:02 +0000</pubDate>
      <link>https://dev.to/torshid/laravel-job-boards-42mm</link>
      <guid>https://dev.to/torshid/laravel-job-boards-42mm</guid>
      <description>&lt;p&gt;Here are the most active Laravel job channels, for both developers and recruiters.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#larajobs"&gt;
  &lt;/a&gt;
  &lt;a href="https://larajobs.com"&gt;LaraJobs&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;LaraJobs is the official board for Laravel related jobs. Approximately 2 new jobs are posted everyday. 129 out of 144 jobs currently listed are remote work.&lt;/p&gt;

&lt;p&gt;Application is done through a link provided by the poster, it can be Google Forms, BambooHR, the poster's website, etc. Nothing is asked by the board itself. Clean UI made with Tailwind. Not possible to search for keywords/tags unfortunately, you need to scroll.&lt;/p&gt;

&lt;p&gt;It is important to note that these jobs mostly ask for senior level and are permanent positions. Companies are generally located in the US and in Europe.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jp7KGiEf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/rej3LIP9ZX38XBPgX4luyKYpHkiuw1yyxo5j3Rsj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jp7KGiEf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/rej3LIP9ZX38XBPgX4luyKYpHkiuw1yyxo5j3Rsj.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

https://larajobs.com




&lt;h2&gt;
  &lt;a href="#posting-to-larajobs"&gt;
  &lt;/a&gt;
  Posting to LaraJobs
&lt;/h2&gt;

&lt;p&gt;A simple form is to be completed for posting a job.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dfFrsXCH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/3bbThiI0VL9qp5c6jjbEZOemO6XOcvYPjXuvi8gL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dfFrsXCH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/3bbThiI0VL9qp5c6jjbEZOemO6XOcvYPjXuvi8gL.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pricing"&gt;
  &lt;/a&gt;
  Pricing
&lt;/h2&gt;

&lt;p&gt;The base price for posting is $299, and the job will be listed 30 days. Options giving more visibility are available, which can get the price up to $596. For comparison, job boards such as &lt;a href="https://www.monster.com"&gt;Monster&lt;/a&gt; and &lt;a href="https://www.careerbuilder.com"&gt;CareerBuilder&lt;/a&gt; generally ask between $200 and $500 per month according to &lt;a href="https://www.glassdoor.com/employers/blog/how-much-it-costs-to-post-a-job-online/"&gt;this&lt;/a&gt; writing. You will also be asked to create an account which will let you modify your post if needed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XQvHbSGd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/ZGELKa8iu54JEN1TFMmQ6VAqhPk2YPclPW6njGW1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XQvHbSGd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/ZGELKa8iu54JEN1TFMmQ6VAqhPk2YPclPW6njGW1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stats"&gt;
  &lt;/a&gt;
  Stats
&lt;/h2&gt;

&lt;p&gt;Posts may reach millions through &lt;a href="https://laravel-news.com/"&gt;Laravel News&lt;/a&gt; and the mailing list of +40,000 subscribers, as claimed in the form page altough it seems exagerated to reach that in a month only. The board was created in 2014 and is the oldest in the market. According to &lt;a href="https://app.neilpatel.com/en/seo_analyzer/site_audit?domain=larajobs.com&amp;amp;submit=Analyze+Website"&gt;this&lt;/a&gt; SEO analyzer, LaraJobs has more than 650,000 backlinks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iShWoEKs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/XVtdodtau429nPtTHOaE2aoyHRgWPviz02an6n9C.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iShWoEKs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/XVtdodtau429nPtTHOaE2aoyHRgWPviz02an6n9C.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

https://www.alexa.com/siteinfo/larajobs.com




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CrVAb6C3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/P6jWICplP9laiJ7ZMu27VZH9o81XdxDuVVkOmhP2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CrVAb6C3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/P6jWICplP9laiJ7ZMu27VZH9o81XdxDuVVkOmhP2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
Searching for laravel jobs on Google



&lt;h1&gt;
  &lt;a href="#stackjobs"&gt;
  &lt;/a&gt;
  &lt;a href="https://tall.stackjobs.dev"&gt;StackJobs&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;This a new board, designed with Tailwind too, which consists of a page for developers and one for recruiters. We're not able to access any features without having an account or subscribing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1aQ1hegN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/I5xvEoqL9JpCCYskpdXYkXOAhD0Jnri7YZOHt0ye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1aQ1hegN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/I5xvEoqL9JpCCYskpdXYkXOAhD0Jnri7YZOHt0ye.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From the landing page, we can tell that developers can fully present their skills, search for jobs, and even have suggestions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Juj5j_4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/ztQ8EtlbWHWQnvIUxbckbhk6Fv5cHQncxXX2tKnP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Juj5j_4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/ztQ8EtlbWHWQnvIUxbckbhk6Fv5cHQncxXX2tKnP.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The recruiters have access to other tools, such as advanced searching for skilled developers, with a dashboard to manage applicants, and a beautiful interface to design job posts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mcp8CylW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/jM7jkeDBChPJzPRxM3ZD2BvHDVv4hQUvgTlPNjtf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mcp8CylW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/jM7jkeDBChPJzPRxM3ZD2BvHDVv4hQUvgTlPNjtf.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pricing"&gt;
  &lt;/a&gt;
  Pricing
&lt;/h2&gt;

&lt;p&gt;Developers can create an account for free, or pay $49 in order to appear first in search results. The price for posting a single job is $99. Recruiters can also subscribe for $149 per month in order to invite co-workers and access the developer directory.&lt;/p&gt;

&lt;p&gt;These prices are excessive considering that the board has almost no visibility as of now. Visitors are also encouraged to pay too early, without having first seen the full benefits of the platform.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stats"&gt;
  &lt;/a&gt;
  Stats
&lt;/h2&gt;

&lt;p&gt;The board currently has about 500 results on Google Search, and 200+ followers on &lt;a href="https://twitter.com/stackjobsdev"&gt;Twitter&lt;/a&gt;. Considering that it was created in February 2021, it seems to have a big potential if well advertised.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#twitter"&gt;
  &lt;/a&gt;
  Twitter
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/laraveljobs"&gt;@laraveljobs&lt;/a&gt;: 18K+ followers, joined June 2014&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/StackJobsDev"&gt;@StackJobsDev&lt;/a&gt;: 200+ followers, joined February 2021&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/uklaraveljobs"&gt;@uklaraveljobs&lt;/a&gt;: 170+ followers, joined May 2019&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/42jobs_laravel"&gt;@42jobs_laravel&lt;/a&gt;: 650+ followers, joined November 2017, &lt;em&gt;inactive&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#recruitement-platforms"&gt;
  &lt;/a&gt;
  Recruitement platforms
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.linkedin.com/jobs/search?keywords=Laravel"&gt;LinkedIn&lt;/a&gt;: 1000+ jobs&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.freelancer.com/jobs/laravel/"&gt;Freelancer&lt;/a&gt;: 240+ jobs&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.upwork.com/freelance-jobs/laravel-framework/"&gt;Upwork&lt;/a&gt;: 750+ jobs&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://remoteok.io/remote-laravel-jobs"&gt;Remote Jobs&lt;/a&gt;: 20+ jobs&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#our-saying"&gt;
  &lt;/a&gt;
  Our saying
&lt;/h1&gt;

&lt;p&gt;If you are actively searching for a job, the presented channels are excellent ways to begin with. It may of course take time reading and filling everything, but that's the cost for a good paying job.&lt;/p&gt;

&lt;p&gt;As for recruiters, we live in the era of social networks. If you have some audience on platforms such as Twitter or Discord, you may try posting there by tagging popular usernames, your job is going to be shared for sure, and you will have direct feedback and access to analytics.&lt;/p&gt;

&lt;p&gt;If you're into something more professional and have the money, LaraJobs and recruitement platforms such as LinkedIn are the way to go.&lt;/p&gt;




&lt;p&gt;You think something is missing in this writing? Feel free to tell us in the comments section.&lt;/p&gt;

&lt;p&gt;Don't forget to follow us on &lt;a href="https://twitter.com/larawindcom"&gt;Twitter @larawindcom&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>jobs</category>
      <category>boards</category>
      <category>listing</category>
    </item>
    <item>
      <title>AWS Data Lake with Terraform - Part 1 of 6</title>
      <author>Augusto Valdivia</author>
      <pubDate>Tue, 01 Jun 2021 18:51:43 +0000</pubDate>
      <link>https://dev.to/aws-builders/aws-data-lake-with-terraform-part-1-of-6-4bf1</link>
      <guid>https://dev.to/aws-builders/aws-data-lake-with-terraform-part-1-of-6-4bf1</guid>
      <description>&lt;p&gt;Big data has been growing as topic for a while now and it is obvious that data is powerful. Data is indeed the new oil. Any business out there is investing in data research. There are many terms nowadays that describe data and how it is organized. A data lake is one of them. So, &lt;strong&gt;&lt;em&gt;what is it?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In simple words a Data Lake is a centralized repository that collects, stores and organizes huge data collection, including structured and semi-structured data. It also allows multiple organizational units (OU) to explore and investigate their current business stage in minutes. It provides users with the availability to do ad-hoc analysis over diverse processing engines like serverless, in-memory processing, queries and batches.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The challenge&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In these series of blogs I will explain how I translated MVP core services for a large e-commerce company into Infrastructure-as-Code (IAC) using Terraform scripts to allow for fast and repeatable deployments, efficient testing and to decrease recovery time in case of an unplanned event. This Data Lake architecture version-one use the following services:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;EC2 for elastic compute&lt;/li&gt;
&lt;li&gt;Kinesis process to collect, and analyze data streams in real time (or almost real time)&lt;/li&gt;
&lt;li&gt;S3 for the data landing and the data consumptions zones&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each of these services are a huge topic in their own ecosystem so throughout this article I will highlight information about how they work and how I integrated them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Diagram version 1: Data lake&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1z51p4Nm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c7mbyqc3sat5itxzbiai.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1z51p4Nm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c7mbyqc3sat5itxzbiai.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Diagram final version: Data lake&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YtBPUf7f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fgnzhqg35ef62jj8tdwe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YtBPUf7f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fgnzhqg35ef62jj8tdwe.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What method will we be using to deploy this infrastructure?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We will be deploying this infrastructure as a code (IaC) using Terraform.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "aws_instance" "logs" {
  count = var.ec2_count
  ami                         = "ami-0742b4e673072066f"
  instance_type               = "t2.micro"
  subnet_id                   = aws_subnet.dlogssub.id
  associate_public_ip_address = true
  vpc_security_group_ids      = [aws_security_group.web_sg.id]
  depends_on                  = [aws_internet_gateway.bigdataigw]
  key_name                    = aws_key_pair.logskey.key_name
  iam_instance_profile        = aws_iam_instance_profile.ec2_profile.name

  user_data = &amp;lt;&amp;lt;-EOF
          #!/bin/bash -xe
          yum -y update
          yum install -y aws-kinesis-agent
          EOF

  tags = {
    "Name" = "ec2-app-02"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Terraform new default tags feature&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;provider "aws" {
  default_tags {

    tags = {
      Enviroment = "DataLake-test"
      Project    = "DataLake-infrastructure"
    }
  }
  region = "us-east-1"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Amazon Elastic Compute Cloud (EC2)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;EC2 is the backbone of this infrastructure as it is dedicated to holding the e-commerce large data logs during the time of business analysis. Also, it provides you with a resizable compute capacity for this environment. You can kick up a new server optimized for your work in minutes and rapidly scale it up or down as your computing requirements change.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon Kinesis&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Kinesis plays a double part within this infrastructure. Firstly, the Kinesis Firehose stream allows you to capture data from a server log being generated on our Amazon EC2 instance and distributes that into your data lake landing zone in Amazon your S3 bucket. The second one uses the Amazon Kinesis agent application in order to publish data (“direct put”) into this Amazon Kinesis firehose using the Amazon Kinesis agent.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kinesis agent sample:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IuZ2XaJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t19y2xtrca7hd59ugc9p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IuZ2XaJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t19y2xtrca7hd59ugc9p.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A powerful mechanism that Kinesis possesses is the availability to configure how to store your data into s3. You can configure based on buffer size and buffer interval. For the purpose of this project I have decided to select 5 megabytes of a buffer size meaning that incoming data from the firehose will be dividing the files in five megabytes in size. And, for the buffer interval I set it to the lowest value which is 60 seconds. Tips to remember Kinesis firehose is “almost real-time” and cannot go lower than that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon Simple Storage Server(S3)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;S3 is the biggest and most performant data lake storage solution because of its cost-effective, secure data storage with 11 9s of durability and its virtually unlimited scalability model. It makes sense to store your vast data logs in S3, &lt;strong&gt;&lt;em&gt;Don’t you think?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The goal for individuals or businesses to use this data lake solution would be to build and integrate Amazon S3 with Amazon Kinesis, Amazon Athena, Amazon Redshift Spectrum, and AWS Glue for data scientists or engineers to query and process a large amount data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;S3 data stream logs sample:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DzwSvA82--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bds1qlw02hsa3eo6qpe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DzwSvA82--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bds1qlw02hsa3eo6qpe.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Important to note that this infrastructure is not fully develop I will be adding other servers such as AWS Glue, AWS Athena, AWS Redshift, AWS Cloudwatch and QuickSight 😊 please stay tune.&lt;/p&gt;

&lt;p&gt;Functions, arguments and expressions of Terraform that were used in the above project:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.terraform.io/docs/language/providers/index.html"&gt;providers&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.terraform.io/docs/language/values/index.html"&gt;variables&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.terraform.io/docs/language/modules/index.html"&gt;modules&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.terraform.io/docs/language/resources/index.html"&gt;resources&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.terraform.io/docs/language/expressions/types.html"&gt;types and values&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.terraform.io/docs/language/expressions/for.html"&gt;splat or [*]&lt;/a&gt;– One of my favorites&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.hashicorp.com/blog/default-tags-in-the-terraform-aws-provider"&gt;default-tags-in-the-terraform-aws-provider&lt;/a&gt;– &lt;strong&gt;New feature&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ValAug/AWS_DataLake"&gt;Find the Terraform repo and directions for this project here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I would like to give a big shout out to my mentor Derek Morgan. Thank you for all of your support all these months and for the amazing course &lt;a href="https://morethancertified.teachable.com/"&gt;"More Than Certified in Terraform" the best course out there. Link to the course here.&lt;/a&gt; If you want to connect with him and ask questions about his course, contact him via &lt;a href="https://www.linkedin.com/in/derekm1215/"&gt;LinkedIn Derek Morgan&lt;/a&gt; or you can join the &lt;a href="https://discord.gg/PvgMBQbV"&gt;Discord channel here.&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>terraform</category>
      <category>awsdatalake</category>
      <category>bigdata</category>
    </item>
    <item>
      <title>Distributed Load Testing in JMeter using VirtualBox</title>
      <author>NaveenKumar Namachivayam ⚡</author>
      <pubDate>Tue, 01 Jun 2021 18:47:20 +0000</pubDate>
      <link>https://dev.to/qainsights/distributed-load-testing-in-jmeter-using-virtualbox-188k</link>
      <guid>https://dev.to/qainsights/distributed-load-testing-in-jmeter-using-virtualbox-188k</guid>
      <description>&lt;p&gt;In this blog article, we are going to use how you can run distributed load testing in JMeter using VirtualBox setup. I have already posted videos about &lt;a href="https://www.youtube.com/watch?v=lORCJtspVJ4" rel="noreferrer noopener"&gt;distributed load testing on AWS&lt;/a&gt; and &lt;a href="https://qainsights.com/distributed-load-testing-in-jmeter-using-raspberry-pi-400/" rel="noreferrer noopener"&gt;Raspberry Pi&lt;/a&gt;. You need more than one machine to run the load tests. But in this guide, you will use only your machine and run the JMeter tests by leveraging the VirtualBox software.&lt;/p&gt;

&lt;h2&gt;Why distributed load testing?&lt;/h2&gt;

&lt;p&gt;By using one machine, you may not be able to inject more load to your application under test. If you want to stress test your application, you need more threads. Your system resource utilization will reach its limits, if you are trying to inject more threads.  &lt;/p&gt;

&lt;p&gt;To inject more load, you need to more machines to scale horizontally. JMeter has Master-Worker mode where you can run your tests in server mode.&lt;/p&gt;

&lt;p&gt;You will have one master machine with multiple worker machines; master machine will send the instructions to worker machines. After receiving the instructions, worker machines will execute the test plan as per the design.&lt;/p&gt;

&lt;p&gt;If you want more load, you need more machines.&lt;/p&gt;

&lt;p&gt;Here is the video version of this guide:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/WSDMLAEksz4"&gt;https://youtu.be/WSDMLAEksz4&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="h-prerequisites"&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;Ideally you need multiple machines to setup this master-worker. But for this demo, we are going to make use of VirtualBox to learn the concept of distributed load testing. This set up is not ideal for production usage as we are not using the multiple machines to inject the load.&lt;/p&gt;

&lt;p&gt;Following are the prerequisites required:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Oracle VM VirtualBox Manager&lt;/li&gt;
&lt;li&gt;CentOS image (or your favorite Linux distro)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;CentOS Image Download&lt;/h2&gt;

&lt;p&gt;To download the CentOS image, visit https://www.osboxes.org/centos/ (direct link), click on the latest version of the image; make sure you are downloading the 64-bit version.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-6.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hk9AkLeF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-6.png" alt="CentOS Image download"&gt;&lt;/a&gt;CentOS Image download&lt;/p&gt;

&lt;p&gt;To view the credentials, click on Info tab as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-7.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0cglk8GT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-7.png" alt="CentOS Image Credentials"&gt;&lt;/a&gt;CentOS Image Credentials&lt;/p&gt;

&lt;p&gt;After downloading the image, extract it using 7z software. After extraction, you will get *.vdi file.&lt;/p&gt;

&lt;h2 id="h-oracle-vm-virtualbox-manager-download"&gt;Oracle VM VirtualBox Manager Download&lt;/h2&gt;

&lt;p&gt;To download the VirtualBox, visit https://www.virtualbox.org and click on &lt;strong&gt;Download &lt;/strong&gt;button. Using the VirtualBox, you can run multiple guest operating systems locally.&lt;/p&gt;

&lt;h2&gt;JMeter Master and Worker Machines Setup&lt;/h2&gt;

&lt;p&gt;Next step is to setup two machines (JMeter Master and JMeter Worker) in VirtualBox using the CentOS image.&lt;/p&gt;

&lt;p&gt;First, let us create the CentOS base image, from which we are going to clone it for two machines.&lt;/p&gt;

&lt;p&gt;Launch &lt;strong&gt;VirtualBox&lt;/strong&gt;, click on &lt;strong&gt;New &lt;/strong&gt;button to create a new virtual machine as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-8.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jPmt_Hdl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-8.png" alt="Create new virtual machine"&gt;&lt;/a&gt;Create new virtual machine&lt;/p&gt;

&lt;p&gt;In &lt;strong&gt;Create Virtual Machine&lt;/strong&gt; dialog box, configure the settings as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-9.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pX-oWyLC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-9.png" alt="Create new virtual machine config"&gt;&lt;/a&gt;Create new virtual machine config&lt;/p&gt;

&lt;p&gt;Click on the &lt;strong&gt;yellow icon&lt;/strong&gt; as shown above to map the downloaded vdi file. Then, click on &lt;strong&gt;Add &lt;/strong&gt;button to map the vdi file and then click on &lt;strong&gt;Choose &lt;/strong&gt;as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-10.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nu2Z67A4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-10.png" alt="Create new virtual machine config"&gt;&lt;/a&gt;Create new virtual machine config&lt;/p&gt;

&lt;p&gt;Now back to &lt;strong&gt;Create Virtual Machine&lt;/strong&gt; dialog, click on &lt;strong&gt;Create &lt;/strong&gt;button. This will create a new virtual machine named &lt;code&gt;CentOS Base&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-11.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5tafW_lZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-11.png" alt="Create new virtual machine"&gt;&lt;/a&gt;Create new virtual machine &lt;/p&gt;

&lt;h2&gt;CentOS Base Image configuration&lt;/h2&gt;

&lt;p&gt;Before we start cloning this machine, we need to configure the network settings. Select the &lt;strong&gt;CentOS Base&lt;/strong&gt; image, right click &amp;gt; &lt;strong&gt;Settings&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Click on &lt;strong&gt;Network &lt;/strong&gt;in &lt;strong&gt;CentOS Base - Settings&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Select &lt;strong&gt;Bridged Adapter&lt;/strong&gt; as shown below, then click on &lt;strong&gt;OK&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-12.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9QY9NYIr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-12.png" alt="Bridged Adapter"&gt;&lt;/a&gt;Bridged Adapter&lt;/p&gt;

&lt;p&gt;This will create the bridged network and also you can access the internet from this virtual machines.&lt;/p&gt;

&lt;h2&gt;Cloning the Virtual Machines&lt;/h2&gt;

&lt;p&gt;Next step is to clone this machine to create JMeter Master and JMeter Worker machines. Right click on the &lt;strong&gt;CentOS Base &lt;/strong&gt;machine, then click on &lt;strong&gt;Clone&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In &lt;strong&gt;Clone Virtual Machine&lt;/strong&gt; dialog box, configure the below settings as-is. Then, click on &lt;strong&gt;Clone&lt;/strong&gt;. This will create a new virtual machine named &lt;strong&gt;JMeter Master&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-13.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t0jUR8C3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-13.png" alt="Cloning"&gt;&lt;/a&gt;Cloning&lt;/p&gt;

&lt;p&gt;Repeat the same steps again to create &lt;strong&gt;JMeter Worker&lt;/strong&gt;. After creating two machines, in the manager, you will see three machines as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-14.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XT8v-1Zx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-14.png" alt="List of machines"&gt;&lt;/a&gt;List of machines&lt;/p&gt;

&lt;h2&gt;Starting the Virtual Machines&lt;/h2&gt;

&lt;p&gt;Next step is to start the JMeter Master and JMeter Worker machines. Select the machine and then click on &lt;strong&gt;Start &lt;/strong&gt;button as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-15.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XFJNMKib--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-15.png" alt="Starting the virtual machine"&gt;&lt;/a&gt;Starting the virtual machine&lt;/p&gt;

&lt;p&gt;This will start the two machines which will take couple of minutes for the complete bootup. &lt;/p&gt;

&lt;p&gt;After successful boot, you will see the login screen for both the machines as shown below. Enter the password and hit enter to login into the machines.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-16.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0x5dxTRG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-16-1024x432.png" alt="CentOS Login Screen"&gt;&lt;/a&gt;CentOS Login Screen&lt;/p&gt;

&lt;p&gt;After logging in, launch the &lt;strong&gt;Terminal &lt;/strong&gt;to make changes in the hosts and host name. You have to repeat the steps for both the machines.&lt;/p&gt;

&lt;p&gt;To change the host name enter the below command and name your host as &lt;code&gt;jmetermast&lt;/code&gt;er.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/hostname&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To change the hosts file, enter the below command and configure as shown in the below screenshot.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/hosts&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-18.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GVwYCDWG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-18.png" alt="Changing the hosts"&gt;&lt;/a&gt;Changing the hosts&lt;/p&gt;

&lt;p&gt;It is time to restart the machines. Enter the below command to restart.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ shutdown now -r&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After restart login again and get the IP address using the below command. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ifconfig&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Minimize the virtual machine windows, because it will be hard to navigate. Instead, we can use the SSH to login and perform the commands.&lt;/p&gt;

&lt;p&gt;To login into the virtual machines, I am using &lt;strong&gt;MobaXterm &lt;/strong&gt;software. But you can use your favorite.&lt;/p&gt;

&lt;h2&gt;Installing Java in Master and Worker Machines&lt;/h2&gt;

&lt;p&gt;After you login into the master/worker machine, the first step is to download and install Java. To install Java, you can use the below command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo yum install java -y&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will install Java 8. To verify, you can issue the below command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ java -version&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-19.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Is47JBll--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-19.png" alt="Java version check"&gt;&lt;/a&gt;Java version check&lt;/p&gt;

&lt;p&gt;Repeat the same steps for Worker machine as well.&lt;/p&gt;

&lt;h2&gt;Installing JMeter in Master and Worker Machines&lt;/h2&gt;

&lt;p&gt;To install JMeter, you can use the below command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -O https://downloads.apache.org//jmeter/binaries/apache-jmeter-5.4.1.tgz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will download the 5.4.1 tar file from JMeter site.&lt;/p&gt;

&lt;p&gt;To veriy the integrity, you can issue the below command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sha512sum apache-jmeter-5.4.1.tgz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The output string must match with the &lt;strong&gt;SHA512 &lt;/strong&gt;value which you can get it from the JMeter site.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-20.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O4Xk2kj7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-20.png" alt="JMeter Download"&gt;&lt;/a&gt;JMeter Download&lt;/p&gt;

&lt;p&gt;To extract the tar file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ tar -xzf apache-jmeter-5.4.1.tgz&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now cd into bin folder:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd apache-jmeter-5.4.1/bin/&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Repeat the above steps in both the machines.&lt;/p&gt;

&lt;h2&gt;Distributed Load Testing Mode&lt;/h2&gt;

&lt;h2&gt;JMeter Master Setup&lt;/h2&gt;

&lt;p&gt;In the master machine, open the &lt;strong&gt;user.properties&lt;/strong&gt; using your favorite editor and configure the below properties.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim user.properties&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;user.properties&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;remote_hosts=&amp;lt;worker_ip&amp;gt;
server.rmi.localport=4000&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;By default, JMeter uses secured communication between the master and worker machines. To generate the secured tunnel, we need to make use of rmi key store. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;To add multiple workers, use comma separated values.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Execute &lt;code&gt;create-rmi-keystore.sh&lt;/code&gt; file to generate the keystore file as shown below. Let us go with the default values: &lt;strong&gt;&lt;code&gt;rmi&lt;/code&gt; &lt;/strong&gt;as &lt;strong&gt;first and last name&lt;/strong&gt; and the password as &lt;code&gt;&lt;strong&gt;&lt;em&gt;changeit&lt;/em&gt;&lt;/strong&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-21.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z-a1y0kS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-21.png" alt="keystore generation"&gt;&lt;/a&gt;keystore generation&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rmi_keystore.jks&lt;/code&gt; will be generated in the bin folder. You have to place this file in all the worker machines.&lt;/p&gt;

&lt;p&gt;To transfer this file to the worker machine, you can use scp command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ scp rmi_keystore.jks osboxes@&amp;lt;worker_ip&amp;gt;:.&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Above command transfer the keystore to the home directory of the worker machine. &lt;/p&gt;

&lt;p&gt;Next step is to disable to firewall service. If the firewall is enabled JMeter tests will not run in distributed mode.&lt;/p&gt;

&lt;p&gt;To disable firewall:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl stop firewalld.service&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To check firewall status:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl status firewalld.service&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;JMeter Worker Setup&lt;/h2&gt;

&lt;p&gt;Open a new SSH session to login into worker machine. The keystore file now present in the home directory, paste that into &lt;code&gt;bin&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;Next step is to configure the &lt;code&gt;user.properties&lt;/code&gt;. Open it in your favorite editor and configure the below property.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;server.rmi.localport=4000&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now disable the firewall by following the above mentioned steps.&lt;/p&gt;

&lt;h2&gt;Starting the Distributed Load Mode in Worker Machine&lt;/h2&gt;

&lt;p&gt;To begin the distributed load testing, first step is to start the worker machine. Issue the below command to get started.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./jmeter-server -Djava.rmi.server.hostname=&amp;lt;Worker_IP&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-22.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mAn9GsAs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-22.png" alt="Worker Machine Startup"&gt;&lt;/a&gt;Worker Machine Startup&lt;/p&gt;

&lt;p&gt;If you get the above output, you are good.&lt;/p&gt;

&lt;h2&gt;Starting the Distributed Load Testing in Master Machine&lt;/h2&gt;

&lt;p&gt;To begin the distributed load test, you can issue the below command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./jmeter.sh -Djava.rmi.server.hostname=&amp;lt;Master_IP&amp;gt; -n -t examples/CSVSample.jmx -l Run1.log -R&amp;lt;Worker_IP&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Above command start the sample JMeter test which is located in &lt;code&gt;examples&lt;/code&gt; folder, store the output in current directory named &lt;code&gt;Run1.log&lt;/code&gt;, the load will be injected using the remote worker machine (-R).&lt;/p&gt;

&lt;h4&gt;JMeter Master Output&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-23.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jhQ6ITsH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-23.png" alt="JMeter Master Ouput"&gt;&lt;/a&gt;JMeter Master Ouput&lt;/p&gt;

&lt;h4&gt;JMeter Worker Output&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-24.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ygAPXKMz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-24.png" alt="JMeter Worker Output - Distributed Load Testing in JMeter using VirtualBox"&gt;&lt;/a&gt;JMeter Worker Output - Distributed Load Testing in JMeter using VirtualBox&lt;/p&gt;

&lt;h2&gt;Important Points&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Use the identical version of Java and JMeter in all the machines&lt;/li&gt;
&lt;li&gt;Disable firewall&lt;/li&gt;
&lt;li&gt;Master and Worker machines must be in the same subnet&lt;ul&gt;&lt;li&gt;try pinging the machines from each other to verify the connectivity&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SSL for RMI certificate has the validity of &lt;strong&gt;7 days&lt;/strong&gt; by default, make sure you generate the certificate once in 7 days. The number of days can be changed in the &lt;code&gt;create-rmi-keystore&lt;/code&gt; file: &lt;code&gt;keytool -genkey -keyalg RSA -alias rmi -keystore rmi_keystore.jks -storepass changeit -validity 365 -keysize 2048 %*&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;If the test plan uses, plugins and/or CSV Data set config, make sure it is available in the worker nodes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is the GitHub Repo to star.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/QAInsights/Remote-Distribution-Load-Testing-in-JMeter" rel="noreferrer noopener"&gt;GitHub Repo: Remote Distribution Load Testing in JMeter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!-- /wp:button --&amp;gt;&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;For beginners, this setup might be overwhelming, but this guide will be very helpful to understand the setup without needing of multiple machines. This setup should not be used in production, this is just for learning purpose :).&lt;/p&gt;

</description>
      <category>performance</category>
      <category>testing</category>
      <category>tutorial</category>
      <category>webperf</category>
    </item>
    <item>
      <title>The 7 Most Popular DEV Posts from the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Tue, 01 Jun 2021 18:45:47 +0000</pubDate>
      <link>https://dev.to/devteam/the-7-most-popular-dev-posts-from-the-past-week-56g3</link>
      <guid>https://dev.to/devteam/the-7-most-popular-dev-posts-from-the-past-week-56g3</guid>
      <description>&lt;p&gt;&lt;em&gt;Every Tuesday we round up the previous week's top posts based on traffic, engagement, and a hint of editorial curation. The typical week starts on Monday and ends on Sunday, but don't worry, we take into account posts that are published later in the week.&lt;/em&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#slow-and-steady-wins-the-race"&gt;
  &lt;/a&gt;
  Slow and steady wins the race
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/ruppysuppy"&gt;@ruppysuppy&lt;/a&gt;
 has some great tips to share about improving your GitHub profile — spoiler: go slow and don't try to cheat the process.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/ruppysuppy" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4oA7zxE2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--E69pqyft--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/530414/941751d8-06b8-41bd-9de9-6ea056b7199f.png" alt="ruppysuppy image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ruppysuppy/beautify-your-github-profile-like-a-pro-5093" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Beautify Your GitHub Profile like a Pro&lt;/h2&gt;
      &lt;h3&gt;Tapajyoti Bose ・ May 30 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#git&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#markdown&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#conscious-accessibility"&gt;
  &lt;/a&gt;
  Conscious accessibility
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/eevajonnapanula"&gt;@eevajonnapanula&lt;/a&gt;
's very first sentence is a great indication of how helpful and compelling the rest of the article is:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"We, as developers, tend to develop sites unconsciously for people like ourselves. If we don't actively pay attention, the sites are often accessible only for certain types of people."&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So very true. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/eevajonnapanula" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FpXj8uGX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--CEbP3D7X--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/201004/e005d101-0ca8-4346-86eb-91bf162b30c4.png" alt="eevajonnapanula image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/eevajonnapanula/don-t-develop-just-for-yourself-a-developer-s-checklist-to-accessibility-545k" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Don't Develop Just for Yourself - A Developer's Checklist to Accessibility&lt;/h2&gt;
      &lt;h3&gt;Eevis (she/her) ・ May 30 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#testing-typescript"&gt;
  &lt;/a&gt;
  Testing TypeScript
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/dastasoft"&gt;@dastasoft&lt;/a&gt;
's post is all about going through the basics of TS and understanding the benefits so you can decide if you want those benefits or not. Pretty helpful stuff!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/dastasoft" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---wZs2Esu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--k5bXZLGT--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/337369/f37a6e53-6f09-40cf-a55a-eb43d7c9e859.jpeg" alt="dastasoft image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/dastasoft/here-s-what-every-react-developer-needs-to-know-about-typescript-part-1-48ob" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Here's what every React Developer needs to know about TypeScript - Part 1&lt;/h2&gt;
      &lt;h3&gt;dastasoft ・ May 28 ・ 21 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#typescript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#decluttering-fast"&gt;
  &lt;/a&gt;
  Decluttering — fast 🧹
&lt;/h2&gt;

&lt;p&gt;If you're like me, &lt;a class="mentioned-user" href="https://dev.to/yomdroid"&gt;@yomdroid&lt;/a&gt;
's article (about how you can sweep out your inbox with Python) is both extremely applicable and a little triggering 😆&lt;/p&gt;

&lt;p&gt;Thank you for sharing, Ogheneyoma! I need to try this.  &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/yomdroid" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mxJPsoDD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--QfIenrKd--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/269181/2b2dd782-9657-4f0b-bb4b-ff196f3dfc68.jpeg" alt="yomdroid image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/yomdroid/decluttering-mailbox-using-python-44l8" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Decluttering Mailbox Using Python&lt;/h2&gt;
      &lt;h3&gt;Ogheneyoma Obomate Okobiah ・ May 29 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#python&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#email&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#the-good-the-bad-and-the-boolean"&gt;
  &lt;/a&gt;
  The good, the bad, and the boolean
&lt;/h2&gt;

&lt;p&gt;The TL;DR of this overview from &lt;a class="mentioned-user" href="https://dev.to/mpocock1"&gt;@mpocock1&lt;/a&gt;
? Bad booleans represent state. Good booleans are derived from state. &lt;/p&gt;

&lt;p&gt;That said, there's so much more to glean from the entire article!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/mpocock1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4TNA-wjD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8deS_1D8--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/414325/85a14402-fe21-478a-b195-2706abbe889e.png" alt="mpocock1 image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mpocock1/state-management-how-to-tell-a-bad-boolean-from-a-good-boolean-260n" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;State Management: How to tell a bad boolean from a good boolean&lt;/h2&gt;
      &lt;h3&gt;Matt Pocock ・ May 27 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#save-the-date"&gt;
  &lt;/a&gt;
  Save the date! ❤️
&lt;/h2&gt;

&lt;p&gt;Congrats to &lt;a class="mentioned-user" href="https://dev.to/christinecontreras"&gt;@christinecontreras&lt;/a&gt;
 on their upcoming nuptials! I &lt;em&gt;love&lt;/em&gt; that your wedding planning prep includes building an app to predict the best date to get married based on historical weather patterns and location. &amp;lt;3 &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/christinecontreras" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6f5kRuSt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Ocv7hcaZ--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/609006/fe0a94a9-6389-47d5-8776-cbc0a9c84fbc.jpg" alt="christinecontreras image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/christinecontreras/perfect-date-a-javascript-and-api-project-1hng" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Perfect Date: A Javascript and API Project&lt;/h2&gt;
      &lt;h3&gt;Christine Contreras ・ May 29 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#flatiron&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#-raw-reset-endraw-ting-your-git-knowledge"&gt;
  &lt;/a&gt;
  &lt;code&gt;Reset&lt;/code&gt;ting your Git knowledge
&lt;/h2&gt;

&lt;p&gt;If you are confused about much of the terminology in Git, you are FAR from alone. Thank you for clearing some of it up for us, &lt;a class="mentioned-user" href="https://dev.to/pragativerma18"&gt;@pragativerma18&lt;/a&gt;
. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/pragativerma18" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kl_m4K1g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--JR-0Kc_W--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/242611/68277387-0fa0-4c79-ad6f-4be3ddc940b7.jpeg" alt="pragativerma18 image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/pragativerma18/confusing-terms-in-the-git-terminology-1578" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Confusing Terms in the Git Terminology&lt;/h2&gt;
      &lt;h3&gt;Pragati Verma ・ May 30 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#computerscience&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;That's it for our weekly wrap up! Keep an eye on dev.to this week for daily content and discussions...and if you miss anything, we'll be sure to recap it next Tuesday!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>icymi</category>
    </item>
    <item>
      <title>Google Stock Price Prediction Using LSTM-RNN</title>
      <author>Gaurav Singh</author>
      <pubDate>Tue, 01 Jun 2021 18:29:55 +0000</pubDate>
      <link>https://dev.to/gauravsingh9356/google-stock-price-prediction-using-rnn-lstm-5a2h</link>
      <guid>https://dev.to/gauravsingh9356/google-stock-price-prediction-using-rnn-lstm-5a2h</guid>
      <description>&lt;p&gt;Recurrent Neural Networks can Memorize/remember previous inputs in-memory When a huge set of Sequential data is given to it.&lt;br&gt;
These loops make recurrent neural networks seem kind of mysterious. However, if you think a bit more, it turns out that they aren’t all that different than a normal neural network. A recurrent neural network can be thought of as multiple copies of the same network, each passing a message to a successor.&lt;/p&gt;

&lt;h4&gt;Made Google Stock Price Predictor&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6LOOKV8S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qldlerds8mhm341qfnr4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6LOOKV8S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qldlerds8mhm341qfnr4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/GauravSingh9356/DEEP_LEARNING"&gt;Github Link&lt;/a&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>python</category>
      <category>deeplearning</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>Things to listen to while you code</title>
      <author>Diego Alzate</author>
      <pubDate>Tue, 01 Jun 2021 18:25:31 +0000</pubDate>
      <link>https://dev.to/diegoalzate/things-to-listen-to-while-you-code-o2p</link>
      <guid>https://dev.to/diegoalzate/things-to-listen-to-while-you-code-o2p</guid>
      <description>&lt;p&gt;Some people work in silence, i prefer to have a whole opera in my ear while i figure out why line 69 has a problem. These are some things that i helped me have a more productive/fun coding session. &lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#chill-not-so-intense-coding"&gt;
  &lt;/a&gt;
  Chill (not so intense coding)
&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://coderadio.freecodecamp.org/"&gt;Freecodecamp radio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/playlist/37i9dQZF1DX5trt9i14X7j?si=e80827a83c4d4fce"&gt;Coding playlist on spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/show/6XU1MRwzCfAXD07YHbpjNv?si=pQtb7Td7T-y0JgUrZmfsGg"&gt;Corecursive podcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://open.spotify.com/playlist/37i9dQZF1DX4sWSpwq3LiO?si=147c16f41d504b20"&gt;Piano playlist&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;I don't usually bring this bad boy (piano playlist) out nowadays but it sure calmed me down whenever i was feeling frustrated&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let me know what you use in the comment section so i can keep this post updated (please)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;thank you for taking your time to read this&lt;/em&gt;&lt;/p&gt;

</description>
      <category>music</category>
      <category>productivity</category>
      <category>motivation</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>DevTools Tip of the day: The Console dollars</title>
      <author>Ishtiaq Syed</author>
      <pubDate>Tue, 01 Jun 2021 18:08:07 +0000</pubDate>
      <link>https://dev.to/ishtiaq156/devtools-tip-of-the-day-the-console-dollars-476j</link>
      <guid>https://dev.to/ishtiaq156/devtools-tip-of-the-day-the-console-dollars-476j</guid>
      <description>&lt;h1&gt;
  &lt;a href="#-raw-0-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;$0&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;$0&lt;/code&gt; is a reference to the currently selected html node in the &lt;em&gt;Elements&lt;/em&gt; pane.&lt;br&gt;
Also, &lt;code&gt;$1&lt;/code&gt; is the one selected previously, &lt;code&gt;$2&lt;/code&gt; the one before that, etc. up to the number &lt;code&gt;$4&lt;/code&gt;.&lt;br&gt;
You can use that additional references to try out some relative operations &lt;br&gt;
(e.g. &lt;code&gt;$1.appendChild($0)&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pfXDKbNn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hkq6y7ah4b2mdwk8by4i.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pfXDKbNn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hkq6y7ah4b2mdwk8by4i.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#-raw-endraw-and-raw-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;$&lt;/code&gt; and &lt;code&gt;$$&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;$&lt;/code&gt; in the console is an alias for the lengthy &lt;code&gt;document.querySelector&lt;/code&gt; method.&lt;br&gt;
That’s if you don’t already have &lt;code&gt;$&lt;/code&gt; variable defined in your app (e.g. jQuery)&lt;br&gt;
$$ is an even bigger timesaver, because it not only runs document.QuerySelectorAll but also returns an &lt;em&gt;array of nodes&lt;/em&gt; instead of &lt;em&gt;NodeList&lt;/em&gt; type.&lt;br&gt;
Basically: &lt;code&gt;Array.from(document.querySelectorAll('div')) === $$('div')&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;Much shorter!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FIAh4c9x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6pw7ri46e1jupifao6m4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FIAh4c9x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6pw7ri46e1jupifao6m4.gif" alt="Picture showing how $ and $$ variable is used"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#-raw-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;$_&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;The &lt;code&gt;$_&lt;/code&gt; variable references the result of the last evaluated expression.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VJetjAgF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/evsk5f1psxkr0jwhewnj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VJetjAgF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/evsk5f1psxkr0jwhewnj.png" alt="Picture showing how $_ variable is used"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#-raw-i-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;$i&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;With the &lt;a href="https://chrome.google.com/webstore/detail/console-importer/hgajpakhafplebkdljleajgbpdmplhie"&gt;Console Importer&lt;/a&gt; browser extension for Chrome you can quickly import and play with &lt;strong&gt;npm libraries&lt;/strong&gt; right in the console.&lt;br&gt;
Just run e.g. &lt;code&gt;$i('lodash')&lt;/code&gt; or &lt;code&gt;$i('moment')&lt;/code&gt; and after a couple of seconds you have &lt;em&gt;lodash / momentjs&lt;/em&gt; available.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BA1jze6z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yogkoasot21v0p0anycb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BA1jze6z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yogkoasot21v0p0anycb.gif" alt="Picture showing how $i variable is used"&gt;&lt;/a&gt;&lt;/p&gt;




</description>
      <category>devtools</category>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>Clarifying CORS - Cross-origin Resource Sharing</title>
      <author>Jordan Finneran</author>
      <pubDate>Tue, 01 Jun 2021 17:56:55 +0000</pubDate>
      <link>https://dev.to/jordanfinners/clarifying-cors-cross-origin-resource-sharing-4dk9</link>
      <guid>https://dev.to/jordanfinners/clarifying-cors-cross-origin-resource-sharing-4dk9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#contents"&gt;
  &lt;/a&gt;
  Contents
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="#intro"&gt;Intro&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="#access-control"&gt;Access-Control Headers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="#rate-limiting"&gt;Rate Limiting&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="#summary"&gt;Summary&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Continuing on from my previous blog about &lt;a href="https://jordanfinners.dev/blogs/website-security-week"&gt;website security week&lt;/a&gt;, we're going to talk about a CORS on the web.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS"&gt;CORS is Cross-origin Resource Sharing&lt;/a&gt; this is often used when your website is hosted separately from your API. e.g. your website is at website.com and calls your API at api.com.&lt;br&gt;
This is a common architectural pattern as it allows each API and website to move independently and faster, however it can introduce some security issues.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#accesscontrol-headers"&gt;
  &lt;/a&gt;
  Access-Control Headers &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;To allow CORS requests your API will need to response with certain headers, which allow certain behaviors from your website/frontend.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#accesscontrolalloworigin"&gt;
  &lt;/a&gt;
  Access-Control-Allow-Origin
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin"&gt;This header&lt;/a&gt; can be set with either the &lt;code&gt;origin&lt;/code&gt; which will be calling the API, it can only be a single origin.&lt;br&gt;
Otherwise it can be a &lt;code&gt;*&lt;/code&gt; however this doesn't allow credentials to be passed, which we will talk about later.&lt;/p&gt;

&lt;p&gt;If at all possible prefer setting a specific origin to a &lt;code&gt;*&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Example Usage:&lt;/p&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Access-Control-Allow-Origin: &lt;a href="https://mozilla.org"&gt;https://mozilla.org&lt;/a&gt;&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
&lt;br&gt;
  &lt;a href="#accesscontrolallowmethods"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  Access-Control-Allow-Methods&lt;br&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Methods"&gt;This header&lt;/a&gt; can be set with a list of HTTP Methods that are allowed to be used to contact your API.&lt;/p&gt;

&lt;p&gt;Generally speaking OPTIONS will want to be part of this list as any frontend will make a OPTIONS request, often referred to as a preflight request, before it makes the actual request. OPTIONS requests won't be made for GET requests.&lt;/p&gt;

&lt;p&gt;It can also be &lt;code&gt;*&lt;/code&gt; however, you should be specific if you can.&lt;/p&gt;

&lt;p&gt;Example Usage:&lt;/p&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Access-Control-Allow-Methods: POST, GET, OPTIONS&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
&lt;br&gt;
  &lt;a href="#accesscontrolmaxage"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  Access-Control-Max-Age&lt;br&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Max-Age"&gt;This header&lt;/a&gt; can be set to a time period that the frontend will cache the preflight OPTIONS request. It is a value in seconds for example 86400 seconds is 24 hours.&lt;/p&gt;

&lt;p&gt;Let's say you've set Max-Age to the above, this means that the first request you make from the frontend to the API will make an OPTIONS request and then the actual request. It will subsequently won't have to make another OPTIONS request to that API for 24 hours.&lt;/p&gt;

&lt;p&gt;Example Usage:&lt;/p&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Access-Control-Max-Age: 86400&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
&lt;br&gt;
  &lt;a href="#accesscontrolallowheaders"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  Access-Control-Allow-Headers&lt;br&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers"&gt;This header&lt;/a&gt; can be set with a list of Headers that are allowed to be passed onto your API.&lt;/p&gt;

&lt;p&gt;Example Usage:&lt;/p&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Access-Control-Allow-Headers: X-PINGOTHER, Content-Type&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
&lt;br&gt;
  &lt;a href="#accesscontrolallowcredentials"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  Access-Control-Allow-Credentials&lt;br&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials"&gt;This header&lt;/a&gt; specifies if to include credentials in the request. Credentials count as cookies, authorization headers or TLS client certificates.&lt;/p&gt;

&lt;p&gt;Example Usage:&lt;/p&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Access-Control-Allow-Credentials: true&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
&lt;br&gt;
  &lt;a href="#rate-limiting"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  Rate Limiting &lt;a&gt;&lt;/a&gt;&lt;br&gt;
&lt;/h2&gt;

&lt;p&gt;You should note that &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header only prevents browsers from making requests to the API. It does not prevent calls to your API from other machines, command line, Postman etc.&lt;br&gt;
You should ensure that you have put other security measures in place to prevent misuse of your API, including Authentication and Rate Limiting.&lt;/p&gt;

&lt;p&gt;Rate Limiting involves restricting too many calls being made to your API. It can be done in a number of ways depending on how your API is developed. I would look for libraries to help manage this for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;In summary, separating your API and website can produce real development benefits however it can introduce security problems and having to deal with CORS.&lt;br&gt;
Hopefully this helps clarify CORS and how you can secure it.&lt;/p&gt;

&lt;p&gt;Set those headers now!&lt;/p&gt;

&lt;p&gt;Happy Building!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>security</category>
    </item>
    <item>
      <title>Xcode matters - These are the CICD services where you'll find it first</title>
      <author>Hendrik Haandrikman 🚀</author>
      <pubDate>Tue, 01 Jun 2021 17:54:12 +0000</pubDate>
      <link>https://dev.to/hhaandr/xcode-matters-these-are-the-cicd-services-where-you-ll-find-it-first-2fbf</link>
      <guid>https://dev.to/hhaandr/xcode-matters-these-are-the-cicd-services-where-you-ll-find-it-first-2fbf</guid>
      <description>&lt;p&gt;Xcode versions are the drumbeat that iOS teams all around the world march to. Rapid access to Xcode versions ensure that apps are submitted, and updated on time, while Xcode betas help prepare for new features, functionality, and – dreaded – deprecations.&lt;/p&gt;

&lt;p&gt;With WWDC 2021 around the corner, enticing teams with the shiny new things the Apple folks thought up for us, this topic is more relevant than ever.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-research-method"&gt;
  &lt;/a&gt;
  The research method
&lt;/h2&gt;

&lt;p&gt;Over a 12 month period, a sample of Xcode GMs, RCs and betas was generated based on data aggregated by &lt;a href="https://xcodereleases.com/"&gt;https://xcodereleases.com/&lt;/a&gt; - For this sample of 15 Xcode releases, we pulled in publicly available information on Xcode releases on Bitrise, GitHub Actions, CircleCI, and Travis.&lt;/p&gt;

&lt;p&gt;Whenever a particular Xcode version was skipped by a CI provider, the next version was used instead to determine availability.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-data"&gt;
  &lt;/a&gt;
  The data
&lt;/h2&gt;

&lt;p&gt;The following table shows the tracked releases, and their availability on the different platforms:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zZzGzLu4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z9lgwsl3erun8l26aqwx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zZzGzLu4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z9lgwsl3erun8l26aqwx.png" alt="A table showing the releases dates for a sample of Xcode versions, as well as their dates of availability on different CICD platforms"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;To ensure we're comparing apples to apples, the dates listed are based on CET&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#speed-of-xcode-availability-on-bitrise"&gt;
  &lt;/a&gt;
  Speed of Xcode availability on Bitrise
&lt;/h2&gt;

&lt;p&gt;Over the last 12 months, on average, it took 3.4 days to have a new Xcode version available for developers on Bitrise. This includes GM’s and betas.&lt;/p&gt;

&lt;p&gt;Even though this 3.4 day average puts Bitrise ahead 3 days ahead of its second fastest competitor, it falls short of their aim to have new Xcode versions available within 48 hours. Mostly, this is due to a stretch of slower releases in Q4 2020, and Q1 2021 resulting from increased focus an ongoing infrastructure improvement. Regardless, they have expressed a renewed commitment to hit &amp;lt;48 hours availability, where possible.&lt;/p&gt;

&lt;p&gt;Bitrise Xcode updates based on stack update notices posted to their Discourse space &lt;a href="https://discuss.bitrise.io/tags/stack-updates"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#xcode-support-on-circleci"&gt;
  &lt;/a&gt;
  Xcode support on CircleCI
&lt;/h2&gt;

&lt;p&gt;New Xcode versions are usually available on CircleCI within a one week window, but their average time to availability came in at 7.2 days – a little over a week. This is mostly caused by some slip-ups related to a number of Xcode beta versions that took several weeks to make it onto CircleCI’s macOS stacks.&lt;/p&gt;

&lt;p&gt;Note that, at time of writing, no Xcode 12.5 beta or GM is available on CircleCI’s macOS stacks, so we’ve left this latest version out of our calculations.&lt;/p&gt;

&lt;p&gt;CircleCI Xcode updates based on stack update notices posted to their Discourse space &lt;a href="https://discuss.circleci.com/search?q=xcode%20%23announcements"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#xcode-support-on-github-actions"&gt;
  &lt;/a&gt;
  Xcode support on GitHub Actions
&lt;/h2&gt;

&lt;p&gt;New Xcode versions are generally available on GitHub Actions a little over a week after launch, but their average time to availability came in at 6.5 days – a little under a week. Their average got pulled up by a handful of versions that were supported in 2 or 3 days. Like most CI’s, they also managed to support the Xcode 11.5 GM in a day.&lt;/p&gt;

&lt;p&gt;Note that, at time of writing, the Xcode 12.5 beta made available briefly on GitHub Actions is now only available as a “private preview”. There, it can be accessed to those organizations that used GHA’s macOS 11.0 image while it was in public preview mode.&lt;/p&gt;

&lt;p&gt;GitHub Actions Xcode updates based on the commit history for their MacOS 10.15 virtual environments doc &lt;a href="https://github.com/actions/virtual-environments/commits/releases/macOS-10.15/20210525/images/macos/macos-10.15-Readme.md"&gt;here&lt;/a&gt; and their MacOS 10.14 doc &lt;a href="https://github.com/actions/virtual-environments/blob/main/images/macos/macos-10.14-Readme.md"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#xcode-support-on-travis-ci"&gt;
  &lt;/a&gt;
  Xcode support on Travis CI
&lt;/h2&gt;

&lt;p&gt;New Xcode support on Travis CI seems erratic, with some versions being supported very quickly (looking at you, Xcode 12.2 Beta 1), but their average time to availability came in at 12.6 days – close to two weeks, and slower than anyone else benchmarked in this article. Time to availability regularly ran over a week, and 12.4 took a full month to support.&lt;/p&gt;

&lt;p&gt;Note that Travis CI is one of the few cloud CICD platforms that currently offers Xcode 12.5 builds, but they seem to have skipped the betas and took a little over 2 weeks to make the RC available.&lt;/p&gt;

&lt;p&gt;Travis CI Xcode updates based on stack update notices posted to their changelog &lt;a href="https://changelog.travis-ci.com/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#xcode-support-on-app-center"&gt;
  &lt;/a&gt;
  Xcode support on App Center
&lt;/h2&gt;

&lt;p&gt;Even though there are still quite a few mobile teams building there today, we’ve not included App Center Xcode updates in this roundup: For the entirety of the measured period, App Center macOS builds ran on GitHub Action macOS images. Their performance can therefore be assessed as being identical to what we’ve recorded for GHA.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#xcode-support-on-jenkins"&gt;
  &lt;/a&gt;
  Xcode support on Jenkins
&lt;/h2&gt;

&lt;p&gt;🤷‍♀️ probably captures the sentiment here best: On Jenkins, you or someone on your team will be responsible for ensuring new Xcode versions are available.&lt;/p&gt;

&lt;p&gt;How long that’ll take is dependent on a number of factors, including the priorities of the team, or the stability of your Jenkins environment: If it’s already kept together by luck, positive thoughts and firefighting, those engineers responsible for maintaining it will often be hesitant to rush out an Xcode update… However eager mobile developers might be to get their hands on it.&lt;/p&gt;

</description>
      <category>ios</category>
      <category>devops</category>
      <category>mobile</category>
      <category>swift</category>
    </item>
    <item>
      <title>CBOI: Continuous Build, Occasional Integration</title>
      <author>Alex 🦅 Eagle</author>
      <pubDate>Tue, 01 Jun 2021 17:46:24 +0000</pubDate>
      <link>https://dev.to/jakeherringbone/cboi-continuous-build-occasional-integration-4hgm</link>
      <guid>https://dev.to/jakeherringbone/cboi-continuous-build-occasional-integration-4hgm</guid>
      <description>&lt;p&gt;Is your organization practicing CBOI? If you haven't heard this hot new industry acronym, it stands for "Continuous Build, Occasional Integration." A lot of big companies are using this technique. It's a different way of approaching Continuous Integration (CI).&lt;/p&gt;

&lt;p&gt;By different, I mean a lot worse.&lt;/p&gt;

&lt;p&gt;In fact, your organization should &lt;em&gt;not&lt;/em&gt; practice CBOI. So why write an article about it? Because, sadly, most organizations who claim to do CI are actually doing CBOI. I'll explain why that is, and how you can stop.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-ci"&gt;
  &lt;/a&gt;
  What is CI?
&lt;/h2&gt;

&lt;p&gt;Let's break down the terms a bit to start. "Continuous" is just a way of saying "infinite loop" - we trigger on every change or on a regular interval, and give feedback to the development cycle, such as alerting developers that they broke an automated test. Easy, and not controversial.&lt;/p&gt;

&lt;p&gt;"Integration" is a much more nuanced term. In most software shops, what we mean here is that we bring together the artifacts from independent engineering teams into a functioning system. A common example that I'll use in this article is a Frontend and a Backend.&lt;/p&gt;

&lt;p&gt;In a small organization, with only a few developers, Integration isn't much of a problem. Every engineer develops on the whole stack, and runs the complete system locally. As the organization scales, however, teams break up and specialize. The full system is eventually too complex to fit in one person's head, though the Architect tries mightily. The more the org structure gets broken up, the more different software systems diverge and the harder it is to guarantee that the code they're writing works when integrated.&lt;/p&gt;

&lt;p&gt;In order to perform Continuous Integration, then, you need an automated way to integrate the full stack. In working with a number large companies, I've rarely observed this automation. Instead, individual developers just work on their code (not surprising since they would prefer to work in isolation, reducing their cognitive load and learning curve). They aren't able to bring up other parts of the system, for a variety of reasons I'll list later. However, the engineers know (or their managers instruct them) to set up a "CI" for their code. So they take the build and test system they use locally, and put it on a server running in a loop. In our example, the backend team runs their backend tests on Jenkins.&lt;/p&gt;

&lt;p&gt;Is that CI? There's an easy litmus test to determine that.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-tell-if-youre-doing-cboi-rather-than-ci"&gt;
  &lt;/a&gt;
  How to tell if you're doing CBOI rather than CI
&lt;/h2&gt;

&lt;p&gt;Let's say the backend team makes a change, that will break the frontend code. To avoid certain objections, I'll add that this change isn't something we expected to be part of the API contract between these layers: let's say we just caused the ordering of results from a query to change. At what point in your development cycle will you discover the problem?&lt;/p&gt;

&lt;p&gt;In organizations doing CBOI, the answer is that they'll find out in production when customers discover the defect. That's because the automation couldn't run the frontend tests against the HEAD version of the backend, and since the change appeared API-compatible, no one tried to manually verify it either. When you're discovering your bugs in prod, you should start asking the hard questions in your post-mortem: why didn't our CI catch this? And in our example, the answer shocks our engineers: they didn't have CI after all.&lt;/p&gt;

&lt;p&gt;Instead of CI, their setup was individual teams testing their code in a loop, which is a Continuous Build (CB). Then when they released to prod, the Release Engineer performed the actual integration, by putting the code from different teams together in the finished system. They only do those releases on a less-frequent cadence. That's Occasional Integration (OI). &lt;/p&gt;

&lt;p&gt;If a developer wanted to debug the problem, they'd be forced to "code in production". With no way to reproduce the full stack, they have to push speculative changes and look at production logs to see if they've fixed it. SSH'ing into a production box to make edits is the opposite of what we want. For space, I won't go into details on this as it merits a separate article (and is maybe obvious to you).&lt;/p&gt;

&lt;p&gt;So we've finally defined what CBOI is, and seen how it causes production outages and scary engineering practices. Ouch!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-stop-doing-cboi"&gt;
  &lt;/a&gt;
  How to stop doing CBOI
&lt;/h2&gt;

&lt;p&gt;I have to start this section with a warning: it isn't going to be easy. The Continuous Build was setup because it was trivial: take the build/test tool the developers were running for their code and put it on a server in a loop. There isn't a similarly easy way to integrate the full stack. It may even require some changes to your build/test tools, or to the entry-point of your software. However if your organization has a problem with defects in production (or wants to avoid such a problem), this work is worth doing.&lt;/p&gt;

&lt;p&gt;Also, although the example so far was a Frontend and a Backend, which are runnable applications, CI is just as important for other vertices of your dependency graph, such as shared libraries or data model schemas.&lt;/p&gt;

&lt;p&gt;I'll break this down into a series of problems:&lt;/p&gt;

&lt;p&gt;1) developers can't run the full stack&lt;br&gt;
2) no integration test fixture exists that can detect the defect&lt;br&gt;
3) resource constraints make it uneconomical to run all the tests&lt;/p&gt;

&lt;p&gt;Along the way (spoiler alert) I'll explain how one Integration tool (&lt;a href="http://bazel.build"&gt;http://bazel.build&lt;/a&gt;) solves the technical problems.&lt;/p&gt;

&lt;p&gt;However we'll conclude with a final problem, the people problem:&lt;/p&gt;

&lt;p&gt;4) the organization is averse to integrating dev processes&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;People problems are always harder than software problems, as I learned from early Google luminary Bill Coughran.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#why-devs-cant-run-the-full-stack"&gt;
  &lt;/a&gt;
  Why devs can't run the full stack
&lt;/h2&gt;

&lt;p&gt;As I mentioned earlier, our ideal integration happens on the developers machine. After making that non-order-preserving backend change, you'd just run the frontend tests to discover the breakage. In practice this is much harder than it should be.&lt;/p&gt;

&lt;p&gt;First, you might need your machine in a very particular state. You need compilers and toolchains installed, at just the right versions, statically linked against the right system headers, and running on an OS that's compatible with prod. Most teams don't have an up-to-date "onboarding" instructions that carefully covers this, and since the underlying systems are always churning, you don't even know whether your instructions will work for the next person trying to run your code.&lt;/p&gt;

&lt;p&gt;Next, many systems require shared runtime infrastructure ("the staging environment") or credentials. These either aren't made available to engineers, or they're a contended resource where only one person can have their changes running at a time.&lt;/p&gt;

&lt;p&gt;It's also common that knowledge of how to bring up a fresh copy of the system isn't written down anywhere, and hasn't been scripted. Only the sysadmin has the steps roughly documented in an unsaved notepad.exe buffer, so when you need to bring up a server, that person clicks around the AWS UI to do so.&lt;/p&gt;

&lt;p&gt;To solve these problems, and unlock your developers ability to run the whole system, you need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A tool like Bazel that manages the toolchains and keeps the configuration roughly hermetic, so a dev can "parachute" into someone else's code and run it at HEAD without any setup to maintain.&lt;/li&gt;
&lt;li&gt;The ability to cheaply spin up a new environment anywhere. For example if you deploy to a Kubernetes cluster, use something like minikube to make a miniature local environment that mimics production and re-uses most of the same configs.&lt;/li&gt;
&lt;li&gt;Robust scripting that automates the release engineer's job. It should be possible for a test to run the same setup logic to make a fresh copy of the system under test.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The configurations need to be "democratized" for this to work well. Under Jenkins you might have had some centralized Groovy code that looks at changed directories or repositories and determines tests to run. This doesn't scale in a big org where many engineers have to edit these files. Instead, you should push configuration out to the leaves as much as possible: co-locate the description of build&amp;amp;test for some code at the nearest common ancestor directory of those inputs. Bazel's &lt;code&gt;BUILD.bazel&lt;/code&gt; files are a great example of how to do this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#integration-test-fixtures"&gt;
  &lt;/a&gt;
  Integration test fixtures
&lt;/h2&gt;

&lt;p&gt;Remember that tests are written in three parts, sometimes called "Arrange, Act, Assert". The first part is to bring up the "System under test" (SUT). ( &lt;a href="https://en.wikipedia.org/wiki/Test_fixture#Software"&gt;https://en.wikipedia.org/wiki/Test_fixture#Software&lt;/a&gt; and other links )&lt;/p&gt;

&lt;p&gt;In order to assert that the frontend and backend work together, our automated test first needs to integrate the frontend and backend, by building both of them at HEAD and running them in a suitable environment, with the wiring performed so they can reach each other for API calls. You'll need a high-level, language-agnostic tool to orchestrate these builds, in order to build dependencies from head. Again, Bazel is great for this.&lt;/p&gt;

&lt;p&gt;You'll find there is natural resistance here: the "first mover" cost is very high. An engineer could easily spend a week writing one test to catch the ordering defect I mentioned earlier. In the scope of that post-mortem, someone will object "we can't possibly make time for that." But of course, the fixture is reusable, and once it's written you can add more true "integration tests", even writing them at the same time you make software changes rather than as regression tests for a post-mortem.&lt;/p&gt;

&lt;p&gt;If the code is in many repositories, that also introduces a burden. You'll either need some "meta-versioning" scheme that says what SHA of each repo to fetch when integrating, or you'll need to co-locate the code into a single monorepo (which has its own cost/benefit analysis).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#not-economical-to-run-all-the-tests"&gt;
  &lt;/a&gt;
  Not economical to run all the tests
&lt;/h2&gt;

&lt;p&gt;The last technical problem I'll mention is test triggering. In the CBOI model, you only needed to run the backend tests when the backend changed, and the frontend tests when the frontend changed. And they were smaller tests that only required a single system in their test fixture. CI is going to require that we write tests with heavier fixtures, and run them on more changes.&lt;/p&gt;

&lt;p&gt;Triggering across projects is tricky. Our goal is to avoid running all the tests every time, but to run the "necessary" ones. You could write some logic that says "last time we touched that backend we broke something, so those changes also trigger this other CI". This logic is likely flawed and quickly rusts, so I don't think it's a good strategy. You could automate that logic using some heuristics, like &lt;a href="https://www.launchableinc.com/"&gt;Launchable&lt;/a&gt; does. But to make this calculation reliably correct, ensuring that &lt;em&gt;all&lt;/em&gt; affected tests are run for a given change, you need a dependency graph. Bazel is great for expressing and querying that graph, for example finding every test that transitively depends on the changed sources.&lt;/p&gt;

&lt;p&gt;In a naive solution, it's also too slow to build everything from HEAD. You need a shared cache of intermediate build artifacts. Bazel has a great remote caching layer that can scale to a large monorepo, ensuring that you keep good incrementality.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#organization-averse-to-integrating"&gt;
  &lt;/a&gt;
  Organization Averse to Integrating
&lt;/h2&gt;

&lt;p&gt;Lastly, I mentioned there's a non-technical problem as well. Even with clever engineers and the right tools, like Bazel, this might be what sinks your effort.&lt;/p&gt;

&lt;p&gt;Engineers want to work in isolation from each other. For example, the backend engineers think JavaScript is a mess and don't want to learn anything about frontend code. Engineers are amazingly tribal! Try asking a Mac user to develop on Windows or vice-versa.&lt;/p&gt;

&lt;p&gt;To do CI, we're asking that the backend engineers have to look at the frontend test results when something is red, to determine if their changes caused a regression. We're asking the frontend engineers to wait for a build of the backend to run their tests against. These teams never had to work closely together in the past.&lt;/p&gt;

&lt;p&gt;Worse, we're also asking the managers to act differently. This is an infrastructure investment for the future, requiring some plumbing changes in the build system. So only an organization willing to make strategic decisions will be able to prioritize and consistently staff their CI project. Also, the managers from different parts of the org will have to reach some technical agreement between their teams about standardizing on build/test tooling that can span across projects. This may run into the same friction you always have when making shared technical decisions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#epilogue-coverage"&gt;
  &lt;/a&gt;
  Epilogue: coverage
&lt;/h2&gt;

&lt;p&gt;I like to beat up on test coverage as a metric, because it weights entirely on executing lines of code, but not on making assertions. In the context of CBOI, test coverage is also misleading. You might have 100% test coverage of the frontend, and 100% test coverage of the backend, but 0% test coverage of defects seen when integrating the two. I think this contributes to the misunderstanding among engineering managers.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>CCS: Podcasts feat @lelepg</title>
      <author>Pachi 🪐 (she/her/ela)</author>
      <pubDate>Tue, 01 Jun 2021 17:45:54 +0000</pubDate>
      <link>https://dev.to/newrelic/ccs-podcasts-feat-lelepg-gd7</link>
      <guid>https://dev.to/newrelic/ccs-podcasts-feat-lelepg-gd7</guid>
      <description>&lt;p&gt;Hello and welcome to another chapter of our Content Creation Series.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Today we will be talking about Podcasts.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Podcasts are really interesting, because there's a lot of potential here for collaborations and networking, and you can choose from:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Starting your own Podcast;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Putting yourself out there to be a Guest on existing podcasts;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do both!&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Personally, I do both.&lt;/p&gt;

&lt;p&gt;I enjoy being a guest, because that is a fun way of connecting with new people, talk about things I like and create content with other creators.&lt;/p&gt;

&lt;p&gt;I am also one of the hosts of the &lt;a href="https://www.therelicans.com/launchies"&gt;Launchies, a podcast  for early-career + non-traditional background&lt;/a&gt;, and co-host of a Brazilian Podcast with my friend Levxyca, called &lt;a href="https://anchor.fm/mocasdaweb/"&gt;Moças da Web&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Despite all of the above I must confess that I don’t have much experience with the production part, so this post will have a co-writer, Leticia, who has experience with producing very well organized podcasts without fancy equipment or software and she has been doing a great job!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-to-podcast-"&gt;
  &lt;/a&gt;
  Why to Podcast ?
&lt;/h2&gt;

&lt;p&gt;Podcasting is an interesting way of putting yourself out there, get some practice with public speaking without exposing yourself as much as in video, while creating connections with the community you care about.&lt;/p&gt;

&lt;p&gt;When you are a guest in other podcasts, while the podcast doesn't belong to you, you are co-creator of the episodes you guest on, so you can add those episodes to your Content Creator portfolio.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#brainstorming"&gt;
  &lt;/a&gt;
  Brainstorming
&lt;/h2&gt;

&lt;p&gt;If we are going to start a podcast, there are some decisions we have to make.&lt;br&gt;
Don’t worry about any technical issues or gears right now, let’s put together the idea for our podcast.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here are some things we have to ask ourselves:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Format:&lt;/strong&gt; Are we just going to talk about a topic by ourselves or will we interview people?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Topic:&lt;/strong&gt; What will be our focus? A programming language? Tech news? A specific stack? You can get that list we made on the writing article, to choose a topic to focus our podcast.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Name:&lt;/strong&gt; Of course we need a name, this is the hardest part in my opinion, finding a cool name that is not taken. My tip is to write every name that comes to mind, then choose the top 5 and check to see if they are free.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Frequency:&lt;/strong&gt; Last, but not least, consistency is important. It doesn't matter if it will be weekly, bi-weekly or monthly, but it is good to have a set timeline for publishing your episodes.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;After we have those 4 points defined, we are ready to get started!&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you have chosen to go solo,  create a list with all the topics you can talk about, and add the topics to a content calendar, based on the frequency you have chosen.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now, if you went to the Interviewing route, I recommend starting with people you know and are comfortable talking to. When you run out of those, go to Twitter! This is where I find most of my guests for Launchies.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lele says : &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“No matter which format you choose, keeping things organized with&lt;br&gt;
dates and episodes statuses is something that can help a lot, and if&lt;br&gt;
you can, you should try it. You can use anything to do that&lt;br&gt;
organization, from paper and pen to a spreadsheet”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cRxOldgz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.therelicans.com/remoteimages/uploads/articles/1wkftedh0hkkowgpittw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cRxOldgz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.therelicans.com/remoteimages/uploads/articles/1wkftedh0hkkowgpittw.jpg" alt="Someone recording a podcast"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Photo by &lt;a href="https://unsplash.com/@soundtrap?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Soundtrap&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/podcast?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#producing-your-podcast-by-lele"&gt;
  &lt;/a&gt;
  Producing your podcast by Lele
&lt;/h2&gt;

&lt;p&gt;Hello people!&lt;br&gt;
My name’s Leticia, but I like to be called Lele, especially because I don’t like how my name sounds in English. &lt;br&gt;
I’m a Computer Engineering student, and it’s been a while since I started creating content, which, I have to say, escalated quickly. &lt;br&gt;
Five months ago, I started watching livestreams on Twitch, and now I write in two awesome websites (dev.to and therelicans.com), have a YouTube channel (all my videos are in Portuguese) and a podcast! &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So, let’s talk about producing a podcast!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Producing a podcast is not as hard as it seems. You don’t have to use pro equipment, or know a lot about audio treatment. At least not at the beginning. When you listen to something, you know that it sounds good. If your sound is clear and in a good volume, that’s good enough.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-equipment-and-studio"&gt;
  &lt;/a&gt;
  The Equipment and "Studio"
&lt;/h3&gt;

&lt;p&gt;First, let’s talk about what kind of equipment you can use and where you are going to record your podcast. By where, I mean the physical location. &lt;br&gt;
Are you going to record it in your room? Do you have some kind of studio?&lt;/p&gt;

&lt;p&gt;For equipment, you can use things you already have, like earphones or headphones (if you have some kind of pro equipment, wonderful, but you don’t need to). As long as it has a mic, it can be used.&lt;br&gt;
 If you have a little knowledge about electronics, you can even build your own mic with some old phone’s mic. If you speak close to it (&lt;em&gt;because that’s how that kind of mic was intended to be used&lt;/em&gt;) you will never guess it’s a mic from an old phone!&lt;/p&gt;

&lt;p&gt;Take a look at the one I made! It’s not pretty, but it’s useful. &lt;br&gt;
I basically soldered that old mic into a wire, and the wire into a p2 connector, then I made that weird thing with a hair clip and hot glue so I can attach it to my clothes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MsHKJ5ER--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/bXai74DJigAhbuvumfeP11Ws_aJrH0b2Dc-ChhXdQQ2ecG_r21PiNSlABqllhhJg4dO2S8nu3dGdxAJwXpVRUUBKfOH2vdwhzNby3ISvEZxpfHMpUN5L6U9m5_rXg59BbAlexZyA" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MsHKJ5ER--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/bXai74DJigAhbuvumfeP11Ws_aJrH0b2Dc-ChhXdQQ2ecG_r21PiNSlABqllhhJg4dO2S8nu3dGdxAJwXpVRUUBKfOH2vdwhzNby3ISvEZxpfHMpUN5L6U9m5_rXg59BbAlexZyA" alt="handmade mic"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So you have your mic, and your sound is not that great...&lt;br&gt;
&lt;strong&gt;Where are you recording?&lt;/strong&gt; &lt;br&gt;
The ambient can make a lot of difference in the sound you’ll get from your mic. &lt;br&gt;
Perhaps, you are recording in a place with lots of background noise, or in an open place that doesn't have a very good acoustic. &lt;br&gt;
Choosing where you’re gonna record makes more difference then what equipment you are using. So I’ll ask you a very important question. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Can you fit in your closet?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It may sound weird, but closets are places with a wonderful acoustic. Most of the outside noise is filtered and your voice sounds really good. &lt;strong&gt;Try it&lt;/strong&gt;. Record your voice inside your closet and outside it to see the difference.&lt;/p&gt;

&lt;p&gt;Another thing you can try to do to filter outside noises, is to cover yourself (and your mic) in a blanket, and record underneath it. &lt;em&gt;Just make sure you can breathe if you do it&lt;/em&gt;. &lt;br&gt;
Does it look silly? A lot. &lt;br&gt;
But nobody’s gonna see you, and the sound quality is more important at this moment. &lt;br&gt;
Remember to keep a “safe distance” from windows and keep them closed, cause you never know when a loud sound can come in from the street.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#recording"&gt;
  &lt;/a&gt;
  Recording
&lt;/h3&gt;

&lt;p&gt;Now decide how you will record your podcast. &lt;br&gt;
I have a google meet’s license, so for me it’s easier and more comfortable to record my episodes in it, and edit the audio. But I know that’s not the best way, especially because it’s paid, so I’ll focus on some free alternatives.&lt;/p&gt;

&lt;p&gt;If you like &lt;strong&gt;discord&lt;/strong&gt;, you pretty much have it done. &lt;br&gt;
There are some bots that can record audio channels, such as &lt;a href="%5Bhttps://craig.chat/home/%5D(https://craig.chat/home/)"&gt;Craig&lt;/a&gt;, so all you have to do is to invite your guest to an audio channel and invite the bot as well. That’s the easier alternative, but not the only one.&lt;/p&gt;

&lt;p&gt;If you cannot record a google meeting, you can always record it in a remote way from your pc with some screen recorder such as OBS studio. &lt;br&gt;
You can also use some platforms like Zencastr which allow audio recording, and separate the recording giving you one audio file for each person talking. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;One good practice is to keep a local backup of your podcasts as well. &lt;br&gt;
Sounds fancy?  Just turn on your phone’s voice recorder app and record&lt;br&gt;
the episode in it as well.  Assuming that your guest is somewhere&lt;br&gt;
else, ask them to do the same, and now you have a safety copy if&lt;br&gt;
anything goes wrong.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#editing"&gt;
  &lt;/a&gt;
  Editing
&lt;/h3&gt;

&lt;p&gt;After recording, you must edit your episode. &lt;br&gt;
But hold on. I want to talk a little about the identity of your podcast. &lt;br&gt;
Do you have some effect sounds you would like to add? Transitions music perhaps. &lt;br&gt;
A standard beginning and a standard end? &lt;br&gt;
The podcast is yours so you can choose as many extra sounds as you would like, EXCEPT the ones that are copyrighted. &lt;strong&gt;Copyright is something very important when we are creating content. If you are not sure you have permission to use that sound/image/text, don’t use it&lt;/strong&gt;. Maybe now you won’t have any problems with it, but better safe than sorry.&lt;/p&gt;

&lt;p&gt;That said, it’s now time to edit your episode. &lt;br&gt;
If you do your research, you can find a lot of paid and free audio editors, just like video editors. &lt;br&gt;
I’m fan of open source, so I always try to use OS alternatives for my projects production’s. &lt;/p&gt;

&lt;p&gt;For audio, the editor I use is &lt;strong&gt;Audacity&lt;/strong&gt;, it is free, open-source and has lots of features, as well as some effects for you to treat your audio and make it sound a little better if you need to. &lt;br&gt;
You can even use some video editor and export the podcast as an audio file, but I prefer an audio editor. &lt;br&gt;
No matter what editor you’ll choose, you need to learn three things. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;How to paste audio (include your extra sounds), &lt;/li&gt;
&lt;li&gt;How to delete audio (cut out some parts like silences) and &lt;/li&gt;
&lt;li&gt;export your final audio. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That’s the basics for editing a podcast. &lt;br&gt;
Anything you need other than that, is just a google away. &lt;br&gt;
“How to  on ” is what you need to go on. &lt;br&gt;
Of course you can always find some courses for the audio editor you are using on the internet if you have the time to do it. This, by the way, is something I strongly recommend. Editing is crucial and the more you know about the editor you are using, the better.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#publishing"&gt;
  &lt;/a&gt;
  Publishing
&lt;/h3&gt;

&lt;p&gt;Now, on publishing. &lt;br&gt;
There are lots of platforms to choose from, but I’d recommend Anchor because it’s a very popular platform and you must post your things where people will find you. &lt;br&gt;
Just one more thing before you send your podcast to the world: &lt;strong&gt;Have a nice visual image&lt;/strong&gt;. &lt;br&gt;
It’s not rare for people to be searching podcasts and give a chance for that one that has a nice cover picture. You want your podcast to be the one that chance is given to. &lt;br&gt;
&lt;strong&gt;And how do you make a nice image?&lt;/strong&gt; You can design it yourself, but I’d just say use Canva. &lt;br&gt;
I’m a complete newbie when we are talking about design and things like that, but even I can do something pretty using Canva, so you can do it as well!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Alright, the podcast if published, so we are done!!&lt;/strong&gt; &lt;br&gt;
Well… not so fast. &lt;br&gt;
Let’s talk about one final topic. &lt;br&gt;
&lt;strong&gt;Marketing.&lt;/strong&gt; &lt;br&gt;
How will you tell people your podcast exists? Do you think it would be a good idea to have social media accounts for your podcast? Or you would like to use your own? How will you reach the public you want to reach, and what social media are they using? &lt;br&gt;
These are things to consider, and I recommend you invest some time researching it.&lt;/p&gt;

&lt;p&gt;So now we are done!&lt;br&gt;&lt;br&gt;
&lt;strong&gt;That’s my basic guide on producing a podcast.&lt;/strong&gt; &lt;br&gt;
Hope it helps!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#conclusion-and-next-steps"&gt;
  &lt;/a&gt;
  Conclusion and Next Steps
&lt;/h2&gt;

&lt;p&gt;And that is it!&lt;br&gt;
I hope that you will find our advice helpful and if you do start a podcast, &lt;strong&gt;let us know&lt;/strong&gt;! &lt;br&gt;
We would love to be your guest !!!&lt;/p&gt;

&lt;p&gt;If you are thinking about sticking with being a guest yourself, we have 3 podcasts that are always looking for guests:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.therelicans.com/launchies"&gt;&lt;strong&gt;Launchies:&lt;/strong&gt; a podcast for early-career + non-traditional background devs offering advice on navigating career progression &amp;amp; making the transition to tech.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.therelicans.com/polyglot"&gt;&lt;strong&gt;Polyglot:&lt;/strong&gt; a podcast for middle and late-career developers with more technical discussions of higher-level language concepts and software patterns.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.therelicans.com/observy"&gt;&lt;strong&gt;Observy McObservface:&lt;/strong&gt;  A DevOps podcast about observability but occasionally has episodes on a variety of software development &amp;amp; community.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Drop me a comment if you would like to be a guest in any of these podcasts and I will make it happen!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading! &lt;br&gt;
And don’t forget to follow Lele, because she is awesome!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__user ltag__user__id__570832"&gt;
  
    .ltag__user__id__570832 .follow-action-button {
      background-color: #010C1F !important;
      color: #aebcd5 !important;
      border-color: #010C1F !important;
    }
  
    &lt;a href="/lelepg" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QZoLIWL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--eQH3NpeU--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/570832/85a5f6f2-7450-4c4b-976f-23f1aa45c4c7.jpeg" alt="lelepg image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/lelepg"&gt;Leticia Pegoraro Garcez&lt;/a&gt;
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/lelepg"&gt;Olá pessoas, sou estudante de Engenharia de Computação, e estou iniciando minha jornada de criação de conteúdo&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;XOXO,&lt;br&gt;
Pachi C.&lt;/p&gt;

</description>
      <category>podcast</category>
      <category>devrel</category>
    </item>
  </channel>
</rss>
