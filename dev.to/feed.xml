<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Node.js - Deploying  to production</title>
      <author>popoola Temitope</author>
      <pubDate>Thu, 02 Sep 2021 13:20:28 +0000</pubDate>
      <link>https://dev.to/popoolatopzy/node-js-deploying-to-production-3p5p</link>
      <guid>https://dev.to/popoolatopzy/node-js-deploying-to-production-3p5p</guid>
      <description>&lt;p&gt;upgrading your node.js projects from a development (localhost) environment to a productive (live server) in cpanel is simple follow the steps below.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#pro-and-con"&gt;
  &lt;/a&gt;
  Pro and con
&lt;/h1&gt;

&lt;p&gt;You are familiar with node.js environment.&lt;br&gt;
You have installed node.js on your local computer.&lt;br&gt;
You have one or more node.js project(s).&lt;br&gt;
You have a registered hosting and domain name.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#activate-application-manager"&gt;
  &lt;/a&gt;
  activate application manager.
&lt;/h1&gt;

&lt;p&gt;application manager can be to on from WHM’s Feature.&lt;/p&gt;

&lt;p&gt;Open Feature Manager, which is under Packages in the WHM sidebar menu. &lt;/p&gt;

&lt;p&gt;Click on Edit button under Manage Feature List with the Default list selected in the dropdown menu. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_eZI5qOZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.cpanel.com/wp-content/uploads/2020/10/00-whm-feature-manager.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_eZI5qOZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.cpanel.com/wp-content/uploads/2020/10/00-whm-feature-manager.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Step2 search for application manager in the search field and check it.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sjk2tIXn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.cpanel.com/wp-content/uploads/2020/10/Screen-Shot-2020-10-21-at-10.38.01-AM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sjk2tIXn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.cpanel.com/wp-content/uploads/2020/10/Screen-Shot-2020-10-21-at-10.38.01-AM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, you’ll need to install the software that allows cPanel to run and manage Node.js applications, which are mod_passenger app server and EasyApache4’s Node environment. You need to log in as root with SSH to install the software.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yum install ea-ruby24-mod_passenger
yum install ea-apache24-mod_env 
yum install ea-nodejs10
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Application Manager is now enable and ready to host Node.js applications. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#now-let-create-our-nodejs-application"&gt;
  &lt;/a&gt;
  Now let create our node.js application
&lt;/h1&gt;

&lt;p&gt;Log in to cPanel with SSH as a  user and create a new directory in the home directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir nodejs_app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;nodejs_app folder will contain all your node.js files.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Next create app.js file in the nodejs_app folder&lt;br&gt;&lt;br&gt;
&lt;code&gt;Note if you have a project you want to host live you can upload it in the folder that you just created now.&lt;br&gt;
But I'll be using new project for example.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now copy the code below inside your app.js file and save it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hostname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;127.0.0.1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createServer&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;statusCode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text/plain&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World! I am your NodeJS app! &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hostname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Server running at http://&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;hostname&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br&gt;
`&lt;/p&gt;

&lt;p&gt;The code sets up an HTTP server on port 3000. It responds to web requests with the message: “Hello World! I am your NodeJS app!”  &lt;/p&gt;

&lt;p&gt;Let Run our node.js code, by EasyApache’s Node.js that will installed before, run The following command yo executes our nodejs_app.&lt;/p&gt;

&lt;p&gt;`&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/opt/cpanel/ea-nodejs10/bin/node app.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br&gt;
`&lt;/p&gt;

&lt;p&gt;you should see a message that says:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Server running at &lt;a href="http://127.0.0.1:3000"&gt;http://127.0.0.1:3000&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;open a new terminal window and log in to your server as the same cPanel user.&lt;br&gt;
use the curl HTTP client to send the app a request. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
curl http://127.0.0.1:3000&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;br&gt;
You should get “’Hello World! I am a NodeJS app on cPanel&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#registering-your-nodejs-application"&gt;
  &lt;/a&gt;
  Registering Your Node.JS Application
&lt;/h1&gt;

&lt;p&gt;Registering tells the Passenger app manager and cPanel where to find your application and which domain you would like to use. &lt;/p&gt;

&lt;p&gt;In cPanel, open the Application Manager, which you’ll find under Software on the main page. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lXEC27Ie--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.cpanel.com/wp-content/uploads/2020/10/02-cpanel-application-manager.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lXEC27Ie--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.cpanel.com/wp-content/uploads/2020/10/02-cpanel-application-manager.png"&gt;&lt;/a&gt;&lt;br&gt;
 Click on Register Application button&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QRUHiOIc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.cpanel.com/wp-content/uploads/2020/10/03-cpanel-register-nodejs-application.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QRUHiOIc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.cpanel.com/wp-content/uploads/2020/10/03-cpanel-register-nodejs-application.png"&gt;&lt;/a&gt;&lt;br&gt;
Fill in the application configuration&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N_WVsSji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.cpanel.com/wp-content/uploads/2020/10/Screen-Shot-2020-10-21-at-10.40.05-AM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N_WVsSji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.cpanel.com/wp-content/uploads/2020/10/Screen-Shot-2020-10-21-at-10.40.05-AM.png"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Monitor your Python application with OpenTelemetry and SigNoz 📊🐍</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Thu, 02 Sep 2021 13:17:47 +0000</pubDate>
      <link>https://dev.to/signoz/monitor-your-python-application-with-opentelemetry-and-signoz-2gci</link>
      <guid>https://dev.to/signoz/monitor-your-python-application-with-opentelemetry-and-signoz-2gci</guid>
      <description>&lt;p&gt;OpenTelemetry is a vendor-agnostic instrumentation library under CNCF. It can be used to instrument your Python applications to generate telemetry data. Let's learn how it works and see how to visualize that data with SigNoz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The cost of a millisecond.&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
TABB Group, a financial services industry research firm, &lt;a href="https://research.tabbgroup.com/report/v06-007-value-millisecond-finding-optimal-speed-trading-infrastructure" rel="noopener noreferrer nofollow"&gt;estimates&lt;/a&gt; that if a broker's electronic trading platform is 5 milliseconds behind the competition, it could cost $4 million in revenue per millisecond.&lt;/p&gt;

&lt;p&gt;The cost of latency is too high in the financial services industry, and the same is true for almost any software-based business today. Half a second is enough to kill user satisfaction to a point where they abandon an app's service.&lt;/p&gt;

&lt;p&gt;Capturing and analyzing data about your production environment is critical. You need to proactively solve stability and performance issues in your web application to avoid system failures and ensure a smooth user experience.&lt;/p&gt;

&lt;p&gt;In a microservices architecture, the challenge is to solve availability and performance issues quickly. You need observability for your applications. And, observability is powered with telemetry data.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-opentelemetry"&gt;
  &lt;/a&gt;
  What is OpenTelemetry?
&lt;/h2&gt;

&lt;p&gt;OpenTelemetry emerged as a single project after the merging of OpenCensus(from Google) and OpenTracing(from Uber) into a single project. The project aims to make telemetry data(logs, metrics, and traces) a built-in feature of cloud-native software applications.&lt;/p&gt;

&lt;p&gt;OpenTelemetry has laguage-specific implementation for generating telemetry data which includes OpenTelemetry Python libraries.&lt;/p&gt;

&lt;p&gt;You can check out the current releases of &lt;a href="https://github.com/open-telemetry/opentelemetry-python/releases" rel="noopener noreferrer nofollow"&gt;opentelemetry-python&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;OpenTelemetry only generates telemetry data and lets you decide where to send your data for analysis and visualization. In this article, we will be using &lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt; - an open-source full-stack application performance monitoring tool as our analysis backend.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Steps to get started with OpenTelemetry for a Python application:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Installing SigNoz&lt;/li&gt;
&lt;li&gt;Installing sample Python app&lt;/li&gt;
&lt;li&gt;Instrumentation with OpenTelemetry and sending data to SigNoz&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#installing-signoz"&gt;
  &lt;/a&gt;
  Installing SigNoz
&lt;/h2&gt;

&lt;p&gt;You can get started with SigNoz using just three commands at your terminal if you have Docker installed. You can read about other deployment options from &lt;a href="https://signoz.io/docs/deployment/docker"&gt;SigNoz documentation&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/SigNoz/signoz.git
cd signoz/deploy/
./install.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will have an option to choose between ClickHouse or Kafka + Druid as a storage option. Trying out SigNoz with ClickHouse database takes less than 1.5GB of memory, and for this tutorial, we will use that option.&lt;/p&gt;

&lt;p&gt;When you are done installing SigNoz, you can access the UI at: &lt;code&gt;http://localhost:3000&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The application list shown in the dashboard is from a sample app called HOT R.O.D that comes bundled with the SigNoz installation package.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1v9GxruK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xl95iwg3pyafx2jh3989.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1v9GxruK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xl95iwg3pyafx2jh3989.png" alt="SigNoz dashboard"&gt;&lt;/a&gt;SigNoz dashboard&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-sample-python-app"&gt;
  &lt;/a&gt;
  Installing sample Python app
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Python 3.4 or newer&lt;br&gt;
If you do not have Python installed on your system, you can download it from the &lt;a href="https://www.python.org/downloads/" rel="noopener noreferrer nofollow"&gt;link&lt;/a&gt;. Check the version of Python using &lt;code&gt;python3 --version&lt;/code&gt; on your terminal to see if Python is properly installed or not.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MongoDB&lt;br&gt;
If you already have MongoDB services running on your system, you can skip this step.&lt;br&gt;
For macOS:&lt;br&gt;
Download link: &lt;a href="https://docs.mongodb.com/manual/tutorial/install-mongodb-on-os-x/"&gt;https://docs.mongodb.com/manual/tutorial/install-mongodb-on-os-x/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For Linux: &lt;a href="https://docs.mongodb.com/manual/administration/install-on-linux/"&gt;https://docs.mongodb.com/manual/administration/install-on-linux/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For Windows: &lt;a href="https://docs.mongodb.com/manual/tutorial/install-mongodb-on-windows/"&gt;https://docs.mongodb.com/manual/tutorial/install-mongodb-on-windows/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On MacOS the installation is done using Homebrew's brew package manager. Once the installation is done, don't forget to start MongoDB services using &lt;code&gt;brew services start mongodb/brew/mongodb-community@4.4&lt;/code&gt;  on your macOS terminal.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fY8AgjxI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vahht5b6los4a0wo24ry.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fY8AgjxI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vahht5b6los4a0wo24ry.png" alt="starting mongoDB services from mac terminal"&gt;&lt;/a&gt;start mongodb services&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#steps-to-get-the-python-app-up-and-running"&gt;
  &lt;/a&gt;
  Steps to get the Python app up and running
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Clone sample Flask app repository and go to the root folder
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   git clone https://github.com/SigNoz/sample-flask-app.git
   cd sample-flask-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Check if the app is running
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   python3 app.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k7gm1ry1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/76nk53gvql5nrsec28i7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k7gm1ry1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/76nk53gvql5nrsec28i7.png" alt="mac terminal commands for running a python app"&gt;&lt;/a&gt;Running Python app from terminal&lt;/p&gt;

&lt;p&gt;You can now access the UI of the app on your local host: &lt;a href="http://localhost:5000/"&gt;http://localhost:5000/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iidNEtKG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x5in6fxk1ddyh76ec1wg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iidNEtKG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x5in6fxk1ddyh76ec1wg.png" alt="Python app UI"&gt;&lt;/a&gt;Python App UI accessed on port 5000&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#instrumentation-with-opentelemetry-and-sending-data-to-signoz"&gt;
  &lt;/a&gt;
  Instrumentation with OpenTelemetry and sending data to SigNoz
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Opentelemetry Python instrumentation installation
Your app folder contains a file called requirements.txt. This file contains all the necessary commands to set up OpenTelemetry Python instrumentation. All the mandatory packages required to start the instrumentation are installed with the help of this file. Make sure your path is updated to the root directory of your sample app and run the following command:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   pip3 install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If it hangs while installing &lt;code&gt;grpcio&lt;/code&gt; during &lt;strong&gt;pip3 install opentelemetry-exporter-otlp&lt;/strong&gt; then follow below steps as suggested in &lt;a href="https://stackoverflow.com/questions/56357794/unable-to-install-grpcio-using-pip-install-grpcio/62500932#62500932" rel="noopener noreferrer nofollow"&gt;this stackoverflow link&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;pip3 install --upgrade pip&lt;/li&gt;
&lt;li&gt;python3 -m pip install --upgrade setuptools&lt;/li&gt;
&lt;li&gt;pip3 install --no-cache-dir --force-reinstall -Iv grpcio&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;Install application specific packages
This step is required to install packages specific to the application. Make sure to run this command in the root directory of your installed application. This command figures out which instrumentation packages the user might want to install and installs it for them:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   opentelemetry-bootstrap --action=install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Configure a span exporter and run your application
You're almost done. In the last step, you just need to configure a few environment variables for your OTLP exporters. Environment variables that need to be configured:&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;SERVICE_NAME &lt;strong&gt;-&lt;/strong&gt; application service name (you can name it as you like)&lt;/li&gt;
&lt;li&gt;ENDPOINT_ADDRESS &lt;strong&gt;-&lt;/strong&gt; OTLP gRPC collector endpoint address (IP of SigNoz)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After taking care of these environment variables, you only need to run your instrumented application.&lt;br&gt;
   Accomplish all these by using the following command at your terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   OTEL_RESOURCE_ATTRIBUTES=service.name=pythonApp OTEL_METRICS_EXPORTER=none OTEL_EXPORTER_OTLP_ENDPOINT="http://&amp;lt;IP of SigNoz&amp;gt;:4317" opentelemetry-instrument python3 app.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Ip of SigNoz&lt;/code&gt; can be replaced with localhost in this case. Hence, the final command becomes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   OTEL_RESOURCE_ATTRIBUTES=service.name=pythonApp OTEL_METRICS_EXPORTER=none OTEL_EXPORTER_OTLP_ENDPOINT="http://localhost:4317" opentelemetry-instrument python3 app.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And, congratulations! You have instrumented your sample Python app. You can now access the SigNoz dashboard at &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; to monitor your app for performance metrics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J2lMA0zG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ubt9o5oo6ftze69x5v6i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J2lMA0zG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ubt9o5oo6ftze69x5v6i.png" alt="SigNoz dashboard showing python app in its list of applicayions."&gt;&lt;/a&gt;Python app appearing in the list of applications&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#metrics-and-traces-of-the-python-application"&gt;
  &lt;/a&gt;
  Metrics and Traces of the Python application
&lt;/h2&gt;

&lt;p&gt;SigNoz makes it easy to visualize metrics and traces captured through OpenTelemetry instrumentation.&lt;/p&gt;

&lt;p&gt;SigNoz comes with out of box RED metrics charts and visualization. RED metrics stands for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rate of requests&lt;/li&gt;
&lt;li&gt;Error rate of requests&lt;/li&gt;
&lt;li&gt;Duration taken by requests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8fEE-jnY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/azk0yga369uv5nl8aw1c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8fEE-jnY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/azk0yga369uv5nl8aw1c.png" alt="SigNoz dashboard showing the popular RED metrics for application performance monitoring."&gt;&lt;/a&gt;Measure things like application latency, requests per sec, error percentage and see your top endpoints&lt;/p&gt;

&lt;p&gt;You can then choose a particular timestamp where latency is high to drill down to traces around that timestamp.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GniTLMj1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zu0vo47zl3qmelgyflcz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GniTLMj1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zu0vo47zl3qmelgyflcz.png" alt="See traces, and apply powerful filters on trace data"&gt;&lt;/a&gt;View of traces at a particular timestamp&lt;/p&gt;

&lt;p&gt;You can use flamegraphs to exactly identify the issue causing the latency.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SFSQRtz1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/od67mmtnz24o5fr9b3a5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SFSQRtz1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/od67mmtnz24o5fr9b3a5.png" alt="Flamegraphs for distributed tracing"&gt;&lt;/a&gt;Flamegraphs showing exact duration taken by each spans - a concept of distributed tracing&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;OpenTelemetry makes it very convenient to instrument your Python application. You can then use an open-source APM tool like SigNoz to analyze the performance of your app. As SigNoz offers a full-stack observability tool, you don't have to use multiple tools for your monitoring needs.&lt;/p&gt;

&lt;p&gt;You can try out SigNoz by visiting its GitHub repo 👇&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you face any issues while trying out SigNoz, feel free to write to us at: &lt;a href="mailto:support@signoz.io"&gt;support@signoz.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to read more about SigNoz 👇&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://signoz.io/blog/monitoring-your-go-application-with-signoz/"&gt;Golang Application Performance Monitoring with SigNoz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://signoz.io/blog/nodejs-opensource-application-monitoring/"&gt;Nodejs Application Performance Monitoring with SigNoz&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>monitoring</category>
      <category>webdev</category>
      <category>devops</category>
    </item>
    <item>
      <title>Gradient.art - Designing and Inspecting Complex CSS Gradients</title>
      <author>Yoav Kadosh</author>
      <pubDate>Thu, 02 Sep 2021 13:12:46 +0000</pubDate>
      <link>https://dev.to/ykadosh/gradient-art-designing-and-inspecting-complex-css-gradients-4b06</link>
      <guid>https://dev.to/ykadosh/gradient-art-designing-and-inspecting-complex-css-gradients-4b06</guid>
      <description>&lt;p&gt;I've recently launched &lt;a href="https://gra.dient.art"&gt;gra.dient.art&lt;/a&gt; - an advanced online CSS gradient editor that has support for background layering, design tools, free cloud storage, and a growing list of examples. And the best part - it's totally free!&lt;/p&gt;

&lt;p&gt;With this editor, you can create your own unique designs, from basic patterns and icons to more complex illustrations and art, all using pure CSS. You can also explore the various different projects on the site if you're looking to use some existing designs, or just learn how it's done.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-editor"&gt;
  &lt;/a&gt;
  The editor
&lt;/h2&gt;

&lt;p&gt;The editor was designed to provide a photoshop-like experience, with a toolbar on the left, and panels on the right.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vXwZ5W6I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nu15e9vmakdnyq9h77by.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vXwZ5W6I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nu15e9vmakdnyq9h77by.png" alt="The Gradient.art editor"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-toolbar"&gt;
  &lt;/a&gt;
  The Toolbar
&lt;/h3&gt;

&lt;p&gt;In the left toolbar, you can find tools for moving, scaling and rotating a gradient background:&lt;/p&gt;

&lt;p&gt;You can move a gradient:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8VBkNisl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ods93h6v2rq279hylkos.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8VBkNisl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ods93h6v2rq279hylkos.gif" alt="Moving a gradient - gra.dient.art"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Scale it:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LGyZ0pZq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z70ytutv9k2uyfz3d9vx.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LGyZ0pZq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z70ytutv9k2uyfz3d9vx.gif" alt="Scaling a gradient - gra.dient.art"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And rotate it (only for conic/linear gradients):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kf65tO4k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4mb6hyci7w1y6ca5vlmp.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kf65tO4k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4mb6hyci7w1y6ca5vlmp.gif" alt="Rotating a gradient - gra.dient.art"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-panels"&gt;
  &lt;/a&gt;
  The Panels
&lt;/h3&gt;

&lt;p&gt;On the right of the editor you can find a few panels. Each panel is dedicated for a different aspect of the project.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-gradients-panel"&gt;
  &lt;/a&gt;
  The Gradients Panel
&lt;/h4&gt;

&lt;p&gt;The Gradients panel is where you can see all of your gradients, and add/remove/rename/reorder them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vTwLDIBl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fk0zz1h7jc38fusnzr3y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTwLDIBl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fk0zz1h7jc38fusnzr3y.png" alt="Gradient.art - The Gradients panel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-properties-panel"&gt;
  &lt;/a&gt;
  The Properties Panel
&lt;/h4&gt;

&lt;p&gt;The Properties panel is where you can modify the selected gradient. All of the CSS properties for all the 3 gradient types are supported.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y9uGim6U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7s1su0eraw3514q4tdqh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y9uGim6U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7s1su0eraw3514q4tdqh.png" alt="Gradient.art - The Properties panel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-code-panel"&gt;
  &lt;/a&gt;
  The Code Panel
&lt;/h4&gt;

&lt;p&gt;The Code panel displays the generated CSS code for your project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kC3LC0CR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nkfvjmilpyqjz5ky1mik.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kC3LC0CR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nkfvjmilpyqjz5ky1mik.png" alt="Gradient.art - The Code panel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-document-panel"&gt;
  &lt;/a&gt;
  The Document Panel
&lt;/h4&gt;

&lt;p&gt;The document panel is used for configuring project-wide things like canvas size, title, description &amp;amp; keywords. Good title &amp;amp; description will help other users find your project when they search for examples on the site. You can use special keywords if you want your project to be featured on one of the project pages. For example, use the  &lt;code&gt;pattern&lt;/code&gt; keyword if you  want your project to appear under &lt;a href="https://gra.dient.art/explore/patterns"&gt;gra.dient.art/explore/patterns&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XGpRJgW---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t9cz0wtdr3yp3si4g16m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XGpRJgW---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t9cz0wtdr3yp3si4g16m.png" alt="Gradient.art - The Document panel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resizing-the-panels"&gt;
  &lt;/a&gt;
  Resizing the panels
&lt;/h3&gt;

&lt;p&gt;The panels are resizable, so you can change the layout to your convenience. As a side note, getting the panels to stack when they resize beyond their siblings was a bit of a challenge, but I love the result 😎. You can see how it looks below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--flHlJF7T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k3ehcezciw8l6ls48a2l.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--flHlJF7T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k3ehcezciw8l6ls48a2l.gif" alt="Resizable panels in gra.dient.art"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  Examples
&lt;/h2&gt;

&lt;p&gt;Below are some projects you can find on &lt;a href="https://gra.dient.art"&gt;gra.dient.art&lt;/a&gt;. Click on any of the images to open it in the editor and inspect it. You can find many more projects  &lt;a href="https://gra.dient.art/explore"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gra.dient.art/editor/mq54ntrzsr"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s6s9dg2b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gradient-art-og-image.vercel.app/api/mq54ntrzsr"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gra.dient.art/editor/ggu4968jj0"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tONZGqGt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gradient-art-og-image.vercel.app/api/ggu4968jj0"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gra.dient.art/editor/lhk0fierr8"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wTgLt3AT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gradient-art-og-image.vercel.app/api/lhk0fierr8"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gra.dient.art/editor/jzxjb65uaj"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GEzYDbfL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gradient-art-og-image.vercel.app/api/jzxjb65uaj"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gra.dient.art/editor/b14o5f7qx0"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C8BPp4ea--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gradient-art-og-image.vercel.app/api/b14o5f7qx0"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#roadmap"&gt;
  &lt;/a&gt;
  Roadmap
&lt;/h2&gt;

&lt;p&gt;In the near future, and depending on the popularity and demand, I plan to add support for the following features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Variables&lt;/strong&gt; - defining and using variables for colors and units, using CSS custom properties. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Elements&lt;/strong&gt; - currently, the CSS is applied to a single element, and the most you can do is stack multiple backgrounds to it. This feature will allow the user to create a tree of elements for more complex designs.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Transformations&lt;/strong&gt; - Once elements are fully supported, this feature will add support for CSS transforms on the elements - rotate, scale, skew, and translate.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Open sourcing&lt;/strong&gt; - I would like to expose some of the components as open source, so that other developers can use them and contribute back.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#technology"&gt;
  &lt;/a&gt;
  Technology
&lt;/h2&gt;

&lt;p&gt;Under the hood, Gradient.art uses the following libraries/services, and I would like to express my gratitude to the people behind those projects:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://next-auth.js.org/"&gt;NextAuth.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://recoiljs.org/"&gt;Recoil.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://webrix.amdocs.com/"&gt;Webrix.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vercel.com/"&gt;Vercel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mongodb.com/"&gt;MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope you find this tool useful, and i'm looking forward to seeing your designs on &lt;a href="https://gra.dient.art"&gt;gra.dient.art&lt;/a&gt;! If you encounter any issue, or would like to request some new features, feel free to &lt;a href="https://gra.dient.art/contact"&gt;contact us&lt;/a&gt; or &lt;a href="https://github.com/GradientArt/issues/issues"&gt;file a bug&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>css</category>
      <category>gradients</category>
    </item>
    <item>
      <title>Access cookies in NextJS from server side</title>
      <author>Anjan Shomooder</author>
      <pubDate>Thu, 02 Sep 2021 12:43:00 +0000</pubDate>
      <link>https://dev.to/thatanjan/access-cookies-in-nextjs-from-server-side-2hna</link>
      <guid>https://dev.to/thatanjan/access-cookies-in-nextjs-from-server-side-2hna</guid>
      <description>&lt;p&gt;If you want to set an authentication system like jwt, then you have to store your token inside the client(browser). You store them either in localStorage or as a cookie. But when you perform any kind of server-side operation, then you don't have access to the client. So you can't access the cookies from the server-side. Then what is the solution?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-solution"&gt;
  &lt;/a&gt;
  The solution.
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;GetServerSideProps&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;next&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getServerSideProps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;GetServerSideProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;cookies&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I have created a YouTube video about this. You can check that out. If you like this video, please like and subscribe to my channel.&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/RECwLOZdiR4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;You can access the cookies from the request object inside the &lt;code&gt;getServerSideProps&lt;/code&gt; data fetching method. You can learn about data fetching methods of nextjs from &lt;a href="https://nextjs.org/docs/basic-features/data-fetching#getserversideprops-server-side-rendering"&gt; here &lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;getServerSideProps&lt;/code&gt; method takes context as a parameter. A context is a giant object. Request and Response object is inside the context object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the &lt;code&gt;request&lt;/code&gt; object you'll find a &lt;code&gt;cookies&lt;/code&gt; object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;cookies&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All your cookies will be inside the &lt;code&gt;cookies&lt;/code&gt; object.&lt;/p&gt;

&lt;p&gt;So that's it for this blog.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#shameless-plug"&gt;
  &lt;/a&gt;
  Shameless Plug
&lt;/h2&gt;

&lt;p&gt;I have made a video about how to build a carousel postcard with React, Material-UI, and Swiper.js.&lt;br&gt;
If you are interested you can check the video.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/NDyjI7hd4uE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;You can also demo the application form &lt;a href="https://insta-carousel-demo.vercel.app/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sXlAWXXh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/thatanjan/insta-carousel-yt/development/public/Screenshot%2520of%2520the%2520App.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sXlAWXXh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/thatanjan/insta-carousel-yt/development/public/Screenshot%2520of%2520the%2520App.png" alt="Screenshot of Insta Carousel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please like and subscribe to &lt;a href="https://www.youtube.com/channel/UCBaGowNYTUsm3IDaHbLRMYw?sub_confirmation=1"&gt;Cules Coding&lt;/a&gt;. It motivates me to create more content like this.&lt;/p&gt;

&lt;p&gt;If you have any questions, please comment down below.&lt;br&gt;
You can reach out to me on social media as &lt;a class="mentioned-user" href="https://dev.to/thatanjan"&gt;@thatanjan&lt;/a&gt;
.&lt;br&gt;
Stay safe. Goodbye.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#about-me"&gt;
  &lt;/a&gt;
  About me
&lt;/h2&gt;
&lt;h4&gt;
  &lt;a href="#why-do-i-do-what-i-do"&gt;
  &lt;/a&gt;
  Why do I do what I do?
&lt;/h4&gt;

&lt;p&gt;The Internet has revolutionized our life. I want to make the internet more beautiful and useful.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#what-do-i-do"&gt;
  &lt;/a&gt;
  What do I do?
&lt;/h4&gt;

&lt;p&gt;I ended up being a full-stack software engineer.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#what-can-i-do"&gt;
  &lt;/a&gt;
  What can I do?
&lt;/h4&gt;

&lt;p&gt;I can develop complex full-stack web applications like social media applications or e-commerce sites.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#what-have-i-done"&gt;
  &lt;/a&gt;
  What have I done?
&lt;/h4&gt;

&lt;p&gt;I have developed a social media application called &lt;a href="https://con-fession.vercel.app/"&gt;Confession&lt;/a&gt;. The goal of this application is to help people overcome their imposter syndrome by sharing our failure stories.&lt;br&gt;
I also love to share my knowledge. So, I run a youtube channel called &lt;a href="https://www.youtube.com/channel/UCBaGowNYTUsm3IDaHbLRMYw?sub_confirmation=1"&gt;Cules Coding&lt;/a&gt; where I teach people full-stack web development, data structure algorithms, and many more. So, Subscribe to Cules Coding so that you don't miss the cool stuff.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#want-to-work-with-me"&gt;
  &lt;/a&gt;
  Want to work with me?
&lt;/h2&gt;

&lt;p&gt;I am looking for a team where I can show my ambition and passion and produce great value for them.&lt;br&gt;
Contact me through my email or any social media as &lt;a class="mentioned-user" href="https://dev.to/thatanjan"&gt;@thatanjan&lt;/a&gt;
. I would be happy to have a touch with you.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#contacts"&gt;
  &lt;/a&gt;
  Contacts
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Email: &lt;a href="mailto:thatanjan@gmail.com"&gt;thatanjan@gmail.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;linkedin: &lt;a href="https://linkedin.com/in/thatanjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;portfolio: &lt;a href="https://thatanjan.me/"&gt;anjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Github: &lt;a href="https://github.com/thatAnjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Instagram (personal): &lt;a href="https://instagram.com/thatAnjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Instagram (youtube channel): &lt;a href="https://instagram.com/cules_coding/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;twitter: &lt;a href="https://twitter.com/thatAnjan"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Blogs you might want to read:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/setup-eslint-prettier-with-typescript-and-react"&gt; Eslint, prettier setup with TypeScript and react &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/what-is-client-side-rendering"&gt;What is Client-Side Rendering?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/what-is-server-side-rendering"&gt;What is Server Side Rendering?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/everything-you-need-to-know-about-tree-data-structure"&gt;Everything you need to know about tree data structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/13-reasons-why-you-should-use-Nextjs"&gt;13 reasons why you should use Nextjs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Videos might you might want to watch:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/NDyjI7hd4uE"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/T-n0mrssDiw"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Be_C_Op8Tx8"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ag3je1g0BN8"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/B3HX2rWyKlU"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/C6VytdSDNSk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>My personal 6 best tips for programmers🤩🤝</title>
      <author>Paul Dunz</author>
      <pubDate>Thu, 02 Sep 2021 12:37:15 +0000</pubDate>
      <link>https://dev.to/pauld103/my-personal-6-best-tips-for-programmers-2a7a</link>
      <guid>https://dev.to/pauld103/my-personal-6-best-tips-for-programmers-2a7a</guid>
      <description>&lt;h3&gt;
  &lt;a href="#in-this-post-i-will-tell-you-my-own-secrets-and-tips-about-programming"&gt;
  &lt;/a&gt;
  In this post I will tell you my own secrets and tips about programming!
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EdgmBa4c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ucv9ojfqup62tubsmja.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EdgmBa4c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ucv9ojfqup62tubsmja.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
After 4 years of coding experience, I listed up the most important secrets you need to do, to earn way more experience and knowledge!!&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ask-other-people-for-help"&gt;
  &lt;/a&gt;
  Ask other people for help!
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a8-_M7y9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k4ta630vuu5wly1zbbje.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a8-_M7y9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k4ta630vuu5wly1zbbje.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#try-to-explain-you-your-code-to-other-people"&gt;
  &lt;/a&gt;
  Try to explain you your code to other people!
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lFyEyCsd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ht96splw1otiw0ohb0q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lFyEyCsd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ht96splw1otiw0ohb0q.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#do-a-code-review-and-make-your-project-more-efficient"&gt;
  &lt;/a&gt;
  Do a code review and make your project more efficient!
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cCHPlU0Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ccthnmb07gv3py3cim44.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cCHPlU0Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ccthnmb07gv3py3cim44.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#join-coding-communities"&gt;
  &lt;/a&gt;
  Join coding communities!
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uaa1Dx85--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rui11m1jvox9404ddh8y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uaa1Dx85--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rui11m1jvox9404ddh8y.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#learn-more-algorithms-and-data-structures-for-better-projects"&gt;
  &lt;/a&gt;
  Learn more algorithms and data structures for better projects!
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--raRqQt9r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fhvi173ixlk203scjj1y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--raRqQt9r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fhvi173ixlk203scjj1y.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#write-your-own-projects"&gt;
  &lt;/a&gt;
  Write your own projects!
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--29SNuS8S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f8epnsl6f8nzaqmc093a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--29SNuS8S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f8epnsl6f8nzaqmc093a.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>algorithms</category>
      <category>programming</category>
      <category>help</category>
    </item>
    <item>
      <title>Learn to build secured Mobile Apps for Free</title>
      <author>Joshua Poddoku</author>
      <pubDate>Thu, 02 Sep 2021 12:32:37 +0000</pubDate>
      <link>https://dev.to/joshuapoddoku/learn-to-build-secured-mobile-apps-for-free-2bba</link>
      <guid>https://dev.to/joshuapoddoku/learn-to-build-secured-mobile-apps-for-free-2bba</guid>
      <description>&lt;h1&gt;
  &lt;a href="#about"&gt;
  &lt;/a&gt;
  🌟 About:
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;"14 Days of Mobile Security"&lt;/strong&gt; is a social learning and accountability program for mobile developers to build a security-centric culture and to achieve the goal of creating secure mobile apps.&lt;/p&gt;

&lt;p&gt;Not knowing or having any foundations on security development practice is one of the biggest mistakes new or young mobile developers make. They jump to working on their 'style' of development before even learning security practices and methods. To help you with this, we have created a practical roadmap, “14 days of Security,” based on a lot of research and the experience of mobile security developers working in big tech companies.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-do-you-get"&gt;
  &lt;/a&gt;
  🔑 What do you get?
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Learn the fundamentals of &lt;strong&gt;mobile security&lt;/strong&gt; from scratch.&lt;/li&gt;
&lt;li&gt;Start to learn security practices even if you have never picked a book on security.&lt;/li&gt;
&lt;li&gt;Master your mobile security foundations.&lt;/li&gt;
&lt;li&gt;Create and learn through open source tools and frameworks along with videos and text tutorials.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#how-do-you-start"&gt;
  &lt;/a&gt;
  🚀 How do you start?
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://bit.ly/14DaysMobSecForm"&gt;&lt;strong&gt;Register&lt;/strong&gt;&lt;/a&gt; to the free program&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Learn&lt;/strong&gt; mobile security 1 hr every day for the next 14 days&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Take up&lt;/strong&gt; a challenge every day of either reading an article, working on a security tool to audit your app, or use a security framework to encrypt your data-in-transit or data-in-storage.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Read&lt;/strong&gt; the Articles and Tutorials from the content repository in the next section, or you can follow any article or tutorial on Mobile Security.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Pick&lt;/strong&gt; a challenge from the Repo on completion of the day's activity&lt;/li&gt;
&lt;li&gt; **Share **a screenshot of the results of your tutorial, GitHub code, short post, etc. on completion&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#goodies"&gt;
  &lt;/a&gt;
  🎁 Goodies
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Free subscription&lt;/strong&gt; to premium courses on completion&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Receive&lt;/strong&gt; completion badge.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Top submissions&lt;/strong&gt; with more than 5 upvotes will get the top peer badge of the day or week.&lt;/li&gt;
&lt;li&gt;Any participant who received 14 challenge completion badges with 5 top peer badges can apply for 14 days of mobile security challenge completion certificate from the Aviyel Team.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Top submission of the Day&lt;/strong&gt; and Week will be showcased&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#roadmap-content"&gt;
  &lt;/a&gt;
  🎯 Roadmap Content
&lt;/h1&gt;

&lt;p&gt;To help you with this, we have created a practical roadmap, &lt;strong&gt;“14 days of Security”&lt;/strong&gt; based on a lot of research and the experience of mobile security developers working in big tech companies. This roadmap will give you a complete guideline to build a strong coding habit and to achieve your goal of creating a secure mobile app.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Video content&lt;/li&gt;
&lt;li&gt;Blogs&lt;/li&gt;
&lt;li&gt;Audio&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aviyel.com/post/401/roadmap-content"&gt;Click here&lt;/a&gt; to get the entire list of content.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#roadmap-content-themes"&gt;
  &lt;/a&gt;
  📑 Roadmap Content Themes
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aviyel.com/post/431/end-to-end-encryption"&gt;End to End Encryption&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aviyel.com/post/332/secure-code-review-checklist"&gt;Code Quality Checklist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aviyel.com/post/734/obfuscating"&gt;Obfuscating&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aviyel.com/post/735/encrypt-your-data"&gt;Encrypt your data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aviyel.com/post/739/certificate-transparent"&gt;Certificate Transparent&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  ⬇️
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;From today on, for the next 14 days, Tweet/Post on &lt;a href="https://aviyel.com"&gt;Aviyel&lt;/a&gt; your progress every day with the &lt;a href="https://twitter.com/search?q=%20%2314DaysOfSec&amp;amp;src=typed_query"&gt;#14DaysOfSec&lt;/a&gt; hashtag and the hashtag of the challenge you are taking.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#register-now"&gt;
  &lt;/a&gt;
  &lt;a href="https://bit.ly/14DaysMobSecForm"&gt;Register Now&lt;/a&gt; 📥
&lt;/h3&gt;

&lt;p&gt;Happy Hacking!&lt;/p&gt;

</description>
      <category>devops</category>
      <category>security</category>
      <category>devsecops</category>
      <category>challenge</category>
    </item>
    <item>
      <title>Return multiple values from a function in Python</title>
      <author>hrishikesh1990</author>
      <pubDate>Thu, 02 Sep 2021 12:08:19 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/return-multiple-values-from-a-function-in-python-2k60</link>
      <guid>https://dev.to/hrishikesh1990/return-multiple-values-from-a-function-in-python-2k60</guid>
      <description>&lt;p&gt;In this guide, we look at Python: Return multiple values from a function. We explain the various methods in detail and list their shortcomings. &lt;/p&gt;

&lt;p&gt;This tutorial is a part of our initiative at &lt;a href="https://flexiple.com/"&gt;Flexiple&lt;/a&gt;, to write short curated tutorials around often used or interesting concepts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-content-python-return-multiple-values"&gt;
  &lt;/a&gt;
  Table of Content - Python return multiple values:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#python-return-multiple-values"&gt;Python return multiple values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-commaseparated-values-tuples"&gt;Comma-separated values (Tuples)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-python-lists"&gt;Python List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-a-python-dictionary"&gt;Python Dictionary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-a-python-data-class"&gt;Using Python Data Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#limitations-and-caveats-python-return-multiple-values"&gt;Limitations and Caveats - Python return multiple values&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#python-return-multiple-values"&gt;
  &lt;/a&gt;
  Python Return Multiple Values:
&lt;/h2&gt;

&lt;p&gt;Functions are used to perform a specific task which most likely involves returning a particular value. However, a few use-cases may require you to return two or more values. In other programming languages, the code to achieve this might be quite complex but Python provides a few handy methods to return multiple values. &lt;/p&gt;

&lt;p&gt;Most of these methods involve using a collection data type to return these values. We have taken a close look at all of them below.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-commaseparated-values-tuples"&gt;
  &lt;/a&gt;
  Using Comma-separated values (Tuples):
&lt;/h2&gt;

&lt;p&gt;In this method, we use Python to return multiple values by simply separating them by commas. Python basically uses a tuple to achieve this. &lt;/p&gt;

&lt;p&gt;The code to achieve this is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#Returning Multiple Values using Tuples
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;multiple&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;operation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Sum"&lt;/span&gt; 
    &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;multiple&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Output = Sum 15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A common confusion here is that the syntax of tuple requires a pair of brackets (). Although this is true, Python does not always require brackets to identify a tuple. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-python-lists"&gt;
  &lt;/a&gt;
  Using Python Lists:
&lt;/h2&gt;

&lt;p&gt;Similar to the previous methods, lists can also be used to return multiple values, too. In case you are not familiar with lists, they are a collection of items. They are quite similar to arrays however they can be used to store values of various data types. &lt;/p&gt;

&lt;p&gt;Since they are a collection of items we could add values to the list and return the list. &lt;/p&gt;

&lt;p&gt;The code to return multiple values using list:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#Returning Multiple Values using List
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;multiple&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;operation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Sum"&lt;/span&gt; 
    &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;multiple&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Output = ["Sum", 15]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this method, you would have to use the index of the list to use the values individually. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-a-python-dictionary"&gt;
  &lt;/a&gt;
  Using a Python Dictionary:
&lt;/h2&gt;

&lt;p&gt;In the previous method, accessing a particular value would be a hassle. However, this would not be a problem while using dictionaries to return multiple values. This is because we could use relevant key names and they could be accessed easily. &lt;/p&gt;

&lt;p&gt;The code to do so is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#Returning Multiple Values using Dictionary
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;multiple&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'operation'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Sum"&lt;/span&gt; 
    &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'total'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;multiple&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Output = {'operation': 'Sum', 'total': 15}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this method, the returned values can easily be accessed within their keys. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-a-python-data-class"&gt;
  &lt;/a&gt;
  Using a Python Data Class:
&lt;/h2&gt;

&lt;p&gt;In this method, we use Data Classes to return multiple values. Data classes are a method of adding specific methods to a user-defined class. This method was introduced in Python version 3.7. &lt;/p&gt;

&lt;p&gt;The code to do so is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#Returning Multiple Values using Data Classes
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dataclasses&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;dataclass&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;dataclass&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;multiplevalues&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;
    &lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num2&lt;/span&gt;   

&lt;span class="c1"&gt;#passing arguments into the Data Class 
&lt;/span&gt;&lt;span class="n"&gt;all_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;multiplevalues&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Addition"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;all_values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;all_values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Output
#15
#multiplevalues(operation='Addition', num1=5, num2=10)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#limitations-and-caveats-python-return-multiple-values"&gt;
  &lt;/a&gt;
  Limitations and Caveats - Python return multiple values
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The first two methods, although used extensively, must be used with caution as they do not have the proper names to identify the values and hence can often lead to errors.&lt;/li&gt;
&lt;li&gt;The only difference that list methods have over the tuple method is that lists are mutable. &lt;/li&gt;
&lt;li&gt;The dictionary method is used when you are returning multiple values and find it hard to keep track of their names. &lt;/li&gt;
&lt;li&gt;The Data Class methods can be a little complicated to understand at first, hence I would recommend practicing the other methods and later trying to understand this method. &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>EF Core 3.1: Peeking Into Generated SQL </title>
      <author>Timur Khadimullin</author>
      <pubDate>Thu, 02 Sep 2021 12:03:27 +0000</pubDate>
      <link>https://dev.to/timur_kh/ef-core-3-1-peeking-into-generated-sql-31di</link>
      <guid>https://dev.to/timur_kh/ef-core-3-1-peeking-into-generated-sql-31di</guid>
      <description>&lt;p&gt;Writing LINQ that produces optimal SQL can be even harder as developers often don’t have visibility into the process. It becomes even more confusing when the application is designed to run against different databases.&lt;/p&gt;

&lt;p&gt;We often find ourselves questioning whether this particular query will fall in line with our expectations. And until not so long ago our tool of choice was a SQL Profiler, that ships with SQL Server. It’s plenty powerful but has one flaw – it pretty much requires the SQL Server installation. This might be a deal breaker for some clients using other DBs, like Postgres or MySQL (which &lt;a href="https://docs.microsoft.com/en-us/ef/core/providers/?tabs=dotnet-core-cli"&gt;are all supported&lt;/a&gt; by the way).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ef-to-the-resque"&gt;
  &lt;/a&gt;
  EF to the resque
&lt;/h2&gt;

&lt;p&gt;Instead of firing off the profiler and fishing out the batches, we could have Entity Framework itself pass us the result. After all, it needs to build SQL before sending it off the the database, so all we have to do it to ask nicely. Stack Overflow is &lt;a href="https://stackoverflow.com/questions/37527783/get-sql-code-from-an-entity-framework-core-iqueryablet"&gt;quite helpful here&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;IQueryableExtensions&lt;/span&gt; &lt;span class="c1"&gt;// this is the EF Core 3.1 version.&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;ToSql&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;TEntity&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="n"&gt;IQueryable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;TEntity&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;TEntity&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt;
        &lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;var&lt;/span&gt; &lt;span class="n"&gt;enumerator&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Provider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Execute&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IEnumerable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;TEntity&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;GetEnumerator&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;relationalCommandCache&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;enumerator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Private&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"_relationalCommandCache"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;selectExpression&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;relationalCommandCache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Private&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;SelectExpression&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="s"&gt;"_selectExpression"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;factory&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;relationalCommandCache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Private&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IQuerySqlGeneratorFactory&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="s"&gt;"_querySqlGeneratorFactory"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;sqlGenerator&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sqlGenerator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetCommand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;selectExpression&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;sql&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CommandText&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;object&lt;/span&gt; &lt;span class="nf"&gt;Private&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="kt"&gt;object&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;privateField&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;GetType&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;GetField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;privateField&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BindingFlags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Instance&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;BindingFlags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NonPublic&lt;/span&gt;&lt;span class="p"&gt;)?.&lt;/span&gt;&lt;span class="nf"&gt;GetValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;Private&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="kt"&gt;object&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;privateField&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;GetType&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;GetField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;privateField&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BindingFlags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Instance&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;BindingFlags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NonPublic&lt;/span&gt;&lt;span class="p"&gt;)?.&lt;/span&gt;&lt;span class="nf"&gt;GetValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-usage-is-simple"&gt;
  &lt;/a&gt;
  The usage is simple
&lt;/h2&gt;

&lt;p&gt;Suppose we’ve got the following inputs: One simple table, that we’d like to group by one field and total by another. Database Context is also pretty much boilerplate. One thing to note here is a couple of database providers we are going to try the query against.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SomeTable&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;Foobar&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;Quantity&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyDbContext&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DbContext&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;DbSet&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;SomeTable&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;SomeTables&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;LoggerFactory&lt;/span&gt; &lt;span class="n"&gt;DbCommandConsoleLoggerFactory&lt;/span&gt;
        &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;LoggerFactory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;ConsoleLoggerProvider&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class="n"&gt;category&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="n"&gt;DbLoggerCategory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Command&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
            &lt;span class="n"&gt;level&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="n"&gt;LogLevel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Trace&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;OnConfiguring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DbContextOptionsBuilder&lt;/span&gt; &lt;span class="n"&gt;optionsBuilder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//run with SQL Server provider to get T-SQL&lt;/span&gt;
        &lt;span class="n"&gt;optionsBuilder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UseNpgsql&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Server=localhost;Port=5432;Database=test;User Id=;Password=;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;//alternatively use other supported provider&lt;/span&gt;
        &lt;span class="c1"&gt;//optionsBuilder.UseSqlServer("Server=.\\SQLEXPRESS;Database=test;Trusted_Connection=true")&lt;/span&gt;
        &lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;OnConfiguring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;optionsBuilder&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The test bench would look something like so&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Program&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;MyDbContext&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;someTableData&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SomeTables&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GroupBy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Foobar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;Foobar&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Quantity&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Quantity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;OrderByDescending&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Quantity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Take&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// we've built our query as per normal&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToSql&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// this is the magic&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;someTableData&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ReadKey&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And depending on our choice of provider the output would show ef core generated sql for SQL Server and Postgres&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;        &lt;span class="c1"&gt;-- MSSQL&lt;/span&gt;
        &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;TOP&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;__p_0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;].[&lt;/span&gt;&lt;span class="n"&gt;Foobar&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="k"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;].[&lt;/span&gt;&lt;span class="n"&gt;Quantity&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Quantity&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;SomeTables&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;GROUP&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;].[&lt;/span&gt;&lt;span class="n"&gt;Foobar&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="k"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;].[&lt;/span&gt;&lt;span class="n"&gt;Quantity&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;

        &lt;span class="c1"&gt;-- PG SQL&lt;/span&gt;
         &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;"Foobar"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;"Quantity"&lt;/span&gt;&lt;span class="p"&gt;)::&lt;/span&gt;&lt;span class="nb"&gt;INT&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="nv"&gt;"Quantity"&lt;/span&gt;
        &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="nv"&gt;"SomeTables"&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;
        &lt;span class="k"&gt;GROUP&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;"Foobar"&lt;/span&gt;
        &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="k"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;"Quantity"&lt;/span&gt;&lt;span class="p"&gt;)::&lt;/span&gt;&lt;span class="nb"&gt;INT&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;
        &lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;__p_0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>csharp</category>
      <category>efcore</category>
      <category>database</category>
    </item>
    <item>
      <title>A Fun Programming Joke To Start Your Day</title>
      <author>Daily Developer Jokes</author>
      <pubDate>Thu, 02 Sep 2021 12:00:19 +0000</pubDate>
      <link>https://dev.to/dailydeveloperjokes/a-fun-programming-joke-to-start-your-day-b30</link>
      <guid>https://dev.to/dailydeveloperjokes/a-fun-programming-joke-to-start-your-day-b30</guid>
      <description>&lt;p&gt;Hi there! Here's today's Daily Developer Joke. We hope you enjoy it; it's a good one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VNGYlRCr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://private.xtrp.io/projects/DailyDeveloperJokes/public_image_server/images/5e1259a922f36.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VNGYlRCr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://private.xtrp.io/projects/DailyDeveloperJokes/public_image_server/images/5e1259a922f36.png" alt="Joke Image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;For more jokes, and to submit your own joke to get featured, check out the &lt;a href="https://dailydeveloperjokes.github.io/"&gt;Daily Developer Jokes Website&lt;/a&gt;. We're also open sourced, so feel free to view &lt;a href="https://github.com/dailydeveloperjokes"&gt;our GitHub Profile&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#leave-this-post-a-if-you-liked-todays-joke-and-stay-tuned-for-tomorrows-joke-too"&gt;
  &lt;/a&gt;
  Leave this post a ❤️ if you liked today's joke, and stay tuned for tomorrow's joke too!
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;This joke comes from &lt;a href="https://github.com/wesbos/dad-jokes"&gt;Dad-Jokes GitHub Repo by Wes Bos&lt;/a&gt; (thank you!), whose owner has given me permission to use this joke with credit.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>jokes</category>
      <category>dailydeveloperjokes</category>
    </item>
    <item>
      <title>⚡ Must read Tech news/tools of the day - Digest #1</title>
      <author>Hackertab 🖥️</author>
      <pubDate>Thu, 02 Sep 2021 12:00:04 +0000</pubDate>
      <link>https://dev.to/hackertab/must-read-tech-news-tools-of-the-day-digest-1-3dbj</link>
      <guid>https://dev.to/hackertab/must-read-tech-news-tools-of-the-day-digest-1-3dbj</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DJyfm8Xt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/kVzXltq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DJyfm8Xt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/kVzXltq.png" alt="articleImg"&gt;&lt;/a&gt;&lt;br&gt;
Each day we handpick the best web content across different websites eg: Hackernews, Github, Reddit... to help you stay updated with the hottest trends!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#level-up-your-skills-with-these-github-repositories"&gt;
  &lt;/a&gt;
  Level up your 🚀 skills with these Github repositories:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bHVT2yX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://www.prodapt.com/wp-content/uploads/github.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bHVT2yX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://www.prodapt.com/wp-content/uploads/github.png" alt="Github"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#jina"&gt;
  &lt;/a&gt;
  📙 &lt;a href="https://github.com/jina-ai/jina"&gt;jina&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;👤 jina-ai | ⭐ +9,734 stars&lt;br&gt;
Cloud-native neural search framework for 𝙖𝙣𝙮 kind of data&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cplusplus"&gt;
  &lt;/a&gt;
  📙 &lt;a href="https://github.com/TheAlgorithms/C-Plus-Plus"&gt;C-Plus-Plus&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;👤 TheAlgorithms | ⭐ +14,495 stars&lt;br&gt;
Collection of various algorithms in mathematics, machine learning, computer science and physics implemented in C++ for educational purposes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#netbox"&gt;
  &lt;/a&gt;
  📙 &lt;a href="https://github.com/netbox-community/netbox"&gt;netbox&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;👤 netbox-community | ⭐ +8,659 stars&lt;br&gt;
Infrastructure resource modeling for network automation. Open source under Apache 2. Public demo: &lt;a href="https://demo.netbox.dev"&gt;https://demo.netbox.dev&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#hottest-devto-posts-"&gt;
  &lt;/a&gt;
  🎉 🔥 Hottest Devto posts :
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#i-joined-postman-focusing-on-open-source"&gt;
  &lt;/a&gt;
  📝 &lt;a href="https://dev.to/alejandra_quetzalli/i-m-joining-postman-focusing-on-open-source-2986"&gt;I joined Postman, focusing on Open Source 👩🏼‍🚀&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;👤 Alejandra Quetzalli 🐾 | 👍 +30 reactions&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GZCCZcbE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--_gdctejW--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kwcenbcqsi32ti6658uf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GZCCZcbE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--_gdctejW--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kwcenbcqsi32ti6658uf.png" alt=""&gt;&lt;/a&gt;Well… the unexpected happened!    I joined Postman to focus on Open Source technologies.   (I've been...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#do-i-need-math-to-be-a-good-developer"&gt;
  &lt;/a&gt;
  📝 &lt;a href="https://dev.to/codesphere/do-i-need-math-to-be-a-good-developer-ila"&gt;Do I need math to be a good developer?&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;👤 Saji Wang | 👍 +31 reactions&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ojZqPtN4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--eKi2pqOc--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9u2zha8x0lfl19e9fw78.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ojZqPtN4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--eKi2pqOc--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9u2zha8x0lfl19e9fw78.png" alt=""&gt;&lt;/a&gt;Written by Dan Parry at Codesphere  There seems to be a common perception that math and coding are...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-shiba-inu-loading-and-error-svgs-to-my-react-site"&gt;
  &lt;/a&gt;
  📝 &lt;a href="https://dev.to/abbeyperini/adding-shiba-inu-loading-and-error-svgs-to-my-react-site-lnj"&gt;Adding Shiba Inu Loading and Error SVGs to My React Site&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;👤 Abbey Perini | 👍 +21 reactions&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NBHYmwnS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--yCpsCRzy--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j1pxygzt4l1teaspmhck.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NBHYmwnS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--yCpsCRzy--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j1pxygzt4l1teaspmhck.png" alt=""&gt;&lt;/a&gt;When I updated the blog section of my portfolio site, I realized I had a great opportunity to draw...&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#keep-an-eye-on-these-cool-products-too"&gt;
  &lt;/a&gt;
  👀 Keep an eye on these cool products too:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#ecommerce-checklist"&gt;
  &lt;/a&gt;
  🔧 &lt;a href="https://www.producthunt.com/posts/e-commerce-checklist-2?utm_campaign=producthunt-api&amp;amp;utm_medium=api-v2&amp;amp;utm_source=Application%3A+Hackertab+%28ID%3A+42881%29"&gt;E-Commerce Checklist&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;🔺 +158 | 💬 +82 &lt;br&gt;
200+ tools to launch &amp;amp; grow your online store in Notion&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DbnA3Bny--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ph-files.imgix.net/0519781b-c93f-4f2a-8c94-2354b99fe354.png%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DbnA3Bny--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ph-files.imgix.net/0519781b-c93f-4f2a-8c94-2354b99fe354.png%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" alt="E-Commerce Checklist"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#earnify"&gt;
  &lt;/a&gt;
  🔧 &lt;a href="https://www.producthunt.com/posts/earnify?utm_campaign=producthunt-api&amp;amp;utm_medium=api-v2&amp;amp;utm_source=Application%3A+Hackertab+%28ID%3A+42881%29"&gt;Earnify&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;🔺 +84 | 💬 +14 &lt;br&gt;
Keep sales teams happy &amp;amp; accountable with engaging contests&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Die2w3DU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ph-files.imgix.net/26057db2-661c-47f4-8609-a05bf85ed184.png%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Die2w3DU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ph-files.imgix.net/26057db2-661c-47f4-8609-a05bf85ed184.png%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" alt="Earnify"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#jaadoo"&gt;
  &lt;/a&gt;
  🔧 &lt;a href="https://www.producthunt.com/posts/jaadoo?utm_campaign=producthunt-api&amp;amp;utm_medium=api-v2&amp;amp;utm_source=Application%3A+Hackertab+%28ID%3A+42881%29"&gt;Jaadoo&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;🔺 +46 | 💬 +12 &lt;br&gt;
Search and manage your mobile screenshots, magically&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QeBL_EAt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://ph-files.imgix.net/61c6cb34-6666-4cbb-b25f-07260ab207a9.gif%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QeBL_EAt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://ph-files.imgix.net/61c6cb34-6666-4cbb-b25f-07260ab207a9.gif%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" alt="Jaadoo"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;🙌 Wrap Up!&lt;br&gt;
That was all for this week.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#follow-hackertab-on-twitter-for-more-tips-hackertabdev"&gt;
  &lt;/a&gt;
  Follow Hackertab on Twitter for more tips: @hackertabdev
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L6HrjVwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/sYGs3ep.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L6HrjVwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/sYGs3ep.png" alt="Hackertab"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://hackertab.dev"&gt;Hackertab&lt;/a&gt; turns your New Tab page into a geeky one that keeps you as a developer updated with the best tools, news, jobs and events.&lt;/p&gt;

</description>
      <category>dev</category>
      <category>github</category>
      <category>producthunt</category>
      <category>hackertab</category>
    </item>
    <item>
      <title>Sveltey: Cli for Svelte-Kit</title>
      <author>Lalit Yalamanchili</author>
      <pubDate>Thu, 02 Sep 2021 11:50:37 +0000</pubDate>
      <link>https://dev.to/lalit64/sveltey-cli-for-svelte-kit-4h75</link>
      <guid>https://dev.to/lalit64/sveltey-cli-for-svelte-kit-4h75</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;Hello, Dev Community. This is my first post, so I hope I am doing this right. This is me.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__user ltag__user__id__592673"&gt;
  
    .ltag__user__id__592673 .follow-action-button {
      background-color: #fefefe !important;
      color: #212121 !important;
      border-color: #fefefe !important;
    }
  
    &lt;a href="/lalit64" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0XRTnSSt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--1GL318Sn--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/592673/3fb82a28-2a06-4b5b-955c-63bc2558b8cc.gif" alt="lalit64 image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/lalit64"&gt;Lalit Yalamanchili&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/lalit64"&gt;Hi, I am Lalit. I am 11 years old and I am Learning JavaScript on an intermediate level!&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
 

&lt;h3&gt;
  &lt;a href="#what-is-svelte"&gt;
  &lt;/a&gt;
  What is Svelte?
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Taken from &lt;a href="https://svelte.dev/"&gt;https://svelte.dev/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Svelte is a radical new approach to building user interfaces. Whereas traditional frameworks like React and Vue do the bulk of their work in the browser, Svelte shifts that work into a compile step that happens when you build your app.&lt;/p&gt;

&lt;p&gt;Instead of using techniques like virtual DOM diffing, Svelte writes code that surgically updates the DOM when the state of your app changes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-sveltekit"&gt;
  &lt;/a&gt;
  What is Svelte-Kit?
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Taken from &lt;a href="https://kit.svelte.dev/"&gt;https://kit.svelte.dev/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;SvelteKit is a framework for building web applications of all sizes, with a beautiful development experience and flexible filesystem-based routing.&lt;/p&gt;

&lt;p&gt;Unlike single-page apps, SvelteKit doesn't compromise on SEO, progressive enhancement or the initial load experience — but unlike traditional server-rendered apps, navigation is instantaneous for that app-like feel.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-sveltey"&gt;
  &lt;/a&gt;
  What is Sveltey
&lt;/h3&gt;

&lt;p&gt;Sveltey is a Cli I made for Svelte-Kit because I found having a cli is much easier than doing everything yourself.&lt;/p&gt;

&lt;p&gt;Sveltey uses the "svelte@next" command line tool to infer the &lt;code&gt;create&lt;/code&gt; command&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;new&lt;/code&gt; command is to create new component in the &lt;br&gt;
&lt;code&gt;./src/components&lt;/code&gt; folder.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Thanks for reading my post. If you want info or want to use my cli. Go to &lt;a href="https://github.com/Lalit64/sveltey"&gt;https://github.com/Lalit64/sveltey&lt;/a&gt; or &lt;a href="https://www.npmjs.com/package/@lalit64/sveltey"&gt;https://www.npmjs.com/package/@lalit64/sveltey&lt;/a&gt;&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>cli</category>
      <category>opensource</category>
    </item>
    <item>
      <title>10 Ways to optimise your Database queries</title>
      <author>Ktnl</author>
      <pubDate>Thu, 02 Sep 2021 11:39:08 +0000</pubDate>
      <link>https://dev.to/ktnl/10-ways-to-optimise-your-database-queries-5351</link>
      <guid>https://dev.to/ktnl/10-ways-to-optimise-your-database-queries-5351</guid>
      <description>&lt;p&gt;One of the common things most programmers do is writing database queries. The minimum expectation is to get the expected results from the written query. Say, you write a query and expect it to run only once or to work in a small dataset alone. In these cases, it doesn't matter whether the query is efficient or not. &lt;/p&gt;

&lt;p&gt;But.. but when you hit cases where your query is expected to run many times for fetching live data for a website or arriving at analytics out of your company’s huge data set. Here your queries impact your time and cost. Writing them in an optimised fashion is the way to go.&lt;br&gt;
Most database engines have a query optimiser that interprets or executes your query in the most effective way possible. But there are several strategies that can yield better results in many cases.&lt;/p&gt;

&lt;p&gt;I would like to share ten ways for writing optimised queries. In this blog, I have used Postgres queries as examples.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Ask for what you need&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Following this not only helps in leading a peaceful life, but also in building faster queries :)  &lt;/p&gt;

&lt;p&gt;Most of the time it is tempting to start queries with “SELECT * FROM”. It can be convenient because you don't need to think about which columns you need. But convenience comes with a cost. The cost here is the amount of data your query will process.&lt;/p&gt;

&lt;p&gt;Instead of&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT * FROM PAYMENT 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT AMOUNT,
    PAYMENT_DATE
FROM PAYMENT; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will load only these two columns. On the other hand, * will process unnecessary data as well. So ask for what you need alone!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. WHERE Vs HAVING&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;WHERE and HAVING are used for specifying the conditions to fetch records. But using them interchangeably may cost you. &lt;code&gt;WHERE&lt;/code&gt; fetches the records satisfying the conditions but &lt;code&gt;HAVING&lt;/code&gt; fetches all the records and then applies the condition.&lt;/p&gt;

&lt;p&gt;Instead of&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT PAYMENT_DATE, COUNT(AMOUNT)
FROM PAYMENT
GROUP BY PAYMENT_DATE
HAVING PAYMENT_DATE &amp;gt;= '04-02-2007';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT PAYMENT_DATE, COUNT(AMOUNT)
FROM PAYMENT
WHERE PAYMENT_DATE &amp;gt;= '04-02-2007'
GROUP BY PAYMENT_DATE;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use HAVING only when you deal with aggregated results and you cannot use WHERE. Otherwise WHERE clause would be faster.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. You may know by a handful the whole sack&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you like to check, whether records matching your conditions exist in your system, you need not fetch all matching records instead just check for the sample record's existence.&lt;/p&gt;

&lt;p&gt;Instead of&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT * FROM PAYMENT WHERE PAYMENT_DATE &amp;gt;= '01-01-2021'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT EXISTS 
(SELECT 1 
FROM PAYMENT 
WHERE PAYMENT_DATE &amp;gt;= '01-01-2021');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;EXISTS halts when it hits the first matching record. Also it is not bothered on the data to be fetched to the result set. Hence SELECT 1 (as shown in the example) / 0 / NULL / {any_column} will work and will not affect the execution or result of the query.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. JOIN Vs Subqueries&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Subqueries may be easier to write/read but Joins are better optimised by the server. &lt;/p&gt;

&lt;p&gt;Instead of&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT P.AMOUNT, P.PAYMENT_DATE 
FROM PAYMENT P
WHERE PAYMENT_DATE &amp;gt;= '04-02-2007' 
AND P.CUSTOMER_ID
IN 
(SELECT C.CUSTOMER_ID 
FROM CUSTOMER C 
WHERE C.LAST_NAME = 'SOTO');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT P.AMOUNT, P.PAYMENT_DATE FROM PAYMENT P
JOIN CUSTOMER C
ON P.CUSTOMER_ID = C.CUSTOMER_ID
WHERE PAYMENT_DATE &amp;gt;= '04-02-2007' AND C.LAST_NAME = 'SOTO';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Most of the data engines evaluate subquery as separate queries. The internal queries are first ran and then from the result set of all, the actual results are derived. On the other hand Join produces the result in one go.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. EXISTS Vs DISTINCT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;While retrieving DISTINCT records using Join queries, using EXISTS would be more performant.&lt;/p&gt;

&lt;p&gt;Instead of&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT DISTINCT C.FIRST_NAME
FROM CUSTOMER C
JOIN PAYMENT P ON P.CUSTOMER_ID = C.CUSTOMER_ID
WHERE AMOUNT = 4.99;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT C.FIRST_NAME FROM CUSTOMER C
WHERE EXISTS (SELECT 1 FROM PAYMENT P
              WHERE P.CUSTOMER_ID = C.CUSTOMER_ID
              AND AMOUNT = 4.99);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The duplicate rows are suppressed using DISTINCT. Similarly EXISTS checks for the existence of rows returned by a subquery and the first occurrence is only considered. DISTINCT sorts the retrieved rows before suppressing the duplicate rows. This sort operation is pretty expensive and can be avoided using EXISTS in this case. Hence EXISTS is preferred over DISTINCT.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6.UNION vs UNION ALL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are not worried about duplicate records, go for UNION ALL instead of UNION!&lt;/p&gt;

&lt;p&gt;Instead of&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT  FIRST_NAME, LAST_NAME, 'ACTOR' AS ROLE  FROM ACTOR
UNION
SELECT FIRST_NAME, LAST_NAME, 'CUSTOMER' AS ROLE FROM CUSTOMER;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT FIRST_NAME, LAST_NAME, 'ACTOR' AS ROLE FROM ACTOR
UNION ALL
SELECT FIRST_NAME, LAST_NAME, 'CUSTOMER' AS ROLE FROM CUSTOMER;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;UNION ALL  performs better than UNION because by using UNION ALL we are avoiding an expensive sort operation. The Sort is done by the DISTINCT operation which is triggered internally by UNION.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7.Indexes to retrieve records on demand&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Indexes are very useful if you want to retrieve records frequently. If you are looking for a small number of rows having vast column information to be retrieved frequently, then Indexes will make your job faster!&lt;/p&gt;

&lt;p&gt;Say, If you need to retrieve the list of films using titles frequently.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT * 
FROM FILM 
WHERE TITLE LIKE '{any_film_prefix}%';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;will always make a sequential scan which takes time. So if you create an index on the hot field ‘title’,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;CREATE AN INDEX ON FILM(TITLE);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The same query will be much faster. &lt;/p&gt;

&lt;p&gt;The query planner will be using an Index scan instead of a sequential scan. You can create indexes on multiple columns as well.&lt;/p&gt;

&lt;p&gt;Note: You can check if the query planner is using Index scan or sequential scan by prefixing explain analyse to your query.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;EXPLAIN ANALYSE SELECT * FROM FILM WHERE TITLE LIKE 'Bird%';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--owsa9YUs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wrjac8wv3fqepe0nq35b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--owsa9YUs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wrjac8wv3fqepe0nq35b.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Few points to keep in mind before going for Indexes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Index scan happens when the retrieved row count is not huge, if it is so, most of the query planners will compare Indexed and sequential scan and go for the latter.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT *
FROM FILM
WHERE TITLE LIKE '%b%';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As it makes more sense to navigate sequentially the huge recordset rather than making the index scan for these many records and then retrieving the records.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Index scan will not work with SQL functions applied on indexed keys.
Even though the below query will perform an Index scan,
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT *
FROM FILM
WHERE FILM_ID BETWEEN 20 AND 30;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While the below query will perform a sequential scan because of mod function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT *
FROM FILM
WHERE MOD(FILM_ID,2) = 0;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;The index comes with the cost. Faster retrieval comes with space costs for storing indexes and maintenance costs for keeping the indexes updated.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;8. Use CROSS JOIN - iff needed&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This Join results in cartesian product which may not be needed itself. Say you are cross joining film and actor.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT FILM.NAME, ACTOR.*
FROM FILM, ACTOR
WHERE ACTOR.ACTOR_ID = FILM.ACTOR_ID;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If there are 100 records in the film and actor table each, it would first form 10,000 records (for 1 film record all 100 actor records will be present), and then it filters records having matching actor_id. This will be expensive for huge record sets. &lt;/p&gt;

&lt;p&gt;Instead of&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT FILM.NAME, ACTOR.*
FROM FILM
CROSS JOIN ACTOR
WHERE ACTOR.ACTOR_ID = FILM.ACTOR_ID;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT FILM.NAME, ACTOR.*
FROM FILM
INNER JOIN ACTOR
WHERE ACTOR.ACTOR_ID = FILM.ACTOR_ID;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will form only the required 100 records in one go.&lt;br&gt;
Note: Cross join and ‘,’ can be used for getting the cartesian product result set.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. Materialized views&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are using views with more joins or complex select values and the underlying data of the view is less frequently modified, then using Materialized view will improve your retrieval performance.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;CREATE MATERIALIZED VIEW AVAILABLE_FILMS AS
SELECT ARRAY_AGG(F.TITLE) AS FILMS,
    C.NAME AS CATEGORY,
    COUNT(F.TITLE) AS NUMBER_OF_FILMS
FROM FILM F
INNER JOIN FILM_CATEGORY FC ON F.FILM_ID = FC.FILM_ID
INNER JOIN CATEGORY C ON FC.CATEGORY_ID = C.CATEGORY_ID
GROUP BY CATEGORY
HAVING COUNT(F.TITLE) &amp;gt; 15
ORDER BY COUNT(F.TITLE) DESC;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When a materialized view is referenced in a query, the data is returned directly from the materialized view, like from a single table. Hence no overhead of joins or select happens every time the data is retrieved.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT *
FROM AVAILABLE_FILMS;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The cost here is maintaining/refreshing the materialized view with updated table values. Materialized views can be updated on a regular basis either through triggers or commit changes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;REFRESH MATERIALIZED VIEW AVAILABLE_FILMS;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;10. Avoid OR conditions on frequently used queries&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Say you are interested in getting customers whose first name starts with {given_input} or email address starts with {given_input} and has ‘.org’ suffix. &lt;br&gt;
For example the given input is Kim&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT FIRST_NAME,
    LAST_NAME,
    EMAIL
FROM CUSTOMER
WHERE FIRST_NAME LIKE 'Kim%'
AND EMAIL Like 'Kim%.org';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also this query frequently runs. So you would intend to create an index on both columns.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;CREATE INDEX ON CUSTOMER(FIRST_NAME, EMAIL);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But this will not work, the query planner will still use sequential scan because the condition here is &lt;code&gt;OR - condition on first_name OR condition on email&lt;/code&gt;.&lt;br&gt;
In this case, creating separate indexes for separate columns alone would not help. A better performance approach will be splitting the queries and running them with union along with separate indexes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;CREATE INDEX ON CUSTOMER(EMAIL);

CREATE INDEX ON CUSTOMER(FIRST_NAME);

SELECT FIRST_NAME,
    LAST_NAME,
    EMAIL
FROM CUSTOMER
WHERE EMAIL LIKE 'kim%.org'
UNION
SELECT FIRST_NAME,
    LAST_NAME,
    EMAIL
FROM CUSTOMER
WHERE FIRST_NAME LIKE 'Kim%';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Going by this way, we can accommodate another column to be added in the where clause as well. As mentioned if you don’t mind duplicate records, replace UNION with UNION ALL which is more performant.&lt;/p&gt;

&lt;p&gt;That's it for now! Next time when you get to write SQL queries give these tips a thought, think about your use cases and choose the wiser approach. &lt;/p&gt;

&lt;p&gt;Happy learning!&lt;/p&gt;

</description>
      <category>sql</category>
      <category>postgres</category>
      <category>database</category>
    </item>
  </channel>
</rss>
