<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Premium SEO tools free for new users</title>
      <author>GoOnlineTools</author>
      <pubDate>Wed, 12 May 2021 08:54:19 +0000</pubDate>
      <link>https://dev.to/goonlinetools/premium-seo-tools-free-for-new-users-1h82</link>
      <guid>https://dev.to/goonlinetools/premium-seo-tools-free-for-new-users-1h82</guid>
      <description>&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;I am back with a new tool that might be suitable for you if you have a blog or website.&lt;/p&gt;

&lt;p&gt;Today in this article I will introduce &lt;a href="https://www.semrush.com/lp/sem/en/?ref=4981303442&amp;amp;utm_campaign=aio_%20campaign&amp;amp;utm_source=berush&amp;amp;utm_medium=promo&amp;amp;utm_term=23"&gt;Semrush&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is Semrush?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Semrush is an all-in-one tool suite for improving online visibility and discovering marketing insights. Our tools and reports are able to help marketers that work in the following services: SEO, PPC, SMM, Keyword Research, Competitive Research, PR, Content Marketing, Marketing Insights, Campaign Management.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Semrush is a premium tool but after following this article you will get pro access for free&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QD6ORqLh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4sekr4j710bo53dsdmtg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QD6ORqLh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4sekr4j710bo53dsdmtg.jpg" alt="Semrush"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#here-is-how-to-get-semrush-pro-for-free"&gt;
  &lt;/a&gt;
  Here is How to get Semrush Pro for free?
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Go to Semrush offer page &lt;a href="https://www.semrush.com/lp/sem/en/?ref=4981303442&amp;amp;utm_campaign=aio_%20campaign&amp;amp;utm_source=berush&amp;amp;utm_medium=promo&amp;amp;utm_term=23"&gt;from here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Click on start your free trial button&lt;/li&gt;
&lt;li&gt;Now create your account&lt;/li&gt;
&lt;li&gt;Choose a Trial plan and then click on the get free trial button.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That's it :)&lt;/p&gt;

&lt;p&gt;Enjoy &lt;/p&gt;

</description>
      <category>offers</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Upload Existing Django Sqlite database to heroku.</title>
      <author>Quack coding</author>
      <pubDate>Wed, 12 May 2021 08:46:46 +0000</pubDate>
      <link>https://dev.to/aidenellis/upload-existing-django-sqlite-database-to-heroku-1e4e</link>
      <guid>https://dev.to/aidenellis/upload-existing-django-sqlite-database-to-heroku-1e4e</guid>
      <description>&lt;p&gt;So, for a few days i've been struggling to upload my old database which was sqlite3 to heroku's Postgres database.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#now-here-comes-the-challanges"&gt;
  &lt;/a&gt;
  Now here comes the challanges:
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Convert old sqlite3 database to postgresql with all of &lt;br&gt;
 the existing data into it&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Upload that postgresql database to heroku&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This might look easy but it really takes too much time and effort to find the way to do it.And in this post i'm gonna help you out here, to the mooooon! ;)&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#1converting-database"&gt;
  &lt;/a&gt;
  1.Converting database
&lt;/h3&gt;

&lt;p&gt;To convert the database (sqlite3) to postgresql, first we &lt;br&gt;
need &lt;a href="https://www.postgresql.org/download/"&gt;Postgresql&lt;/a&gt; and &lt;a href="https://www.pgadmin.org/download/"&gt;PG Admin&lt;/a&gt; installed in our machine.Go and download and install these 2. &lt;br&gt;
&lt;code&gt;NOTE: While installing PG Admin it will ask you for a passwords, make sure to remember that password.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now we are going to create an empty Postgres Database.&lt;br&gt;
Head into PG Admin, Enter the password that when it ask's for.And follow these steps to create an empty database.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#11-click-on-raw-objects-endraw-in-the-top"&gt;
  &lt;/a&gt;
  1.1) Click on &lt;code&gt;Objects&lt;/code&gt; in the top.
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JNzX5KfS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upstorage.pythonanywhere.com/api/storage/file/its_sakib/Public/dev.to/posts/post_1/step_1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JNzX5KfS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upstorage.pythonanywhere.com/api/storage/file/its_sakib/Public/dev.to/posts/post_1/step_1.jpg" alt="alt text" title="step 1"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#12-then-click-on-raw-create-endraw-"&gt;
  &lt;/a&gt;
  1.2) Then click on &lt;code&gt;create&lt;/code&gt;.
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N33vkYwf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upstorage.pythonanywhere.com/api/storage/file/its_sakib/Public/dev.to/posts/post_1/step_2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N33vkYwf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upstorage.pythonanywhere.com/api/storage/file/its_sakib/Public/dev.to/posts/post_1/step_2.jpg" alt="alt text" title="step 2"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#13-now-we-gotta-create-a-group-namein-this-case-i-named-it-tutorial"&gt;
  &lt;/a&gt;
  1.3) Now we gotta create a group name.In this case i named it Tutorial
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T2iNBcBd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upstorage.pythonanywhere.com/api/storage/file/its_sakib/Public/dev.to/posts/post_1/step_3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T2iNBcBd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upstorage.pythonanywhere.com/api/storage/file/its_sakib/Public/dev.to/posts/post_1/step_3.jpg" alt="alt text" title="step 3"&gt;&lt;/a&gt;&lt;br&gt;
click on &lt;code&gt;save&lt;/code&gt;.Now in the left you can see out new group 'Tutorial'.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#14-now-lets-create-the-serverright-click-on-that-tutorail-groupthen-create-gt-server"&gt;
  &lt;/a&gt;
  1.4) Now let's create the server.Right click on that 'Tutorail' Group.Then Create &amp;gt; Server
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--493Q3mpV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upstorage.pythonanywhere.com/api/storage/file/its_sakib/Public/dev.to/posts/post_1/step_4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--493Q3mpV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upstorage.pythonanywhere.com/api/storage/file/its_sakib/Public/dev.to/posts/post_1/step_4.jpg" alt="alt text" title="step 4"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#15-fill-up-the-name-i-named-it-convertdb"&gt;
  &lt;/a&gt;
  1.5) Fill up the Name, I named it 'CONVERT_DB'
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cn6Two1q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upstorage.pythonanywhere.com/api/storage/file/its_sakib/Public/dev.to/posts/post_1/step_5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cn6Two1q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upstorage.pythonanywhere.com/api/storage/file/its_sakib/Public/dev.to/posts/post_1/step_5.jpg" alt="alt text" title="step 5"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#16-now-click-on-connection-and-fill-up-hostname-password"&gt;
  &lt;/a&gt;
  1.6) Now click on Connection and fill up 'hostname', 'password'
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2C0DJq7L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upstorage.pythonanywhere.com/api/storage/file/its_sakib/Public/dev.to/posts/post_1/step_6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2C0DJq7L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upstorage.pythonanywhere.com/api/storage/file/its_sakib/Public/dev.to/posts/post_1/step_6.jpg" alt="alt text" title="step 6"&gt;&lt;/a&gt;&lt;br&gt;
Here type &lt;code&gt;localhost&lt;/code&gt; in host name/address and in the password input type the password that you gave PG Admin while installing it.And Click SAVE.&lt;/p&gt;

&lt;p&gt;There You go we just created an empty server.&lt;/p&gt;



&lt;br&gt;
Now to transfer all of the sqlite3 data to our empty postgresql database.We first have to create a dumpfile from sqlite3
&lt;h4&gt;
  &lt;a href="#17-make-sure-that-you-have-set-the-sqlite3-database-in-your-settingspy"&gt;
  &lt;/a&gt;
  1.7) Make sure that you have set the sqlite3 database in your settings.py
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="n"&gt;DATABASES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;'default'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;'ENGINE'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'django.db.backends.sqlite3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;'NAME'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;BASE_DIR&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="s"&gt;'old_database_name.sqlite3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#18-create-datadumpjson-from-managepy"&gt;
  &lt;/a&gt;
  1.8) Create datadump.json from manage.py
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python3 manage.py dumpdata &amp;gt; datadump.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will create a datadump.json file.&lt;br&gt;
&lt;code&gt;Note: Sometime, this generates broken json file so you have to format it yourself if that json file shows any error.Even if you have print('') in settings.py it will add it to the json file.This is a bug so you have to deal with it.&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#19-now-we-are-going-to-change-the-database-to-the-postgresql-serverso-head-on-to-settingspy"&gt;
  &lt;/a&gt;
  1.9) Now we are going to change the DATABASE to the postgresql server.so head on to settings.py
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;DATABASES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;'default'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;'ENGINE'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'django.db.backends.postgresql'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;'NAME'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'CONVERT_DB'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# The Server name from 1.5
&lt;/span&gt;        &lt;span class="s"&gt;'USER'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'postgres'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# The username from 1.6
&lt;/span&gt;        &lt;span class="s"&gt;'PASSWORD'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'secretpassword'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# The password from installation
&lt;/span&gt;        &lt;span class="s"&gt;'HOST'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'localhost'&lt;/span&gt; &lt;span class="c1"&gt;# Host name/address from 1.6,
&lt;/span&gt;        &lt;span class="s"&gt;'PORT'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'5432'&lt;/span&gt; &lt;span class="c1"&gt;# Port from 1.6
&lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Set the information the the server information. from (1.6)&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#191-now-migrate-the-empty-database-with-runsyncdb"&gt;
  &lt;/a&gt;
  1.9.1) Now migrate the empty database with --run-syncdb.
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python3 manage.py migrate --run-syncdb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#192-go-to-shell-using-managepy"&gt;
  &lt;/a&gt;
  1.9.2) Go to shell using manage.py
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;python3&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#193-now-as-you-are-in-shell-type-these-commands"&gt;
  &lt;/a&gt;
  1.9.3) Now as you are in shell type these commands.
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.contenttypes.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ContentType&lt;/span&gt;
&lt;span class="n"&gt;ContentType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;all&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;quit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#194-finally-its-time-to-load-our-old-data-to-this-new-database"&gt;
  &lt;/a&gt;
  1.9.4) Finally! It's time to load our old data to this new database
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;python3&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;loaddata&lt;/span&gt; &lt;span class="n"&gt;datadump&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will load the data from our old database to the new database using the datadump.json file that we created from sqlite3.&lt;/p&gt;

&lt;p&gt;Auhhhh! What a relief.We converted the data but, we still got 1 more challange left which is Uploading our new database (with old data) in to heroku.Lets goooo (My cat is on my keyboard xD)&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#2uploading-the-postgres-database-in-heroku"&gt;
  &lt;/a&gt;
  2.Uploading the postgres database in heroku
&lt;/h3&gt;

&lt;p&gt;Now as you know that you can't upload file to Heroku through their website, You can upload with github but thats a worst way you can do it with risking your data.&lt;/p&gt;

&lt;p&gt;So we are going to upload the database through heroku CLI.Open Your command prompt and type (Make sure your PG Admin in running.)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pg_dump -Fc --no-acl --no-owner -h localhost -U USERNAME DATABASE_NAME &amp;gt; mydb.dump
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So the 'USERNAME' is the name from the database from (1.6).Defaultly it was set to postgres and i didn't chage it in my case, DATABASE_NAME is the database 'Server name' from (1.5) where i set it to 'CONVERT_DB'.&lt;br&gt;
So in my case the command will be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pg_dump -Fc --no-acl --no-owner -h localhost -U postgres CONVERT_DB &amp;gt; mydb.dump
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;This will ask for a passwords: which is the password from installation&lt;/code&gt;&lt;br&gt;
After you enter the password This will create a mydb.dump file.So if you've got through this far then congrats we are really close.And if you got any error just give a comment below.&lt;/p&gt;

&lt;p&gt;now that we have our mydb.dump file.We can upload it to heroku but to upload it we have to do it via some online file storage service.You have to store the 'mydb.dump' file to the cloud and make it public to it's accessible from anywhere.&lt;/p&gt;

&lt;p&gt;You can upload it to aws, or any other file server.But the link should be the direct download link, like if you paste it to the browser it will automatically start downloading. Now it could be overwelming and it's a bit hard since there's no easy way for free.If you got stuck here then just comment below i will try to help you out with the cloud storing easily. :)&lt;/p&gt;

&lt;p&gt;And now we have the dump_file_link we can upload it to heroku&lt;br&gt;
our imaginary dump_file_link is '&lt;a href="https://some_cloud_server/path/to/file.dump"&gt;https://some_cloud_server/path/to/file.dump&lt;/a&gt;'.&lt;/p&gt;

&lt;p&gt;Before we upload make sure you have heroku cli installed and are logged in.Make sure to delete the old database from heroku and create a new fresh database there.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#20-open-command-prompt-and-type"&gt;
  &lt;/a&gt;
  2.0) Open command prompt and type
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;heroku pg:backups:restore &amp;lt;'dump_file_link'&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will ask for you conformation and you have to enter your app name to confirm and KABOOM!!! You'r database is now updated.&lt;/p&gt;

&lt;p&gt;PS: I just started using heroku a few days ago and im still figuring out stuffs.If i weren't able to help then im sorry for that but i actually tried my best to solve it in a post an d you know its hard to solve overwelming problems in just a post.Anyway if you made it so far Congratulations!!!!!! Now i'll go and take a nap with my cat. see ya ;) Meow uwu&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Add a loader to your website</title>
      <author>Clément Gaudinière</author>
      <pubDate>Wed, 12 May 2021 08:35:28 +0000</pubDate>
      <link>https://dev.to/clementgaudiniere/add-a-loader-to-your-website-eag</link>
      <guid>https://dev.to/clementgaudiniere/add-a-loader-to-your-website-eag</guid>
      <description>&lt;p&gt;Hello, today we will learn how to add a loader to our website ! Loaders have been used for a long time, it has been proven that users are more patient when a loader is present on a website. That's why I propose to set up a loader that will disappear when the whole page is loaded.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#first-step"&gt;
  &lt;/a&gt;
  First step
&lt;/h3&gt;

&lt;p&gt;First we will set up our HTML :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; tag with the id &lt;code&gt;containerLoader&lt;/code&gt; will hold the loader (as the name suggests 😉).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;While the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; tag having the class &lt;code&gt;containerText&lt;/code&gt;, will allow to contain all the content of the page, both text and images&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"containerLoader"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"containerLoader"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"lds-ripple"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"containerText"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;I'm the title&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Your text here&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#second-step"&gt;
  &lt;/a&gt;
  Second step
&lt;/h3&gt;

&lt;p&gt;Now we set up our loader, with some CSS.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.lds-ripple&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.lds-ripple&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;lds-ripple&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt; &lt;span class="n"&gt;cubic-bezier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.lds-ripple&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-0.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;lds-ripple&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;36px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;36px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;72px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;72px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see the result of the loader animation below :&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/clement-gaudiniere/embed/jOBNVdw?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#third-step"&gt;
  &lt;/a&gt;
  Third step
&lt;/h3&gt;

&lt;p&gt;Now we will style our page :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="sx"&gt;url("https://fonts.googleapis.com/css2?family=Roboto&amp;amp;display=swap")&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#252525&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"Roboto"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;5%&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;5%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.containerText&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;900px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;90%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.containerText&lt;/span&gt; &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;justify&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.containerText&lt;/span&gt; &lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* The disappearing animation of the loader */&lt;/span&gt;
&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="nb"&gt;hide&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;from&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.hide&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hide&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;animation-iteration-count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* The loader container */&lt;/span&gt;
&lt;span class="nf"&gt;#containerLoader&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* This last piece of code is purely aesthetic and optional.  */&lt;/span&gt;
&lt;span class="nd"&gt;::-moz-selection&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.22&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nd"&gt;::selection&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.22&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#last-step"&gt;
  &lt;/a&gt;
  Last step
&lt;/h3&gt;

&lt;p&gt;Finally, we set up our javascript so that the loader disappears once the page is ready to be displayed.  Good point for some: we won't use jQuery.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onreadystatechange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readyState&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;complete&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;containerLoader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hide&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 

    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt; 
      &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;containerLoader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;none&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-result"&gt;
  &lt;/a&gt;
  The result
&lt;/h3&gt;

&lt;p&gt;You can see below the final result of our loader. If the animation is too fast, you can click on the "Rerun" button to restart the animation.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/clement-gaudiniere/embed/XWMbMWP?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I hope this tutorial will be useful to you, don't hesitate to use it on your website if you wish and to give me your opinion in comments. 👍&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Functional programming vs object oriented programming</title>
      <author>Godday Success (The Codess) </author>
      <pubDate>Wed, 12 May 2021 08:09:08 +0000</pubDate>
      <link>https://dev.to/thecodess/functional-programming-vs-object-oriented-programming-2he8</link>
      <guid>https://dev.to/thecodess/functional-programming-vs-object-oriented-programming-2he8</guid>
      <description>&lt;p&gt;Functional programming is the programming technique that accentuates the functional factors required for creating and implementing the programs. Simply put, Functional programming (FP) is the process of building software by composing pure functions.  Object-oriented programming is a programming paradigm based on the concept of "objects", which can contain data and code: data in the form of fields, and code, in the form of procedures. &lt;/p&gt;

&lt;p&gt;Functional programming:&lt;br&gt;
Functional programming is a declarative programming paradigm where programs are created by applying sequential functions rather than statements. Each function takes in an input value and returns a consistent output value without altering or being affected by the program state.&lt;br&gt;
Functional programming is gaining popularity due to its efficiency and scalability to solve modern problems. Functional programming supports programming languages like Lisp, Clojure, Wolfram, Erlang, Haskell, F#, R, and other prominent languages. Functional programming is great for data science work. &lt;/p&gt;

&lt;p&gt;Object-oriented programming:&lt;br&gt;
Object Oriented programming (OOP) is a programming paradigm that relies on the concept of classes and objects. It is used to structure a software program into simple, reusable pieces of code blueprints (usually called classes), which are used to create individual instances of objects. Object-oriented programming languages include JavaScript, C++, Java, and Python. Object-oriented programming is about creating objects that contain both data and functions. A class is an abstract blueprint used to create more specific, concrete objects. Classes define what attributes an instance of this type will have, like color, but not the value of those attributes for a specific object.Classes can also contain functions, called methods available only to objects of that type. These functions are defined within the class and perform some action helpful to that specific type of object.&lt;/p&gt;

&lt;p&gt;Functional programming vs Object oriented programming&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Functional programming emphasizes on evaluation of functions while object oriented programming is based on the concept of objects.&lt;/li&gt;
&lt;li&gt;Functional programming uses immutable data while object oriented programming uses the mutable data.&lt;/li&gt;
&lt;li&gt;Functional programming follows the declarative programming model while object oriented programming follows the imperative programming model.&lt;/li&gt;
&lt;li&gt;Functional programming supports parallel programming while object oriented programming does not.&lt;/li&gt;
&lt;li&gt;In functional programming, statements can be executed in any order. In OOP, statements are executed in a particular order.&lt;/li&gt;
&lt;li&gt;In functional programming, recursion is used for iterative data while in OOP, loops are used for iterative data.&lt;/li&gt;
&lt;li&gt;Variables and functions are the basic elements of functional programming. Objects and models are the basic elements of object oriented programming.&lt;/li&gt;
&lt;li&gt;Functional programming is used only when there are few things with more operations. Object-oriented programming is used when there are many things with few operations.&lt;/li&gt;
&lt;li&gt;In functional programming, a state does not exist. In object-oriented programming, the state exists.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In functional programming, a function is the primary manipulation unit. In object-oriented, an object is the primary manipulation unit.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Functional programming provides high performance in processing large data for applications. Object-oriented programming is not good for big data processing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Functional programming does not support conditional statements. In Object-oriented programming, conditional statements can be used like if-else statements and switch statement.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Which is better?&lt;/p&gt;

&lt;p&gt;Well,it depends on what your program is trying to do.&lt;br&gt;
Both OOP and FP have the shared goal of creating understandable, flexible programs that are free of bugs. But they have two different approaches for how to best create those programs.&lt;br&gt;
In all programs, there are two primary components: the data (the stuff a program knows) and the behaviors (the stuff a program can do to/with that data). OOP says that bringing together data and its associated behavior in a single location (called an “object”) makes it easier to understand how a program works. Functional programming says that data and behavior are distinctively different things and should be kept separate for clarity.&lt;br&gt;
In functional programming, data cannot be stored in objects, and it can only be transformed by creating functions. In object-oriented programming, data is stored in objects. Object-oriented programming is widely used by programmers and successful also.&lt;/p&gt;

&lt;p&gt;In Object-oriented programming, it is quite hard to maintain objects while increasing the levels of inheritance. In functional programming, it requires a new object to execute functions, and it takes a lot of memory for executing the applications.&lt;br&gt;
Each has their own advantages and disadvantages, it is up to the programmers or developers to choose the programming language concept that makes their development productive and easy.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>functional</category>
      <category>oop</category>
    </item>
    <item>
      <title>Top 10 Tech Trends for Programmers in 2021</title>
      <author>Priyanshi Sharma</author>
      <pubDate>Wed, 12 May 2021 08:08:25 +0000</pubDate>
      <link>https://dev.to/priyanshi_sharma/top-10-tech-trends-for-programmers-in-2021-4el8</link>
      <guid>https://dev.to/priyanshi_sharma/top-10-tech-trends-for-programmers-in-2021-4el8</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tPV5S8i8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tsdudzwkxynnfset7e7y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tPV5S8i8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tsdudzwkxynnfset7e7y.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the software development industry and programmers 2020 has been a significant year with lots of breakthroughs in several areas. With the global pandemic, digitization has sped up remarkably, so the trends that we will be discussing today will be much greater than the last year.&lt;/p&gt;

&lt;p&gt;The development of software and &lt;a href="https://www.decipherzone.com/web-app-development-company"&gt;web applications&lt;/a&gt; has become a crucial aspect of today’s business while programmers or developers have become an integral part of the enterprise that helps businesses innovate, emerge and thrive.&lt;/p&gt;

&lt;p&gt;We’ve already spent four months into 2021 and it’s crystal clear that a programmer with cutting-edge skills will continue to be on the top of the corporate battle.&lt;/p&gt;

&lt;p&gt;So, in this article, I am going to focus on the technology trends and planning for programmers in 2021. All the mentioned trends will be based on the facts, figures and data from authenticate sources to offer clear-cut information.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#predictions-on-top-10-tech-trends-for-programmers-in-2021"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.decipherzone.com/blog-detail/tech-trends-programmers"&gt;Predictions On Top 10 Tech Trends For Programmers in 2021&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;So, what are the trends that are going to be on top this year?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-multicloud"&gt;
  &lt;/a&gt;
  1. Multi-Cloud
&lt;/h3&gt;

&lt;p&gt;When it comes to public cloud providers there is no doubt about who is leading in the market. According to &lt;a href="https://www.statista.com/chart/18819/worldwide-market-share-of-leading-cloud-infrastructure-service-providers/"&gt;Statista&lt;/a&gt;, Amazon Web Services is leading the cloud market with 32%. While Microsoft has a market share of 20% and Google Cloud is in third place with a 9% market share. And it’s more likely to be the top-three in 2021 as well.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m_3DSt7o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aaafzebqx8185sm1jdam.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m_3DSt7o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aaafzebqx8185sm1jdam.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Moreover, the Multi-Cloud initiative will come into momentum with several companies moving towards it. Firstly, being reluctant to the multi-cloud strategy, Amazon has now entered this market as well making it seamless for the programmers to deploy their applications in Multiple Clouds.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-blockchain"&gt;
  &lt;/a&gt;
  3. Blockchain
&lt;/h3&gt;

&lt;p&gt;One of the most disruptive technologies that have been recently introduced is &lt;a href="https://www.decipherzone.com/blog-detail/Use-cases-for-blockchain-Top-5-real-life-usage"&gt;Blockchain&lt;/a&gt; and has been used for the Cryptocurrency concept. However, it has the potential to change the whole IT industry and it is projected by &lt;a href="https://www.prnewswire.com/news-releases/global-blockchain-technology-market-report-2021-2027-market-to-reach-us-30-7-billion---blockchain-to-improve-transparency-security-immutability--accessibility-of-financial-systems--processes-301266654.html"&gt;PR Newswire&lt;/a&gt; to reach $30.7 billion by the year 2027 with 43% CAGR. It will most likely be used as a Smart Contract mechanism in 2021 among different industries.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-quantum-computing"&gt;
  &lt;/a&gt;
  3. Quantum Computing
&lt;/h3&gt;

&lt;p&gt;Undoubtedly, Quantum Computing is the most reformist technology in the current era of digitization. It is most likely to impact every sector. And based on what &lt;a href="https://www.ibm.com/blogs/research/2020/09/ibm-quantum-roadmap/"&gt;IBM&lt;/a&gt; has recently reported in their research blogs, by 2023 they will debut a 1,121 qubit IBM Quantum Condor processor.&lt;/p&gt;

&lt;p&gt;To clearly understand its perspective: if we think of the most advanced Supercomputer as a Chess player or 8th-grade mathematics student, then Quantum computers can be referred to as the supergenius Mathematician like Euler or a chess player that can play with about 50 average chess players at once.&lt;/p&gt;

&lt;p&gt;So keeping the vast possibilities and enormous interest, we will be seeing some mind-blowing discoveries and breakthroughs in Quantum Computing this 2021.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-deep-learning-library"&gt;
  &lt;/a&gt;
  4. Deep Learning Library
&lt;/h3&gt;

&lt;p&gt;The &lt;a href="https://www.decipherzone.com/blog-detail/Artificial-Intelligence-vs-Machine-Learning-vs-Deep-Learning"&gt;deep learning&lt;/a&gt; market is estimated to reach $93.34 Billion in the year 2028, as stated by &lt;a href="http://www.globenewswire.com/en/news-release/2021/03/23/2197902/0/en/Deep-Learning-System-Market-Size-to-Reach-USD-93-34-Billion-in-2028-Improvements-in-Computing-Power-and-Reduction-in-Hardware-Costs-will-Drive-the-Industry-Growth-says-Emergen-Rese.html"&gt;Globe News Wire&lt;/a&gt; at a steady 39.1% CAGR. Among the two prominent global players Facebook and Google in Deep Learning, Google’s TensorFlow 2.0 is the most popular framework rather than Facebook’s PyTorch - based on &lt;a href="https://insights.stackoverflow.com/survey/2020#most-popular-technologies"&gt;Stack Overflow Developer Survey&lt;/a&gt;. It is due to the fact that TensorFlow has all the features of PyTorch and works amazingly on Google Collab.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PCjeIkqV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p88461x8mp1xjyq06suo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PCjeIkqV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p88461x8mp1xjyq06suo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the contrary, developers are more comfortable with working on PyTorch as it offers developer-friendly features.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UizOGZcD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o0x14ux7pepervllca1a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UizOGZcD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o0x14ux7pepervllca1a.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Needless to say, in 2021, both PyTorch and TensorFlow 2.0 will be the preferred choice libraries for developers depending on their requirements.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-dataintensive-computation"&gt;
  &lt;/a&gt;
  5. Data-Intensive Computation
&lt;/h3&gt;

&lt;p&gt;When it comes to Distributed Batch Jobs or Data-Intensive Computation a few years ago, Hadoop was the default choice. However, with the emergence of Apache Spark, Hadoop is being replaced in most cases for Distributed Batch Jobs. As stated in the blog by &lt;a href="https://towardsdatascience.com/big-data-analytics-apache-spark-vs-apache-hadoop-7cb77a7a9424"&gt;Towards Data Science&lt;/a&gt;, a key difference among these two is their performance. Spark program continuously runs about 10 times faster on disk and 100 times faster than Hadoop in-memory. Moreover, Spark has been designed to overcome the cons of Hadoop so this trend of replacing Hadoop and opting for Spark is most likely to continue this year as well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-rapid-app-development"&gt;
  &lt;/a&gt;
  6. Rapid App Development
&lt;/h3&gt;

&lt;p&gt;With the recent release of &lt;a href="https://www.prnewswire.com/news-releases/at-26-1-cagr-low-code-development-platform-market-size-is-expected-to-reach-65-15-billion-by-2027--says-brandessence-market-research-301243189.html"&gt;PR Newswire&lt;/a&gt;, it can be predicted that &lt;a href="https://www.decipherzone.com/on-demand-solutions"&gt;rapid application development&lt;/a&gt; or Low Code/No-Code market size will reach $65.15 Billion by 2027 at more than 26.1% CAGR. Several platforms are supporting low code/no code in web development such as Microsoft Power Apps, Bubble, OutSystems, and Appian.&lt;/p&gt;

&lt;p&gt;In 2021, LCNC platforms will be one of the powerful trends having lots of acquisitions, innovations and mergers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-javascript-python-amp-java"&gt;
  &lt;/a&gt;
  7. JavaScript, Python &amp;amp; Java
&lt;/h3&gt;

&lt;p&gt;The landscape of &lt;a href="https://www.decipherzone.com/blog-detail/top-programming-languages-for-desktop-apps-in-2021"&gt;programming language&lt;/a&gt; is going through major changes. While traditional heavy-weight languages are losing their share over the market, developer-friendly languages like JavaScript, Python and Java are still the most popular languages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gg-Oqa4B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8512e4uryf78qpeyhcus.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gg-Oqa4B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8512e4uryf78qpeyhcus.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
As the software industry is continuing to boom with numerous new developers joining the development industry, developer-friendly programming languages will also thrive this year.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-react-for-clientside-web-frameworks"&gt;
  &lt;/a&gt;
  8. React for CLient-Side Web Frameworks
&lt;/h3&gt;

&lt;p&gt;When we focus on web frameworks, jQuery is still ruling others but it is soon about to lose its place to React.js and Angular gradually. Besides, React.js is the most downloaded, used and chosen client-side &lt;a href="https://www.decipherzone.com/blog-detail/top-10-backend-development-frameworks"&gt;framework&lt;/a&gt; as we can see in the following &lt;a href="https://insights.stackoverflow.com/survey/2020#most-popular-technologies"&gt;Stack Overflow&lt;/a&gt; data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--spWBHlFR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nx0by7g1n3gxou2k32le.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--spWBHlFR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nx0by7g1n3gxou2k32le.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-containerization"&gt;
  &lt;/a&gt;
  9. Containerization
&lt;/h3&gt;

&lt;p&gt;In the cloud-native IT industry, containerization is the core technology. Kubernetes has reached a 48% adoption rate as shared by &lt;a href="https://www.globenewswire.com/news-release/2021/02/18/2178094/0/en/Global-Application-Container-Market-2021-to-2026-Growth-Trends-COVID-19-Impact-and-Forecasts.html"&gt;Globe Newswire&lt;/a&gt;. It has established itself as the top Container orchestration and management tool. It is leading both private and public cloud aspects. Moreover, all the ruling cloud providers like AWS, Azure and Google are now providing managed services for Kubernetes too.&lt;/p&gt;

&lt;p&gt;This year, we are about to see a growth in Kubernetes adoption rate because it is the main ingredient for the Multi-Cloud strategy.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-edge-computing"&gt;
  &lt;/a&gt;
  10. Edge Computing
&lt;/h3&gt;

&lt;p&gt;Edge Computing is a distributed computing infrastructure that brings data storage and computation together to improve response time. It is &lt;a href="https://www.grandviewresearch.com/press-release/global-edge-computing-market"&gt;estimated&lt;/a&gt; to reach $43.4 Billion worth by 2027. With the rise in IoT devices, connected vehicles, AI/ML, Edge computing will be a giant market his year and beyond. So be ready for the innovations and standardizations in this technology.&lt;/p&gt;

&lt;p&gt;Although the software industry is much bigger with multiple important areas to cover, it’s impossible to include everything out there. However, I have tried to entail a few significant trends that will play a magnificent role in the programmer’s life. I hope you have got an overview of all the technological trends lying ahead in 2021 and beyond.&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://www.decipherzone.com/blog"&gt;Decipher&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>python</category>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Native vs Cross-Platform Mobile App Development</title>
      <author>vinayak-gaikwad</author>
      <pubDate>Wed, 12 May 2021 07:44:39 +0000</pubDate>
      <link>https://dev.to/vinayakgaikwad/native-vs-cross-platform-mobile-app-development-20f6</link>
      <guid>https://dev.to/vinayakgaikwad/native-vs-cross-platform-mobile-app-development-20f6</guid>
      <description>&lt;p&gt;&lt;em&gt;Nowadays&lt;/em&gt; to deliver a mobile experience to your users, building a native app is not the only option. If you finally decide to make a mobile app for your business or your company, the next step is picking between native and cross-platform mobile development. You can either choose from native development or you can use cross-platform tools like a flutter, react-native. Below you will explore both options and be able to select which suits your needs. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#native-app-development"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Native App Development&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Native app development refers to building apps exclusively for a single platform like android and IOS. These apps are built using the tools available to the specific platform, such as Java and Kotlin programming languages for Android and objective C or Swift for the IOS.&lt;br&gt;
Natively built applications are known for their exceptionally high performance and amazing user experiences. In native applications, developers have access to all the features of devices. This allows them to use complex and advanced functionalities. &lt;br&gt;
&lt;em&gt;Let's see the pros of the Native mobile development&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advantages-of-native-app-development"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Advantages of Native app development&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;High performance and large functionality&lt;/strong&gt;&lt;br&gt;
Native applications provide high performance due to the direct interaction between the code and the resources. Developers also have access to every tool and API provided by the native platform. Broad functionality available in native apps&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;User Experience&lt;/strong&gt;&lt;br&gt;
With high performance and functionality, native apps offer an amazing user experience. Designers and developers have more creative freedom to create good-looking as well as smooth functioning apps.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Scalability and Flexibility&lt;/strong&gt;&lt;br&gt;
Native applications are more scalable thanks to the flexible development environment and wide range of available tools. In native apps, the interface is in full compliance with the platform.&lt;br&gt;
Let see the cons of the native app development&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disadvantages-of-native-app-development"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Disadvantages of Native app development&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Cost is high&lt;/strong&gt;&lt;br&gt;
It becomes very costly when you are building applications for android as well as for the ios. Both platforms require separate codebases as well as require two separate teams for each platform.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Longer development time&lt;/strong&gt;&lt;br&gt;
Native development is time-consuming as we cannot use the same code for the different platforms. Therefore require different teams for the development of the same application.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#crossplatform-app-development"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Cross-Platform App Development&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Cross-platform app development is the process of developing applications that can run on multiple operating systems such as android and ios. This can be achieved by using tools like React Native, Flutter, or Xamarin. These cross-platform frameworks fit an app to multiple operating systems so we don't have to create different elements for each platform.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Let's see the pros of cross-platform development..&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advantages-of-crossplatform-app-development"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Advantages of Cross-Platform app development&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Shorter development time&lt;/strong&gt;&lt;br&gt;
In cross-platform app development, most of the original codebase can be re-used for multiple platforms such as android and ios. This helps developers to reduce the time for creating different codebases and UI elements.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Cost&lt;/strong&gt; &lt;br&gt;
In cross-platform development most of the original codebase is used for multiple platforms hence requires a single team that can develop the application for multiple platforms. Also, the cost of the tools required for different platforms reduces.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Exposure to a large number of users&lt;/strong&gt;&lt;br&gt;
In cross-platform development, most of the apps run on multiple operating systems gives exposure to a large number of uses&lt;br&gt;
&lt;em&gt;Now let's see the cons of cross-platform development..&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#disadvantages-of-crossplatform-app-development"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Disadvantages of Cross-Platform app development&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Performance&lt;/strong&gt; &lt;br&gt;
There is a considerable gap between the performance of native and cross-platform applications. Due to the need for an abstraction layer and rendering process, cross-platform apps are slower than native apps. This is a major drawback of cross-platform app development.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Support of native features&lt;/strong&gt;&lt;br&gt;
The cross-platform app development framework does not support all the features and functionality of the native platforms. Also, the support of third-party libraries is limited in these frameworks.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Limited UX&lt;/strong&gt;&lt;br&gt;
Cross-platform apps do not deliver the UX and UI the same as the native apps. Also, some of the native elements are not available on the cross-platform apps.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#summary-choosing-between-native-and-crossplatform-applications"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Summary: Choosing between native and cross-platform applications&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;As we have seen both Native and cross-platform have their pros and cons. It depends upon the project requirements and resources which one should we use.&lt;br&gt;
Native apps are the best choice where high performance is required. It also gives a stunning UI and UX. Also, it requires time and can be very costly, and require a large number of teams for developing the applications.&lt;br&gt;
Cross-platform apps take less time for development and also they are cost-efficient because these apps share most of the same codebases for multiple platforms. The drawback is that their performance and UX are not the same as native applications.&lt;br&gt;
&lt;em&gt;Thank you...&lt;/em&gt;&lt;/p&gt;

</description>
      <category>android</category>
      <category>ios</category>
      <category>reactnative</category>
      <category>flutter</category>
    </item>
    <item>
      <title>Outsourcing Software Development: MVP, Proof of Concept, Prototyping</title>
      <author>Kasia</author>
      <pubDate>Wed, 12 May 2021 07:20:30 +0000</pubDate>
      <link>https://dev.to/selleo/outsourcing-software-development-mvp-proof-of-concept-prototyping-1ij8</link>
      <guid>https://dev.to/selleo/outsourcing-software-development-mvp-proof-of-concept-prototyping-1ij8</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-are-the-differences-and-when-do-you-need-them"&gt;
  &lt;/a&gt;
  What are the differences and when do you need them?
&lt;/h1&gt;

&lt;p&gt;Proof of Concept, Prototype, and Minimum Viable Product (MVP) are the three most common words you will hear during any software development. Each of those words describes a version of a finished product but at different stages of completion so it is very easy to get confused.&lt;/p&gt;

&lt;p&gt;This post will guide all CTOs and Product Owners to learn how to start their software development. Having know-how of these three words is very important as these terms help in planning and defining the project. It is the most important part of the software development process.&lt;/p&gt;

&lt;p&gt;So, let’s get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#proof-of-concept-poc-%C2%A0-everything-you-need-to-know"&gt;
  &lt;/a&gt;
  Proof of Concept (POC) -  Everything You Need to Know
&lt;/h2&gt;

&lt;p&gt;Here we will explain POC in detail from its definition to uses and benefits.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-proof-of-concept-in-it"&gt;
  &lt;/a&gt;
  What is Proof of Concept in IT?
&lt;/h3&gt;

&lt;p&gt;A proof of concept is a bare-bones feasibility test of your central premise that determines whether or not an idea can be achieved.&lt;/p&gt;

&lt;p&gt;A proof of concept only covers a portion of our potential product. Many POCs that discuss each of the features and functionality can thoroughly evaluate a complex idea.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-main-points-of-poc"&gt;
  &lt;/a&gt;
  What are the Main Points of POC?
&lt;/h3&gt;

&lt;p&gt;The main points of POC are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The concept addresses the basic question: Can a product be built or not?&lt;/li&gt;
&lt;li&gt;It tests the assumption for the real-life final product&lt;/li&gt;
&lt;li&gt;It helps to define the idea, functionality, feasibility of a product&lt;/li&gt;
&lt;li&gt;It is a theoretical demo to see if the product is possible&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#when-to-use-proof-of-concept"&gt;
  &lt;/a&gt;
  When to use Proof of Concept?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;#1: When you are Upgrading your Product with Latest Technology&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At this point, a proof-of-concept helps you to assess the new feature's viability without putting the company at risk.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#2: When you are Boosting an Existing Technology&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;POC can help to determine which option is the best. It is possible to test hypotheses without actually designing a product. This helps businesses save valuable time and money.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#3: When you are using Third-Party Solution for your Project&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Using a third-party solution is often risky, so conducting a feasibility check before deciding on a solution will save you a lot of time. A perfect example would be integrating a payment system into your app. Before you begin integrating the solution, make sure the technology is feasible.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#top-3-advantages-of-proof-of-concept"&gt;
  &lt;/a&gt;
  Top 3 Advantages of Proof of Concept
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mTaME5q_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://a.storyblok.com/f/86602/720x307/45522c3add/top-3-advantages-of-proof-of-concept.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mTaME5q_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://a.storyblok.com/f/86602/720x307/45522c3add/top-3-advantages-of-proof-of-concept.jpg" alt="Img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The top 3 advantages of POC are as follow:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Project Managers can Identify Potential Risks and Hurdles&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Creating a proof of concept helps project managers in identifying potential threats and barriers in the development process. Managers should predict challenges and schedule their projects accordingly while still planning, rather than discovering them before or after the product release. It helps them to eliminate risks and obstacles.&lt;/p&gt;

&lt;p&gt;While the POC cannot guarantee a smooth execution of project management fundamentals, it can improve the product's chances of success.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Helps Develop Feasibility Report for Stakeholders&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Before project managers may ask for funds for their plan, they must first convince their stakeholders that the investment is worthwhile.&lt;/p&gt;

&lt;p&gt;They will demonstrate the idea's usability and viability through POCs. They can clearly illustrate the benefits of the proposed product to the company's operations, brand image, and customer relations, among other things.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Project Leaders can Forecast Future Chances for Scalability&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When project managers consider developing a product, they and their stakeholders almost always expect it to be scaled up. As a result, project managers may use POCs to check the viability of a concept and its scalability, whether it is done immediately or over time. When in the proposal stage, POCs will assist project managers in addressing scope creep.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-easy-poc-templates-for-software-developers"&gt;
  &lt;/a&gt;
  6 Easy POC Templates for Software Developers
&lt;/h3&gt;

&lt;p&gt;To aid in the planning and to execute upcoming IT projects, we've compiled a list of free proof-of-concept models, and examples found online.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Template # 1 - Commonwealth of Pennsylvania, Department of Public Welfare&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This &lt;a href="https://www.dhs.pa.gov/providers/Providers/Documents/Business%20and%20Tech%20Standards/Applicaiton%20Domain/Proof%20of%20Concept%20-%20Pilot%20Guideline.doc"&gt;detailed proof-of-concept document&lt;/a&gt; was created by two IT executives ten years ago and continues to be a helpful method to create a proof-of-concept for custom-built market offerings and new technology investments. The document gives comprehensive descriptions for the POC process's preparation, monitoring, and performance and a helpful template at the end.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Template # 2 -  Intel&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.intel.com/content/www/us/en/analytics/artificial-intelligence/ai-proof-of-concept-for-enterprise-applications.html"&gt;Intel's step-by-step guide&lt;/a&gt; explains how to create a good proof of concept for AI applications. Business leaders can use Intel's proof-of-concept template to scale various AI-based solutions and decide which is the best match, given the rapid proliferation of AI and many other automation technologies in the enterprise.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Template # 3 -  Toolbox.com&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This sampling technology &lt;a href="https://it.toolbox.com/blogs/craigborysowich/technology-proof-of-concept-sample-030510"&gt;proof-of-concept template&lt;/a&gt; explained how to outline a methodology for any size POC and determine the required technological environment and expected requirements for a new system in detail.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Template # 4 - Designli LLC&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Prove necessity, map weak points to solutions and get feedback, test the idea, evaluate, and build a minimum viable product are five steps offered by software firm Designli for &lt;a href="https://designli.co/blog/5-steps-proof-concept-successful-software-development/"&gt;effective software development&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Template # 5 - Accelerator Research and Innovation for European Science and Society (ARIES)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://app.grammarly.com/ddocs/1146519889"&gt;proof-of-concept proposal&lt;/a&gt; map created by ARIES is a good example of a simple template that can be used in various industries. The prototype includes six parameters, each of which is annotated with questions and other information that explains what is expected of each.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Template # 6 - Mervyn George&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Mervyn George, a tech advisor, and the author take to LinkedIn to give &lt;a href="https://www.linkedin.com/pulse/20140828131241-10893657-the-software-proof-of-concept-6-vital-components-for-success/"&gt;six software proof-of-concept&lt;/a&gt; progress components: recognizing the team, defining success, aligning goals, expecting a win-win result, clarifying next steps from the start, collecting input, learning, and evolving.&lt;/p&gt;

&lt;p&gt;Now, let’s move on to Prototype.&lt;/p&gt;

&lt;p&gt; Read also: &lt;a href="https://selleo.com/blog/how-to-develop-a-mobile-app-best-practices"&gt;How To Develop A Mobile App - Best Practices&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prototype-how-will-my-application-look-alike"&gt;
  &lt;/a&gt;
  Prototype - How will my Application Look Alike?
&lt;/h2&gt;

&lt;p&gt;Let’s get into more details for Prototype and its uses.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-prototyping-in-software-development"&gt;
  &lt;/a&gt;
  What is Prototyping in Software Development?
&lt;/h3&gt;

&lt;p&gt;It's a tool for quickly validating a concept with users and stakeholders before committing to growth. The prototype's primary aim is to aid in product creation decisions and reduce the number of errors.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#advantages-of-software-prototyping"&gt;
  &lt;/a&gt;
  Advantages of Software Prototyping:
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Increased user involvement in the product before implementation.&lt;/li&gt;
&lt;li&gt;The users get a better understanding of the system being developed.&lt;/li&gt;
&lt;li&gt;Defects can be detected earlier.&lt;/li&gt;
&lt;li&gt;Quicker user feedback.&lt;/li&gt;
&lt;li&gt;Missing or difficult functions can be identified easier.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#disadvantages-of-software-prototyping"&gt;
  &lt;/a&gt;
  Disadvantages of Software Prototyping:
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Costly and time-consuming process.&lt;/li&gt;
&lt;li&gt;Difficult for developers because of changing customer requirements.&lt;/li&gt;
&lt;li&gt;The system may expand beyond the original plans.&lt;/li&gt;
&lt;li&gt;If the customer is not satisfied from the very beginning he/she might lose interest.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-types-of-software-prototyping"&gt;
  &lt;/a&gt;
  What are the Types of Software Prototyping?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gi-LjdhH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://a.storyblok.com/f/86602/720x307/328b6be2c8/types-of-software-prototyping.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gi-LjdhH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://a.storyblok.com/f/86602/720x307/328b6be2c8/types-of-software-prototyping.jpg" alt="Img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Software prototypes are primarily of the following styles for various projects in different categories:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rapid Prototyping&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Rapid prototyping, also known as throwaway prototyping, requires minimal effort and requirement analysis. It is discarded as soon as the actual device is established based on the prototype's understanding, as the name implies.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Evolutionary Prototyping&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This starts with the bare minimum of the functionality on which potential prototypes for the entire system can be designed. It's a step-by-step evolutionary method for collecting requirements.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Incremental Prototyping&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Similar to evolutionary prototyping, incremental prototyping entails creating several prototypes for various subsystems and then combining them to form a full system.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Extreme Prototyping&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Extreme prototyping is divided into three stages and is recommended for web development projects. In the next step, the data processing is simulated using the initial prototype, which contains all existing pages. In the end, the prototype incorporates the services.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Software Prototyping - Application&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Software prototyping is the way to go if you have a lot of user interface specifications.&lt;/p&gt;

&lt;p&gt;This prototyping can get a close approximation of the actual program for your online systems to fill out the form and numerous other needs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-to-use-prototyping"&gt;
  &lt;/a&gt;
  When to use Prototyping?
&lt;/h3&gt;

&lt;p&gt;Organizations must determine whether prototyping is beneficial to a specific project on a case-by-case basis. Here are a few things to think about and scenarios where prototyping makes sense:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When the requirements of the product are not clear to the team.&lt;/li&gt;
&lt;li&gt;When the demands of the product are unstable and change quickly&lt;/li&gt;
&lt;li&gt;When there are software-intensive and complex systems that need experimentation and minimum risk&lt;/li&gt;
&lt;li&gt;Big projects with tight timelines and deliverables&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-best-practices-of-prototyping"&gt;
  &lt;/a&gt;
  What are the Best Practices of Prototyping?
&lt;/h3&gt;

&lt;p&gt;Always use the prototype for complicated and perplexing specifications.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Plan the prototype well and record it for the team to follow&lt;/li&gt;
&lt;li&gt;Have meetings with the team to ensure the project is on schedule and not delayed&lt;/li&gt;
&lt;li&gt;There should be a sync between the users and the designer's methodology with an understanding of potential problems and pitfalls&lt;/li&gt;
&lt;li&gt;Do not be afraid of new concepts and improvements throughout the process or when deploying.&lt;/li&gt;
&lt;li&gt;Prioritize the features while integrating them into the prototype&lt;/li&gt;
&lt;li&gt;The first step in obtaining an accurate prototype is to choose the appropriate type of prototype.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--znbBDlt2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://a.storyblok.com/f/86602/720x408/955a548e46/the-best-practices-of-prototyping.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--znbBDlt2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://a.storyblok.com/f/86602/720x408/955a548e46/the-best-practices-of-prototyping.jpg" alt="Img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And, now it is time to learn details about the Minimum Viable Product (MVP).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mvp-what-to-do-to-achieve-your-business-goal"&gt;
  &lt;/a&gt;
  MVP - What to do to Achieve your Business Goal?
&lt;/h2&gt;

&lt;p&gt;In this section of the blog, you will get to know everything about MVP.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-minimum-viable-product"&gt;
  &lt;/a&gt;
  What Is a Minimum Viable Product?
&lt;/h3&gt;

&lt;p&gt;A minimum viable product, or MVP, is a publicly available version of a product that allows teams to benefit from customer input.&lt;/p&gt;

&lt;p&gt;A minimum viable product (MVP) is the most basic but well-polished version of the final product. It is released to the market with only minor flaws.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#top-3-reasons-to-create-mvp"&gt;
  &lt;/a&gt;
  Top 3 Reasons to Create MVP
&lt;/h3&gt;

&lt;p&gt;Let’s look at each reason one by one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reason # 1: Focus on Building the Core&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An MVP app focuses on a single concept and does not have any other features. The MVP strategy is consistent with the lean startup philosophy of creating the best product with a small budget in a short period. Having some of the most important but least essential features will help to reduce the cost of the MVP. The MVP enables the app to be reviewed with little risk.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reason # 2: It’s Budget-Friendly&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is also another significant benefit, as it prevents you from wasting all of your money right away on items that may or may not succeed. It is recommended to build an MVP because it is a simple way to improve the mobile development strategy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reason # 3: It Allows Market Validation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An MVP will assist you in determining if your app is appropriate for your target market. It should effectively introduce your brand to consumers and demonstrate how your project differs from those in its category.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-steps-to-follow-when-building-mvp"&gt;
  &lt;/a&gt;
  4 Steps to Follow When Building MVP
&lt;/h3&gt;

&lt;p&gt;Here’re the four steps for building an MVP.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DFIfMFVS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://a.storyblok.com/f/86602/720x408/5704798f29/4-steps-to-follow-when-building-mvp.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DFIfMFVS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://a.storyblok.com/f/86602/720x408/5704798f29/4-steps-to-follow-when-building-mvp.jpg" alt="Img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1: Identify and Understand your Market and Product Needs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The first step is to determine if there is a commercial demand for your product. It's also important to look at what your rivals are doing and figure out how to make your product stand out. This will assist you in determining what type of mobile product you need to be effective.&lt;/p&gt;

&lt;p&gt;You need to set your goals and success criteria:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Long-Term Goals -&lt;/strong&gt; Once you've decided that there is a market for your product, you should set a long-term business goal: what do you want to achieve? E.g., if you own a coffee shop chain, you may want to reduce checkout time by 30% in the long run.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Success Criteria -&lt;/strong&gt; Next, determine what factors will determine the product's performance.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Step 2: Define and Design User Journey&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It is important to develop the mobile app with the end-user in mind. This will allow you to examine the product from the user's point of view, from opening the app to achieving an end objective, such as making a purchase. This gives you ideas for how to build the app so that it is user-friendly. Furthermore, identifying user flow and addressing users' actions to complete an end objective ensures that nothing is overlooked while keeping service quality in mind.&lt;/p&gt;

&lt;p&gt;Things To Consider When Creating A User Journey:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Identify The User -&lt;/strong&gt; Who will be the target market for your product?&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Identify The Actions (Jobs) -&lt;/strong&gt; The jobs are the steps that the user (or users) must take to meet the story's conclusion and accomplish the target.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Identify The Story Endings -&lt;/strong&gt; There will be a story ending for each user, the user's target (i.e., booking an appointment).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Step 3: Design A Clear Plan &amp;amp; Gain Map&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The plan and gain chart helps you recognize all of a user's pain points and the benefits that come from addressing them. This strategy allows you to figure out where you have the most opportunity to add value. You can then concentrate your MVP on these areas while putting the less important ones on your product roadmap for later updates.&lt;/p&gt;

&lt;p&gt; Read also: &lt;a href="https://selleo.com/blog/why-mvp-development-should-be-outsourced"&gt;Why MVP Development Should Be Outsourced&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4: Decide A List Of Features&lt;/strong&gt;*&lt;/p&gt;

&lt;p&gt;You'll tell at this point what features to include in your MVP and what features to put on your product roadmap that aren't as essential. Identifying and prioritizing features can be as simple as asking yourself, "What does my user want vs. what does my user need?"&lt;/p&gt;

&lt;p&gt;Keep in mind that adding too many user-requested features too fast will detract from the product's overall intent and degrade the user experience. The only parts you can have should be related to the ultimate purpose of your product.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Opportunity Statements&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To finish what features you want to carry out, use opportunity statements. You'll want to build feature sentences at this point in the MVP creation process. For example, the opportunity statement "How could we expedite the application process?" for our Pet Adopters who are applying to adopt animals might become "Reduce application processing time by 10%."&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Breakdown Features&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Provide a rundown of the functionality to include in the product roadmap and the customer and specific opportunity statements.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Prioritization Matrix&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This move assists you in determining where you will have the greatest effect concerning the feature's urgency. You can use a prioritization matrix to decide what aspects must be included in your MVP and what elements can be added later.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-will-you-choose-poc-prototype-or-mvp"&gt;
  &lt;/a&gt;
  So, What Will You Choose - POC, Prototype or MVP?
&lt;/h2&gt;

&lt;p&gt;The answer to this question lies in another question that is “What you want to Build?”&lt;/p&gt;

&lt;p&gt;Most innovative products need all three of them. These tactics help you analyze a product idea before investing a large number of funds in its development. Simpler ideas like Airbnb can be realized by building an MVP and further refining the product. But, you may face great losses by implementing this idea. To minimize the risk, an interactive Prototype of a product can be built. You can send it for demand estimation and customer evaluation to make an informed decision.&lt;/p&gt;

&lt;p&gt;If you need a development team that understands the requirements of your product and develops it in a reasonable time and affordable budget, look no further. We have the best and most experienced software developer at Selleo. You can &lt;a href="https://selleo.com/contact"&gt;contact us&lt;/a&gt; anytime for further discussions.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How often do you maintain the code that's not a part of your favorite stack?</title>
      <author>Madza</author>
      <pubDate>Wed, 12 May 2021 06:45:04 +0000</pubDate>
      <link>https://dev.to/madza/how-often-do-you-maintain-the-code-that-s-not-a-part-of-your-current-stack-44ib</link>
      <guid>https://dev.to/madza/how-often-do-you-maintain-the-code-that-s-not-a-part-of-your-current-stack-44ib</guid>
      <description>&lt;p&gt;For example, you are focusing on mastering MERN stack, but you still have to maintain codebases written in PHP and jQuery (no offense).&lt;/p&gt;

&lt;p&gt;How often do you find yourself in situations like these?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>webdev</category>
      <category>coding</category>
    </item>
    <item>
      <title>HTML : Importance of role for better voice-overs &amp; accessibility</title>
      <author>Rajesh Kumar Yadav</author>
      <pubDate>Wed, 12 May 2021 06:30:34 +0000</pubDate>
      <link>https://dev.to/rajeshkumaryadavdotcom/html-importance-of-role-for-better-voice-overs-accessibility-122a</link>
      <guid>https://dev.to/rajeshkumaryadavdotcom/html-importance-of-role-for-better-voice-overs-accessibility-122a</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-role"&gt;
  &lt;/a&gt;
  What is role?
&lt;/h1&gt;

&lt;p&gt;The role attribute describes the role of an element in programs that can make use of it, such as screen readers or magnifiers.&lt;/p&gt;

&lt;p&gt;Usage Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;a href="#" role="button"&amp;gt;Button CTA&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Screen Readers will read this element as “button” instead of “link”.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Below are list of role attributes you can apply in your project-&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#rolepresentation"&gt;
  &lt;/a&gt;
  role="presentation"
&lt;/h1&gt;

&lt;p&gt;An element whose implicit native role semantics will not be mapped to the accessibility API.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div style="float:left;"&amp;gt;Some content on the left.&amp;lt;/div&amp;gt;
&amp;lt;div style="float:right;"&amp;gt;Some content on the right&amp;lt;/div&amp;gt;
&amp;lt;div role="presentation" style="clear:both;"&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;!-- Only used to clear floats --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#rolealert"&gt;
  &lt;/a&gt;
  role="alert"
&lt;/h1&gt;

&lt;p&gt;A message with important, and usually time-sensitive, information.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div role="alert" aria-live="assertive"&amp;gt;Your session will expire in 60 seconds.&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note that I've included both &lt;code&gt;role="alert"&lt;/code&gt; and &lt;code&gt;aria-live="assertive"&lt;/code&gt; at the same time. These are synonymous attributes, but some screen readers only support one or the other. By using both simultaneously we therefore maximize the chances that the live region will function as expected.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#rolealertdialog"&gt;
  &lt;/a&gt;
  role="alertdialog"
&lt;/h1&gt;

&lt;p&gt;A type of dialog that contains an alert message, where initial focus goes to an element within the dialog.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div role="alertdialog"&amp;gt;
 &amp;lt;h1&amp;gt;Warning&amp;lt;/h1&amp;gt;
 &amp;lt;div role="alert"&amp;gt;Your session will expire in 60 seconds.&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#roleapplication"&gt;
  &lt;/a&gt;
  role="application"
&lt;/h1&gt;

&lt;p&gt;A region declared as a web application, as opposed to a web document. In this example, the application is a simple calculator that might add two numbers together.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div role="application"&amp;gt;
 &amp;lt;h1&amp;gt;Calculator&amp;lt;/h1&amp;gt;
 &amp;lt;input id="num1" type="text"&amp;gt; + &amp;lt;input id="num2" type="text"&amp;gt; =
 &amp;lt;span id="result"&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#rolearticle"&gt;
  &lt;/a&gt;
  role="article"
&lt;/h1&gt;

&lt;p&gt;A section of a page that consists of a composition that forms an independent part of a document, page, or site.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;article&amp;gt;
 &amp;lt;h1&amp;gt;My first article&amp;lt;/h1&amp;gt;
 &amp;lt;p&amp;gt;Lorem ipsum...&amp;lt;/p&amp;gt;
&amp;lt;/article&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You would use &lt;code&gt;role=article&lt;/code&gt; on non-semantic elements (not recommended, invalid)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div role="article"&amp;gt;
 &amp;lt;h1&amp;gt;My first article&amp;lt;/h1&amp;gt;
 &amp;lt;p&amp;gt;Lorem ipsum...&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#rolebanner"&gt;
  &lt;/a&gt;
  role="banner"
&lt;/h1&gt;

&lt;p&gt;A region that contains mostly site-oriented content, rather than page-specific content.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div role="banner"&amp;gt;
 &amp;lt;h1&amp;gt;My Site&amp;lt;/h1&amp;gt;
 &amp;lt;ul&amp;gt;
 &amp;lt;li&amp;gt;&amp;lt;a href="/"&amp;gt;Home&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;&amp;lt;a href="/about"&amp;gt;About&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;&amp;lt;a href="/contact"&amp;gt;Contact&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
 &amp;lt;/ul&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#rolebutton"&gt;
  &lt;/a&gt;
  role="button"
&lt;/h1&gt;

&lt;p&gt;An input that allows for user-triggered actions when clicked or pressed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button role="button"&amp;gt;Add&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#rolecell"&gt;
  &lt;/a&gt;
  role="cell"
&lt;/h1&gt;

&lt;p&gt;A cell in a tabular container.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;table&amp;gt;
 &amp;lt;thead&amp;gt;
 &amp;lt;!-- etc --&amp;gt;
 &amp;lt;/thead&amp;gt;
 &amp;lt;tbody&amp;gt;
 &amp;lt;td role="cell"&amp;gt;95&amp;lt;/td&amp;gt;
 &amp;lt;td role="cell"&amp;gt;14&amp;lt;/td&amp;gt;
 &amp;lt;td role="cell"&amp;gt;25&amp;lt;/td&amp;gt;
 &amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#rolecheckbox"&gt;
  &lt;/a&gt;
  role="checkbox"
&lt;/h1&gt;

&lt;p&gt;A checkable input that has three possible values: true, false, or mixed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p&amp;gt;
 &amp;lt;input type="checkbox" role="checkbox" aria-checked="false"&amp;gt;
 I agree to the terms
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#rolecolumnheader"&gt;
  &lt;/a&gt;
  role="columnheader"
&lt;/h1&gt;

&lt;p&gt;A cell containing header information for a column.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;table role="grid"&amp;gt;
 &amp;lt;thead&amp;gt;
 &amp;lt;tr&amp;gt;
 &amp;lt;th role="columnheader"&amp;gt;Day 1&amp;lt;/th&amp;gt;
 &amp;lt;th role="columnheader"&amp;gt;Day 2&amp;lt;/th&amp;gt;
 &amp;lt;th role="columnheader"&amp;gt;Day 3&amp;lt;/th&amp;gt;
 &amp;lt;/tr&amp;gt;
 &amp;lt;/thead&amp;gt;
 &amp;lt;tbody&amp;gt;
 &amp;lt;!-- etc --&amp;gt;
 &amp;lt;/tbody&amp;gt;
&amp;lt;table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#rolecombobox"&gt;
  &lt;/a&gt;
  role="combobox"
&lt;/h1&gt;

&lt;p&gt;A presentation of a select; usually similar to a textbox where users can type ahead to select an option, or type to&lt;br&gt;
enter arbitrary text as a new item in the list.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input type="text" role="combobox" aria-expanded="false"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Typically, you would use JavaScript to build the rest of the typeahead or list select functionality.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#rolecomplementary"&gt;
  &lt;/a&gt;
  role="complementary"
&lt;/h1&gt;

&lt;p&gt;A supporting section of the document, designed to be complementary to the main content at a similar level in the&lt;br&gt;
DOM hierarchy, but remains meaningful when separated from the main content.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div role="complementary"&amp;gt;
 &amp;lt;h2&amp;gt;More Articles&amp;lt;/h2&amp;gt;
 &amp;lt;ul&amp;gt;
 &amp;lt;!-- etc --&amp;gt;
 &amp;lt;/ul&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#rolecontentinfo"&gt;
  &lt;/a&gt;
  role="contentinfo"
&lt;/h1&gt;

&lt;p&gt;A large perceivable region that contains information about the parent document.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p role="contentinfo"&amp;gt;
 Author: Albert Einstein&amp;lt;br&amp;gt;
 Published: August 15, 1940
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#roledefinition"&gt;
  &lt;/a&gt;
  role="definition"
&lt;/h1&gt;

&lt;p&gt;A definition of a term or concept.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;span role="term" aria-labelledby="def1"&amp;gt;Love&amp;lt;/span&amp;gt;
&amp;lt;span id="def1" role="definition"&amp;gt;an intense feeling of deep affection.&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#roledialog"&gt;
  &lt;/a&gt;
  role="dialog"
&lt;/h1&gt;

&lt;p&gt;A dialog is an application window that is designed to interrupt the current processing of an application in order to prompt the user to enter information or require a response.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div role="dialog"&amp;gt;
 &amp;lt;p&amp;gt;Are you sure?&amp;lt;/p&amp;gt;
 &amp;lt;button role="button"&amp;gt;Yes&amp;lt;/button&amp;gt;
 &amp;lt;button role="button"&amp;gt;No&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#roledirectory"&gt;
  &lt;/a&gt;
  role="directory"
&lt;/h1&gt;

&lt;p&gt;A list of references to members of a group, such as a static table of contents.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ul role="directory"&amp;gt;
 &amp;lt;li&amp;gt;&amp;lt;a href="/chapter-1"&amp;gt;Chapter 1&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;&amp;lt;a href="/chapter-2"&amp;gt;Chapter 2&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;&amp;lt;a href="/chapter-3"&amp;gt;Chapter 3&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#roledocument"&gt;
  &lt;/a&gt;
  role="document"
&lt;/h1&gt;

&lt;p&gt;A region containing related information that is declared as document content, as opposed to a web application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div role="document"&amp;gt;
 &amp;lt;h1&amp;gt;The Life of Albert Einstein&amp;lt;/h1&amp;gt;
 &amp;lt;p&amp;gt;Lorem ipsum...&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#roleform"&gt;
  &lt;/a&gt;
  role="form"
&lt;/h1&gt;

&lt;p&gt;A landmark region that contains a collection of items and objects that, as a whole, combine to create a form. Using the semantically correct HTML element &lt;/p&gt; implies default ARIA semantics, meaning &lt;code&gt;role=form&lt;/code&gt; is not required as you should not apply a contrasting role to an element that is already semantic, as adding a role overrides the native semantics of an element.&lt;br&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;form action=""&amp;gt;
 &amp;lt;fieldset&amp;gt;
 &amp;lt;legend&amp;gt;Login form&amp;lt;/legend&amp;gt;
 &amp;lt;div&amp;gt;
 &amp;lt;label for="username"&amp;gt;Your username&amp;lt;/label&amp;gt;
 &amp;lt;input type="text" id="username" aria-describedby="username-tip" required /&amp;gt;
 &amp;lt;div role="tooltip" id="username-tip"&amp;gt;Your username is your email address&amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div&amp;gt;
 &amp;lt;label for="password"&amp;gt;Your password&amp;lt;/label&amp;gt;
 &amp;lt;input type="text" id="password" aria-describedby="password-tip" required /&amp;gt;
div role="tooltip" id="password-tip"&amp;gt;Was emailed to you when you signed up&amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/fieldset&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;You would use &lt;code&gt;role=form&lt;/code&gt; on non-semantic elements (not recommended, invalid)&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div role=form&amp;gt;
 &amp;lt;input type="email" placeholder="Your email address"&amp;gt;
 &amp;lt;button&amp;gt;Sign up&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolegrid"&gt;
  &lt;/a&gt;
  role="grid"
&lt;/h1&gt;

&lt;p&gt;A grid is an interactive control which contains cells of tabular data arranged in rows and columns, like a table.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;table role="grid"&amp;gt;
 &amp;lt;thead&amp;gt;
 &amp;lt;!-- etc --&amp;gt;
 &amp;lt;/thead&amp;gt;
 &amp;lt;tbody&amp;gt;
 &amp;lt;!-- etc --&amp;gt;
 &amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolegridcell"&gt;
  &lt;/a&gt;
  role="gridcell"
&lt;/h1&gt;

&lt;p&gt;A cell in a grid or treegrid.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;table role="grid"&amp;gt;
 &amp;lt;thead&amp;gt;
 &amp;lt;!-- etc --&amp;gt;
 &amp;lt;/thead&amp;gt;
 &amp;lt;tbody&amp;gt;
 &amp;lt;tr&amp;gt;
 &amp;lt;td role="gridcell"&amp;gt;17&amp;lt;/td&amp;gt;
 &amp;lt;td role="gridcell"&amp;gt;64&amp;lt;/td&amp;gt;
 &amp;lt;td role="gridcell"&amp;gt;18&amp;lt;/td&amp;gt;
 &amp;lt;/tr&amp;gt;
 &amp;lt;/tbody&amp;gt;
&amp;lt;table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolegroup"&gt;
  &lt;/a&gt;
  role="group"
&lt;/h1&gt;

&lt;p&gt;A set of user interface objects which are not intended to be included in a page summary or table of contents by assistive technologies.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div role="group"&amp;gt;
 &amp;lt;button role"button"&amp;gt;Previous&amp;lt;/button&amp;gt;
 &amp;lt;button role"button"&amp;gt;Next&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#roleheading"&gt;
  &lt;/a&gt;
  role="heading"
&lt;/h1&gt;

&lt;p&gt;A heading for a section of the page.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;h1 role="heading"&amp;gt;Introduction&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;Lorem ipsum...&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#roleimg"&gt;
  &lt;/a&gt;
  role="img"
&lt;/h1&gt;

&lt;p&gt;A container for a collection of elements that form an image.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;figure role="img"&amp;gt;
 &amp;lt;img alt="A cute cat." src="albert.jpg"&amp;gt;
 &amp;lt;figcaption&amp;gt;This is my cat, Albert.&amp;lt;/figcaption&amp;gt;
&amp;lt;figure&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolelink"&gt;
  &lt;/a&gt;
  role="link"
&lt;/h1&gt;

&lt;p&gt;An interactive reference to an internal or external resource that, when activated, causes the user agent to navigate to that resource.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#rolelist"&gt;
  &lt;/a&gt;
  role="list"
&lt;/h1&gt;

&lt;p&gt;A group of non-interactive list items.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ul role="list"&amp;gt;
 &amp;lt;li role="listitem"&amp;gt;One&amp;lt;/li&amp;gt;
 &amp;lt;li role="listitem"&amp;gt;Two&amp;lt;/li&amp;gt;
 &amp;lt;li role="listitem"&amp;gt;Three&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolelistbox"&gt;
  &lt;/a&gt;
  role="listbox"
&lt;/h1&gt;

&lt;p&gt;A widget that allows the user to select one or more items from a list of choices.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ul role="listbox"&amp;gt;
 &amp;lt;li&amp;gt;One&amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;Two&amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;Three&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;Typically, you would use JavaScript to build the multiple-selection functionality.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#rolelistitem"&gt;
  &lt;/a&gt;
  role="listitem"
&lt;/h1&gt;

&lt;p&gt;A single item in a list or directory.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ul role="list"&amp;gt;
 &amp;lt;li role="listitem"&amp;gt;One&amp;lt;/li&amp;gt;
 &amp;lt;li role="listitem"&amp;gt;Two&amp;lt;/li&amp;gt;
 &amp;lt;li role="listitem"&amp;gt;Three&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolelog"&gt;
  &lt;/a&gt;
  role="log"
&lt;/h1&gt;

&lt;p&gt;A type of live region where new information is added in meaningful order and old information may disappear.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ul role="log"&amp;gt;
 &amp;lt;li&amp;gt;User 1 logged in.&amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;User 2 logged in.&amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;User 1 logged out.&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolemain"&gt;
  &lt;/a&gt;
  role="main"
&lt;/h1&gt;

&lt;p&gt;The main content of a document.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!-- header &amp;amp; nav here --&amp;gt;
&amp;lt;div role="main"&amp;gt;
 &amp;lt;p&amp;gt;Lorem ipsum...&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;!-- footer here --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolemarquee"&gt;
  &lt;/a&gt;
  role="marquee"
&lt;/h1&gt;

&lt;p&gt;A type of live region where non-essential information changes frequently.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ul role="marquee"&amp;gt;
 &amp;lt;li&amp;gt;Dow +0.26%&amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;Nasdaq +0.54%&amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;S&amp;amp;amp;P +0.44%&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolemath"&gt;
  &lt;/a&gt;
  role="math"
&lt;/h1&gt;

&lt;p&gt;Content that represents a mathematical expression.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;img role="math" alt="y=mx+b" src="slope.png"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolemenu"&gt;
  &lt;/a&gt;
  role="menu"
&lt;/h1&gt;

&lt;p&gt;A type of widget that offers a list of choices to the user.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ul role="menu"&amp;gt;
 &amp;lt;li role="menuitem"&amp;gt;New&amp;lt;/li&amp;gt;
 &amp;lt;li role="menuitem"&amp;gt;Open&amp;lt;/li&amp;gt;
 &amp;lt;li role="menuitem"&amp;gt;Save&amp;lt;/li&amp;gt;
 &amp;lt;li role="menuitem"&amp;gt;Close&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolemenubar"&gt;
  &lt;/a&gt;
  role="menubar"
&lt;/h1&gt;

&lt;p&gt;A presentation of menu that usually remains visible and is usually presented horizontally.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ul role="menubar"&amp;gt;
 &amp;lt;li role="menuitem"&amp;gt;File&amp;lt;/li&amp;gt;
 &amp;lt;li role="menuitem"&amp;gt;Edit&amp;lt;/li&amp;gt;
 &amp;lt;li role="menuitem"&amp;gt;View&amp;lt;/li&amp;gt;
&amp;lt;li role="menuitem"&amp;gt;Help&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolemenuitem"&gt;
  &lt;/a&gt;
  role="menuitem"
&lt;/h1&gt;

&lt;p&gt;An option in a group of choices contained by a menu or menubar.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ul role="menubar"&amp;gt;
 &amp;lt;li role="menuitem"&amp;gt;File&amp;lt;/li&amp;gt;
 &amp;lt;li role="menuitem"&amp;gt;Edit&amp;lt;/li&amp;gt;
 &amp;lt;li role="menuitem"&amp;gt;View&amp;lt;/li&amp;gt;
 &amp;lt;li role="menuitem"&amp;gt;Help&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolemenuitemcheckbox"&gt;
  &lt;/a&gt;
  role="menuitemcheckbox"
&lt;/h1&gt;

&lt;p&gt;A checkable menuitem that has three possible values: true, false, or mixed.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ul role="menu"&amp;gt;
 &amp;lt;li role="menuitem"&amp;gt;Console&amp;lt;/li&amp;gt;
 &amp;lt;li role="menuitem"&amp;gt;Layout&amp;lt;/li&amp;gt;
 &amp;lt;li role="menuitemcheckbox" aria-checked="true"&amp;gt;Word wrap&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolemenuitemradio"&gt;
  &lt;/a&gt;
  role="menuitemradio"
&lt;/h1&gt;

&lt;p&gt;A checkable menuitem in a group of menuitemradio roles, only one of which can be checked at a time.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ul role="menu"&amp;gt;
 &amp;lt;li role="menuitemradio" aria-checked="true"&amp;gt;Left&amp;lt;/li&amp;gt;
 &amp;lt;li role="menuitemradio" aria-checked="false"&amp;gt;Center&amp;lt;/li&amp;gt;
 &amp;lt;li role="menuitemradio" aria-checked="false"&amp;gt;Right&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolenavigation"&gt;
  &lt;/a&gt;
  role="navigation"
&lt;/h1&gt;

&lt;p&gt;A collection of navigational elements (usually links) for navigating the document or related documents.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ul role="navigation"&amp;gt;
 &amp;lt;li&amp;gt;&amp;lt;a href="/"&amp;gt;Home&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;&amp;lt;a href="/about"&amp;gt;About&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;&amp;lt;a href="/contact"&amp;gt;Contact&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolenote"&gt;
  &lt;/a&gt;
  role="note"
&lt;/h1&gt;

&lt;p&gt;A section whose content is parenthetic or ancillary to the main content of the resource.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p&amp;gt;Lorem ipsum...&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;Lorem ipsum...&amp;lt;/p&amp;gt;
&amp;lt;p role="note"&amp;gt;Lorem ipsum...&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#roleoption"&gt;
  &lt;/a&gt;
  role="option"
&lt;/h1&gt;

&lt;p&gt;A selectable item in a select list.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ul role="listbox"&amp;gt;
 &amp;lt;li role="option"&amp;gt;Option 1&amp;lt;/li&amp;gt;
 &amp;lt;li role="option"&amp;gt;Option 2&amp;lt;/li&amp;gt;
 &amp;lt;li role="option"&amp;gt;Option 3&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#roleprogressbar"&gt;
  &lt;/a&gt;
  role="progressbar"
&lt;/h1&gt;

&lt;p&gt;An element that displays the progress status for tasks that take a long time.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;progress role="progressbar" value="25" max="100"&amp;gt;25%&amp;lt;/progress&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#roleradio"&gt;
  &lt;/a&gt;
  role="radio"
&lt;/h1&gt;

&lt;p&gt;A checkable input in a group of radio roles, only one of which can be checked at a time.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div role="radiogroup"&amp;gt;
 &amp;lt;input role="radio" type="radio" aria-checked="true"&amp;gt; One&amp;lt;br&amp;gt;
 &amp;lt;input role="radio" type="radio" aria-checked="false"&amp;gt; Two&amp;lt;br&amp;gt;
 &amp;lt;input role="radio" type="radio" aria-checked="false"&amp;gt; Three
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#roleregion"&gt;
  &lt;/a&gt;
  role="region"
&lt;/h1&gt;

&lt;p&gt;A large perceivable section of a web page or document, that the author feels is important enough to be included in a page summary or table of contents, for example, an area of the page containing live sporting event statistics.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div role="region"&amp;gt;
 Home team: 4&amp;lt;br&amp;gt;
 Away team: 2
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#roleradiogroup"&gt;
  &lt;/a&gt;
  role="radiogroup"
&lt;/h1&gt;

&lt;p&gt;A group of radio buttons.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div role="radiogroup"&amp;gt;
 &amp;lt;input role="radio" type="radio" aria-checked="true"&amp;gt; One&amp;lt;br&amp;gt;
 &amp;lt;input role="radio" type="radio" aria-checked="false"&amp;gt; Two&amp;lt;br&amp;gt;
 &amp;lt;input role="radio" type="radio" aria-checked="false"&amp;gt; Three
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolerow"&gt;
  &lt;/a&gt;
  role="row"
&lt;/h1&gt;

&lt;p&gt;A row of cells in a tabular container.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;table&amp;gt;
 &amp;lt;thead&amp;gt;
 &amp;lt;!-- etc --&amp;gt;
 &amp;lt;/thead&amp;gt;
 &amp;lt;tbody&amp;gt;
 &amp;lt;tr role="row"&amp;gt;
 &amp;lt;!-- etc --&amp;gt;
 &amp;lt;/tr&amp;gt;
 &amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolerowgroup"&gt;
  &lt;/a&gt;
  role="rowgroup"
&lt;/h1&gt;

&lt;p&gt;A group containing one or more row elements in a grid.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;table&amp;gt;
 &amp;lt;thead role="rowgroup"&amp;gt;
 &amp;lt;!-- etc --&amp;gt;
 &amp;lt;/thead&amp;gt;
 &amp;lt;tbody role="rowgroup"&amp;gt;
 &amp;lt;!-- etc --&amp;gt;
 &amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolerowheader"&gt;
  &lt;/a&gt;
  role="rowheader"
&lt;/h1&gt;

&lt;p&gt;A cell containing header information for a row in a grid.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;table role="grid"&amp;gt;
 &amp;lt;thead&amp;gt;
 &amp;lt;!-- etc --&amp;gt;
 &amp;lt;/thead&amp;gt;
 &amp;lt;tbody&amp;gt;
 &amp;lt;tr&amp;gt;
 &amp;lt;th role="rowheader"&amp;gt;Day 1&amp;lt;/th&amp;gt;
 &amp;lt;td&amp;gt;65&amp;lt;/td&amp;gt;
 &amp;lt;/tr&amp;gt;
 &amp;lt;tr&amp;gt;
 &amp;lt;th role="rowheader"&amp;gt;Day 2&amp;lt;/th&amp;gt;
 &amp;lt;td&amp;gt;74&amp;lt;/td&amp;gt;
 &amp;lt;/tr&amp;gt;
 &amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolescrollbar"&gt;
  &lt;/a&gt;
  role="scrollbar"
&lt;/h1&gt;

&lt;p&gt;A graphical object that controls the scrolling of content within a viewing area, regardless of whether the content is fully displayed within the viewing area.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div id="content1"&amp;gt;Lorem ipsum...&amp;lt;/div&amp;gt;
&amp;lt;div
 role="scrollbar"
 aria-controls="content1"
 aria-orientation="vertical"
 aria-valuemax="100"
 aria-valuemin="0"
 aria-valuenow="25"&amp;gt;
 &amp;lt;div class="scrollhandle"&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolesearch"&gt;
  &lt;/a&gt;
  role="search"
&lt;/h1&gt;

&lt;p&gt;A landmark region that contains a collection of items and objects that, as a whole, combine to create a search facility.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div role="search"&amp;gt;
 &amp;lt;input role="searchbox" type="text"&amp;gt;
 &amp;lt;button role="button"&amp;gt;Search&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolesearchbox"&gt;
  &lt;/a&gt;
  role="searchbox"
&lt;/h1&gt;

&lt;p&gt;A type of textbox intended for specifying search criteria.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div role="search"&amp;gt;
 &amp;lt;input role="searchbox" type="text"&amp;gt;
 &amp;lt;button role="button"&amp;gt;Search&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#roleseparator"&gt;
  &lt;/a&gt;
  role="separator"
&lt;/h1&gt;

&lt;p&gt;A divider that separates and distinguishes sections of content or groups of menuitems.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p&amp;gt;Lorem ipsum...&amp;lt;/p&amp;gt;
&amp;lt;hr role="separator"&amp;gt;
&amp;lt;p&amp;gt;Lorem ipsum...&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#roleslider"&gt;
  &lt;/a&gt;
  role="slider"
&lt;/h1&gt;

&lt;p&gt;A user input where the user selects a value from within a given range.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div
 role="slider"
 aria-valuemax="100"
 aria-valuemin="0"
 aria-valuenow="25"&amp;gt;
 &amp;lt;div class="sliderhandle"&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolespinbutton"&gt;
  &lt;/a&gt;
  role="spinbutton"
&lt;/h1&gt;

&lt;p&gt;A form of range that expects the user to select from among discrete choices.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt; role="spinbutton"
 aria-valuemax="100"
 aria-valuemin="0"
 aria-valuenow="25"
 type="number"
 value="25"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#rolestatus"&gt;
  &lt;/a&gt;
  role="status"
&lt;/h1&gt;

&lt;p&gt;A container whose content is advisory information for the user but is not important enough to justify an alert, often but not necessarily presented as a status bar.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div role="status"&amp;gt;Online&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#roleswitch"&gt;
  &lt;/a&gt;
  role="switch"
&lt;/h1&gt;

&lt;p&gt;A type of checkbox that represents on/off values, as opposed to checked/unchecked values.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;select role="switch" aria-checked="false"&amp;gt;
 &amp;lt;option&amp;gt;On&amp;lt;/option&amp;gt;
 &amp;lt;option selected&amp;gt;Off&amp;lt;/option&amp;gt;
&amp;lt;/select&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#roletab"&gt;
  &lt;/a&gt;
  role="tab"
&lt;/h1&gt;

&lt;p&gt;A grouping label providing a mechanism for selecting the tab content that is to be rendered to the user.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ul role="tablist"&amp;gt;
 &amp;lt;li role="tab"&amp;gt;Introduction&amp;lt;/li&amp;gt;
 &amp;lt;li role="tab"&amp;gt;Chapter 1&amp;lt;/li&amp;gt;
 &amp;lt;li role="tab"&amp;gt;Chapter 2&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#roletable"&gt;
  &lt;/a&gt;
  role="table"
&lt;/h1&gt;

&lt;p&gt;A section containing data arranged in rows and columns. The table role is intended for tabular containers which are not interactive.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;table role="table"&amp;gt;
 &amp;lt;thead&amp;gt;
 &amp;lt;!-- etc --&amp;gt;
 &amp;lt;/thead&amp;gt;
 &amp;lt;tbody&amp;gt;
 &amp;lt;!-- etc --&amp;gt;
 &amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#roletablist"&gt;
  &lt;/a&gt;
  role="tablist"
&lt;/h1&gt;

&lt;p&gt;A list of tab elements, which are references to tabpanel elements.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ul role="tablist"&amp;gt;
 &amp;lt;li role="tab"&amp;gt;Introduction&amp;lt;/li&amp;gt;
 &amp;lt;li role="tab"&amp;gt;Chapter 1&amp;lt;/li&amp;gt;
 &amp;lt;li role="tab"&amp;gt;Chapter 2&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#roletabpanel"&gt;
  &lt;/a&gt;
  role="tabpanel"
&lt;/h1&gt;

&lt;p&gt;A container for the resources associated with a tab, where each tab is contained in a tablist.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ul role="tablist"&amp;gt;
 &amp;lt;li role="tab"&amp;gt;Introduction&amp;lt;/li&amp;gt;
 &amp;lt;li role="tab"&amp;gt;Chapter 1&amp;lt;/li&amp;gt;
 &amp;lt;li role="tab"&amp;gt;Chapter 2&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;div role="tabpanel"&amp;gt;
 &amp;lt;!-- etc --&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#roletextbox"&gt;
  &lt;/a&gt;
  role="textbox"
&lt;/h1&gt;

&lt;p&gt;Input that allows free-form text as its value.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;textarea role="textbox"&amp;gt;&amp;lt;/textarea&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#roletimer"&gt;
  &lt;/a&gt;
  role="timer"
&lt;/h1&gt;

&lt;p&gt;A type of live region containing a numerical counter which indicates an amount of elapsed time from a start point, or the time remaining until an end point.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p&amp;gt;
 &amp;lt;span role="timer"&amp;gt;60&amp;lt;/span&amp;gt; seconds remaining.
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#roletoolbar"&gt;
  &lt;/a&gt;
  role="toolbar"
&lt;/h1&gt;

&lt;p&gt;A collection of commonly used function buttons represented in compact visual form.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ul role="toolbar"&amp;gt;
 &amp;lt;li&amp;gt;&amp;lt;img alt="New" src="new.png"&amp;gt;&amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;&amp;lt;img alt="Open" src="open.png"&amp;gt;&amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;&amp;lt;img alt="Save" src="save.png"&amp;gt;&amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;&amp;lt;img alt="Close" src="close.png"&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#roletooltip"&gt;
  &lt;/a&gt;
  role="tooltip"
&lt;/h1&gt;

&lt;p&gt;A contextual popup that displays a description for an element.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;span aria-describedby="slopedesc"&amp;gt;Slope&amp;lt;/span&amp;gt;
&amp;lt;div role="tooltip" id="slopedesc"&amp;gt;y=mx+b&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;Typically, the tooltip would be hidden. Using JavaScript, the tooltip would be displayed after a delay when the user hovers over the element that it describes.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#roletree"&gt;
  &lt;/a&gt;
  role="tree"
&lt;/h1&gt;

&lt;p&gt;A type of list that may contain sub-level nested groups that can be collapsed and expanded.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ul role="tree"&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;
 Part 1
 &amp;lt;ul&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;Chapter 1&amp;lt;/li&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;Chapter 2&amp;lt;/li&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;Chapter 3&amp;lt;/li&amp;gt;
 &amp;lt;/ul&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;
 Part 2
 &amp;lt;ul&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;Chapter 4&amp;lt;/li&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;Chapter 5&amp;lt;/li&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;Chapter 6&amp;lt;/li&amp;gt;
 &amp;lt;/ul&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;
 Part 3
 &amp;lt;ul&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;Chapter 7&amp;lt;/li&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;Chapter 8&amp;lt;/li&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;Chapter 9&amp;lt;/li&amp;gt;
 &amp;lt;/ul&amp;gt;
 &amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#roletreegrid"&gt;
  &lt;/a&gt;
  role="treegrid"
&lt;/h1&gt;

&lt;p&gt;A grid whose rows can be expanded and collapsed in the same manner as for a tree.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#roletreeitem"&gt;
  &lt;/a&gt;
  role="treeitem"
&lt;/h1&gt;

&lt;p&gt;An option item of a tree. This is an element within a tree that may be expanded or collapsed if it contains a sublevel group of treeitems.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ul role="tree"&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;
 Part 1
 &amp;lt;ul&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;Chapter 1&amp;lt;/li&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;Chapter 2&amp;lt;/li&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;Chapter 3&amp;lt;/li&amp;gt;
 &amp;lt;/ul&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;
 Part 2
 &amp;lt;ul&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;Chapter 4&amp;lt;/li&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;Chapter 5&amp;lt;/li&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;Chapter 6&amp;lt;/li&amp;gt;
 &amp;lt;/ul&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;
 Part 3
 &amp;lt;ul&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;Chapter 7&amp;lt;/li&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;Chapter 8&amp;lt;/li&amp;gt;
 &amp;lt;li role="treeitem"&amp;gt;Chapter 9&amp;lt;/li&amp;gt;
 &amp;lt;/ul&amp;gt;
 &amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/rkycom"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With all that being said, I highly recommend you keep learning!&lt;/p&gt;

&lt;p&gt;Thank you for reading this article. Please feel free to connect with me on &lt;a href="https://www.linkedin.com/in/www-rajeshkumaryadav-com/"&gt;LinkedIn&lt;/a&gt; and &lt;a href="https://twitter.com/rky_com"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>html</category>
      <category>webdev</category>
      <category>a11y</category>
    </item>
    <item>
      <title>What's your favorite Static Site Generator?</title>
      <author>Madza</author>
      <pubDate>Wed, 12 May 2021 06:08:52 +0000</pubDate>
      <link>https://dev.to/madza/what-s-your-favorite-static-site-generator-5h74</link>
      <guid>https://dev.to/madza/what-s-your-favorite-static-site-generator-5h74</guid>
      <description>&lt;p&gt;SSGs handle the build process before the pages are requested by the client, meaning that they’re ready to serve when requested.&lt;/p&gt;

&lt;p&gt;Some of the most common choices include NextJS, Gatsby, Hugo, Jekyll, Eleventy, Nuxt, Hexo, and &lt;a href="https://jamstack.org/generators/"&gt;many others&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Which ones have you tried and what are your favorites?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>webdev</category>
      <category>ssg</category>
    </item>
    <item>
      <title>How to Evaluate Site Speed with the Performance API</title>
      <author>Asayer Tech Blog</author>
      <pubDate>Wed, 12 May 2021 05:22:12 +0000</pubDate>
      <link>https://dev.to/asayerio_techblog/how-to-evaluate-site-speed-with-the-performance-api-41d2</link>
      <guid>https://dev.to/asayerio_techblog/how-to-evaluate-site-speed-with-the-performance-api-41d2</guid>
      <description>&lt;p&gt;&lt;em&gt;by author &lt;a href="https://blog.asayer.io/authors/craig-buckler"&gt;Craig Buckler&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Browser DevTools are great for monitoring web application performance on your local development PC. However, they're less practical for measuring site speed on different devices, browsers, and network connections across global locations.&lt;/p&gt;

&lt;p&gt;The Performance API records DevTool-like metrics from real users as they navigate your application. You can post collected data to a service such as Asayer.io, e.g.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;asayer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;load-performance&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;os&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;      &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Ubuntu&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;agent&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;   &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Firefox 88.0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;location&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;US&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pageload&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1522.598&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;paint&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;   &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;5969.123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ajaxinit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1507.067&lt;/span&gt;

&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To help identify performance bottlenecks on specific browsers, devices, or even user sessions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-performance-api"&gt;
  &lt;/a&gt;
  What is the Performance API?
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://developer.mozilla.org/docs/Web/API/Performance_API"&gt;Performance API&lt;/a&gt; is a collection of APIs used to measure:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#navigation-timing"&gt;navigation timing&lt;/a&gt; -- redirects, DNS look-ups, DOM loaded, page loaded, etc.&lt;/li&gt;
&lt;li&gt;
&lt;a href="#resource-timing"&gt;resource timing&lt;/a&gt; -- loading of specific page assets such as CSS, scripts, images, and Ajax calls&lt;/li&gt;
&lt;li&gt;
&lt;a href="#paint-timing"&gt;paint timing&lt;/a&gt; -- the point at which browser rendering starts, and&lt;/li&gt;
&lt;li&gt;
&lt;a href="#user-timing"&gt;user timing&lt;/a&gt; -- custom measurements for your application, including &lt;a href="#performancenow"&gt;&lt;code&gt;performance.now()&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Historically, developers had to adopt the &lt;code&gt;Date()&lt;/code&gt; function to record elapsed times, e.g.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;startTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;doSomething&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;elapsedTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;startTime&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`doSomething() took &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt; &lt;span class="nx"&gt;elapsedTime&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;ms`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;but the Performance API is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;higher resolution. Unlike &lt;code&gt;Date()&lt;/code&gt;, it records timings in fractions of a millisecond.&lt;/li&gt;
&lt;li&gt;more reliable. &lt;code&gt;Date()&lt;/code&gt; uses the system time so timings can become inaccurate when the OS synchronises the clock.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The API is available in client-side JavaScript in most modern browsers and is detectable with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;performance&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// use Performance APIs&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Resource and user timing is also available in client-side &lt;a href="https://developer.mozilla.org/docs/Web/API/Web_Workers_API/Using_web_workers"&gt;Web Workers&lt;/a&gt;. These provide a way to run long-running or computationally-expensive scripts in the background which do not interfere with the browser's main processing thread.&lt;/p&gt;

&lt;p&gt;User timing APIs are also available in server-side:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://nodejs.org/dist/latest/docs/api/perf_hooks.html"&gt;Node.js&lt;/a&gt; applications with the &lt;code&gt;performance_hook&lt;/code&gt; module, and&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://doc.deno.land/builtin/stable#Performance"&gt;Deno&lt;/a&gt; applications run with the &lt;code&gt;--allow-hrtime&lt;/code&gt; option.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Performance API and documentation can be a little difficult to understand partly because it has evolved. I hope the information and examples in this article help illustrate its potential.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#load-timing-properties"&gt;
  &lt;/a&gt;
  Load timing properties
&lt;/h2&gt;

&lt;p&gt;The sections below describe:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#navigation-timing"&gt;page navigation timings&lt;/a&gt; which return a &lt;a href="https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming"&gt;&lt;code&gt;PerformanceNavigationTiming&lt;/code&gt;&lt;/a&gt; object, and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#resource-timing"&gt;resource timings&lt;/a&gt; which returns a &lt;a href="https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming"&gt;&lt;code&gt;PerformanceResourceTiming&lt;/code&gt;&lt;/a&gt; object&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Both objects provide the following identification properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;name&lt;/strong&gt; -- resource URL&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;entryType&lt;/strong&gt; -- performance type (&lt;code&gt;"navigation"&lt;/code&gt; for a page, &lt;code&gt;"resource"&lt;/code&gt; for a page asset)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;initiatorType&lt;/strong&gt; -- resource which initiated the performance entry (&lt;code&gt;"navigation"&lt;/code&gt; for a page)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;serverTiming&lt;/strong&gt; -- an array of &lt;a href="https://developer.mozilla.org/docs/Web/API/PerformanceServerTiming"&gt;PerformanceServerTiming&lt;/a&gt; objects with &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, and &lt;code&gt;duration&lt;/code&gt; metrics written by the server to the HTTP &lt;a href="https://developer.mozilla.org/docs/Web/HTTP/Headers/Server-Timing"&gt;&lt;code&gt;Server-Timing&lt;/code&gt; header&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Both objects provide the following timing properties shown here in the chronological order you would expect them to occur. Timestamps are in milliseconds relative to the start of the page load:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;startTime&lt;/strong&gt; -- timestamp when the fetch started (&lt;code&gt;0&lt;/code&gt; for a page since it's the first asset loaded)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;nextHopProtocol&lt;/strong&gt; -- network protocol used&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;workerStart&lt;/strong&gt; -- timestamp before starting a Progressive Web App (PWA) Service Worker (&lt;code&gt;0&lt;/code&gt; if the request is not intercepted by a Service Worker)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;redirectStart&lt;/strong&gt; -- timestamp of the fetch which initiated a redirect&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;redirectEnd&lt;/strong&gt; -- timestamp after receiving the last byte of the last redirect response&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;fetchStart&lt;/strong&gt; -- timestamp before the resource fetch&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;domainLookupStart&lt;/strong&gt; -- timestamp before a DNS lookup&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;domainLookupEnd&lt;/strong&gt; -- timestamp after the DNS lookup&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;connectStart&lt;/strong&gt; -- timestamp before the browser establishes a server connection&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;connectEnd&lt;/strong&gt; -- timestamp after establishing a server connection&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;secureConnectionStart&lt;/strong&gt; -- timestamp before the browser starts the SSL handshake process&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;requestStart&lt;/strong&gt; -- timestamp before the browser requests the resource&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;responseStart&lt;/strong&gt; -- timestamp when the browser receives the first byte of data&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;responseEnd&lt;/strong&gt; -- timestamp after receiving the last byte or closing the connection&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;duration&lt;/strong&gt; -- the difference between &lt;strong&gt;startTime&lt;/strong&gt; and &lt;strong&gt;responseEnd&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Both objects provide the following download size properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;transferSize&lt;/strong&gt; -- the resource size in bytes (octets), including the header and compressed body&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;encodedBodySize&lt;/strong&gt; -- the resource's payload body in bytes (octets) before decoding/uncompressing&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;decodedBodySize&lt;/strong&gt; -- the resource's payload body in bytes (octets) after decoding/uncompressing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Page &lt;a href="https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming"&gt;&lt;code&gt;PerformanceNavigationTiming&lt;/code&gt;&lt;/a&gt; objects provide further metrics about loading and DOM events, although these are not supported in Safari:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;type&lt;/strong&gt; -- either &lt;code&gt;"navigate"&lt;/code&gt;, &lt;code&gt;"reload"&lt;/code&gt;, &lt;code&gt;"back_forward"&lt;/code&gt; or &lt;code&gt;"prerender"&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;redirectCount&lt;/strong&gt; -- the number of redirects&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;unloadEventStart&lt;/strong&gt; -- timestamp before the &lt;code&gt;unload&lt;/code&gt; event of the previous document (zero if no previous document)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;unloadEventEnd&lt;/strong&gt; -- timestamp after the &lt;code&gt;unload&lt;/code&gt; event of the previous document (zero if no previous document)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;domInteractive&lt;/strong&gt; -- timestamp before the browser sets the document readiness to &lt;em&gt;interactive&lt;/em&gt; when HTML parsing and DOM construction is complete&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;domContentLoadedEventStart&lt;/strong&gt; -- timestamp before document's &lt;code&gt;DOMContentLoaded&lt;/code&gt; event fires&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;domContentLoadedEventEnd&lt;/strong&gt; -- timestamp after document's &lt;code&gt;DOMContentLoaded&lt;/code&gt; event completes&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;domComplete&lt;/strong&gt; -- timestamp before the browser sets the document readiness to &lt;em&gt;complete&lt;/em&gt; when DOM construction and &lt;code&gt;DOMContentLoaded&lt;/code&gt; events have completed&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;loadEventStart&lt;/strong&gt; -- timestamp before the page &lt;code&gt;load&lt;/code&gt; event has fired&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;loadEventEnd&lt;/strong&gt; -- timestamp after the page &lt;code&gt;load&lt;/code&gt; event and all assets are available&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#navigation-timing"&gt;
  &lt;/a&gt;
  Navigation timing
&lt;/h2&gt;

&lt;p&gt;The Navigation Timing API collates timings for unloading the previous page, redirects, DNS lookups, page loading, file sizes, load events, and more. The information would be difficult to reliably determine in any other way.&lt;/p&gt;

&lt;p&gt;Navigation timing is available to client-side JavaScript window and Web Worker functions. Pass a &lt;code&gt;"navigation"&lt;/code&gt; type to the &lt;a href="https://developer.mozilla.org/docs/Web/API/Performance/getEntriesByType"&gt;&lt;code&gt;performance.getEntriesByType()&lt;/code&gt;&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pageTiming&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getEntriesByType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;navigation&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or the page URL to &lt;a href="https://developer.mozilla.org/docs/Web/API/Performance/getEntriesByName"&gt;&lt;code&gt;performance.getEntriesByName()&lt;/code&gt;&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pageTiming&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getEntriesByName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Either option returns an array with a single element containing a &lt;a href="https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming"&gt;&lt;code&gt;PerformanceNavigationTiming&lt;/code&gt;&lt;/a&gt; object (see &lt;a href="#load-timing-properties"&gt;load timing properties&lt;/a&gt;). It contains read-only properties about the resource load times, e.g.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;connectEnd:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;139&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;connectStart:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;103&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;decodedBodySize:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;72325&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;domComplete:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;771&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;domContentLoadedEventEnd:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;634&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;domContentLoadedEventStart:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;630&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;domInteractive:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;421&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;domainLookupEnd:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;103&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;domainLookupStart:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;87&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;duration:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;771&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;encodedBodySize:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;13091&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;entryType:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"navigation"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;fetchStart:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;initiatorType:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"navigation"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;loadEventEnd:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;771&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;loadEventStart:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;771&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;name:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://domain.com/"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;nextHopProtocol:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"h2"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;redirectCount:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;redirectEnd:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;redirectStart:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;requestStart:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;140&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;responseEnd:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;154&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;responseStart:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;154&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;secureConnectionStart:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;115&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;serverTiming:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Array&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;startTime:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;transferSize:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;13735&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;type:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"reload"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;unloadEventEnd:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;171&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;unloadEventStart:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;169&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;workerStart:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can use it to calculate useful page loading metrics from users, e.g.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;performance&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt;
    &lt;span class="nx"&gt;pageTiming&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getEntriesByName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nx"&gt;pageDownload&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pageTiming&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;pageDomReady&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pageTiming&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;domContentLoadedEventStart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;pageFullyReady&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pageTiming&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loadEventEnd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#resource-timing"&gt;
  &lt;/a&gt;
  Resource timing
&lt;/h2&gt;

&lt;p&gt;You can examine load timings for other resources such as images, stylesheets, scripts, &lt;a href="https://developer.mozilla.org/docs/Web/API/Fetch_API"&gt;Fetch&lt;/a&gt;, and &lt;a href="https://developer.mozilla.org/docs/Web/API/XMLHttpRequest"&gt;XMLHttpRequest&lt;/a&gt; Ajax calls in a similar way to the page.&lt;/p&gt;

&lt;p&gt;Resource timing is available to client-side JavaScript window and Web Worker functions. Pass a &lt;code&gt;"resource"&lt;/code&gt; type to the &lt;a href="https://developer.mozilla.org/docs/Web/API/Performance/getEntriesByType"&gt;&lt;code&gt;performance.getEntriesByType()&lt;/code&gt;&lt;/a&gt; to return an array. Each element is a &lt;a href="https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming"&gt;&lt;code&gt;PerformanceResourceTiming&lt;/code&gt;&lt;/a&gt; object (see &lt;a href="#load-timing-properties"&gt;load timing properties&lt;/a&gt;) representing a resource loaded by the page (but not the page itself):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;resourceTiming&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getEntriesByType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;resource&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;example result:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;name:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://domain.com/script1.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;entryType:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"resource"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;initiatorType:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"script"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;fetchStart:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;duration:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;51&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;...etc...&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;name:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://domain.com/style1.css"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;entryType:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"resource"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;initiatorType:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;fetchStart:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;323&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;duration:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;...etc...&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;name:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://domain.com/service/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;entryType:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"resource"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;initiatorType:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"xmlhttprequest"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;fetchStart:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;598&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;duration:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;...etc...&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;...etc...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also fetch a resource by passing its &lt;strong&gt;exact&lt;/strong&gt; URL to &lt;a href="https://developer.mozilla.org/docs/Web/API/Performance/getEntriesByName"&gt;&lt;code&gt;performance.getEntriesByName()&lt;/code&gt;&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;resourceTiming&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getEntriesByName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://domain.com/style1.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This returns an array with a single element:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;name:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://domain.com/style1.css"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;entryType:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"resource"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;initiatorType:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;fetchStart:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;323&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;duration:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;...etc...&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You could use this to report to calculate the load times and sizes of each JavaScript resource as well as the total:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;performance&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// total size of all JavaScript files&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;scriptTotalSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// array of script names, load times, and uncompressed file sizes&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getEntriesByType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;resource&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initiatorType&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;script&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;decodedBodySize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;scriptTotalSize&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;load&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;size&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Performance API records at least 150 resource metrics, but you can define a specific number with &lt;a href="https://developer.mozilla.org/docs/Web/API/Performance/setResourceTimingBufferSize"&gt;&lt;code&gt;performance.setResourceTimingBufferSize(N)&lt;/code&gt;&lt;/a&gt;, e.g.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// record metrics for 300 page resources&lt;/span&gt;
&lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setResourceTimingBufferSize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can clear existing metrics with &lt;a href="https://developer.mozilla.org/docs/Web/API/Performance/clearResourceTimings"&gt;&lt;code&gt;performance.clearResourceTimings()&lt;/code&gt;&lt;/a&gt;. This may be practical when you no longer require page resource information but want to record Ajax requests:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// clear timings&lt;/span&gt;
&lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clearResourceTimings&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// API Fetch request&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/service1/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// one resource returned&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;resourceTiming&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getEntriesByType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;resource&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#paint-timing"&gt;
  &lt;/a&gt;
  Paint timing
&lt;/h2&gt;

&lt;p&gt;The Paint Timing API is available to client-side JavaScript window functions and records two rendering operations observed during page construction.&lt;/p&gt;

&lt;p&gt;Pass a &lt;code&gt;"paint"&lt;/code&gt; type to the &lt;a href="https://developer.mozilla.org/docs/Web/API/Performance/getEntriesByType"&gt;&lt;code&gt;performance.getEntriesByType()&lt;/code&gt;&lt;/a&gt; to return an array containing two &lt;a href="https://developer.mozilla.org/docs/Web/API/PerformancePaintTiming"&gt;PerformancePaintTiming&lt;/a&gt; objects:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;paintTiming&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getEntriesByType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;paint&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The result:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"first-paint"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"entryType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"paint"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"startTime"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;242&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"duration"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"first-contentful-paint"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"entryType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"paint"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"startTime"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;243&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"duration"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;where:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;first-paint&lt;/strong&gt;: the browser has painted the first pixel on the page, and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;first-contentful-paint&lt;/strong&gt;: the browser has painted the first item of DOM content, such as text or an image.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note that &lt;code&gt;"duration"&lt;/code&gt; will always be zero.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#performancenow"&gt;
  &lt;/a&gt;
  performance.now()
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/docs/Web/API/Performance/now"&gt;&lt;code&gt;performance.now()&lt;/code&gt;&lt;/a&gt; returns a high-resolution timestamp in fractions of a millisecond since the beginning of the process's lifetime. The method is available in client-side JavaScript, Web Workers, Node.js, and Deno.&lt;/p&gt;

&lt;p&gt;In client-side JavaScript, the &lt;code&gt;performance.now()&lt;/code&gt; timer starts at zero when the process responsible for creating the &lt;code&gt;document&lt;/code&gt; started. Web Worker, Node.js, and Deno timers start when the script process initially executes.&lt;/p&gt;

&lt;p&gt;Note that Node.js scripts must load the &lt;a href="https://nodejs.org/dist/latest/docs/api/perf_hooks.html"&gt;Performance hooks (&lt;code&gt;perf_hooks&lt;/code&gt;) module&lt;/a&gt; to use the Performance API. In CommonJS:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;performance&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;perf_hooks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or as an ES module:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;performance&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;perf_hooks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can use &lt;code&gt;performance.now()&lt;/code&gt; to time scripts, e.g.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;doSomethingStart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;doSomething&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;doSomethingElapsed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;doSomethingStart&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A further non-standard &lt;a href="https://developer.mozilla.org/docs/Web/API/Performance/timeOrigin"&gt;&lt;code&gt;timeOrigin&lt;/code&gt; property&lt;/a&gt; returns the timestamp at which the current process began. This is measured in Unix time since 1 January 1970 and is available in Node.js and browser JavaScript (not IE or Safari):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;doSomethingStart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;timeOrigin&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;doSomething&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;doSomethingElapsed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;timeOrigin&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;doSomethingStart&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#user-timing"&gt;
  &lt;/a&gt;
  User timing
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;performance.now()&lt;/code&gt; becomes cumbersome when taking more than a couple of timing measurements. The &lt;a href="https://developer.mozilla.org/docs/Web/API/Performance/mark"&gt;&lt;code&gt;performance.mark()&lt;/code&gt;&lt;/a&gt; method adds a named &lt;a href="https://developer.mozilla.org/docs/Web/API/PerformanceMark"&gt;PerformanceMark object&lt;/a&gt; object with a timestamp to the performance buffer. It's available in client-side JavaScript, Web Workers, Node.js, and Deno:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Node.js scripts require:&lt;/span&gt;
&lt;span class="c1"&gt;// CommonJS: const { performance } = require('perf_hooks');&lt;/span&gt;
&lt;span class="c1"&gt;// or ESM  : import { performance } from 'perf_hooks';&lt;/span&gt;

&lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mark&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;script:start&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mark&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;doSomething1:start&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;doSomething1&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mark&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;doSomething1:end&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mark&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;doSomething2:start&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;doSomething2&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mark&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;doSomething2:end&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mark&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;script:end&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Pass a &lt;code&gt;"mark"&lt;/code&gt; type to the &lt;a href="https://developer.mozilla.org/docs/Web/API/Performance/getEntriesByType"&gt;&lt;code&gt;performance.getEntriesByType()&lt;/code&gt;&lt;/a&gt; to return an array of marks:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userTiming&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getEntriesByType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mark&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The resulting array contains objects with &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;startTime&lt;/code&gt; properties:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;detail:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;duration:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;entryType:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"mark"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;name:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"script:start"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;startTime:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;detail:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;duration:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;entryType:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"mark"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;name:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"doSomething1:start"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;startTime:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;detail:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;duration:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;entryType:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"mark"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;name:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"doSomething1:end"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;startTime:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;...etc...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;a href="https://developer.mozilla.org/docs/Web/API/Performance/measure"&gt;&lt;code&gt;performance.measure()&lt;/code&gt;&lt;/a&gt; method calculates the elapsed time between two marks. It's passed the measure name, the start mark name (or a falsy value to use the page/script load time), and the end mark name (or a falsy value to use the current time), e.g.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;measure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;doSomething1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;doSomething1:start&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;doSomething1:end&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;measure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;script&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;doSomething1:end&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This adds a &lt;a href="https://developer.mozilla.org/docs/Web/API/PerformanceMeasure"&gt;PerformanceMeasure&lt;/a&gt; object to the performance buffer with a calculated duration. Pass a &lt;code&gt;"measure"&lt;/code&gt; type to the &lt;a href="https://developer.mozilla.org/docs/Web/API/Performance/getEntriesByType"&gt;&lt;code&gt;performance.getEntriesByType()&lt;/code&gt;&lt;/a&gt; to return an array of measures:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userTiming&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getEntriesByType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;measure&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The resulting array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;detail:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;duration:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;211&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;entryType:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"measure"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;name:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"doSomething1"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;startTime:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;detail:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;duration:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;551&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;entryType:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"measure"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;name:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"script"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;startTime:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also fetch mark and measure entries by name using &lt;a href="https://developer.mozilla.org/docs/Web/API/Performance/getEntriesByName"&gt;&lt;code&gt;performance.getEntriesByName()&lt;/code&gt;&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getEntriesByName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;doSomething1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Other useful methods include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/docs/Web/API/Performance/getEntries"&gt;&lt;code&gt;performance.getEntries()&lt;/code&gt;&lt;/a&gt; -- returns an array of all performance entries including marks, measures, navigation timing, resource timing, and paint timing&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/docs/Web/API/Performance/clearMarks"&gt;&lt;code&gt;performance.clearMarks( [name] )&lt;/code&gt;&lt;/a&gt; -- clear a named mark, or omit the name to clear all marks&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.mozilla.org/docs/Web/API/Performance/clearMeasures"&gt;&lt;code&gt;performance.clearMeasures( [name] )&lt;/code&gt;&lt;/a&gt; -- clear a named measure, or omit the name to clear all measures&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#frontend-monitoring"&gt;
  &lt;/a&gt;
  Frontend Monitoring
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://asayer.io"&gt;Asayer&lt;/a&gt; is a frontend monitoring tool that replays everything your users do and shows how your web app behaves for every issue. It lets you reproduce issues, aggregate JS errors and monitor your web app’s performance.&lt;/p&gt;

&lt;p&gt;Happy debugging, for modern frontend teams - &lt;a href="https://asayer.io/register.html"&gt;Start monitoring your web app for free&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#performanceobserver"&gt;
  &lt;/a&gt;
  PerformanceObserver
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://developer.mozilla.org/docs/Web/API/PerformanceObserver"&gt;PerformanceObserver&lt;/a&gt; interface can watch for changes to the performance buffer and run a function when specific objects appear. It's most practically used for mark, measure, and resource loading events (navigation and paint timings will generally occur before a script has started).&lt;/p&gt;

&lt;p&gt;First, define an observer function. This could log an event or post the data to a statistics endpoint:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;performanceObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;observer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getEntries&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;entry&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;---&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`name    : &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt; &lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`type    : &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt; &lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`start   : &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt; &lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startTime&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`duration: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt; &lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;duration&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The function has the following parameters:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;a &lt;code&gt;list&lt;/code&gt; of observer entries, and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;the &lt;a href="https://developer.mozilla.org/docs/Web/API/PerformanceObserver"&gt;&lt;code&gt;observer&lt;/code&gt; object&lt;/a&gt; so it's possible to &lt;a href="https://developer.mozilla.org/docs/Web/API/PerformanceObserver/disconnect"&gt;disconnect()&lt;/a&gt; if necessary.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Pass this function when creating a new &lt;code&gt;PerformanceObserver&lt;/code&gt; object then run the &lt;a href="https://developer.mozilla.org/docs/Web/API/PerformanceObserver/observe"&gt;&lt;code&gt;observe()&lt;/code&gt; method&lt;/a&gt; with the &lt;code&gt;entryTypes&lt;/code&gt; to observe:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;observer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;PerformanceObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;performanceObserver&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;observer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;entryTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mark&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;measure&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Adding a new mark or measure will now run the &lt;code&gt;performanceObserver()&lt;/code&gt; function and display details about that measurement.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#future-performance-options"&gt;
  &lt;/a&gt;
  Future performance options
&lt;/h2&gt;

&lt;p&gt;Chrome-based browsers offer a non-standard &lt;a href="https://developer.mozilla.org/docs/Web/API/Performance/memory"&gt;&lt;code&gt;performance.memory&lt;/code&gt; property&lt;/a&gt; which returns a single MemoryInfo object:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;jsHeapSizeLimit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4294705152&lt;/span&gt;
  &lt;span class="nx"&gt;totalJSHeapSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5092217&lt;/span&gt;
  &lt;span class="nx"&gt;usedJSHeapSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3742009&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;where:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;jsHeapSizeLimit&lt;/strong&gt; -- the maximum size of the heap in bytes&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;totalJSHeapSize&lt;/strong&gt; -- the total allocated heap size in bytes, and&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;usedJSHeapSize&lt;/strong&gt; -- The currently active segment of JS heap in bytes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;a href="https://developer.mozilla.org/docs/Web/API/Frame_Timing_API"&gt;Frame timing API&lt;/a&gt; is not implemented in any browser, but will record the amount of browser work in one event loop iteration. This includes processing DOM events, CSS animations, rendering, scrolling, resizing, etc. The API should be able to report potential jerkiness when a frame takes longer than 16.7 milliseconds so updates drop below 60 frames per second.&lt;/p&gt;

&lt;p&gt;Finally, the &lt;a href="https://wicg.github.io/js-self-profiling/"&gt;Self-Profiling API&lt;/a&gt; is an &lt;a href="https://chromestatus.com/features/5170190448852992"&gt;experimental feature under development in Chrome&lt;/a&gt;. Given a sample rate, the API will help locate slow or unnecessary code in a similar way to the DevTools &lt;a href="https://blog.asayer.io/the-ultimate-guide-to-fixing-javascript-performance-problems-in-browser-devtools#run-a-performance-report"&gt;performance report&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// define a new profiler with 10ms sample rate&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;profile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;sampleInterval&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// run code&lt;/span&gt;
&lt;span class="nx"&gt;doSomething&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// stop the profiler and capture a trace&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;trace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#pinpoint-performance-problems"&gt;
  &lt;/a&gt;
  Pinpoint performance problems
&lt;/h2&gt;

&lt;p&gt;It's easy to presume your application runs well when you're developing on a new PC connected to a fast network. The performance API offers a way to prove -- &lt;em&gt;or disprove&lt;/em&gt; -- performance issues by collecting real user metrics based on their devices, connections, and locations.&lt;/p&gt;

</description>
      <category>performance</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>.Net Core Startup Class Guide</title>
      <author>Sukhpinder Singh</author>
      <pubDate>Wed, 12 May 2021 05:17:13 +0000</pubDate>
      <link>https://dev.to/ssukhpinder/net-core-startup-class-guide-59b3</link>
      <guid>https://dev.to/ssukhpinder/net-core-startup-class-guide-59b3</guid>
      <description>&lt;h4&gt;
  &lt;a href="#the-startup-class-is-a-single-place-to-configure-services-and-the-apps-request-pipeline"&gt;
  &lt;/a&gt;
  The Startup class is a single place to configure services and the app's request pipeline.
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#the-startup-class-explained-as-follows"&gt;
  &lt;/a&gt;
  The Startup class explained as follows:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It contains an optional &lt;strong&gt;Configure Services&lt;/strong&gt; method to configure app services. A service is a reusable module that provides functionality.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Need to register services in the &lt;strong&gt;Configure Services&lt;/strong&gt; method and consumed throughout the application via &lt;strong&gt;dependency injection&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Includes a Configure method to build the app’s request processing pipeline.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;ConfigureServices&lt;/strong&gt; and &lt;strong&gt;Configure&lt;/strong&gt; are called by the &lt;strong&gt;.NET Core runtime&lt;/strong&gt; when the app begins executing:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public class Startup
{
    public Startup(IConfiguration configuration)
    {
        Configuration = configuration;
    }

    public IConfiguration Configuration { get; }

    public void ConfigureServices(IServiceCollection services)
    {
        services.AddRazorPages();
    }

    public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
    {
        if (env.IsDevelopment())
        {
            app.UseDeveloperExceptionPage();
        }
        else
        {
            app.UseExceptionHandler("/Error");
            app.UseHsts();
        }

        app.UseHttpsRedirection();
        app.UseStaticFiles();

        app.UseRouting();

        app.UseAuthorization();

        app.UseEndpoints(endpoints =&amp;gt;
        {
            endpoints.MapRazorPages();
        });
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Specify the Startup class in the app’s host built. The Startup class is typically defined by calling the &lt;code&gt;WebHostBuilderExtensions.UseStartup&amp;lt;TStartup&amp;gt;&lt;/code&gt; method on the host builder inside the Program.cs file as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public class Program
{
    public static void Main(string[] args)
    {
        CreateHostBuilder(args).Build().Run();
    }
    public static IHostBuilder CreateHostBuilder(string[] args) =&amp;gt;
        Host.CreateDefaultBuilder(args)
            .ConfigureWebHostDefaults(webBuilder =&amp;gt;
            {
                webBuilder.UseStartup&amp;lt;Startup&amp;gt;();
            });
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The host provides services that are accessible to the Startup class constructor. The app attaches additional services via the ConfigureServices method. Both the host and app services are available to Configure and throughout the app.&lt;/p&gt;

&lt;p&gt;The following services can be injected into the Startup class constructor:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;IWebHostEnvironment&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;IHostEnvironment&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;IConfiguration&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#multiple-startup-classes"&gt;
  &lt;/a&gt;
  Multiple Startup Classes
&lt;/h3&gt;

&lt;p&gt;At runtime, the appropriate Startup class is selected when the app defines separate Startup classes for various environments.&lt;/p&gt;

&lt;p&gt;The class whose name matches the current environment is prioritized. For example, if the app includes both a &lt;strong&gt;Startup&lt;/strong&gt; class and a &lt;strong&gt;StartupDevelopment&lt;/strong&gt; class, and the app is running in the Development environment, then the &lt;strong&gt;StartupDevelopment&lt;/strong&gt; class will be used.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-configureservices-method"&gt;
  &lt;/a&gt;
  The ConfigureServices method
&lt;/h3&gt;

&lt;p&gt;The ConfigureServices method is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Optional.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To configure the app’s services.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To set configuration options.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
public class Startup
{
    public Startup(IConfiguration configuration)
    {
        Configuration = configuration;
    }

    public IConfiguration Configuration { get; }

    public void ConfigureServices(IServiceCollection services)
    {

        services.AddDbContext&amp;lt;ApplicationDbContext&amp;gt;(options =&amp;gt;
            options.UseSqlServer(
                Configuration.GetConnectionString("DefaultConnection")));
        services.AddDefaultIdentity&amp;lt;IdentityUser&amp;gt;(
            options =&amp;gt; options.SignIn.RequireConfirmedAccount = true)
            .AddEntityFrameworkStores&amp;lt;ApplicationDbContext&amp;gt;();

        services.AddRazorPages();
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-configure-method"&gt;
  &lt;/a&gt;
  The Configure method
&lt;/h3&gt;

&lt;p&gt;The Configure function is used to specify how the app responds to different HTTP requests. The pipeline is configured by adding middleware components.&lt;/p&gt;

&lt;p&gt;The .NET Core templates configure the pipeline with support for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Developer Exception Page&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Exception handler&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HTTP Strict Transport Security (HSTS)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HTTPS redirection&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Static files&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ASP.NET Core MVC and Razor Pages&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public class Startup
{
    public Startup(IConfiguration configuration)
    {
        Configuration = configuration;
    }

    public IConfiguration Configuration { get; }

    public void ConfigureServices(IServiceCollection services)
    {
        services.AddRazorPages();
    }

    public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
    {
        if (env.IsDevelopment())
        {
            app.UseDeveloperExceptionPage();
        }
        else
        {
            app.UseExceptionHandler("/Error");
            app.UseHsts();
        }

        app.UseHttpsRedirection();
        app.UseStaticFiles();

        app.UseRouting();

        app.UseAuthorization();

        app.UseEndpoints(endpoints =&amp;gt;
        {
            endpoints.MapRazorPages();
        });
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Each &lt;strong&gt;Use&lt;/strong&gt; extension method can be used to add more than one middleware components to the pipeline. For example, the UseStaticFiles method tells the middleware to serve static files.&lt;/p&gt;

&lt;p&gt;Each middleware component in the pipeline is responsible for invoking the next element in the channel, if appropriate.&lt;/p&gt;

&lt;p&gt;Additional services, such as&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;IWebHostEnvironment&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ILoggerFactory&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Anything defined in ConfigureServices&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#configure-services-without-startup"&gt;
  &lt;/a&gt;
  Configure services without Startup
&lt;/h4&gt;

&lt;p&gt;Configure services and the request processing pipeline without using a Startup class, call ConfigureServices, and Configure convenience methods on the host builder.&lt;/p&gt;

&lt;p&gt;Multiple calls to ConfigureServices append to one another. If multiple Configure method calls exist, the last Configure call is used.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public class Program
{
    public static void Main(string[] args)
    {
        CreateHostBuilder(args).Build().Run();
    }

    public static IHostBuilder CreateHostBuilder(string[] args) =&amp;gt;
        Host.CreateDefaultBuilder(args)
            .ConfigureAppConfiguration((hostingContext, config) =&amp;gt;
            {
            })
            .ConfigureWebHostDefaults(webBuilder =&amp;gt;
            {
                webBuilder.ConfigureServices(services =&amp;gt;
                {
                    services.AddControllersWithViews();
                })
                .Configure(app =&amp;gt;
                {
                    var loggerFactory = app.ApplicationServices
                        .GetRequiredService&amp;lt;ILoggerFactory&amp;gt;();
                    var logger = loggerFactory.CreateLogger&amp;lt;Program&amp;gt;();
                    var env = app.ApplicationServices.GetRequiredService&amp;lt;IWebHostEnvironment&amp;gt;();
                    var config = app.ApplicationServices.GetRequiredService&amp;lt;IConfiguration&amp;gt;();

                    logger.LogInformation("Logged in Configure");

                    if (env.IsDevelopment())
                    {
                        app.UseDeveloperExceptionPage();
                    }
                    else
                    {
                        app.UseExceptionHandler("/Home/Error");
                        app.UseHsts();
                    }

                    var configValue = config["MyConfigKey"];
                });
            });
        });
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#you-have-learned"&gt;
  &lt;/a&gt;
  You have learned
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Startup class methods and their description.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Multiple startup classes as per the environment.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a .Net Core build without Startup class.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Thank you for reading. I hope you like the article..!!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/sukhpindersingh"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kziPr3-e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>csharp</category>
      <category>dotnet</category>
      <category>todayilearned</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
