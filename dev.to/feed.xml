<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Power Full Generator You Must Try</title>
      <author>Kamran Ahmad</author>
      <pubDate>Thu, 30 Dec 2021 11:20:37 +0000</pubDate>
      <link>https://dev.to/officialkamran/power-full-generator-you-must-try-8c0</link>
      <guid>https://dev.to/officialkamran/power-full-generator-you-must-try-8c0</guid>
      <description>&lt;p&gt;GetWaves &lt;br&gt;
 A free SVG wave generator created by z creative labs. Choose a curve, adjust, complexity, randomize!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ag3AZplp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88gpoirf22p3m9bvnoug.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ag3AZplp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88gpoirf22p3m9bvnoug.jpg" alt="Image description" width="880" height="405"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://getwaves.io/"&gt;getwaves.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Blob Maker&lt;br&gt;
  Blobmaker is a free generative design tool made by z creative labs, to help you quick create random. unique, and organic-looking SVG shapes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aX7JjMey--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v14m0f4i8pixklrcsn9q.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aX7JjMey--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v14m0f4i8pixklrcsn9q.jpg" alt="Image description" width="880" height="373"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.blobmaker.app/"&gt;blobmaker.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tridiv&lt;br&gt;
Tridiv is web-based editor for creating 3D shape in CSS on easy way &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jwekyaes--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rm57340q8tt0hfcdglpa.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jwekyaes--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rm57340q8tt0hfcdglpa.jpg" alt="Image description" width="880" height="408"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://tridiv.com/"&gt;tridiv.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One thing more thing you can do buy me a coffee👋👇&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/kamranah"&gt;Buymeacoffee&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to create a navbar in 5 minutes</title>
      <author>Yigit S</author>
      <pubDate>Thu, 30 Dec 2021 10:55:11 +0000</pubDate>
      <link>https://dev.to/yigitsr/how-to-create-a-navbar-in-5-minutes-4320</link>
      <guid>https://dev.to/yigitsr/how-to-create-a-navbar-in-5-minutes-4320</guid>
      <description>&lt;p&gt;Hi all. In this post, we're creating a navbar in less than 5 minutes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#html-code"&gt;
  &lt;/a&gt;
  HTML Code
&lt;/h2&gt;

&lt;p&gt;Inside the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag we create a navbar with the tag &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;. Under &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;, we put &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; and 3 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; items. Finally, we put our links with #  &lt;code&gt;&amp;lt;a href="#about-me&amp;gt;&lt;/code&gt; to go to that section on the page. It's something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#about-me"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;About me&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#projects"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Projects&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#contact-me"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Contact&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#css-code"&gt;
  &lt;/a&gt;
  CSS Code
&lt;/h2&gt;

&lt;p&gt;In the video, I didn't create a style.css file. I wrote all the css code in &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tag. Here's the css code.&lt;br&gt;
&lt;strong&gt;Body&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;172&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;170&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;168&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Nav bar&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;      &lt;span class="nx"&gt;nav&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;align&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;justify&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;37&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Ul, li and a&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;      &lt;span class="nx"&gt;ul&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;justify&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nx"&gt;li&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nx"&gt;ul&lt;/span&gt; &lt;span class="nx"&gt;li&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;232&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;231&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;233&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nx"&gt;ul&lt;/span&gt; &lt;span class="nx"&gt;li&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;underline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Here's the final code&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, 
                                 initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Nav Bar&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;nav&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;

            &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#about-me"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;About me&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#projects"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Projects&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#contact-me"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Contact&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;


    &lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;172&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;170&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;168&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;37&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;list-style-type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;11px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;232&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;231&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;233&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;underline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;120&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;180&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;I hope you find this tutorial useful. See you on the next article.&lt;br&gt;
Here's the &lt;a href="https://github.com/yigitsr/navbar-tutorial/blob/main/index.html"&gt;Code&lt;/a&gt; on GitHub&lt;br&gt;
Here's the &lt;a href="https://www.youtube.com/watch?v=JbU0ItAqJzo"&gt;YouTube Video&lt;/a&gt; where I code it from scratch.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Follow me on&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/yigitsr"&gt;GitHub&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://twitter.com/ziggywoxx"&gt;Twitter&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.twitch.tv/lemmy_ace"&gt;Twitch&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.instagram.com/ziggywoxx/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>css</category>
      <category>flexbox</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>A 2021 Reflection Journal: My Tech Writing Journey, Learning, and More</title>
      <author>Bala Priya C</author>
      <pubDate>Thu, 30 Dec 2021 10:49:40 +0000</pubDate>
      <link>https://dev.to/balapriya/a-2021-reflection-journal-my-tech-writing-journey-learning-and-more-36dg</link>
      <guid>https://dev.to/balapriya/a-2021-reflection-journal-my-tech-writing-journey-learning-and-more-36dg</guid>
      <description>&lt;p&gt;With the COVID pandemic bringing about a paradigm shift to &lt;code&gt;virtual&lt;/code&gt;, a lot of us got to explore and unleash new opportunities—despite all the odds! &lt;/p&gt;

&lt;p&gt;I got into technical content writing roughly a year ago. And 2021 has helped me etch a good growth curve in writing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started-with-writing"&gt;
  &lt;/a&gt;
  Getting started with writing
&lt;/h2&gt;

&lt;p&gt;In late 2020, I had started writing tech tutorials on Medium. All my tutorials were summaries of what I was learning back then. So writing those posts really helped me fill my gaps in understanding, and the feedback from the readers motivated me to keep going.&lt;/p&gt;

&lt;p&gt;However, as Medium was a paid platform with articles on all things life, work, and beyond—I was looking to start writing on a free platform, where I'd also get to read more developer-focused content—and get inspired by experienced developers.&lt;/p&gt;

&lt;p&gt;In November 2020, I joined the writing team at &lt;a href="https://www.openmined.org/"&gt;OpenMined&lt;/a&gt;, an open-source organization working in the realm of Privacy-Preserving AI. There, I started learning more about the privacy principles guiding ML and the like. I also started summarizing talks from their Privacy Conference in the form of blog posts for the community.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thus ended 2020; To new beginnings! Hello 2021🎉✨&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#leading-the-writing-team-at-openmined"&gt;
  &lt;/a&gt;
  Leading the writing team at OpenMined
&lt;/h2&gt;

&lt;p&gt;In January, I got the opportunity to lead the writing team at OpenMined. Leading a team of over 30 writers from over 10 time zones—was a challenging yet rewarding experience.&lt;/p&gt;

&lt;p&gt;I led the writing team for a over 6 months, from January through June 2021. During this period, I coordinated efforts to ensure consistent content on the OpenMined blog that members of the community could learn from. And I continued to write a few posts as well.&lt;/p&gt;

&lt;p&gt;If you're interested in reading my posts on privacy, and privacy-preserving AI, I've linked to my author profile &lt;a href="https://blog.openmined.org/author/balapriya/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#joining-dev-community"&gt;
  &lt;/a&gt;
  Joining DEV community
&lt;/h2&gt;

&lt;p&gt;I had also started writing on dev.to in early 2021. I liked the fact that I could now read a lot of well-written tutorials on a wide variety of tech stacks and loved how DEV community is run by the devs for the devs. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I spent my first few weeks reading more, and writing less. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I found features like creating a series, being able to include the canonical URL, writing in Markdown, and the fact that all of the content was accessible for free super cool. And I continued writing.😊&lt;/p&gt;

&lt;p&gt;I was following writers like Chris Bongers &lt;a class="mentioned-user" href="https://dev.to/dailydevtips1"&gt;@dailydevtips1&lt;/a&gt;  and could only get inspired more!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#writing-for-freecodecamp"&gt;
  &lt;/a&gt;
  Writing for freeCodeCamp
&lt;/h2&gt;

&lt;p&gt;I was trying to code my way through freeCodeCamp's Responsive Web Design curriculum, when I got to know that I can apply to become a writer for freeCodeCamp's publication. ✨ I was super happy when Abbey (Abigail Rennemeyer), who is the managing editor onboarded me as a contributor shortly after.&lt;/p&gt;

&lt;p&gt;From June to November 2021, I wrote around 18 tutorials—predominantly covering topics in core Python.&lt;/p&gt;

&lt;p&gt;You can find all posts that I've written for freeCodeCamp in my &lt;a href="https://www.freecodecamp.org/news/author/bala-priya/"&gt;author profile&lt;/a&gt;. And according to stats from Google Analytics, readers spend 1000+ hours every month reading my beginner-friendly tutorials.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#joining-ai-time-journal-as-an-associate-editor"&gt;
  &lt;/a&gt;
  Joining AI Time Journal as an associate editor
&lt;/h2&gt;

&lt;p&gt;I came across another interesting volunteering opportunity at the AI Time Journal while scrolling through my LinkedIn feed. It was regarding an associate editor role with their team. As an associate editor, I had the opportunity to interview guests—who were all thought leaders and experts in data science, and subsequently publish interview posts featuring them.&lt;/p&gt;

&lt;p&gt;The guests that I got to interview include startup founders in the data-driven decision making and privacy space, and engineering and program managers at Google, Meta (then, Facebook 😄) and the like.&lt;/p&gt;

&lt;p&gt;In case you're interested in data science, you can find all the interviews in &lt;a href="https://www.aitimejournal.com/author/bala-priya"&gt;this link&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-muchneeded-break"&gt;
  &lt;/a&gt;
  A much-needed break
&lt;/h2&gt;

&lt;p&gt;As a grad student who was and still is trying hard to get past the finish line, I had a burnout. And I decided to stay off the social media radar for a few weeks—deleting a couple of accounts permanently, and checking even school emails sparingly.&lt;/p&gt;

&lt;p&gt;This much-needed break indeed helped me get back on track, and regain the lost momentum.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ending-2021-on-a-high-note"&gt;
  &lt;/a&gt;
  Ending 2021 on a high note
&lt;/h2&gt;

&lt;p&gt;During one of the conversations, &lt;a class="mentioned-user" href="https://dev.to/atapas"&gt;@atapas&lt;/a&gt; (Tapas Adhikary)—one of the best content creators we have—had suggested  that I should also consider writing on Hashnode for there's a vibrant and supportive community around it. And I had made my decision at once.😄&lt;/p&gt;

&lt;p&gt;Inspired by great and consistent writers like Tapas and Chris, I decided to join Hashnode. It has been a little over a week, and I love the community already.&lt;/p&gt;

&lt;p&gt;And I certainly look forward to a great experience!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I'm super thankful to wonderful communities like OpenMined, freeCodeCamp, dev.to, and Hashnode for having me in 2021. This year has indeed been a great year!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#the-road-ahead"&gt;
  &lt;/a&gt;
  The road ahead!
&lt;/h2&gt;

&lt;p&gt;Though I'm happy with my progress, there's a lot of scope for improvement, and there's a lot I could have done better. But I'm going to be easy on me, and try to get them all right in the coming year. 😄&lt;/p&gt;

&lt;p&gt;I'd like to code and write more consistently on Hashnode and dev.to, complete the &lt;em&gt;100DaysofCode&lt;/em&gt; challenge, and help others in their coding journey.&lt;/p&gt;

&lt;p&gt;And many congratulations to each of you for staying courageous, and pulling through another difficult year. Do take a moment to reflect on your journey, and be thankful for how far you've come! ✨&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For they say, "The more thankful you are for what you have—the more you'll have to be thankful for!"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Thanks again for reading, and have a great year ahead!🎉🎊&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>programming</category>
      <category>career</category>
    </item>
    <item>
      <title>First Mocked Unit Test Generated by DDTJ - Building DDTJ Day 9</title>
      <author>Shai Almog</author>
      <pubDate>Thu, 30 Dec 2021 10:48:27 +0000</pubDate>
      <link>https://dev.to/codenameone/first-mocked-unit-test-generated-by-ddtj-building-ddtj-day-9-36lo</link>
      <guid>https://dev.to/codenameone/first-mocked-unit-test-generated-by-ddtj-building-ddtj-day-9-36lo</guid>
      <description>&lt;p&gt;Yesterday &lt;a href="https://dev.to/codenameone/build-issues-code-generation-and-depth-vs-breadth-first-building-ddtj-day-8-2242"&gt;I ran into some snags&lt;/a&gt;, but I'm glad to report that this is all behind me. We finally have the first DDT generated test in history!&lt;/p&gt;

&lt;p&gt;I’d like to proclaim victory, but the road ahead is still long and the result is “underwhelming” at this point. We have generated code, but it still doesn’t compile right away and at least for POJOs it doesn’t inject the mocks (although it creates them). I think those are surmountable problems that we can solve moving forward.&lt;/p&gt;

&lt;p&gt;But I’m running a bit ahead. Let’s talk about what’s happening with the code right now… Or at least in the &lt;a href="https://github.com/ddtj/ddtj/pull/8"&gt;current PR&lt;/a&gt; that’s still waiting for more test coverage.&lt;/p&gt;

&lt;p&gt;Right now I’m running a super trivial application:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BasicApp&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;BasicDependency&lt;/span&gt; &lt;span class="n"&gt;dependency&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;BasicDependency&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
   &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="nc"&gt;InterruptedException&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;BasicApp&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
   &lt;span class="o"&gt;}&lt;/span&gt;

   &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="nc"&gt;InterruptedException&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
       &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"This is the first testable method"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
       &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dependency&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;otherMethod&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"This prints three"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
   &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which invokes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BasicDependency&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;otherMethod&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="nc"&gt;InterruptedException&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
       &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"otherMethod"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;" "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
   &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To generate a test for this, I used the following process:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#run-the-backend-server"&gt;
  &lt;/a&gt;
  Run the Backend Server
&lt;/h2&gt;

&lt;p&gt;The server process collects the execution data from the app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;java -jar target/Backend-0.0.5-SNAPSHOT.jar
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#run-the-app"&gt;
  &lt;/a&gt;
  Run the App
&lt;/h2&gt;

&lt;p&gt;The next stage is getting the server to run/debug the application. This replaces the standard java command line with something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;java -jar target/CLI-0.0.5-SNAPSHOT-shaded.jar -run dev.ddtj.backend.testdata.BasicApp -classpath Backend/target/test-classes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice this command is asynchronous since it runs in the backend server context.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#find-and-generate-the-test"&gt;
  &lt;/a&gt;
  Find and Generate the Test
&lt;/h2&gt;

&lt;p&gt;First, we need to list the classes on which we have instrumentation:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;java -jar target/CLI-0.0.5-SNAPSHOT-shaded.jar -c
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which prints out:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Class Name                                                  | Method Count    | Execution Count
----------                                                  | ------------    | ---------------
dev.ddtj.backend.testdata.BasicDependency                   | 1               | 1
dev.ddtj.backend.testdata.BasicApp                          | 2               | 2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we need to see the methods we can test in a specific class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;java -jar target/CLI-0.0.5-SNAPSHOT-shaded.jar -m dev.ddtj.backend.testdata.BasicApp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which prints out:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Method Name                                                 | Total Execution
-----------                                                 | ---------------
main([Ljava/lang/String;)V                                  | 1
run()V                                                      | 1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to find the tests available. When we have one test, it seems redundant, but it makes sense when we have more:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;java -jar target/CLI-0.0.5-SNAPSHOT-shaded.jar -t "dev.ddtj.backend.testdata.BasicApp.run()V"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Prints out:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Test ID                                 | Test Hour of the Day
-------                                 | --------------------
JuZlJX5ERAKXZQR8CpYgiA--7               | Thu Dec 30 08:31:25 IST 2021
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can now generate a test based on these results:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;java -jar target/CLI-0.0.5-SNAPSHOT-shaded.jar -g "dev.ddtj.backend.testdata.BasicApp,run()V,JuZlJX5ERAKXZQR8CpYgiA--7"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which prints out:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * Generated by &amp;lt;a href="https://github.com/ddtj/ddtj/"&amp;gt;ddtj&amp;lt;/a&amp;gt;
 */&lt;/span&gt;
&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;dev.ddtj.backend.testdata.test&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.junit.jupiter.api.Test&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.junit.jupiter.api.extension.ExtendWith&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.mockito.Mock&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.mockito.Mockito&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.mockito.junit.jupiter.MockitoExtension&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dev.ddtj.backend.testdata.BasicApp&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dev.ddtj.backend.testdata.BasicDependency&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nd"&gt;@ExtendWith&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;MockitoExtension&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BasicAppTests&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nd"&gt;@Test&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;runTest&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;BasicDependency&lt;/span&gt; &lt;span class="nc"&gt;BasicDependencyMock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Mockito&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;mock&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;BasicDependency&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;Mockito&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;lenient&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;when&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;BasicDependencyMock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;otherMethod&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"This prints three"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)).&lt;/span&gt;&lt;span class="na"&gt;thenReturn&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"This prints three 3"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;BasicApp&lt;/span&gt; &lt;span class="n"&gt;myObjectInstance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;BasicApp&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;myObjectInstance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#what-isnt-working"&gt;
  &lt;/a&gt;
  What Isn’t Working?
&lt;/h2&gt;

&lt;p&gt;There are several problems in the code above. First, we don’t detect checked exceptions, so this code won’t compile.&lt;/p&gt;

&lt;p&gt;As a short-term workaround, I’m adding a “throws Exception” to the test method. This ensures it compiles properly and fails as expected.&lt;/p&gt;

&lt;p&gt;The bigger problem is that the mock isn’t properly bound. I expected this since I didn’t write the code for that and also there’s technically no way to bind that mock. I hope this will work more reasonably when testing on “real world” code.&lt;/p&gt;

&lt;p&gt;The code doesn’t use the &lt;code&gt;@Mock&lt;/code&gt; or &lt;code&gt;@InjectMocks&lt;/code&gt; annotations. I think that’s something that I can improve on. I’d like to have multiple styles of test generation to support various personal tastes. &lt;/p&gt;

&lt;p&gt;Since the mock isn’t invoked, the test would fail on that, but I added the `lenient() call as a short-term workaround so we can move forward.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-working"&gt;
  &lt;/a&gt;
  What’s Working?
&lt;/h2&gt;

&lt;p&gt;I’m so pleased it generated the mock code correctly and implemented the mock. &lt;/p&gt;

&lt;p&gt;Object creation and dependencies included a lot of hairy code, but it’s coming together now and I think the basis is very good.&lt;/p&gt;

&lt;p&gt;I’m very pleased with the data collection code and the basic architecture. Now the key challenge is fine tuning and scaling this so it works correctly for more “real world” workloads. &lt;/p&gt;

&lt;p&gt;I think I’ll go into greater details on this in my postmortem blog post next week. I think I need to give this some time to see how everything fits together.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tomorrow"&gt;
  &lt;/a&gt;
  Tomorrow
&lt;/h2&gt;

&lt;p&gt;Right now I have two big challenges ahead of me:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Merge the PR - this will be hard, especially testing all this code I wrote&lt;/li&gt;
&lt;li&gt;Scale and improve to use cases&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;At this stage, I’m pretty happy that I accomplished the basic goal. But I want to build a proper MVP so I hope I can get a real world application running. I think blue sky initiatives like a web interface, would have to wait until after this stage.&lt;/p&gt;

&lt;p&gt;If you want to keep up with the latest updates on this series and the many other things I work on, then &lt;a href="https://twitter.com/debugagent"&gt;follow me on twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>startup</category>
      <category>opensource</category>
      <category>programming</category>
      <category>testing</category>
    </item>
    <item>
      <title>Guess The Die : Javascript Game</title>
      <author>Fidal Mathew</author>
      <pubDate>Thu, 30 Dec 2021 10:22:32 +0000</pubDate>
      <link>https://dev.to/fidalmathew/guess-the-die-javascript-game-3g8j</link>
      <guid>https://dev.to/fidalmathew/guess-the-die-javascript-game-3g8j</guid>
      <description>&lt;p&gt;Hi guys, hope you are doing good. In this post, we are going to make a game using Javascript. &lt;br&gt;
The game involves the following functionalities-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The user has to guess a number on the die 🎲 while it gets rolled in a span of 10 secs.&lt;/li&gt;
&lt;li&gt;If the guess is right then the score will be incremented by one.&lt;/li&gt;
&lt;li&gt;There is a 10 second wait/countdown between rolls during which we have to guess the number on the die.&lt;/li&gt;
&lt;li&gt;When the user select his/her guess, the roll happens immediately  and the result is displayed.&lt;/li&gt;
&lt;li&gt;If the 10 seconds on the roll expires, it simply resets and there is no impact to the score.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K0SOFPpR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/geaoxuteb2c3db3pzqn6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K0SOFPpR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/geaoxuteb2c3db3pzqn6.png" alt="Dice Load" width="880" height="502"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I93XOvTT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rc58bw7z7kpmajopecm0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I93XOvTT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rc58bw7z7kpmajopecm0.png" alt="Gameplay" width="880" height="508"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First, let us look at the HTML structure.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#indexhtml"&gt;
  &lt;/a&gt;
  Index.html
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Roll the Dice Game&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"css/style.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.googleapis.com/css2?family=Roboto:wght@300&amp;amp;display=swap"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;


    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;ROLL THE DICE&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"info"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"display: inline-block"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Selected&lt;span class="nt"&gt;&amp;lt;br&amp;gt;&lt;/span&gt; variable:&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"SV"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;_&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"image-dice"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"dice"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/load.gif"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

            &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;Score: &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"CV"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;0&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

            &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;1&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;2&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;3&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;4&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;5&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;6&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"report"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"h"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Dice will change in &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"timeS"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;0&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt; seconds&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"result"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;


    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"index.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And here’s the index.js&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#indexjs"&gt;
  &lt;/a&gt;
  Index.js
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;randomVar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;buttonVal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;result&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;report&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;report&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;timeS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;timeS&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dice&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;



&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Clicked&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;selectVar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;dice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`img/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;randomVar&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.png`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="c1"&gt;//To change the dice picture          &lt;/span&gt;

    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SV&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;selectVar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;randomVar&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;selectVar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#1CE1BE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Guess was right!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;CV&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#FF6D2E&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Guess was wrong!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;


    &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;buttonVal&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;disabled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;disabled&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;




&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;load&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;report&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;loading game will start in a few seconds!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;h&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;none&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;result&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;none&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;buttonVal&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Clicked&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//added event click&lt;/span&gt;

        &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;disabled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;disabled&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="p"&gt;});&lt;/span&gt;


    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;report&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;none&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;h&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;block&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;result&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;block&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;6000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;



&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DisplayTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;timesecond&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="nx"&gt;timeS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;timesecond&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;timesecond&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;timesecond&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

            &lt;span class="nx"&gt;timesecond&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;


    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;


&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;addNewRandom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;randomVar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="nx"&gt;dice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`img/load.gif`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;dice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;37.5%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SV&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;_&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


        &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;buttonVal&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

            &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;disabled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;disabled&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;



&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;DisplayTime&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;addNewRandom&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;





&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#game-description"&gt;
  &lt;/a&gt;
  Game Description
&lt;/h3&gt;

&lt;p&gt;Before moving to Javascript part, do take a look at index.html and game UI. It will help you understand the game better.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#declaration"&gt;
  &lt;/a&gt;
  Declaration
&lt;/h4&gt;

&lt;p&gt;Declare all necessary variables in index.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;randomVar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// to select a random value from 1 to 6 &lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;buttonVal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;result&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;report&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;report&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;timeS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;timeS&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dice&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The game mainly comprises 3 sections, we call these functions after the browser window loads&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;DisplayTime&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;addNewRandom&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#load"&gt;
  &lt;/a&gt;
  Load()
&lt;/h4&gt;

&lt;p&gt;The load() function involves-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Setting up report element =" loading game will start in a few seconds!"&lt;/li&gt;
&lt;li&gt;Setting display of id “h” and “result” as none.&lt;/li&gt;
&lt;li&gt;Add event listener to all the buttons/numbers 
element.addEventListener("click", Clicked);
and add class “disabled” which disables pointer events.
( I will tell you about Clicked() later on in the tutorial.)
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.disabled&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;gray&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;pointer-events&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.disabled&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;gray&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add a set timeout of 6 secs after which “report” is not displayed &lt;br&gt;
meanwhile “h” &amp;amp; “result” are displayed&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#displaytime"&gt;
  &lt;/a&gt;
  DisplayTime()
&lt;/h4&gt;

&lt;p&gt;DisplayTime() function is used to- &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Display time, which is denoted by &lt;br&gt;
timeS.innerHTML = timesecond;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Timesecond value is updated each sec using setInterval()&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#addnewrandom"&gt;
  &lt;/a&gt;
  addNewRandom()
&lt;/h4&gt;

&lt;p&gt;addNewRandom() function consists of a set interval of 10 secs.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It sets a new random value to randomVal between 1 and 6.&lt;br&gt;
&lt;code&gt;randomVar = Math.floor(Math.random() * 6) + 1;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After updating randomVar, we remove class "disabled" from each of the keys/buttons.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#clicked"&gt;
  &lt;/a&gt;
  Clicked()
&lt;/h4&gt;

&lt;p&gt;Last but not least, let’s look at Clicked() function.&lt;br&gt;
It's functionalites include -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Set the picture of die depending on randomVar.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Compare the selected button and randomVar and &lt;br&gt;
display the result and score accordingly.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Source Code :&lt;/strong&gt; &lt;a href="https://github.com/FidalMathew/ROLL-THE-DICE"&gt;https://github.com/FidalMathew/ROLL-THE-DICE&lt;/a&gt; &lt;br&gt;
    Note: Some additional features have been added to the game&lt;/p&gt;

&lt;p&gt;Thank you all for reading, have a great day :)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Connect with me on -&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/fidalmathew10"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FidalMathew"&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/fidal-mathew-82aba7200/"&gt;Linkedin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>2021 Rewind </title>
      <author>Mayukh Pankaj</author>
      <pubDate>Thu, 30 Dec 2021 09:44:57 +0000</pubDate>
      <link>https://dev.to/mayukh/2021-rewind-3lo1</link>
      <guid>https://dev.to/mayukh/2021-rewind-3lo1</guid>
      <description>&lt;p&gt;It's Rewind time ! 2021 has been such an amazing year. I learned quite a few new stuffs. Apart from academic studies, I was involved in web &amp;amp; app development.&lt;/p&gt;

&lt;p&gt;here's my 2021 summarized ⏪,&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;January&lt;/strong&gt;: I worked on covid-hotspots, A app that shows Covid-19 data for user's geolocation. Learned Javascript, TypeScript and API&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;February&lt;/strong&gt;: Completed Python for Everybody course, learned automating stuff with python&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;March&lt;/strong&gt;: Programming.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;April&lt;/strong&gt;: here's where thing got interesting, at IEEE Student Branch-BIT Mesra's Lead, Finally stopped procrastinating, made a portfolio website - with light/dark mode feature and completed other tasks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;May&lt;/strong&gt;: Learned web scraping with BeautifulSoup, selenium, and made a Job Scraper with Flask as backend, again in IEEE lead.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;June&lt;/strong&gt;: Learned React &amp;amp; Node.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;July&lt;/strong&gt;: Can't remember, procrastinated.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;August&lt;/strong&gt;: participated in Major League Hacking hackathon, developed Vaccinater, app that sends Notification with vaccine availability in user's location to email &amp;amp; sms.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;September&lt;/strong&gt;: Data structures , Earned 4 ⭐ on Hackerrank&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;October&lt;/strong&gt;: Hacktoberfest, maintained repo for IETE BIT, resolving conflicts , merging PRs, creating Issues. nice experience. learned.&lt;/p&gt;

&lt;p&gt;Learned basics of Machine Learning at Society for Data Science BIT Mesra. Algorithms like Linear, Logistic Regression, KNN, Random forest, Decision Tree.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;November&lt;/strong&gt;: loading...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;December&lt;/strong&gt;: Learned React Native-firebase, Building an app for a Hackathon. (RN is cool)&lt;/p&gt;

&lt;p&gt;Looking forward to another year of doing.&lt;br&gt;
Thanks to Mentors like Angela Yu, Brad Traversy, NetNinja for amazing Tutorials ❤️&lt;br&gt;
Thanx to my friends who were constant help ✨, You know who you are !&lt;/p&gt;

&lt;p&gt;Find me on &lt;br&gt;
Github: &lt;a href="https://github.com/mayukhpankaj"&gt;https://github.com/mayukhpankaj&lt;/a&gt; &lt;br&gt;
Linkedin Post: &lt;a href="https://www.linkedin.com/feed/update/urn:li:activity:6882235583062691840/"&gt;https://www.linkedin.com/feed/update/urn:li:activity:6882235583062691840/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy new year 🎉🥳&lt;/p&gt;

</description>
      <category>devjournal</category>
      <category>webdev</category>
    </item>
    <item>
      <title>10 Tips to credibility for your Saas startup in 2022</title>
      <author>Aparna Sharma</author>
      <pubDate>Thu, 30 Dec 2021 09:19:11 +0000</pubDate>
      <link>https://dev.to/aparnasharma13/10-tips-to-credibility-for-your-saas-startup-in-2022-mii</link>
      <guid>https://dev.to/aparnasharma13/10-tips-to-credibility-for-your-saas-startup-in-2022-mii</guid>
      <description>&lt;p&gt;One of the most popular business opportunities today is Software as a Service (SaaS). When it comes to building a SaaS startup with credibility from the start, it can be difficult to secure a place in the extremely competitive startup environment, as I also belong to a Saas startup that is &lt;strong&gt;Newsdata.io&lt;/strong&gt; which provides &lt;a href="https://newsdata.io/"&gt;news API&lt;/a&gt; services, and we have used many of these tips to improve our brand’s credibility.&lt;/p&gt;

&lt;p&gt;If a new SaaS startup doesn’t achieve even a fraction of the credibility of an established business, it could quickly fall into that unfortunate majority. To keep up with the competition, startups need to work quickly to establish their credibility. To help you out, at SaaSworthy we’ve put together a list of the top 10 ways to build credibility as a new SaaS startup in 2022.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-saas-startup"&gt;
  &lt;/a&gt;
  What is a SaaS startup?
&lt;/h2&gt;

&lt;p&gt;SaaS (Software as a Service) startups are companies that use software to provide a service to their customers. It hosts applications and makes them available to clients via the Internet or a web application, which implies that the software is hosted on a SaaS Boot server and can be accessed remotely by the user. These companies design, develop, host, and update their own products.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Top 10 ways to build credibility as a new SaaS startup&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Below are the top 10 ways to boost your credibility as a new SaaS startup in 2022. Take a close look at them to get a better understanding.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-make-the-most-of-testimonials"&gt;
  &lt;/a&gt;
  1. Make the Most of Testimonials
&lt;/h2&gt;

&lt;p&gt;Using customer testimonials to increase your startup’s credibility is one of the easiest ways to do this. Testimonials are opinions of large companies, specialists, or important figures in your sector. The credibility increases as the expert’s followers notice their reviews of your product and most likely want to try it for themselves. Collect testimonials from internet reviews, social media, and polls.&lt;/p&gt;

&lt;p&gt;Testimonials have a greater impact on the perceived trustworthiness of an online business than trust seals or even the entire reputation of the business. Share as many positive testimonials as possible. Perhaps you could devote an entire page of your business website to customer testimonials.&lt;/p&gt;

&lt;p&gt;Consider using video testimonials instead of written testimonials. They might also work better because viewers can see the emotion in the influencer’s face and voice and as a result, they trust you more. The more a testimonial is relevant to the objectives and needs of the prospect, the more credibility it will induce.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-establish-a-social-media-presence"&gt;
  &lt;/a&gt;
  2. Establish a Social Media Presence
&lt;/h2&gt;

&lt;p&gt;You need to be present where your potential customers are, which is usually on social media sites like Facebook, Instagram, or Twitter. Potential clients often use social media to assess the legitimacy of a new startup or SaaS organization. Those who follow you on social media, actively or passively, support your brand by helping you get more people to trust you.&lt;/p&gt;

&lt;p&gt;Make a habit of posting regularly and responding to comments and requests from your audience. Plus, enhance your social media pages by writing a compelling bio including your company logo and cover photo, updating your office hours on Facebook and LinkedIn, and sharing your contact details.&lt;/p&gt;

&lt;p&gt;If you want to gain the trust of your audience, facilitate contact and communication with your organization. Being active on popular social media platforms is extremely crucial. Here you can help customers who contact you and engage them with news and information relevant to your business.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-share-your-accomplishments-and-mentions-in-the-press"&gt;
  &lt;/a&gt;
  3. Share your accomplishments and mentions in the press
&lt;/h2&gt;

&lt;p&gt;Let your customers know if your SaaS startup has been recognized at an awards ceremony or received positive publicity for a recent event. Share it with interested parties, promote it on your LinkedIn profile, and display your media mentions and awards on your website. These help to build credibility. If the media portrayed you positively, your product is probably trustworthy.&lt;/p&gt;

&lt;p&gt;Show your results to everyone. Don’t hesitate to show your customers, suppliers, and employees that you are satisfied with your results and the progress of your business. Highlight accolades or accomplishments on your website.&lt;/p&gt;

&lt;p&gt;A great strategy for building your media presence is to use free web services to find out about printing opportunities for your agency. They can offer advice to journalists on how to be included in news articles. Whichever way you want to advertise your results, make sure they speak to your trustworthiness.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-get-customer-feedback-on-your-product"&gt;
  &lt;/a&gt;
  4. Get customer feedback on your product
&lt;/h2&gt;

&lt;p&gt;According to a BrightLocal survey, 57% of customers will only buy from a business with four or more stars. And 90% of them will read 5–10 product reviews online before trusting a business. Positive reviews from past and current consumers are essential for building credibility.&lt;/p&gt;

&lt;p&gt;According to a study, 88% of customers trust online reviews as much as personal advice. Therefore, contact customers directly to ask for detailed feedback on the items they liked and offer them an incentive in return for their time. Look for reviews from happy customers and create a dedicated testimonials page on your website to show potential customers how many satisfied customers your startup has.&lt;/p&gt;

&lt;p&gt;If a review is relevant and clearly demonstrates the benefits of using your product, it is guaranteed to build the trust of readers. It could be much more effective if it’s posted on a third-party site rather than yours.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-use-guest-blogs"&gt;
  &lt;/a&gt;
  5. Use Guest Blogs
&lt;/h2&gt;

&lt;p&gt;When it comes to building your credibility, internet exposure is your gateway to success. Since building a huge number of subscribers takes time, you can leverage other people’s audiences through guest blogging on their websites. Guest blogging is one of the most effective methods of building your startup’s credibility and showcasing your brand and voice to others.&lt;/p&gt;

&lt;p&gt;Guest blogging could help strengthen your startup’s reputation. There are several sites that welcome well-written guest contributions. Start by posting at least one highDA guest post every week and gradually increase the frequency. To increase the number of visitors to your SaaS site, include a CTA in your author profile.&lt;/p&gt;

&lt;p&gt;Traffic from these websites could lead to visibility and leads. Use your professional knowledge to post on other blogs and websites after you have created an intriguing and well-written blog. Provide your readers with information about the industry, product advice, and other things that are helpful or answer their questions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-offer-free-trials-for-your-paid-products"&gt;
  &lt;/a&gt;
  6. Offer free trials for your paid products
&lt;/h2&gt;

&lt;p&gt;Many customers can understandably be reluctant to trust something that is still in its infancy. Additionally, 92% of customers only believe suggestions from credible sources. Give them a free trial, so they can explore all of your features to welcome them into your party and prove how great you are.&lt;/p&gt;

&lt;p&gt;That way when you start downloading they will be better prepared and more secure to buy it. Salesforce offers consumers a 30-day free trial without the need for credit card information or software installation.&lt;/p&gt;

&lt;p&gt;Consider offering discounts or free products to people who leave positive reviews. You can also attract more customers by offering premium versions of your product that unlock cool features when they pay extra. As a result, Dropbox increased its subscriber base from 100,000 to 400,000 by providing 16GB of storage for free as part of its referral program.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-leverage-the-reputation-of-your-partners"&gt;
  &lt;/a&gt;
  7. Leverage the reputation of your partners
&lt;/h2&gt;

&lt;p&gt;You’ve probably already created a network of trusted people who are associated with your startup and believe in your value offering. You may already have a prestigious management and investor team. use it for the benefit of your startup.&lt;/p&gt;

&lt;p&gt;Look for ways to showcase the knowledge and connections of people currently associated with your business. You can ask board members to make important phone calls or reports on your account. Invite your close circle of partners to share information about your startup on social networks and promote it on LinkedIn.&lt;/p&gt;

&lt;p&gt;Also, offer complete profiles of members of your board of directors and testimonials from important partners on your website and in corporate communications. Don’t limit yourself to the founding team. Overestimating the scope of the collaboration or claiming an endorsement that doesn’t exist are the fastest ways to lose credibility.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-build-highquality-backlinks"&gt;
  &lt;/a&gt;
  8. Build high-quality backlinks
&lt;/h2&gt;

&lt;p&gt;Building high-quality external links is a unique SEO technique that still matters a lot to your online credibility. Getting high-quality backlinks shows buyers that you are trusted by trusted sources. So make an effort to include backlinks to your content from credible and relevant websites.&lt;/p&gt;

&lt;p&gt;While this does not have a direct influence on search rankings, it will increase the credibility of your material. Of course, the ideal approach to getting high-quality links is to create high-quality content that provides real added value to readers. Getting backlinks from meaningful link aggregators like sites.gov, .edu, and.org helps increase your website authority.&lt;/p&gt;

&lt;p&gt;A well-designed landing page should have a CTA that attempts to convert visitors immediately. It is one of the most frequent and effective ways to increase the number of visits to your website. However, adding shoddy and spam links to your content can damage your site’s SEO and cause it to downgrade in search engines.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-use-of-trust-seals"&gt;
  &lt;/a&gt;
  9. Use of trust seals
&lt;/h2&gt;

&lt;p&gt;Business reliability is one of the most common concerns of customers, and this is especially prevalent with new SaaS startups storing sensitive data in the cloud. , 76% of customers won’t buy anything from a website if they don’t recognize the Trustmark or trust seal. These are often the deciding factors that prevent a prospect from trusting you with their money.&lt;/p&gt;

&lt;p&gt;When you have seals from companies like McAfee or MasterCard, customers feel comfortable sharing their personal information with you because they know their data is encrypted and all payments are secure.&lt;/p&gt;

&lt;p&gt;Having a seal of trust on your website or landing page helps build customer trust, but where it is also crucial. Next, make your trust seals visible in important areas like the lead capture form, site header/footer, and gateway checkout page so customers have reassurance every time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-provide-only-the-best-version-of-your"&gt;
  &lt;/a&gt;
  10. Provide Only the Best Version of Your
&lt;/h2&gt;

&lt;p&gt;Products If you want to increase your startup’s credibility over the years, you need to build and deliver the best products and services available. Make sure your product or service is of the highest quality. Consumer claim or problem with your product as soon as possible. This way, you can make sure you are providing the best product or service available.&lt;/p&gt;

&lt;p&gt;The same goes for your customer service. You can, indeed, have an A + product, but if you don’t provide courteous, reliable, and knowledgeable customer service, your startup’s credibility will deteriorate quickly. The more information you provide about the product or service, the more likely people are to trust you with their money.&lt;/p&gt;

&lt;p&gt;To help develop and maintain your credibility, you must deliver the best of the best to customers in everything from products to customer service. Being honest about your business is what will decide its success.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;I hope I have been able to shed some light on the different ways to build credibility as a new SaaS startup with the help of this article. There is no doubt that following the methods mentioned above will help your new SaaS startup gain credibility. Commit to maintaining your credibility as much as building it.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>saas</category>
      <category>programming</category>
    </item>
    <item>
      <title>What Is The Difference Between Deep Learning and Machine Learning?</title>
      <author>images.cv</author>
      <pubDate>Thu, 30 Dec 2021 09:12:22 +0000</pubDate>
      <link>https://dev.to/imagescv/what-is-the-difference-between-deep-learning-and-machine-learning-4mi6</link>
      <guid>https://dev.to/imagescv/what-is-the-difference-between-deep-learning-and-machine-learning-4mi6</guid>
      <description>&lt;h2&gt;
  &lt;a href="#deep-learning-vs-machine-learning"&gt;
  &lt;/a&gt;
  Deep Learning vs Machine Learning
&lt;/h2&gt;

&lt;p&gt;One of the most common questions on the internet is to know the difference between deep learning and machine learning.&lt;br&gt;
Deep Learning is a subsidiary of machine learning that uses a hierarchical level of artificial neural networks to carry out the process of machine learning. Artificial neural networks mimic the functions of the human brain with many nodes connected together like a web. The hierarchical functions of deep learning systems allow the machines to process data with a nonlinear approach.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-machine-learning"&gt;
  &lt;/a&gt;
  What is machine learning?
&lt;/h2&gt;

&lt;p&gt;Machine learning is a domain of artificial intelligence that equips the system with the ability to automatically learn from experience without being explicitly programmed to do so. Machine learning emphasizes on the development of programs that can access data and use it to learn and improve the systems.&lt;/p&gt;

&lt;p&gt;The automated process begins with observation. This might include examples, experience, or instructions. The algorithm can also look for patterns in the data and detect its future occurrences. The fundamental operating principle is to allow the automatic learning of computers without any human intervention whatsoever.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;&lt;u&gt;Type of Machine Learning methods:&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Supervised Algorithms&lt;/strong&gt;&lt;br&gt;
These algorithms can apply learned patterns in the past to new data using the labeled samples to predict forthcoming events. The predicted output is compared with the correct one to correct the parameters.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Unsupervised Algorithms&lt;/strong&gt;&lt;br&gt;
Such algorithms are used when the information used to train the predictive model is neither labeled nor classified. Unsupervised algorithms have the ability to uncover a framework from unlabeled data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reinforcement Algorithms&lt;/strong&gt;&lt;br&gt;
These algorithms determine the error and rewards by interacting with the environment. Software Engineers can determine the ideal behavior within a context to optimize performance.&lt;/p&gt;




&lt;p&gt;&lt;u&gt;&lt;strong&gt;Basic Machine Learning Algorithms:&lt;/strong&gt;&lt;/u&gt;&lt;br&gt;
&lt;strong&gt;&lt;a href="https://scikit-learn.org/stable/modules/svm.html"&gt;Support Vector Machine (SVM)&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
The support vector machine (SVM) algorithm is a linear model which classifies (categorizes) using a straight line. It creates a line or a hyperplane which separates the data into classes. A simple example would be to arrange apples and oranges into classes using SVM.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://scikit-learn.org/stable/modules/neighbors.html"&gt;K Nearest Neighbor (KNN)&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
It is one of the simplest classification algorithms. It uses a database that comprises several data points separated into classes. KNN uses these points to predict a new sample point. The number of samples used to predict is represented by K.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://scikit-learn.org/stable/modules/generated/sklearn.cluster.KMeans.html"&gt;K Means Clustering&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
It is an unsupervised learning algorithm. Clustering is a technique for finding similarities in data. We do not have predefined labels or class values. You’ll define a target number k, which refers to the number of centroids you need in the dataset. K-means algorithm identifies k number of centroids, and then allocates every data point to the nearest cluster while keeping the centroids as small as possible.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#introduction-to-deep-learning"&gt;
  &lt;/a&gt;
  Introduction to Deep Learning
&lt;/h2&gt;

&lt;p&gt;Deep Learning is a subdivision of machine learning that deals with algorithms aimed at mimicking the function of the human brain. Deep Learning creates artificial neural networks to achieve this purpose.&lt;/p&gt;

&lt;p&gt;The reason for the massive success of deep learning is its development side-by-side with the data expansion. &lt;br&gt;
The massive amount of data known as big data, comes from various sources like social media, ecommerce, etc. &lt;br&gt;
This data is widely available and anyone can use it to improve the performance of their models.&lt;/p&gt;

&lt;p&gt;The vast amount of data is greatly unstructured and virtually impossible for humans to comprehend. Organizations realize the great potential that might come from extracting this data. This is why companies are using AI for support.&lt;/p&gt;




&lt;p&gt;Let us now discuss basic deep learning techniques and algorithms…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.ritchieng.com/machine-learning/deep-learning/tensorflow/deep-neural-nets/"&gt;Deep Neural Networks (DNN)&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
At the basic level, a neural network with some level of complexity at least two layers qualifies as a deep neural network. It is known as a deep net in short. Deep nets process data in a sophisticated mechanism by using complex mathematical functions. All modern-day complex algorithms are known as deep neural networks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.tensorflow.org/guide/keras/rnn"&gt;Recurrent Neural Networks (RNN)&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
In a neural network, we assume that all inputs and outputs are independent of each other. However, in many cases, neural networks are not suitable such as predicting the next word in a sequence. In such a case we need the context of the previous word in the sentence.&lt;/p&gt;

&lt;p&gt;Recurrent Neural Networks use information coming in a sequence. &lt;br&gt;
We call them recurrent because the same operation for every element in the sequence is performed with the output dependent upon the previous computations. They have a memory that stores whatever has been calculated so far. They differ from neural networks in the sense that they do not use feed-forward rather internal state memory to process inputs. &lt;br&gt;
RNNs have a limitation about short-term memory that is overcome using Long Short Term Memory (LSTM) that can remember information for a long period of time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.tensorflow.org/tutorials/images/cnn"&gt;Convolutional Neural Network (CNN)&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
In deep learning, convolutional neural networks are used to analyze and process visual imagery. They are known as shift invariant or space invariant artificial neural networks based upon the shared weight architecture. They are used in image and video recommendation systems, recommender systems, image classification, image segmentation, natural language processing, etc.&lt;br&gt;
CNN use regularized versions of a multi-layer perceptron. CNN automatically and adaptively learns the hierarchy of features through backpropagation and passes through the layers of convolution, pooling, and fully connected layers.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;A Birds Eye View of Convolutional Neural Network (CNN)&lt;/strong&gt;&lt;br&gt;
CNN's are a model for deep learning that is useful for processing data with a grid pattern. They are particularly useful for images due to their inherent grid pattern.&lt;/p&gt;

&lt;p&gt;CNN's consist of three layers known as convolution, pooling, and fully connected layers. &lt;br&gt;
Convolution and pooling layers perform the extraction of useful features whereas the final layer connects the extracted features with the output that could be classified.&lt;/p&gt;

&lt;p&gt;The convolution layer consists of mathematical operations such as a linear operator known as convolution or reduction in the dimensionality of the image. Since images are stored as an array of pixels, and a small grid of parameters known as the kernel, a feature extractor can be applied at each position in the image-making CNN's highly effective.&lt;/p&gt;

&lt;p&gt;The output of one layer serves as the input to the next layer so that the extracted features are processed in a hierarchy becoming more complex with progression. Training minimizes the difference between the true labels and the model output by using mathematical algorithms called backpropagation, gradient descent, etc.&lt;/p&gt;




&lt;p&gt;Deep learning is a subset of machine learning that performs better when the data sets are large and/or complex. &lt;br&gt;
If your business relies on a lot of complicated datasets, deep-learning algorithms may be worth exploring to see if they can help improve your bottom line. &lt;/p&gt;

&lt;p&gt;This blog post has been an introduction to what deep learning is and how it differs from other types of machine learning methods out there. We hope this helps you get started with understanding the basics of these technologies so you can make more informed decisions about which tools will work best for your company's or your personal needs!&lt;/p&gt;




&lt;p&gt;&lt;a href="https://images.cv/"&gt;images.cv&lt;/a&gt; provide you with an easy way to build image datasets.&lt;br&gt;
15K+ categories to choose from&lt;br&gt;
Consistent folders structure for easy parsing&lt;br&gt;
Advanced tools for dataset pre-processing: image format, data split, image size and data augmentation.&lt;/p&gt;

&lt;p&gt;👉Visit &lt;a href="https://images.cv/"&gt;images.cv&lt;/a&gt; to learn more&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>deeplearning</category>
    </item>
    <item>
      <title>5 Websites To Get Free Icons For Web Development</title>
      <author>Sk Shoyeb</author>
      <pubDate>Thu, 30 Dec 2021 08:33:14 +0000</pubDate>
      <link>https://dev.to/shoyeb001/5-websites-to-get-free-icons-for-web-development-nk6</link>
      <guid>https://dev.to/shoyeb001/5-websites-to-get-free-icons-for-web-development-nk6</guid>
      <description>&lt;p&gt;In this article I will discuss about &lt;strong&gt;5 websites to get free icons for web design&lt;/strong&gt;. Specially Frontend developers need custom and  modern icons when they develop a website. So this article will help you in finding icons quickly. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fontawesome"&gt;
  &lt;/a&gt;
  &lt;a href="https://fontawesome.com/"&gt;Fontawesome&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Fontawesome&lt;/strong&gt; is the world's most popular icon CDN. Most of developers use &lt;strong&gt;fontawesome&lt;/strong&gt; icons. Here you can get free web icons, social media brand icons, icons for logos, vector icons, material icons etc. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flaticon"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.flaticon.com/"&gt;Flaticon&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Flaticon&lt;/strong&gt; is my personal favourite resource for downloading modern and custom icons, stickers. Here you can get stickers and icons of all things like vegetables, material icons, web icons, social media icons. These icons make your website more attractive. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dryicons"&gt;
  &lt;/a&gt;
  &lt;a href="https://dryicons.com/"&gt;Dryicons&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Dryicons&lt;/strong&gt; contains more than 6000 **vector graphics **and icons. These icons are also very colorful. You can use these in UI and UX design and web design. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#icons8"&gt;
  &lt;/a&gt;
  &lt;a href="https://icons8.com/"&gt;Icons8&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This is one of the famous resource for icons and design elements download. Here you can get free design elements, photos, graphics, svg, music for your video. I have used this 2 or 3 times before. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#iconfinder"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.iconfinder.com/"&gt;Iconfinder&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Iconfinder&lt;/strong&gt; is the world largest icon and &lt;strong&gt;graphic element marketplace&lt;/strong&gt;. Many developers don't know about this website. There are free and premium products. You can access over 200,000 icons, illustrations, 3d graphics for free. You can use these elements in your website or UI UX designs. &lt;/p&gt;

&lt;p&gt;Hope this article is helpful to you. If yes, I just need a heart on this post. If I am missing any resource for icons tell me in comment box. Thanking you.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Lessons Learned from Building Businesses as a Technical Solo Founder</title>
      <author>Mo Boudra</author>
      <pubDate>Thu, 30 Dec 2021 07:58:27 +0000</pubDate>
      <link>https://dev.to/moboudra/lessons-learned-from-building-businesses-as-a-technical-solo-founder-5dpb</link>
      <guid>https://dev.to/moboudra/lessons-learned-from-building-businesses-as-a-technical-solo-founder-5dpb</guid>
      <description>&lt;p&gt;I've been working on my SaaS projects all by myself over the last four years, and I've had some failures and some success, here are some of the lessons that I've learned!&lt;/p&gt;

&lt;p&gt;Although it may look easy from the outside, doing all the development, marketing, customer service and everything else required to run a business takes a lot of time and effort, but it's not impossible. There are countless examples of highly successful businesses operated by a one-person team.&lt;/p&gt;

&lt;p&gt;Some examples that I know of are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a ref="nofollow" href="https://unicornplatform.com/"&gt;Unicorn Platform ($19k MRR)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a ref="nofollow" href="https://bannerbear.com/"&gt;Bannerbear ($27k MRR)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a ref="nofollow" href="https://nomadlist.com/"&gt;NomadList ($46K MRR)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As far as I know, they're all run by a single person doing all the things, including the development of the product. They're all very open about how they go about things and their blogs are a great source of inspiration!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tame-your-inner-perfectionist"&gt;
  &lt;/a&gt;
  Tame your inner perfectionist
&lt;/h2&gt;

&lt;p&gt;You have to let go of your ego and allow yourself to ship something that might embarrass you.&lt;/p&gt;

&lt;p&gt;Don't get me wrong, I am not talking about shipping a half-assed product or something that doesn't work . The hustle MVP mentality of building something functional in a weekend, and releasing it to see if anyone is desperate enough to buy your product is not sustainable either, there's a middle ground where you can be proud of your product but release with some rough edges.&lt;/p&gt;

&lt;p&gt;For some reason we think that when we release a project to the wild people will start flocking to the signup page, "you build it, they will come" right? but it's never the case, which yeah it is frustrating.&lt;/p&gt;

&lt;p&gt;You've spent all this time building this great but no one knows about it yet, marketing is as important if not more important than the development of the product, so make sure you allocate some time for that.&lt;/p&gt;

&lt;p&gt;In my experience, unless you already have an audience, it's going to be a long time form when you deploy your project to get paid customers that are not your family or buddies, so the earlier you launch that the earlier you can start getting real feedback and iterate on your product.&lt;/p&gt;

&lt;p&gt;Whenever I get the urge to spend a whole day refactoring simple things I ask myself if this will bring more value to the customer, if in the same amount of time that it will take me to refactor this little thing I can provide more value elsewhere I try to do that instead. I know, easier said than done :)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#focus-on-what-energizes-you"&gt;
  &lt;/a&gt;
  Focus on what energizes you
&lt;/h2&gt;

&lt;p&gt;A business needs constant attention and you have to be able to put in the hours, even when you don't want to, the worst thing is having to work in areas that you don't enjoy. Make sure you work on something that uses your strengths as much as possible, this will also give you a competitive advantage against the competition.&lt;/p&gt;

&lt;p&gt;This is the reason why I decided to work on something like &lt;a href="https://geniebot.co"&gt;Genie&lt;/a&gt;, it's a problem that I am passionate about and I can see it evolve in many directions, which excites me and I know will keep me on my toes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#do-it-for-the-right-reasons"&gt;
  &lt;/a&gt;
  Do it for the right reasons
&lt;/h2&gt;

&lt;p&gt;I have realized that all my failed projects had something in common, they were all built for the wrong reasons. I was chasing a trend, trying to take advantage of a growth opportunity, or unconsciously copying someone else's idea.&lt;/p&gt;

&lt;p&gt;When that happens it eventually gets to a point where you don't have the energy to work on it anymore and lose motivation, whenever you start a new project you should ask whether you can see yourself working on this in the next years and if you don't then the idea might not be worth pursuing.&lt;/p&gt;

&lt;p&gt;You have to figure out the right reasons yourself as everyone has different priorities, my reason at the moment is that I'd like to make a living doing what I enjoy doing, so I start from there, and then pick something that can solve a real problem and turn it into a business, and not the other way around.&lt;/p&gt;

&lt;p&gt;It's been proven that most of what makes a business successful is being consistent and relentlessly market and improving your product to solve real problems, so ensuring that you work on something that you'll be able to still enjoy during years is a pretty great indicator of future success.&lt;/p&gt;




&lt;p&gt;I hope you found this insightful! Share if you did :)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I am currently working on &lt;a href="https://geniebot.co"&gt;Genie&lt;/a&gt;, a platform that streamlines the process of building and deploying custom bots.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>technical</category>
      <category>founder</category>
      <category>financial</category>
      <category>independence</category>
    </item>
    <item>
      <title>🛑 Stop Use Of Javascript Like This.</title>
      <author>CTen_A Live</author>
      <pubDate>Thu, 30 Dec 2021 07:51:17 +0000</pubDate>
      <link>https://dev.to/ctenlive/stop-use-of-javascript-like-this-oi9</link>
      <guid>https://dev.to/ctenlive/stop-use-of-javascript-like-this-oi9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hello"&gt;
  &lt;/a&gt;
  Hello
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;1.Use Arrow function instead regular function.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Thanks for Reading.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>＄Tracing Money in Development</title>
      <author>Yusuf Turhan Papurcu</author>
      <pubDate>Thu, 30 Dec 2021 07:26:50 +0000</pubDate>
      <link>https://dev.to/yusufpapurcu/tracing-money-in-development-54dg</link>
      <guid>https://dev.to/yusufpapurcu/tracing-money-in-development-54dg</guid>
      <description>&lt;p&gt;After nearly 1 month, I am here with %40 but noticeable progress. I was so busy so I had a little chances in weeks to develop this fun product. In 1 month I worked less than 10 hours for this project.&lt;/p&gt;

&lt;p&gt;And we have a really basic telegram bot 🎉🎉🎉&lt;/p&gt;

&lt;p&gt;I am saying basic because this telegram bot has 2 commands at all. One command for expense logging and one command for income logging. It works and stores data to supabase. I think thats enough for first step. So before talking about our next steps lets talk about progress some.&lt;/p&gt;

&lt;p&gt;I used &lt;a href="//github.com/go-telegram-bot-api/telegram-bot-api"&gt;&lt;code&gt;go-telegram-bot-api&lt;/code&gt;&lt;/a&gt; as a telegram bot client library. This library is useful enough to create this bot. Also I used &lt;a href="//github.com/supabase/postgrest-go"&gt;&lt;code&gt;postgrest-go&lt;/code&gt;&lt;/a&gt; for implementing supabase. Also with &lt;code&gt;postgrest-go&lt;/code&gt; I can use local postgreSQL for testing. Thats a nice feature.&lt;/p&gt;

&lt;p&gt;For testing I created very basic &lt;code&gt;docker-compose&lt;/code&gt;. Even I didn't write that. I copied from postgrest document :)&lt;/p&gt;

&lt;p&gt;And thats the progress. Oh also I created a logo for this project. You can see it on &lt;a href="https://github.com/tracingmoney"&gt;github organization&lt;/a&gt;. I wrote &lt;code&gt;$&lt;/code&gt; in excalidraw and screenshooted it.&lt;/p&gt;

&lt;p&gt;For next I will do some data science and I will create usage analysis for my expenses. I hope this project can reach its destination.&lt;/p&gt;

</description>
      <category>go</category>
      <category>product</category>
      <category>opensource</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
