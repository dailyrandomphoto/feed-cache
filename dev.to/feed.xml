<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>CSS Tutorial - How to Make a Page Responsive using CSS Media Queries</title>
      <author>Kingsley Ubah</author>
      <pubDate>Thu, 09 Sep 2021 15:38:53 +0000</pubDate>
      <link>https://dev.to/ubahthebuilder/css-tutorial-how-to-make-a-page-responsive-using-css-media-queries-2fih</link>
      <guid>https://dev.to/ubahthebuilder/css-tutorial-how-to-make-a-page-responsive-using-css-media-queries-2fih</guid>
      <description>&lt;p&gt;This tutorial is a follow up to the  &lt;a href="https://ubahthebuilder.tech/css-tutorial-build-a-landing-page-using-just-html-and-css-featuring-flexbox-and-grid"&gt;first tutorial&lt;/a&gt; . You might want to first check that one out.&lt;/p&gt;

&lt;p&gt;In this tutorial, we will be adding a footer to our landing page:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CWigW6bZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630769823143/cxDs8ZuMh.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CWigW6bZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630769823143/cxDs8ZuMh.gif" alt="Footer Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will also make our page more responsive by styling it to tablet and mobile devices&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M5DwUZiG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630769884257/kwXhmFlCA.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M5DwUZiG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630769884257/kwXhmFlCA.gif" alt="Tablet image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y8v4knpF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630769975163/TsE6kPWb0.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y8v4knpF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630769975163/TsE6kPWb0.gif" alt="Mobile Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lets dive in!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#implementing-the-footer-section"&gt;
  &lt;/a&gt;
  Implementing the Footer Section
&lt;/h3&gt;

&lt;p&gt;The final part of our landing page building process is the footer section. The footer section will comprise of a copyright text, three navigation links to other parts and finally a group of social media icons from Font Awesome.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--52DQOJ6y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630770041756/DtWzNdg4-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--52DQOJ6y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630770041756/DtWzNdg4-.png" alt="footer3.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is the HTML Markup for the footer section of the page&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;footer&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container grid-3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"copyright"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Skilllz&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Copyright &lt;span class="ni"&gt;&amp;amp;copy;&lt;/span&gt; 2021&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"links"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"outline"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Home&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"outline"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Tutors&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"outline"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Categories&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profiles"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fab fa-twitter fa-2x"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fab fa-instagram fa-2x"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fab fa-facebook fa-2x"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fab fa-whatsapp fa-2x"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The footer section will look unattractive without any styling&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CHZkgF_g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630770113479/1lp13EK9fO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CHZkgF_g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630770113479/1lp13EK9fO.png" alt="footer-1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#applying-styling-to-the-footer"&gt;
  &lt;/a&gt;
  Applying Styling to the Footer
&lt;/h3&gt;

&lt;p&gt;First, we need to set the background colour for the footer section as well as the color for all links to white&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Add padding around the footer as well */&lt;/span&gt;

&lt;span class="nt"&gt;footer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;purple&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Sets all link texts to white and puts margin to the left and right */&lt;/span&gt;

&lt;span class="nt"&gt;footer&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the footer will look like this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n1zdg5WE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630770186260/5TKf-E8jfG.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n1zdg5WE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630770186260/5TKf-E8jfG.png" alt="footer3.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you check the first gif, you will notice that when I hover over any of the links inside of the footer, its color changes to a lighter shade of purple and a border also appears below it.&lt;/p&gt;

&lt;p&gt;We achieve this using a &lt;code&gt;:hover&lt;/code&gt; selector:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;footer&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#9867C5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#9867C5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's all for the footer!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-media-queries"&gt;
  &lt;/a&gt;
  Setting Media Queries
&lt;/h3&gt;

&lt;p&gt;It's now time to make our application more responsive. As we know, majority of users may be viewing an app or site from a tablet or mobile phone. Hence, it is very important to make the site's layout responsive to improve the user experience.&lt;/p&gt;

&lt;p&gt;In CSS, we will define media queries which sets breakpoints for the various screen widths of different devices and maps a set of CSS rules for each device.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#designing-for-tablets-and-under"&gt;
  &lt;/a&gt;
  Designing for Tablets and under
&lt;/h3&gt;

&lt;p&gt;First, we will optimize our site's layout for users viewing from a tablet. In our CSS, we define the following style:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Tablets and Under */&lt;/span&gt;

&lt;span class="k"&gt;@media&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;768px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.grid&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="nc"&gt;.grid-3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Initially we had set two columns for the &lt;code&gt;.grid&lt;/code&gt; class and 3 columns for the &lt;code&gt;.grid-3&lt;/code&gt; class. Now, we want to make sure that all grid items take up just a single line.&lt;/p&gt;

&lt;p&gt;As a result, our form and image which was formerly displayed side-by-side (horizontally) will now be displayed one after the other (vertically).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9cHWeKzB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630770716986/oztNf_Ufr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9cHWeKzB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630770716986/oztNf_Ufr.png" alt="resp1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, we apply the following styles&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Align all text to the center. This will move all text, including form centrally */&lt;/span&gt;

&lt;span class="nc"&gt;.showcase&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* This resets the width of the image container and adds margin space to the left */&lt;/span&gt; 

&lt;span class="nc"&gt;.image&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c"&gt;/* Changes the service sections from side-by-side orientation to each taking its own line. Aligns text to the center */&lt;/span&gt;

&lt;span class="nc"&gt;.stats&lt;/span&gt; &lt;span class="nc"&gt;.flex&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.stats&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c"&gt;/* Makes sure each stat section does not exceed the width of parent */&lt;/span&gt;

&lt;span class="nc"&gt;.stat&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* (re)Moves the circle to the center of the card */&lt;/span&gt;

&lt;span class="nc"&gt;.circle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;purple&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;90px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;270px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;-moz-border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;-webkit-border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;90px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and voila!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RgM4HORg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630770871326/nuXnYZKpf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RgM4HORg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630770871326/nuXnYZKpf.gif" alt="ezgif.com-gif-maker (3).gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#designing-for-mobile-devices"&gt;
  &lt;/a&gt;
  Designing for Mobile devices
&lt;/h3&gt;

&lt;p&gt;Most people view a site from a mobile device which typically has the smallest screen size of all devices. Thus, making the page responsive to smaller screens is of utmost importance.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Mobile devices */&lt;/span&gt;

&lt;span class="k"&gt;@media&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.navbar&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First, we increase the height of our navigation area. Since it will be viewed from a smaller screen, we want the area more accentuated for the user.&lt;/p&gt;

&lt;p&gt;Then, we define the following styles&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Changes the alignment. The logo title stays at the top, the nav links will be below it */&lt;/span&gt;

&lt;span class="nc"&gt;.navbar&lt;/span&gt; &lt;span class="nc"&gt;.flex&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* When hovered on, retain white color and change border to black */&lt;/span&gt;

  &lt;span class="nc"&gt;.navbar&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Set light purple background on nav links, make it a bit round and add some spacing */&lt;/span&gt;

  &lt;span class="nc"&gt;.navbar&lt;/span&gt; &lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#9867C5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Align text to center */&lt;/span&gt;

  &lt;span class="nc"&gt;.showcase&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Reduce font size */&lt;/span&gt;

&lt;span class="nc"&gt;.little-info&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;13px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Reduce image width */&lt;/span&gt;

  &lt;span class="nc"&gt;.image&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;350px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.stat&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Move circle once again */&lt;/span&gt;

&lt;span class="nc"&gt;.circle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;purple&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;90px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;150px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;-moz-border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;-webkit-border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;90px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and voila!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Mb41lRS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630771418110/ka1WV3JKG.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Mb41lRS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630771418110/ka1WV3JKG.gif" alt="ezgif.com-gif-maker (4).gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h3&gt;

&lt;p&gt;Responsive web design is arguably one of the most important design principles in web development. We have to always consider the fact that our site will be viewed from various kinds of devices with different screen resolutions. Optimizing our site for different screens will improve the user experience.&lt;/p&gt;

&lt;p&gt;In this tutorial, we have designed the footer of our simple landing page using CSS and then gone on to make them responsive.&lt;/p&gt;

&lt;p&gt;The full code for this  project can be gotten from  this  &lt;a href="https://github.com/KingsleyUbah/Skilllz"&gt;GitHub&lt;/a&gt;  repository.&lt;/p&gt;

&lt;p&gt;I hope you learned something useful from this tutorial. If you have any suggestions, reach out to me on  &lt;a href="https://github.com/KingsleyUbah/Skilllz"&gt;Twitter&lt;/a&gt; . &lt;/p&gt;

&lt;p&gt;Thanks for following along and see you soon.&lt;/p&gt;

</description>
      <category>css</category>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>HarperDB is Collapsing the Stack: Introducing Custom Functions</title>
      <author>Jacob Cohen</author>
      <pubDate>Thu, 09 Sep 2021 15:35:17 +0000</pubDate>
      <link>https://dev.to/jacob_b_cohen/harperdb-is-collapsing-the-stack-introducing-custom-functions-3j4k</link>
      <guid>https://dev.to/jacob_b_cohen/harperdb-is-collapsing-the-stack-introducing-custom-functions-3j4k</guid>
      <description>&lt;p&gt;Introducing the newest innovation from HarperDB: &lt;a href="https://harperdb.io/docs/custom-functions/"&gt;HarperDB Custom Functions&lt;/a&gt;. With the release of HarperDB 3.1 users are able to define their own API endpoints within HarperDB. What does that mean for you? &lt;strong&gt;&lt;em&gt;HarperDB grows from a distributed database to a distributed application development platform with integrated persistence - one that can serve as a single solution for all of your backend needs&lt;/em&gt;&lt;/strong&gt;. We’re collapsing the stack!&lt;/p&gt;

&lt;p&gt;Alright, alright, what’s the big deal? Up until 3.1, in order to power an application you would need to deploy and host your backend API code on additional servers, then have them call out to HarperDB for database needs. This is a pretty typical software stack, but at HarperDB, we’re far from typical. We’re constantly innovating and changing the game. Custom Functions enable developers to build their entire application backend in one place. Oh yeah, and it’s faster, significantly faster! Traditional architectures naturally introduce latency as data moves across multiple servers through a local network or potentially even the Internet. HarperDB is collapsing the stack onto a single server, which eliminates any and all network latency. This frees up headroom for achieving higher throughput from a single server. Capitalizing on &lt;a href="https://harperdb.io/blog/reduce-latency-geo-distributed-databases/"&gt;HarperDB’s already powerful horizontal scalability&lt;/a&gt;, this means you can now distribute &lt;strong&gt;both&lt;/strong&gt; your APIs and your database to the edge.&lt;/p&gt;

&lt;p&gt;For those familiar with modern cloud architectures, Custom Functions are just like AWS Lambda functions. For those familiar with relational databases, they’re like Stored Procedures. You define your logic and choose when to execute it. At a high level it’s as simple as that! They’re low maintenance and easy to develop. You can develop HarperDB Custom Functions in the Studio or in your own IDE and Version Management System. HarperDB Custom Functions can be maintained like any other development project, in fact, the sample Custom Functions provided in the Studio are generated from our public GitHub repository. That means you can develop, maintain, and deploy your HarperDB Custom Functions code just like any other development project, so you don’t have to deviate from your existing development practices. That’s great news! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LAU7d8tX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6vte11j2ulbpvs7c2x28.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LAU7d8tX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6vte11j2ulbpvs7c2x28.png" alt="HarperDB Studio Functions Editor"&gt;&lt;/a&gt;&lt;em&gt;HarperDB Studio Functions Editor&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;What makes Custom Functions so powerful? They leverage the full power of &lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; and &lt;a href="https://www.fastify.io/"&gt;Fastify&lt;/a&gt;. HarperDB Custom Functions projects are effectively just Node.js projects, which means you can leverage the npm ecosystem, opening the doors to fast and efficient development. Fastify serves as the basis for the webserver, which means you can define and build a fully functional REST API with all the bells and whistles you’d expect. The key differentiator is that these Fastify routes have direct access to HarperDB core methods, bypassing the HarperDB API, and instead interacting directly with HarperDB on the same machine. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cC8SrHDt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x279wa5z0ke9ka9hnf27.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cC8SrHDt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x279wa5z0ke9ka9hnf27.png" alt="WebStorm IDE with HarperDB Functions Project"&gt;&lt;/a&gt;&lt;em&gt;WebStorm IDE with HarperDB Functions Project&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;By collapsing the stack, we deliver unparalleled performance and efficiency out of the box. Let’s take a look at some different ways Custom Functions can be used. I’m not going to cover everything here, in fact, I’m sure there are plenty of options that I haven’t even thought of.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Integrate with third-party apps and APIs&lt;/strong&gt;: Seamlessly connect third-party/external data with data stored in HarperDB within a single function.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Utilize third-party authentication&lt;/strong&gt;: Tightly integrate with third-party application providers to validate user requests within your API.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Define your own database functionality&lt;/strong&gt;: HarperDB is always adding features, but let’s say there’s a feature you need that’s missing. Build a HarperDB Custom Function to solve the problem. For example, if you need to enforce row-level security based on a user account, write a function! &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Serve a website&lt;/strong&gt;: Custom Functions can serve static content and serve as backend APIs, which means you can fully power a website or web app all with HarperDB.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are just some of the ideas we’re kicking around with HarperDB Custom Functions. We’ll be hosting a &lt;a href="https://harperdb.io/harperdb-custom-functions-event/"&gt;livestream event next week (September 14th at 6pm MT)&lt;/a&gt; where you can watch a live product tour! We look forward to hearing what the HarperDB community can build. Please share any ideas you have in the comments, I’m eager to hear what the community has to say! &lt;/p&gt;




&lt;p&gt;Since this will be the initial release of HarperDB Custom Functions, please let us know what else you’d like to see in future releases. You can submit your ideas to our feedback board here: &lt;a href="https://feedback.harperdb.io/"&gt;feedback.harperdb.io&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>database</category>
      <category>showdev</category>
      <category>node</category>
      <category>serverless</category>
    </item>
    <item>
      <title>Migrating DigitalOcean Spaces to an Amazon S3 Bucket</title>
      <author>Francesco Ciulla</author>
      <pubDate>Thu, 09 Sep 2021 15:28:28 +0000</pubDate>
      <link>https://dev.to/tinystacks/migrating-digitalocean-spaces-to-an-amazon-s3-bucket-3e27</link>
      <guid>https://dev.to/tinystacks/migrating-digitalocean-spaces-to-an-amazon-s3-bucket-3e27</guid>
      <description>&lt;p&gt;DigitalOcean Spaces provides Amazon S3-compatible object storage with a simplified pricing model. However, you may at some point find that you need to move your storage off of Spaces and onto Amazon S3. In this post, I'll show how to use the tool  &lt;a href="https://rclone.org/"&gt;Rclone&lt;/a&gt; to move your data from Spaces to S3 quickly and easily. &lt;/p&gt;

&lt;p&gt;Original Article By Jay Allen&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#spaces-vs-amazon-s3"&gt;
  &lt;/a&gt;
  Spaces vs. Amazon S3
&lt;/h1&gt;

&lt;p&gt;Built on the object storage system Ceph, Spaces provides a competitive storage alternative to S3. The base Spaces plan charges a flat $5/month for up to 250GiB of storage and up to 1TiB of data transfer out. That can represent a nice cost saving over Amazon S3, where only the first GiB of data transfer to the Internet is free. And since Spaces is fully S3-compatible, SDK code that works with S3 will work with a Spaces account. Spaces even offers a Content Delivery Network (CDN) at no additional cost. &lt;/p&gt;

&lt;p&gt;However, there may be times when you need to bring your data in Spaces over to Amazon S3: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You have data security requirements that are well met by features such as  &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/privatelink-interface-endpoints.html"&gt;AWS PrivateLink for S3&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;You need your data in more regions than DigitalOcean supports (five regional endpoints as opposed to AWS's 24), or need to store data in a region supported by AWS to comply with data protection laws&lt;/li&gt;
&lt;li&gt;You find that transfer from S3 to other AWS features is faster than transfer from Spaces for your scenario&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whatever the reason, it would be great if you could migrate your data over &lt;em&gt;en masse&lt;/em&gt; without having to roll your own script. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#moving-from-spaces-to-s3-with-rclone"&gt;
  &lt;/a&gt;
  Moving from Spaces to S3 with Rclone
&lt;/h1&gt;

&lt;p&gt;Fortunately, the  &lt;a href="https://rclone.org/"&gt;Rclone&lt;/a&gt;  tool makes this easy. Rclone is a self-described Swiss army knife for storage that supports  &lt;a href="https://rclone.org/#providers"&gt;over 40 different cloud storage products and storage protocols&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Let's walk through this to show just how easy it is. For this walkthrough, I've created a Space on DigitalOcean that contains some random binary files.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UZPA7HI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630381724597/NxwxFeZ62.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UZPA7HI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630381724597/NxwxFeZ62.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We'll want to transfer this into an Amazon S3 bucket in our AWS account. I've created the following bucket for this purpose: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HuLIzgAa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630379953904/uPlFwfb0G.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HuLIzgAa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630379953904/uPlFwfb0G.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-aws-cli-and-rclone"&gt;
  &lt;/a&gt;
  Installing AWS CLI and Rclone
&lt;/h2&gt;

&lt;p&gt;Rclone will make use of  &lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2.html"&gt;the AWS CLI&lt;/a&gt;. If you don't have it installed, install and  &lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html"&gt;configure it with an access key and secret key&lt;/a&gt;  that has access to your AWS account. &lt;/p&gt;

&lt;p&gt;You'll also need to install Rclone. On Linux/Mac/BSD systems, you can run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl https://rclone.org/install.sh | sudo bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or, you can install using Homebrew:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew install rclone
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On Windows systems,  &lt;a href="https://rclone.org/downloads/"&gt;download and install the appropriate executable&lt;/a&gt; from the Rclone site. Make sure to add rclone to your system's PATH afterward so that the subsequent commands in this tutorial work. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#obtaining-your-spaces-connection-information"&gt;
  &lt;/a&gt;
  Obtaining Your Spaces Connection Information
&lt;/h2&gt;

&lt;p&gt;To use Rclone to perform the copy, you'll need to create an rclone.conf file that enables Rclone to connect to both your AWS S3 bucket and to your Spaces space. &lt;/p&gt;

&lt;p&gt;If you've set up your AWS CLI, you already have your access key and secret key for AWS. You will need two pieces of information from Spaces: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The URL to the endpoint for your Space; and &lt;/li&gt;
&lt;li&gt;An access key and secret key from DigitalOcean provides access to your Space. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Obtaining your Spaces endpoint is easy: just navigate to your Space in DigitalOcean, where you'll see the URL for your Space. The endpoint you'll use is the regional endpoint without the name of your space (the part highlighted in the red rectangle below): &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ITSbUvAn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630384029277/HuogEA09h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ITSbUvAn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630384029277/HuogEA09h.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To create an access key and secret key for Spaces,  &lt;a href="https://cloud.digitalocean.com/account/api/tokens"&gt;navigate to the API page on DigitalOcean&lt;/a&gt;. Underneath the section Spaces access keys, click &lt;strong&gt;Generate New Key&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--igObh4pK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630383067497/iBV5PKeim.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--igObh4pK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630383067497/iBV5PKeim.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Give your key a name and then click the blue checkmark next to the name field. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6dGw4P_f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630383127879/xNoPd7n5Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6dGw4P_f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630383127879/xNoPd7n5Q.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Spaces will generate an access key and a secret token for you, both listed under the column &lt;strong&gt;Key&lt;/strong&gt;. (The actual values in the screenshot below have been blurred for security reasons.) Leave this screen as is - you'll be using these values in just a minute. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hWwIkJjZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630383240015/TgdDXwN-C.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hWwIkJjZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630383240015/TgdDXwN-C.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configure-rcloneconf-file-and-perform-copy"&gt;
  &lt;/a&gt;
  Configure rclone.conf File and Perform Copy
&lt;/h2&gt;

&lt;p&gt;Now you need to tell Rclone how to connect to each of the services. To do this, create an rclone.conf file in &lt;code&gt;~/.config/rclone/rclone.conf&lt;/code&gt; (Linux/Mac/BSD) or in &lt;code&gt;C:\Users\&amp;lt;username&amp;gt;\AppData\Roaming\rclone\rclone.conf&lt;/code&gt; (Windows). The file should use the following format:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[s3]
type = s3
env_auth = false
access_key_id = AWS_ACCESS_KEY
secret_access_key = AWS_SECRET
region = us-west-2
acl = private

[spaces]
type = s3
env_auth = false
access_key_id = SPACES_ACCESS_KEY
secret_access_key = SPACES_SECRET
endpoint = sfo3.digitaloceanspaces.com
acl = private
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Replace &lt;code&gt;AWS_ACCESS_KEY&lt;/code&gt; and &lt;code&gt;AWS_SECRET&lt;/code&gt; with your AWS credentials, and &lt;code&gt;SPACES_ACCESS_KEY&lt;/code&gt; and &lt;code&gt;SPACES_SECRET&lt;/code&gt; with your Spaces credentials. Also make sure that: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;s3.region&lt;/code&gt; lists the correct region for the bucket you plan to copy data into; &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;spaces.endpoint&lt;/code&gt; is pointing to the correct Spaces region. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To test your connection to Amazon S3, save this file and, at a command prompt, type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;rclone lsd s3:
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you configured everything correctly, you should see a list of your Amazon S3 buckets. &lt;/p&gt;

&lt;p&gt;Next, test your connection to Spaces with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;rclone lsd spaces:
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see a list of all Spaces you have created in that region. &lt;/p&gt;

&lt;p&gt;If everything checks out, go ahead and copy all of your data from Spaces to Amazon S3 using the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;rclone sync spaces:jayallentest s3:jayallen-spaces-test
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;(Make sure to replace the Space name and S3 bucket name with the values appropriate to your accounts.)&lt;/p&gt;

&lt;p&gt;The Rclone command line won't give you any direct feedback even if the operation is successful. However, once it returns, you should see all of the data from your Spaces account now located in your Amazon S3 bucket: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H7GJTbMW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630385103210/_EyRkr51L.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H7GJTbMW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630385103210/_EyRkr51L.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And that's it! With just a little setup and configuration, you can now easily transfer data from DigitalOcean Spaces to Amazon S3. &lt;/p&gt;

</description>
      <category>aws</category>
      <category>devops</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Quick security wins for your Next.js app</title>
      <author>Victor Ocnarescu</author>
      <pubDate>Thu, 09 Sep 2021 15:17:29 +0000</pubDate>
      <link>https://dev.to/victorocna/quick-security-wins-for-your-next-js-app-3l23</link>
      <guid>https://dev.to/victorocna/quick-security-wins-for-your-next-js-app-3l23</guid>
      <description>&lt;p&gt;Let's secure your next Next.js app (pun intended) in 3 minutes or less using HTTP response headers.&lt;/p&gt;

&lt;p&gt;I will not go into details about every HTTP header used below. This &lt;a href="https://infosec.mozilla.org/guidelines/web_security"&gt;Web Security Cheat Sheet from MDN&lt;/a&gt; is a great place to start learning about these.&lt;/p&gt;

&lt;p&gt;However, I will point out that these headers provide some form of protection against cross-site scripting (XSS) vulnerabilities.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-custom-headers"&gt;
  &lt;/a&gt;
  Using custom headers
&lt;/h2&gt;

&lt;p&gt;Let's see some code!&lt;/p&gt;

&lt;p&gt;First, let's create a new file &lt;code&gt;headers.js&lt;/code&gt; with every header used in the app. This way we'll keep our project structure clean and DRY.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;X-DNS-Prefetch-Control&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;on&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Strict-Transport-Security&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;max-age=63072000; includeSubDomains; preload&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Server&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apache&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// phony server value&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;X-Content-Type-Options&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;nosniff&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;X-Frame-Options&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sameorigin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;X-XSS-Protection&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1; mode=block&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Referrer-Policy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;same-origin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Permissions-Policy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;geolocation=*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// allow specified policies here&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have a single file for all our HTTP headers, we need to include them in the &lt;code&gt;next.config.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./headers&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// append this at the bottom of your next.config.js file&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/(.*)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will apply the defined HTTP response headers to all routes in your application, &lt;a href="https://nextjs.org/docs/advanced-features/security-headers"&gt;as seen in this Vercel guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I have included these security headers in &lt;a href="https://github.com/victorocna/awesome-react-starter"&gt;my Next.js starter template on Github&lt;/a&gt;. It has plenty of cool features I hope you'll like.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing thoughts
&lt;/h2&gt;

&lt;p&gt;You can scan your app for possible vulnerabilities using &lt;a href="https://securityheaders.com"&gt;this awesome tool&lt;/a&gt;. And if you have a Next.js app and forgot to secure it, now is the perfect time.&lt;/p&gt;

&lt;p&gt;Something missing? Disagree with something from the article? I would love to hear your opinion in the comment section below.&lt;/p&gt;

</description>
      <category>react</category>
      <category>nextjs</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How Armory Makes Spinnaker Better</title>
      <author>Michael Bogan</author>
      <pubDate>Thu, 09 Sep 2021 14:59:25 +0000</pubDate>
      <link>https://dev.to/mbogan/how-armory-makes-spinnaker-better-189g</link>
      <guid>https://dev.to/mbogan/how-armory-makes-spinnaker-better-189g</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Successful teams innovate often and deliver frequently. But because they move so fast, one of their challenges is ensuring that the rapid pace of releases doesn’t break their product. As more and more features are added, the risk of broken releases increases. &lt;/p&gt;

&lt;p&gt;As a solution, DevOps teams often look to &lt;a href="https://spinnaker.io/"&gt;Spinnaker&lt;/a&gt;—an open source deployment tool that helps teams to deploy quickly and consistently. But there’s an even more powerful solution available. &lt;a href="https://www.armory.io/"&gt;Armory&lt;/a&gt;—which is built on top of Spinnaker—gives teams all the benefits of Spinnaker, but adds mission-critical feature extensions and enterprise-grade stability.&lt;/p&gt;

&lt;p&gt;In this article, we'll see how Armory's enhancement of Spinnaker ensures that modern applications can be deployed safely.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#application-deployment-struggles"&gt;
  &lt;/a&gt;
  Application Deployment Struggles
&lt;/h2&gt;

&lt;p&gt;The first challenge to achieving a successful product rollout is understanding that unit, integration, and performance tests in isolated environments don’t always guarantee a successful release—and won’t completely prevent unforeseen issues in production. Issues can &lt;em&gt;still&lt;/em&gt; occur due to reasons such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Real-life user interactions and transactions can’t be emulated precisely in isolated environments, resulting in edge cases being missed in production.&lt;/li&gt;
&lt;li&gt;Third-party client applications that integrate with the developed API often can’t be tested for functionality and performance.&lt;/li&gt;
&lt;li&gt;Small—but critical—differences between the testing and production environments, such as IP addresses, configuration settings, firewall rules, and more can cause the application to fail.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Over time, robust deployment patterns have evolved to provide a safe way to address these above challenges. These include deployment models like blue-green, rolling, and canary, as shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nuFk9xuY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/out202o1w0hfe997r0ac.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nuFk9xuY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/out202o1w0hfe997r0ac.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A &lt;strong&gt;Blue-Green&lt;/strong&gt; deployment creates a fully instantiated clone of the application stack in the target environment. During the release, the load balancer is simply reconfigured to redirect all application traffic to this new version. Rollback is fast and simple in a blue-green deployment, as only the load balancer needs reconfiguration.&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;Rolling deployment&lt;/strong&gt; deploys progressively with automated validation and health checks in each step. In a rolling deployment model, the new application services are added to the shared load balancer and the traffic will start to be shared between the old and new applications. Automated validation in each new replica helps determine if the release is still on track or if rollback is necessary.&lt;/li&gt;
&lt;li&gt;Finally, in a &lt;strong&gt;Canary deployment&lt;/strong&gt;, a new application replica is added to the load balancer, and the load balancer is configured to pass only a specific percentage of the application traffic to the new replica. Once configured, a full analysis of the traffic volume, response times, or activity on the replica is performed. If the analysis is successful, this deployment generally continues as a Rolling deployment.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Deciding which of the above deployment models is the best for your team depends on the complexity of the application, the risk of degraded performance or outage, and your team’s capability to implement full analysis versus simple post-deployment tests.&lt;/p&gt;

&lt;p&gt;In general, however, a sound deployment infrastructure and process should be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Controlled&lt;/strong&gt;: This involves partially deploying an application, validating each step of that deployment, and incrementally completing that deployment or safely rolling back. Such control will reduce the impact if the deployment fails.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Simple&lt;/strong&gt;: Small deployment code size reduces the risk of issues during deployment. By decreasing the likelihood of introducing bugs, confidence in the deployment process increases.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Robust&lt;/strong&gt;: The deployment infrastructure should be a secure, stable, and scalable solution.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-spinnaker"&gt;
  &lt;/a&gt;
  What is Spinnaker?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://spinnaker.io/"&gt;Spinnaker&lt;/a&gt; is a popular open source, dedicated Continuous Deployment (CD) tool that can provide fast, safe, and repeatable application deployment of any size. It was created and open-sourced by Netflix and has since had contributions made by industry giants like Google.&lt;/p&gt;

&lt;p&gt;As a specialized CD tool, Spinnaker simplifies the integration with your cloud infrastructure by letting you directly manage the clusters, server groups, load balancers, and applications. Spinnaker natively implements the industry-standard deployment patterns described above, including a full deployment flow with validation steps, manual approval, and parallel deployments.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dz8Gkw5i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fjjup26bcblw6ffpushj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dz8Gkw5i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fjjup26bcblw6ffpushj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sample deployment pipeline in Spinnaker&lt;/p&gt;

&lt;p&gt;Unlike Continuous Integration (CI) tools—which focus on the pre-deployment build phase—Spinnaker focuses on deployment capability. It expects the application to be already compiled, tested, and packaged in the build phase with CI tools such as Jenkins, CircleCI, Bamboo, and so on.&lt;/p&gt;

&lt;p&gt;By specializing in only the deployment phase, Spinnaker provides better control of this process and ensures a better outcome for complex deployments. (For a more detailed comparison, check out this analysis of &lt;a href="https://www.armory.io/blog/spinnaker-over-jenkins-x-for-enterprise/"&gt;Spinnaker over Jenkins X for Enterprise&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;As a deployment tool, Spinnaker integrates as a simple step in your CI/CD deployment pipeline and can be triggered based on Git events. The complexity of the build phase, which includes packaging and testing the application, is left to the CI tool. Meanwhile, the focus of Spinnaker is to provide a fully controlled deployment process, ensuring strict validation between each stage of the deployment and application release.&lt;/p&gt;

&lt;p&gt;Finally, with native support for multi-cloud environments such as AWS, GCE, Azure, and also Kubernetes, Spinnaker offers simple configuration of the services and deployment steps as well as secret management for your application.&lt;/p&gt;

&lt;p&gt;It’s clear that Spinnaker has a lot to offer, but there are certain use cases where Spinnaker &lt;em&gt;alone&lt;/em&gt;—without enterprise-grade enhancements—may not be a good fit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#limitations-of-spinnaker"&gt;
  &lt;/a&gt;
  Limitations of Spinnaker
&lt;/h2&gt;

&lt;p&gt;Open source projects can be powerful options, but they rely on community support and engagement. Compared to a commercial solution, &lt;strong&gt;there’s no guarantee of timely assistance when things go wrong&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If your organization’s infrastructure is mainly on-premise and not using Kubernetes or cloud-native tools, vanilla Spinnaker could be &lt;strong&gt;lacking the tools needed to manage deployments&lt;/strong&gt;. In this case, you would need to build those tools yourself.&lt;/p&gt;

&lt;p&gt;If your business is subject to strict compliance regulations, Spinnaker might &lt;strong&gt;lack the advanced security controls&lt;/strong&gt; needed for your deployment pipeline configuration. &lt;/p&gt;

&lt;p&gt;And finally, although Spinnaker has a strong Role-based Access Control (RBAC) feature, power users have a wide variety of permissions and can write pipeline configurations alone and run those without review and approval. They can even overwrite anyone else’s configuration without oversight. This &lt;strong&gt;lack of fine-grained permissions&lt;/strong&gt; can be an issue for organizations where one team is responsible for managing security and the application team is responsible for deployment.&lt;/p&gt;

&lt;p&gt;For companies in need of a solution to these limitations, that’s where Armory comes in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#armorypowered-spinnaker"&gt;
  &lt;/a&gt;
  Armory-powered Spinnaker
&lt;/h2&gt;

&lt;p&gt;Armory is a feature-packed, enterprise-grade, reliable deployment solution with Spinnaker at its core. Armory is suitable for organizations that have hit the limitations of Spinnaker or are looking for an easier way to maintain Spinnaker.&lt;/p&gt;

&lt;p&gt;As Armory is built on top of Spinnaker, it already includes all of Spinnaker's main features, while addressing some critical limitations.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--by6YOI3A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lowry030bar402k6v4zq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--by6YOI3A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lowry030bar402k6v4zq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.armory.io/docs/overview/architecture/"&gt;Armory architecture&lt;/a&gt; expands on Spinnaker by using external agents and a custom halyard configuration module. Its bundled-in set of microservices bring robust and resilient tools which enable users to manage deployments more easily than with Spinnaker alone. This allows it to make better use of the Kubernetes resources and to scale in several dimensions like the number of users, application pipelines, rate of deployments, or cluster target size. When it comes to Kubernetes cluster deployment and management, Armory Spinnaker can manage clusters spanning thousands of nodes.&lt;/p&gt;

&lt;p&gt;With Armory, you can centrally manage all of your Spinnaker pipelines as code by using the &lt;a href="https://docs.armory.io/docs/spinnaker-user-guides/using-dinghy/"&gt;Armory Pipelines as Code&lt;/a&gt; feature. This feature decreases the time to set up a new pipeline in Spinnaker and provides the ability for review and change management of the pipeline configuration itself. For businesses limited by vanilla Spinnaker's lack of advanced security controls, the pipeline configuration management afforded by Armory is a god-send. This feature also integrates with GitHub to let you track all the code changes made to the pipeline configuration. By using Configuration as Code in GitHub, you’ll benefit from all version control systems patterns such as: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Enforcement of branching and merging only via approved pull requests, bringing oversight of any changes made to the deployment pipelines by another person.&lt;/li&gt;
&lt;li&gt;Enforcement of syntax and security tests performed on the configuration code before the merge. (Note that this is different from and complementary to the Armory Policy Engine.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;a href="https://www.armory.io/armory-enterprise-spinnaker/policy-engine/"&gt;Armory Policy Engine&lt;/a&gt; extends the Spinnaker RBAC framework and allows enterprises to balance deployment velocity with control over the delivery process. Armory implements the policy using hooks during the pipeline configuration and execution. The Policy Engine helps to create a &lt;a href="https://www.armory.io/blog/deployment-policies-with-spinnaker/"&gt;division of ownership&lt;/a&gt; between the app owners (owning the pipeline configuration and deployments) with the compliance owners (ensuring the security of the organization). This addresses the compliance limitation of vanilla Spinnaker by allowing Spinnaker users to maintain their deployment pipelines within the guardrails defined by the security team.&lt;/p&gt;

&lt;p&gt;There’s a &lt;a href="https://www.armory.io/armory-enterprise-spinnaker/terraform-integration/"&gt;Terraform plugin&lt;/a&gt; available for Armory to manage additional cloud and on-prem infrastructure. The terraform plugin is simply another type of Task that Spinnaker can execute, and Armory uses a wide range of locations for the terraform manifests:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7EDk_Yh---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lk53tzymgjmh6dhet2bf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7EDk_Yh---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lk53tzymgjmh6dhet2bf.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Armory Terraform manifest locations&lt;/p&gt;

&lt;p&gt;Finally, Armory provides certified releases and paid support (from Development to Enterprise level support) to ensure that the system is always stable and operational.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementing-armory"&gt;
  &lt;/a&gt;
  Implementing Armory
&lt;/h2&gt;

&lt;p&gt;There are three ways you can start using Armory in your organization:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;An &lt;strong&gt;on-site model&lt;/strong&gt; where you deploy armory within your environment and maintain it. This would be suitable for companies with a strict perimeter security like an on-prem setup and have the resources and expertise to support it.&lt;/li&gt;
&lt;li&gt;An &lt;strong&gt;on-site managed enterprise service&lt;/strong&gt; where Armory’s professional technical team will install and maintain the Spinnaker/Armory setup for you. This would be suitable for organizations looking to gain expertise with Armory while not wanting to manage it alone.&lt;/li&gt;
&lt;li&gt;Armory Deployments (Multi-cloud and Hybrid) let you deploy your workloads to major cloud providers and on-prem data centers, using cloud drivers that connect Spinnaker to all of your deployment targets.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Spinnaker is a great choice for CD, and Armory extends Spinnaker's already-robust deployment features to make it even better. To try out Armory, you can install Armory Enterprise for Spinnaker in a Lightweight Kubernetes environment using an open source command-line tool called &lt;a href="https://docs.armory.io/docs/installation/minnaker/"&gt;Minnaker&lt;/a&gt;. You can even install Armory to get &lt;a href="https://www.armory.io/blog/armory-enterprise-install-in-10-minutes/"&gt;up and running in 10 minutes&lt;/a&gt;. For the more adventurous, you can &lt;a href="https://www.armory.io/demo-request/"&gt;request a demo&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>devops</category>
    </item>
    <item>
      <title>Should I allow my teammates to make mistakes, so that they can learn from them?</title>
      <author>Felipe Armoni</author>
      <pubDate>Thu, 09 Sep 2021 14:55:40 +0000</pubDate>
      <link>https://dev.to/komyg/should-i-allow-my-teammates-to-make-mistakes-so-that-they-can-learn-from-them-51fi</link>
      <guid>https://dev.to/komyg/should-i-allow-my-teammates-to-make-mistakes-so-that-they-can-learn-from-them-51fi</guid>
      <description>&lt;p&gt;Hi, I am working to become a tech lead at my company and my manager posed me this question: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;If I become a tech lead, should I allow my teammates to make minor mistakes so that they can learn from them?&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;His reasoning was that people will learn much more from a mistake than from direct guidance, and that we could take on the cost of a small mistake, so that the team can grow.&lt;/p&gt;

&lt;p&gt;What are your thoughts on this?&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>leadership</category>
      <category>help</category>
      <category>softskills</category>
    </item>
    <item>
      <title>Pure CSS Accrodion</title>
      <author>Tamer</author>
      <pubDate>Thu, 09 Sep 2021 14:47:15 +0000</pubDate>
      <link>https://dev.to/aka_tamer/pure-css-accrodion-aep</link>
      <guid>https://dev.to/aka_tamer/pure-css-accrodion-aep</guid>
      <description>&lt;p&gt;Here is another component, usually made with JS, developed in &lt;strong&gt;pure CSS&lt;/strong&gt;.&lt;br&gt;
Also on this occasion I exploited the potential of the &lt;code&gt;input&lt;/code&gt;, which guarantee a homogeneous robustness in every browser and operating system.&lt;/p&gt;

&lt;p&gt;In this case the &lt;code&gt;checkbox&lt;/code&gt; allows you to have more &lt;em&gt;tabs&lt;/em&gt; open in an a*&lt;em&gt;ccordion&lt;/em&gt;*, unlike the &lt;code&gt;radio&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/tamer_aka_remat/embed/powePwG?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>css</category>
      <category>performance</category>
      <category>showdev</category>
      <category>codepen</category>
    </item>
    <item>
      <title>Convert a ReactJS Component to VueJS</title>
      <author>Cody Bontecou</author>
      <pubDate>Thu, 09 Sep 2021 14:32:28 +0000</pubDate>
      <link>https://dev.to/codybontecou/convert-a-reactjs-component-to-vuejs-2lek</link>
      <guid>https://dev.to/codybontecou/convert-a-reactjs-component-to-vuejs-2lek</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GEB_zIu7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codybontecou.com/images/convert-reactjs-component-to-vuejs-meta.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GEB_zIu7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codybontecou.com/images/convert-reactjs-component-to-vuejs-meta.png" alt="Meta image stating Convert a Component Built in ReactJS to VueJS alongside Timeline component"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#convert-a-reactjs-component-to-vuejs"&gt;
  &lt;/a&gt;
  Convert a ReactJS Component to VueJS
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;In this tutorial, we're going to rewrite a Timeline component built in ReactJS by &lt;a href="https://www.youtube.com/watch?v=tcUVUBlyXX8"&gt;Florin Pop&lt;/a&gt; to VueJS. You can see the component in action &lt;a href="https://www.florin-pop.com/timeline/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#scaffold-your-vuejs-app-using-vite"&gt;
  &lt;/a&gt;
  Scaffold your VueJS app using &lt;a href="https://vitejs.dev/"&gt;Vite&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;I try to use Vite whenever given the opportunity.&lt;/p&gt;

&lt;p&gt;It increases development speed by an incredibly amount due to features such as Instant Server Start and Lightning Fast HMR (Hot Module Replacement).&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Let's init our project:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init vite@latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Follow the prompt and select &lt;code&gt;vue&lt;/code&gt; as our framework and and as our variant.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;cd&lt;/code&gt; into the generated directory and install the dependencies with &lt;code&gt;npm install&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Run your new vite + vuejs project using &lt;code&gt;npm run dev&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#building-the-vuejs-component"&gt;
  &lt;/a&gt;
  Building the VueJS Component
&lt;/h2&gt;

&lt;p&gt;Now, the fun stuff. Let's work on converting the ReactJS code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-appvue-endraw-looks-very-similar-to-the-reactjs-version"&gt;
  &lt;/a&gt;
  &lt;code&gt;App.vue&lt;/code&gt; looks very similar to the ReactJS version:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;// App.vue
&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt; &lt;span class="na"&gt;setup&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Timeline&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/Timeline.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;Timeline&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// React Version&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="nx"&gt;Timeline&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Timeline&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The key difference here is the &lt;a href="https://vuejs.org/v2/guide/syntax.html"&gt;template tag&lt;/a&gt;, an essential part of VueJS syntax.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-now-dig-into-the-timeline-component-raw-timelinevue-endraw-"&gt;
  &lt;/a&gt;
  Lets now dig into the Timeline component - &lt;code&gt;Timeline.vue&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The Timeline component is where the data gathering and container occur.&lt;/p&gt;

&lt;p&gt;In this example, we are gathering the data from our local &lt;code&gt;data.json&lt;/code&gt; file. It shouldn't require too much additional work to get this component to work with live data using a package such as &lt;a href="https://axios-http.com/"&gt;axios&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;While the ReactJS version takes up less vertical space, the VueJS version is much easier to read. Rather than applying an inline map function, we use a &lt;code&gt;v-for&lt;/code&gt; to apply the same functionality.&lt;/p&gt;

&lt;p&gt;VueJS attaches dynamic data a property called &lt;a href="https://vuejs.org/v2/api/#v-bind"&gt;v-bind&lt;/a&gt;. The shorthand for v-bind is &lt;code&gt;:&lt;/code&gt;. As you can see &lt;code&gt;:data=data&lt;/code&gt; is the VueJS equivalent to &lt;code&gt;data={data}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Also note, VueJS doesn't use &lt;code&gt;className&lt;/code&gt; to apply its CSS. Instead, you can use the classic &lt;code&gt;class&lt;/code&gt; keyword.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// React Version&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Timeline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;timelineData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;timeline-container&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;timelineData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TimelineItem&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;))}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;// components/Timeline.vue

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"timeline-container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;TimelineItem&lt;/span&gt; &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"(data, idx) in timelineData"&lt;/span&gt; &lt;span class="na"&gt;:data=&lt;/span&gt;&lt;span class="s"&gt;"data"&lt;/span&gt; &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"idx"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../assets/data.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;TimelineItem&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./TimelineItem.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;TimelineItem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;timelineData&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}),&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's an example of what the data looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Started working on the app-ideas repository"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"date"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"February 25 2021"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"category"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"tag"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"app-ideas"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"color"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"#FFDB14"&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://github.com/florinpop17/app-ideas"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Check it out on GitHub"&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#converting-the-timelineitem-component-to-vuejs"&gt;
  &lt;/a&gt;
  Converting the TimelineItem Component to VueJS
&lt;/h3&gt;

&lt;p&gt;The TimelineItem Component is where the majority of the UI logic is taking place. We are now playing with the data we gathered within the Timeline component.&lt;/p&gt;

&lt;p&gt;There isn't much happening outside of destructing the data object and styling as needed.&lt;/p&gt;

&lt;p&gt;We destructure data in VueJS differently than in ReactJS.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When using the data between two HTML elements, you must destructure it using two curly brackets &lt;code&gt;{{}}&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;When accessing the data within a &lt;code&gt;v-bind:&lt;/code&gt;, you destructure it using single curly brackets &lt;code&gt;{data}&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;When accessing the data within a directive such as &lt;code&gt;v-if&lt;/code&gt;, you type in the data &lt;code&gt;v-if="data"&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;TimelineItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;timeline-item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;timeline-item-content&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;tag&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/time&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;_blank&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;noopener noreferrer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;)}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;circle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;// components/TimelineItem.vue
&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"timeline-item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"timeline-item-content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"tag"&lt;/span&gt; &lt;span class="na"&gt;:style=&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;{ background: `${data.category.color}` }"&amp;gt;
        &lt;span class="si"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tag&lt;/span&gt; &lt;span class="si"&gt;}}&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;time&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="si"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/time&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="si"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt;
        &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"data.link"&lt;/span&gt;
        &lt;span class="na"&gt;:href=&lt;/span&gt;&lt;span class="s"&gt;"data.link.url"&lt;/span&gt;
        &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;"_blank"&lt;/span&gt;
        &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"noopener noreferrer"&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="si"&gt;}}&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"circle"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#additional-vuejs-config"&gt;
  &lt;/a&gt;
  Additional VueJS config
&lt;/h3&gt;

&lt;p&gt;To get the CSS provided below to style our component, we need to expose the CSS to work within our VueJS application. For this example, I placed an import statement within my &lt;code&gt;main.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createApp&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./assets/main.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#styling-the-component-using-css"&gt;
  &lt;/a&gt;
  Styling the component using CSS
&lt;/h3&gt;

&lt;p&gt;For this component, I am using the &lt;code&gt;main.css&lt;/code&gt; file placed within our &lt;code&gt;assets&lt;/code&gt; directory. Here is the css used within this component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* assets/main.css */&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="sx"&gt;url('https://fonts.googleapis.com/css?family=Lato')&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;135deg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#f5f7fa&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#c3cfe2&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nl"&gt;min-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Lato'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#app&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.timeline-container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.timeline-container&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#e17b77&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;50%&lt;/span&gt; &lt;span class="n"&gt;-&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.timeline-item&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex-end&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.timeline-item&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;odd&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;align-self&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex-end&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex-start&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.timeline-item-content&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex-end&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.timeline-item-content&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;-1px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-7.5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;50%&lt;/span&gt; &lt;span class="n"&gt;-&lt;/span&gt; &lt;span class="m"&gt;7.5px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;45deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.timeline-item&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;odd&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nc"&gt;.timeline-item-content&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex-start&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.timeline-item&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;odd&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nc"&gt;.timeline-item-content&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-7.5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-1px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.timeline-item-content&lt;/span&gt; &lt;span class="nc"&gt;.tag&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;letter-spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.timeline-item&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;odd&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nc"&gt;.timeline-item-content&lt;/span&gt; &lt;span class="nc"&gt;.tag&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.timeline-item-content&lt;/span&gt; &lt;span class="nt"&gt;time&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#777&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.timeline-item-content&lt;/span&gt; &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;24px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;250px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.timeline-item-content&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#333&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;14px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.timeline-item-content&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;' ►'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.timeline-item-content&lt;/span&gt; &lt;span class="nc"&gt;.circle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#e17b77&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;50%&lt;/span&gt; &lt;span class="n"&gt;-&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.timeline-item&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;odd&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nc"&gt;.timeline-item-content&lt;/span&gt; &lt;span class="nc"&gt;.circle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;only&lt;/span&gt; &lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1023px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.timeline-item-content&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;only&lt;/span&gt; &lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;767px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.timeline-item-content&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="nc"&gt;.timeline-item&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;odd&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nc"&gt;.timeline-item-content&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.timeline-item-content&lt;/span&gt; &lt;span class="nc"&gt;.tag&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="n"&gt;-&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.timeline-item-content&lt;/span&gt; &lt;span class="nt"&gt;time&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.timeline-item-content&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;underline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.timeline-item-content&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;footer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#222&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;14px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;999&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;footer&lt;/span&gt; &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;footer&lt;/span&gt; &lt;span class="nt"&gt;i&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;footer&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#3c97bf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#additional-resources"&gt;
  &lt;/a&gt;
  Additional Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Github Repository with source code - &lt;a href="https://github.com/CodyBontecou/timeline-component-vuejs"&gt;https://github.com/CodyBontecou/timeline-component-vuejs&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Florin Pop made a &lt;a href="https://www.youtube.com/watch?v=tcUVUBlyXX8"&gt;Youtube video&lt;/a&gt; walking through building this component using ReactJS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codepen.io/FlorinPop17/pen/GLEPZy"&gt;ReactJS Codepen&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>vue</category>
      <category>react</category>
      <category>javascript</category>
      <category>component</category>
    </item>
    <item>
      <title>React Native vs React Js!</title>
      <author>Shashank singh</author>
      <pubDate>Thu, 09 Sep 2021 14:22:31 +0000</pubDate>
      <link>https://dev.to/sshashank5690/react-native-vs-react-js-16f3</link>
      <guid>https://dev.to/sshashank5690/react-native-vs-react-js-16f3</guid>
      <description>&lt;h2&gt;
  &lt;a href="#before-comparing-reactjs-vs-react-native-lets-take-a-look-at-the-small-history-of-both-of-them"&gt;
  &lt;/a&gt;
  Before comparing Reactjs vs React Native, let’s take a look at the small history of both of them.😎🙌
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Reactjs and React Native which are right now powering some of the most popular and widely used mobile apps and websites, have an interesting history&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;em&gt;In 2011, when Facebook ads were expanding and bringing in newer, exciting features, the engineering team realized that the constant updates were slowing down their progress. Content cascading changes and updates forced the developers to realign the entire app. As the team size expanded, the problems grew in the same proportion.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;They had the right model, but the user-interface needed a revolution.&lt;/p&gt;

&lt;p&gt;At the same time, an engineer at Facebook, Jordan Walke, used XHP (an HTML component library for PHP) to create FaxJS, which was the first prototype of Reactjs.&lt;/p&gt;

&lt;p&gt;In 2011, Reactjs was deployed for Facebook’s timeline, and this was a big leap. &lt;/p&gt;

&lt;p&gt;In 2012, Instagram was acquired by Facebook, and then Reactjs was used for their timeline as well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-same-year-mark-zuckerberg-quoted"&gt;
  &lt;/a&gt;
  The same year, Mark Zuckerberg quoted:😀&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eQWv5pfR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ni0gf7gleem4rqh8f150.gif" alt="ZuckZuccGIF"&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;“The biggest mistake we made as a company was betting too much on HTML as opposed to native”.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This signified the development of React Native as a framework. And soon, the developer world witnessed the emergence of two of the most powerful technologies. Reactjs vs React Native is a fascinating comparison and forces developers to think hard into their usefulness and application for developing web apps, mobile apps mobile responsive websites, and more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#this-blog-will-decode-reactjs-vs-react-native-and-give-app-builders-insights-into-this-subject"&gt;
  &lt;/a&gt;
  This blog will decode Reactjs vs React Native and give app builders insights into this subject. 😁😁
&lt;/h3&gt;

&lt;p&gt;Reactjs vs React Native – Comparing the individual features that make both unique in their league&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-exactly-is-reactjs"&gt;
  &lt;/a&gt;
  What exactly is Reactjs? &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n4igd7gB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vxqz3engm9kzpw81i2ok.gif" alt="Windows11onReactGIF"&gt;
&lt;/h2&gt;

&lt;p&gt;Reactjs is a JavaScript library that supports both front-end and server. Furthermore, it can be used to create user interfaces for mobile apps and websites.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-features-of-reactjs-is-its-usp-from-a-business"&gt;
  &lt;/a&gt;
  What features of Reactjs is its USP from a Business
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#perspective-advantages-of-reactjs"&gt;
  &lt;/a&gt;
  perspective? (Advantages of Reactjs)
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Blazing Speed with DOM&lt;/strong&gt; &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GiGsFhUe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vslmgeq9khgvgx4tensr.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GiGsFhUe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vslmgeq9khgvgx4tensr.gif" alt="FatThorGIF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From a business perspective, one of the USPs of Reactjs is its ability to bring in blazing fast speed for the applications and websites developed, using the DOM or Document Object Model. &lt;/p&gt;

&lt;p&gt;This is how it happens: React creates an in-memory data structure cache that computes the resulting differences, and then updates the browser’s displayed DOM seamlessly. The programmer writes the code as if the entire page is rendered on each change, wherein in reality, only those sub-components which are changed are rendered. &lt;/p&gt;

&lt;p&gt;This gives an edge to Reactjs, compared to other platforms for developing mobile apps since speed is one of the important factors for making a successful mobile app.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#componentbased-architecture-saves-time"&gt;
  &lt;/a&gt;
  Component-Based Architecture Saves Time⏳🥴
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AWqPjSW5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fiys7108mos18jgzypht.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AWqPjSW5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fiys7108mos18jgzypht.gif" alt="MrBeanCheckingTimeGIF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Reactjs introduced the concept of component-based architecture, which enforces the reusability of components, and thus, saves an enormous amount of time. &lt;/p&gt;

&lt;p&gt;This component-based architecture takes individual pieces of a larger user-interface and converts them into an independent, self-sustaining micro-system.&lt;/p&gt;

&lt;p&gt;Thus, for example, if any component within the Adset tab in Facebook Ads needs some major changes, then only that component will be reused and re-defined, rather than the entire UI of Facebook Ads.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reactjs-gives-powerboost-to-seo"&gt;
  &lt;/a&gt;
  Reactjs Gives Powerboost To SEO🤯🤯
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CO45pcoV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fexjtdlfp9glsc47f9t7.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CO45pcoV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fexjtdlfp9glsc47f9t7.gif" alt="GoogleInboundMarketingGIF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Since Reactjs is capable of server-side rendering, it gives a power boost to the SEO of a  webpage/app and attracts more organic traffic. When a Google bot visits a server, which has already rendered the content and images, indexing and caching of the content becomes faster. It gives a huge heads up to the overall SEO strategy of the website. Besides, if the Google bot directly indexes the content from the server-side, the page load time also decreases. This fast visibility of web-pages gives the end-users a better user experience, thereby a win-win situation. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#huge-ecosystem-of-developer-tools%E2%80%8D%F0%9F%8F%8D"&gt;
  &lt;/a&gt;
  Huge Ecosystem Of Developer Tools🐱‍🏍🤖
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bh_7R40q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1cowvpafc5ekrowy09td.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bh_7R40q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1cowvpafc5ekrowy09td.gif" alt="MonkeyDeveloperGIF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Reactjs is blessed to have a huge community of developers, who have created a massive ecosystem of tools, component libraries, IDEs, extensions for code editors, web browsers, and more.&lt;/p&gt;

&lt;p&gt;The availability of a wide range of third party tools and extensions unleashes a new dimension of innovation while saving time and resources at the same time. Community-powered innovation makes Reactjs one of the most popular options for creating innovative path-breaking apps and websites.&lt;/p&gt;

&lt;p&gt;So, these are the major advantages of Reactjs that make it unique.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-exactly-is-react-native"&gt;
  &lt;/a&gt;
  What exactly is React Native? ❓❓❓&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pmo73AEp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vstulzl5cu4f8l74t58m.gif" alt="ReactjsNextjsGIF"&gt;
&lt;/h2&gt;

&lt;p&gt;React Native is a cross-platform mobile framework that uses Reactjs for building apps and websites. React Native compiles to native app components enables the programmer to build mobile applications that can run on different platforms such as Windows, Android, iOS in JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What’s more, Reactjs is used to build components under React Native, and React Native implements Reactjs under their framework&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-features-of-react-native-is-its-usp-from-a-business-perspective-advantages-of-react-native"&gt;
  &lt;/a&gt;
  What features of React Native is its USP from a ###Business perspective? (Advantages of React Native)
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#advantage-platformspecific-code"&gt;
  &lt;/a&gt;
  Advantage Platform-specific Code
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;One of the biggest USPs of building apps and websites using React Native is the ability to generate platform-specific code&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;When you use React Native to build an app, the framework automatically detects the platform it’s being run on. This way, it generates the right code for the right platform.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;var Note = "Even a Front-End Web Developer Can Create App Using React Native";&lt;br&gt;
alert(yesssss!!!!);&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;😀😀😀🙌🙌🙌😀😀😀&lt;br&gt;
Since most of the code present in React Native is Javascript, it gets easier for a front-end developer to create an app quickly.&lt;/p&gt;

&lt;p&gt;It is rather simple for a front-end developer to grasp the technology and all they need to know is Javascript (specifically Reactjs), platform APIs, some native UI elements, and any platform-specific design patterns. &lt;/p&gt;

&lt;p&gt;This easy usability and learning curve enable non-programmers to create apps without much effort. This has induced a kind of transformation in the way apps and websites are created today. So all you need is an idea and plan to execute that idea. Even if the ideator is not a great programmer, that idea can materialize into reality.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#this-changes-so-many-things"&gt;
  &lt;/a&gt;
  This changes so many things.😎😎😎
&lt;/h1&gt;

&lt;p&gt;Development Takes Less Time Due To Hot Reloading feature &lt;/p&gt;

&lt;p&gt;Reactjs supports the Hot Reloading feature, which gives developers the liberty to reload a mobile app automatically.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;This makes the process of development fast, and it saves time.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ready-to-use UI libraries for smoother UI experience&lt;/p&gt;




&lt;p&gt;Component UI libraries exist in the React Native ecosystem. Developers can use it for a smooth UI experience.&lt;/p&gt;




&lt;p&gt;Such sharing of UI libraries such as Shoutem, Expo, native base, and others save the time required to build them from scratch, and this means that more focus on innovation and ideas can be given, rather than creating libraries from scratch. &lt;/p&gt;




&lt;p&gt;So these are some major benefits of React Native that make it unique.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-main-differences-between-reactjs-and-react-native"&gt;
  &lt;/a&gt;
  What are the main differences between Reactjs and React Native?😁😁😁
&lt;/h3&gt;

&lt;p&gt;While there are several similarities between Reactjs and React Native, however, there are some notable differences as well. Let’s have a look:&lt;/p&gt;

&lt;p&gt;Reactjs can be described as a base derivative of React DOM, for the web platform while React Native is a base derivative in itself, which means that the syntax and workflow remain the same, but components alter.&lt;br&gt;
Reactjs, eventually, is a JavaScript library, which enables the programmer to create an engaging and high performing UI Layer while React Native is an entire framework for building cross-platform apps, be it web, iOS or Android. &lt;br&gt;
In Reactjs, virtual DOM is used to render browser code in Reactjs while in React Native, native APIs are used to render components in mobile.&lt;br&gt;
The apps developed with Reactjs renders HTML in UI while React Native uses JSX for rendering UI, which is nothing but javascript. &lt;br&gt;
CSS is used for creating styling in Reactjs while a stylesheet is used for styling in React Native.&lt;br&gt;
In Reactjs, the animation is possible, using CSS, just like web development while in React Native, an animated API is used for inducing animation across different components of the React Native application.&lt;br&gt;
If the need is to build a high performing, dynamic, and responsive UI for web interfaces, then Reactjs is the best option while if the need is to give mobile apps a truly native feeling, then React Native is the best option.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-vs-react-native-"&gt;
  &lt;/a&gt;
  React vs React Native –  🤷‍♂️🤷‍♂️🤷‍♂️
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wgABxlP5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fvhkl7mzppld1s71khrf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wgABxlP5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fvhkl7mzppld1s71khrf.gif" alt="BabyRunGIF (2)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The drawbacks and limitations&lt;br&gt;
Both Reactjs and React Native have some limitations and drawbacks when it comes to developing apps and websites. Before starting on either of them, the developer should be clear on these limitations and plan in advance how to overcome them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#limitations-of-using-reactjs"&gt;
  &lt;/a&gt;
  Limitations Of Using Reactjs👹👾
&lt;/h2&gt;

&lt;p&gt;Overhead Costs &amp;amp; Time: Often, it becomes a necessity to download another react-enabled library, which increases cost and time overheads. For instance, if the developer is using the Carbon framework for UI experience, then it becomes crucial to download Carbon components with react.&lt;br&gt;
Learning curve: For a new developer, learning Reactjs may take much more time, compared to React Native. It means that the learning curve for Reactjs is more, and this can be an issue for new developers who are attempting to build an app using Reactjs.&lt;br&gt;
External library support: Although Reactjs supports lots of external, third-party libraries, there are very few native libraries for Reactjs. Now, external libraries can help the developer to utilize both HTML and CSS functionalities and build it into JSX, which has its complexities and steep learning curve.&lt;br&gt;
Long data hierarchy: Data navigation within Reactjs is complicated and complex. For example, Reactjs doesn’t support parallel data handling, unlike other JS Scripting tools. To navigate from one Div to another Div in Reactjs, the user will need to first navigate to the parent node, then to the topmost parent node, and then navigate to the second hierarchy of the tree node. &lt;br&gt;
Limitations Of Using React Native&lt;br&gt;
Lack of native libraries: In case the app has heavy functionalities, then React Native can slow down the development process, and the reason is lack of native libraries, and reliance on external, third-party libraries. When one needs to make complex calculations at the same time, then Swift, Objective-C, and Java are observed to have more speed, compared to JavaScript, since there are overheads within JavaScript for controlling native elements. &lt;br&gt;
Loosely held abstraction layer: React Native is a loosely held framework, wherein programmers can get tags like HTML, stylesheets like CSS, and code from Javascript. This seems to be a positive aspect, as it provides more freedom to the developers, but at the same time, it poses challenges as well. For example, unlike Swift and Java languages, it doesn’t enforce any parameters or rules, and practically speaking, at any given time, a variable can be literally anything. This may cause a clash of logic, which is unlikely to happen with Swift or Java.&lt;br&gt;
Takes more time to initialize: The issue with React Native is that it takes more time to initialize the runtime for gadgets and devices. It is mainly due to JavaScript thread which takes time to initialize. &lt;br&gt;
Requires a lot of native workarounds: If specific functionality is not found in React Native, then developers have two options: Either write the native modules in Swift/Objective-C and Java or ask any native developer to write a new one. In a word, React Native increases overheads on both expenses and time. &lt;br&gt;
License &amp;amp; Patenting Issues: License and Patenting Issues also persists, and since Facebook controls React Native, the issue isn’t solving anytime soon. Now, React Native has received Version 2, Additional Grant of Patent Rights from Facebook along with a BSD-style license. But in 2017, Facebook updated the Open Source Licensing and Patent for React Native, as well as Reactjs and other open-source projects. As per this new update, in case any developer uses these open source platforms for any purpose which Facebook doesn’t like or violates the patent, then Facebook has a right to stop that developer from using that open-source platform. This has impacted both Reactjs and React Native developers, as their apps developed on these platforms can be actually stopped from operating, at any time. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#which-is-better-react-or-react-native"&gt;
  &lt;/a&gt;
  Which is better React or React native?
&lt;/h2&gt;

&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Mrw1CJv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3hutjkx699uuged6ny75.gif" alt="SteveCarellWowGIF"&gt;
&lt;/h1&gt;

&lt;p&gt;Both Reactjs and React Native are important pillars for app and web development, and due to their flexible functionalities and an evolving eco-system of libraries, they are gaining momentum with each passing day.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;While Reactjs is basically a JavaScript library and React Native is the entire framework, the former is the heart of the latter, and compliments each other.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If Reactjs is optimal for creating apps with high functionality and complex calculations, then React Native is ideal to give a native feeling to your mobile apps.&lt;/p&gt;

&lt;p&gt;Every technology or framework in the developer universe has some limitations, and so does Reactjs and React Native. This is why, it is advisable to map the pros and cons of both of these technologies, and then make an informed decision based on the priorities and expected outcome.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a_iVzAtj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p6hj1c2otnnliwha4bnl.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a_iVzAtj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p6hj1c2otnnliwha4bnl.gif" alt="SpongebobSquarepantsPatrickStarGIF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#do-comment-like-and-share"&gt;
  &lt;/a&gt;
  DO COMMENT ,LIKE AND sHARE!!!!⭐⭐⭐⭐⭐⭐⭐
&lt;/h1&gt;

</description>
      <category>react</category>
      <category>reactnative</category>
      <category>javascript</category>
      <category>html</category>
    </item>
    <item>
      <title>AWS'ye EC2 Makine olarak Django uygulaması deploy etme</title>
      <author>İbrahim Talha Asan</author>
      <pubDate>Thu, 09 Sep 2021 14:10:27 +0000</pubDate>
      <link>https://dev.to/talhaasan/aws-ye-ec2-makine-olarak-django-uygulamasi-deploy-etme-4517</link>
      <guid>https://dev.to/talhaasan/aws-ye-ec2-makine-olarak-django-uygulamasi-deploy-etme-4517</guid>
      <description>&lt;h1&gt;
  &lt;a href="#1awsde-ec2-makine-ba%C5%9Flatmak"&gt;
  &lt;/a&gt;
  1)AWS'de EC2 makine başlatmak
&lt;/h1&gt;

&lt;p&gt;AWS hesabımıza giriş yapıp servisler kısmından EC2 servisine gelelim. Instances bölümüne gelip Launch Instance butonuna tıklayalım.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6ay-yZ-y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fzs2egrka2euan5w35x7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6ay-yZ-y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fzs2egrka2euan5w35x7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Bu makineyi oluştururken özellikle dikkat etmeniz gereken iki  konu var (diğer adımlardaki ayarları isteğinize göre şekillendirebilirsiniz). &lt;br&gt;
Bunlardan birincisi, Security Group ayarlarından aşağıda vereceğim portları doğru bir şekilde açmanız gerek.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4C42CdZd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ogztgg07h7qy2z652cmp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4C42CdZd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ogztgg07h7qy2z652cmp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Dikkat etmeniz gereken ikinci konu ise, makine ayarlarının sonunda eğer yeni bir anahtar çifti oluşturduysanız bu anahtar çiftini burada indirmezseniz bir daha bu dosyaya ulaşamazsınız.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EW8dcpkg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rtbj5da17e8tr8qges5c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EW8dcpkg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rtbj5da17e8tr8qges5c.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
İndirdiğiniz bu dosyayı projenizin root klasörüne de taşımayı unutmayın.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-ec2-makinesine-ba%C4%9Flanmak"&gt;
  &lt;/a&gt;
  2) EC2 makinesine bağlanmak
&lt;/h1&gt;

&lt;p&gt;AWS Konsolunda EC2 Servisinin altında Instancelara gelip oluşturduğumuz instance üzerine tıklayalım.&lt;br&gt;
Sonrasında ise sağ üst taraftaki Connect butonununa tıklayın. Karşınıza çıkan pencerede bağlanma metodunu SSH Client seçin ve burada çıkan kodları terminalinizde çalıştırın.&lt;br&gt;
Kodları sırayla çalıştırdıktan sonra karşınıza çıkması gereken bu soruya da&lt;br&gt;
"Are you sure you want to continue connecting (yes/no)?"&lt;br&gt;
"yes" diyerek devam edin.&lt;br&gt;
Tebrikler! EC2 makinenizin içindesiniz.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3ec2-makine-ortam%C4%B1n%C4%B1-kurma"&gt;
  &lt;/a&gt;
  3)EC2 Makine Ortamını Kurma
&lt;/h1&gt;

&lt;p&gt;İlk olarak sudo apt update, sudo apt upgrade komutlarını sırasıyla çalıştırın. Sonrasında ise sanal ortamınıza projeninizin bağımlılıklarını kurup proje kodlarınızı makineye çekebilirsiniz.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4taray%C4%B1c%C4%B1dan-ip-adresiyle-makinenize-ba%C4%9Flanma"&gt;
  &lt;/a&gt;
  4)Tarayıcıdan IP adresiyle makinenize bağlanma
&lt;/h1&gt;

&lt;p&gt;Tekrardan Instances kısmına gelip, ordaki IP adresine tıklayıp linki açın. Sonrasında ise adres çubuğundaki linki https'den http yapıp(SSL sertifikası olmadığı için https olarak kalırsa hata alırsınız.) bir de sonuna :8000 portu ekleyin. Adresiniz "http://:8000" şeklinde olmalıdır.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Maintaining Quality Documentation</title>
      <author>Daniel Starner</author>
      <pubDate>Thu, 09 Sep 2021 13:25:14 +0000</pubDate>
      <link>https://dev.to/dstarner/keeping-documentation-debt-at-bay-clients-happy-53o</link>
      <guid>https://dev.to/dstarner/keeping-documentation-debt-at-bay-clients-happy-53o</guid>
      <description>&lt;p&gt;&lt;strong&gt;Communication is difficult.&lt;/strong&gt; As remote work becomes more of a thing, as teams work across six+ timezones, and as companies are looking for rapid growth, &lt;strong&gt;it is paramount that technical knowledge is able to be communicated correctly and effectively.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Over my past few professional experiences, it became apparent that I had started to spend more of my time communicating ideas and interfaces with others, and less time actually developing them. Now, obviously the design phase before building something is critical, but I was more concerned about the amount of time I spent discussing a feature &lt;em&gt;after&lt;/em&gt; finishing it. I found that if I spent some time building a new feature for our product, I would spend &lt;em&gt;at least&lt;/em&gt; two or three times the amount of time answering Slack messages for users who wanted to use it or who had questions.&lt;/p&gt;

&lt;p&gt;I realized that while we had good technical engineering practices, &lt;strong&gt;we were lacking the communication channels &amp;amp; skills to allow our clients to effectively use the product&lt;/strong&gt;. This resulted in a fair amount of precious engineering time lost to our on-call team member basically acting as tech support on Slack, as they'd have to answer very similar questions multiple times throughout the day.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1-zX-HHd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media2.giphy.com/media/3orif0rjs49gsPWg1y/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1-zX-HHd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media2.giphy.com/media/3orif0rjs49gsPWg1y/giphy.gif" alt="Customer Support"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-curse-of-success"&gt;
  &lt;/a&gt;
  The Curse of Success
&lt;/h2&gt;

&lt;p&gt;Our product was still young, but it was quickly growing in popularity at the company. It was a cluster configuration and deployment system that managed many of our internal services. I was one of the lead engineers responsible for developing this ecosystem, and we had built out quite a few systems and solutions to solve all different categories of technical problems.&lt;/p&gt;

&lt;p&gt;We were able to implement these problems very well, but we had grow &lt;em&gt;so&lt;/em&gt; fast that we started to realize some problems with the way we were communicating and sharing our product with the rest of the company.&lt;/p&gt;

&lt;p&gt;As more users found the tooling and started using it, we had more users who ranged from "&lt;em&gt;Oh this is neat&lt;/em&gt;", to our advanced users &amp;amp; internal team members who knew the full "&lt;em&gt;in's and out's&lt;/em&gt;" of the tools. Somehow, we had to make sure every end user and effected client could effectively use our tooling to solve their deployment problems.&lt;/p&gt;

&lt;p&gt;This growth problem was easily manageable when we had just a few teams using the product, as many of those users had been with us since the start of the product and could use it moderately well. We had a page or two of loosely organized &lt;a href="https://jekyllrb.com/"&gt;Jekyll&lt;/a&gt; documents that briefly explained how to get different environments up and running, and the users were expected to sort-of just figure out the rest.&lt;/p&gt;

&lt;p&gt;Our documentation at the time was like the Owl-drawing tutorial below; &lt;em&gt;we will walk you through the left-side picture, and then just throw you to the fire and hope you figure out all the details as you go to production.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LN6N6kYD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--p65ClE-A--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_900%2Cq_auto%2Cw_1600/https://i.kym-cdn.com/photos/images/newsfeed/000/572/078/d6d.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LN6N6kYD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--p65ClE-A--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_900%2Cq_auto%2Cw_1600/https://i.kym-cdn.com/photos/images/newsfeed/000/572/078/d6d.jpg" alt="Rest of the F**king Owl"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tribal-knowledge-and-the-silo-of-doom"&gt;
  &lt;/a&gt;
  Tribal Knowledge and the Silo of Doom
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Tribal knowledge is any unwritten information that is not commonly known by others within a company.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We quickly realized that our team and the original user base had quite a bit of tribal knowledge in the system. As our product grew in popularity and was used by new users, they did not have this knowledge that seemed &lt;em&gt;"trivial"&lt;/em&gt; to us, but in reality was confusing for these first-time users. &lt;strong&gt;We had no way to effectively communicate the silo of knowledge that we had developed over the years of building &amp;amp; using the product&lt;/strong&gt;. It's very difficult for people to use something if they don't know how to use it. They are even less likely to use it if they see others describe it as "easy" without seeing the path to attaining that knowledge. When people notice this gap of knowledge between it's users with no discernible way to resolve it, &lt;strong&gt;the reputation of the product is at stake.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Our users wanted to learn our product, and we &lt;em&gt;wanted&lt;/em&gt; them to love the product, but &lt;strong&gt;we had a documentation problem.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cue-the-documentation-attempts"&gt;
  &lt;/a&gt;
  Cue the Documentation Attempts
&lt;/h2&gt;

&lt;p&gt;Our team set off to close this documentation gap between our users and tooling. We had three main areas of tooling &amp;amp; associated documentation that needed addressed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;A web user interface&lt;/strong&gt; that provided a nice overview and data visualization of our system&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;A RESTful API&lt;/strong&gt; that provided all of the deployment data and configurations for the web UI and any integrated services&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;A CLI for command-line-based operations&lt;/strong&gt; which allowed for local development and cluster configuration management&lt;/li&gt;
&lt;li&gt;Our overall concepts and tutorials so that users could learn the system from a high level across the aforementioned tools&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It was important for us to solve our documentation problem for each of the services above, because we know that good project documentation allowed the following situations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Improved onboarding of new users and new team members&lt;/li&gt;
&lt;li&gt;Reduction in support questions by users&lt;/li&gt;
&lt;li&gt;Ability to quickly link users to documentation sections for answers and concepts&lt;/li&gt;
&lt;li&gt;Increased reputation and usage due to (hopefully) being more user-friendly&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#documenting-the-web-interface"&gt;
  &lt;/a&gt;
  Documenting the Web Interface
&lt;/h3&gt;

&lt;p&gt;Web interfaces are hard, because they should be designed intuitively and cleanly so that users familiar with the interface can interact with it as efficient as possible. This presents a challenge for newer users who are unfamiliar with the system, as the layouts and functions of components will be totally new to them.&lt;/p&gt;

&lt;p&gt;To overcome these documentation issues in our web interface, we had both &lt;strong&gt;proactive documentation&lt;/strong&gt; through means of initial popups that would call out certain elements on the first visit to a page type, and &lt;strong&gt;passive documentation&lt;/strong&gt; that would open a sidebar containing page-specific documentation when an icon button was pressed. We felt like this approach was a good trade-off of introducing new users to elements without being too intrusive. &lt;/p&gt;

&lt;p&gt;The highlighted element pop-ups used &lt;a href="https://reactour.vercel.app/#tourprovider"&gt;Reactour&lt;/a&gt; to display their information. To ensure that we covered future changes to the steps, we would hash the list of generated steps and save them to the client's &lt;code&gt;localStorage&lt;/code&gt; in the form of &lt;code&gt;[page URL]: &amp;lt;steps hash&amp;gt;&lt;/code&gt; where the &lt;code&gt;[page URL]&lt;/code&gt; was of generic form, such as &lt;code&gt;/settings&lt;/code&gt; or &lt;code&gt;/users/[user_id]&lt;/code&gt; so that we only showed the steps once per dynamically-rendered page type. These pop-ups provided very basic introductory information about the elements that they highlighted, such as what functions they performed.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/elrumordelaluz"&gt;
        elrumordelaluz
      &lt;/a&gt; / &lt;a href="https://github.com/elrumordelaluz/reactour"&gt;
        reactour
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Tourist Guide into your React Components
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;For our passive, yet detailed documentation, we allowed each page to pass a markdown page source to our core layout component that would &lt;a href="https://reactjs.org/docs/code-splitting.html#reactlazy"&gt;lazy load&lt;/a&gt; and render the markdown into a nice right-side drawer that could be toggled open and closed. This sidebar would be used for presenting more details about the overall page usage and components that existed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#documenting-the-restful-api"&gt;
  &lt;/a&gt;
  Documenting the RESTful API
&lt;/h3&gt;

&lt;p&gt;Our RESTful API was actually the easiest to document, because we were able to rely on third-party libraries from the start. It was a &lt;a href="https://www.djangoproject.com/"&gt;Python Django&lt;/a&gt; and &lt;a href="https://www.django-rest-framework.org/"&gt;Django REST Framework&lt;/a&gt; project that leveraged the &lt;a href="https://github.com/axnsan12/drf-yasg"&gt;&lt;code&gt;drf-yasg&lt;/code&gt; OpenAPI generator library&lt;/a&gt; to create &lt;a href="https://swagger.io/specification/"&gt;OpenAPI&lt;/a&gt; and &lt;a href="https://swagger.io/"&gt;Swagger&lt;/a&gt; compatible documentation.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/axnsan12"&gt;
        axnsan12
      &lt;/a&gt; / &lt;a href="https://github.com/axnsan12/drf-yasg"&gt;
        drf-yasg
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Automated generation of real Swagger/OpenAPI 2.0 schemas from Django REST Framework code.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;This library allowed us to write the API documentation in-place throughout the route definitions, and &lt;code&gt;drf-yasg&lt;/code&gt; would render documentation in either the form of an OpenAPI schema or as an interactive &lt;a href="https://github.com/Redocly/redoc"&gt;Redoc&lt;/a&gt;/&lt;a href="https://swagger.io/tools/swagger-ui/"&gt;Swagger UI&lt;/a&gt; web page. This meant that &lt;strong&gt;we were generating documentation from our code&lt;/strong&gt; and there was no extra developer steps to change documentation if a feature or route changed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#documenting-the-cli"&gt;
  &lt;/a&gt;
  Documenting the CLI
&lt;/h3&gt;

&lt;p&gt;Our command line interface was a &lt;a href="https://golang.org/"&gt;Golang&lt;/a&gt; binary executable that was based off of the &lt;a href="https://cobra.dev/"&gt;&lt;code&gt;cobra&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://github.com/spf13/viper"&gt;&lt;code&gt;viper&lt;/code&gt;&lt;/a&gt; libraries which made creating advanced CLIs very easy.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/spf13"&gt;
        spf13
      &lt;/a&gt; / &lt;a href="https://github.com/spf13/cobra"&gt;
        cobra
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A Commander for modern Go CLI interactions
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Amongst the many neat features of &lt;code&gt;cobra&lt;/code&gt;, we were able to extend the &lt;a href="https://github.com/spf13/cobra/blob/master/doc/md_docs.md"&gt;Markdown documentation generation feature&lt;/a&gt; which would create rich user documentation for each of the available commands. We would generate this documentation at release time and either deploy the static files as a &lt;a href="https://pages.github.com/"&gt;GitHub Pages site&lt;/a&gt;, or integrate them with our generic documentation below. We made sure to always include older release documentation for users who were not on the latest CLI version.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#documenting-the-system"&gt;
  &lt;/a&gt;
  Documenting the System
&lt;/h3&gt;

&lt;p&gt;With the individual components laid out, it was finally time to document the entire system so that it made sense to users. We actually jumped through three or four documentation generators over the three years that I worked on the project.&lt;/p&gt;

&lt;p&gt;The loose timeline of our documentation services was:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://jekyllrb.com/"&gt;Jekyll&lt;/a&gt; → &lt;a href="https://gohugo.io/"&gt;Hugo&lt;/a&gt; → &lt;a href="https://docsify.js.org/"&gt;Docsify&lt;/a&gt; → &lt;a href="https://docusaurus.io/"&gt;Docusaurus&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#jekyll"&gt;
  &lt;/a&gt;
  Jekyll
&lt;/h4&gt;

&lt;p&gt;As mentioned earlier, our documentation started in &lt;a href="https://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;, and it worked decently well for us. The two main drawbacks for us was that&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It slowly grew too difficult to manage large documentation as links &amp;amp; page references needed to be manually updated, and it became more difficult to manage as the number of pages grew&lt;/li&gt;
&lt;li&gt;Our team did not use Ruby, so the development process of putting docs together put users on an unfamiliar path.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We also found that some of the documentation templates seemed to be dated, and we were just looking for something that looked more refreshed and clean, but that's more of an subjective reason to switch than a technical one.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#hugo"&gt;
  &lt;/a&gt;
  Hugo
&lt;/h4&gt;

&lt;p&gt;We gave &lt;a href="https://gohugo.io/"&gt;Hugo&lt;/a&gt; a shot next, and it provided some more validation and speed in terms of development time. Since the associated program is just a binary, it could be very easily installed on our machines and in workflows without much fuss.&lt;/p&gt;

&lt;p&gt;Hugo provided more flexibility and validation across our documentation, and we quickly grew our documentation and made it look much more organized using the &lt;a href="https://learn.netlify.app/en/"&gt;Hugo Learn theme&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Hugo was great, but it required a &lt;em&gt;Build&lt;/em&gt; step to be run between pages in a GitHub repository could show up in a GitHub pages site. We built workflows to handle this on merges to &lt;code&gt;main&lt;/code&gt;, but it wasn't perfect and would occasionally fail. This generation step had us looking at client-side generators again, and we ran into...&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#docsify"&gt;
  &lt;/a&gt;
  Docsify
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://docsify.js.org/"&gt;Docsify&lt;/a&gt; is a client-side only documentation generator. As a user requests a documentation page, it would fetch the associated &lt;code&gt;.md&lt;/code&gt; file and render it all client-side. That meant that our documentation deployment process was simple again, as we could just push changes to the &lt;code&gt;main&lt;/code&gt; branch and &lt;em&gt;BOOM&lt;/em&gt; they would show up within seconds.&lt;/p&gt;

&lt;p&gt;The other draw of Docsify was that there were some really slick minimalist themes that we found and really enjoyed. We could pair these with &lt;a href="https://github.com/docsifyjs/awesome-docsify#plugins"&gt;the long list of extensions&lt;/a&gt; and provide users with clean, yet extensive documentation.&lt;/p&gt;

&lt;p&gt;The drawback with Docsify was that as our documentation continued to grow, it started to slow down the rendering process as the initial load would require fetching &lt;em&gt;a lot&lt;/em&gt; of information. On top of this, the searching functionality became more unusable as it wasn't a great interface, and it had to search &lt;em&gt;all&lt;/em&gt; files in a flat format to generate the results. My final gripe with Docsify was one of the reasons that I was initially drawn to it; anything more than generic markdown requires plugins. This introduced a bunch of documentation dependencies on libraries that didn't seem &lt;em&gt;fully&lt;/em&gt; legit and managed, and we found ourselves having to write custom plugins a lot to make things render as desired.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#docusaurus"&gt;
  &lt;/a&gt;
  Docusaurus
&lt;/h4&gt;

&lt;p&gt;After jumping from documentation generator to generator, we finally settled on &lt;a href="https://docusaurus.io/"&gt;Docusaurus&lt;/a&gt;. It introduced a build step again similar to Hugo, but we found that the trade off was worth it, as Docusaurus brought &lt;em&gt;a bunch of really nice features with it&lt;/em&gt;. Since everything was just React under the hood that could be customized, we naturally gravitated to it as we already had React experience.&lt;/p&gt;

&lt;p&gt;We found that it was much easier to customize and extend Docusaurus as compared to our other generators. This meant that we could provide the full &amp;amp; rich experience that we wanted. Our users also responded the best to this iteration of our documentation, but that may partially be accredited to us spending more time to organize the content as well as the overall layout.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-documentation-tips"&gt;
  &lt;/a&gt;
  My Documentation Tips
&lt;/h2&gt;

&lt;p&gt;The following tips and suggestions are just a few of the ways that our team overcame our documentation debt challenges, and how we ensured that our documentation was always in an acceptable state, no matter the level of user who was reading them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#generating-documentation-from-code"&gt;
  &lt;/a&gt;
  Generating Documentation from Code
&lt;/h3&gt;

&lt;p&gt;As previously mentioned, our API and CLI documentation was generated directly from the underlying code. I highly recommend this strategy of &lt;em&gt;Documentation-from-Code&lt;/em&gt;; it makes the process of writing great documentation that much easier. Having one interface for developers to add and document features makes it more likely that they will actually write documentation.&lt;/p&gt;

&lt;p&gt;Most languages and application types have some set of libraries to assist in generating documentation from code, and I highly recommend implementing them in your user-facing projects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#writing-less-more-often"&gt;
  &lt;/a&gt;
  Writing Less More Often
&lt;/h3&gt;

&lt;p&gt;It's difficult to climb a mountain in a day, but it becomes easier if you take one small step periodically. Documentation works the same way; writing all of your team's documentation at once will most likely cause stress and annoyance. It's strongly encourages to write documentation in small increments, hopefully at the time that the associated feature is written.&lt;/p&gt;

&lt;p&gt;For older features that need documentation, don't fret; just try to write a few paragraphs, or even sentence, whenever you have some free time. As long as you are slowly crunching way at the documentation debt, you are improving the situation.&lt;/p&gt;

&lt;p&gt;Finally, I found that it was easy to add/improve documentation for a certain feature if a user had just asked a question about the topic. This showed either a gap in our documentation, or a discrepancy that confused users. By tackling these issues one at a time, it was easier to ensure good documentation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#organizing-documentation-by-user-story"&gt;
  &lt;/a&gt;
  Organizing Documentation by User Story
&lt;/h3&gt;

&lt;p&gt;As our product matured, our documentation evolved from a list of individual available features to tutorials and guides based around common user workflows. We had a section of tutorials for our common use cases that included users just getting started with the system, all the way to some of our most advanced use cases.&lt;/p&gt;

&lt;p&gt;Being a deployment system, we broke up our documentation into cluster timeline user stories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Day 0&lt;/strong&gt;: Gathering and provisioning infrastructure&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Day 1&lt;/strong&gt;: Implementing cluster tools such as monitoring and alerting&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Day 2&lt;/strong&gt;: Deploying application and configuring DNS amongst other things&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This layout provided users with a pretty linear approach to reading our documentation. They could either get the brief steps through a tutorial, or they could follow our guides in order to use the system. Our support questions have reduced slightly since we switched to this more linear documentation organization.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#devoting-time-for-documentation-debt"&gt;
  &lt;/a&gt;
  Devoting Time for Documentation Debt
&lt;/h3&gt;

&lt;p&gt;It's not too unheard of to hear about engineering teams having hackathons during the workday to allow contributors to work on neat projects and squash &lt;a href="https://xkcd.com/2138/"&gt;technical debt&lt;/a&gt;. I would say teams need to go one step farther and have &lt;em&gt;Documentation Hackathons&lt;/em&gt;, or at least give individuals the ability to fully devote time to both their client-facing and internal documentation.&lt;/p&gt;

&lt;p&gt;This allows some time to "&lt;em&gt;refresh&lt;/em&gt;" the content and ensure its fully up to date.&lt;/p&gt;




&lt;p&gt;Good documentation practices are key to ensuring happy users and keeping technical support questions to a minimum. Hopefully the above experiences, technologies, and tips help you and your team present your products as positively and completely as possible!&lt;/p&gt;

</description>
      <category>codequality</category>
      <category>productivity</category>
      <category>development</category>
      <category>ux</category>
    </item>
    <item>
      <title>🚀 React Landing Page Template Free with Tailwind CSS and TypeScript [Open source] ⚡️</title>
      <author>Remi W.</author>
      <pubDate>Thu, 09 Sep 2021 13:23:56 +0000</pubDate>
      <link>https://dev.to/ixartz/react-landing-page-template-free-with-tailwind-css-and-typescript-open-source-159</link>
      <guid>https://dev.to/ixartz/react-landing-page-template-free-with-tailwind-css-and-typescript-open-source-159</guid>
      <description>&lt;p&gt;A minimalist landing page theme built on top of React, Tailwind CSS, TypeScript 4.4 and Next JS 11. An open source and free React Landing Page hosted on GitHub. It includes everything with best developer experience in mind with linter ESLint, Code formatter Prettier, Git Hooks with Husky, VSCode configuration.&lt;/p&gt;

&lt;p&gt;You can deploy a React landing page in seconds, saving you development and design time with one-click deployment on Vercel, Netlify or you can choose manual deployment to any hosting services.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A picture is worth a thousand words&lt;/em&gt;, here is the screenshot:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://creativedesignsguru.com/demo/nextjs-landing-page/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qievzIIN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/ixartz/Next-JS-Landing-Page-Starter-Template/master/public/assets/images/nextjs-landing-page-screenshot.png" alt="React Landing Page Template Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also check the source code on GitHub: &lt;a href="https://github.com/ixartz/Next-JS-Landing-Page-Starter-Template"&gt;React Landing Page Template&lt;/a&gt;.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ixartz"&gt;
        ixartz
      &lt;/a&gt; / &lt;a href="https://github.com/ixartz/Next-JS-Landing-Page-Starter-Template"&gt;
        Next-JS-Landing-Page-Starter-Template
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🚀 Free NextJS Landing Page Template written in Tailwind CSS 2.0 and TypeScript ⚡️ Made with developer experience first: Next.js 11 + TypeScript + ESLint + Prettier + Husky + Lint-Staged + VSCode + Netlify + PostCSS + Tailwind CSS
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Landing Page Template built with Next JS 11+, Tailwind CSS 2.0 and TypeScript &lt;a href="https://twitter.com/ixartz" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/22898de970db41d476e65546387c7b5147565904f1a4197980bb0e3eb30eb8ab/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f747769747465722e636f6d2f636c6f7564706f7373652e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f7725323025343049786172747a" alt="Twitter"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;
  &lt;a href="https://creativedesignsguru.com/demo/nextjs-landing-page/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3WIPM87I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ixartz/Next-JS-Landing-Page-Starter-Templatepublic/assets/images/nextjs-landing-page-banner.png%3Fraw%3Dtrue" alt="Next js starter banner"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;🚀 Landing Page theme written in Next.js, Tailwind CSS and TypeScript ⚡️ Made with developer experience first: Next.js, TypeScript, ESLint, Prettier, Husky, Lint-Staged, VSCode, Netlify, PostCSS, Tailwind CSS.&lt;/p&gt;

&lt;p&gt;Clone this project and use it to create your own &lt;a href="https://nextjs.org" rel="nofollow"&gt;Next.js&lt;/a&gt; project. You can check a &lt;a href="https://creativedesignsguru.com/demo/nextjs-landing-page/" rel="nofollow"&gt;Next js templates demo&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
DEMO&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://creativedesignsguru.com/demo/nextjs-landing-page/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3fSA1OVd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ixartz/Next-JS-Landing-Page-Starter-Templatepublic/assets/images/nextjs-landing-page-screenshot.png%3Fraw%3Dtrue" alt="Nextjs Landing Page Template Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check out our &lt;a href="https://creativedesignsguru.com/demo/nextjs-landing-page/" rel="nofollow"&gt;live demo&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
Features&lt;/h3&gt;

&lt;p&gt;Developer experience first:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
🔥 &lt;a href="https://nextjs.org" rel="nofollow"&gt;Next.js&lt;/a&gt; for Static Site Generator&lt;/li&gt;
&lt;li&gt;
🎨 Integrate with &lt;a href="https://tailwindcss.com" rel="nofollow"&gt;Tailwind CSS&lt;/a&gt; (w/ JIT mode)&lt;/li&gt;
&lt;li&gt;
💅 PostCSS for processing Tailwind CSS and integrated to &lt;code&gt;styled-jsx&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
🎉 Type checking &lt;a href="https://www.typescriptlang.org" rel="nofollow"&gt;TypeScript&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
✅ Strict Mode for TypeScript and React 17&lt;/li&gt;
&lt;li&gt;
✏️ Linter with &lt;a href="https://eslint.org" rel="nofollow"&gt;ESLint&lt;/a&gt; (default NextJS, NextJS Core Web Vitals and Airbnb configuration)&lt;/li&gt;
&lt;li&gt;
🛠 Code Formatter with &lt;a href="https://prettier.io" rel="nofollow"&gt;Prettier&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
🦊 Husky for Git Hooks&lt;/li&gt;
&lt;li&gt;
🚫 Lint-staged for running linters on Git staged files&lt;/li&gt;
&lt;li&gt;
🗂 VSCode configuration: Debug, Settings, Tasks and extension for…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ixartz/Next-JS-Landing-Page-Starter-Template"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;This landing page includes out-of-the-box several React components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Navigation&lt;/li&gt;
&lt;li&gt;Hero&lt;/li&gt;
&lt;li&gt;Feature&lt;/li&gt;
&lt;li&gt;Banner&lt;/li&gt;
&lt;li&gt;Footer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want to go further you can checkout our &lt;a href="https://creativedesignsguru.com/category/nextjs/"&gt;premium React templates&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#built-on-nextjs-boilerplate"&gt;
  &lt;/a&gt;
  Built on NextJS Boilerplate
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;React landing Page Template&lt;/strong&gt; is built on top of &lt;a href="https://github.com/ixartz/Next-js-Boilerplate"&gt;React Boilerplate&lt;/a&gt;. Already reached 500+ ⭐ stars on GitHub.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more-react-landing-page-template"&gt;
  &lt;/a&gt;
  More React Landing Page template
&lt;/h2&gt;

&lt;p&gt;Get access to React components like pricing, testimonial, FAQ, customer logo, statistics, banner, etc.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href="https://creativedesignsguru.com/landing-purple-modern-react-theme/"&gt;Purple Saas React Theme&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://creativedesignsguru.com/landing-indigo-modern-react-theme/"&gt;Indigo React Tailwind Theme&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://creativedesignsguru.com/landing-purple-modern-react-theme/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fsLIO5h8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/landing-purple-modern-nextjs-theme-xs.png" alt="Purple Saas React Theme"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://creativedesignsguru.com/landing-indigo-modern-react-theme/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FvlCiWRl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/landing-indigo-modern-nextjs-theme-xs.png" alt="Indigo React Tailwind Theme"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;If you currently building a SaaS, checkout our &lt;a href="https://nextlessjs.com"&gt;React SaaS Boilerplate Template&lt;/a&gt;. A full-stack React template to build a SaaS faster with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Authentication&lt;/li&gt;
&lt;li&gt;Landing Page UI&lt;/li&gt;
&lt;li&gt;User Dashboard UI&lt;/li&gt;
&lt;li&gt;Form and Error management&lt;/li&gt;
&lt;li&gt;Payment Integration with Stripe&lt;/li&gt;
&lt;li&gt;Infra as code&lt;/li&gt;
&lt;li&gt;Deployment on AWS&lt;/li&gt;
&lt;li&gt;Serverless&lt;/li&gt;
&lt;li&gt;VSCode integration&lt;/li&gt;
&lt;li&gt;Code example with Todo app and CRUD&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You don't need any more to be designer or a DevOps engineer to build a SaaS. Save you development and designs time.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>nextjs</category>
    </item>
  </channel>
</rss>
