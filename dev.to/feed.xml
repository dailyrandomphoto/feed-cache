<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Emmet Crash Course!</title>
      <author>Ustariz Enzo</author>
      <pubDate>Thu, 25 Nov 2021 08:25:29 +0000</pubDate>
      <link>https://dev.to/ziratsu/emmet-crash-course-gjm</link>
      <guid>https://dev.to/ziratsu/emmet-crash-course-gjm</guid>
      <description>&lt;p&gt;Hey &lt;strong&gt;fellow creators&lt;/strong&gt;,&lt;/p&gt;

&lt;p&gt;Let's boost your productivity with &lt;strong&gt;Emmet&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;Originally, Emmet was an extension that's become so popular it's now been integrated into VS Code and other code editors. It's simply a shortcut extension that's very useful!&lt;/p&gt;

&lt;p&gt;Let's learn the most useful shortcuts!&lt;/p&gt;

&lt;p&gt;If you prefer to watch the video &lt;strong&gt;version&lt;/strong&gt;, it's right here :&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/OJgrYe4WYRs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-create-a-div-with-a-class"&gt;
  &lt;/a&gt;
  1. Create a div with a class.
&lt;/h2&gt;

&lt;p&gt;The first and most used shortcut will be the dot. It will allow you to create a div with a class quickly. For instance, write &lt;em&gt;.box&lt;/em&gt; and then press tab/enter on your keyboard, this will create the following line of code:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;.box&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By default, it will assume that you want a &lt;em&gt;div&lt;/em&gt;. &lt;br&gt;
You can also write &lt;em&gt;div.box&lt;/em&gt; and then press tab/enter, which will do the same thing. But that means that you can also create another tag with a class, for instance &lt;em&gt;li.box&lt;/em&gt; will create:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;li.box&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also create a div with multiple classes by writing for instance &lt;em&gt;div.box.square.circle&lt;/em&gt; and then pressing tab/enter:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;div.box.square.circle&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box square circle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-create-a-div-with-an-id"&gt;
  &lt;/a&gt;
  2. Create a div with an ID.
&lt;/h2&gt;

&lt;p&gt;The way to create a div with an ID with Emmet is pretty similar, instead of a dot you simply need to use a hashtag. So write &lt;em&gt;#myElement&lt;/em&gt; and press tab/enter and the following div will be created:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;#myElement&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"myElement"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also mix the class and the id by writing for instance :&lt;/p&gt;

&lt;p&gt;&lt;em&gt;div#id.box&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-how-to-create-multiple-divs-at-the-same-time"&gt;
  &lt;/a&gt;
  3. How to create multiple divs at the same time?
&lt;/h2&gt;

&lt;p&gt;In order to create a div with the same classname multiple times quicker than before, you can simply write &lt;em&gt;.box*6&lt;/em&gt; for instance, which will create six divs with the class name "box":&lt;/p&gt;

&lt;p&gt;&lt;em&gt;.box*6&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-you-can-add-some-text-content"&gt;
  &lt;/a&gt;
  4. You can add some text content!
&lt;/h2&gt;

&lt;p&gt;If you already know what your tag's content will be, you can simply write it in between curly braces, for instance writing &lt;em&gt;h1{Hello World}&lt;/em&gt; and pressing tab/enter will create:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;h1{Hello World}&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello World&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-get-the-index"&gt;
  &lt;/a&gt;
  5. Get the index.
&lt;/h2&gt;

&lt;p&gt;In order to have an index, you can type &lt;em&gt;h1{$}*6&lt;/em&gt;  and press tab/enter, which will create:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;h1{$}*6&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;1&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;2&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;3&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;4&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;5&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;6&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#6-play-with-the-index-in-your-classes"&gt;
  &lt;/a&gt;
  6. Play with the index in your classes!
&lt;/h2&gt;

&lt;p&gt;By typing &lt;em&gt;p.txt-${$}*6&lt;/em&gt; and pressing tab/enter, you'll create an index with the same class:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;p.txt-${$}*6&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"txt-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;1&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"txt-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;2&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"txt-3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;3&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"txt-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;4&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"txt-5"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;5&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"txt-6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;6&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The dollar symbol will symbolise the index every time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-create-nested-elements"&gt;
  &lt;/a&gt;
  7. Create nested elements.
&lt;/h2&gt;

&lt;p&gt;Write &lt;em&gt;.parent&amp;gt;.child&lt;/em&gt; and press tab/enter to create nested elements:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;.parent&amp;gt;.child&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"child"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is very useful when you want to create a list or a form for example!&lt;/p&gt;

&lt;p&gt;Let's create a complex nested example together. Let's say you want to create a container with a &lt;em&gt;ul&lt;/em&gt; list within which you'll have six &lt;em&gt;li&lt;/em&gt; elements, all of which will have the same class name. Try it yourself first!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"list"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's the solution: type &lt;em&gt;.container&amp;gt;ul.list&amp;gt;li.item*6&lt;/em&gt; and press tab/enter.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-create-something-at-the-same-level-instead-of-nested"&gt;
  &lt;/a&gt;
  8. Create something at the same level (instead of nested).
&lt;/h2&gt;

&lt;p&gt;Use the + sign to create two divs at the same level: &lt;em&gt;.box1+.box2&lt;/em&gt; will create:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;.box1+.box2&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#9-go-one-level-up"&gt;
  &lt;/a&gt;
  9. Go one level up!
&lt;/h2&gt;

&lt;p&gt;It's useful if you want to create a nested element followed by a simple div for instance. In order to do that, you need to use ^, like so: &lt;/p&gt;

&lt;p&gt;&lt;em&gt;.container&amp;gt;child^.container2&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"child"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#10-you-can-also-group-things-up"&gt;
  &lt;/a&gt;
  10. You can also group things up!
&lt;/h2&gt;

&lt;p&gt;Let's imagine that inside of your container you want a list with li elements, but then you want to go up with a paragraph. You can therefore do it like this: &lt;/p&gt;

&lt;p&gt;&lt;em&gt;.container&amp;gt;(ul&amp;gt;li*6)^p&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#11-create-a-full-doctype-quickly"&gt;
  &lt;/a&gt;
  11.  Create a full doctype quickly!
&lt;/h2&gt;

&lt;p&gt;To create a doctype very quickly, you just need one key and that's an exclamation point! Type &lt;em&gt;!&lt;/em&gt; and then press tab/enter and voila!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;!&lt;/em&gt; + tab/enter&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Document&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#12-create-any-element-with-its-name"&gt;
  &lt;/a&gt;
  12. Create any element with its name!
&lt;/h2&gt;

&lt;p&gt;You can simply write an element's name and then press tab/enter and it'll create said element.&lt;br&gt;
Some elements even come with attributes, that you can then change however you need. For instance, by typing &lt;em&gt;input&lt;/em&gt; and pressing tab/enter, you'll have the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The same goes for &lt;em&gt;textarea&lt;/em&gt;, &lt;em&gt;form&lt;/em&gt;, &lt;em&gt;img&lt;/em&gt;, &lt;em&gt;a&lt;/em&gt;, etc.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;textarea&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;cols=&lt;/span&gt;&lt;span class="s"&gt;"30"&lt;/span&gt; &lt;span class="na"&gt;rows=&lt;/span&gt;&lt;span class="s"&gt;"10"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see you'll now be able to gain many precious seconds in your coding time!&lt;/p&gt;

&lt;p&gt;Here's the full &lt;a href="https://github.com/Ziratsu/Emmet-Crash-Course"&gt;crash course&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Come and take a look at my &lt;strong&gt;Youtube channel&lt;/strong&gt;: &lt;a href="https://www.youtube.com/c/Learntocreate/videos"&gt;https://www.youtube.com/c/Learntocreate/videos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;See you soon!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Enzo. &lt;/p&gt;

</description>
      <category>html</category>
      <category>emmet</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Supercharge Your Node Productivity With Debugging</title>
      <author>Robbie Cahill</author>
      <pubDate>Thu, 25 Nov 2021 08:18:21 +0000</pubDate>
      <link>https://dev.to/ciphercode/debug-a-nodejs-express-app-with-vscode-2bh2</link>
      <guid>https://dev.to/ciphercode/debug-a-nodejs-express-app-with-vscode-2bh2</guid>
      <description>&lt;h4&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h4&gt;

&lt;p&gt;This tutorial will show you how to debug a NodeJS express app using Visual Studio Code. You don't need to be a node expert to do debugging, beginner level knowledge is all thats required.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-you-should-use-a-real-debugger-instead-of-raw-consolelog-endraw-"&gt;
  &lt;/a&gt;
  Why you should use a real debugger instead of &lt;code&gt;console.log()&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;Back when I was a mid level engineer at Symantec, learning how to use a debugger supercharged my productivity. I could do in a couple of hours work that might have taken me a day to do. Fixing bugs and building out features was much easier.&lt;/p&gt;

&lt;p&gt;I've found debugging especially useful when exploring unfamiliar codebases that I didn't write. You can easily see the results of even the most complex logic written in weird ways. Its much easier to reason out complex, convoluted logic when you can run it line by line and see how things change.&lt;/p&gt;

&lt;p&gt;If you've ever used &lt;code&gt;console.log()&lt;/code&gt; to print a value to the console, you might know how tedious it can get if you are trying to debug something complex. It prints one value at a time and you need to write a new &lt;code&gt;console.log()&lt;/code&gt; statement for each value you want to see. If the value you are looking at changes, you need to &lt;code&gt;console.log()&lt;/code&gt; it again. Its a bit like poking around with a blindfold or in the dark.&lt;/p&gt;

&lt;p&gt;None of this is necessary with a real debugger. Set a breakpoint in your code then run your app. When your app reaches the line you set a breakpoint on, you'll be able to see all variables in scope in the debug tab. With just one action, you can now see everything instead of just one value at a time.&lt;/p&gt;

&lt;p&gt;I started with just debugging my own application code but as time went by and I became more senior, I found I could get great insights by debugging framework code (such as the code for &lt;code&gt;express&lt;/code&gt; itself). I was able to find answers to questions that weren't even listed in the documentation.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h4&gt;

&lt;p&gt;You'll need to have both &lt;a href="https://code.visualstudio.com"&gt;Visual Studio Code&lt;/a&gt; and &lt;a href="https://nodejs.org"&gt;NodeJS&lt;/a&gt; installed for this guide. If you want to run and debug your app with a public URL instead of just &lt;code&gt;localhost&lt;/code&gt;, you'll also need &lt;a href="https://expose.sh/install?utm_source=expose.sh&amp;amp;utm_campaign=debugNodeExpressVscode"&gt;expose.sh&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#example-express-app"&gt;
  &lt;/a&gt;
  Example express app
&lt;/h4&gt;

&lt;p&gt;I recommend using my express example app, the entire code is shown below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// app.js&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;baz&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;one&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;two&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;three&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;five&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;two&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;three&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2 + 3 = &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;five&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Example app listening at http://localhost:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a new folder somewhere on your device, then copy and paste this code into a file with the name &lt;code&gt;app.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Set up your project with &lt;code&gt;npm init&lt;/code&gt;, then follow the prompts.&lt;/p&gt;

&lt;p&gt;Then run &lt;code&gt;npm install --save express&lt;/code&gt; to install the &lt;code&gt;express&lt;/code&gt; dependency.&lt;/p&gt;

&lt;p&gt;You can run the code with &lt;code&gt;node app.js&lt;/code&gt;. Hit &lt;a href="http://localhost:3000"&gt;&lt;/a&gt;&lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; in your browser and you'll immediately see this code has a bug because the output is not correct.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aL9xY8mz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://expose.sh/blog/learn-how-to-debug-node-express-with-vscode/wrong-output.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aL9xY8mz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://expose.sh/blog/learn-how-to-debug-node-express-with-vscode/wrong-output.png" alt="wrong output" width="553" height="279"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But don't fix it yet. You could look at the numbers and work out in your mind what the problem is. Instead, we'll use debugging to make it very easy to spot the problem, saving your brain.&lt;/p&gt;

&lt;p&gt;To start with, you'll need to set up Visual Studio Code (vscode), an open source IDE from Microsoft. If you don't yet have it, grab a free copy from &lt;a href="https://code.visualstudio.com"&gt;code.visualstudio.com&lt;/a&gt;. There are versions for Linux, Mac and Windows.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#set-up-vscode"&gt;
  &lt;/a&gt;
  Set up vscode
&lt;/h4&gt;

&lt;p&gt;VSCode is one of the easiest IDEs out there to set up debugging for, because its controlled by a simple config file. This means you can just copy and paste the config from a guide like this one, without needing to set it up manually or click lots of settings like you might need to do with other IDEs.&lt;/p&gt;

&lt;p&gt;Create a folder with the name &lt;code&gt;.vscode&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then create the file &lt;code&gt;.vscode/launch.json&lt;/code&gt; and paste in these contents:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// .vscode/launch.json&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;version&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.2.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;configurations&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Launch Express App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;program&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;${workspaceFolder}/app.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;request&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;launch&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;skipFiles&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;node_internals&amp;gt;/**&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pwa-node&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#set-a-breakpoint"&gt;
  &lt;/a&gt;
  Set a breakpoint
&lt;/h4&gt;

&lt;p&gt;A breakpoint is a place you set in your code where you want your application to pause, so you can inspect local variables and the general state of your app. In vscode, a breakpoint represented by a red dot to the left of the line number you want your app to pause on. Breakpoints are set by simply clicking the area to the left of the line number.&lt;/p&gt;

&lt;p&gt;We can see that some numbers have been added incorrectly, so set a breakpoint on the &lt;code&gt;res.send('2 + 3 = ' + five)&lt;/code&gt; line, by clicking on the area to the left of the line number. A red dot should appear where you clicked, like the one on line 14 below:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RS6EHmFi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://expose.sh/blog/learn-how-to-debug-node-express-with-vscode/breakpoint.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RS6EHmFi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://expose.sh/blog/learn-how-to-debug-node-express-with-vscode/breakpoint.png" alt="breakpoint" width="652" height="418"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We want to get to the bottom of why the value of &lt;code&gt;five&lt;/code&gt; is &lt;code&gt;4&lt;/code&gt; and not &lt;code&gt;5&lt;/code&gt;, like it should be.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#start-your-app-with-debugging"&gt;
  &lt;/a&gt;
  Start your app with debugging
&lt;/h4&gt;

&lt;p&gt;Click on the debug icon at the left of the vscode window to open the "Run and debug" pane. It looks like this: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NRgDA3q4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://expose.sh/blog/learn-how-to-debug-node-express-with-vscode/debug-pane.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NRgDA3q4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://expose.sh/blog/learn-how-to-debug-node-express-with-vscode/debug-pane.png" alt="debug pane" width="47" height="52"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You'll see this at the top of the left pane: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bXSWK58V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://expose.sh/blog/learn-how-to-debug-node-express-with-vscode/launch-express-app.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bXSWK58V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://expose.sh/blog/learn-how-to-debug-node-express-with-vscode/launch-express-app.png" alt="launch express app" width="171" height="23"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click that little green arrow icon to the left of "Launch Express App".&lt;/p&gt;

&lt;p&gt;Your express app will now launch inside vscode with full debugging support. In the "Debug Console" pane at the bottom of the vscode window you'll see it start up:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TmiH_2Sd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://expose.sh/blog/learn-how-to-debug-node-express-with-vscode/debug-console.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TmiH_2Sd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://expose.sh/blog/learn-how-to-debug-node-express-with-vscode/debug-console.png" alt="debug console" width="357" height="81"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The app is now being run within vscode with debugging support.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#trigger-your-breakpoint"&gt;
  &lt;/a&gt;
  Trigger your breakpoint
&lt;/h4&gt;

&lt;p&gt;With the app running in vscode, go to &lt;a href="http://localhost:3000"&gt;&lt;/a&gt;&lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; in your browser (or just click that link).&lt;/p&gt;

&lt;p&gt;The breakpoint will then be hit. It will look like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lGbzo3Yc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://expose.sh/blog/learn-how-to-debug-node-express-with-vscode/breakpoint-hit.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lGbzo3Yc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://expose.sh/blog/learn-how-to-debug-node-express-with-vscode/breakpoint-hit.png" alt="breakpoint hit" width="743" height="438"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are a few things going on here, so lets explain below.&lt;/p&gt;

&lt;p&gt;To the left under &lt;code&gt;RUN AND DEBUG&lt;/code&gt; you'll see the list of local variables. &lt;code&gt;req&lt;/code&gt; is the express &lt;code&gt;request&lt;/code&gt; object, &lt;code&gt;res&lt;/code&gt; is the express &lt;code&gt;response&lt;/code&gt; object. These are useful to look at if you want to see query parameters and data posted to your app.&lt;/p&gt;

&lt;p&gt;You can see all local variables and their values in scope at the line your breakpoint is on. To see all of this information using &lt;code&gt;console.log()&lt;/code&gt; you would have to log each variable one by one. With the debugger and a breakpoint you can see everything instantly.&lt;/p&gt;

&lt;p&gt;Above the &lt;code&gt;res.send&lt;/code&gt; line, i've done some basic arithmetic. You'll see the results of this in the list of local variables. For example the value of &lt;code&gt;two&lt;/code&gt; is &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now look at the value of &lt;code&gt;three&lt;/code&gt;. Clearly, it should be &lt;code&gt;3&lt;/code&gt; not &lt;code&gt;2&lt;/code&gt;, so there is the bug. Update the value of &lt;code&gt;three&lt;/code&gt; to &lt;code&gt;3&lt;/code&gt;, then stop and restart the application and the output will be correct.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gCMgdahD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://expose.sh/blog/learn-how-to-debug-node-express-with-vscode/correct-output.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gCMgdahD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://expose.sh/blog/learn-how-to-debug-node-express-with-vscode/correct-output.png" alt="correct output" width="542" height="273"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#debug-with-a-public-url"&gt;
  &lt;/a&gt;
  Debug with a Public URL
&lt;/h4&gt;

&lt;p&gt;You've learned to debug with a &lt;code&gt;localhost&lt;/code&gt; URL, only accessible from your computer. Using &lt;code&gt;expose&lt;/code&gt;, with a single terminal command you can give your locally running express app a public HTTPS URL which you can share with others. All traffic to this public URL will be automatically routed to &lt;code&gt;localhost&lt;/code&gt; through a secure tunnel.&lt;/p&gt;

&lt;p&gt;Why would you want to do this? Lets say you are building an API for an app and you are working with a front end (e.g. React) developer who will integrate with your API. This is a very common use case for &lt;code&gt;express&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You could set a breakpoint, then ask the React developer to trigger his app to call your API. You can then inspect the request and update your API to handle it.&lt;/p&gt;

&lt;p&gt;Other uses are Webhooks. If you ever have to do a webhook integration, you can configure your public URL with the webhook provider and trigger them to make a request to your locally running app, which you are debugging in vscode.&lt;/p&gt;

&lt;p&gt;You can now see exactly what your webhook provider is sending and you didn't even need to read (or even understand) their documentation. Now you know exactly what code to write to make use of that request. Regardless of how good or bad their documentation is, you now know what to do.&lt;/p&gt;

&lt;p&gt;To install &lt;code&gt;expose&lt;/code&gt;, go to the &lt;a href="https://expose.sh/install?utm_source=expose.sh&amp;amp;utm_campaign=debugNodeExpressVscode"&gt;Installation Page&lt;/a&gt; and follow the instructions shown. Its a copy and paste install for Linux and Mac. A downloadable &lt;code&gt;exe&lt;/code&gt; is available for Windows.&lt;/p&gt;

&lt;p&gt;Run &lt;code&gt;expose 3000&lt;/code&gt; and you should see output like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ expose 3000
http://mofgjp.expose.sh is forwarding to localhost:3000
https://mofgjp.expose.sh is forwarding to localhost:3000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now with the breakpoint still set and your app running in vscode, go to the HTTPS URL shown in your browser.&lt;/p&gt;

&lt;p&gt;The breakpoint will be hit as if you have just made the request to &lt;code&gt;localhost&lt;/code&gt;. If you want to get fancy, try hitting this URL from another computer or your phone and the breakpoint will still be hit.&lt;/p&gt;

&lt;p&gt;You can now share this URL with other developers you are integrating with, webhook providers and other people you want to share it with.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#using-the-debug-console"&gt;
  &lt;/a&gt;
  Using the debug console
&lt;/h4&gt;

&lt;p&gt;A nice little feature of the vscode debugger is the debug console. It opens up at the bottom of the window when you start debugging inside a pane with the title &lt;code&gt;DEBUG CONSOLE&lt;/code&gt;. If you've ever used the console inside devtools for your favorite web browser, this is pretty much the same thing but for back end NodeJS code.&lt;/p&gt;

&lt;p&gt;Sometimes you might want to try out an expression without modifying your code. In the debug console, try typing in &lt;code&gt;one + three&lt;/code&gt;. The result &lt;code&gt;4&lt;/code&gt; will appear in the console:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GzKiE_fZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://expose.sh/blog/learn-how-to-debug-node-express-with-vscode/one-plus-three.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GzKiE_fZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://expose.sh/blog/learn-how-to-debug-node-express-with-vscode/one-plus-three.png" alt="one plus three" width="360" height="192"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can run any JavaScript code inside the debug console. You can also run functions. Lets say a function you are calling is not doing what you expected it to do. You could try running it with different parameters inside the debug console until you get it to behave how you want, then update your code accordingly.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-to-the-next-line"&gt;
  &lt;/a&gt;
  Step to the next line
&lt;/h4&gt;

&lt;p&gt;Set a new breakpoint at the line &lt;code&gt;const foo = "bar"&lt;/code&gt;. Launch your express app in vscode, then hit the URL in your browser.&lt;/p&gt;

&lt;p&gt;The breakpoint will be hit. A useful feature of the debugger is the ability to run to the next line, so you can effectively run your app line by line.&lt;/p&gt;

&lt;p&gt;To step to the next line, click the "Step Over" icon, which looks like this: &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YCbZxBN7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://expose.sh/blog/learn-how-to-debug-node-express-with-vscode/step-over.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YCbZxBN7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://expose.sh/blog/learn-how-to-debug-node-express-with-vscode/step-over.png" alt="breakpoint hit" width="33" height="31"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you keep clicking it, your app will keep running to the next line until there are no more lines of the current method to run.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h4&gt;

&lt;p&gt;Debugging can supercharge your productivity as a NodeJS developer. You'll be able to fix bugs faster and spend way less time figuring out unfamiliar code. Instead of logging values one by one with &lt;code&gt;console.log&lt;/code&gt;, with debugging you can now see everything at once.&lt;/p&gt;

&lt;p&gt;Once you learn debugging, you'll never need to use &lt;code&gt;console.log&lt;/code&gt; for debugging again.&lt;/p&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>vscode</category>
      <category>express</category>
    </item>
    <item>
      <title>Adapter Pattern | Design Patterns in Java</title>
      <author>coder4life</author>
      <pubDate>Thu, 25 Nov 2021 08:11:25 +0000</pubDate>
      <link>https://dev.to/coder4_life/adapter-pattern-design-patterns-in-java-5en9</link>
      <guid>https://dev.to/coder4_life/adapter-pattern-design-patterns-in-java-5en9</guid>
      <description>&lt;p&gt;Java implementation of the Adapter Pattern, with acts a wrapper between two objects, that have incompatible interfaces. In this example we create an Adapter to make it possible to get Employees name and title in the same manner as with an ExecutiveEmployee.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/StrOCMTXEPg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>java</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>7 tips for the newbie freelancers</title>
      <author>Pasca Vlad</author>
      <pubDate>Thu, 25 Nov 2021 08:02:39 +0000</pubDate>
      <link>https://dev.to/pascavld/7-tips-for-the-newbie-freelancers-hde</link>
      <guid>https://dev.to/pascavld/7-tips-for-the-newbie-freelancers-hde</guid>
      <description>&lt;p&gt;&lt;em&gt;If you found value in this thread you will most likely enjoy my tweets too so make sure you follow me on &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt;  for more information about web development and how to improve as a developer. This article was first published on my &lt;a href="https://vladpasca.hashnode.dev/"&gt;Blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Do you want to become a freelancer?&lt;/p&gt;

&lt;p&gt;Everyone wants to do that now&lt;/p&gt;

&lt;p&gt;But no one knows how to begin and how to do it the right way&lt;/p&gt;

&lt;p&gt;There are a lot of things I wish I knew earlier when I first started my journey&lt;/p&gt;

&lt;p&gt;Here are 7 tips for the newbie freelancers&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Get a mentor&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is key when you're just starting out&lt;/p&gt;

&lt;p&gt;Having a good mentor can save you 6 months of research if used the right way&lt;/p&gt;

&lt;p&gt;The goal is to find someone who is just a few steps ahead of you and learn from them&lt;/p&gt;

&lt;p&gt;When looking for a mentor, create a connection first&lt;/p&gt;

&lt;p&gt;Don't DM someone and ask them to be your mentor right away&lt;/p&gt;

&lt;p&gt;This is not how you get a mentor&lt;/p&gt;

&lt;p&gt;And be willing to spend money on this&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Outreach&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is the action that gets your clients&lt;/p&gt;

&lt;p&gt;And this at the same time the most important action in the beginning&lt;/p&gt;

&lt;p&gt;If you don't do outreach you don't get clients&lt;/p&gt;

&lt;p&gt;If you want to learn how to do it the right way read this thread&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/VladPasca5/status/1460947838729428992?s=20"&gt;https://twitter.com/VladPasca5/status/1460947838729428992?s=20&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Work for free&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is one of the best things you can do when you first start freelancing&lt;/p&gt;

&lt;p&gt;Because let's face it&lt;/p&gt;

&lt;p&gt;You have no social proof&lt;/p&gt;

&lt;p&gt;No past work&lt;/p&gt;

&lt;p&gt;And no one knows you&lt;/p&gt;

&lt;p&gt;You can't expect someone to hire you if you have no experience&lt;/p&gt;

&lt;p&gt;This is why working for free is...&lt;/p&gt;

&lt;p&gt;the best strategies you can use in the beginning&lt;/p&gt;

&lt;p&gt;This is a strategy I'm using (and used) and it works like wonders&lt;/p&gt;

&lt;p&gt;If you want to learn more about it read this thread&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/VladPasca5/status/1450801786261020674?s=20"&gt;https://twitter.com/VladPasca5/status/1450801786261020674?s=20&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Focus on the things that matter&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is one of the most overlooked things when you're first starting out&lt;/p&gt;

&lt;p&gt;Everyone is focusing on creating the perfect portfolio, or the perfect offer, or the perfect outreach script&lt;/p&gt;

&lt;p&gt;But in reality, this won't get you more clients&lt;/p&gt;

&lt;p&gt;(at least in the beginning)&lt;/p&gt;

&lt;p&gt;What will get you clients in the beginning is outreach&lt;/p&gt;

&lt;p&gt;This is why you need to create everything as fast as you can and start doing outreach as soon as possible&lt;/p&gt;

&lt;p&gt;You will tha&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Build a portfolio&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Even though I said that focusing on building a perfect portfolio in the beginning is bad, you still need to have a portfolio&lt;/p&gt;

&lt;p&gt;Why?&lt;/p&gt;

&lt;p&gt;Because you need to have a place where you can show your past work and your testimonials&lt;/p&gt;

&lt;p&gt;If you create a portfolio you can...&lt;/p&gt;

&lt;p&gt;just redirect all of your potential clients there&lt;/p&gt;

&lt;p&gt;Where they can see your:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Offer&lt;/li&gt;
&lt;li&gt;Past work&lt;/li&gt;
&lt;li&gt;Social proof&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And they will be more likely to hire you after that&lt;/p&gt;

&lt;p&gt;Also, the SEO benefit is huge&lt;/p&gt;

&lt;p&gt;You can literally get clients through SEO without doing anything&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Join a private community of freelancers&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Another thing that helped me a lot in the beginning&lt;/p&gt;

&lt;p&gt;Once you join a community of freelancers you get access to people who are a lot more experienced with you and who can always help you out&lt;/p&gt;

&lt;p&gt;And this will save you a lot of time&lt;/p&gt;

&lt;p&gt;The price that you'll pay for that community is nothing compared to the time it saves you&lt;/p&gt;

&lt;p&gt;The community I joined is Utopia and it quickly became my go-to resource&lt;/p&gt;

&lt;p&gt;If you're interested in joining too, click the link below&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gumroad.com/a/830624883/vHMYE"&gt;https://gumroad.com/a/830624883/vHMYE&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Stay consistent&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You might not see results in the first few months&lt;/p&gt;

&lt;p&gt;But that is ok, especially if you're working for free&lt;/p&gt;

&lt;p&gt;Your goal in the beginning is to get as much social proof as possible&lt;/p&gt;

&lt;p&gt;If your goal is to get results for your clients you will win in the long term&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I hope found this useful and if you did please let me know. If you have any questions feel free to DM me on  &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>career</category>
    </item>
    <item>
      <title>Python String Methods for Whitespace Removal </title>
      <author>Bala Priya C</author>
      <pubDate>Thu, 25 Nov 2021 07:44:33 +0000</pubDate>
      <link>https://dev.to/balapriya/python-string-methods-for-whitespace-removal-57da</link>
      <guid>https://dev.to/balapriya/python-string-methods-for-whitespace-removal-57da</guid>
      <description>&lt;p&gt;When working with Python strings, there are times when you'll need to remove unwanted whitespaces, tabs, and newline characters.&lt;/p&gt;

&lt;p&gt;You may have to resize strings, or ensure consistency for further processing - such as processing text collected through forms.&lt;/p&gt;

&lt;p&gt;And Python's string methods for whitespace removal return strings with all unwanted whitespaces, and tabs removed.&lt;/p&gt;

&lt;p&gt;📑&lt;strong&gt;Note&lt;/strong&gt;: I'll use the term whitespaces going forward - whitespaces, tabs, and newlines have all been subsumed in this term 'whitespaces'.&lt;/p&gt;

&lt;p&gt;In this tutorial, you'll learn how you can remove leading, trailing, and both leading and trailing whitespaces using the built-in string methods, &lt;code&gt;lstrip()&lt;/code&gt;, &lt;code&gt;rstrip()&lt;/code&gt;, and &lt;code&gt;strip()&lt;/code&gt;, respectively.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-raw-lstrip-endraw-to-remove-leading-whitespaces-in-python-strings"&gt;
  &lt;/a&gt;
  How to Use &lt;code&gt;lstrip()&lt;/code&gt; to Remove Leading Whitespaces in Python Strings
&lt;/h2&gt;

&lt;p&gt;Let's start with the &lt;code&gt;lstrip()&lt;/code&gt; method.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;string&amp;gt;.lstrip()&lt;/code&gt; returns a copy of the string with all leading whitespaces removed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The &lt;code&gt;l&lt;/code&gt; in &lt;code&gt;lstrip()&lt;/code&gt; stands for left. So this method removes all whitespaces to the left of the first character in the string.&lt;br&gt;
Therefore it removes leading whitespaces.&lt;/p&gt;

&lt;p&gt;▶ Here's an example.&lt;br&gt;
Consider the string &lt;code&gt;"    Coding is hard, yet fun!\t"&lt;/code&gt;  - it has 4 leading whitespaces, and 1 trailing tab (&lt;code&gt;\t&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Now, call the &lt;code&gt;lstrip()&lt;/code&gt; method on this string. And store the returned string in the variable &lt;code&gt;l_str&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;long_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"    Coding is hard, yet fun!&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
&lt;span class="n"&gt;l_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;long_str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lstrip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's print out the lengths of the original string &lt;code&gt;long_str&lt;/code&gt;, and the returned string &lt;code&gt;l_str&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;long_str&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l_str&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# Output
&lt;/span&gt;&lt;span class="mi"&gt;29&lt;/span&gt;
&lt;span class="mi"&gt;25&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see from the lengths, the 4 leading whitespaces have been removed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-raw-rstrip-endraw-to-remove-trailing-whitespaces-in-python-strings"&gt;
  &lt;/a&gt;
  How to Use &lt;code&gt;rstrip()&lt;/code&gt; to Remove Trailing Whitespaces in Python Strings
&lt;/h2&gt;

&lt;p&gt;Let's now look at the &lt;code&gt;rstrip()&lt;/code&gt; method.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;string&amp;gt;.rstrip()&lt;/code&gt; returns a copy of the string with all trailing whitespaces removed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The &lt;code&gt;r&lt;/code&gt; in &lt;code&gt;rstrip()&lt;/code&gt; stands for right. So this method removes all whitespaces to the right of the last character in the string.&lt;br&gt;
Therefore it removes trailing whitespaces.&lt;/p&gt;

&lt;p&gt;▶ Let's use the same example string from the previous section. And call the &lt;code&gt;rstrip()&lt;/code&gt; method on this string, store the returned string in the variable &lt;code&gt;r_str&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;long_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"    Coding is hard, yet fun!&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
&lt;span class="n"&gt;r_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;long_str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;long_str&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r_str&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# Output
&lt;/span&gt;&lt;span class="mi"&gt;29&lt;/span&gt;
&lt;span class="mi"&gt;28&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, the trailing tab &lt;code&gt;\t&lt;/code&gt; has been removed. And the returned string's length is one less than the original string, as expected.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-raw-strip-endraw-to-remove-leading-and-trailing-whitespaces-in-python-strings"&gt;
  &lt;/a&gt;
  How to Use &lt;code&gt;strip()&lt;/code&gt; to Remove Leading and Trailing Whitespaces in Python Strings
&lt;/h2&gt;

&lt;p&gt;Now that you know how to remove leading and trailing whitespaces using &lt;code&gt;lstrip()&lt;/code&gt; and &lt;code&gt;rstrip()&lt;/code&gt; respectively, in this section, you'll learn how &lt;code&gt;strip()&lt;/code&gt; method helps remove both leading and trailing whitespaces.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;string&amp;gt;.strip()&lt;/code&gt; returns a copy of the string with all leading and trailing whitespaces removed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;▶ As with the earlier sections, let's call the &lt;code&gt;strip()&lt;/code&gt; method on the string &lt;code&gt;long_str&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;long_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"    Coding is hard, yet fun!&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
&lt;span class="n"&gt;s_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;long_str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;long_str&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s_str&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# Output
&lt;/span&gt;&lt;span class="mi"&gt;29&lt;/span&gt;
&lt;span class="mi"&gt;24&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;From the length of the returned string, you can see that both the 4 leading whitespaces, and the trailing &lt;code&gt;\t&lt;/code&gt; have been removed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Hope you found this short tutorial on string methods helpful.&lt;/p&gt;

&lt;p&gt;The table below summarizes what you've learned:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Method&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lstrip()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns a copy of the string with all leading whitespaces removed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rstrip()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns a copy of the string with all trailing whitespaces removed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;strip()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns a copy of the string with all leading and trailing whitespaces removed&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Happy learning and coding!😄&lt;/p&gt;

&lt;p&gt;Cover Image: Photo by &lt;a href="https://unsplash.com/@andoyc?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Antonio Castellano&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Benefits of Salesforce Consulting Services</title>
      <author>UI/UX Design Services </author>
      <pubDate>Thu, 25 Nov 2021 07:36:15 +0000</pubDate>
      <link>https://dev.to/reloadux/benefits-of-salesforce-consulting-services-2hpc</link>
      <guid>https://dev.to/reloadux/benefits-of-salesforce-consulting-services-2hpc</guid>
      <description>&lt;p&gt;Whether you are a newbie or a seasoned Salesforce user, hiring a consulting company to help you use the platform effectively has several benefits. First, this professional service can be invaluable in guiding your company through the initial stages of CRM adoption and beyond. It is essential to work with a &lt;a href="https://tkxel.com/salesforce-consulting-services/"&gt;Salesforce consultant&lt;/a&gt; who understands your business and your unique requirements. A consultant can help you decide which product is right for your business and create a detailed implementation plan.&lt;/p&gt;

&lt;p&gt;A consultant should understand the different platforms and programs your company needs to succeed. They should also be able to handle time constraints and tight deadlines. This will allow them to offer a custom solution that will meet your business expectations and goals. These consultants will address any issue during the implementation process, such as changes to your CRM platform. These professionals can also streamline updates and support functions for your organization. Ask the consultants for references from past clients to determine if they have worked with similar organizations before.&lt;/p&gt;

&lt;p&gt;A Salesforce consultant can help you reach your goals by providing custom solutions. They will implement your CRM system and train employees on how to use it. They will also ensure the relationship between you and your clients is maintained and optimized. In addition to this, a Salesforce consultant will have good communication skills. They will also help you to implement changes and customize your CRM to suit your business. And once your CRM is in place, you can be sure to benefit from Salesforce Consulting Services.&lt;/p&gt;

&lt;p&gt;A Salesforce consultant should be able to explain how often you need updates. This will give you an idea of what to expect from them. It is important to note that you should choose a Salesforce consultant willing to commit to ongoing support. While the initial implementation period can last a long time, you should always have someone on-call to help with the ongoing maintenance. As long as you can communicate with them, you can trust them with your business's most sensitive data.&lt;/p&gt;

&lt;p&gt;When choosing a Salesforce partner, it is essential to know your business goals. Your business's objectives will determine the type of services you need and the features you need. If you're a customer-focused company, your consulting partner will identify your needs and then help you choose the right Salesforce edition to meet your needs. Once you've chosen your Salesforce partner, you'll be able to enjoy many benefits that your customers will appreciate.&lt;/p&gt;

&lt;p&gt;The Salesforce review center has over 1 million reviews of Salesforce consulting services. If you'd like to find a reliable partner, you can check out the company's profile in AppExchange. These profiles will give you details about the number of projects the consultant has completed and how many people have reviewed the services. If you're unsure about the right partner, you can always contact the review center to discuss your needs. A trusted and experienced consultant will make it easier for you to navigate the program and make it more effective for you to do your job.&lt;/p&gt;

&lt;p&gt;A professional Salesforce consulting team will not only offer you a customized solution for your business's needs, but they will also provide recommendations for compatible software for your business. As a result, using a CRM system will improve your company's performance and reduce operational costs. Additionally, a &lt;a href="https://salesforce.com"&gt;CRM platform&lt;/a&gt; can help you integrate your online and offline channels seamlessly. In addition to these advantages, it can also improve your business's mobile responsiveness and boost sales. These are all benefits of a Salesforce consultant.&lt;/p&gt;

&lt;p&gt;When hiring a Salesforce consulting firm, you must consider several factors. The firm's location is an essential consideration because the prices of these services are directly related to the consultant's expertise. Therefore, the rate of a Salesforce consulting company will depend on the location of the firm. The seniority of the team members is an essential factor that will determine the cost of the project. If you hire a company with a high level of experience, the rates will be lower than those of newcomers.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>ShipStation Competitors and Alternatives
</title>
      <author>hitakshi2323</author>
      <pubDate>Thu, 25 Nov 2021 07:32:39 +0000</pubDate>
      <link>https://dev.to/hitakshi2323/shipstation-competitors-and-alternatives-5994</link>
      <guid>https://dev.to/hitakshi2323/shipstation-competitors-and-alternatives-5994</guid>
      <description>&lt;p&gt;&lt;strong&gt;ShipStation Competitors and Alternatives&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1)Summary&lt;/strong&gt;&lt;br&gt;
ShipStation is an automation software for shipping operations. It helps eCommerce companies manage their shipments through a unified platform. It is integrated with over 84 carriers and logistics companies, and over 34 different selling channels. The platform offers an order management solution to manage shipments from multiple channels, manage multiple carriers, shop for shipping rates, and get discounts. It can be used to generate labels, track orders and create branded pages for tracking and returning orders. The platform also provides an inventory management solution to get stock levels and alerts on the shortage of items. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2)List of Top AfterShip Competitors and Alternatives for eCommerce&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.1)ClickPost&lt;/strong&gt;&lt;br&gt;
ClickPost is a leading multi-carrier management software. The platform uses AI-driven solutions to help eCommerce companies improve their shipping operations. It is integrated with over 200 carriers and provides intelligent recommendations and label generation facilities. It offers an integrated tracking system that allows companies to improve visibility and create branded tracking pages for a better post-purchase experience. It also provides a state-of-the-art NDR management tool that allows companies to reduce their RTO (return-to-origin) rates and improve the odds of successful deliveries. Further, it provides an intuitive returns management solution to handle reverse logistics.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.2)Narvar&lt;/strong&gt;&lt;br&gt;
Narvar is an eCommerce shipping software that allows businesses to manage their shipments through a unified platform. It is connected with over 300 shipping companies and 50 order management platforms. The platform can be used by eCommerce companies to create shipments, generate labels, and manage their shipments. It allows sellers to track orders and improve customer experience through custom tracking pages as well as notifications. The platform also allows companies to create branded returns pages and operates a network of over 200,000 drop-off points for collecting returning items. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.3)EasyPost&lt;/strong&gt;&lt;br&gt;
EasyPost is a multi-carrier management platform for eCommerce sellers. It has over 100 integrated shipping partners and has processed more than 1 billion orders since it was established. Companies can use the platform to create orders, generate and print shipping labels, track their shipments, and also create branded pages for tracking orders. It also provides an address verification service to companies to ensure that orders are delivered accurately, reducing the instance of RTO. Further, companies can insurance their shipments with EasyPost by paying a premium of 0.5% of the declared value of the shipment. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.4)AfterShip&lt;/strong&gt;&lt;br&gt;
AfterShip is a shipment tracking and automation software that has over 800 integrated shipping partners. Through the platform, companies can track shipments, create branded tracking pages, and send custom notifications to customers. The platform provides analytics and comprehensive reports on the logistics operations to enhance the shipping experience. Further, it provides a returns management tool that helps companies create custom returns pages, set refund rules, and manage refunds. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.5)ParcelPerform&lt;/strong&gt;&lt;br&gt;
ParcelPerform is a tracking service that provides delivery data and analytics to eCommerce companies. With over 600 connected shipping companies, the platform can be used to receive tracking information on orders, performance reports on shipping operations, alerts on events, and predictive analytics for deliveries. It also provides companies the ability to create branded tracking pages to improve customer experience.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.6)Convey&lt;/strong&gt;&lt;br&gt;
Convey is a shipping management solution that helps companies improve their post-purchase experience and shipping performance. Through the platform, sellers can use data to reduce the cost of shipping and improve the efficiency of operations. It helps businesses predict the date of delivery and display that information on the checkout pages for customers. It enables the creation of branded tracking pages and custom notifications, while also providing the capability to communicate with customers across multiple channels.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3)How to Choose the Best ShipStation Competitors and Alternatives?&lt;/strong&gt;&lt;br&gt;
Look at the following factors before choosing &lt;a href="https://www.clickpost.ai/top-10-shipstation-alternatives-and-competitors"&gt;alternatives and competitors to ShipStation software&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;3.1) The types and number of services offered by the provider. &lt;br&gt;
3.2) The cost of the solution. &lt;br&gt;
3.3) The tracking capabilities of the platform. &lt;br&gt;
3.4) If the platform is capable of managing reverse logistics. &lt;br&gt;
3.5) If the platform has a reputable customer support team. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4)Final thoughts&lt;/strong&gt;&lt;br&gt;
While ShipStation may be a great solution, it will not suit the needs of every company. Therefore, when companies find that the solution is not working for them, they must switch to a competitor or alternative to ShipStation. &lt;/p&gt;

</description>
      <category>shipstationcompetitors</category>
      <category>shipstationalternatives</category>
    </item>
    <item>
      <title>Top 6 best android games 2021</title>
      <author>Slope Unblocked Games</author>
      <pubDate>Thu, 25 Nov 2021 07:32:13 +0000</pubDate>
      <link>https://dev.to/slopegameonl/top-10-best-android-games-2021-1c75</link>
      <guid>https://dev.to/slopegameonl/top-10-best-android-games-2021-1c75</guid>
      <description>&lt;p&gt;In recent years, Android games have become a more feasible alternative to handheld console games. Every day, a large number of mobile games are added to the Google Play store. Smartphones are the most convenient way for kids and adults to play internet games. Here is top 10 best Android games to look forward to in 2021, thanks to Google Play's variety of multi-genre games that never cease to astound consumers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oTiKuHeN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cwwnwwchhjp7bjcp80qk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oTiKuHeN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cwwnwwchhjp7bjcp80qk.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;League of Legends: Wild Rift&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;League of Legends: Wild Rift is now available in regional beta across Asia, with a worldwide release scheduled in early 2021.&lt;/p&gt;

&lt;p&gt;Wild Rift is a mobile version of League of Legends' basic MOBA gameplay, including many of the same characters and game features. Overall, mobile matches are substantially shorter, with the typical game lasting around 15 minutes against the 45-minute bouts that might occur on a PC.&lt;/p&gt;

&lt;p&gt;As a result of the great response to the beta version, Riot Games continues to make incremental tweaks based on beta input before the official global launch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pokemon Unite&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Pokemon Unite is set to be published in early 2021 and will feature MOBA-style gameplay. In a MOBA-style arena, two teams of five players will compete for points by collecting wild Pokemon scattered throughout the map.&lt;/p&gt;

&lt;p&gt;This might be a one-of-a-kind gameplay experience in the Pokemon universe, combining MOBA elements with the Pokemon universe. If you can't wait to try Pokemon Unite, you may play Pokemon-themed.io games like Pokemon Mega and Pokemon Tower Defense online.&lt;/p&gt;

&lt;p&gt;Tencent will publish the game, which TiMi Studios will produce. This is the first time a Chinese gaming business has been allowed to work on a Pokemon game, despite Nintendo's indicated interest in partnering with a Chinese company to make Pokemon games as far back as 2004.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Diablo Immortal&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Diablo III, developed by Blizzard Entertainment, is one of the most popular PC ARPG games, having sold over 12 million copies since its debut in 2012. Fans have long been demanding a sequel, but Blizzard has focused on releasing a mobile game.&lt;/p&gt;

&lt;p&gt;As a result, rather than being a real plot sequel, Diablo Immortal will be set between Diablo 2 and Diablo 3. The gameplay will be highly similar to the Diablo series' loot-and-grind mechanics and include MMO features.&lt;/p&gt;

&lt;p&gt;According to Blizzard, Diablo Immortal is expected to be released in 2021, followed by Diablo 4 for PC in 2022.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dawn Awakening&lt;/strong&gt;&lt;br&gt;
Tencent's Dawn Awakening is a long-awaited open-world zombie survival game developed by the same team behind PUBG Mobile.&lt;/p&gt;

&lt;p&gt;It's based on the Unreal four-engine, and the studio believes it'll deliver a console-like gaming experience on mobile devices. Many players are also likely to use Android emulators to play on PC.&lt;/p&gt;

&lt;p&gt;Supply looting, base building, and a dynamic weather system will play a big part in the game. The exact rules of the game are yet unknown. However, beta gameplay footage depicts a game that looks like PUBG Mobile but is set in a zombie-infested setting.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Plants Vs Zombie 3&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Early in 2020, EA and Popcap Games released a pre-alpha version of Plants vs. Zombies 3 with restricted downloads. They also did a limited soft launch in select areas. However, it is no longer available on the Google Play Store.&lt;/p&gt;

&lt;p&gt;Because EA and Popcap Games haven't said anything about the game being canceled, it's extremely probable that they're polishing it based on pre-alpha feedback and will rerelease it in 2021. It's unclear whether this is an official release or another round of beta testing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Path of Exile Mobile&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Since 2013, Path of Exile has catered to a small community of hardcore loot-and-grinders, while Diablo 3 reigns dominant in the mainstream ARPG market.&lt;/p&gt;

&lt;p&gt;As a result, two different Path of Exile releases may be released in 2021. Path of Exile Mobile will be the first, according to Grinding Gear Games, because the endgame Atlas mapping system in PoE works wonderfully on touchscreen devices.&lt;/p&gt;

&lt;p&gt;The second could be a real-life PC sequel called Path of Exile 2, which GGG has claimed will begin beta testing in late 2020 or early 2021.&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://slope2unblocked.com"&gt;https://slope2unblocked.com&lt;/a&gt; - tons of running game for free online.&lt;/p&gt;

</description>
      <category>game</category>
      <category>androidgames</category>
    </item>
    <item>
      <title>Faster! Optimizing React app to the bone</title>
      <author>Štěpán Granát</author>
      <pubDate>Thu, 25 Nov 2021 06:54:55 +0000</pubDate>
      <link>https://dev.to/tolgee_i18n/faster-optimizing-react-app-to-the-bone-21kc</link>
      <guid>https://dev.to/tolgee_i18n/faster-optimizing-react-app-to-the-bone-21kc</guid>
      <description>&lt;p&gt;In Tolgee platform, we manage translations. So our most important view is a list of translations, every row contains key and related translations in different languages. As this view serves multiple purposes, we have quite a lot of requirements and fulfilling all of them required quite a bit of optimizations, which I'd like to share with you today.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-we-dealing-with"&gt;
  &lt;/a&gt;
  What are we dealing with
&lt;/h3&gt;

&lt;p&gt;Mainly, a whole view is using infinite scrolling, where we automatically fetch additional data when user scrolls down. Every row needs to have some buttons, so he can edit, select or modify state of translations. We have search and filters, which should work swiftly when applied. Then we have resible columns, which allow user to change whole layout by mouse dragging. We also need to detect overflowing text vertically, which can't be done simply through css, but we need to "test render" it first and then see if it fits. And last but not least (as new features will surely come in the future), everything need to work with focus, so user can controll it through keyboard.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-identify-problems-generally"&gt;
  &lt;/a&gt;
  How to identify problems generally
&lt;/h3&gt;

&lt;p&gt;Basically always when your React application is slow it's due to too many components re-rendering or too often. React have very useful Developer Tools, where you can profile your App and then find out which components are taking most of the time to render.&lt;/p&gt;

&lt;p&gt;When I identified slow components, I needed to understand why exactly is rendering so slow.&lt;br&gt;
One might think that if we keep our components small, the amount of rendering should be managable, but as it turned out this was not the case. Main problem is that components often depend on one another (like parent and child or using same data) and when small change in your state causes a big chunk of your app to re-render, you might have to apply additional optimizations, which React doesn't make automatically.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To make sure that my optimizations are actually working I've brought my super old laptop to work, which I've considered the most reliable benchmark of improvement&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#one-problem-at-a-time"&gt;
  &lt;/a&gt;
  One problem at a time
&lt;/h2&gt;

&lt;p&gt;I will now try to ilustrate different situations on the example of our app and offer a way which we choosed as a solution. It is important to understand what exactly is happening, because optimizations are often tradeoffs - you exchange comfort (elegance/convenience/generality) for speed. So if you do incorrect optimizations, you might improve nothing and only ruin your code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#optimizing-state-management"&gt;
  &lt;/a&gt;
  Optimizing state management
&lt;/h3&gt;

&lt;p&gt;When we simply use Context API for our main state, we end up re-rendering almost entire view on every change. This issue is mostly visible when we use search field, as typing will become unbearably slow.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--09glPmyq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/051445jqbg09ql6g0n0j.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--09glPmyq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/051445jqbg09ql6g0n0j.gif" alt="Slow typing" width="640" height="302"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can solve this by using some state management tool (e.g. Redux, MobX, ...), or you can use context in a clever way, so you minimize re-rendering (check my previous &lt;a href="https://dev.to/tolgee_i18n/react-doesnt-need-state-management-tool-i-said-31l4"&gt;article&lt;/a&gt;).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#large-number-of-children-rerender"&gt;
  &lt;/a&gt;
  Large number of children re-render
&lt;/h3&gt;

&lt;p&gt;Clever state management still won't protect us completely against unnecessary re-renders. In some cases the fact the Component update causes all children re-render can be too expensive. You can avoid this by wrapping each child with &lt;code&gt;React.memo&lt;/code&gt; - React will then render child only when props change. However, make sure that you fully understand how it works in the &lt;a href="https://reactjs.org/docs/react-api.html#reactmemo"&gt;docs&lt;/a&gt;, and then check that it really helped.&lt;/p&gt;

&lt;p&gt;In our case we wrap each row in the list with &lt;code&gt;React.memo&lt;/code&gt;. Because the row is relying mostly on fetched data, we can save quite a lot of unnecessary re-rendering.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#infinite-scolling"&gt;
  &lt;/a&gt;
  Infinite scolling
&lt;/h3&gt;

&lt;p&gt;Our main problem now is that our page can have bascially infinite number of components. A way to solve this is to only render elements, that are currently visible to the user. It's better to use some third party solution for this, because it's quite complicated to do right. After some trial and error we ended up with library &lt;code&gt;react-list&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Libraries like these usually require you to specify size of the components upfront (as they need to calculate a full length of the scrollable area without actually rendering the content), which can be quite problematic - in our case row sizes are variable and so we can't really tell how big it will be untill we render it. &lt;code&gt;react-list&lt;/code&gt; is able to solve this by only asking you to estimate the size of rows and then when it actually renders the element, it updates the size automatically. This can lead to your scrollbar jumping (as a height of the container is changing while you are scrolling in it), but if your estimation is somehow decent, it is pretty minor issue.&lt;/p&gt;

&lt;p&gt;Nice! So now we decreased an overall number of components displayed from infinity to "it depends on your screen size". However we have another problem ...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SjsdeIou--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fu1p2sib6j2uuk58wjui.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SjsdeIou--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fu1p2sib6j2uuk58wjui.gif" alt="Slow scrolling" width="640" height="302"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reducing-rows-complexity"&gt;
  &lt;/a&gt;
  Reducing rows complexity
&lt;/h3&gt;

&lt;p&gt;Our infinite scrolling optimization wasn't without tradeoff. It takes siginificant time to render each row and because user can scroll quite fast, it can lead to content not keeping up with scrolling. Problem that is related to this is our resizeble layout which is also very slow.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xc3BkLIF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8nbcf6qhxs0xqxub2kx8.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xc3BkLIF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8nbcf6qhxs0xqxub2kx8.gif" alt="Slow resizing" width="640" height="302"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is quite difficult problem, because only thing that you can do here is to reduce complexity of individual rows. In our case we've mostly solved it by clever usage of css &lt;code&gt;grid&lt;/code&gt;, which allowed us create complex layouts using only few html elements.&lt;/p&gt;

&lt;p&gt;Another thing was to prevent displaying unnecessary stuff on first render. All our buttons are hidden by default and only appear when you hover the given row. We were doing this only by css, which doesn't help React at all. So my solution was to hide the buttons for real (not render them) and show them only &lt;code&gt;onmouseover&lt;/code&gt;, which improved situation quite significantly.&lt;/p&gt;

&lt;p&gt;This solution brought a new problem, that you were not able to use focus with &lt;code&gt;tab&lt;/code&gt;, as buttons were not actually present. I've solved this by always rendering first and last button (but hiding them with css) and other buttons would render when focus is within the row itself or when mouseover - this way user won't recognize the difference.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I was quite scared when I realized that our Application is becoming very slow and at the end I've spend one full week with these optimizations, but after some trial and error I've understood weak points and was able to target them. Considering the complexity it works fine even on my super old university laptop and I've learned a lot.&lt;/p&gt;

&lt;p&gt;I'm now happy developer and I spend quite a lot of my working time just scrolling around in our App.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SItArf_B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y2f23t3aws9kliso4hda.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SItArf_B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y2f23t3aws9kliso4hda.gif" alt="Fast scrolling" width="640" height="326"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;PS: Check &lt;a href="https://tolgee.io/"&gt;Tolgee.io&lt;/a&gt; and give us &lt;a href="https://github.com/tolgee/server"&gt;github stars&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Narvar Competitors and Alternatives</title>
      <author>maazkhan2323</author>
      <pubDate>Thu, 25 Nov 2021 06:46:59 +0000</pubDate>
      <link>https://dev.to/maazkhan2323/narvar-competitors-and-alternatives-eh8</link>
      <guid>https://dev.to/maazkhan2323/narvar-competitors-and-alternatives-eh8</guid>
      <description>&lt;p&gt;&lt;strong&gt;Narvar Competitors and Alternatives&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1)Summary&lt;/strong&gt; &lt;br&gt;
Narvar is shipping software for eCommerce companies. It offers integrations with more than 300 shipping companies and operates a network of 200,000 drop-off points for returning orders. The platform can be used by eCommerce sellers to create shipments, manage shipments, track orders, estimate the date of delivery, and more. It helps companies improve their post-purchase customer experience by enabling the creation of branded tracking and returns pages, while also delivering custom notifications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2)List of Top AfterShip Competitors and Alternatives for eCommerce&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.1)ClickPost&lt;/strong&gt;&lt;br&gt;
ClickPost is an international eCommerce shipping software that allows companies to manage multiple carriers through a unified interface. It is pre-integrated with over 200 carriers worldwide and allows sellers to go live with the shipping partner of their choice in a single day. It provides carrier recommendations, shipment creation, label generation as well as serviceability information in real-time. Further, it offers advanced tracking capabilities and enables the creation of branded tracking pages. It also provides a leading NDR management platform to prevent failed deliveries and reduce RTO rates for sellers while simultaneously providing an intuitive returns management solution. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.2)AfterShip&lt;/strong&gt;&lt;br&gt;
AfterShip is a shipping automation solution that allows eCommerce businesses to manage their logistics operations. It offers integrations with more than 800 shipping companies and works with over 10,000 brands throughout the world. It allows companies to track their shipments, estimate the date of delivery, send order status notifications, and create branded pages for tracking as well as returning items. It enables the creation of advanced rules for returning items, managing refunds, and getting the status of refunds in real-time. Further, AfterShip provides API integrations that allow sellers to generate labels, manage international orders and shop for rates.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.3)EasyPost&lt;/strong&gt;&lt;br&gt;
EasyPost is a carrier management solution. It is connected with more than 100 shipping companies and has processed over 1 billion shipments since its inception. The platform allows companies to manage multiple carriers and shipments, generate labels, and track orders through the same dashboard. It also enables sellers to create branded pages for tracking orders. Further, it provides value-added services such as address verification to ensure accurate deliveries and insurance coverage for a premium of 0.5% of the order value. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.4)ShipStation&lt;/strong&gt;&lt;br&gt;
ShipStation is an automation tool that allows sellers to manage their shipments and orders. It allows companies to integrate with more than 84 shipping companies and 34 marketplaces as well as digital storefronts. It provides a management solution that allows companies to control multiple channels, generate labels and discover the best shipping rates from within the platform. The platform helps enhance the post-purchase experience through branded tracking and returns pages, and custom labels. Further, it provides an inventory management solution that allows users to view stock levels and receive shortage alerts. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.5)ParcelPerform&lt;/strong&gt;&lt;br&gt;
ParcelPerform is an order tracking service that provides improved visibility and performance analytics to eCommerce companies. It is integrated with over 600 shipping companies. It provides sellers with tracking information on orders, shipping analytics on the efficiency of operations, alerts on the status of orders, and predictions based on data. It allows sellers to create branded pages for tracking orders to help improve the post-purchase experience and provide an additional sales channel. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.6)Convey&lt;/strong&gt;&lt;br&gt;
Convery is a management tool for the delivery operation of eCommerce companies. It processes 2.3 million tracking requests each day and processed over 8 billion orders since it was founded. The platform provides sellers with data on the performance of delivery operations to help reduce costs and increase efficiency. It enables companies to improve the post-purchase experience through the display of estimated date of delivery, branded tracking pages, customized notifications as well as improved communication via multiple channels. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3)How to Choose the Best Narvar Competitors and Alternatives?&lt;/strong&gt;&lt;br&gt;
Here is a list of factors to consider before selecting an alternative to Narvar. &lt;/p&gt;

&lt;p&gt;3.1) The cost of software, including any hidden costs. &lt;br&gt;
3.2) The availability and quality of the customer support offered.&lt;br&gt;&lt;br&gt;
3.3) The serviceability of the platform.&lt;br&gt;
3.4) If the platform provides tracking capabilities. &lt;br&gt;
3.5) If the platform provides return management solutions. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4)Final thoughts&lt;/strong&gt;&lt;br&gt;
Different platforms are built to serve the needs of different clients. While Narvar may be used by a multitude of clients, it may not suit the need of every company. Therefore, if the platform is not working for your company the way you expect it to, choose &lt;a href="https://www.clickpost.ai/top-8-best-narvar-competitors-alternatives"&gt;Narvar Competitors and Alternatives&lt;/a&gt; for ecommerce today!&lt;/p&gt;

</description>
      <category>narvarcompetitors</category>
      <category>narvaralternatives</category>
    </item>
    <item>
      <title>🚀 A powerful drag and drop implementation in just 16 lines of JavaScript</title>
      <author>Siddharth</author>
      <pubDate>Thu, 25 Nov 2021 06:44:02 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/a-powerful-drag-and-drop-implementation-in-just-16-lines-of-javascript-d5d</link>
      <guid>https://dev.to/siddharthshyniben/a-powerful-drag-and-drop-implementation-in-just-16-lines-of-javascript-d5d</guid>
      <description>&lt;p&gt;Drag and drop is a very useful tool in applications as it can simplify a large part of the process for users. It's also a common task we delegate to other libraries which may bloat your app when you just need &lt;em&gt;a very simple implementation&lt;/em&gt; when you can use the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API"&gt;Drag and Drop Web API&lt;/a&gt;. &lt;strong&gt;Today, I'll show you how you can do just that!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-we-are-making"&gt;
  &lt;/a&gt;
  What we are making
&lt;/h2&gt;

&lt;p&gt;This is the basic implementation we are aiming to build:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/SiddharthShyniben/embed/OJjePGv?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;That was made in just 16 lines of JavaScript!&lt;/p&gt;

&lt;p&gt;And with a few more lines we can add a lot more bonus features! Here's a demo with some more features!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/SiddharthShyniben/embed/xxLNJxj?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Play around with it, you will see that we can&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Drop elements only in certain places&lt;/li&gt;
&lt;li&gt;Style the element in which we are dropping&lt;/li&gt;
&lt;li&gt;Style the original copy of the dragged element&lt;/li&gt;
&lt;li&gt;(With a little trickery) even style the dragged element!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All this with just 30 lines of code!&lt;/p&gt;

&lt;p&gt;It works on almost all desktop browsers with partial support all the way back to IE 6(!) which should be enough for this to work, but it doesn't work on some mobile browsers.&lt;/p&gt;

&lt;p&gt;You can see the up-to-date CanIUse data here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h5Rn_oW2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://caniuse.bitsofco.de/image/dragndrop.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h5Rn_oW2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://caniuse.bitsofco.de/image/dragndrop.jpg" alt="Data on support for the drag and drop feature across the major browsers from caniuse.com" width="800" height="366"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dealing with libraries for this very basic functionality has been a pain for me, and to save you the trouble I thought I'd document the process here!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#html-structure"&gt;
  &lt;/a&gt;
  HTML structure
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#places-to-drag-into"&gt;
  &lt;/a&gt;
  Places to drag into
&lt;/h3&gt;

&lt;p&gt;You need some drop targets to be able to drag something into them right? We can add these using regular divs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;'drop'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;'drop'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;'drop'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;'drop'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I'll be referring to the places we can drop into as drop targets in this post&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can add as many of them wherever you like, as long as an element has the &lt;code&gt;drop&lt;/code&gt; class we &lt;strong&gt;will&lt;/strong&gt; be able to drop into them.&lt;/p&gt;

&lt;p&gt;We can also add some basic styles for them to look nice.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.drop&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;220px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;45px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#2563EB&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-element-to-drag"&gt;
  &lt;/a&gt;
  The element to drag
&lt;/h3&gt;

&lt;p&gt;For an element to be draggable, we need, well, an element! We can place the element in one of the drop targets we made before. This is how it should look like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;'drop'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;'drag'&lt;/span&gt; &lt;span class="na"&gt;draggable=&lt;/span&gt;&lt;span class="s"&gt;'true'&lt;/span&gt; &lt;span class="na"&gt;ondragstart=&lt;/span&gt;&lt;span class="s"&gt;'event.dataTransfer.setData('&lt;/span&gt;&lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="na"&gt;plain&lt;/span&gt;&lt;span class="err"&gt;',&lt;/span&gt; &lt;span class="na"&gt;null&lt;/span&gt;&lt;span class="err"&gt;)'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        Drag me!
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;'drop'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;'drop'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;'drop'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice how we also set the &lt;code&gt;draggable&lt;/code&gt; attribute to true. Every draggable element needs to have the &lt;code&gt;draggable&lt;/code&gt; attribute set for it to be draggable.&lt;/p&gt;

&lt;p&gt;Also, not every element can be dragged even if the &lt;code&gt;draggable&lt;/code&gt; attribute is set. We need to explicitly say that the element is draggable by listening to the &lt;code&gt;dragstart&lt;/code&gt; event in the HTML. There we are setting &lt;code&gt;null&lt;/code&gt; as we don't have any data to share and we are setting the data type &lt;code&gt;text/plain&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We can (again) also add some basic styles for them to look nice.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#drag&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that as long as an element has the &lt;code&gt;draggable&lt;/code&gt; attribute set to &lt;code&gt;true&lt;/code&gt; and the drop targets have the &lt;code&gt;drop&lt;/code&gt; class, the below code should work everywhere&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-minimal-implementation"&gt;
  &lt;/a&gt;
  The minimal implementation
&lt;/h2&gt;

&lt;p&gt;For our drag and drop to be functional, we just need 3 different event listeners. Everything else is a bonus.&lt;/p&gt;

&lt;p&gt;First, we need to store the element we are dragging. We can do this by listening to the &lt;code&gt;dragstart&lt;/code&gt; event.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dragged&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dragstart&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;dragged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Whenever an element is dragged, this will store the dragged element in a variable.&lt;/p&gt;

&lt;p&gt;Next, we can listen to drop events so we can drop elements.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;drop&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Prevent default behaviour (sometimes opening a link)&lt;/span&gt;
    &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;drop&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;dragged&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parentNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dragged&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dragged&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Whenever we drop an element, if the element is a drop target (has the &lt;code&gt;drop&lt;/code&gt; class) we will append the dragged element to the drop target.&lt;/p&gt;

&lt;p&gt;We're almost done, but we need to do one more thing to make this work.&lt;/p&gt;

&lt;p&gt;By default, dragging elements does nothing, so to prevent the default behavior we need to call &lt;code&gt;event.preventDefault&lt;/code&gt; whenever we drag over the drop target.&lt;/p&gt;

&lt;p&gt;This is easy to achieve with a oneliner:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dragover&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it! In 16 lines we have functional drag and drop!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/SiddharthShyniben/embed/OJjePGv?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Here's a video of it in action:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xp-mspR8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637759563871/Jbnu70TS1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xp-mspR8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637759563871/Jbnu70TS1.gif" alt="Minimal drag and drop" width="663" height="632"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-more-features"&gt;
  &lt;/a&gt;
  Adding more features
&lt;/h2&gt;

&lt;p&gt;Even if this drag and drop &lt;em&gt;works&lt;/em&gt;, it's not very nice. It doesn't seem very "natural". Luckily, in a few lines of code, we can make this drag and drop even better!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#styling-the-original-dragged-element"&gt;
  &lt;/a&gt;
  Styling the original dragged element
&lt;/h3&gt;

&lt;p&gt;Whenever we drag an element, the original copy of the element doesn't change its style. It would look better if we could add a different style to these dragged elements, like making them transparent to show that it is being dragged.&lt;/p&gt;

&lt;p&gt;This is very easy to do. Just add the styles in the &lt;code&gt;dragstart&lt;/code&gt; event listener.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dragstart&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;

    &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;opacity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// add more styles as you like...&lt;/span&gt;

    &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But we also need to reset the style once we finish dragging. We can do that by listening to &lt;code&gt;dragend&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addeventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dragend&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;opacity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#styling-the-drop-targets"&gt;
  &lt;/a&gt;
  Styling the drop targets
&lt;/h2&gt;

&lt;p&gt;We can also style the drop target by listening to the &lt;code&gt;dragenter&lt;/code&gt; event:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dragenter&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;drop&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;background&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#2c41cc&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once again, we need to reset the styles once we leave the element. We can do that by listening to &lt;code&gt;dragleave&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dragleave&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;drop&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;background&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also need to reset the styles once we drop the event. We can edit the &lt;code&gt;drop&lt;/code&gt; event to achieve this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;drop&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;drop&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;background&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;//...&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#styling-the-dragged-copy"&gt;
  &lt;/a&gt;
  Styling the dragged copy
&lt;/h3&gt;

&lt;p&gt;With a bit of trickery, we can style the dragged copy too! Maybe we can rotate the element a bit to make it a bit more natural.&lt;/p&gt;

&lt;p&gt;We can do this by styling the original copy and immediately undoing those styles in the &lt;code&gt;dragstart&lt;/code&gt; event so that the users don't see it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dragstart&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;

    &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rotate(-2deg)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the dragged copy will appear to be rotated when we are dragging it!&lt;/p&gt;

&lt;p&gt;You now have a fully functioning drag and drop implementation!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/SiddharthShyniben/embed/xxLNJxj?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Here's a video of it in action:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xqrFnCrf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637760011123/xOQLondbk.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xqrFnCrf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637760011123/xOQLondbk.gif" alt="Complete drag and drop.gif" width="663" height="632"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gist.github.com/SiddharthShyniben/cd35cf13929e93b4210ffae72b57f986"&gt;Here's a Gist with all the source code for reference&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We took a task for which we very commonly delegate to libraries and implemented it ourselves, with surprisingly little code.&lt;/p&gt;

&lt;p&gt;I hope this opens your eyes to how much you can do with just vanilla JS. You don't need libraries every time.&lt;/p&gt;

&lt;p&gt;Have you ever tried implementing drag and drop on your own? Share in the comments!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Top 10 platforms to get free good quality datasets </title>
      <author>Rajat Thakur</author>
      <pubDate>Thu, 25 Nov 2021 06:32:10 +0000</pubDate>
      <link>https://dev.to/digitallyrajat/top-10-platforms-to-get-free-good-quality-datasets-2og2</link>
      <guid>https://dev.to/digitallyrajat/top-10-platforms-to-get-free-good-quality-datasets-2og2</guid>
      <description>&lt;p&gt;If “the data is the new oil” then there is a lot of free oil just waiting to be used. And you can do some pretty interesting things with that data, like finding the answer to the question: Is Buffalo, New York really that cold in the winter?&lt;/p&gt;

&lt;p&gt;There is plenty of free data out there, ready to be used for school projects, market research, or just for fun. Before you go crazy, however, you should be aware of the quality of the data you find. Here are some great sources of free data and some ways to determine their quality.&lt;/p&gt;

&lt;p&gt;All of these dataset sources have strengths, weaknesses, and specialties. All in all, these are great pieces of equipment and you can spend a lot of your time digging rabbit holes.&lt;br&gt;
But if you want to stay focused and find what you need, it’s important to understand the nuances of each source and use their strengths to your advantage.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Google Dataset Search&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As the name suggests, Google Dataset Search is “a dataset search engine,” whose primary audience includes journalists and data researchers.&lt;/p&gt;

&lt;p&gt;Google Dataset Search has the most datasets of any options listed here, with 25 million datasets available when it exited beta in January 2020. As it comes to a Google product, the search function is powerful, but if you have to be really specific, it has plenty of filters to narrow down the results.&lt;/p&gt;

&lt;p&gt;When it comes to finding free public datasets, you can’t do much better than Google Dataset Search right now. Keep in mind that the Google Graveyard, which is a phenomenon where Google cancels a service or product on short notice, is a pervasive danger to Google products large and small. It is good to know the other options.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Kaggle&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Kaggle is a popular data science competition website that provides free public datasets that you can use to learn more about artificial intelligence (AI) and machine learning (ML).&lt;/p&gt;

&lt;p&gt;Organizations use Kaggle to display a prompt and # 40, as cassava leaf disease classification and # 41; and teams from around the world will compete against each other to solve it using algorithms (and win a cash prize).&lt;/p&gt;

&lt;p&gt;Kaggle is quite prominent in the data science community because it provides a way to test and demonstrate your skills — your performance in the Kaggle competition sometimes shows up in job interviews for AI / ML positions.&lt;/p&gt;

&lt;p&gt;After these competitions, the datasets are made available for use. At the time of writing, Kaggle has a collection of over 68,000 datasets, which he organizes using a system of tagging, usability scores, as well as positive reviews and negative.&lt;/p&gt;

&lt;p&gt;Kaggle has a strong community on their site, with discussion boards within each dataset and within each competition. There are also active communities outside of Kaggle, such as r / kaggle, which share tips and tutorials.&lt;/p&gt;

&lt;p&gt;All of this is to say that Kaggle is more than just a free dataset distributor; it’s also a way to test your skills as a data scientist. Free datasets are a side benefit that anyone can take advantage of.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;GitHub&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;GitHub is the global standard for collaborative and open-source online code repositories, and many of the projects it hosts have datasets you can use. There is a specific project for public datasets aptly called Awesome Public Datasets.&lt;/p&gt;

&lt;p&gt;Like Kaggle, the datasets available on GitHub are a side benefit of the site’s real purpose. In the case of GitHub, this is primarily a code repository service. This is not a data repository optimized for discovering datasets, so you might need to get a little creative to find what you’re looking for, and it won’t have the same variety as Google or Kaggle.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Government Sources&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Many government agencies make their data freely available online, allowing anyone to download and use public datasets. You can find a wide variety of government data from municipal, state, federal, and international sources.&lt;/p&gt;

&lt;p&gt;These datasets are great for students and those focusing on the environment, the economy, healthcare (a lot of these types of data due to COVID19), or demographics. Keep in mind that these aren’t the most stylish sites of all time — they are mostly focused on function rather than style.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;FiveThirtyEight&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;FiveThirtyEight is a data journalism website that occasionally makes its datasets available. Their original focus was sport but has since spread to pop culture, science and (most famous) politics.&lt;/p&gt;

&lt;p&gt;The datasets made available by FiveThirtyEight are highly organized and specific to their journalistic production. Unlike the other options on this list, you’ll likely end up browsing inventory rather than searching. And you might come across some fun and interesting data sets, like 50 years of a World Cup doppelganger.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Data.world&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Data.world is a data catalog service that simplifies collaboration on data projects. Most of these projects make their datasets available free of charge.&lt;/p&gt;

&lt;p&gt;Anyone can use data.world to create a workspace or a project that hosts a dataset. A wide variety of data is available, but it is not easy to navigate. You will need to know what you are looking for to see results.&lt;/p&gt;

&lt;p&gt;Data.world requires login to access their free community plan, which allows you to create your own projects / datasets and provides access to others’ projects / datasets. You will need to pay to access multiple projects, datasets, and repositories.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Newsdata.io news datasets&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Newsdata.io is a news API and they collect worldwide news data on a daily basis and they offer that news data with their news API. They also provide free news datasets and the best is that you can also make a news dataset according to your requirement with the help of Newsdata.io news API in python, which may take longer when you are fetching large sums of data.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;AWS Public Data sets&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Amazon makes large datasets available on its Amazon Web Services platform. You can download the data and use it on your computer, or analyze the data in the cloud using EC2 and Hadoop via EMR. You can read more about how the program works here.&lt;/p&gt;

&lt;p&gt;Amazon has a page that lists all the datasets to browse. You will need an AWS account, although Amazon does provide you with a free level of access for new accounts that will allow you to explore data at no cost.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Wikipedia&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Wikipedia is a free, online, community-edited encyclopedia. Wikipedia contains an astonishing expanse of knowledge, with pages on everything from the Ottoman Wars of the Habsburgs to Leonard Nimoy.&lt;/p&gt;

&lt;p&gt;As part of Wikipedia’s commitment to the advancement of knowledge, they offer all of their content free of charge and regularly generate dumps of all articles on the site.&lt;/p&gt;

&lt;p&gt;In addition, Wikipedia offers a history of changes and activities, which allows you to follow the evolution of a page on a topic over time and to know who contributes to it. You can find different ways to download the data on the Wikipedia site. You will also find scripts to reformat the data in various ways.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;UCI Machine Learning Repository&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The UCI Machine Learning Repository is one of the oldest sources of datasets on the web. While the datasets are user-supplied and therefore have varying levels of documentation and cleanliness, the vast majority are clean and ready to apply. UCI is a great first stop when looking for interesting datasets.&lt;/p&gt;

&lt;p&gt;The data can be downloaded directly from the UCI Machine Learning repository, without registration. These datasets tend to be quite small and don’t have a lot of nuance, but they are useful for machine learning.&lt;/p&gt;

&lt;p&gt;Quality data gives you quality work&lt;/p&gt;

&lt;p&gt;Free data is great, High-quality free data is better. If you want to do a great job with the data you find, you need to do your due diligence to make sure it’s good quality data by asking a few questions.&lt;/p&gt;

&lt;p&gt;Should I trust the data source?&lt;/p&gt;

&lt;p&gt;First, consider the overall reputation of your data source. Ultimately, datasets are created by humans, and those humans may have specific agendas or biases that can translate into your work.&lt;/p&gt;

&lt;p&gt;All of the data sources we have listed here are reliable, but there are several data sources that are not as reliable. The only downside to our listing here is that community-provided collections, such as data.world or GitHub, may vary in quality. If you have doubts about the reputation of your data source, compare it with similar sources on the same topic.&lt;/p&gt;

&lt;p&gt;Could the data be Incorrect?&lt;/p&gt;

&lt;p&gt;Next, examine your data set for any inaccuracies. Again, humans create these datasets and humans are not perfect. There may be errors in the data which, using a few quick tips, you can quickly identify and correct.&lt;/p&gt;

&lt;p&gt;First tip: calculate estimates for the minimum and maximum for any of your columns. Check if the values in your dataset are outside of this using the filtering and sorting options, shown here:&lt;/p&gt;

&lt;p&gt;Let’s say you have a small data set on used car prices. You would expect the price data to be somewhere between $ 7,000 and $ 20,000 or so. When you filter the price column from low to high, the low price probably shouldn’t be very far from $ 7,000.&lt;/p&gt;

&lt;p&gt;But humans can make mistakes and enter data incorrectly: Instead of $ 11,000.00, someone can type $ 1,100.00 or $ 11.00.00. Another common example is that sometimes people don’t want to provide actual data for things like phone numbers. You can get a lot of 9999999999 or 0000000000 in these columns.&lt;/p&gt;

&lt;p&gt;Also, pay attention to the column headings. A field can be titled “% occupied” and the entries can have 0.80 or 80. Both could mean 80% but would show up differently in the final data set.&lt;/p&gt;

&lt;p&gt;Then check for errors. If these are simple and obvious mistakes, correct them. If they are clearly incorrect, remove the entry from the dataset so that they do not collapse.&lt;/p&gt;

&lt;p&gt;Could the Data Be Unfinished?&lt;/p&gt;

&lt;p&gt;It is very common for a dataset to run out of data. Before you start working with the dataset, it is a good idea to check for null or missing values. If there are a lot of NULL values, the dataset is incomplete and may not be good to use.&lt;/p&gt;

&lt;p&gt;In Excel, you can do this by using the COUNTBLANK function, for example, COUNTBLANK (B1: B3) in the following image gives a number of 1.&lt;/p&gt;

&lt;p&gt;Too many zero values probably mean an incomplete data set. some null values, but not too many, you can pass and replace null values with 0 using SQL, or you can do it manually.&lt;/p&gt;

&lt;p&gt;How to know if the data is skewed?&lt;/p&gt;

&lt;p&gt;Understanding how your data set is asymmetric will help you choose the right data to analyze. It’s helpful to use visualizations to see how skewed your dataset is, as it’s not always obvious by just looking at the numbers.&lt;/p&gt;

&lt;p&gt;For numeric columns, use a histogram to see the type of distribution of each column (normal, left, right, uniform, bimodal, etc.).&lt;/p&gt;

&lt;p&gt;Strict recommendations of what to do next based on the dataset, but overall the way it is biased will give a general idea of the quality of the data and suggest which columns to use in the analysis. You can then use this general idea to avoid misrepresenting the data.&lt;/p&gt;

&lt;p&gt;For non-numeric columns, use a frequency table to see how many times a value is displayed. In particular, you might want to check if there is mainly a value present. If so, your analysis may be limited due to the low diversity of values. Again, this is just to give you a general idea of the quality of the data and indicate which relevant columns to use.&lt;/p&gt;

&lt;p&gt;You can create these visuals and frequency tables in Excel or Google Sheets using CSV, but you might want to turn to a Business Intelligence (BI) tool for complex data sets.&lt;/p&gt;

&lt;p&gt;Use free datasets&lt;/p&gt;

&lt;p&gt;Once you have your data and are confident in its quality, it’s time to put it to work. You can go a long way with tools like Excel, Google Sheets, and Google Data Studio, but if you really want best practices for your career data, you need to be familiar with the real deal: a BI platform.&lt;/p&gt;

&lt;p&gt;A BI platform will provide powerful data visualization capabilities for any data set, from small CSVs to large data sets hosted in data warehouses, such as Google BigQuery or Amazon Redshift. You can play around with your data to create dashboards and even collaborate with others.&lt;/p&gt;

</description>
      <category>news</category>
      <category>datasets</category>
      <category>api</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
