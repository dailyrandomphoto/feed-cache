<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Introduction to middleware in Express</title>
      <author>Naftali Murgor</author>
      <pubDate>Tue, 11 Jan 2022 14:13:40 +0000</pubDate>
      <link>https://dev.to/naftalimurgor/middleware-in-express-1kn5</link>
      <guid>https://dev.to/naftalimurgor/middleware-in-express-1kn5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;This tutorial will learn about middleware and how to middleware makes Express powerful and extensible.&lt;/p&gt;

&lt;p&gt;What is middleware? A middleware is a function that intercepts requests and or responses as they get in/out of your Express application. Middleware has access to request and response objects. &lt;/p&gt;

&lt;p&gt;Middleware functions can run any code, modify the &lt;code&gt;request(req)/response(res)&lt;/code&gt; objects, and has access to the request/response cycle&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-use-a-middlware-in-express"&gt;
  &lt;/a&gt;
  How to use a Middlware in Express
&lt;/h3&gt;

&lt;p&gt;Middlewares can be used as:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Application-wide - a middleware enabled for the entire application&lt;/li&gt;
&lt;li&gt;Router level middleware&lt;/li&gt;
&lt;li&gt;Error handling middlware&lt;/li&gt;
&lt;li&gt;3rd Party middlware&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#1-applicationwide-middleware"&gt;
  &lt;/a&gt;
  1. Application-wide Middleware
&lt;/h4&gt;

&lt;p&gt;Application-wide middleware are middleware enabled for the entire application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;middlwareFn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// for every request, middlewareFn will always be executed&lt;/span&gt;
&lt;span class="c1"&gt;// it's a middleware enable application-wide&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;middlwareFn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#2-router-level-middleware"&gt;
  &lt;/a&gt;
  2. Router Level middleware
&lt;/h4&gt;

&lt;p&gt;Router level middleware work the same as application-wide except that they are bound to an instance of &lt;code&gt;express.Router()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Say you have set up a router like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;
&lt;span class="c1"&gt;// instance of router&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;// declare a middleware function&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;logHTTPMethod&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Method: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// enable the middleware&lt;/span&gt;
&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;logHTTPMethod&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;logHTTpMethod&lt;/code&gt; middleware will be enabled for &lt;code&gt;router&lt;/code&gt; instance an will be run for all requests that are handle inside &lt;code&gt;router&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To enable &lt;code&gt;logHTTPMethod&lt;/code&gt;, we will pass the function as an argument after &lt;code&gt;router.METHOD()&lt;/code&gt; like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// code ommitted&lt;/span&gt;
&lt;span class="c1"&gt;// for every request to /accounts resource, we run logHTTPMethod&lt;/span&gt;
&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/accounts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;logHTTPMethod&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// route logic&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#3-errorhandling-middlware"&gt;
  &lt;/a&gt;
  3. Error-handling Middlware
&lt;/h4&gt;

&lt;p&gt;Error-handling middleware are similar to other middleware except that the signature is different.&lt;/p&gt;

&lt;p&gt;In Error-handling middware, signature require 4 arguments instead of 3.&lt;br&gt;
Parameters for Error-handling middleware: &lt;code&gt;(err, req, res, next)&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// code omitted&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ErrorHandler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Internal server Error&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ErrorHandler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// code omitted&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#4-3rd-party-middleware"&gt;
  &lt;/a&gt;
  4. 3rd Party middleware
&lt;/h4&gt;

&lt;p&gt;A 3rd party middlware is packaged as an npm module and can be installed as a dependency using &lt;code&gt;yarn&lt;/code&gt; or &lt;code&gt;npm&lt;/code&gt;&lt;br&gt;
A good example is a middleware that provides logging capabilities like &lt;code&gt;morgan&lt;/code&gt; or cookie parsing functionalities like &lt;code&gt;cookie-parser&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To use &lt;code&gt;morgan&lt;/code&gt; to log request info to the console(standard output):&lt;/p&gt;

&lt;p&gt;Add &lt;code&gt;morgan&lt;/code&gt; as a dependency:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;yarn&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="nx"&gt;morgan&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Import the dependency:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;morgan&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;morgan&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;morgan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;tiny&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// will log request info everytime a request is made to the application.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;Middleware is a function that has access to request (req), response (res) objects. The signature for using middleware is app.use(middlewareFn). Where app is an instance of Express or Router class.&lt;br&gt;
In our next article, create a tiny Express application to demonstrate:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Routing&lt;/li&gt;
&lt;li&gt;Middleware&lt;/li&gt;
&lt;li&gt;Route params &amp;amp; Route queries&lt;/li&gt;
&lt;li&gt;Authentication &amp;amp; Authorization&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We shall build a tiny e-commerce application, with a Nextjs powered front-end.&lt;/p&gt;

&lt;p&gt;Until next week, Adios!&lt;/p&gt;




&lt;p&gt;Found this article helpful? You may follow my handle on twitter &lt;a href="https://twitter.com/nkmurgor"&gt;@nkmurgor&lt;/a&gt; where I tweet about interesting topics on web development.&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Top 10 Python Frameworks for Game Development 2022</title>
      <author>virender</author>
      <pubDate>Tue, 11 Jan 2022 14:10:55 +0000</pubDate>
      <link>https://dev.to/virendebro/top-10-python-frameworks-for-game-development-2022-2e83</link>
      <guid>https://dev.to/virendebro/top-10-python-frameworks-for-game-development-2022-2e83</guid>
      <description>&lt;h2&gt;
  &lt;a href="#top-10-python-frameworks-for-game-development"&gt;
  &lt;/a&gt;
  Top 10 Python Frameworks for Game Development
&lt;/h2&gt;

&lt;p&gt;In this blog, i have discussed about Top 10 Python Frameworks for Game Development . Top 10 Python Frameworks for Game Development.&lt;/p&gt;

&lt;p&gt;Pygame&lt;br&gt;
PyKyra&lt;br&gt;
Pyglet&lt;br&gt;
Panda3D&lt;br&gt;
Kivy&lt;br&gt;
PyOpenGL&lt;br&gt;
Cocos2d&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2022/01/top-10-python-frameworks-for-game.html"&gt;Click Here&lt;/a&gt;&lt;br&gt;
To read the full blog, click on the link above or search my website (&lt;strong&gt;CodesAshish&lt;/strong&gt;) on Google. I used to upload blogs related to programming and coding on my website. So Please visit once.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thankyou&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>gamedev</category>
      <category>programming</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>Integration testing tool for DynamoDB</title>
      <author>Valentin BEGGI</author>
      <pubDate>Tue, 11 Jan 2022 13:49:11 +0000</pubDate>
      <link>https://dev.to/kumo/integration-testing-tool-for-dynamodb-59kb</link>
      <guid>https://dev.to/kumo/integration-testing-tool-for-dynamodb-59kb</guid>
      <description>&lt;p&gt;Integration testing in serverless architectures can be challenging. Testing specific outcomes within managed services is cumbersome. &lt;a href="https://github.com/Theodo-UK/sls-test-tools"&gt;sls-test-tools&lt;/a&gt; provides a range of utilities, setup, teardown and assertions to make it easier to write effective and high quality integration tests for Serverless Architectures on AWS.&lt;/p&gt;

&lt;p&gt;I’m happy to announce that sls-test-tools now ships with new DynamoDB assertions!&lt;/p&gt;

&lt;p&gt;Let's jump in a quick example 🏃‍♂️ !&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#function-to-test"&gt;
  &lt;/a&gt;
  1️⃣ Function to test
&lt;/h2&gt;

&lt;p&gt;Let's consider a simple Lambda function that uploads client transaction data to DynamoDB.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xLFgFm_8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcbz8weo05o0qcsuxtid.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xLFgFm_8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcbz8weo05o0qcsuxtid.png" alt="Architecture" width="880" height="327"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;DynamoDBClient&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@aws-sdk/client-dynamodb&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;DynamoDBDocumentClient&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;PutCommand&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@aws-sdk/lib-dynamodb&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;TransactionEvent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;clientName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nl"&gt;transactionData&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ddbDocClient&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;DynamoDBDocumentClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;DynamoDBClient&lt;/span&gt;&lt;span class="p"&gt;({}));&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;TransactionEvent&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;clientName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;transactionData&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;ddbDocClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;PutCommand&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;TableName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sells&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;PK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;clientName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;SK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;toISOString&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
        &lt;span class="nx"&gt;transactionData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Transaction saved !&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, the function just makes a single "put" call to DynamoDB using the AWS SDK. In our integration test we want to make sure that the data has indeed been written to Dynamo.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#writing-the-test"&gt;
  &lt;/a&gt;
  2️⃣ Writing the test!
&lt;/h2&gt;

&lt;p&gt;We will be using sls-test-tools new assertion &lt;code&gt;toExistInDynamoTable&lt;/code&gt;.&lt;br&gt;
The integration testing can be done in 3 phases:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Triggering the initial event 🔥. In our scenario we call our lambda handler but we could also imagine sending an event in an Event Bus, uploading a file to S3...&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Asserting the expected behavior ✅. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cleaning what has been created 🧹. This step is very important in order to keep tests idempotent.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Following these three steps, the integration test implementation would be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;DocumentClient&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;aws-sdk/clients/dynamodb&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;MockDate&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mockdate&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AWSClient&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sls-test-tools&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./uploadTransactionDataToDynamo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sells data upload integration testing&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="na"&gt;documentClient&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DocumentClient&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;AWSClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DocumentClient&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mockDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2022-01-01T00:00:00.000Z&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;MockDate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mockDate&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;clientName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;transactionData&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;someData&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="nx"&gt;afterAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// 🧹 clean what you've created&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;documentClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;TableName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sells&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;PK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;SK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;mockDate&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;should upload transaction data to Dynamo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// 🔥 trigger the initial event&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// ✅ assert the functional behavior you are testing&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;PK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;SK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;mockDate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;toExistInDynamoTable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sells&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All sls-test-tools assertions can of course be inverted using &lt;code&gt;expect(..).not&lt;/code&gt;.&lt;/p&gt;




&lt;p&gt;You can use those assertions on all type of DynamoDB table, on a composite primary index table containing a partition key &lt;code&gt;PK&lt;/code&gt; and a sort key &lt;code&gt;SK&lt;/code&gt; like in the previous example, as well as in simpler table where primary index is only a partition key.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;should upload transaction data to Dynamo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;PK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;toExistInDynamoTable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sells&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;documentClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;TableName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sells&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;PK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;SK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;mockDate&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#whats-next-"&gt;
  &lt;/a&gt;
  3️⃣ What's next !
&lt;/h2&gt;

&lt;p&gt;Our team is working on typing sls-test-tools and on adding more custom jest assertions. We are also writing a more exhaustive article on Serverless integration testing, please feel free to subscribe so you can be notified when it will come out!&lt;/p&gt;

&lt;p&gt;⭐️⭐️⭐️ Happy 2️⃣0️⃣2️⃣2️⃣ ⭐️⭐️⭐️&lt;/p&gt;

&lt;p&gt;For more background about sls-test-tools, you can check out these two articles:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/serverless-transformation/bridge-integrity-integration-testing-%5B%E2%80%A6%5Degy-for-eventbridge-based-serverless-architectures-b73529397251"&gt;https://medium.com/serverless-transformation/bridge-integrity-integration-testing-[…]egy-for-eventbridge-based-serverless-architectures-b73529397251&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/serverless-transformation/announcing-the-alpha-release-of-sls-t%5B%E2%80%A6%5Dbring-simplicity-to-serverless-integration-testing-a5a5ccabde43"&gt;https://medium.com/serverless-transformation/announcing-the-alpha-release-of-sls-t[…]bring-simplicity-to-serverless-integration-testing-a5a5ccabde43&lt;/a&gt; &lt;/p&gt;

</description>
      <category>serverless</category>
      <category>testing</category>
      <category>typescript</category>
      <category>aws</category>
    </item>
    <item>
      <title>Metamask authentication in NextJS with Third Web</title>
      <author>Anurag</author>
      <pubDate>Tue, 11 Jan 2022 13:33:55 +0000</pubDate>
      <link>https://dev.to/byteslash/metamask-authentication-in-nextjs-with-third-web-55ff</link>
      <guid>https://dev.to/byteslash/metamask-authentication-in-nextjs-with-third-web-55ff</guid>
      <description>&lt;p&gt;Hey There! What's up!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/zSHERzpaQ9x8k/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/zSHERzpaQ9x8k/giphy.gif" alt="hello" width="500" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So Web3 has been in total hype these days, and a lot of developers have been trying out web3 lately, including me. &lt;/p&gt;

&lt;p&gt;And, Authentication is one of the most skeptical parts of a Full Stack application! And in Web 3.0, this flow is managed by wallets, and Metamask is the most popular among them. &lt;/p&gt;

&lt;p&gt;So, in this article, I'm going to show how you can integrate Metamask auth with ThirdWeb in NextJS!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#demo-of-what-we-are-building-today"&gt;
  &lt;/a&gt;
  Demo of what we are building today:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.loom.com/share/d28cd1093e8046a8b9475777d3bf65ac"&gt;Demo&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-a-new-nextjs-app"&gt;
  &lt;/a&gt;
  Installing a new NextJS app
&lt;/h3&gt;

&lt;p&gt;First, create a NextJS app. I'm also using Tailwind CSS as my UI preference. You can use anything that you like.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="kd"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;tailwindcss&lt;/span&gt; &lt;span class="nx"&gt;metamask&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;auth&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#clear-up-the-boilerplate"&gt;
  &lt;/a&gt;
  Clear up the boilerplate
&lt;/h4&gt;

&lt;p&gt;Now, clear up the boilerplate in the &lt;code&gt;index.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#installing-the-dependencies"&gt;
  &lt;/a&gt;
  Installing the dependencies
&lt;/h4&gt;

&lt;p&gt;Now, we will install the only required dependency for this app, &lt;code&gt;@3rdweb/hooks&lt;/code&gt;. Go ahead and install &lt;code&gt;@3rdweb/hooks&lt;/code&gt; in your project directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# for npm
npm i @3rdweb/hooks

# for yarn
yarn add @3rdweb/hooks
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#setting-up-the-third-web-provider"&gt;
  &lt;/a&gt;
  Setting up the Third Web Provider
&lt;/h3&gt;

&lt;p&gt;Now, we are going to set up the &lt;code&gt;ThirdwebWeb3Provider&lt;/code&gt; in our &lt;code&gt;_app.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../styles/globals.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ThirdwebWeb3Provider&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@3rdweb/hooks&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;regenerator-runtime/runtime&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pageProps&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;supportedChainIds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;80001&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;connectors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;injected&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;ThirdwebWeb3Provider&lt;/span&gt;
      &lt;span class="na"&gt;supportedChainIds&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;supportedChainIds&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;connectors&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;connectors&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Component&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;pageProps&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;ThirdwebWeb3Provider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, first, we are going to import the provider and &lt;code&gt;regenerator-runtime/runtime&lt;/code&gt; at the top of the script.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ThirdwebWeb3Provider&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@3rdweb/hooks&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;regenerator-runtime/runtime&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, in the main function, we are specifying the &lt;code&gt;supportedChainIds&lt;/code&gt; and &lt;code&gt;connectors&lt;/code&gt;. You might be wondering what are these.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;supportedChainIds&lt;/code&gt; contains a list of networks that are supported by our app. Here, &lt;code&gt;80001&lt;/code&gt; is for &lt;code&gt;Mumbai Testnet Network&lt;/code&gt; and &lt;code&gt;4&lt;/code&gt; is for &lt;code&gt;Rinkeby Testnet Network&lt;/code&gt;. You can check the list of all networks and their Chain Ids  &lt;a href="https://dev.toLink"&gt;here&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;&lt;code&gt;connectors&lt;/code&gt; is basically all the wallet providers we want to support. Here, &lt;code&gt;injected&lt;/code&gt; is for Metamask wallet. This will be used when we are actually making the function to connect wallet.&lt;/p&gt;

&lt;p&gt;Next, we are wrapping our whole app in &lt;code&gt;ThirdwebWeb3Provider&lt;/code&gt; with &lt;code&gt;supportedChainIds&lt;/code&gt; and &lt;code&gt;connectors&lt;/code&gt; props to specify the configuration.&lt;/p&gt;

&lt;p&gt;That's it for the &lt;code&gt;_app.js&lt;/code&gt; file.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#making-a-ui-in-the-raw-indexjs-endraw-file"&gt;
  &lt;/a&gt;
  Making a UI in the &lt;code&gt;index.js&lt;/code&gt; file
&lt;/h3&gt;

&lt;p&gt;Now, let's first make a UI for the login flow.&lt;/p&gt;

&lt;p&gt;Head over to &lt;code&gt;index.js&lt;/code&gt; file and make a simple &lt;code&gt;button&lt;/code&gt; to connect wallet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"flex flex-col items-center justify-center min-h-screen py-2 bg-slate-100"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;
          &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"px-4 py-2 rounded-md bg-purple-600 cursor-pointer hover:bg-purple-500 text-xl font-semibold duration-100 text-white"&lt;/span&gt;
        &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          Connect Wallet
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point, you will have a basic UI like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ekyF8qMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641906515845/FMDlG49IA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ekyF8qMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641906515845/FMDlG49IA.png" alt="Screenshot (3).png" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#building-the-connect-wallet-functionality"&gt;
  &lt;/a&gt;
  Building the connect wallet functionality
&lt;/h3&gt;

&lt;p&gt;Now, let's build the &lt;code&gt;connect wallet&lt;/code&gt; functionality.&lt;/p&gt;

&lt;p&gt;First, we will import the &lt;code&gt;useWeb3&lt;/code&gt; hook from &lt;code&gt;@3rdweb/hooks&lt;/code&gt; in our &lt;code&gt;index.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useWeb3&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@3rdweb/hooks&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, inside the &lt;code&gt;Home&lt;/code&gt; component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const { connectWallet, address, error } = useWeb3();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we are going to assign the &lt;code&gt;connectWallet&lt;/code&gt; to the connect wallet button:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"px-4 py-2 rounded-md bg-purple-600 cursor-pointer hover:bg-purple-500 text-xl font-semibold duration-100 text-white"&lt;/span&gt;
&lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;connectWallet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;injected&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      Connect Wallet
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we are passing &lt;code&gt;injected&lt;/code&gt; as a param to the &lt;code&gt;connectWallet&lt;/code&gt; function. If your remember from the above steps, this is used to specify that we are going to use Metamask to authenticate user.&lt;/p&gt;

&lt;p&gt;Now, at this point, you will have a working connect wallet button.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#displaying-user-address"&gt;
  &lt;/a&gt;
  Displaying user address:
&lt;/h4&gt;

&lt;p&gt;Now, in the &lt;code&gt;Home&lt;/code&gt; component, we are going to check if the user is authenticated and then render component based on that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"flex flex-col items-center justify-center min-h-screen py-2 bg-slate-100"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"px-2 py-1 rounded-full bg-gray-200 hover:bg-gray-300 font-mono font-medium cursor-pointer duration-100"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;
        &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"px-4 py-2 rounded-md bg-purple-600 cursor-pointer hover:bg-purple-500 text-xl font-semibold duration-100 text-white"&lt;/span&gt;
        &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;connectWallet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;injected&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Connect Wallet
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#error-handling"&gt;
  &lt;/a&gt;
  Error handling:
&lt;/h4&gt;

&lt;p&gt;Sometimes, the app may not work cause of errors, so in that case, we can use the &lt;code&gt;error&lt;/code&gt; object and log its value.&lt;/p&gt;

&lt;p&gt;Below our &lt;code&gt;useWeb3&lt;/code&gt; hook:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;connectWallet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useWeb3&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it! We have done it!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3o6fJ1BM7R2EBRDnxK/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3o6fJ1BM7R2EBRDnxK/giphy.gif" alt="congrats" width="498" height="243"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>blockchain</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Rustifying my terminal</title>
      <author>mainrs</author>
      <pubDate>Tue, 11 Jan 2022 13:27:52 +0000</pubDate>
      <link>https://dev.to/mainrs/rustifying-my-terminal-3883</link>
      <guid>https://dev.to/mainrs/rustifying-my-terminal-3883</guid>
      <description>&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@davidboca?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;David Boca&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/rust?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Rust has been one of my favorites for around 3 years now. A lot of people started to write CLI tools that either replace or enhance on the experience that your favorites like &lt;code&gt;sed&lt;/code&gt; or &lt;code&gt;ls&lt;/code&gt; provide.&lt;/p&gt;

&lt;p&gt;This post is a short introduction to which CLIs I have installed and can recommend!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bat"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/sharkdp/bat"&gt;bat&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Probably one of the more known ones, &lt;code&gt;bat&lt;/code&gt; is an enhanced version of &lt;code&gt;cat&lt;/code&gt; that supports syntax highlighting out of the box.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--awmz1Kqe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jd5gvrowtxv3hb863omz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--awmz1Kqe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jd5gvrowtxv3hb863omz.png" alt="Image showing the output of running  raw `bat thefuck/conf.py` endraw  inside of thefuck's repository" width="880" height="535"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exa"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/ogham/exa"&gt;exa&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;exa&lt;/code&gt; is a modern replacement for &lt;code&gt;ls&lt;/code&gt;. It supports colored output, icons and has builtin support for git. It can show you the status of your files inside your repository and even use your &lt;code&gt;.gitignore&lt;/code&gt; file to hide content. &lt;code&gt;exa&lt;/code&gt; comes with better defaults and installing it is easy, since it's a single binary available for Linux, macOS and Windows.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4l0JVto0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cyjihblav42vbhs0c2as.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4l0JVto0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cyjihblav42vbhs0c2as.png" alt="Image showing the output of running  raw `exa -lbF --git --icons` endraw  inside of thefuck's repository" width="880" height="535"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ripgrep"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/BurntSushi/ripgrep"&gt;ripgrep&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;ripgrep&lt;/code&gt; is a more powerful and user-friendly alternative to tools like &lt;code&gt;grep&lt;/code&gt;. It does a recursive search on your current directory and finds all occurances of a given string or regex. It comes with a lot of CLI flags that you can use to tailor your search and provides nicer output using colors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--heIW5MAF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qfun4u8qjxmu6655f4py.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--heIW5MAF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qfun4u8qjxmu6655f4py.png" alt="Image showing an the output when running  raw `ripgrep xdg` endraw  iside of thefuck's repository" width="880" height="535"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tokei"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/XAMPPRocky/tokei"&gt;tokei&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;tokei&lt;/code&gt; does one thing and it does it good: counting the lines of code inside a given project!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qvjcGANZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/onm7tj4ls0565xj1vyye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qvjcGANZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/onm7tj4ls0565xj1vyye.png" alt="Image shows the output when running  raw `tokei` endraw  inside of thefuck's repository" width="880" height="535"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#zoxide"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/ajeetdsouza/zoxide"&gt;zoxide&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;zoxide&lt;/code&gt; remembers the folders you &lt;code&gt;cd&lt;/code&gt; into and allows you to fuzzy match onto them. The tool creates a ranking of the directories you visit, sorting them by the number of visits in descending order. When doing a fuzzy match, it chooses the directory with the highest match. The only caviat is that you have to use the &lt;code&gt;z&lt;/code&gt; command instead of &lt;code&gt;cd&lt;/code&gt;. But what are aliases for? 🤷.&lt;/p&gt;

&lt;p&gt;For example, my NixOS configuration is inside a folder called &lt;code&gt;nixos-config&lt;/code&gt;. It's the only folder I visited that contais &lt;code&gt;os&lt;/code&gt;. I can instantly switch to the folder by typing &lt;code&gt;z os&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#notable-mentions"&gt;
  &lt;/a&gt;
  Notable mentions
&lt;/h2&gt;

&lt;p&gt;Although I do not use the following CLIs that often, I still wanted to mention them:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/dandavison/delta"&gt;delta&lt;/a&gt;, a sane version of &lt;code&gt;git --diff&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bootandy/dust"&gt;dust&lt;/a&gt;, a CLI to help you find those folders that bloat your filesystem.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are a lot more cool CLIs out there, but these are the ones I do recommend and use frequently! If you happen to use other tools, let me know in the comments!&lt;/p&gt;

</description>
      <category>rust</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Become a master of the database using Appwrite's new query API</title>
      <author>Bradley Schofield</author>
      <pubDate>Tue, 11 Jan 2022 13:24:57 +0000</pubDate>
      <link>https://dev.to/appwrite/become-a-master-of-the-database-using-appwrites-new-query-api-5ge4</link>
      <guid>https://dev.to/appwrite/become-a-master-of-the-database-using-appwrites-new-query-api-5ge4</guid>
      <description>&lt;p&gt;With Appwrite 0.12, we made Appwrite harder, better, faster, stronger with many new additions to the Database! One of these recent changes is the Query API which has been completely rewritten to give you unparalleled control over your database queries using Appwrite.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-appwrite"&gt;
  &lt;/a&gt;
  🤔 What is Appwrite?
&lt;/h2&gt;

&lt;p&gt;If you're wondering what Appwrite is, you're missing out! &lt;a href="https://appwrite.io/"&gt;Appwrite&lt;/a&gt; is open source backend-as-a-service that abstracts all the complexity involved in building a modern application by providing you with a set of REST APIs for your core backend needs. Appwrite handles user authentication and authorization, file storage, real-time APIs, cloud functions, webhooks and the subject of today, databases.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-changed"&gt;
  &lt;/a&gt;
  👀 So what changed?
&lt;/h2&gt;

&lt;p&gt;In Appwrite 0.12, the syntax for queries has been rewritten to make it easier and provide greater control to developers. In all our SDKs we have introduced a new &lt;code&gt;Query&lt;/code&gt; class to abstract all the logic behind query creation. The new &lt;code&gt;Query&lt;/code&gt; class enables IDE auto-completion and makes it easier to develop your project without having to constantly refer to the documentation to see what queries are available to you. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-i-use-the-query-class"&gt;
  &lt;/a&gt;
  🧑‍💻 How do I use the Query class?
&lt;/h2&gt;

&lt;p&gt;Using the &lt;code&gt;Query&lt;/code&gt; class is easy! When using an API endpoint that supports queries, you pass an array of &lt;code&gt;Queries&lt;/code&gt; instead of the previously used strings.&lt;/p&gt;

&lt;p&gt;For example, if we had a movies collection, and wanted to search for &lt;code&gt;Avatar&lt;/code&gt; in the movie &lt;code&gt;title&lt;/code&gt;, we can now use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Database&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Query&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;appwrite&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;database&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Database&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;movies&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Avatar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see here, we are using the Query class's &lt;code&gt;.equal&lt;/code&gt; function, which checks for values that &lt;strong&gt;exactly match&lt;/strong&gt; the provided one within the attribute you specify ( &lt;code&gt;title&lt;/code&gt; in this case ).&lt;/p&gt;

&lt;p&gt;You can also search for multiple values within these queries, equivalent to a database &lt;code&gt;OR&lt;/code&gt; command. Let's say we'd like to search for movies with &lt;code&gt;Avatar&lt;/code&gt; or &lt;code&gt;Scott Pilgrim vs the World&lt;/code&gt; in the &lt;code&gt;title&lt;/code&gt;. The code would look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;movies&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Avatar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Scott Pilgrim vs the World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, what about &lt;code&gt;AND&lt;/code&gt; conditions? They are simple. Just add them to the main array of queries.&lt;/p&gt;

&lt;p&gt;For instance, if we were to search for movies released &lt;em&gt;after 2010&lt;/em&gt; but &lt;em&gt;before 2020&lt;/em&gt;, the query would look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;movies&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;greater&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;year&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lesser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;year&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2020&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There's also the &lt;code&gt;greaterEqual&lt;/code&gt; and &lt;code&gt;lesserEqual&lt;/code&gt; queries. These are exactly the same as the &lt;code&gt;greater&lt;/code&gt; and &lt;code&gt;lesser&lt;/code&gt; queires, but also check for equality. For instance, we could rewrite the above query to also include results from 2010 and 2020 as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;movies&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;greaterEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;year&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lesserEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;year&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2020&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also use the &lt;code&gt;search&lt;/code&gt; query to search for a substring within a string. For instance, if we wanted to search for movies with &lt;code&gt;Lord of the rings&lt;/code&gt; in the &lt;code&gt;title&lt;/code&gt;, we could use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;movies&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lord of the rings&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;When using a search query, please ensure that you have created a &lt;a href="https://appwrite.io/docs/database#indexes"&gt;Fulltext index&lt;/a&gt; for the attribute you're querying for.  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are also &lt;code&gt;notEqual&lt;/code&gt; queries. This is the opposite of the &lt;code&gt;equal&lt;/code&gt; function. If you wanted to search for movies that we not called &lt;code&gt;Avatar&lt;/code&gt;, you could use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;movies&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;notEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Avatar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Not only that, but you can also combine &lt;code&gt;AND&lt;/code&gt; with &lt;code&gt;OR&lt;/code&gt; like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;movies&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;greater&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;year&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;actors&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Adam Sandler&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Steve Buscemi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code will get all the movies after 2010 that has either Adam Sandler or Steve Buscemi.&lt;/p&gt;

&lt;p&gt;As you can see, the possibilities are endless with Queries, and there are loads of them to use. You can look at all possible operations in our &lt;a href="https://appwrite.io/docs/database#querying-documents"&gt;querying guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To use queries, you must have correctly set indexes on your attributes so Appwrite can efficiently search through your records. You can learn more about &lt;a href="https://appwrite.io/docs/database#indexes"&gt;supported indexes in Appwrite&lt;/a&gt; in our docs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  🎬 Conclusion
&lt;/h2&gt;

&lt;p&gt;As you can see, the new Query API is undoubtedly easier to use however that's not the only advantage of this new API! It also allows new &lt;code&gt;OR&lt;/code&gt; queries and is significantly faster in &lt;a href="https://dev.to/appwrite/appwrite-012-database-improvements-3kmh"&gt;benchmarks&lt;/a&gt;. The revamped Query API is just one of the many changes in Appwrite 0.12! Check out the full changelog &lt;a href="https://github.com/appwrite/appwrite/releases/0.12.0"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We'd love to hear your feedback on how we can make Appwrite better. Feel free to hop onto our &lt;a href="https://appwrite.io/discord"&gt;Discord server&lt;/a&gt; or start a &lt;a href="https://github.com/appwrite/appwrite/discussions"&gt;Github discussion&lt;/a&gt; to let us know how you're using Appwrite!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learn-more"&gt;
  &lt;/a&gt;
  📚 Learn more
&lt;/h2&gt;

&lt;p&gt;You can use following resources to learn more and get help regarding Appwrite and it's services&lt;/p&gt;

&lt;p&gt;🚀 &lt;a href="https://github.com/appwrite"&gt;Appwrite Github&lt;/a&gt;&lt;br&gt;
📜 &lt;a href="https://appwrite.io/docs"&gt;Appwrite Docs&lt;/a&gt;&lt;br&gt;
💬 &lt;a href="https://appwrite.io/discord"&gt;Discord Community&lt;/a&gt;&lt;/p&gt;

</description>
      <category>database</category>
      <category>appwrite</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Introduction to Operational Analytics</title>
      <author>Adit Modi</author>
      <pubDate>Tue, 11 Jan 2022 13:21:05 +0000</pubDate>
      <link>https://dev.to/aws-builders/introduction-to-operational-analytics-2fm</link>
      <guid>https://dev.to/aws-builders/introduction-to-operational-analytics-2fm</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Operational analytics refers to inter-disciplinary techniques and methodologies that aim to improve day-to-day business performance in terms of increasing efficiency of internal business processes and improving customer experience and value. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Business analysts used the traditional analytics systems to recognize the business trends and identify the decisions. But by using the operational analytics systems, they can initiate such business actions based on the recommendations that the systems provide. They can also automate the execution processes to reduce the human errors. This makes the system go beyond being descriptive to being more prescriptive and even being predictive in nature.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Enterprises often have diverse and complex IT infrastructure. Challenges arise when trying to identify sources to extract from or identify what operational data captures the state of an analytics application. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Traditionally this data came from logging information emanating from different parts of the system. Modern environments include trace and metric data along with log data. Trace data captures the user request for resources as it passes through different systems all the way to the destination and the response back to the user. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Metric data contain various measurements that provide insight into the health or operational state of these systems. The combination of these form a rich set of diverse operational data that analytics application can be built on.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H4ryFwMt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vy7x097z2ipn01axpy0g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H4ryFwMt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vy7x097z2ipn01axpy0g.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Architecture Options for Building an Analytics Application on AWS&lt;/strong&gt; is a Series containing different articles that cover the key scenarios that are common in many analytics applications and how they influence the design and architecture of your analytics environment in AWS. These series present the assumptions made for each of these scenarios, the common drivers for the design, and a reference architecture for how these scenarios should be implemented.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Operational analytics is the process of using data analysis and business intelligence to improve efficiency and streamline everyday operations in real time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A subset of business analytics, operational analytics is supported by data mining, artificial intelligence, and machine learning. It requires a robust team of business and data analysts. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#characteristics"&gt;
  &lt;/a&gt;
  Characteristics
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Discoverability&lt;/strong&gt;: The ability of the system to make operational data available for consumption. This involves discovering multiple disparate types of data available within an application that can be used for various ad hoc explorations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Observability&lt;/strong&gt;: The ability to understand internal state from the various signal outputs in the system. By providing a holistic view of these various signals along with a meaningful inference it becomes easy understand how healthy and well performant the overall system is.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;User centricity&lt;/strong&gt;: Each analytics application should address a well-defined operational scope and solve a particular problem at hand. Users of the system often won’t understand or care about the analytics process but only see the value the result.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Agility&lt;/strong&gt;: The system must be flexible enough to accommodate changing needs of an analytics application and offer necessary control to bring in additional data with low overhead.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#reference-architecture"&gt;
  &lt;/a&gt;
  Reference architecture
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m_worBWi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f3cfyqfmz2nkq83a5hxf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m_worBWi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f3cfyqfmz2nkq83a5hxf.png" alt="Image description" width="797" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Operational analytics reference architecture&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Operational data&lt;/strong&gt;: Operational data originates from various points in the environment and systems. It consists of log data including systems logs, machine logs, applications logs, events logs, audit and other logs; metric data systems metrics, resource utilization metrics, application performance metrics; trace data including request-response profile and other telemetric data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Transformation and ingestion&lt;/strong&gt;: This represents a layer that collects the operational data and performs additional dissection or enrichment or other transformation before being ingested into Amazon OpenSearch Service. These include decoration data from additional sources or transforming the data into form required for indexing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Indexing&lt;/strong&gt;: OpenSearch Service performs indexing of incoming transformed data and makes it available for near-real time searching.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Visualization&lt;/strong&gt;: This layer brings in all the operational data present in the system into a single pane of glass in the forms of graphs, visualization, and other dashboards for the particular analytics application.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Downstream application&lt;/strong&gt;: OpenSearch Service also allows operational data indexed to be available for machine learning, alerting, and reporting application. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
  &lt;a href="#configuration-notes"&gt;
  &lt;/a&gt;
  Configuration notes
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Choose data model before ingestion&lt;/strong&gt;: When bringing data in from disparate sources, especially from structured systems into structureless systems such as OpenSearch, special care must be taken to ensure that the chosen data model provides a frictionless search experience for users.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Decide what data fields will be searchable&lt;/strong&gt;: By default, Amazon OpenSearch Service indexes all data fields. This might not be desirable in situations like fully or partially matching on numeric data types.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Use tiered storage&lt;/strong&gt;: The value of operational data or any timestamped data generally decreases with the age of the data. Moving aged data into tiered storage can save significant operational cost. Summarized rollups that can condense the data also can help address storage cost.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Monitor all involved components&lt;/strong&gt;: Monitor all involved components with metrics in Amazon CloudWatch.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Hope this guide gives you an Introduction to Operational Analytics, explains the Characteristics and Reference Architecture for Operational Analytics.&lt;/p&gt;

&lt;p&gt;Let me know your thoughts in the comment section 👇&lt;br&gt;
And if you haven't yet, make sure to follow me on below handles:&lt;/p&gt;

&lt;p&gt;👋 &lt;strong&gt;connect with me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🤓 &lt;strong&gt;connect with me on &lt;a href="https://twitter.com/adi_12_modi"&gt;Twitter&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🐱‍💻 &lt;strong&gt;follow me on &lt;a href="https://github.com/AditModi"&gt;github&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
✍️ &lt;strong&gt;Do Checkout &lt;a href="https://aditmodi.hashnode.dev"&gt;my blogs&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Like, share and follow me 🚀 for more content.&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__497987"&gt;
  
    .ltag__user__id__497987 .follow-action-button {
      background-color: #000000 !important;
      color: #fa6c00 !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/aditmodi" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FYJrtrA_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--mUzXbt1U--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/497987/edde8513-7308-4a4d-9592-2be160d074d2.png" alt="aditmodi image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/aditmodi"&gt;Adit Modi&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/aditmodi"&gt;Cloud Engineer | AWS Community Builder | 8x AWS Certified | 3x Azure Certified | Author of Cloud Tech , DailyDevOps &amp;amp; BigDataJournal | DEV moderator&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;





&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/wellarchitected/latest/analytics-lens/operational-analytics.html"&gt;Reference Guide&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>bigdata</category>
      <category>analytics</category>
    </item>
    <item>
      <title>How Can I lower my GitHub Actions Costs?</title>
      <author>Melih Ekinci</author>
      <pubDate>Tue, 11 Jan 2022 13:17:38 +0000</pubDate>
      <link>https://dev.to/pankod/how-can-i-lower-my-github-action-costs-1dm0</link>
      <guid>https://dev.to/pankod/how-can-i-lower-my-github-action-costs-1dm0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#how-can-i-lower-my-github-actions-costs"&gt;
  &lt;/a&gt;
  How can I lower my GitHub Actions costs?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/features/actions"&gt;GitHub Actions&lt;/a&gt; charges per minutes spent on CI. There is no charge for the initial 3000 minutes for Team users; once the 3k threshold is passed, pricing is based on the OS used while no fees are charged for open-source projects. If you use your own build runner, there is no charge for it, including private projects. But using your own build runner can incur maintenance costs.&lt;/p&gt;

&lt;p&gt;The pay per minute is a great model because even if you use a lot of CI, you can get the CI service for affordable prices if you optimize your CI processes. Unfortunately, GitHub Actions does not illustrate in detail the minutes used up by your workflows or by the steps pertaining to these workflows when you are working on a project. &lt;/p&gt;

&lt;p&gt;Take a minute of your time to subscribe to &lt;a href="https://meercode.io"&gt;&lt;strong&gt;Meercode.io&lt;/strong&gt;&lt;/a&gt; to get a detailed report of your previous activities on CI, categorized according to the organization, repository, workflow, and workflow step.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-is-realtime-monitoring-important-for-your-devops-processes"&gt;
  &lt;/a&gt;
  Why is real-time monitoring important for your DevOps processes?
&lt;/h2&gt;

&lt;p&gt;The single most important KPI for almost anyone working in a DevOps role is the state of their CI processes. If you have a well-functioning process, this will save you the burden of daily operations. If your CI processes are not working properly and you want to follow it in real-time, you may be up a gum tree. You might want to do the tracking with an internal tool, whose development process can take way too much time, or turn to open-source solutions. You could also try creating your own monitoring tool by using a few of the open-source solutions out there, which is also bound to take up so much of your time.&lt;/p&gt;

&lt;p&gt;What if we told you about a product that allows monitoring of CI status? Did you know that in just 1 minute you can share the status of your CI processes with yourself, your development teams, and your manager? &lt;strong&gt;Meercode&lt;/strong&gt; gives you all of that. You can easily share weekly detailed emails, custom dashboards, and all with the whole team!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#track-your-multiple-ci-products-from-a-single-screen"&gt;
  &lt;/a&gt;
  Track your multiple CI products from a single screen!
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--msTcbvgo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/voijnt9jgwn43d8aa52s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--msTcbvgo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/voijnt9jgwn43d8aa52s.png" alt="Dashboard" width="880" height="389"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Does your company use GitHub Action, GitLab, Buddy, etc. for your Web/API development CI processes? Or are you having your CI processes transferred from GitLab CI to GitHub Actions? Or are you using a different product for Mobile CI? No need to switch back and forth between multiple screens! &lt;a href="https://meercode.io"&gt;&lt;strong&gt;Meercode.io&lt;/strong&gt;&lt;/a&gt; allows you to keep track of multiple CI tools, get weekly reports, get a detailed view of your usage, and create different dashboards for different teams in a single interface. Spare a minute for &lt;a href="https://meercode.io"&gt;&lt;strong&gt;Meercode.io&lt;/strong&gt;&lt;/a&gt; to see it all. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IwXxWF9b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wu3u77o60iv5gbs8rqv7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IwXxWF9b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wu3u77o60iv5gbs8rqv7.png" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T6kHIlAY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/anp4qz0fnllxwog82e9d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T6kHIlAY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/anp4qz0fnllxwog82e9d.png" alt="Image description" width="880" height="576"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A great tool for teams and offices based in different locations. Get a handle on your DevOps metrics effortlessly with &lt;a href="https://meercode.io"&gt;&lt;strong&gt;Meercode.io&lt;/strong&gt;&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>devops</category>
      <category>ci</category>
      <category>github</category>
      <category>githubactions</category>
    </item>
    <item>
      <title>Uncomfortable with your theme? Just make one</title>
      <author>Heaven Aldrico</author>
      <pubDate>Tue, 11 Jan 2022 13:09:00 +0000</pubDate>
      <link>https://dev.to/ldriko/uncomfortable-with-your-theme-just-make-one-4i7k</link>
      <guid>https://dev.to/ldriko/uncomfortable-with-your-theme-just-make-one-4i7k</guid>
      <description>&lt;p&gt;Can't find the right theme? or maybe you found one but suddenly found out there's something wrong about the theme and make you feel uncomfortable. It might even affect your productivity&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--upgdzbO_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b62m4s28zex1g0krhqvo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--upgdzbO_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b62m4s28zex1g0krhqvo.gif" alt="Uncomfortable" width="480" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well just make one. Yeah it's easier than I thought.&lt;/p&gt;

&lt;p&gt;I'm not gonna give you a tutorial that &lt;strong&gt;already&lt;/strong&gt; has been made, an information about how easy is it is just enough so &lt;a href="https://code.visualstudio.com/api/working-with-extensions/publishing-extension"&gt;here is the link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And I just made one myself combining ayu's color scheme and my own prefered colors. &lt;a href="https://marketplace.visualstudio.com/items?itemName=HeavenAldrico.aldrico-s"&gt;Here check it out&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W1sWruQ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ldriko/aldrico-s/blob/main/images/sample.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W1sWruQ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ldriko/aldrico-s/blob/main/images/sample.png%3Fraw%3Dtrue" alt="Sample" width="880" height="630"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading my first article. Please share your thoughts or share your own theme in the comment below thanks! &lt;/p&gt;

</description>
      <category>beginners</category>
      <category>productivity</category>
      <category>vscode</category>
    </item>
    <item>
      <title>GETTING STARTED WITH WEB DEVELOPMENT</title>
      <author>MFONIDO MARK</author>
      <pubDate>Tue, 11 Jan 2022 13:03:19 +0000</pubDate>
      <link>https://dev.to/favourmark05/getting-started-with-web-development-1cdj</link>
      <guid>https://dev.to/favourmark05/getting-started-with-web-development-1cdj</guid>
      <description>&lt;p&gt;A lot of persons have asked me via DM’s, or direct on how they can get started with web development and what’s the best method to use, and where they can get resources, so by the end of this article, we shall have an understanding of the basics of web development, what skills you need to know, and where to find them.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#outline"&gt;
  &lt;/a&gt;
  OUTLINE
&lt;/h4&gt;

&lt;p&gt;1: What is web development: How websites work, front-end vs back-end, code editor‌‌&lt;br&gt;
2: Basic front-end: HTML, CSS, and JavaScript‌‌&lt;br&gt;
3: Tools: Package managers, build tools, version control‌‌&lt;br&gt;
4a: Additional front-end: Sass, responsive design, JavaScript frameworks‌‌&lt;br&gt;
4b: Basic back-end: Server and database management, programming language&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  NOTE:
&lt;/h5&gt;

&lt;p&gt;In this roadmap, I recommend following Steps 1, 2, and 3 in order. Then, depending on whether you want to focus on more front-end or back-end, you can do steps 4a or 4b in any order.&lt;/p&gt;

&lt;p&gt;I think it’s a good idea for front-end web developers to know at least a bit of back-end, and vice versa. At the very least, knowing the basics of both will help you figure out if you like front-end or back-end better?&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-what-is-web-development"&gt;
  &lt;/a&gt;
  1. WHAT IS WEB DEVELOPMENT?
&lt;/h4&gt;

&lt;p&gt;Before we get into talking about actual coding and programming languages, let’s first look at some general information on what web development is: how websites work, the difference between front and back-end, and using a code editor.&lt;br&gt;
Web development is the work involved in developing a website for the Internet or an intranet. Web development can range from developing a simple single static page of plain text to complex web applications, electronic businesses, and social network services.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-do-websites-work"&gt;
  &lt;/a&gt;
  HOW DO WEBSITES WORK?
&lt;/h4&gt;

&lt;p&gt;All websites, at their most basic, are just a bunch of files that are stored on a computer called a server. This server is connected to the internet. You can then load that website through a browser (like Chrome, Firefox, or Safari) on your computer or your phone. Your browser is also called the client in this situation.&lt;br&gt;
So, every time that you’re on the internet, you (the client) are getting and loading data (like car or cat pics) from the server, as well as submitting data back to the server (load more car or cat pics!) This back and forth between the client and the server is the basis of the internet.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-is-the-difference-between-frontend-and-backend"&gt;
  &lt;/a&gt;
  WHAT IS THE DIFFERENCE BETWEEN FRONT-END AND BACK-END?
&lt;/h4&gt;

&lt;p&gt;The terms “front end,” “back end,” and “full-stack” web developer describe what part of the client/server relationship you’re working with.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;“Front end”&lt;/strong&gt; means that you’re dealing mainly with the client-side. It’s called the “front end” because it’s what you can see in the browser. Conversely, the “back end” is the part of the website that you can’t see, but it handles a lot of the logic and functionality that is necessary for everything to work. One way you can think about this is that front-end web development is like the “front of house” part of a restaurant. It’s the section where customers come to see and experience the restaurant– the interior decor, seating, and of course, eating the food.&lt;/p&gt;

&lt;p&gt;On the other hand, &lt;strong&gt;back-end&lt;/strong&gt; web development is like the “back of house” part of the restaurant. It’s where deliveries and inventory are managed, and the process to create the food all happens. There’s a lot of things behind the scenes that the customers won’t see, but they will experience (and hopefully enjoy) the end product– a delicious meal!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#using-a-code-editor"&gt;
  &lt;/a&gt;
  USING A CODE EDITOR.
&lt;/h4&gt;

&lt;p&gt;When you build a website, the most essential tool that you will use is your code editor or IDE (Integrated Development Environment). This tool allows you to write the markup and code that will make up the website. There are quite a few good options out there, but currently, the most popular code editor is VS Code. VS Code is a more lightweight version of Visual Studio, Microsoft’s main IDE. It’s fast, free, easy to use, and you can customize it with themes and extensions. Other code editors are Sublime Text, Atom, and Vim.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-basic-frontend"&gt;
  &lt;/a&gt;
  2. BASIC FRONT-END
&lt;/h4&gt;

&lt;p&gt;The front-end of a website is made up of three types of files: HTML, CSS, and JavaScript. These files are what is loaded in the browser, on the client-side. Let’s take a closer look at each one of them.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h4&gt;

&lt;p&gt;HTML, or HyperText Markup Language, is the foundation of all websites. It’s the main file type that is loaded in your browser when you look at a website. The HTML file contains all the content on the page, and it uses tags to denote different types of content. For example, you can use tags to create headline titles, paragraphs, bulleted lists, images, and so on. HTML tags by themselves do have some styles attached, but they are pretty basic, like what you would see in a Word document. The HTML is used to build the structure of any website, and the current version of HTML being used currently is HTML5.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h4&gt;

&lt;p&gt;CSS, or Cascading Style Sheets, lets you style that HTML content so it looks nice and fancy. You can add colours, custom fonts, and layout the elements of your website however you want them to look. You can even create animations and shapes with CSS!&lt;br&gt;
There is a lot of depth to CSS, and sometimes people tend to gloss over it so they can move on to things like JavaScript. However, I can’t overestimate the importance of understanding how to convert a design into a website layout using CSS. If you want to specialize in the front-end, it’s essential to have really solid CSS skills. And CSS helps you build responsive websites, webpages that look great on all screen sizes and multiple devices at the same time. the current version of CSS in use now is CSS3.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  JAVASCRIPT
&lt;/h4&gt;

&lt;p&gt;JavaScript is a multi-paradigm programming language that was designed to run in the browser. It is a prototype-based, multi-paradigm, imperative, and functional programming style. Using JavaScript, you can make your website dynamic, meaning it will respond to different inputs from the user or other sources.&lt;br&gt;
For example, you can build a “Back to Top” button that when the user clicks it, they’ll scroll back up to the top of the page. Or you can build a weather widget that will display today’s weather based on the user’s location in the world.&lt;br&gt;
Especially if you want to develop your skills later on with a JavaScript framework like React, you’ll understand more if you take the time to learn regular vanilla JavaScript first. It’s a really fun language to learn, and there’s so much you can do with it!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#where-to-learn-html-css-and-javascriptjs"&gt;
  &lt;/a&gt;
  WHERE TO LEARN HTML, CSS, AND JAVASCRIPT(JS)?
&lt;/h4&gt;

&lt;p&gt;A lot of persons do ask me what the best place to learn to code, and what is the best method of learning how to code. To me I prefer videos to books, it's just a matter of preference, but in all to get better at writing codes, you have to write the codes yourself, give at least 2 hours every day for practice and you will be amazed the result you will get in 4 to 7 months.&lt;br&gt;
Here are some resources that will be of help to you.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#free-code-camp"&gt;
  &lt;/a&gt;
  FREE CODE CAMP
&lt;/h4&gt;

&lt;p&gt;One of my favourite places to recommend is freeCodeCamp. It’s an online coding Bootcamp that is non-profit and completely free! I love this option because if you’re a beginner and not completely sure if coding is for you, it’s a low-pressure, risk-free way to see if you like it. One downside to freeCodeCamp is that while they do have an incredible curriculum with a built-in coding environment, they don’t have structured videos as part of it.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#team-treehouse"&gt;
  &lt;/a&gt;
  TEAM TREEHOUSE
&lt;/h4&gt;

&lt;p&gt;Team Treehouse is a premium online learning platform that is video-based and has multiple tracks that you can follow. They even have an online Tech Degree program which is like an online Bootcamp that you can complete in 4-5 months.&lt;br&gt;
Unfortunately, Treehouse isn’t free, but they do have different monthly or yearly plans depending on your budget. They have a free 7-day trial so you can see if you like it, and I can also give you a deal where you can get $100 off of 1 year of their Basic Plan. If you’re fairly certain you want to get into web development, Team Treehouse is a great place to learn.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#wes-bos"&gt;
  &lt;/a&gt;
  WES BOS
&lt;/h4&gt;

&lt;p&gt;Wes Bos has free courses on learning Flexbox, CSS Grid, and JavaScript that are excellent. I just went through his CSS Grid course, and it was really thorough and also fun. Wes is a great teacher!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#udemy"&gt;
  &lt;/a&gt;
  UDEMY
&lt;/h4&gt;

&lt;p&gt;Udemy is an online learning platform with a lot of great courses as well. One in particular that you might like is The Advanced CSS and Sass course by Jonas Schmedtmann– this paid course covers CSS grid, flexbox, responsive design, and other CSS topics!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#youtube"&gt;
  &lt;/a&gt;
  YOUTUBE
&lt;/h4&gt;

&lt;p&gt;There are also a ton of free video resources on YouTube:&lt;br&gt;
Traversy Media, probably the biggest web development channel out there, has an HTML Crash Course and CSS Crash Course.&lt;br&gt;
DesignCourse, a channel focused on web design and front-end, has an HTML &amp;amp; CSS tutorial for as well.&lt;br&gt;
And freeCodeCamp has their own YouTube channel, with videos like a Learn JavaScript course and other in-depth courses.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#books-and-articles-on-web-development"&gt;
  &lt;/a&gt;
  BOOKS AND ARTICLES ON WEB DEVELOPMENT
&lt;/h4&gt;

&lt;p&gt;If you’re more of a reading person, I would highly recommend the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The incredibly popular Jon Duckett books, on HTML &amp;amp; CSS, and JavaScript &amp;amp; jQuery. They are beautifully designed, really well-written, and have lots of photos and images to help teach the material.&lt;/li&gt;
&lt;li&gt;Eloquent JavaScript
And last but not least, some websites that have great articles and other resources are:&lt;/li&gt;
&lt;li&gt;Mozilla Developer Network&lt;/li&gt;
&lt;li&gt;CSS Tricks&lt;/li&gt;
&lt;li&gt;Smashing Magazine&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#3-tools"&gt;
  &lt;/a&gt;
  3. TOOLS
&lt;/h4&gt;

&lt;p&gt;Let’s get into some other front-end technologies now. As we mentioned, HTML, CSS, and JavaScript are the basic building blocks of front-end web development. In addition to them, there are a few other tools that you’ll want to learn.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#package-managers"&gt;
  &lt;/a&gt;
  PACKAGE MANAGERS
&lt;/h4&gt;

&lt;p&gt;Package managers are online collections of software, much of it open source. Each piece of software, called a package, is available for you to install and use in your own projects.&lt;br&gt;
You can think about them like plugins– instead of writing everything from scratch, you can use helpful utilities that other people have written already.&lt;br&gt;
The most popular package manager is called npm, or Node Package Manager, but you can also use another manager called Yarn. Both are good options to know and use, although it’s probably best to start out with npm.&lt;br&gt;
If you’re curious to learn more, you can read this article on the basics of using npm.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#gulp"&gt;
  &lt;/a&gt;
  GULP
&lt;/h4&gt;

&lt;p&gt;technically a task runner, has a suite of npm packages that you can use to compile and process your files.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#webpack"&gt;
  &lt;/a&gt;
  WEBPACK
&lt;/h4&gt;

&lt;p&gt;is a super powerful bundler that can do everything Gulp can do plus more. It’s used a ton in JavaScript environments, particularly with JavaScript Frameworks (which we’ll get to in a bit). One down side of Webpack is that it requires a lot of configuration to get up and running, which can be frustrating.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#parcel"&gt;
  &lt;/a&gt;
  PARCEL
&lt;/h4&gt;

&lt;p&gt;is a newer bundler like Webpack, but it comes pre-configured out of the box, so you can literally get it going in just a few minutes. And you won’t have to worry as much about configuring everything.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#version-control-system"&gt;
  &lt;/a&gt;
  VERSION CONTROL SYSTEM
&lt;/h4&gt;

&lt;p&gt;Version control (also called source control) is a system that keeps track of every code change that you make in your project files. You can even revert to a previous change if you make a mistake. It’s almost like having infinite save points for your project, and let me tell you, it can be a huge lifesaver.&lt;br&gt;
The most popular version control system is an open source system called Git. Using Git, you can store all your files and their change history in collections called repositories.&lt;br&gt;
You may have also heard of GitHub, which is an online hosting company owned by Microsoft where you can store all your Git repositories.&lt;br&gt;
To learn Git and GitHub, GitHub.com has some online guides that explain how to get up and running. Traversy Media also has a YouTube video explaining how Git works.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4a-additional-frontend"&gt;
  &lt;/a&gt;
  4A: ADDITIONAL  FRONTEND
&lt;/h4&gt;

&lt;p&gt;Once you have the basics of front-end down, there are some more intermediate skills that you will want to learn. I recommend that you look at the following: Sass, responsive design, and a JavaScript framework.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#sass"&gt;
  &lt;/a&gt;
  SASS
&lt;/h4&gt;

&lt;p&gt;Sass is an extension of CSS that makes writing styles more intuitive and modular. It’s a really powerful tool. With Sass, you can split up your styles into multiple files for better organization, create variables to store colors and fonts, and use mixins and placeholders to easily reuse styles.&lt;br&gt;
Even if you just utilize some of the basic features, like nesting, you will be able to write your styles more quickly and with less headache.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#responsive-design"&gt;
  &lt;/a&gt;
  RESPONSIVE DESIGN
&lt;/h4&gt;

&lt;p&gt;Responsive design ensures that your styles will look good on all devices–desktops, tablets, and mobile phones. The core practices of responsive design include using flexible sizing for elements, as well as utilizing media queries to target styles for specific devices and widths.&lt;br&gt;
For example, instead of setting your content to be a static 400px wide, you can use a media query and set the content to be 50% width on desktop and 100% on mobile.&lt;br&gt;
Building your websites with responsive CSS is a must these days, as mobile traffic is outpacing desktop traffic in many cases.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#javascript-frameworks"&gt;
  &lt;/a&gt;
  JAVASCRIPT FRAMEWORKS
&lt;/h4&gt;

&lt;p&gt;Once you have the basics of vanilla JavaScript down, you may want to learn one of the JavaScript frameworks (especially if you want to be a full-stack JavaScript developer).&lt;br&gt;
These frameworks come with pre-built structures and components that allow you to build apps more quickly than if you started from scratch.&lt;br&gt;
Currently, you have three main choices: React, Angular, and Vue.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#react"&gt;
  &lt;/a&gt;
  REACT
&lt;/h4&gt;

&lt;p&gt;React (also known as React.js or ReactJS) is a free and open-source front-end JavaScript library for building user interfaces based on UI components. It is maintained by Meta (formerly Facebook) and a community of individual developers and companies.React can be used as a base in the development of single-page or mobile applications. However, React is only concerned with state management and rendering that state to the DOM, so creating React applications usually requires the use of additional libraries for routing, as well as certain client-side functionality If you’re interested in a premium React course, both Tyler McGinnins and Wes Bos have great courses.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#vue"&gt;
  &lt;/a&gt;
  VUE
&lt;/h4&gt;

&lt;p&gt;Vue.js (commonly referred to as Vue; pronounced /vjuː/, like "view") is an open-source model–view–viewmodel front-end JavaScript framework for building user interfaces and single-page applications.It was created by Evan You, and is maintained by him and the rest of the active core team members.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#angular"&gt;
  &lt;/a&gt;
  ANGULAR
&lt;/h4&gt;

&lt;p&gt;Angular (commonly referred to as "Angular 2+" or "Angular CLI") is a TypeScript-based free and open-source web application framework led by the Angular Team at Google and by a community of individuals and corporations. Angular is a complete rewrite from the same team that built AngularJS.&lt;/p&gt;

&lt;p&gt;Angular is used as the frontend of the MEAN stack, consisting of MongoDB database, Express.js web application server framework, Angular itself (or AngularJS), and Node.js server runtime environment. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#now-the-big-question-which-framework-should-i-learn-or-which-is-the-best"&gt;
  &lt;/a&gt;
  NOW THE BIG QUESTION "WHICH FRAMEWORK SHOULD I LEARN OR WHICH IS THE BEST?
&lt;/h4&gt;

&lt;p&gt;You might be wondering now, “Ok, well, which framework is the best?”&lt;br&gt;
The truth is, they are all good. In web development, there’s almost never a single choice that is 100% the best choice for every person and every situation.&lt;br&gt;
Your choice will most likely be determined by your job, or simply by which one you enjoy using the most. If your end goal is to land a job, try researching which framework seems to be the most common in potential job listings.&lt;br&gt;
Don’t worry too much about which framework to choose. It’s more important that you learn and understand the concepts behind them. Also, once you learn one framework it will be easier to learn other ones (similar to programming languages).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4b-basic-backend"&gt;
  &lt;/a&gt;
  4B: BASIC BACK-END
&lt;/h4&gt;

&lt;p&gt;The back-end, or the server-side of web development, is made up of three main components: the server, a server-side programming language, and the database.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-server"&gt;
  &lt;/a&gt;
  THE SERVER
&lt;/h4&gt;

&lt;p&gt;As we mentioned at the very beginning, the server is the computer where all the website files, the database, and other components are stored.&lt;br&gt;
Traditional servers run on operating systems such as Linux or Windows. They’re considered “centralized” because everything–the website files, back-end code, and data are stored together on the server.&lt;br&gt;
Nowadays there are also serverless architectures, which is a more decentralized type of setup. This type of application splits up those components and leverages third party vendors to handle each of them.&lt;br&gt;
Despite the name, though, you still do need some kind of server, to at least store your website files. Some examples of serverless providers are AWS (Amazon Web Services) or Netlify.&lt;br&gt;
Serverless setups are popular because they are fast, cheap, and you don’t need to worry about server maintenance. They’re great for simple static websites that don’t require a traditional server-side language. However, for very complex applications the traditional server setup might be a better option.&lt;br&gt;
To learn more about serverless setups, Netlify has an informative blog post that takes you through all the steps to setup a static website with deployment.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#backend-programming-language"&gt;
  &lt;/a&gt;
  BACKEND PROGRAMMING LANGUAGE
&lt;/h4&gt;

&lt;p&gt;On the server, you need to use a programming language to write the functions and logic for your application. The server then compiles your code and conveys the result back to the client.&lt;br&gt;
Popular programming languages for the web include PHP, Python, Ruby, C# and Java. There is also a form of server-side JavaScript– Node.js, which is a run-time environment that can run JavaScript code on the server.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-check-out-a-list-of-the-most-commonly-used-programming-languages-for-backend-web-development"&gt;
  &lt;/a&gt;
  LET'S CHECK OUT A LIST OF THE MOST COMMONLY USED PROGRAMMING LANGUAGES FOR BACKEND WEB DEVELOPMENT
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#c"&gt;
  &lt;/a&gt;
  C
&lt;/h4&gt;

&lt;p&gt;C# was developed as Microsoft’s competitor to Java. It’s used to make web apps with the .NET framework, game development, and can even be used to create mobile apps.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#java"&gt;
  &lt;/a&gt;
  JAVA
&lt;/h4&gt;

&lt;p&gt;Java is one of the most popular programming languages, and is used in web apps as well as to build Android apps.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#nodejs"&gt;
  &lt;/a&gt;
  NODE.JS
&lt;/h4&gt;

&lt;p&gt;Node.js is a very popular technology (according to Stack Overflow’s 2019 developer survey). One thing to note: it isn’t technically a server-side language– it’s a form of JavaScript that runs on the server using the Express.js framework.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#php"&gt;
  &lt;/a&gt;
  PHP
&lt;/h4&gt;

&lt;p&gt;PHP is the language that powers WordPress, so this might be a good choice if you think you will be working with small business websites, as many of them use WordPress. You can also build web apps with the Laravel framework.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#python"&gt;
  &lt;/a&gt;
  PYTHON
&lt;/h4&gt;

&lt;p&gt;Python is growing in popularity, especially as it is used in data science and machine learning. It’s also considered to be good, as its syntax is simpler than some other languages. If you want to build web apps, you can use the Django or Flask frameworks.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#ruby"&gt;
  &lt;/a&gt;
  RUBY
&lt;/h4&gt;

&lt;p&gt;Ruby is another language that has a syntax considered to be fun  to learn. You can build web apps with the framework Ruby on Rails.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  NOTE
&lt;/h3&gt;

&lt;p&gt;Just like with the JavaScript frameworks, there’s no #1 best programming language. Your choice should be based on either your personal interest and preference, as well as potential jobs– so do a little research on which might be a good choice for you.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#database"&gt;
  &lt;/a&gt;
  DATABASE
&lt;/h4&gt;

&lt;p&gt;Databases, as the name implies, are where you store information for your website. Most databases use a language called SQL (pronounced “sequel”) which stands for “Structured Query Language.”&lt;br&gt;
In the database, data is stored in tables, with rows sort of like complex Excel documents. Then you can write queries in SQL in order to create, read, update, and delete data.&lt;br&gt;
The database is run on the server, using servers like Microsoft SQL Server on Windows servers, and MySQL for Linux.&lt;br&gt;
There are also NoSQL databases, which store the data in JSON files as opposed to the traditional tables. One type of NoSQL database is MongoDB, which is often used with React, Angular, and Vue applications.&lt;br&gt;
Some examples of how data is utilized on websites are:&lt;br&gt;
If you have a contact form on your website, you could build the form so that every time someone submits the form, their data is saved onto your database.&lt;br&gt;
You can also user logins on the database, and write logic in the server-side language to handle checking and authenticating the logins.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  CONCLUSION
&lt;/h4&gt;

&lt;p&gt;A few tips that I have if you are going the self-taught route:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Don’t try to learn everything at once. Pick one skill to learn at a time.&lt;/li&gt;
&lt;li&gt;Don’t jump around from tutorial to tutorial. As you’re learning, it’s ok to check out different resources to see which one you like best. But again, pick one and try to go all the way through it.&lt;/li&gt;
&lt;li&gt;Know that learning web development is a long-term journey. Despite the stories you may have read of people going from zero to landing a web dev job in 3 months, I would aim more at 1 to 2 years to become job ready, if you’re starting from the beginning.&lt;/li&gt;
&lt;li&gt;Just watching a video course or reading a book won’t automatically make you an expert. Learning the material is just the first step. Building actual websites and projects (even just demo ones for yourself) will help you to really cement your learning.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  REFERENCES
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://www.freecodecamp.org/news/beginners-roadmap-web-development/"&gt;https://www.freecodecamp.org/news/beginners-roadmap-web-development/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web"&gt;https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web&lt;/a&gt;&lt;br&gt;
Credit:&lt;br&gt;
Jessica Chan&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>frontend</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>1. Call Stack</title>
      <author>SungJunEun</author>
      <pubDate>Tue, 11 Jan 2022 12:52:56 +0000</pubDate>
      <link>https://dev.to/sungjuneun/1-call-stack-32n8</link>
      <guid>https://dev.to/sungjuneun/1-call-stack-32n8</guid>
      <description>&lt;h3&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Reference&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Call_stack"&gt;Call Stack — MDN&lt;/a&gt; 100%&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#articles"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Articles&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://medium.com/@gaurav.pandvia/understanding-javascript-function-executions-tasks-event-loop-call-stack-more-part-1-5683dea1f5ec"&gt;Understanding Javascript Call Stack, Event Loops — Gaurav Pandvia&lt;/a&gt; 100%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://medium.freecodecamp.org/understanding-the-javascript-call-stack-861e41ae61d4"&gt;Understanding the JavaScript Call Stack — Charles Freeborn&lt;/a&gt; 100%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://web.archive.org/web/20180701233338/https://www.valentinog.com/blog/js-execution-context-call-stack/"&gt;Javascript: What Is The Execution Context? What Is The Call Stack? — Valentino Gagliardi&lt;/a&gt; 50%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://gist.github.com/jesstelford/9a35d20a2aa044df8bf241e00d7bc2d0"&gt;What is the JS Event Loop and Call Stack? — Jess Telford&lt;/a&gt; 100%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://blog.bitsrc.io/understanding-execution-context-and-execution-stack-in-javascript-1c9ea8642dd0"&gt;Understanding Execution Context and Execution Stack in Javascript — Sukhjinder Arora&lt;/a&gt; 0%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://blog.sessionstack.com/how-does-javascript-actually-work-part-1-b0bacc073cf"&gt;How JavaScript Works: An Overview of the Engine, the Runtime, and the Call Stack — Alexander Zlatkov&lt;/a&gt; 100%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://tylermcginnis.com/ultimate-guide-to-execution-contexts-hoisting-scopes-and-closures-in-javascript/"&gt;The Ultimate Guide to Execution Contexts, Hoisting, Scopes, and Closures in JavaScript — Tyler McGinnis&lt;/a&gt;  50%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/bipinrajbhar/how-javascript-works-under-the-hood-an-overview-of-javascript-engine-heap-and-call-stack-1j5o"&gt;How JavaScript Works Under The Hood: An Overview of JavaScript Engine, Heap and, Call Stack — Bipin Rajbhar&lt;/a&gt; 100%&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#definition"&gt;
  &lt;/a&gt;
  Definition
&lt;/h2&gt;

&lt;p&gt;Mechanism or structure which interpreter keeps track of functions that are called&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Script calls function&lt;/p&gt;

&lt;p&gt;interpreter adds function's &lt;strong&gt;execution context&lt;/strong&gt; to Call Stack, starts executing the function&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;function execution is finished&lt;/p&gt;

&lt;p&gt;interpreter removes &lt;strong&gt;function's execution context&lt;/strong&gt; from Call Stack, resumes execution where it left of&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;stacks takes up more space than assigned &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;"stack overflow"&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#what-is-execution-context"&gt;
  &lt;/a&gt;
  What is execution context?
&lt;/h3&gt;

&lt;p&gt;Execution context is an abstract concept of environment where code is executed. Here is my guide to execution context.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="nx"&gt;sayHi&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// &lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sayHi&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;&lt;p&gt;When code reaches to &lt;code&gt;greeting();&lt;/code&gt;,  greeting function's execution context is added to Call Stack.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Execute all lines in greeting function. When code reaches to &lt;code&gt;sayHi();&lt;/code&gt; , sayHi function's execution context is added to Call Stack.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Execute all lines in sayHi function. When it's over, return execution to the line that invoked sayHi function, continue executing rest in greeting function. Remove sayHi function's execution context from Call Stack.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Execute all lines in greeting function. When it's over, return execution to the line that invoked greeting function, execute rest of the code. Remove greeting function's execution context from Call Stack.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#features-of-call-stack"&gt;
  &lt;/a&gt;
  Features of Call Stack
&lt;/h2&gt;

&lt;p&gt;As you see the later one that is pushed, gets out first. For example, sayHi function has been added later than greeting function, but it has been removed first. We call it &lt;strong&gt;LIFO&lt;/strong&gt;(Last in First out).&lt;/p&gt;

&lt;p&gt;Also, Call Stack is for storing data &lt;strong&gt;temporarily.&lt;/strong&gt; As execution of functions are finished, call stack becomes empty.&lt;/p&gt;

&lt;p&gt;Additionally, all of execution contexts are added in order and executed in order. So we say the Call Stack is &lt;strong&gt;synchronous&lt;/strong&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#javascript-engine"&gt;
  &lt;/a&gt;
  Javascript Engine
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#definition"&gt;
  &lt;/a&gt;
  Definition
&lt;/h3&gt;

&lt;p&gt;program that executes Javascript code. V8 Engine of Chrome, node.js, electron is one of JS engine. V8 Engine is high-performance, open source Javascript &amp;amp; Web Assembly engine.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aUt7pOI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.velog.io/images/gtfo/post/fbc33738-e3e2-4d0c-ba9d-54c9a1961bea/image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aUt7pOI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.velog.io/images/gtfo/post/fbc33738-e3e2-4d0c-ba9d-54c9a1961bea/image.png" alt="" width="700" height="525"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;JS Engine consists of Memory Heap and Call Stack. We have learned about Call Stack, so what is memory heap?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#memory-heap"&gt;
  &lt;/a&gt;
  Memory Heap
&lt;/h3&gt;

&lt;p&gt;Memory Heap is unstructured memory used for memory allocation of variables and objects.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#js-runtime"&gt;
  &lt;/a&gt;
  JS Runtime
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#definition"&gt;
  &lt;/a&gt;
  Definition
&lt;/h3&gt;

&lt;p&gt;Environment where Javascript program is executed&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u3bNmuxX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.velog.io/images/gtfo/post/ae769d52-ae26-4b9d-b74c-2fd669bdc8b4/image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u3bNmuxX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.velog.io/images/gtfo/post/ae769d52-ae26-4b9d-b74c-2fd669bdc8b4/image.png" alt="" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-do-we-need-concurrency"&gt;
  &lt;/a&gt;
  Why do we need Concurrency?
&lt;/h3&gt;

&lt;p&gt;When Call Stack has remained functions to execute, browser can't actually do anything, which we call it &lt;strong&gt;blocked&lt;/strong&gt;. So, &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;if function called takes huge amount of time, it will stuck for a long time.&lt;/li&gt;
&lt;li&gt;if there are too many stacks, browser wouldn't respond to user for a long time.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Both cases decrease the user experiences.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#web-apis"&gt;
  &lt;/a&gt;
  Web APIs
&lt;/h3&gt;

&lt;p&gt;Handle async events like DOM  events, http requests, setTImeout, etc. It is created by browser, not JS engine. Web API pushes the callback onto Callback Queue when it's done executing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#callback-queue"&gt;
  &lt;/a&gt;
  Callback Queue
&lt;/h3&gt;

&lt;p&gt;list of messages to be processed and associated to callback functions&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#event-loops"&gt;
  &lt;/a&gt;
  Event Loops
&lt;/h3&gt;

&lt;p&gt;So who chooses when the functions in Callback Queue to be executed? Event Loops does. Event Loops both Call Stack and Callback Queue and pushes the first thing on Queue to Stack when Stack is completely empty.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Eco-eCommerce</title>
      <author>Shruti pal</author>
      <pubDate>Tue, 11 Jan 2022 12:49:56 +0000</pubDate>
      <link>https://dev.to/shruti700/eco-ecommerce-30e3</link>
      <guid>https://dev.to/shruti700/eco-ecommerce-30e3</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HpizAZ3N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wkt2uswcyqks3ej3sa1t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HpizAZ3N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wkt2uswcyqks3ej3sa1t.png" alt="" width="880" height="423"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6UyrpIkS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u0vhsy16xt4o46o29mkr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6UyrpIkS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u0vhsy16xt4o46o29mkr.png" alt="" width="880" height="423"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cxnGiyf---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rahcmhwmzm737cops2t2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cxnGiyf---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rahcmhwmzm737cops2t2.png" alt="" width="880" height="422"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--De6FcNkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cnq6z6x3yucwkooii1ac.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--De6FcNkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cnq6z6x3yucwkooii1ac.png" alt="" width="880" height="423"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#this-is-an-ecommerce-website-named-better-buys-it-uses-mongodb-atlas-as-the-database-to-store-users-products-data"&gt;
  &lt;/a&gt;
  This is an e-commerce website named - "better buys". It uses MongoDB Atlas as the database to store users, products data.
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#submission-category-ecommerce"&gt;
  &lt;/a&gt;
  Submission Category: E-Commerce
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#link-to-code-raw-httpsgithubcomshruti700betterbuys-endraw-"&gt;
  &lt;/a&gt;
  Link to Code:&lt;code&gt;{%https://github.com/Shruti700/Better-buys%}&lt;/code&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h2&gt;

&lt;p&gt;React, Redux, Node.js, Stripe are used in this project.&lt;/p&gt;

&lt;p&gt;[Reminder]: # (Submissions are due on January 13th, 2022 @ 11:59 PM PT/2 AM ET on January 14th, 2022/6 AM UTC on January 14th, 2022).&lt;/p&gt;

</description>
      <category>atlashackathon</category>
    </item>
  </channel>
</rss>
