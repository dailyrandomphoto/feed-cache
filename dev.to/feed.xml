<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to setup tailwind css for you project</title>
      <author>SURAJITSHAW</author>
      <pubDate>Fri, 19 Nov 2021 08:58:57 +0000</pubDate>
      <link>https://dev.to/surajitshaw/how-to-setup-tailwind-css-for-you-project-1l7l</link>
      <guid>https://dev.to/surajitshaw/how-to-setup-tailwind-css-for-you-project-1l7l</guid>
      <description>&lt;p&gt;Hello there my gorgeous friend.&lt;/p&gt;

&lt;p&gt;I'm a front-end developer and today we are gonna talk about how to set up tailwind css for your projects.&lt;/p&gt;

&lt;p&gt;Before get starting you may wandered why we should use tailwind css over vanilla css and bootstrap. My friend in short tailwind css is way to handy and you had quite a lot control on your hands too. Now let's jump into how to set up tailwind css 🙌&lt;/p&gt;

&lt;p&gt;First create a directory or folder on your computer then create your basic 'index.html' and 'style.css' file now you can add your tailwind classes to the html file. &lt;/p&gt;

&lt;p&gt;After you had to run a command on terminal :&lt;/p&gt;

&lt;p&gt;"tailwindcss build -o style.css"&lt;/p&gt;

&lt;p&gt;Boom!!!&lt;/p&gt;

&lt;p&gt;That's it you complete your first tailwindcss based project this is really easy to getting started with.&lt;/p&gt;

&lt;p&gt;........... Production..........&lt;/p&gt;

&lt;p&gt;For now in production there was different command which will delete pr squeeze your unused css and that will fill memory very small. That command is :&lt;/p&gt;

&lt;p&gt;"NODE_ENV=production tailwindcss build -o style.css"&lt;/p&gt;

&lt;p&gt;That's it my friend.&lt;/p&gt;

&lt;p&gt;Hope that blog will help you to getting started with tailwind css.&lt;/p&gt;

&lt;p&gt;If you had any doubt please comment down below and if you want you can connect with me on twitter @SURAJIT__SHAW .&lt;/p&gt;

</description>
      <category>css</category>
      <category>tailwindcss</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to Build a Flutter App with GraphQL</title>
      <author>David Adewoyin</author>
      <pubDate>Fri, 19 Nov 2021 08:53:14 +0000</pubDate>
      <link>https://dev.to/davidadewoyin/how-to-build-a-flutter-app-with-graphql-5f3j</link>
      <guid>https://dev.to/davidadewoyin/how-to-build-a-flutter-app-with-graphql-5f3j</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-are-we-building"&gt;
  &lt;/a&gt;
  What are we building?
&lt;/h2&gt;

&lt;p&gt;We will be building a flutter app that fetches a list of countries using the  &lt;a href="https://countries.trevorblades.com/"&gt;Countries GraphQL API &lt;/a&gt; and displays brief information about the country.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QHKbTdpw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637274214623/V8I4Y2H8W.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QHKbTdpw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637274214623/V8I4Y2H8W.gif" width="720" height="1070"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite.
&lt;/h2&gt;

&lt;p&gt;This article assumes the user is familiar with Flutter and have a basic understanding of GraphQL.&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#countries-graphql-api"&gt;
  &lt;/a&gt;
  Countries GraphQL API
&lt;/h2&gt;

&lt;p&gt;The Countries GraphQL API is a public GraphQL API for getting information about countries, continents, and languages. To understand how a given GraphQL API works, It is best to first interact with the endpoint using a test playground which enables you to run test queries, for this tutorial a playground for interacting with countries api  can be found  &lt;a href="https://countries.trevorblades.com/"&gt;here&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Example of a running a query in the playground.&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kVeLNLiT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637263707045/6PsliJbqO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kVeLNLiT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637263707045/6PsliJbqO.png" alt="Screenshot from 2021-11-18 19-52-12-1000x500.png" width="880" height="357"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-use-graphql-with-flutter"&gt;
  &lt;/a&gt;
  How to use GraphQL with flutter
&lt;/h2&gt;

&lt;p&gt;To use GraphQL with flutter, we use the  &lt;a href="https://pub.dev/packages/graphql"&gt;graphql&lt;/a&gt; package, which provides the most popular GraphQL client for dart.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#creating-the-country-directory-app"&gt;
  &lt;/a&gt;
  Creating the country directory app
&lt;/h2&gt;

&lt;p&gt;We create a new flutter project called country_directory&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;flutter create country_directory
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and add the graphql package as a dependency in the pubspec.yaml file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dependencies:
  graphql: ^5.0.0

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#basic-usage"&gt;
  &lt;/a&gt;
  Basic Usage
&lt;/h3&gt;

&lt;p&gt;To connect to a GraphQL Server, we first need to create a &lt;strong&gt;GraphQLClient&lt;/strong&gt;. A GraphQLClient requires both a cache and a link to be initialized.&lt;/p&gt;

&lt;p&gt;Creating a file called** api.dart** to define our apis, we add the following lines of code which set the URL of the GraphQL endpoint and create an instance of the GraphQLClient needed to interact with the endpoint. HttpLink is used to customize the network access such as adding access token for authentication but since the countries apis is free authentication is not needed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import 'package:graphql/client.dart';


const baseURL = "https://countries.trevorblades.com/";

final _httpLink = HttpLink(
  baseURL,
);

final GraphQLClient client = GraphQLClient(
  link: _httpLink,
  cache: GraphQLCache(),
);

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#testing-query-with-the-playground"&gt;
  &lt;/a&gt;
  Testing Query with the Playground
&lt;/h2&gt;

&lt;p&gt;Our application consists of initially making a request to the endpoint in other to fetch a list of country name and their country code from the API and providing a dropdown that enables the user to choose a country in which another query will be sent to the endpoint in other to fetch details of the country.&lt;br&gt;
The initial query sent to the endpoint is shown below;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;query {
  countries {
    code
    name
 }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the endpoint returns a response which contains a list of countries with the country code and name which part is shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"data": {
    "countries": [
      {
        "code": "AD",
        "name": "Andorra"
      },
      {
        "code": "AE",
        "name": "United Arab Emirates"
      },
      {
        "code": "AF",
        "name": "Afghanistan"
      },

]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next step is to make a query request to the endpoint for retrieving the data of a particular country. The  example below shows querying the endpoint for data about Nigeria with the country code of &lt;em&gt;"NG"&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;query {
  country(code:"NG"){
     name
    capital
    code
    native
    currency
    phone
    emoji
    }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Response returned from the GraphQL endpoint:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
  "data": {
    "country": {
      "name": "Nigeria",
      "capital": "Abuja",
      "code": "NG",
      "native": "Nigeria",
      "currency": "NGN",
      "phone": "234",
      "emoji": "🇳🇬"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Examining the responses from the two queries.We create a new file model.dart and create a class in the file called Country with the following content.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Country {
  String code;
  String name;
  String? capital;
  String? currency;
  String? native;
  String? phone;
  String? emoji;

  Country.fromJson(Map&amp;lt;String, dynamic&amp;gt; json)
      : code = json["code"],
        name = json["name"],
        capital = json["capital"],
        currency = json["currency"],
        native = json["native"],
        phone = json["phone"],
        emoji = json["emoji"];
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice apart from the &lt;em&gt;code&lt;/em&gt; and &lt;em&gt;name&lt;/em&gt; field in the country class all other fields are nullable since the first request to the endpoint only returns the country code and name which is needed to create a country instance.We also create a factory method for easily creating an instance of the country from the json response.&lt;/p&gt;

&lt;p&gt;In the &lt;strong&gt;api.dart&lt;/strong&gt; file we create two constant that represent the two queries string to be sent to the GraphQL  endpoint.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const _getAllCountries = r'''
query {
  countries{
    code
    name
    }
  }
''';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;// parameters to be supplied to the query is firstly defined in the query head with the datatype, since we need to supply the country code in other to fetch details of a particular country we add the code parameter with the ID datatype as shown below&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const _getCountry = r'''
query getCountry($code:ID!){
  country(code:$code){
    name
    capital
    code
    native
    currency
    phone
    emoji

  }
}

''';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#fetching-the-list-of-countries"&gt;
  &lt;/a&gt;
  Fetching the list of countries
&lt;/h3&gt;

&lt;p&gt;import the country model we earlier created as we will be using it to store the details of the country we get as the responses from the api&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;``&lt;code&gt;import 'package:country_directory/model.dart';&lt;br&gt;
&lt;/code&gt;&lt;br&gt;
We create a function getAllCountries which returns a list of countries as shown below:&lt;br&gt;
//returns a list of countries names with the country code&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;

Future&amp;lt;List&amp;lt;Country&amp;gt;&amp;gt; getAllCountries() async {
  var result = await client.query(
    QueryOptions(
//gql is used to parse the _getAllCountries string constant we previously created into a format or document that the GraphQL client understand. 
      document: gql(_getAllCountries),
    ),
  );

  var json = result.data!["countries"];
  List&amp;lt;Country&amp;gt; countries = [];
  for (var res in json) {
    var country = Country.fromJson(res);
    countries.add(country);
  }
  return countries;
}


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;We also create a second function for returning  the data associated with a particular country. The function takes in a a country code and use that to fetch the country data.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;

// returns a country with the given country code
Future&amp;lt;Country&amp;gt; getCountry(String code) async {
  var result = await client.query(
    QueryOptions(
      document: gql(_getCountry),
      variables: {
        "code": code,
      },
    ),
  );

  var json = result.data!["country"];


  var country = Country.fromJson(json);
  return country;
}


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
  &lt;a href="#creating-the-view"&gt;
  &lt;/a&gt;
  Creating the view
&lt;/h2&gt;

&lt;p&gt;Importing the the two files we created in the main.dart&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;

import 'package:country_directory/api.dart';
import 'package:country_directory/model.dart';


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;we create a stateful widget called &lt;strong&gt;HomePage&lt;/strong&gt; in the main.dart file which we  contains the view of our program&lt;br&gt;
We add the following lines of code to our main.dart.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;


class HomePage extends StatefulWidget {
  const HomePage({Key? key}) : super(key: key);

  @override
  State&amp;lt;HomePage&amp;gt; createState() =&amp;gt; _HomePageState();
}

class _HomePageState extends State&amp;lt;HomePage&amp;gt; {
  List&amp;lt;Country&amp;gt; countries = [];
  Country? selectedCountry;
// the future is set to getAllCountries since we need to initially get the list of all countries first.
  Future&amp;lt;List&amp;lt;Country&amp;gt;&amp;gt; future = getAllCountries();

}



&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Since we will be using a dropdown to select a country, we create a function for building the items of the dropdown&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;

List&amp;lt;DropdownMenuItem&amp;lt;Country&amp;gt;&amp;gt; buildDropDownItem(List&amp;lt;Country&amp;gt; countries) {
    return countries
        .map((country) =&amp;gt; DropdownMenuItem&amp;lt;Country&amp;gt;(
              child: Text(country.name),
              value: country,
            ))
        .toList();
  }


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;We also create a pickCountriesWidget function for picking a particular country from the list of country&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;


  Widget pickCountriesWidget(
      BuildContext context, AsyncSnapshot&amp;lt;List&amp;lt;Country&amp;gt;&amp;gt; snapshot) {
    var countries = snapshot.data;

    if (snapshot.connectionState == ConnectionState.done) {
      return Container(
        padding: const EdgeInsets.symmetric(horizontal: 10),
        child: DropdownButtonFormField(
          decoration: const InputDecoration(
            labelText: "Choose Country",
            border: OutlineInputBorder(),
          ),
          items: buildDropDownItem(countries!),
          value: selectedCountry,
          onChanged: (Country? country) {
            setState(() {
              selectedCountry = country;
            });
          },
        ),
      );
    }
    return const Center(
      child: CircularProgressIndicator(),
    );


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;When a country is selected from the dropdown we make sent a query to the api for fetching the details of the country.&lt;/p&gt;

&lt;p&gt;The following lines create a widget for displaying the details of the country.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;

Widget countryDetailsWidget(BuildContext context, AsyncSnapshot snapshot) {
    if (snapshot.connectionState == ConnectionState.waiting) {
      return const Padding(
        padding: EdgeInsets.only(top: 20),
        child: Center(
          child: CircularProgressIndicator(),
        ),
      );
    }
    if (snapshot.hasError) {
      return const Center(
        child: Text("Unable to fetch country data"),
      );
    }
    Country country = snapshot.data;

    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        const Padding(
          padding: EdgeInsets.symmetric(horizontal: 10),
          child: Text(
            "Country Info",
            style: TextStyle(fontWeight: FontWeight.bold),
          ),
        ),
        const SizedBox(height: 10),
        Card(
          color: Colors.grey.shade50,
          child: Padding(
            padding: const EdgeInsets.symmetric(vertical: 20, horizontal: 10),
            child: Row(
              children: [
                Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: const [
                    Text("Name"),
                    Text("Capital"),
                    Text("Country code"),
                    Text("Native"),
                    Text("Currency"),
                    Text("Phone Code"),
                    Text("Emoji"),
                  ],
                ),
                const Spacer(flex: 3),
                Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(": ${country.name}",
                        style: const TextStyle(fontWeight: FontWeight.bold)),
                    Text(": ${country.capital}",
                        style: const TextStyle(fontWeight: FontWeight.bold)),
                    Text(": ${country.code}",
                        style: const TextStyle(fontWeight: FontWeight.bold)),
                    Text(": ${country.native}",
                        style: const TextStyle(fontWeight: FontWeight.bold)),
                    Text(": ${country.currency}",
                        style: const TextStyle(fontWeight: FontWeight.bold)),
                    Text(": ${country.phone!}",
                        style: const TextStyle(fontWeight: FontWeight.bold)),
                    Text(": ${country.emoji}",
                        style: const TextStyle(
                          fontWeight: FontWeight.bold,
                        )),
                  ],
                ),
                const Spacer(),
              ],
            ),
          ),
        ),
      ],
    );
  }


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Putting everything together in the build method&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;

 @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        centerTitle: true,
        backgroundColor: Colors.black,
        title: const Text("Country Directory"),
      ),
      body: Padding(
        padding: const EdgeInsets.symmetric(horizontal: 15),
        child: ListView(
          children: [
            const SizedBox(height: 50),
            FutureBuilder&amp;lt;List&amp;lt;Country&amp;gt;&amp;gt;(
              future: future,
              builder: (context, snapshot) {
                return pickCountriesWidget(context, snapshot);
              },
            ),
            const SizedBox(height: 20),
            if (selectedCountry != null)
              FutureBuilder&amp;lt;Country&amp;gt;(
                future: getCountry(selectedCountry!.code),
                builder: (context, snapshot) {
                  return countryDetailsWidget(context, snapshot);
                },
              ),
          ],
        ),
      ),
    );
  }


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The link to the application  is at  &lt;a href="https://github.com/david-adewoyin/country_directory"&gt;github&lt;/a&gt; . The article shows how to integrate GraphQL with flutter.Further articles will shows how to do mutations and subscriptions but the fundamentals of operation is the same.&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>graphql</category>
      <category>mobile</category>
      <category>android</category>
    </item>
    <item>
      <title>Achieve Futuristic Needs with PowerApps for Nonprofits</title>
      <author>Bacancy Technology</author>
      <pubDate>Fri, 19 Nov 2021 08:53:03 +0000</pubDate>
      <link>https://dev.to/bacancy_technology/achieve-futuristic-needs-with-powerapps-for-nonprofits-36g</link>
      <guid>https://dev.to/bacancy_technology/achieve-futuristic-needs-with-powerapps-for-nonprofits-36g</guid>
      <description>&lt;p&gt;Today we are going to talk about the PowerApps for Nonprofits and we discussed how it will help you to manage your workflow. This blog is for you if you are from the Nonprofits sector.&lt;/p&gt;

&lt;p&gt;Let’s see how the PowerApps platform helps organizations:-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Help organizations to develop the custom business applications&lt;/li&gt;
&lt;li&gt;Help them to connect their data with various platforms like web and mobile without custom development.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#benefits-will-organizations-get-from-powerapps-for-nonprofits"&gt;
  &lt;/a&gt;
  Benefits will organizations get from PowerApps for Nonprofits?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create solutions as per your needs&lt;/li&gt;
&lt;li&gt;Manage your expenses&lt;/li&gt;
&lt;li&gt;Keeps your Data and Information secure&lt;/li&gt;
&lt;li&gt;Help you expand your operations&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#powerapps-for-nonprofits-use-cases"&gt;
  &lt;/a&gt;
  PowerApps for Nonprofits: Use Cases
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Expense approval apps&lt;/li&gt;
&lt;li&gt;Employee onboarding apps&lt;/li&gt;
&lt;li&gt;Field service apps&lt;/li&gt;
&lt;li&gt;Helpdesk application&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Migrating to the new platform will always be a difficult task, but if you are looking for desired results, &lt;a href="https://www.bacancytechnology.com/blog/powerapps-for-nonprofits"&gt;PowerApps for Nonprofits&lt;/a&gt; will be the perfect solution for you. Kindly contact us if you want to explore more about it. &lt;/p&gt;

</description>
    </item>
    <item>
      <title>Hotel Booking Awesome Landing Page Template</title>
      <author>Ui card</author>
      <pubDate>Fri, 19 Nov 2021 08:38:18 +0000</pubDate>
      <link>https://dev.to/uicard/hotel-booking-awesome-landing-page-template-45nm</link>
      <guid>https://dev.to/uicard/hotel-booking-awesome-landing-page-template-45nm</guid>
      <description>&lt;p&gt;Hi design lovers. Here we are with another best hotel booking landing page template. This hotel software is designed for hotels, motels, guest houses,s and accommodation planning like Vacation Rentals, Homes, Apartments &amp;amp; Rooms for Rent, and much more.&lt;/p&gt;

&lt;p&gt;It utilizes the most advanced technologies and state-of-the-art security standards to ensure your home will provide efficient and profitable operations for years to come. This system provides a collection of easy-to-use and cost-effective technology that can be used immediately with little or no training.&lt;/p&gt;

&lt;p&gt;This template includes fully functional inquiry and newsletter subscription forms; you only have to change the contact email address.&lt;/p&gt;

&lt;p&gt;Open your door to the world of booking with the Star Hotel booking website template. This Hotel Booking web template is available to file Figma, Adobe XD, and Sketch.&lt;/p&gt;

&lt;p&gt;Download 15,000+ design resources from uihut.com&lt;/p&gt;

&lt;p&gt;Get lifetime access only for $99. Use “sol10” coupon for extra 10% off.&lt;/p&gt;

</description>
      <category>landingpage</category>
      <category>uidesgn</category>
      <category>webdev</category>
      <category>design</category>
    </item>
    <item>
      <title>Cloud cost management alone won't fix your cloud spend problem</title>
      <author>CAST AI</author>
      <pubDate>Fri, 19 Nov 2021 08:31:20 +0000</pubDate>
      <link>https://dev.to/castai/cloud-cost-management-alone-wont-fix-your-cloud-spend-problem-42lc</link>
      <guid>https://dev.to/castai/cloud-cost-management-alone-wont-fix-your-cloud-spend-problem-42lc</guid>
      <description>&lt;p&gt;The pay-per-use model of the public cloud seemed too good to be true. And you probably quickly caught onto its catch: analyzing and predicting your cloud costs is like driving blindfolded hoping that the street traffic would stay the same. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;A solid cloud cost management strategy and tooling solves this problem - but only partially. Knowing what your costs are and where your costs come from isn’t going to reduce them magically. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It’s a good start, but you still need engineering resources to implement the changes. And not just once, but on a regular basis - or whenever you see a savings opportunity, note a peak usage scenario, or too much shadow IT starts creeping in.&lt;/p&gt;

&lt;p&gt;Is there a better way to control your cloud spend? Keep on reading to find out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Read this guide to see why cost management isn’t enough in the cloud world:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#whyarecompaniesstrugglingwithcloudcosts"&gt;Why are companies struggling with cloud costs?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#buthereswherecloudcostmanagementfallsshort"&gt;But here’s where cloud cost management falls short&lt;/a&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href="#cloudcostsarealwayschanging"&gt;Cloud costs are always changing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#resourcedemandsneverstaythesame"&gt;Resource demands never stay the same either&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#costvisibilityisharderthanitsounds"&gt;Cost visibility is harder than it sounds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#multicloudmakescostmanagementevenmorechallenging"&gt;Multi cloud makes cost management even more challenging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cloudcostmanagementrequiresmanualwork"&gt;Cloud cost management requires manual work&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#whatelseistheretohelpwithmycloudcosts"&gt;What else is there to help with my cloud costs?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#andnoneofthatmanagementguaranteessavings"&gt;And none of that management guarantees savings, unless you decide to automate optimization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="whyarecompaniesstrugglingwithcloudcosts"&gt;Why are companies struggling with cloud costs?&lt;/h2&gt;

&lt;p&gt;Jumping on the public cloud bandwagon too fast can make that wagon tip over.&lt;/p&gt;

&lt;p&gt;Most teams find controlling cloud costs challenging because they never had so much freedom in spinning up new instances and experimenting with different things. Even those who never used anything other than the public cloud struggle to control their cloud spend.&lt;/p&gt;

&lt;p&gt;Here are some common reasons why cloud costs spiral out of control:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Companies overlook the risks of the pay-per-use,&lt;/li&gt;
&lt;li&gt;They have no visibility into their costs,&lt;/li&gt;
&lt;li&gt;They don’t budget for the cloud and let their bill surprise them each month.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;&lt;p&gt;Legacy cost visibility, allocation, and management dashboards helped to solve some of these problems, but not all.&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;So, what exactly is cloud cost management?&lt;/h3&gt;

&lt;p&gt;Cloud cost management is an umbrella term for cost monitoring, reporting, visibility, allocation, budgeting, and forecasting.&lt;/p&gt;

&lt;p&gt;The goal here is to understand and manage the costs associated with public cloud resources. It means knowing where costs come from, to which teams they can be allocated, and how much you’re likely to spend in the future. &lt;/p&gt;

&lt;p&gt;The last one is particularly important for CFOs, who aren’t too pleased when they have to restate the quarterly results because someone left an expensive instance running for too long.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Cloud cost management is all about control - or, gaining more granular control over the cloud spend while keeping the same level of performance. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Most cloud providers offer basic cloud cost management solutions to help them achieve that. There are also plenty of specialized third-party tools that offer extra visibility and insight into your cloud expenses.&lt;/p&gt;

&lt;h2 id="buthereswherecloudcostmanagementfallsshort"&gt;But here’s where cloud cost management falls short&lt;/h2&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bml7gLdc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/11/1200x628-Management-Falls-Short.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bml7gLdc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/11/1200x628-Management-Falls-Short.png" alt="where cloud cost management falls short" width="880" height="461"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="cloudcostsarealwayschanging"&gt;1. Cloud costs are always changing&lt;/h3&gt;

&lt;p&gt;Predicting cloud expenses is hard, even if you’re a tech giant like Pinterest. During the 2018 holiday season, &lt;strong&gt;the company’s cloud spend &lt;/strong&gt;&lt;a href="https://www.theinformation.com/articles/as-aws-use-soars-companies-surprised-by-cloud-bills" rel="noreferrer noopener"&gt;&lt;strong&gt;went way beyond the initial estimates&lt;/strong&gt;&lt;/a&gt; due to increased usage. Pinterest had to pay AWS $20 million on top of the $170 million worth of cloud resources it already reserved. &lt;/p&gt;

&lt;h3 id="resourcedemandsneverstaythesame"&gt;2. Resource demands never stay the same either&lt;/h3&gt;

&lt;p&gt;Using the public cloud is all about striking the balance between cost and performance. Traffic spikes can either generate a massive and unforeseen cloud bill if you leave your check open or cause your application to crash if you put rigid limits over its resources. Cloud cost management doesn’t get you anywhere near to solving this issue.&lt;/p&gt;

&lt;h3 id="costvisibilityisharderthanitsounds"&gt;3. Cost visibility is harder than it sounds&lt;/h3&gt;

&lt;p&gt;Decision-making about cloud spend is often decentralized in large organizations. This makes visibility more challenging than it seems. Add to that shadow IT projects popping up all over the place and you’ll have to deal with costs that can’t be explained just by taking a look at a dashboard or report. &lt;/p&gt;

&lt;h3 id="multicloudmakescostmanagementevenmorechallenging"&gt;4. Multi cloud makes cost management even more challenging&lt;/h3&gt;

&lt;p&gt;Companies that use multi cloud combinations need to consider the costs of several different public cloud providers at the same time. It’s like doubling or tripling the effort you’re doing for one cloud, there are no shortcuts here. &lt;/p&gt;

&lt;h3 id="cloudcostmanagementrequiresmanualwork"&gt;5. Cloud cost management requires manual work&lt;/h3&gt;

&lt;p&gt;And lots of it. Analyzing your setup, allocating costs to teams, understanding how much you’ve spent on what, finding better options, migrating your applications to better resources, and then checking whether it’s all working - this is what you need to do. And not once, on a regular basis.&lt;/p&gt;

&lt;h2 id="whatelseistheretohelpwithmycloudcosts"&gt;What else is there to help with my cloud costs?&lt;/h2&gt;

&lt;p&gt;There’s &lt;a href="https://cast.ai/blog/the-ultimate-guide-to-cloud-cost-optimization/" rel="noreferrer noopener"&gt;cloud cost optimization&lt;/a&gt;. The best way to understand what optimization is all about is knowing what tactics it offers to teams looking to control their cloud spend.&lt;/p&gt;

&lt;p&gt;Here are a few of them:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Instance rightsizing&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Automatic scaling (autoscaling) &lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Resource scheduling&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Removing unused resources&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Spot instance use&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Not only does optimization help you achieve all of these things, but it can make the process automatic - without adding repetitive tasks for engineers. Some things just aren’t supposed to be managed manually.&lt;/p&gt;

&lt;p&gt;Optimizing cloud costs is a point-in-time exercise. You need to keep an eye on your application demands and the available resources 24/7 to identify savings opportunities.&lt;/p&gt;

&lt;p&gt;Let's look into some of the named cost optimization points to see why automation brings so much value there.&lt;/p&gt;

&lt;h3&gt;1. Instance rightsizing and type selection - or, picking the best instance for the job&lt;/h3&gt;

&lt;p&gt;Selecting the right virtual machine size can drive your bill down by a lot if compute is your biggest expense. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;But how can you expect a human engineer to do that when AWS alone has some &lt;a href="https://cast.ai/blog/400-ec2-instance-types-the-good-the-bad-and-the-ugly/" rel="noreferrer noopener"&gt;400 different EC2 instances&lt;/a&gt; alone that come in many sizes?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Similar instance types deliver different performance levels depending on which provider you pick. Even in the same cloud, a more expensive instance doesn't always come with higher performance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3a4PHKpQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/11/1080x1080-Picking-the-best-instance.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3a4PHKpQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/11/1080x1080-Picking-the-best-instance.png" alt="choosing virtual machines" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here’s what you usually need to do when picking an instance manually&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Establish your minimal requirements&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Make sure you do it for all compute dimensions, including CPU (architecture, count, and processor choice), memory, SSD, and network connection.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Choose the right instance type&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You may select from a variety of CPU, memory, storage, and networking configurations that are bundled in instance types that are optimized for a certain capability.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Define your instance's size.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Remember that the instance should have adequate capacity to handle your workload's requirements and, if necessary, incorporate features such as bursting.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Examine various pricing models&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On-demand (pay-as-you-go), reserved capacity, spot instances, and dedicated hosts are all available from the three major cloud providers. Each of these alternatives has its own set of benefits and cons. This guide covers them all in detail: &lt;a href="https://cast.ai/blog/how-to-choose-the-best-vm-for-the-job/" rel="noreferrer noopener"&gt;How to choose the best VM type for the job and save on your cloud bill&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Considering that you need to do that on a regular basis, that’s a lot of work!&lt;/p&gt;

&lt;h3&gt;2. Autoscaling instances as soon as demand changes&lt;/h3&gt;

&lt;p&gt;If you’re running an e-commerce application, you need to prepare for sudden traffic spikes (think mentioned by a Kardashian on Instagram) yet scale things down when the need is gone.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manually scaling your cloud capacity is difficult and time-consuming&lt;/strong&gt;. You must keep track of everything that happens in the system, which may leave you with little time to explore cloud cost reductions. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;When demand is low, you run the risk of overpaying. And when demand is high, you’ll offer poor service to your customers.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Here’s what you need to take care of when scaling resources manually:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Gracefully handle traffic increases and keep costs at bay when the need for resources drops,&lt;/li&gt;
&lt;li&gt;Ensure that changes applied to one workload don’t cause any problems in other workloads or teams,  &lt;/li&gt;
&lt;li&gt;Configure and manage resource groups on your own, making sure that they all contain resources suitable for your workloads.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;When scaling manually, you'd have to scale up or down your resources for each and every virtual machine across every cloud service you use. &lt;/strong&gt;This is next to impossible. And you have better things to do anyway.&lt;/p&gt;

&lt;p&gt;That’s where autoscaling comes into play.&lt;/p&gt;

&lt;p&gt;Autoscaling does all the tasks listed above automatically. All you need to do is define your policies related to horizontal and vertical autoscaling, and the autonomous optimization tool will do the job for you.&lt;/p&gt;

&lt;h3&gt;3. Managing spot instance interruptions &lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K1eYBwVs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/11/1080x1080-Managing-spot-instances.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K1eYBwVs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/11/1080x1080-Managing-spot-instances.png" alt="managing spot instances" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Spot instances are up to 90% cheaper than on-demand instances, so buying idle capacity from cloud providers makes sense.&lt;/p&gt;

&lt;p&gt;There's a catch, though: the provider may reclaim these resources at any time. If you’re an AI-driven SaaS, this is fine while you're doing some background data crunching that you can delay. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But what if you need the workload to avoid the interruption? &lt;/strong&gt;You need to make sure your application is ready for that and have a plan in place when your spot instance is interrupted.&lt;/p&gt;

&lt;p&gt;Here's how you can take advantage of spot instances:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Check to see if your workload is ready for a spot instance.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Will you be able to tolerate interruptions? How long will it take to finish the project? Is this a life-or-death situation? These and other questions are useful in determining if a workload is suitable for spot instances.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Examine your cloud provider offer.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Examining less popular instances is a good idea because they're less likely to be interrupted and can run for longer periods of time. Before deciding on an instance, look at how often it is interrupted.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Make a bid&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Set the maximum price you're willing to spend for your preferred spot instance. The rule of thumb is to set the maximum price at the level of on-demand pricing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Manage spot instances in groups&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You'll be able to request a variety of instance types at the same time, boosting your chances of securing a spot instance. Learn more about managing spot instances here: &lt;a href="https://cast.ai/blog/how-to-reduce-cloud-costs-by-90-spot-instances-and-how-to-use-them/" rel="noreferrer noopener"&gt;Spot instances: How to reduce AWS, Azure, and GCP costs by 90%&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;To make all of the above work, you’ll have to dedicate a lot of time and effort to configuration, setup, and maintenance tasks.&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2 id="andnoneofthatmanagementguaranteessavings"&gt;And none of that management guarantees savings, unless you decide to automate optimization&lt;/h2&gt;

&lt;p&gt;Traditional methods like cost tracking and reporting can only get you halfway there - and at a hefty cost in engineer time.&lt;/p&gt;

&lt;p&gt;Cloud cost management doesn’t guarantee savings, automated optimization does.&lt;/p&gt;

&lt;p&gt;Discover the benefits of autonomous cloud cost optimization for your company. Book a demo with CAST AI, the world's leading cloud optimization platform for Kubernetes.&lt;/p&gt;





&lt;p&gt;P.S. You can always test out the platform and see what it would automate in your environment. To get started, &lt;a href="https://console.cast.ai/?screen_hint=SIGNUP" rel="noreferrer noopener"&gt;simply register here.&lt;/a&gt;&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>kubernetes</category>
      <category>cloudskills</category>
    </item>
    <item>
      <title>How to use Web Storage API?</title>
      <author>Jatin Sharma</author>
      <pubDate>Fri, 19 Nov 2021 08:24:03 +0000</pubDate>
      <link>https://dev.to/j471n/how-to-use-web-storage-api-3o28</link>
      <guid>https://dev.to/j471n/how-to-use-web-storage-api-3o28</guid>
      <description>&lt;p&gt;In this article, we are going to look at the different types of web storage such as Local Storage, Session Storage, and Cookies to be more precise. Storing data in the browser is a fairly simple task, but there are three different ways to do it and it can be difficult to know which storage option is best for your particular use case. I will be covering all three of the different ways to store data in a user’s browser so you can choose the exact option that works best for you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-is-web-storage"&gt;What is Web Storage?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-are-cookies-local-storage-and-session-storage-used-for"&gt;What Are Cookies, Local Storage, And Session Storage Used For?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#comparison"&gt;Comparison&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#local-storage"&gt;Local Storage&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#storing-data"&gt;Storing Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#read-data"&gt;Read Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#removing-data"&gt;Removing Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#session-storage"&gt;Session Storage&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#storing-data-1"&gt;Storing Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#read-data-1"&gt;Read Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#removing-data-1"&gt;Removing Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#cookies"&gt;Cookies&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#storing-data-2"&gt;Storing Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#read-data-2"&gt;Read Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#removing-data-2"&gt;Removing Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-web-storage"&gt;
  &lt;/a&gt;
  What is Web Storage?
&lt;/h2&gt;

&lt;p&gt;The Web Storage is one of the great features of HTML5. With the Web Storage feature, web applications can locally store data within the browser on the client side. It stores data in the form of key/value pair on the browser. Web Storage sometimes also known as DOM storage.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-cookies-local-storage-and-session-storage-used-for"&gt;
  &lt;/a&gt;
  What Are Cookies, Local Storage, And Session Storage Used For?
&lt;/h2&gt;

&lt;p&gt;Before I dive into the many differences between the various storage options I first need to talk about what they are used for. All three methods of storage are used to store information on the user’s browser which can be accessed even after navigating to new pages on your site. This data is also saved to the user’s exact browser they are using so if they have your site open in Chrome it will only save the information to their Chrome browser on the device they are currently on. This means if they open your site later in a different browser the data will no longer be there. Now let’s jump into the many differences between each option.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comparison"&gt;
  &lt;/a&gt;
  Comparison
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Storage&lt;/th&gt;
&lt;th&gt;Limit&lt;/th&gt;
&lt;th&gt;Data-type Supported&lt;/th&gt;
&lt;th&gt;Expiration&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Local Storage&lt;/td&gt;
&lt;td&gt;5MB per app per browser&lt;/td&gt;
&lt;td&gt;String only, as key-value pairs&lt;/td&gt;
&lt;td&gt;Never&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Session Storage&lt;/td&gt;
&lt;td&gt;Limited only by system memory&lt;/td&gt;
&lt;td&gt;String only, as key-value pairs&lt;/td&gt;
&lt;td&gt;After Tab Closed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cookies&lt;/td&gt;
&lt;td&gt;at least 4096 bytes per cookie&lt;/td&gt;
&lt;td&gt;text file (not sure)&lt;/td&gt;
&lt;td&gt;It has Expiration Date (manually)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#local-storage"&gt;
  &lt;/a&gt;
  Local Storage
&lt;/h2&gt;

&lt;p&gt;Local storage is a form of web storage that stores data for a long time. This could be a day, a week, or even a year . This depends upon the developer’s preference. It is important to note that local storage only stores strings so, if you wish to store objects, lists, or arrays, you must convert them into a string using &lt;code&gt;JSON.stringify()&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#storing-data"&gt;
  &lt;/a&gt;
  Storing Data
&lt;/h3&gt;

&lt;p&gt;In order to set data using local storage you simple use the &lt;code&gt;setItem&lt;/code&gt;This function takes two string parameters. The first parameter is the name and the second parameter is the value to associate with that name. You can think of this very similar to a key value pair in a JSON object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;day&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;monday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Just like that, you can store the key/value pair in this. You can not only store this strings. you can store the Javascript array or object as strings, let's see how -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Storing Object&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;usesInfo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user-info&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userInfo&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="c1"&gt;// Storing Array&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;languages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Python&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;React&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Javascript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Go&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;languages&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;languages&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;The &lt;strong&gt;&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;/strong&gt; method converts a JavaScript object or value to a JSON string,&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#read-data"&gt;
  &lt;/a&gt;
  Read Data
&lt;/h3&gt;

&lt;p&gt;In order to get data from local storage it is as easy as calling the &lt;code&gt;getItem&lt;/code&gt; method. This method takes a single parameter which is the name of the key value pair and will return the value.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We are reading the data which we just add in the previous section&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Reading String&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Reading Object&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userInfo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user-info&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="c1"&gt;// Reading Array&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;languages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;languages&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;The &lt;strong&gt;&lt;code&gt;JSON.parse()&lt;/code&gt;&lt;/strong&gt; method parses a JSON string, constructing the JavaScript value or object described by the string&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;It returns &lt;code&gt;null&lt;/code&gt; if it does not find that key&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#removing-data"&gt;
  &lt;/a&gt;
  Removing Data
&lt;/h3&gt;

&lt;p&gt;As like the previous examples removing data from local storage is as easy as calling a single method. This method is the &lt;code&gt;removeItem&lt;/code&gt; method and takes a single parameter which is the name of the key value pair to remove.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#session-storage"&gt;
  &lt;/a&gt;
  Session Storage
&lt;/h2&gt;

&lt;p&gt;Session storage is a popular choice when it comes to storing data on a browser. It enables developers to save and retrieve different values. Unlike local storage, session storage only keeps data for a particular session. The data is cleared once the user closes the browser window.&lt;/p&gt;

&lt;p&gt;&lt;span id="storing-data-1"&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#storing-data"&gt;
  &lt;/a&gt;
  Storing Data
&lt;/h3&gt;

&lt;p&gt;Session Storage works on the same concepts as the local storage. we just need to use &lt;code&gt;sessionStorage&lt;/code&gt; object -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Storing Key-Value Pairs&lt;/span&gt;
&lt;span class="nx"&gt;sessionStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;day&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;monday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Storing Object&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userInfo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;sessionStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user-info&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userInfo&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="c1"&gt;// Storing Array&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;languages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Python&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;React&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Javascript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Go&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;sessionStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;languages&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;languages&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;span id="read-data-1"&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#read-data"&gt;
  &lt;/a&gt;
  Read Data
&lt;/h3&gt;

&lt;p&gt;Reading data is also the same as the local storage.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Reading String&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sessionStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Reading Object&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userInfo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sessionStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user-info&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="c1"&gt;// Reading Array&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;languages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sessionStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;languages&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;span id="removing-data-1"&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#removing-data"&gt;
  &lt;/a&gt;
  Removing Data
&lt;/h3&gt;

&lt;p&gt;Removing data is also the same as the local storage.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;sessionStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#cookies"&gt;
  &lt;/a&gt;
  Cookies
&lt;/h2&gt;

&lt;p&gt;A cookie is usually a tiny text file stored in your web browser. A cookie was initially used to store information about the websites that you visit. But with the advances in technology, a cookie can track your web activities and retrieve your content preferences.&lt;/p&gt;

&lt;p&gt;&lt;span id="storing-data-2"&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#storing-data"&gt;
  &lt;/a&gt;
  Storing Data
&lt;/h3&gt;

&lt;p&gt;In order to store the data in cookies . You need to access the &lt;code&gt;document.cookie&lt;/code&gt; object and set that to your cookie. To do this all you need to do is set &lt;code&gt;document.cookie&lt;/code&gt; to a string where the name and value are separated by an equals sign.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name=Smith&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create a cookie with the name &lt;code&gt;name&lt;/code&gt; and the value &lt;code&gt;Smith&lt;/code&gt;, but this cookie will be expired since the default expiration date is in the past. In order to set an expiration date manually we need to pass the &lt;code&gt;expires&lt;/code&gt; key a UTC date value. We also need to make sure we separate the &lt;code&gt;expires&lt;/code&gt; key from our &lt;code&gt;name&lt;/code&gt; key with a semicolon &lt;strong&gt;&lt;code&gt;;&lt;/code&gt;&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`name=Smith; expires=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9999&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toUTCString&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This creates a cookie with an expiration date of 01/01/9999 which essentially is like creating a cookie that never expires.&lt;/p&gt;

&lt;p&gt;&lt;span id="read-data-2"&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#read-data"&gt;
  &lt;/a&gt;
  Read Data
&lt;/h3&gt;

&lt;p&gt;Cookies are a bit more difficult since there is no way to get an individual cookie. The only way to get cookies is to get all the cookies at once by accessing the &lt;code&gt;document.cookie&lt;/code&gt; object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cookie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// "name=Smith; username=John";&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;it returns string as the default but as you know it is a little difficult to use it in our code so we can create an function which will take the cookies and returns as the object. Let's see how it will look in the code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Covert String to Object&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;cookiesToObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
  &lt;span class="nx"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\s&lt;/span&gt;&lt;span class="sr"&gt;*;&lt;/span&gt;&lt;span class="se"&gt;\s&lt;/span&gt;&lt;span class="sr"&gt;*/&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pair&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;pair&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pair&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\s&lt;/span&gt;&lt;span class="sr"&gt;*=&lt;/span&gt;&lt;span class="se"&gt;\s&lt;/span&gt;&lt;span class="sr"&gt;*/&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;pair&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pair&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;splice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Getting Cookie Object&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cookieObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;cookiesToObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Source - &lt;a href="https://stackoverflow.com/questions/30138594/parse-convert-cookie-to-json-format"&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span id="removing-data-2"&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#removing-data"&gt;
  &lt;/a&gt;
  Removing Data
&lt;/h3&gt;

&lt;p&gt;Cookies as usual are a bit more difficult. To remove a cookie you need to set the cookie again but give it a blank value and a past expiration date.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name=; expires=Thu, 01 Jan 1980 00:00:00 GMT&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;While local storage, session storage, and cookies are similar, there are minor differences between them that give them all unique use cases. I recommend always using session storage or local storage unless you specifically need to access the data on the server since working with local storage and session storage is much easier than cookies.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can now extend your support by buying me a Coffee.😊👇&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/j471n"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee" width="545" height="153"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/j471n/how-to-share-anything-from-your-website-by-web-share-api-1h5g"&gt;How to share anything from your website by Web Share API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/j471n/10-css-resources-that-you-should-bookmark-46l6"&gt;10 CSS Resources that you should bookmark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/j471n/fully-functional-google-clone-with-nextjs-223o"&gt;Fully functional google search with next.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Day 63 - 65/100 Project: A Programming Language</title>
      <author>Rio Cantre</author>
      <pubDate>Fri, 19 Nov 2021 08:04:52 +0000</pubDate>
      <link>https://dev.to/riocantre/day-63-65100-project-a-programming-language-1cl</link>
      <guid>https://dev.to/riocantre/day-63-65100-project-a-programming-language-1cl</guid>
      <description>&lt;p&gt;"The evaluator, which determines the meaning of expressions in a programming language, is just another program."&lt;/p&gt;

&lt;p&gt;– Hal Abelson and Gerald Sussman, Structure and Interpretation of Computer Programs&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MMHbqVGH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/87ka6gar0uy7k5pl9ot3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MMHbqVGH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/87ka6gar0uy7k5pl9ot3.png" alt="egg" width="880" height="529"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>programming</category>
      <category>challenge</category>
      <category>motivation</category>
    </item>
    <item>
      <title>A Javascript fix for the 100vh problem on mobile screens</title>
      <author>Rachel</author>
      <pubDate>Fri, 19 Nov 2021 07:50:29 +0000</pubDate>
      <link>https://dev.to/rachelg/a-javascript-fix-for-the-100vh-problem-on-mobile-screens-9im</link>
      <guid>https://dev.to/rachelg/a-javascript-fix-for-the-100vh-problem-on-mobile-screens-9im</guid>
      <description>&lt;p&gt;Hi dev.to! &lt;/p&gt;

&lt;p&gt;I'm a software development student at Developers Institute NZ, and this is my first public post. 🎉&lt;/p&gt;

&lt;p&gt;I figured this would be the perfect place to share a slightly obscure fix that has helped me recently. A few weeks ago, my boss at the lovely cafe I work at on the weekends asked me if I'd be willing to take on some extra hours at work to help with their new landing page. I agreed, however, the brief turned out to be a little trickier than I'd first anticipated! My boss (who is also a graphic designer) had created a gorgeous, eye-catching full-page design. However, it only really works if the entire page is displayed on load, with no scroll bars.&lt;/p&gt;

&lt;p&gt;My first thought was to just make everything 100vh. However, of course it's never that simple - as I'm sure many people would have come across, 100vh is not always... 100vh. On some mobile browsers, most commonly Chrome and Safari on iOS, 100vh actually refers to outerHeight. This means the lower toolbar on the browser will not be taken into account, cutting off the last couple of rems of your design. While you can account for the difference using CSS, the view height will subsequently change as soon as the user starts scrolling down and the lower browser toolbar disappears.&lt;/p&gt;

&lt;p&gt;(An interesting fact I found while researching this is that this behaviour is completely intentional! Have a look at &lt;a href="https://nicolas-hoizey.com/articles/2015/02/18/viewport-height-is-taller-than-the-visible-part-of-the-document-in-some-mobile-browsers/#february-23rd-update"&gt;this blog&lt;/a&gt; from 2015 if you're interested.)&lt;/p&gt;

&lt;p&gt;While this isn't really an issue for most websites, there are a few different threads on the topic floating around. The most interesting solution I found was &lt;a href="https://github.com/elementor/elementor/issues/630#issuecomment-578145331"&gt;this comment&lt;/a&gt; buried in a thread in Elementor's Github repo. It uses Javascript to get innerHeight and assign it to the min-height CSS property for the outer container of the design. In order to change the innerHeight when the user starts scrolling and the browser toolbars shrink, we use an event listener. This worked perfectly for the design of the cafe's landing page.&lt;/p&gt;

&lt;p&gt;Here is the solution I used, adapted from that comment:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// define a function that sets min-height of my-element to window.innerHeight:

const setHeight = () =&amp;gt; {
    document.getElementById("my-element").style.minHeight = window.innerHeight + "px"
};

// define mobile screen size:

let deviceWidth = window.matchMedia("(max-width: 1024px)");

if (deviceWidth.matches) {
// set an event listener that detects when innerHeight changes:

    window.addEventListener("resize", setHeight);

// call the function once to set initial height:

    setHeight();
}


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you're using Wordpress (which I was), the easiest way to insert this is to wrap it in a script tag and add it into an HTML component underneath ALL other content, and then remove all padding from it so no white space is visible. Depending on your design, theme, and plugins, you may also need to add more lines to the function to include any containers for which you'd usually need to re-state the 100vh rule, for example perhaps .elementor-container and .elementor-widget-wrap if you're using Elementor.&lt;/p&gt;

&lt;p&gt;While this is not the cheapest solution due to the event listener, it was exactly what I needed for this particular project. Hope someone else finds it useful or interesting! 👋&lt;/p&gt;

</description>
      <category>mobile</category>
      <category>javascript</category>
      <category>wordpress</category>
      <category>css</category>
    </item>
    <item>
      <title>Singleton Pattern | Design Patterns in Java</title>
      <author>coder4life</author>
      <pubDate>Fri, 19 Nov 2021 07:47:23 +0000</pubDate>
      <link>https://dev.to/coder4_life/singleton-pattern-design-patterns-in-java-3pm9</link>
      <guid>https://dev.to/coder4_life/singleton-pattern-design-patterns-in-java-3pm9</guid>
      <description>&lt;p&gt;Creational design pattern: Watch a Java implementation of the Singleton Pattern, where we use double-checked-locking (DCL) for thread-safety.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/5qCrqUD91Ao"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>java</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Contributing to a Class Repo</title>
      <author>Leyang Yu</author>
      <pubDate>Fri, 19 Nov 2021 07:42:00 +0000</pubDate>
      <link>https://dev.to/lyu4321/contributing-to-a-class-repo-3one</link>
      <guid>https://dev.to/lyu4321/contributing-to-a-class-repo-3one</guid>
      <description>&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;One of the courses I previously took at Seneca, IPC144, is getting a major overhaul to their website, and through my open source class, I had the opportunity to contribute to this project. There was a huge &lt;a href="https://github.com/Seneca-ICTOER/IPC144/issues/18"&gt;meta issue&lt;/a&gt; with all the pages that needed to be updated and I decided to take on the task of auditing and fixing the arrays.md page because I like arrays 🙂🙂&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#approaching-the-task"&gt;
  &lt;/a&gt;
  Approaching the Task
&lt;/h2&gt;

&lt;p&gt;If you take a look at the &lt;a href="https://github.com/Seneca-ICTOER/IPC144/issues/40"&gt;issue&lt;/a&gt;, there was quite a significant list of things to be completed. I first forked and cloned the issue, created a new branch for my issue (called issue-40) and started up the website to see how it looked. After this, I tackled the list one by one, checking off tasks as I completed them and creating commits for each one.&lt;/p&gt;

&lt;p&gt;Some of the changes I made included:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;fixing typos&lt;/li&gt;
&lt;li&gt;adding intra-site links and adding descriptive text to links&lt;/li&gt;
&lt;li&gt;adding Frontmatter
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;arrays&lt;/span&gt;
&lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Arrays"&lt;/span&gt;
&lt;span class="na"&gt;sidebar_position&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;slug&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/data-structures/arrays&lt;/span&gt;
&lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;An&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;array&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;is&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;a&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;data&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;structure&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;consisting&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;of&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;an&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ordered&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;set&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;of&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;elements&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;of&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;common&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;type&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;that&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;are&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;stored&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;contiguously&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;in&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;memory."&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;adding syntax highlighting&lt;/li&gt;
&lt;li&gt;fixing some HTML that was causing console errors&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example, in the HTML tables, there were no &lt;code&gt;&amp;lt;thead&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt; tags which caused the &lt;code&gt;&amp;lt;tr&amp;gt; cannot appear as a child of &amp;lt;table&amp;gt;&lt;/code&gt; error and the columns were using colspan instead of colSpan.&lt;/p&gt;

&lt;p&gt;I pushed all these changes to the issue-40 branch and created a pull request in the main repository.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#receiving-reviews"&gt;
  &lt;/a&gt;
  Receiving Reviews
&lt;/h2&gt;

&lt;p&gt;I received so many helpful reviews to my pull request. For example, the image on the page was difficult to see in dark mode and I had forgotten to add alt text. Two of my classmates, &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/76#issuecomment-969101607"&gt;Tengzhen&lt;/a&gt; and  &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/76#issuecomment-969762369"&gt;Minsu&lt;/a&gt; pointed these out to me and Tengzhen suggested that I could save the image and add a white background so that the black text would still be visible on a black background. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jFB11TsX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s00hy2swx3c927fbum5j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jFB11TsX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s00hy2swx3c927fbum5j.png" alt="Image Before" width="880" height="134"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is what the image looked like before. As you can see, the circled text is barely visible in dark mode. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XQ4lGzlH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/04s37z3bve1i0tgfhecz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XQ4lGzlH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/04s37z3bve1i0tgfhecz.png" alt="Image After" width="880" height="129"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the fix, it's clearer. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/76#issuecomment-970201478"&gt;Jerry&lt;/a&gt; suggested that I could convert the tables to images since the tables didn't look great on all screen sizes and in his case, he needed to scroll to see the full table. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A-bvP6cV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6j9i1d3ygs81sx7rrgo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A-bvP6cV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6j9i1d3ygs81sx7rrgo.png" alt="Table Before" width="880" height="441"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is how a table looked for Jerry.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wRDY2vDW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u50v4bohozeoi2u4ncwn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wRDY2vDW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u50v4bohozeoi2u4ncwn.png" alt="Table After" width="880" height="241"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the fix, all the tables are images and resize according to the page size.&lt;/p&gt;

&lt;p&gt;Finally, &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/76#discussion_r750541451"&gt;Kien&lt;/a&gt; pointed out a typo as well as a &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/76#discussion_r750543605"&gt;broken link&lt;/a&gt; on the page. &lt;/p&gt;

&lt;p&gt;Although I had checked over my work before creating the pull request, I guess the great thing about open source is even if you miss something, you can get a lot of great input from the community and suggestions on how to make things even better. It was a bit overwhelming working on such a large meta issue because everyone had different ways of approaching the tasks, but it was a great learning experience and made me very appreciative of working with a open source community. &lt;/p&gt;

</description>
      <category>opensource</category>
    </item>
    <item>
      <title>HTML tags | bdo</title>
      <author>Carlos Espada</author>
      <pubDate>Fri, 19 Nov 2021 07:22:52 +0000</pubDate>
      <link>https://dev.to/carlosespada/html-tags-bdo-5fnc</link>
      <guid>https://dev.to/carlosespada/html-tags-bdo-5fnc</guid>
      <description>&lt;p&gt;The &lt;code&gt;&amp;lt;bdo&amp;gt;&lt;/code&gt; element (&lt;em&gt;Bi-Directional Override&lt;/em&gt;) &lt;strong&gt;overrides the current directionality of text&lt;/strong&gt;, so that the text within is rendered in a different direction.&lt;/p&gt;

&lt;p&gt;The text's characters are drawn from the starting point in the given direction; the individual characters' orientation is not affected (so characters don't get drawn backward, for example).&lt;/p&gt;

&lt;p&gt;It has a &lt;code&gt;dir&lt;/code&gt; attribute to specify the direction in which text should be rendered in this element's contents. Possible values are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;ltr&lt;/code&gt;: Indicates that the text should go in a left-to-right direction.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;rtl&lt;/code&gt;: Indicates that the text should go in a right-to-left direction.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most browsers will display the &lt;code&gt;&amp;lt;bdo&amp;gt;&lt;/code&gt; element with the following default CSS value:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bdo {
  unicode-bidi: bidi-override;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Type: &lt;em&gt;inline&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Self-closing: &lt;em&gt;No&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Semantic value: &lt;em&gt;No&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.w3schools.com/tags/tag_bdo.asp"&gt;Definition&lt;/a&gt; | &lt;a href="https://www.w3schools.com/tags/tryit.asp?filename=tryhtml_bdo"&gt;Example&lt;/a&gt; | &lt;a href="https://caniuse.com/mdn-html_elements_bdo"&gt;Support&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>tags</category>
      <category>bdo</category>
    </item>
    <item>
      <title>Git Tip: Keeping an eye on the source repository</title>
      <author>Abhinav Pandey</author>
      <pubDate>Fri, 19 Nov 2021 07:20:52 +0000</pubDate>
      <link>https://dev.to/abh1navv/git-tip-keeping-an-eye-on-the-source-repository-3jk6</link>
      <guid>https://dev.to/abh1navv/git-tip-keeping-an-eye-on-the-source-repository-3jk6</guid>
      <description>&lt;h3&gt;
  &lt;a href="#why-do-i-need-to-check-out-a-source-repository-alongside-my-forked-repository"&gt;
  &lt;/a&gt;
  Why do I need to check out a source repository alongside my forked repository?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;It helps you to compare the source code of the forked repository with the source code of the source repository.&lt;/li&gt;
&lt;li&gt;It also helps you to see the changes made in the source repository.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#checking-out-the-source-repository"&gt;
  &lt;/a&gt;
  Checking out the source repository
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;: &lt;br&gt;
Open a Git Bash terminal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt;: &lt;br&gt;
Change directory to the directory where you have cloned the repository.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3&lt;/strong&gt;: &lt;br&gt;
Check out the source branch.&lt;br&gt;
Command syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git remote add repo_name url_of_source_repository
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Runnning the command will add a remote repository named "repo_name" to the local repository.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4&lt;/strong&gt;: &lt;br&gt;
Fetch the source branch.&lt;br&gt;
Command syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git fetch repo_name master 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Runnning the command will fetch the master branch from the remote repository.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#comparing-the-two-repositories"&gt;
  &lt;/a&gt;
  Comparing the two repositories
&lt;/h4&gt;

&lt;p&gt;To compare the two repositories, you can use the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git diff &lt;span class="nt"&gt;--stat&lt;/span&gt; origin/master repo_name/master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The option &lt;code&gt;--stat&lt;/code&gt; shows the number of added, deleted, and modified lines and not the actual content of the files. Don't use &lt;code&gt;--stat&lt;/code&gt; if you want to see the actual content of the files.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#checking-latest-commits-in-the-source-repository"&gt;
  &lt;/a&gt;
  Checking latest commits in the source repository
&lt;/h4&gt;

&lt;p&gt;To see the latest commits in the source repository, you can use the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;--oneline&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;--graph&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;--after&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;--before&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;--author&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;author] repo_name/master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The option &lt;code&gt;--oneline&lt;/code&gt; shows the commit message.&lt;br&gt;
The option &lt;code&gt;--graph&lt;/code&gt; is used to show the commit graph.&lt;br&gt;
The option &lt;code&gt;--after=date&lt;/code&gt; shows the commits after the date.&lt;br&gt;
The option &lt;code&gt;--before=date&lt;/code&gt; shows the commits before the date.&lt;br&gt;
The option &lt;code&gt;--author=author&lt;/code&gt; shows the commits made by the author.&lt;/p&gt;

&lt;p&gt;There can be many more options to filter the commits. Check the &lt;a href="https://git-scm.com/docs/git-log"&gt;Git log documentation&lt;/a&gt; for more information.&lt;/p&gt;




&lt;p&gt;Thank you for reading! If you want to connect with me, you can find me on Twitter &lt;a href="https://twitter.com/abh1navv"&gt;@abh1navv&lt;/a&gt; &lt;/p&gt;

</description>
      <category>git</category>
      <category>beginners</category>
      <category>bash</category>
      <category>codenewbie</category>
    </item>
  </channel>
</rss>
