<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Configuring EC2 storage (EBS) Hands On</title>
      <author>Ajit Singh</author>
      <pubDate>Thu, 24 Jun 2021 05:19:24 +0000</pubDate>
      <link>https://dev.to/this-is-learning/configuring-ec2-storage-ebs-hands-on-87k</link>
      <guid>https://dev.to/this-is-learning/configuring-ec2-storage-ebs-hands-on-87k</guid>
      <description>&lt;p&gt;We will do a hands on EBS volumes so that we can understand how to attach an EBs volume to an EC2 instance.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Start creating an &lt;a href="https://dev.to/this-is-learning/start-an-instance-on-aws-ec2-hands-on-2hb3"&gt;EC2 instance&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In step 4 Add Storage we can see there are many options regarding storage.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Size of storage - Here we define how much storage we want attaches to our EC2 instance like our EC2 instance may contain node modules, python packages etc according to our needs &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Type - Here we define what type of a storage we want do we want a more durable or the one which is focused on IOPS etc. You can learn more about it from the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html"&gt;documentation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;IOPS - How many input output operations we want per second&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Delete on termination - Check this checkbox if we want to delete EBS volume on termination &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Encryption - If we generate a key we can encrypt our data using that AWS key. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sePHGCjo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2uulof3e7imc49y00e6n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sePHGCjo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2uulof3e7imc49y00e6n.png" alt="EBS storage"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Now we can create our instance with the selected storage&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can check the details of the of our EBS storage in the storage tab once we select an EC2 instance&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ofgvnYF6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cv5dw5msb62ap1jea26d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ofgvnYF6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cv5dw5msb62ap1jea26d.png" alt="EBS storage tab"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-new-ebs-storage"&gt;
  &lt;/a&gt;
  Create a new EBS storage
&lt;/h2&gt;

&lt;p&gt;We can also create an independent storage which we can later join to our EC2 instance &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To create a new EBS storage go to our EC2 dashboard and select volumes under elastic block store. You will see that there is our already created EBS volume. To create a new volume click on create volume&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J-ii1K0M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gipeiy27n3zl7gf6gcaz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J-ii1K0M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gipeiy27n3zl7gf6gcaz.png" alt="Ebs storage 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You will see the same options that we saw earlier while creating our EC2 instance.Remember to create the volume in the same availability zone as in the EC2 instance.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jVwazFxu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z3de57r30i7xwdjtjqan.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jVwazFxu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z3de57r30i7xwdjtjqan.png" alt="Ebs storage 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We get a status successful page and voila we created a new volume for our EC2 instance
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xREEJAs6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w6sdc7z62kn91bclpevn.png" alt="Ebs storage 3"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#attach-an-ebs-volume-to-an-ec2-instance"&gt;
  &lt;/a&gt;
  Attach an EBS volume to an EC2 instance
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;To attach an EBS volume to an EC2 instance right click on your EBS volume and click attach volume&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T_JM1t9Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ck9z1dshc4tn3iw0h6qn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T_JM1t9Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ck9z1dshc4tn3iw0h6qn.png" alt="Attach volume 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You will see a dialog from where you can attach your EBS volume to an instance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ibt7j9zU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pbmcmq3vmq2hwb8z1o8t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ibt7j9zU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pbmcmq3vmq2hwb8z1o8t.png" alt="Attach volume 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Right now we have attached an EBS volume to our EC2 instance but we will need to format it with a file system to use it with our EC2 instance like any other storage. Which is a bit complex and out of scope for this tutorial but you can check that out in the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-using-volumes.html"&gt;documentation&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z0cl3c8f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sftehmw77ysof0jj1p6d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z0cl3c8f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sftehmw77ysof0jj1p6d.png" alt="Attach volume 3"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you terminate your instance then the one on which we selected delete on termination will be deleted&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y39C4ES---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lrlby3ztjk6k8lfhc12c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y39C4ES---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lrlby3ztjk6k8lfhc12c.png" alt="terminate 1"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eYBp2JKY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0dedpbwcx0hsxhlpnsoa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eYBp2JKY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0dedpbwcx0hsxhlpnsoa.png" alt="Terminate 2"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jh8z4qB7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zlo911uu5lm7jmrd4189.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jh8z4qB7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zlo911uu5lm7jmrd4189.png" alt="terminate 3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-snapshots-to-move-ebs-volumes"&gt;
  &lt;/a&gt;
  Use snapshots to move EBS volumes
&lt;/h2&gt;

&lt;p&gt;We can only work with our EBS volumes in one availability zone bout how to move them across availability zones. To do that we can use snapshots&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To create a snapshot go to the volumes in EC2 dashboard 
under Elastic Block Store&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fyZPKaAQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8we56xfy5epg6fwq5b0i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fyZPKaAQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8we56xfy5epg6fwq5b0i.png" alt="Snapshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Select the volume and on the top click on actions. You will see an option for create snapshot&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r-tEQwXz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dlg3l4yjeradwu8eaeal.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r-tEQwXz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dlg3l4yjeradwu8eaeal.png" alt="Snaphot 1"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click create snapshot after that you will see the screen below and put a description for our snapshot. Click on create snapshot. Your snapshot is created.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rk1z2AQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qtl0mbe2c1eobp5y9o9z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rk1z2AQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qtl0mbe2c1eobp5y9o9z.png" alt="snapshot2"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GwVlilOC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ni1a4nj2somfc42iiko4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GwVlilOC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ni1a4nj2somfc42iiko4.png" alt="snapshot 3"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It will take some time to create a snapshot but after sometime you can see the snapshot under snapshots under Elastic Block Store&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sX4mLqOt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4k4m8h70ofrfps3fcmw1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sX4mLqOt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4k4m8h70ofrfps3fcmw1.png" alt="creaed snapshot"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Once you are in these select the snapshot and from actions you can select copy.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wm-of_El--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7nygn9zh8e5qrl3gzc9c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wm-of_El--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7nygn9zh8e5qrl3gzc9c.png" alt="copy"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now you can see options to copy it across regions. If you want to copy it in any other region you can do it here.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D_Ayh9Ox--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yq2oo0pj181jw5o1fgyd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D_Ayh9Ox--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yq2oo0pj181jw5o1fgyd.png" alt="copy region"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now we can go across regions but still cannot copy across availability zones. To create a volume across Availability zone select snapshot -&amp;gt; click actions -&amp;gt; select create volume -&amp;gt; now you can create a volume with the data from the selected snapshot.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qs_Mdwgw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5u3iltf3lnnbz30mfdzf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qs_Mdwgw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5u3iltf3lnnbz30mfdzf.png" alt="copy az"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Here we get the option to change Availability zone or change disk size. Same way you can create a new volume using  snapshots across regions.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NGSrN-Z7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tnf1shf58h03o9059jiy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NGSrN-Z7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tnf1shf58h03o9059jiy.png" alt="copy az 2"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dbqp8fB3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2bwpqudbqkhs1v0039up.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dbqp8fB3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2bwpqudbqkhs1v0039up.png" alt="copy az result"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wow we learnt a lot of things today this may seem trivial once you are done with it but think of it in terms of physical servers how how will it take to move your servers disk space from one region into another. How long will it take to change capacity. Isn't it just wonderful how easy cloud made software operations. Next series amazon devices joined to physical drives EFS for a better throughput that network devices. &lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>cloudskills</category>
    </item>
    <item>
      <title>Challenge: Build a Product</title>
      <author>Sahil Rajput</author>
      <pubDate>Thu, 24 Jun 2021 05:02:53 +0000</pubDate>
      <link>https://dev.to/sahilrajput/challenge-build-a-product-nlf</link>
      <guid>https://dev.to/sahilrajput/challenge-build-a-product-nlf</guid>
      <description>&lt;p&gt;Put a comment with some product idea and the idea with the most number of upvotes will be selected and I will build an open-source product based on that idea.&lt;/p&gt;

&lt;p&gt;Deadline to put your product idea is 30th June 2021. After that I will pick the topmost comment and start working on it. &lt;/p&gt;

&lt;p&gt;I will make it open-source and post weekly updates.&lt;/p&gt;

</description>
      <category>idea</category>
      <category>opensource</category>
      <category>challenge</category>
      <category>startup</category>
    </item>
    <item>
      <title>Basico do Basico de HTML5!</title>
      <author>Bieldeid</author>
      <pubDate>Thu, 24 Jun 2021 03:13:37 +0000</pubDate>
      <link>https://dev.to/deid/basico-do-basico-de-html5-4491</link>
      <guid>https://dev.to/deid/basico-do-basico-de-html5-4491</guid>
      <description>

&lt;p&gt;Notas do editor:&lt;br&gt;
"A principio gostaria de dizer que ainda sou um mero estudante e continuarei sendo nessa vida que escolhi ter, pois nunca paramos de aprender nessa área.&lt;br&gt;
Sendo assim, se tiver alguma sugestão, algo a complementar ou corrigir algo em meus resumos, fique a vontade.&lt;br&gt;
Estou fazendo isso para melhorar meu aprendizado e passar o conhecimento que adquiri! Sendo assim, tenha um belo dia! &amp;lt;3"&lt;/p&gt;



&lt;p&gt;Bom, você ai que quer entrar no ramo da programação mas não sabe por onde começar ou quer ter a primeira experiência, aqui vai uma dica que eu dou, e que provavelmente nem irá precisar instalar uma IDE para tal. (Caso não saiba o que é uma IDE ou o básico das outras coisas e quer saber mais, da uma olhada no perfil do &lt;a href="https://dev.to/darrow"&gt;https://dev.to/darrow&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;A principio vamos saber o que significa HTML5:&lt;br&gt;
HTML (Hyper Text Markup Language) é nada mais nada menos do que:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Um arquivo que contem marcadores (tag).&lt;/li&gt;
&lt;li&gt;Essas tags indicam para o navegador (browser) como a página deve ser apresentada.&lt;/li&gt;
&lt;li&gt;Marcadores usualmente vem em pares

&lt;code&gt;&amp;lt;tag&amp;gt;...&amp;lt;/tag&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;ul&gt;
&lt;li&gt;Também podem aparecer de forma abreviada como:

&lt;code&gt;&amp;lt;tag atributo="valor".../&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Agora, vamos compreender um pouco das tags que utilizamos no html5, lembrando, apenas o básico!&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;html&amp;gt; - Define um documento HTML, tudo que estiver nele será apresentado no navegador.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;&amp;lt;head&amp;gt; - Define e configura o topo do seu site/código, como o título e outros&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;&amp;lt;title&amp;gt; - Define o título do seu site, que fica nas abas do navegador&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;&amp;lt;body&amp;gt; - Define o corpo do HTML, tudo que estiver nele será visível no site.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;&amp;lt;h1&amp;gt; até a &amp;lt;h6&amp;gt; - Define cabeçalhos de 1 a 6&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;&amp;lt;p&amp;gt; - Define um parágrafo.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;&amp;lt;br&amp;gt; - Define uma quebra de linha.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;




&lt;p&gt;Sendo assim, vamos fazer o seu primeiro site?&lt;/p&gt;

&lt;p&gt;Abra seu bloco de notas e escreva isso aqui:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--57YfAe-y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c2nehnym4lhrser0vre9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--57YfAe-y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c2nehnym4lhrser0vre9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Após finalizar, salve-o como "index.html" e execute-o, se você fez tudo certinho, o site irá aparecer dessa forma:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0U6z752c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kttyc8eunuczexeiy04i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0U6z752c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kttyc8eunuczexeiy04i.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Espero que você tenha consigo realizar o seu possível primeiro site de muitos outros.&lt;br&gt;
Não se esqueça de fuçar nesse código e entender mais um pouco sobre o que cada tag faz e etc.&lt;br&gt;
Agradeço se leu até aqui, um abraço e até a próxima!&lt;/p&gt;

</description>
      <category>html</category>
      <category>brasil</category>
    </item>
    <item>
      <title>The NEW GitHub Issues and Boards are HERE and they are COOL!</title>
      <author>Davide 'CoderDave' Benvegnù</author>
      <pubDate>Thu, 24 Jun 2021 02:57:51 +0000</pubDate>
      <link>https://dev.to/github/the-new-github-issues-and-boards-are-here-and-they-are-cool-31je</link>
      <guid>https://dev.to/github/the-new-github-issues-and-boards-are-here-and-they-are-cool-31je</guid>
      <description>&lt;p&gt;The new GitHub Issues and Project Boards are here, and they are &lt;strong&gt;pretty cool&lt;/strong&gt;! Today we are gonna see all the &lt;strong&gt;new and updated features&lt;/strong&gt;, and what we can do with them.&lt;/p&gt;

&lt;p&gt;Let's get into it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-has-been-announced-and-availability"&gt;
  &lt;/a&gt;
  What Has Been Announced and Availability
&lt;/h3&gt;

&lt;p&gt;There are 3 main new features as part of this release: &lt;strong&gt;Issue Forms&lt;/strong&gt;, &lt;strong&gt;Task Lists&lt;/strong&gt;, and &lt;strong&gt;Table View + Boards&lt;/strong&gt; in the Projects.&lt;/p&gt;

&lt;p&gt;Let's start with availability:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UmZu4X9y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41i0ahrk3lkqazp0ovg1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UmZu4X9y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41i0ahrk3lkqazp0ovg1.png" alt="Availability"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Currently they are all released in &lt;strong&gt;beta&lt;/strong&gt;, with some differences.&lt;/p&gt;

&lt;p&gt;Both Issue Forms and Task list are in &lt;strong&gt;public beta&lt;/strong&gt;, available to everyone on every plan. Issue forms, however, are currently available only &lt;strong&gt;Public Repositories&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The new Table view and Boards, on the other hand, are in &lt;strong&gt;Limited Beta&lt;/strong&gt;. To get access to it you need to request it at the link &lt;a href="https://github.com/features/issues"&gt;https://github.com/features/issues&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-new"&gt;
  &lt;/a&gt;
  What Is New?
&lt;/h3&gt;

&lt;p&gt;With that out of the way, what is new? Well... a lot!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X4LuILSc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bysxan0n4toy466qe1ke.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X4LuILSc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bysxan0n4toy466qe1ke.png" alt="Table view"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The new capabilities of Projects include things like issue hierarchy, &lt;strong&gt;custom fields&lt;/strong&gt;, a spreadsheet-like table, and saved views - &lt;strong&gt;all built into GitHub&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;And for the Issue Forms, they provide &lt;strong&gt;improved issue template&lt;/strong&gt; with a form layout that can use optional and validated fields and values. This allows to better manage the influx of bugs, features, and general requests by making each of them more actionable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video"&gt;
  &lt;/a&gt;
  Video
&lt;/h3&gt;

&lt;p&gt;Alright, enough talking. Let's see this in action. We'll take a look first at the issue forms and task lists, and then we will move to the new boards.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/MvyGcLg6AvI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/MvyGcLg6AvI?t=116"&gt;Link to the video (demo starts at minute 1:56 ): https://youtu.be/MvyGcLg6AvI?t=116&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h3&gt;

&lt;p&gt;I can think of a thousand scenarios in which all of this could be beneficial, but I'd love to know how you would use this. Let me know in the comments below.&lt;/p&gt;

&lt;p&gt;All those new features are pretty cool. I mean, obviously they can't replace tools like Azure Boards or Jira for complex projects &lt;strong&gt;just yet&lt;/strong&gt;, but I believe &lt;strong&gt;GitHub is on the right track&lt;/strong&gt; with this.&lt;/p&gt;

&lt;p&gt;The new Project Boards and Tables connect your planning directly to the work your teams are doing, and flexibly adapt to whatever your team needs at any point. And now with custom fields, you can use to track a sprint, plan a feature, or manage a large-scale release.&lt;/p&gt;

&lt;p&gt;I'm pretty excited to see what this will evolve to be, and I think having everything we need directly in GitHub is a big plus.&lt;/p&gt;

&lt;p&gt;But I'd like to know what you think about this, so let me know in the comment section below ok?&lt;/p&gt;

&lt;p&gt;You may also want to watch &lt;a href="https://youtu.be/h6fOErvWIGI"&gt;this video here&lt;/a&gt;, in which I show how to use upload and use videos in GitHub Issues and Pull Requests.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Like, share and follow me&lt;/strong&gt; 🚀 for more content:&lt;/p&gt;

&lt;p&gt;📽 &lt;a href="https://www.youtube.com/CoderDave"&gt;YouTube&lt;/a&gt;&lt;br&gt;
☕ &lt;a href="https://buymeacoffee.com/CoderDave"&gt;Buy me a coffee&lt;/a&gt;&lt;br&gt;
💖 &lt;a href="https://patreon.com/CoderDave"&gt;Patreon&lt;/a&gt;&lt;br&gt;
🌐 &lt;a href="https://coderdave.io"&gt;CoderDave.io Website&lt;/a&gt;&lt;br&gt;
👕 &lt;a href="https://geni.us/cdmerch"&gt;Merch&lt;/a&gt;&lt;br&gt;
👦🏻 &lt;a href="https://www.facebook.com/CoderDaveYT"&gt;Facebook page&lt;/a&gt;&lt;br&gt;
🐱‍💻 &lt;a href="https://github.com/n3wt0n"&gt;GitHub&lt;/a&gt;&lt;br&gt;
👲🏻 &lt;a href="https://www.twitter.com/davide.benvegnu"&gt;Twitter&lt;/a&gt;&lt;br&gt;
👴🏻 &lt;a href="https://www.linkedin.com/in/davidebenvegnu/"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
🔉 &lt;a href="https://geni.us/cdpodcast"&gt;Podcast&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/CoderDave"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/MvyGcLg6AvI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>github</category>
      <category>devops</category>
      <category>news</category>
    </item>
    <item>
      <title>What was your first code editor?</title>
      <author>Suraj Vishwakarma</author>
      <pubDate>Thu, 24 Jun 2021 02:29:10 +0000</pubDate>
      <link>https://dev.to/basecampxd/what-was-your-first-code-editor-3fe3</link>
      <guid>https://dev.to/basecampxd/what-was-your-first-code-editor-3fe3</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Today, we have known many code editors that offer more than a just code editor. They have many features and support for extensions to increase their features. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/QHE5gWI0QjqF2/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/QHE5gWI0QjqF2/giphy.gif" alt="Coding"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Back to when we code the first time, we were having less idea about code and code editor. So we used whatever was best or recommended.&lt;/p&gt;

&lt;p&gt;So today, let's share about our first code and code editor.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-experience"&gt;
  &lt;/a&gt;
  My Experience
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://dev.to/surajondev/what-is-the-first-programming-language-that-you-learned-1enc"&gt;Batch Scripting Language&lt;/a&gt; was my first programming language. I used it to code my first program that was &lt;strong&gt;Hello World!&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;The Code Editor that I used was &lt;strong&gt;Notepad&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;No feature of a modern code editor, it was only me and notepad&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#discuss"&gt;
  &lt;/a&gt;
  Discuss
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;What was your first experience with code and code editor?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#connect-with-me"&gt;
  &lt;/a&gt;
  🔗 Connect with me:
&lt;/h2&gt;

&lt;p&gt;Currently, on Twitter, I am posting about "How to write and grow blog?". If you want to write a more effective blog with tips, consider the follow button on Twitter.&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;With this completing 500 tweets🥳.&lt;br&gt;&lt;br&gt;Thank you to everyone🤩.&lt;br&gt;&lt;br&gt;As helping more people, I am going to tweet about writing and growing blog especially technical, in the coming days🔥.&lt;br&gt;&lt;br&gt;So if you haven't followed me, please consider🤗.&lt;/p&gt;— Suraj Vishwakarma &lt;a href="https://twitter.com/surajondev"&gt;@surajondev&lt;/a&gt; &lt;a href="https://twitter.com/surajondev/status/1394212368675000321?ref_src=twsrc%5Etfw"&gt;May 17, 2021&lt;/a&gt;
&lt;/blockquote&gt; 

&lt;p&gt;&lt;a href="https://twitter.com/surajondev"&gt;&lt;strong&gt;Twitter&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#last-note"&gt;
  &lt;/a&gt;
  Last Note
&lt;/h2&gt;

&lt;p&gt;I am excited to read your experience. &lt;/p&gt;

</description>
      <category>discuss</category>
      <category>watercooler</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Building scalable Flutter apps (Architecture, Styling, Conventions, State management)</title>
      <author>Nour El-Din Shobier</author>
      <pubDate>Thu, 24 Jun 2021 01:45:20 +0000</pubDate>
      <link>https://dev.to/noureldinshobier/building-scalable-flutter-apps-architecture-styling-conventions-state-management-40c9</link>
      <guid>https://dev.to/noureldinshobier/building-scalable-flutter-apps-architecture-styling-conventions-state-management-40c9</guid>
      <description>&lt;p&gt;After two years of Fluttering, I would like to share in this article the best practices that I’ve learned of how to build a scalable application.&lt;/p&gt;

&lt;p&gt;I will not say what you &lt;strong&gt;&lt;em&gt;should&lt;/em&gt;&lt;/strong&gt; do, but what you &lt;strong&gt;&lt;em&gt;could&lt;/em&gt;&lt;/strong&gt; do. This guideline will make sure you, and anyone else maintaining the application, can find anything you’re looking for easily and intuitively. &lt;/p&gt;

&lt;p&gt;That said, let’s discuss how you can achieve that.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-architecture-featurebased"&gt;
  &lt;/a&gt;
  1) Architecture: Feature-based
&lt;/h2&gt;

&lt;p&gt;Feature is an essential concept to understand any software design. It’s also used to describe user requirements for software development. Therefore, if we structure our projects by features, it will be easier to manage the project when it grows as we construct the system with bigger units.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#organize-project-by-features"&gt;
  &lt;/a&gt;
  Organize project by features
&lt;/h3&gt;

&lt;p&gt;In complex apps, it’s hard to understand how different modules collaborate. A feature-oriented architecture is helpful for this because we’ve grouped related logic &lt;code&gt;(widgets|utils|pages|stores|models|..etc)&lt;/code&gt; into features. We don’t need to think about how the small parts work together but how features work together to construct the app. By analyzing dependencies between features the app could auto-generate understandable diagrams for developers to learn or review the project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-types"&gt;
  &lt;/a&gt;
  Features types
&lt;/h3&gt;

&lt;p&gt;To keep any feature from getting polluted, it’s important to decouple the &lt;strong&gt;business logic&lt;/strong&gt; of that feature from its &lt;strong&gt;presentation&lt;/strong&gt;. That’s why we should split the app into two different layers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Infrastructure features:&lt;/strong&gt; contains all the features that are responsible for implementing the business logic of the application (e.g: auth, http, config, user, articles, events, schools, …etc.)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;App features:&lt;/strong&gt; contains all the features that are responsible for implementing the presentation of the application (e.g: auth, home, settings, user, articles, events, schools, …etc.)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Notice&lt;/strong&gt; that auth, user, events, articles, …etc. features can be both infrastructure and app features, so what is the difference? that’s what we will discuss in the next section &lt;strong&gt;(Features anatomy)&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4IC4Sf9z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/luixyjq9gdq1nt26v921.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4IC4Sf9z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/luixyjq9gdq1nt26v921.png" alt="Feature types"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-anatomy"&gt;
  &lt;/a&gt;
  Features anatomy
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Infrastructure features:&lt;/strong&gt; maintains services, repositories, models, dtos, utils, interceptors, validators, interfaces, …etc&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;App features:&lt;/strong&gt; maintains pages, widgets, styles, fonts, colors, …etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; An app feature may consume multiple Infrastructure features&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zzQFoOQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ar79wq3cjsyv1lirdk4q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zzQFoOQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ar79wq3cjsyv1lirdk4q.png" alt="Features anatomy"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-naming-conventions-naming-files"&gt;
  &lt;/a&gt;
  2) Naming conventions: Naming files
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#snake-case-snakecase"&gt;
  &lt;/a&gt;
  Snake case (snake_case)
&lt;/h3&gt;

&lt;p&gt;snake_case is a naming style where &lt;strong&gt;all letters in the name are lowercase&lt;/strong&gt; &lt;strong&gt;and&lt;/strong&gt; &lt;strong&gt;it uses&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;underscores&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;to separate words&lt;/strong&gt; in a name. In addition, in &lt;strong&gt;Angular&lt;/strong&gt;, a dot is used to separate the name, type, and extension for file names. &lt;code&gt;file_name.type.dart&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Including the type in the file names make it easy to find a specific file type using a text editor or an IDE.&lt;/p&gt;

&lt;p&gt;Most common files types are: .widget, .style, .service, .model, .util, .store&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Create additional type names if you must but take care not to create too many.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;file_name.widget.dart&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_name.style.dart&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_name.model.dart&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file_name.util.dart&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-state-management-provider-mvvm"&gt;
  &lt;/a&gt;
  3) State management: Provider + MVVM
&lt;/h2&gt;

&lt;p&gt;State management is a complex topic in Flutter. Each State Management approach has its characteristics and each person has different preferences. For me, &lt;a href="https://pub.dev/packages/provider"&gt;Provider&lt;/a&gt; was the best choice because it is easy to understand and it doesn’t use much code.&lt;/p&gt;

&lt;p&gt;That said, Provider itself isn’t enough to build scalable apps, so I ended up building my package for state management that combines both Provider and MVVM features and called it &lt;a href="https://pub.dev/packages/pmvvm"&gt;PMVVM&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pmvvm"&gt;
  &lt;/a&gt;
  P.MVVM
&lt;/h3&gt;

&lt;p&gt;In PMVVM we have 3 major pieces are needed, everything else is up to you. These pieces are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;View&lt;/strong&gt;: It represents the UI of the application devoid of any Application Logic. The &lt;code&gt;ViewModel&lt;/code&gt; sends notifications to the &lt;code&gt;view&lt;/code&gt; to update the UI whenever state changes.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;ViewModel&lt;/strong&gt;: It acts as a bridge between the &lt;code&gt;Model&lt;/code&gt; and the &lt;code&gt;View&lt;/code&gt;. It’s responsible for transforming the data from the &lt;code&gt;Model&lt;/code&gt;, it also holds the events of the &lt;code&gt;View&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Model&lt;/strong&gt;: Holds app data and the business logic. It consists of the business logic - local and remote data source, model classes, repository. They’re usually simple classes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0uqiewrL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dpa5jtr1aingqhpae1vm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0uqiewrL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dpa5jtr1aingqhpae1vm.png" alt="PMVVM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages ✔️&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Your code is even more easily testable.&lt;/li&gt;
&lt;li&gt;Your code is further decoupled (the biggest advantage.)&lt;/li&gt;
&lt;li&gt;The package structure is even easier to navigate.&lt;/li&gt;
&lt;li&gt;The project is even easier to maintain.&lt;/li&gt;
&lt;li&gt;Your team can add new features even more quickly.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;When to use it 👌&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;To keep it simple, use the &lt;code&gt;MVVM&lt;/code&gt; whenever your widget has its own events that can mutate the state directly e.g: pages, posts, ..etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Some Notes&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;View&lt;/code&gt; can't access the &lt;code&gt;Model&lt;/code&gt; directly&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;View&lt;/code&gt; is devoid of any application logic&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ViewModel&lt;/code&gt; has only one &lt;code&gt;View&lt;/code&gt; whether it was a page, post, ..etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Build your &lt;code&gt;ViewModel&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;    &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyViewModel&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;ViewModel&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

      &lt;span class="c1"&gt;// Optional&lt;/span&gt;
      &lt;span class="nd"&gt;@override&lt;/span&gt;
      &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// It's called after the ViewModel is constructed&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;

      &lt;span class="c1"&gt;// Optional&lt;/span&gt;
      &lt;span class="nd"&gt;@override&lt;/span&gt;
      &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;onBuild&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// It's called everytime the view is rebuilt&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;

      &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;increase&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;++;&lt;/span&gt;
        &lt;span class="n"&gt;notifyListeners&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also access the &lt;code&gt;context&lt;/code&gt; inside the &lt;code&gt;ViewModel&lt;/code&gt; directly&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;    &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyViewModel&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;ViewModel&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="nd"&gt;@override&lt;/span&gt;
      &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MediaQuery&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;of&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Declare &lt;code&gt;MVVM&lt;/code&gt; inside your widget.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;    &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyWidget&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatelessWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;MyWidget&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;key:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

      &lt;span class="nd"&gt;@override&lt;/span&gt;
      &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;MVVM&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;MyViewModel&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;view:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vmodel&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_MyView&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
          &lt;span class="nl"&gt;viewModel:&lt;/span&gt; &lt;span class="n"&gt;MyViewModel&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
        &lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Build your &lt;code&gt;View&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;    &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;_MyView&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatelessView&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;MyViewModel&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;/// Set [reactive] to [false] if you don't want the view to listen to the ViewModel.&lt;/span&gt;
      &lt;span class="c1"&gt;/// It's [true] by default.&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;_MyView&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;key:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;reactive:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; 

      &lt;span class="nd"&gt;@override&lt;/span&gt;
      &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vmodel&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;mainAxisAlignment:&lt;/span&gt; &lt;span class="n"&gt;MainAxisAlignment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;center&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;crossAxisAlignment:&lt;/span&gt; &lt;span class="n"&gt;CrossAxisAlignment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;center&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;children:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Widget&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;[&lt;/span&gt;
            &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vmodel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;()),&lt;/span&gt;
            &lt;span class="n"&gt;SizedBox&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;height:&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;RaisedButton&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;onPressed:&lt;/span&gt; &lt;span class="n"&gt;vmodel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;increase&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Increase'&lt;/span&gt;&lt;span class="o"&gt;)),&lt;/span&gt;
          &lt;span class="o"&gt;],&lt;/span&gt;
        &lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;For more details, head to the package documentation&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#pmvvm-for-web-mobile-and-desktop-together"&gt;
  &lt;/a&gt;
  P.MVVM for Web, Mobile, and Desktop together
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;pmvvm&lt;/code&gt; works perfectly especially if your app runs on multiple platforms. All you need is to create a single view model that controls all these views:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vdbc2CWZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/99swc9c60c1z6cxtblrs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vdbc2CWZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/99swc9c60c1z6cxtblrs.png" alt="PMVVM for crossplatforms"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-styling"&gt;
  &lt;/a&gt;
  4) Styling
&lt;/h2&gt;

&lt;p&gt;In Flutter, we often make files for colors, strings, text styles, themes. This way all of these values are kept in one, easy to find a place that should make life easier for the person who gets stuck with maintaining the app.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#styling-as-a-feature"&gt;
  &lt;/a&gt;
  Styling as a feature
&lt;/h3&gt;

&lt;p&gt;We should group &lt;code&gt;app-wide&lt;/code&gt; colors, fonts, themes, and animations as an app feature called &lt;code&gt;styles&lt;/code&gt;. This approach will make all the widgets in the application consume the styles from a single source.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;colors.style.dart&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;    &lt;span class="kd"&gt;abstract&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CColors&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;white0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xffffffff&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;black100&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xff000000&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;blue10&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xffedf5ff&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;blue20&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xffd0e2ff&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;blue30&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xffa6c8ff&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;text.style.dart&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;    &lt;span class="kd"&gt;abstract&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CFonts&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;primaryRegular&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'IBMPlexSans-Regular'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;primaryLight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'IBMPlexSans-Light'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;primaryMedium&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'IBMPlexSans-Medium'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;primarySemibold&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'IBMPlexSans-SemiBold'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;primaryBold&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'IBMPlexSans-Bold'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;More examples can be found &lt;a href="https://github.com/NourEldinShobier/carbon-flutter/tree/master/lab/lib/shared/styles"&gt;&lt;strong&gt;Here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#widgets-styling"&gt;
  &lt;/a&gt;
  Widgets styling
&lt;/h3&gt;

&lt;p&gt;If your widget is complex and has some reactive behavior based on specific actions (e.g: background color changes when a button is tapped), then you probably need to separate your widget colors and layout variables from the widget code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tile.style.dart&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;    &lt;span class="kd"&gt;abstract&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TileStyle&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;dynamic&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;layouts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;'tile-padding'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;EdgeInsets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;all&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;};&lt;/span&gt;
      &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;'tile-enabled-background-color'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;CColors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;gray90&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;'tile-enabled-label-color'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;CColors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;gray30&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;'tile-enabled-title-color'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;CColors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;gray10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;'tile-enabled-description-color'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;CColors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;gray30&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="c1"&gt;//&lt;/span&gt;
        &lt;span class="s"&gt;'tile-disabled-background-color'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;CColors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;gray90&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;'tile-disabled-label-color'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;CColors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;gray70&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;'tile-disabled-title-color'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;CColors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;gray70&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;'tile-disabled-description-color'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;CColors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;gray70&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="o"&gt;};&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;tile.widget.dart&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;    &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CTile&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatelessWidget&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;CWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;_enable&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;CTile&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;
        &lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="o"&gt;...&lt;/span&gt;
      &lt;span class="o"&gt;})&lt;/span&gt;  &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;_enable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;key:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

      &lt;span class="nd"&gt;@override&lt;/span&gt;
      &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="n"&gt;enable&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_enable&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="nd"&gt;@override&lt;/span&gt;
      &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CTileStyle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;colors&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;layouts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CTileStyle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;layouts&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;selector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;enable&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="s"&gt;'enabled'&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'disabled'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;selector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'tile-&lt;/span&gt;&lt;span class="si"&gt;$state&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;IgnorePointer&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;ignoring:&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="o"&gt;....&lt;/span&gt;
        &lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;More examples can be found &lt;a href="https://github.com/NourEldinShobier/carbon-flutter/tree/master/lab/lib/features"&gt;&lt;strong&gt;Here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article, we covered the 4 main things you need in large application development.&lt;/p&gt;

&lt;p&gt;Here they are in summary:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Construct your application as a set of features working together.&lt;/li&gt;
&lt;li&gt;Define the type of each dart file using file_name.type.dart.&lt;/li&gt;
&lt;li&gt;Using MVVM to manage your state is easier than other alternatives such as BLoC.&lt;/li&gt;
&lt;li&gt;Separate your widgets styles from the presentation code.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  Source code
&lt;/h2&gt;

&lt;p&gt;A full example for this article can be found &lt;a href="https://github.com/NourEldinShobier/scalable_flutter_app"&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>flutter</category>
    </item>
    <item>
      <title>Javascript Questions</title>
      <author>Esraa</author>
      <pubDate>Wed, 23 Jun 2021 23:43:36 +0000</pubDate>
      <link>https://dev.to/esraarefaat/javascript-questions-2k3k</link>
      <guid>https://dev.to/esraarefaat/javascript-questions-2k3k</guid>
      <description>&lt;p&gt;let a = 3;&lt;br&gt;
let b = new Number(3);&lt;br&gt;
let c = 3;&lt;/p&gt;

&lt;p&gt;console.log(a == b);&lt;br&gt;
console.log(a === b);&lt;br&gt;
console.log(b === c);&lt;/p&gt;

&lt;p&gt;A: true false true&lt;br&gt;
B: false false true&lt;br&gt;
C: true false false&lt;br&gt;
D: false true true&lt;/p&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;p&gt;new Number() is a built-in function constructor. Although it looks like a number, it's not really a number: it has a bunch of extra features and is an object.&lt;/p&gt;

&lt;p&gt;When we use the == operator, it only checks whether it has the same value. They both have the value of 3, so it returns true.&lt;/p&gt;

&lt;p&gt;However, when we use the === operator, both value and type should be the same. It's not: new Number() is not a number, it's an object. Both return false.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>interview</category>
      <category>intermediate</category>
    </item>
    <item>
      <title>Explain a "memory leak" like I'm five</title>
      <author>Peter Kim Frank</author>
      <pubDate>Wed, 23 Jun 2021 23:19:35 +0000</pubDate>
      <link>https://dev.to/peter/explain-a-memory-leak-like-i-m-five-2664</link>
      <guid>https://dev.to/peter/explain-a-memory-leak-like-i-m-five-2664</guid>
      <description>&lt;p&gt;&lt;a href="https://unsplash.com/photos/JrJ0png-mL8"&gt;Cover Photo via Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>explainlikeimfive</category>
    </item>
    <item>
      <title>Tools for designing a web project</title>
      <author>Michael</author>
      <pubDate>Wed, 23 Jun 2021 22:16:34 +0000</pubDate>
      <link>https://dev.to/michaelcurrin/tools-for-designing-a-web-project-4b1c</link>
      <guid>https://dev.to/michaelcurrin/tools-for-designing-a-web-project-4b1c</guid>
      <description>&lt;p&gt;I have a bunch of projects I am working on for fun, mostly around web apps. Some of them are just concepts and some exist but need a revamp for a professional design.&lt;/p&gt;

&lt;p&gt;So I want to share some of the tools I am using in my process. From designing the layout of the page to choosing color schemes and images. So when I start coding, I have the design and artistic decisions mostly figured out.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whimsical"&gt;
  &lt;/a&gt;
  Whimsical
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://whimsical.com/"&gt;https://whimsical.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A free, intuitive wireframing tool.&lt;/p&gt;

&lt;p&gt;Design your app for mobile or desktop. Create some webpage wireframes where you can see your whole website laid out on one giant page, with arrows and lines connecting them.&lt;/p&gt;

&lt;p&gt;The ability to add styling is limited, but this is fine as it keeps the emphasis on laying out pages and components on pages, rather than colors or fonts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wix"&gt;
  &lt;/a&gt;
  Wix
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wix.com"&gt;https://wix.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I've used Wix before to prototype designs for a site, even though I end up coding the site myself after for more control. &lt;/p&gt;

&lt;p&gt;Being able to move around elements and add a gallery in a few clicks is amazing. Then code it yourself when you are ready.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#webflow"&gt;
  &lt;/a&gt;
  Webflow
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://webflow.com/"&gt;https://webflow.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://webflow.com/blog/best-webflow-templates"&gt;10 best templates of 2021&lt;/a&gt; on their blog.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a web design and hosting tool like Wix, but with finer control over styling like adding classes to elements. Wix is ideal for non-developers while Webflow is intended for developers.&lt;/p&gt;

&lt;p&gt;You can also add a CMS layer and ecommerce aspect to your site.&lt;/p&gt;

&lt;p&gt;I want to use this to prototype my designs.&lt;/p&gt;

&lt;p&gt;You need premium for Wix and Webflow if you want to remove ads and use a custom domain.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#coolors"&gt;
  &lt;/a&gt;
  Coolors
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://coolors.co/image-picker"&gt;https://coolors.co/image-picker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I need to choose a color palette that is harmonious.&lt;/p&gt;

&lt;p&gt;On Coolors, I can find existing palettes by other users or make one myself.&lt;/p&gt;

&lt;p&gt;There are probably many similar sites.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unsplash"&gt;
  &lt;/a&gt;
  Unsplash
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://unsplash.com"&gt;https://unsplash.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a great stock images site. Search for high quality high resolution stock photos. Link to the image on their CDN at the appropriate resolution from your site, or download them and add them to your site.&lt;/p&gt;

&lt;p&gt;They are all free. You are encouraged to use a credit to the author but this is not required.&lt;/p&gt;

&lt;p&gt;You'll find dev.to and other blogs tend to have cover images found on Unsplash (which some images of laptops and code on screens being used annoyingly often but such is life).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#free-svg"&gt;
  &lt;/a&gt;
  Free SVG
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://freesvg.org/"&gt;https://freesvg.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Similar to Unsplash for searching for SVG files. An SVG can be scaled to any time and is typically small in file size, so it great for small icons to a large logo on your site.&lt;/p&gt;

&lt;p&gt;Images are under the creative commons license.&lt;/p&gt;

&lt;p&gt;I used this tool to find a dragon image which I added to my one project.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MichaelCurrin/search-dragon"&gt;https://github.com/MichaelCurrin/search-dragon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#wrap-up"&gt;
  &lt;/a&gt;
  Wrap up
&lt;/h2&gt;

&lt;p&gt;I hope you learned about some new tools and feel inspired to go and design something. Let me know of other similar tools to recommend.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>design</category>
      <category>wireframing</category>
    </item>
    <item>
      <title>How coming off maternity leave has given me a “newborn” appreciation for pairing</title>
      <author>Austyn</author>
      <pubDate>Wed, 23 Jun 2021 22:06:49 +0000</pubDate>
      <link>https://dev.to/focusedlabs/how-coming-off-maternity-leave-has-given-me-a-newborn-appreciation-for-pairing-4k55</link>
      <guid>https://dev.to/focusedlabs/how-coming-off-maternity-leave-has-given-me-a-newborn-appreciation-for-pairing-4k55</guid>
      <description>&lt;p&gt;Late-night feedings and diaper changes, the 3-4 month sleep regression, teething, and a growth spurt all mean I'm getting less sleep than I'm used to and I am already back to work. Despite being away for 12 weeks on maternity leave, I still find it unbelievable to be back to work before we truly have things figured out, but that's a whole different article. I'm also incredibly privileged... I had 12 weeks paid time off, as did my husband, and we have full-time childcare. I fully recognize that I’m luckier than most - I wish 12 weeks of parental leave was the standard.&lt;/p&gt;

&lt;p&gt;Returning to work was a new experience. With Focused Labs doubling in size in the weeks I was on leave, I was returning to not only a new project but also to new Zoom boxes (thank you, pandemic life). However, instead of having to come back and be dropped straight into a 40 hour work week, Focused Labs has a “graceful return to work” policy. I was able to return to half days my first week and then reduced hours the rest of the month. Having been allowed to gracefully return to work, I now can’t imagine what starting back at 40 hours right away would feel like. That first week was jarring enough. I’m so thankful this option was available to me, and I was able to provide feedback to benefit my coworkers in the future.&lt;/p&gt;

&lt;p&gt;Pairing with someone on code, and knowing my pair is available as a second set of eyes, ensures continuity, and makes my day much better. When I left for maternity leave, the team didn’t miss a beat since I didn’t have “ownership” of the code.  Upon my return, being able to pair helped me get back up to speed quickly and provided that extra focus that can be lacking when you're sleep deprived. Talking through issues and interacting with another person regularly means a lot. This has especially been the case during a pandemic when you've been home with a baby, aren't going places, and “mommy and me” playdates hold their own new risks. At the same time, working from home is wonderful, especially when I am able to step away and see why Wes is crying, or feed him so I can skip a pump session.&lt;/p&gt;

&lt;p&gt;Shortly after my return, our founder asked me if sleep deprivation was affecting me mentally. My instant reaction was “no, I think I'm used to it.” But am I? Is it similar to thinking you’re not "that drunk"? Is that my instant response to not show weakness? The "I can keep up with the boys" mentality? Later I thought more about his question. Would I know if I'm not working up to my normal abilities? Being able to work with a pair gives me some of that feedback. Do I have to be 100% back to normal already? Is there anything I can really do about it? Not right now, but I think knowing my own limitations and that it's temporary helps.&lt;/p&gt;

&lt;p&gt;I have a 6 month old, adorable, little boy. My life is different. I'm different. How I work is different. And that's awesome. Pairing has helped me immensely and there are no words to describe how much that means to me to have one less thing to worry about.&lt;/p&gt;

</description>
      <category>career</category>
      <category>parenting</category>
      <category>womenintech</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>HTTP headers HTTP Request and Response</title>
      <author>Sanawar78</author>
      <pubDate>Wed, 23 Jun 2021 22:03:39 +0000</pubDate>
      <link>https://dev.to/sanawar78/http-headers-http-request-and-response-3cf8</link>
      <guid>https://dev.to/sanawar78/http-headers-http-request-and-response-3cf8</guid>
      <description>&lt;h1&gt;
  &lt;a href="#http-protocol"&gt;
  &lt;/a&gt;
  HTTP PROTOCOL
&lt;/h1&gt;

&lt;p&gt;HTTP stands for Hyper text transfer protocol.The Hypertext Transfer Protocol is an application protocol for distributed, collaborative, hypermedia information systems that allows users to communicate data on the World Wide Web.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTTP HEADERS&lt;/strong&gt;&lt;br&gt;
The HTTP headers are used to pass additional information between the clients and the server through the request and response header. All the headers are case-insensitive, headers fields are separated by colon, key-value pairs in clear-text string format. The end of the header section denoted by an empty field header. There are a few header fields that can contain the comments. And a few headers can contain quality(q) key-value pairs that separated by an equal sign. There are four kinds of headers context-wise: &lt;br&gt;
&lt;strong&gt;General Header:&lt;/strong&gt; &lt;br&gt;
         This type of headers applied on Request and Response headers both but with out affecting the database body.&lt;br&gt;
&lt;strong&gt;Request Header:&lt;/strong&gt; &lt;br&gt;
        This type of headers contains information about the fetched request by the client.&lt;br&gt;
&lt;strong&gt;Response Header:&lt;/strong&gt; &lt;br&gt;
        This type of headers contains the location of the source that has been requested by the client.&lt;br&gt;
&lt;strong&gt;Entity Header:&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
      This type of headers contains the information about the body of the resources like MIME type, Content-length.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#request-headers"&gt;
  &lt;/a&gt;
  REQUEST HEADERS
&lt;/h1&gt;

&lt;p&gt;Some common HTTP Request headers are discuss; &lt;br&gt;
&lt;strong&gt;Host Header&lt;/strong&gt;:&lt;br&gt;
           The host header specifies which website or web application should process an incoming HTTP request. The web server uses the value of this header to dispatch the request to the specified website or web application. Each web application hosted on the same IP address is commonly referred to as a virtual host.&lt;br&gt;
&lt;strong&gt;User Agent&lt;/strong&gt;:&lt;br&gt;
        The User Agent string contains information about your web browser name, operating system, device type and lots of other useful bits of information.&lt;br&gt;
     &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6V83vQti--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/njc8pbul0uuer7cqj4cl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6V83vQti--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/njc8pbul0uuer7cqj4cl.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Authentication Headers&lt;/strong&gt;:&lt;br&gt;
               HTTP authentication is a simple challenge and response mechanism with which a server can request authentication information (a user ID and password) from a client. The client passes the authentication information to the server in an Authorization header.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Cookie&lt;/strong&gt;:&lt;br&gt;
     It is a request type header. A cookie used in the requests sent by the user to the server.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yqf-b2ED--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mupb8gcclrnbhhohn8ns.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yqf-b2ED--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mupb8gcclrnbhhohn8ns.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#response-headers"&gt;
  &lt;/a&gt;
  RESPONSE HEADERS
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Status code&lt;/strong&gt;&lt;br&gt;
            This is a list of Hypertext Transfer Protocol (HTTP) response status codes. Status codes are issued by a server in response to a client's request made to the server.&lt;/p&gt;

&lt;p&gt;All HTTP response status codes are separated into five classes or categories. The first digit of the status code defines the class of response, while the last two digits do not have any classifying or categorization role. There are five classes defined by the standard:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1xx &lt;code&gt;informational&lt;/code&gt; response – the request was received, continuing process&lt;/li&gt;
&lt;li&gt;2xx &lt;code&gt;successful&lt;/code&gt; – the request was successfully received, understood, and accepted&lt;/li&gt;
&lt;li&gt;3xx &lt;code&gt;redirection&lt;/code&gt; – further action needs to be taken in order to complete the request&lt;/li&gt;
&lt;li&gt;4xx &lt;code&gt;client error&lt;/code&gt; – the request contains bad syntax or cannot be fulfilled&lt;/li&gt;
&lt;li&gt;5xx &lt;code&gt;server error&lt;/code&gt; – the server failed to fulfil an apparently valid request,&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0UFMFDLm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1lzav2k187islwy8vxfg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0UFMFDLm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1lzav2k187islwy8vxfg.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.Content-Type:&lt;/strong&gt;&lt;br&gt;
             In responses, a Content-Type header tells the client what the content type of the returned content actually is form.&lt;br&gt;
&lt;strong&gt;2.Set-cookies:&lt;/strong&gt;&lt;br&gt;
             The HTTP header Set-Cookie is a response header and used to send cookies from the server to the user agent. So the user agent can send them back to the server later so the server can detect the user.&lt;br&gt;
&lt;strong&gt;3. Content-Length&lt;/strong&gt;:&lt;br&gt;
          HTTP Content-Length entity-header is used to indicate the size of entity-body in decimal no of octets i.e. bytes and sent it to the recipient. It is a forbidden header name. Basically it is the number of bytes of data in the body of the request or response.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z0Spr4vW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alq4gt3scwexbre4srfc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z0Spr4vW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alq4gt3scwexbre4srfc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9VRvH4sE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpjvsm59fsziw1ymiqof.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9VRvH4sE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpjvsm59fsziw1ymiqof.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>React and Material-UI Landing Page/Template Starter Kit — Kanban Taskboard WebApp
</title>
      <author>Muthu Pandian</author>
      <pubDate>Wed, 23 Jun 2021 21:51:59 +0000</pubDate>
      <link>https://dev.to/hellomuthu23/react-and-material-ui-landing-page-template-starter-kit-kanban-taskboard-webapp-544i</link>
      <guid>https://dev.to/hellomuthu23/react-and-material-ui-landing-page-template-starter-kit-kanban-taskboard-webapp-544i</guid>
      <description>&lt;p&gt;Are you looking for a good/responsive React landing/Template to bootstrap your app?. You are in the right place. This article will help you to get your web app up and running quickly. Ideal for any hackathon or innovation project!.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l1wX8y6Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sr639t62vx3io12qyshx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l1wX8y6Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sr639t62vx3io12qyshx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Github: &lt;a href="https://github.com/hellomuthu23/react-material-ui-template"&gt;https://github.com/hellomuthu23/react-material-ui-template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Live site: &lt;a href="https://react-material-ui-template.web.app/"&gt;https://react-material-ui-template.web.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The ready-to-go template comes with the most essential tech-stack of React, Typescript, React Router, Material-UI, Lint, Prettier, and Cool Landing Page to bootstrap your web app. The app also has below basic features of creating a Taskboard and managing tasks using Kanban board.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a new Taskboard&lt;/li&gt;
&lt;li&gt;Open a Task Board&lt;/li&gt;
&lt;li&gt;Add Task&lt;/li&gt;
&lt;li&gt;Move Task across the different stage using the drag and drop feature&lt;/li&gt;
&lt;li&gt;Delete Task&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The Landing page is responsive as well, built using material-ui grids.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_RUN4kl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lehdfkeuc49eferalry6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_RUN4kl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lehdfkeuc49eferalry6.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#landing-page"&gt;
  &lt;/a&gt;
  Landing Page
&lt;/h2&gt;

&lt;p&gt;The Template has a home page with Toolbar for main navigation, the main content area for displaying page content, and a footer. It also offers a smooth transition/animation effect while loading the content on the page.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l1wX8y6Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sr639t62vx3io12qyshx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l1wX8y6Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sr639t62vx3io12qyshx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#kanban-taskboard-page"&gt;
  &lt;/a&gt;
  Kanban Taskboard Page
&lt;/h2&gt;

&lt;p&gt;The Taskboard page displays all the tasks in a kanban style format, task can be moved across to different stages using Drag and Drop feature. Along with this you can Add and Delete tasks. All data is stored in local storage.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TySGOR9L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lmwl3jzykna6olr4vz20.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TySGOR9L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lmwl3jzykna6olr4vz20.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-userun-the-app-locally"&gt;
  &lt;/a&gt;
  How to use/run the app locally?
&lt;/h2&gt;

&lt;p&gt;You can run the app locally and see how it performs. Follow the below steps to run the app locally.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Clone the repo
git clone &lt;a href="https://github.com/hellomuthu23/react-material-ui-template.git"&gt;https://github.com/hellomuthu23/react-material-ui-template.git&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Run yarn command to install the required npm package.&lt;/li&gt;
&lt;li&gt;Run yarn start to start the app.&lt;/li&gt;
&lt;li&gt;Access the app at &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hope you like this cool template and is of use to you!.&lt;br&gt;
Good luck!.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links:
&lt;/h2&gt;

&lt;p&gt;Github: &lt;a href="https://github.com/hellomuthu23/react-material-ui-template"&gt;https://github.com/hellomuthu23/react-material-ui-template&lt;/a&gt;&lt;br&gt;
Live site: &lt;a href="https://react-material-ui-template.web.app/"&gt;https://react-material-ui-template.web.app/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>typescript</category>
      <category>materialui</category>
      <category>landingpage</category>
    </item>
  </channel>
</rss>
