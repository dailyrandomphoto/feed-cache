<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What VPS provider do you use?</title>
      <author>Madza</author>
      <pubDate>Fri, 24 Sep 2021 07:24:34 +0000</pubDate>
      <link>https://dev.to/madza/what-vps-provider-do-you-use-2c31</link>
      <guid>https://dev.to/madza/what-vps-provider-do-you-use-2c31</guid>
      <description>&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Virtual_private_server"&gt;VPS (Virtual Private Server)&lt;/a&gt; can be the optional choice between slow/inflexible shared solutions and a dedicated server if you can afford it or don't want to deal with complexity.&lt;/p&gt;

&lt;p&gt;Some of the popular choices include: &lt;a href="https://www.inmotionhosting.com/"&gt;InMotion&lt;/a&gt;, &lt;a href="https://www.dreamhost.com/"&gt;DreamHost&lt;/a&gt;, &lt;a href="https://www.bluehost.com/"&gt;Bluehost&lt;/a&gt;, &lt;a href="https://www.a2hosting.com/"&gt;A2 Hosting&lt;/a&gt;, &lt;a href="https://www.hostgator.com/"&gt;HostGator&lt;/a&gt;, &lt;a href="https://www.hostinger.com/web-hosting"&gt;Hostinger&lt;/a&gt;, &lt;a href="https://uk.godaddy.com/"&gt;GoDaddy&lt;/a&gt;, etc.&lt;/p&gt;

&lt;p&gt;What VPS provider do you use/have tried?&lt;br&gt;
How much do you pay monthly? Are you satisfied with the performance, ease of use and support?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>backend</category>
      <category>server</category>
      <category>vps</category>
    </item>
    <item>
      <title>Find Personal &amp; Business Email Addresses With Linkedin</title>
      <author>John smith</author>
      <pubDate>Fri, 24 Sep 2021 07:17:18 +0000</pubDate>
      <link>https://dev.to/consultancy/find-personal-business-email-addresses-with-linkedin-54c5</link>
      <guid>https://dev.to/consultancy/find-personal-business-email-addresses-with-linkedin-54c5</guid>
      <description>&lt;h3&gt;KendoEmailApp:&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://kendoemailapp.com/"&gt;Find Personal &amp;amp; Business email addresses&lt;/a&gt; with one click. Kendo Email Finder will assist you in finding any email address directly from a LinkedIn profile or search results. Reach out now to over 700,000,000 professionals!&lt;/p&gt;

&lt;h3&gt;CHROME EXTENSION&lt;/h3&gt;

&lt;p&gt;Find and capture many new LinkedIn prospects with 100% verified corporate and personal email addresses within minutes. Additionally, our powerful Chrome extension supports LinkedIn, Sales Navigator, and Recruiter.&lt;/p&gt;

&lt;h3&gt;BULK EMAIL FINDER&lt;/h3&gt;

&lt;p&gt;The Email Finder is often performed to seek out the email address of an inventory of individuals. Upload an inventory of prospects to your account dashboard, find the email, and watch it enriched in bulk.&lt;br&gt;
All of our services also are available directly through our API. for instance, find the email address of any professional with an easy API call.&lt;/p&gt;

</description>
      <category>emailfinder</category>
      <category>businessemailfinder</category>
      <category>emailfindingtools</category>
    </item>
    <item>
      <title>Have you tried Kubernetes?</title>
      <author>Madza</author>
      <pubDate>Fri, 24 Sep 2021 06:50:01 +0000</pubDate>
      <link>https://dev.to/madza/have-you-tried-kubernetes-1dm0</link>
      <guid>https://dev.to/madza/have-you-tried-kubernetes-1dm0</guid>
      <description>&lt;p&gt;&lt;a href="https://kubernetes.io/"&gt;Kubernetes&lt;/a&gt;, also known as K8s, is an open-source system for automating deployment, scaling, and management of containerized applications.&lt;/p&gt;

&lt;p&gt;For me K8s has always been in the same category as &lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; - I hear great things about it all the time, tho I still have not found time to try it.&lt;/p&gt;

&lt;p&gt;Have you tried Kubernetes? What are your thoughts on it?&lt;br&gt;
Could you share some projects where you used it?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>opensource</category>
      <category>kubernetes</category>
    </item>
    <item>
      <title>How to manage your software documentation with docz! </title>
      <author>Suchitra</author>
      <pubDate>Fri, 24 Sep 2021 06:39:45 +0000</pubDate>
      <link>https://dev.to/suchitra_13/how-to-manage-your-software-documentation-with-docz-njf</link>
      <guid>https://dev.to/suchitra_13/how-to-manage-your-software-documentation-with-docz-njf</guid>
      <description>&lt;p&gt;So, before starting the topic, I want to ask you one thing is...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-do-you-think-about-documentation-of-your-project"&gt;
  &lt;/a&gt;
  How do you think about documentation of your project?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BA-JVOI_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/RKS1pHGiUUZ2g/giphy.gif%3Fcid%3Decf05e47j7qbd3btjpf1l7vxu0lh6e9h3mhxa9ghbzgxgulr%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BA-JVOI_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/RKS1pHGiUUZ2g/giphy.gif%3Fcid%3Decf05e47j7qbd3btjpf1l7vxu0lh6e9h3mhxa9ghbzgxgulr%26rid%3Dgiphy.gif%26ct%3Dg" alt="Boring"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's probably boring or time-consuming as well as very tedious task, right!!&lt;/p&gt;

&lt;p&gt;But also the documentation is very important part of our project, we can't skip it. Because if project doesn't have the documentation then how much great and useful the project is. It would be useless if no one can understand and use the project. &lt;/p&gt;

&lt;p&gt;So, what if you have something which can manage your documentation along with your project. And you can give your full focus on your project, rather of panicking about documentation.&lt;br&gt;
Here, &lt;strong&gt;Docz&lt;/strong&gt; comes into the picture.&lt;br&gt;
&lt;a href="https://i.giphy.com/media/4EFfs0K9mBhxuy8piu/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/4EFfs0K9mBhxuy8piu/giphy.gif" alt="Introduce"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#so-let-get-started"&gt;
  &lt;/a&gt;
  So, let get started…
&lt;/h3&gt;
&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#chapter-1"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-2"&gt;What makes Docz a brilliant documentation tool? &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-3"&gt;Prerequisite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-4"&gt;Getting Started with Docz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-5"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#introduction-to-docz"&gt;
  &lt;/a&gt;
  Introduction to Docz &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Documenting code is one of the most important and time-heavy processes when developing software.&lt;/p&gt;

&lt;p&gt;A lot of time is spent on building and maintaining custom documentation sites.&lt;/p&gt;

&lt;p&gt;Docz was created to solve this problem.&lt;/p&gt;

&lt;p&gt;Docz enables you to quickly create live-reloading, seo-friendly, production-ready documentation sites with MDX and customize the look, feel and behavior when required by leveraging GatsbyJS and Gatsby theme shadowing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In simple, word &lt;strong&gt;Docz&lt;/strong&gt; makes it easy to write and publish beautiful interactive documentation for your code. Create &lt;a href="https://mdxjs.com/"&gt;MDX&lt;/a&gt; files showcasing your code and Docz turns them into a live-reloading, production-ready site.&lt;br&gt;
It enables you to manage your React components by creating documentation of each component and so that it can help you in your project documentation.&lt;br&gt;
Suppose if you are working on a big and complex project where lots of components are present. In this case, it might be complex to you for understanding each component and managing the component parts. But it would be easy if you use &lt;strong&gt;Docz&lt;/strong&gt; because it will manage everything on behalf of you by creating the docs.&lt;br&gt;
&lt;a href="https://www.docz.site/docs/introduction"&gt;Visit here to know more&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#docz-is-an-open-source-project"&gt;
  &lt;/a&gt;
  Docz is an open source project:
&lt;/h3&gt;

&lt;p&gt;The interesting part of &lt;strong&gt;Docz&lt;/strong&gt; is… it is an open source project, anyone can use and contribute to it (without spending a single penny).&lt;br&gt;
The top contributors and maintainer of this project are &lt;a href="https://github.com/pedronauck"&gt;Pedro Nauck&lt;/a&gt;, &lt;a href="https://github.com/renatobenks"&gt;Renato Benkerdorf&lt;/a&gt; and &lt;a href="https://github.com/rakannimer"&gt;Rakan Nimer&lt;/a&gt;. For know more about contributors and want to contibute. Then go through this &lt;a href="https://github.com/doczjs/docz/graphs/contributors"&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wv5KpXct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dbr7hjdjhz47s5ho3en8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wv5KpXct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dbr7hjdjhz47s5ho3en8.png" alt="Screenshot (344)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--shy023Ip--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7cqo5nylsjgxjbfye7um.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--shy023Ip--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7cqo5nylsjgxjbfye7um.png" alt="Screenshot (343)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another interesting part of Docz is... &lt;strong&gt;Docz&lt;/strong&gt; itself made up of &lt;strong&gt;Docz&lt;/strong&gt; &lt;a href="https://github.com/doczjs/docz/"&gt;link&lt;/a&gt;.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#what-makes-docz-a-brilliant-documentation-tool"&gt;
  &lt;/a&gt;
  What makes Docz a brilliant documentation tool? &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;Powered by Gatsby&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Docz is built using GatsbyJS. It's optimised for a lightning-fast development experience and build times. It also allows you to leverage GatsbyJS's massive ecosystem of plugins and tools.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Zero config&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It has zero configuration and is easy to learn. Avoid unnecessary build steps with confusing setups.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Easy to customize&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Customization is effortless. You can customize the provided theme to make your documentation website stand out.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Based on MDX&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;MDX is Markdown + JSX. It brings the world of components to Markdown and the best standard for writing documentation.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Fully pluggable&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Plugins provide a great way to add functionality to your application without changing your code. Docz supports GatsbyJS plugins and some of the indigenously made Docz plugins.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;TypeScript support&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Docz provides native TypeScript support for TSX components and can generate documentation from your prop types and comments in your code.&lt;/p&gt;

&lt;p&gt;Now, you might be thinking about how can you use it?, what are the prerequisites?, and also might be interested to use it?...&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;As, I mentioned the above that it works on component basis, so the prerequisite is... it would be great if you are familiar with React. But don't worry if you don't know It's totally fine, you can still follow along with me. &lt;br&gt;
But I will recommend you to go through the &lt;a href="https://reactjs.org/tutorial/tutorial.html#what-is-react"&gt;React official documentation&lt;/a&gt;. If you want to know more.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#getting-started-with-docz"&gt;
  &lt;/a&gt;
  Getting Started with Docz &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Go to your terminal/cmd/git bash
Use this command:
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;project&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Note : Don't use capital letters in your project name.&lt;br&gt;
Then&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;project&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Add docz as a dependency
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;docz&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Then, add .mdx files anywhere in your project:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;---&lt;/span&gt;
&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt;
&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="o"&gt;--------&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Playground&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Props&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;docz&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./Button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Props&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="err"&gt;##&lt;/span&gt; &lt;span class="nx"&gt;Basic&lt;/span&gt; &lt;span class="nx"&gt;usage&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Playground&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Click&lt;/span&gt; &lt;span class="nx"&gt;me&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;No&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;click&lt;/span&gt; &lt;span class="nx"&gt;me&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Playground&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;And a Button component, Button.jsx:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;prop-types&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="nx"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;propTypes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="cm"&gt;/**
   * This is a description for this prop.
   * Button type.
   */&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;oneOf&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;reset&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaultProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Finally, run:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;docz&lt;/span&gt; &lt;span class="nx"&gt;dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will start a local development server and open your documentation site in the browser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QKZIZ1x0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cfwmjg1dnxo5700pf0x5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QKZIZ1x0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cfwmjg1dnxo5700pf0x5.png" alt="Screenshot (336)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also follow &lt;a href="https://github.com/doczjs/docz/tree/main/examples/create-react-app"&gt;an alternate method&lt;/a&gt; to start working with Docz by using create-docz-app. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Managing documentation is not an easy task. But a few communities of developers have made it with products like Docz. Docz’s open source nature makes it affordable, easy to use and create documentation within a heap of seconds. &lt;/p&gt;

&lt;p&gt;So, are you excited to use Docz in your next project? &lt;br&gt;
Do let me know in the comment section below. I hope you enjoyed reading.&lt;/p&gt;

&lt;p&gt;Do check my article which is officially published here👉   &lt;a href="https://aviyel.com/post/894/how-to-manage-your-software-documentation-with-docz"&gt;Aviyel&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to support😀&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/suchitra"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dWYI_Yhx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cawwn08bx5rh2s9bax2x.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>beginners</category>
      <category>management</category>
      <category>typescript</category>
    </item>
    <item>
      <title>How to Add Whatsapp Button in Blogger Using HTML &amp; CSS</title>
      <author>Blog triggers</author>
      <pubDate>Fri, 24 Sep 2021 06:05:11 +0000</pubDate>
      <link>https://dev.to/blogtriggers/how-to-add-telegram-button-in-blogger-using-html-css-nk6</link>
      <guid>https://dev.to/blogtriggers/how-to-add-telegram-button-in-blogger-using-html-css-nk6</guid>
      <description>&lt;p&gt;Step1) First of all, Go to the Blogger.com&lt;/p&gt;

&lt;p&gt;Step2) Now In Blogger go to the Layout Section and there you have&lt;br&gt;
to add Widget and add HTML/Javascript Widget.&lt;/p&gt;

&lt;p&gt;Step3) Now Download This HTML &amp;amp; CSS Code of Whatsapp share button in blogger in these website&lt;br&gt;
&lt;a href="https://www.blogtriggers.com/2021/08/whatsapp-share-button-in-blogger.html"&gt;Whatsapp Download button in blogger Button Code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Step4) Now Add Code in HTML/JAVASCRIPT widget.&lt;/p&gt;

&lt;p&gt;Step5) Click on Save and Preview your website.&lt;/p&gt;

</description>
      <category>telegram</category>
      <category>blogger</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>Unit testing Stdout in Go</title>
      <author>Shannon</author>
      <pubDate>Fri, 24 Sep 2021 05:40:16 +0000</pubDate>
      <link>https://dev.to/lucassha/unit-testing-stdout-in-go-1jd</link>
      <guid>https://dev.to/lucassha/unit-testing-stdout-in-go-1jd</guid>
      <description>&lt;p&gt;Figuring out how to unit test functions that print to the terminal can be something of a daunting task. Thankfully, it's actually pretty simple due to the magic of &lt;a href="https://gobyexample.com/interfaces"&gt;interfaces&lt;/a&gt; in Go! &lt;/p&gt;




&lt;p&gt;This post is going to be short and sweet on how to test output by capturing it in a &lt;code&gt;bytes.Buffer&lt;/code&gt;. Below, I have a function that accepts a string, prints out a statement, and then returns.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;SayHello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Writer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Hi, my name is %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The critical component of this function is the &lt;code&gt;io.Writer&lt;/code&gt; interface variable being passed in. Because it is an interface, this function will accept any data type that implements the method &lt;code&gt;Write(b []byte) (n int, err error)&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;This interface is implemented in the &lt;code&gt;io&lt;/code&gt; package and the entire code can be seen &lt;a href="https://pkg.go.dev/io#Writer"&gt;here&lt;/a&gt;. Most importantly, here is the code below for the interface:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;Writer&lt;/span&gt; &lt;span class="k"&gt;interface&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So how do we print out this function to the terminal? We pass in &lt;code&gt;os.Stdout&lt;/code&gt;, which has its own Write method! This can be seen &lt;a href="https://pkg.go.dev/os#File.Write"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To print this out to our terminal, just add the following in the &lt;code&gt;main()&lt;/code&gt; function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;SayHello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Stdout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Shannon"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Now, we can move onto unit testing this specific function, which just outputs a name and greeting. In order to test it, we need to capture its output and then turn it into a string from a slice of bytes. To do this, we'll utilize the &lt;code&gt;bytes.Buffer&lt;/code&gt; struct, which has a Write method to satisfy the Writer interface.&lt;/p&gt;

&lt;p&gt;Here is the full test code in order to compare these:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;TestSayHello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;tt&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;
        &lt;span class="n"&gt;name&lt;/span&gt;        &lt;span class="kt"&gt;string&lt;/span&gt;
        &lt;span class="n"&gt;expect&lt;/span&gt;      &lt;span class="kt"&gt;string&lt;/span&gt;
    &lt;span class="p"&gt;}{&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"Empty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Hi, my name is &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"Name1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Shannon"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Hi, my name is Shannon&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"Name2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Shug"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Hi, my name is Shug&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tc&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;tt&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Buffer&lt;/span&gt;
            &lt;span class="n"&gt;SayHello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;tc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expect&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Errorf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"got %s but expected %s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;tc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll notice that we are declaring a Buffer here: &lt;code&gt;var output bytes.Buffer&lt;/code&gt; and then passing that buffer into the SayHello function. However, we are actually passing in the address of the buffer. This is due to the Buffer method for Write being a pointer receiver, which can be seen &lt;a href="https://pkg.go.dev/bytes#Buffer.Write"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And that's it! Run &lt;code&gt;go test -v&lt;/code&gt; to see that all tests pass, and you have successfully captured the output of a command in order to unit test the output without actually returning the string value. &lt;/p&gt;

</description>
      <category>go</category>
      <category>devops</category>
      <category>sre</category>
    </item>
    <item>
      <title>How To Install Ubuntu 20.04 LTS (For Beginners)</title>
      <author>Devtonight</author>
      <pubDate>Fri, 24 Sep 2021 04:50:29 +0000</pubDate>
      <link>https://dev.to/devtonight/how-to-install-ubuntu-20-04-lts-for-beginners-2a9e</link>
      <guid>https://dev.to/devtonight/how-to-install-ubuntu-20-04-lts-for-beginners-2a9e</guid>
      <description>&lt;p&gt;The installation process of Ubuntu 20.04 LTS (Focal Fossa) can be a bit challenging, especially for people who are not much familiar with Linux environments. Among worst cases, it can cause data deletions, file corruptions or even complete system boot failures. This guide is focused on beginners and previous Ubuntu or any other Linux experience is not necessary. After following this guide, you will be able to install Ubuntu 20.04 LTS on your desktop computer or laptop by yourself.&lt;/p&gt;

&lt;p&gt;As mentioned earlier, this process can be critical. So make sure to keep following things in your mind.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This guide is mainly focused on fresh Ubuntu 20.04 LTS installations. That means your computer should not have any OS (Operating System) or otherwise if exist it can be unusable anymore.&lt;/li&gt;
&lt;li&gt;All partitions, files, folders, pictures, songs, movies or anything else on the hard disk will be permanently deleted during the installation process.&lt;/li&gt;
&lt;li&gt;Before proceeding, backup all the valuable files into an external data storage media such as hard disk, USB disk or optical disks like DVDs and keep them in a separate, safe place.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;TLDR:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can directly proceed to the Installation section of this guide if you already know the basics, like how to download and burn the image into a USB disk.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-new-in-ubuntu-2004-lts"&gt;
  &lt;/a&gt;
  What Is New In Ubuntu 20.04 LTS?
&lt;/h2&gt;

&lt;p&gt;Ubuntu 20.04 LTS released in April of 2020 and free security and maintenance updates will be provided for five years (until April 2025). Honestly, it doesn’t bring any groundbreaking, revolutionary or controversial changes to the table when comparing with the previous release. But that doesn’t mean you should not try it. There are some notable improvements.&lt;/p&gt;

&lt;p&gt;Usually, the Canonical team doesn’t include all the latest features with their LTS (Long Term Support) releases. Instead, they try to improve the stability of the system by carefully selecting the stable packages.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Linux kernel 5.4&lt;/li&gt;
&lt;li&gt;Gnome 3.36 (release notes)&lt;/li&gt;
&lt;li&gt;Python 3.8.5&lt;/li&gt;
&lt;li&gt;ZFS support&lt;/li&gt;
&lt;li&gt;Improved Thunderbolt support&lt;/li&gt;
&lt;li&gt;Light, dark and standard theme variants&lt;/li&gt;
&lt;li&gt;Remarkable startup performance improvements&lt;/li&gt;
&lt;li&gt;“Do Not Disturb” mode&lt;/li&gt;
&lt;li&gt;Ability to disable the dock&lt;/li&gt;
&lt;li&gt;X11 fractional scaling toggle&lt;/li&gt;
&lt;li&gt;Amazon app removed from the dock&lt;/li&gt;
&lt;li&gt;Software Center installs Snap packages&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can find more information about this release in their &lt;a href="https://ubuntu.com/blog/whats-new-in-ubuntu-desktop-20-04-lts"&gt;blog post&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ubuntu-2004-lts-system-requirements"&gt;
  &lt;/a&gt;
  Ubuntu 20.04 LTS System Requirements
&lt;/h2&gt;

&lt;p&gt;Canonical recommends the following requirements to install Ubuntu 20.04 LTS.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2 GHz dual-core processor&lt;/li&gt;
&lt;li&gt;4 GB RAM&lt;/li&gt;
&lt;li&gt;25 GB of free space&lt;/li&gt;
&lt;li&gt;Internet access&lt;/li&gt;
&lt;li&gt;A DVD drive or a USB port for the installation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However, according to our tests, we noticed it’s possible to install and run it on lower hardware as well. Even though, practically, there’s nothing much we can do only with the OS and its stock apps. We need to install a lot of other applications according to our requirements. So it’s always better to use a good processor, at least 8 GB RAM and more than 40 GB of free hard drive space.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#download-ubuntu-2004-installation-iso-image"&gt;
  &lt;/a&gt;
  Download Ubuntu 20.04 Installation ISO Image
&lt;/h2&gt;

&lt;p&gt;Canonical provides the installation ISO file in two methods and they are direct download link and torrent download. The main difference between them is, you can download the direct download link without installing additional tools. But if you are using torrent, first, you need to download and install a torrent client. Then you need to download the torrent file which contains the necessary information to download the actual ISO file from seeders around the world.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#direct-download"&gt;
  &lt;/a&gt;
  Direct Download
&lt;/h3&gt;

&lt;p&gt;Go to the official &lt;a href="https://ubuntu.com/download/desktop"&gt;Ubuntu 20.04 LTS download&lt;/a&gt; page and click the download button. It will start to download the ISO file. Make sure to use a broadband or un-metered Internet connection as you need to download approximately 2.7 GB of data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#torrent-download"&gt;
  &lt;/a&gt;
  Torrent Download
&lt;/h3&gt;

&lt;p&gt;Go to the &lt;a href="https://ubuntu.com/download/alternative-downloads"&gt;alternative download&lt;/a&gt; page and scroll down until you see “BitTorrent”. Click the “Ubuntu 20.04 Desktop (64-bit)” link under “Ubuntu 20.04 LTS”.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#iso-image-verification-optional"&gt;
  &lt;/a&gt;
  ISO Image Verification (Optional)
&lt;/h3&gt;

&lt;p&gt;When you download a file over the Internet, it can be corrupted due to many reasons such as Internet connection problems, hardware or even software faults. If we used such a corrupted ISO file, it could be the root cause of a problem in the future.&lt;/p&gt;

&lt;p&gt;So to overcome this problem, we use a thing called checksum verification. The checksum is a mathematical algorithm that generates a random yet super unique text from the given information. There are many checksum algorithms such as md5 (Message Digest 5) and SHA256. For example, if we generated SHA256 checksum hashes for both words “Earth” and “earth”, it would be something similar to this,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Earth = b7735697682c8b552abd34b0c44249114210c3a89d3b97a7341ef4640296ae95
earth = 7e8c5f378b4addbaebc70897c4478cca06009e3e360208ebd073dbee4b3774e7
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A checksum is like a fingerprint of a person, it is unique only for one person. Likewise, once you generate a checksum against a particular file, you can use that checksum to check whether that file is changed or not. To verify, again you need to generate a checksum. If the file is 100% identical, we should get the same checksum for both scenarios. If the file has been changed at least by 1 bit, you will get a different checksum. Likewise, we need to generate the SHA256 checksum against the ISO file we downloaded. Many tools exist to generate checksum hashes. You can find a suitable tool in the &lt;a href="https://ubuntu.com/tutorials/how-to-verify-ubuntu"&gt;official checksum verification guide&lt;/a&gt; according to your platform. Ultimately, if we get the same checksum hash mentioned in the &lt;a href="https://releases.ubuntu.com/20.04/"&gt;“SHA256SUMS” file&lt;/a&gt;, we can accept that the ISO file is identical.&lt;/p&gt;

&lt;p&gt;By the way, there’s no need to verify checksum if you have downloaded the ISO file using a torrent file as the torrent client automatically do it by itself. But still, you can do the verification and there is nothing bad about it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation-media-preparation"&gt;
  &lt;/a&gt;
  Installation Media Preparation
&lt;/h2&gt;

&lt;p&gt;First, you need to prepare the installation media. It can be either a burned DVD or USB pen drive. If you are going to burn a DVD, the process is quite simple. All you need to do is use a CD/DVD writing software which usually comes with CD/DVD writer. Also, you can use free tools like &lt;a href="https://www.imgburn.com/index.php?act=download"&gt;ImgBurn&lt;/a&gt; or a commercial tool like Nero Burning ROM as well. Whatever you used, make sure to burn the DVD using the downloaded ISO image. Never select a data disk or similar option, it will never boot.&lt;/p&gt;

&lt;p&gt;If you are using a USB pen drive, make sure it is at least a 4 GB drive. Download and install &lt;a href="https://rufus.ie/en/"&gt;Rufus&lt;/a&gt;, an ISO to USB image writer app.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open Rufus and select your USB pen drive under the device list.&lt;/li&gt;
&lt;li&gt;Click the “SELECT” button and select the Ubuntu 20.04 LTS iso image file.&lt;/li&gt;
&lt;li&gt;Select partition scheme as “MBR”.&lt;/li&gt;
&lt;li&gt;Select target system as “BIOS or UEFI”&lt;/li&gt;
&lt;li&gt;Leave volume label as it is.&lt;/li&gt;
&lt;li&gt;Leave file system and cluster size as they are.&lt;/li&gt;
&lt;li&gt;Make sure everything is correct and click start.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If it displayed a window called “ISOHybrid image detected”, first select the recommended method. If you couldn’t boot using the USB pen drive, try again with the other method (DD image mode).&lt;/p&gt;

&lt;p&gt;Rufus will take few minutes to finish it and you will be able to see the current progress as well. Once it is finished you can restart the system.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bios-basic-inputoutput-system-setup"&gt;
  &lt;/a&gt;
  BIOS (Basic Input/Output System) Setup
&lt;/h3&gt;

&lt;p&gt;Usually, computers can be booted from various devices such as hard drives, CD/DVD drives, USB pen drives, floppy drives and networks. BIOS maintains this list and we can change their position or the priority or even we can disable/ignore certain devices from the boot devices list. When booting, if BIOS couldn’t find the required information in its first device, then it checks for the next available device in the list.&lt;/p&gt;

&lt;p&gt;So we must enter the BIOS setup and change its boot priority to take our USB pen drive as its first option. There is no specific key to enter to the BIOS setup. Some systems display the exact key you need to press while booting. But every system does not display that message. Under that kind of situation, you can simply refer to your laptop/motherboard user manual for the key. Most of the time it should be one of the following keys F1, F2, F10, Delete, Esc, Ctrl + Alt + Esc or Ctrl + Alt + Delete. However, it is totally up to the system.&lt;/p&gt;

&lt;p&gt;Once you entered to the BIOS setup, the boot device list should be under a page something like “Boot”. Set USB drive as its first option. It is difficult to describe more than that as different BIOS uses their own interfaces and menus. So refer to the laptop/motherboard manual for related instructions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;Once the system starts to boot from the Ubuntu 20.04 LTS DVD/USB drive you will see the following screen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pu_GUsje--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/silbvhao4qaac8ix2p9y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pu_GUsje--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/silbvhao4qaac8ix2p9y.png" alt="Ubuntu 20.04 Installation Boot Options Screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you select the “Try Ubuntu without installing” option, it will start Ubuntu as a live OS. It is the safest and secure method to check the features of the OS. Because it doesn’t write any file into your hard drive, instead it loads the entire OS from the system memory (RAM). Under this method, still, you will be able to test the OS, browse files and even install new apps and do experiments with them. The next option is “Install Ubuntu”, which will directly initiate the installation process of the OS.&lt;/p&gt;

&lt;p&gt;You can go with whatever you want, but it is recommended to use the first option as it provides an extra opportunity to backup any important file that you may have missed. For this guide, the first option will be selected.&lt;/p&gt;

&lt;p&gt;Roughly, it will take one or two minutes to land on the Ubuntu 20.04 LTS desktop. Now you can go here and there and check the system. Once you are ready, open the “Install Ubuntu 20.04 LTS” icon on the desktop to start the installation wizard.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zffHpHlU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oezhz44fail89tje6thy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zffHpHlU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oezhz44fail89tje6thy.png" alt="Ubuntu 20.04 Live CD Welcome Desktop Screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First, you need to select the preferred language for your OS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vdBhIlkC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0plre88vur68hcgupraf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vdBhIlkC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0plre88vur68hcgupraf.png" alt="Ubuntu 20.04 Language Selection Window"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select the keyboard layout.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4dC6YLd6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wynru78ysk9e15o4bytn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4dC6YLd6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wynru78ysk9e15o4bytn.png" alt="Ubuntu 20.04 Keyboard Layout Selection Window"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can select whether you need additional applications like LibreOffice suite or not. No matter the normal or minimal installation you selected, you can install/uninstall any application later.&lt;/p&gt;

&lt;p&gt;Both options, “Download updates while installing Ubuntu” and “Install third-party software for graphics and Wi-Fi hardware and additional media formats” are optional and if you select them, you will need a stable Internet connection to download them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nOMyX1S2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dwi88nt6k74ud0xp3fl6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nOMyX1S2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dwi88nt6k74ud0xp3fl6.png" alt="Ubuntu 20.04 Default Apps Selection Window"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select the “Erase disk and install Ubuntu” option. It will wipe the entire hard drive and create necessary disk partitions accordingly.&lt;/p&gt;

&lt;p&gt;You can also select the “Something else” option. But you will have to create partitions by yourself, manually. Since this guide is mainly focused on beginners and partitioning is quite out of the scope of this guide. So it will be explained in a separate post.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w8eeqe2r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sdxnr16vskdz7qdaxikz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w8eeqe2r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sdxnr16vskdz7qdaxikz.png" alt="Ubuntu 20.04 Partition Type Selection Window"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Additionally, this is optional but if you worry about the privacy of your files, Ubuntu 20.04 LTS let you encrypt the entire hard drive. Click the “Advanced features” button and select “Use LVM with the new Ubuntu installation”. Then check “Encrypt the new Ubuntu installation for security”. You will have to provide a secure password for that, then every time it will be asked when the OS boot. Keep in mind, if you forgot it, you will never be able to recover any file on the hard disk.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R-1295qe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/433tqlgl7ssmdxo1fg8z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R-1295qe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/433tqlgl7ssmdxo1fg8z.png" alt="Ubuntu 20.04 Partition Advanced Features Window"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, you will have to confirm the partitions going to be formatted.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RIPeskKE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/56ox2pnyt45ity2dko5b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RIPeskKE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/56ox2pnyt45ity2dko5b.png" alt="Ubuntu 20.04 Partition Confirmation Window"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select your location.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IR--ckRX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8qh49g8v90zm469f40v3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IR--ckRX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8qh49g8v90zm469f40v3.png" alt="Ubuntu 20.04 Location Selection Window"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, you need to provide your user account details. If you select the “Log in automatically” option, it will not ask for the password when you log in. However, it is recommended to use “Require my password to log in” as a convention but it is totally up to you to decide.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kaV-1hdI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cu2gtckqudbfdq4ocu97.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kaV-1hdI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cu2gtckqudbfdq4ocu97.png" alt="Ubuntu 20.04 User Account Creation Window"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The installation process will start immediately and it will take few minutes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9Ah_eTlT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8b4qnjehnlufcxvrhtf3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Ah_eTlT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8b4qnjehnlufcxvrhtf3.png" alt="Ubuntu 20.04 Installation Progress Window"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the installation is completed, you will see the following alert. You can either continue the live OS or otherwise simply restart the OS to the newly installed OS in your hard disk.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d-EI2NFQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/73jk03y0qv5umlf2jezc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d-EI2NFQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/73jk03y0qv5umlf2jezc.png" alt="Ubuntu 20.04 Installation Complete Greeting"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you see this, safely remove the DVD/USB disk and press the [Enter] key.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--09RhuBRH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ckzg4kd3upqal34fy00q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--09RhuBRH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ckzg4kd3upqal34fy00q.png" alt="Ubuntu 20.04 Installation Media Remove Screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Again, you will see the following screen for few seconds.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qm7r6xC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qp2zuml915ri9zabmnuv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qm7r6xC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qp2zuml915ri9zabmnuv.png" alt="Ubuntu 20.04 Boot Screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will be able to see the user account that you created during the installation. Click it and type the password.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1q4qIi6K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jsyit7qmlan69y3q4tp0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1q4qIi6K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jsyit7qmlan69y3q4tp0.png" alt="Ubuntu 20.04 Login Users List Screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By default, the password will be masked with dots. But if you find it difficult, you can click the eye icon to reveal the password.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e94bvsXx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x11z7j500rwlkyio0m18.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e94bvsXx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x11z7j500rwlkyio0m18.png" alt="Ubuntu 20.04 User Login Password Screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can connect your accounts, but for now, just skip it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kW1ihmea--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nw6nhpt3dfbe6znseebw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kW1ihmea--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nw6nhpt3dfbe6znseebw.png" alt="Ubuntu 20.04 Online Accounts Setup Window"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Livepatch is a service provided by Canonical which let you update your OS without restarting. Click next as we can update the OS without it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jLGfjsVO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5m17x4q977trofr9a09m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jLGfjsVO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5m17x4q977trofr9a09m.png" alt="Ubuntu 20.04 Livepatch Setup Window"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you need you can provide some information about your system to Ubuntu developers. They will use them to improve their OS. You can also see what kind of information will be sent by clicking the “Show the First Report” button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WXRRW3oT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i8bm6nfu8sj8wnsg1kp7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WXRRW3oT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i8bm6nfu8sj8wnsg1kp7.png" alt="Ubuntu 20.04 Help Improve Ubuntu Window"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Leave “Location Services” disabled.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3xabfvPf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7lpphjlxi2gdas2y67k6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3xabfvPf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7lpphjlxi2gdas2y67k6.png" alt="Ubuntu 20.04 Privacy Window"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click “Done”.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CNK8-E8P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nsv58vs6s6d0qhzode2l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CNK8-E8P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nsv58vs6s6d0qhzode2l.png" alt="Ubuntu 20.04 Software Installation Greeting Window"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Congratulations! You have successfully installed Ubuntu 20.04 LTS and this is your desktop.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lfJh71cV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hqmut8tit71nih8mhrfx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lfJh71cV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hqmut8tit71nih8mhrfx.png" alt="Ubuntu 20.04 Desktop"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, you can shut down your system by opening the system menu in the upper right corner of the screen. Click “Power Off”.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kqb-1t_k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9z469985bq54vrau77xi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kqb-1t_k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9z469985bq54vrau77xi.png" alt="Ubuntu 20.04 System Menu"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click “Power Off”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u9gJlmto--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/luyhu7lb8m7ki8j1vwzy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u9gJlmto--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/luyhu7lb8m7ki8j1vwzy.png" alt="Ubuntu 20.04 Shutdown Dialog"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this guide mainly we discussed the newly introduced features, installation media preparation and the step by step installation instructions for Ubuntu 20.04 LTS. Hard disk partitioning was not explained in this guide and will be thoroughly explained in a separate post. Let us know your thoughts on this guide in the comment section.&lt;/p&gt;

&lt;p&gt;Also, feel free to visit &lt;a href="https://devtonight.com"&gt;https://devtonight.com&lt;/a&gt; for more related content.&lt;/p&gt;

</description>
      <category>ubuntu</category>
      <category>linux</category>
      <category>installation</category>
      <category>guide</category>
    </item>
    <item>
      <title>UI Dev Newsletter #75</title>
      <author>Silvestar Bistrović</author>
      <pubDate>Fri, 24 Sep 2021 04:38:51 +0000</pubDate>
      <link>https://dev.to/starbist/ui-dev-newsletter-75-584k</link>
      <guid>https://dev.to/starbist/ui-dev-newsletter-75-584k</guid>
      <description>&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2XG3H5J"&gt;The Future of CSS: Cascade Layers (CSS @layer)&lt;/a&gt;&lt;br&gt;
Bramus Van Damme explains Cascade Layers, how we can use them, and what benefits they bring.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/39mfdFU"&gt;Designing Beautiful Shadows in CSS&lt;/a&gt;&lt;br&gt;
Josh Comeau describes all you need to know about box-shadows, from theory to practical examples.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3EysBF5"&gt;Autocapitalization&lt;/a&gt;&lt;br&gt;
Manuel Matuzović explains how to control the virtual keyboard's capitalization of words and characters by default.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3hL0etq"&gt;Grainy Gradients&lt;/a&gt;&lt;br&gt;
Jimmy Chion shows how to generate colorful noise to add texture to a gradient with only a tiny amount of CSS and SVG.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3zizEOo"&gt;Web Vitals patterns&lt;/a&gt;&lt;br&gt;
Chrome Developers share a collection that includes patterns that are often tricky to implement without hurting your Core Web Vitals scores.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2XCUGuc"&gt;Master Frontend Development By Cloning These Websites&lt;/a&gt;&lt;br&gt;
To become a better developer, Chris Hansen lists which sites you should try to clone and incorporate functionality, like modals and dropdowns.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3AvKS3G"&gt;W3C Design System&lt;/a&gt;&lt;br&gt;
W3C team shares a design system that shows how the front-end assets (CSS and JavaScript) are organized and compiled for their site.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3EysBoz"&gt;Smooth Shadow&lt;/a&gt;&lt;br&gt;
Philipp Brumm shares a helpful little tool to make a smooth shadow.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#popular-on-twitter"&gt;
  &lt;/a&gt;
  Popular on Twitter
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3klA16r"&gt;Play your favorite tunes with Spotify in your terminal.&lt;/a&gt;&lt;br&gt;
GitHub shares a Spotify TUI — Spotify for the terminal written in Rust.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Happy coding!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://buttondown.email/starbist"&gt;Subscribe to the newsletter here!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Learning Python- Intermediate course: Day 31, Coordinate positions </title>
      <author>Aatmaj</author>
      <pubDate>Fri, 24 Sep 2021 04:31:17 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-day-31-coordinate-positions-4eah</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-day-31-coordinate-positions-4eah</guid>
      <description>&lt;h2&gt;
  &lt;a href="#today-we-will-cover-the-coordinate-layout-in-tkinter"&gt;
  &lt;/a&gt;
  Today we will cover the coordinate layout in Tkinter
&lt;/h2&gt;




&lt;p&gt;Today we will make a program which will take in inputs of principle and discount and calculate the total price.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k4hTmdz_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fnj495lupa6i400h39fa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k4hTmdz_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fnj495lupa6i400h39fa.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here are the program specs &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;One label for the text principle&lt;/li&gt;
&lt;li&gt;One label for the text discount&lt;/li&gt;
&lt;li&gt;One label for the total value&lt;/li&gt;
&lt;li&gt;One button show.&lt;/li&gt;
&lt;li&gt;One slider for the discount values&lt;/li&gt;
&lt;li&gt;One spinbox for the principle amount&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that we have got all the specs, let's start building the program-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"300x200"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;Lbl1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Principle"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Lbl2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Discount"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Lbl3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Total. "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"20px"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;spinbox&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Spinbox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;from_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;from_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tickinterval&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;orient&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"horizontal"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;display&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spinbox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spinbox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
    &lt;span class="n"&gt;Lbl3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"$"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Calculate"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;spinbox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;Lbl1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;Lbl2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;Lbl3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dsdbz8DZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rehq8f29llammp8dlg39.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dsdbz8DZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rehq8f29llammp8dlg39.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JagsiNuY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i7s6d3swtck4fgbdeuv0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JagsiNuY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i7s6d3swtck4fgbdeuv0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The program works all right, but that's not how we want to display the widgets. We need to adjust the look and feel. We want the first two labels to be adjacent towards the spinbox and slider widgets. For that, we use the coordinate layout. The pack layout is not sufficient as it packs all the widgets into just a centre line. Hence, we will place them coordinately.  &lt;/p&gt;

&lt;p&gt;We can set the coordinates of the widgets using the &lt;code&gt;place&lt;/code&gt; method. Example &lt;code&gt;widget.place(x=30,y=20)&lt;/code&gt;&lt;br&gt;
Here is the final program, now with the power of place layout.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"300x200"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;Lbl1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Principle"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Lbl2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Discount"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Lbl3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Total. "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"20px"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;spinbox&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Spinbox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;from_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;from_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tickinterval&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;orient&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"horizontal"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;display&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spinbox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spinbox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
    &lt;span class="n"&gt;Lbl3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"$"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Calculate"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;spinbox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;place&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Lbl1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;place&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;place&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Lbl2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;place&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;place&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;130&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Lbl3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;place&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;170&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uh5QTERi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8rg0b7xsu1eywqtt7gvd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uh5QTERi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8rg0b7xsu1eywqtt7gvd.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o2hjpnaq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/65e8z6vn5qyqmp4qss02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o2hjpnaq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/65e8z6vn5qyqmp4qss02.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One thing to note is that the layouts remain the same even if the window is resized.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A3psnCgg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t8u03skx2j8b91ru5hal.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A3psnCgg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t8u03skx2j8b91ru5hal.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Karpenter - Scaling Nodes Seamlessly in AWS EKS</title>
      <author>Sivamuthu Kumar</author>
      <pubDate>Fri, 24 Sep 2021 02:49:51 +0000</pubDate>
      <link>https://dev.to/aws-builders/karpenter-scaling-nodes-seamlessly-in-aws-eks-19f</link>
      <guid>https://dev.to/aws-builders/karpenter-scaling-nodes-seamlessly-in-aws-eks-19f</guid>
      <description>&lt;p&gt;Hello everyone !! If you are running your workloads on the AWS EKS cluster, you may explore the rules and limitations of node group scaling to provision the deployments dynamically.  This blog will explore the node lifecycle management solutions AWS Lab's Karpenter, an alternative approach to the frequently used Cluster Autoscaler solution. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#kubernetes-autoscaling"&gt;
  &lt;/a&gt;
  Kubernetes Autoscaling
&lt;/h2&gt;

&lt;p&gt;Autoscaling allows you to dynamically adjust to demand without manual intervention through metrics or events. Without autoscaling, there will be considerable efforts to provision the (scaling up or down) resources. When the running conditions change, and optimal resource utilization and managing the cloud spending is challenging. The cluster is always running at peak capacity to ensure availability or not meeting peak demand as they don't have enough resources.&lt;/p&gt;

&lt;p&gt;When it comes to the Kubernetes Autoscaling, there are two different layers, &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Pod Level Autoscaling (Horizontal - HPA, and Vertical - HPA)&lt;/li&gt;
&lt;li&gt;Node Level Autoscaling&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#pod-level-autoscaling"&gt;
  &lt;/a&gt;
  Pod Level Autoscaling
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Horizontal Pod Autoscaling (Scaling out)&lt;/strong&gt; - dynamically increase or decrease the number of running pods per your application's usage changes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vertical Pod Autoscaling (Scaling up)&lt;/strong&gt; - scale the given deployments vertically within a cluster by reconciling the pods' size ( CPU or memory targets) based on their current usage and the desired target.&lt;/p&gt;

&lt;p&gt;HPA and VPA essentially make sure that all of the services running in your cluster can dynamically handle the demand.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#node-level-autoscaling"&gt;
  &lt;/a&gt;
  Node Level Autoscaling
&lt;/h3&gt;

&lt;p&gt;Node Level autoscaling solves the issue - to scale the nodes in the cluster when the existing nodes are overloaded or pending to be scheduled with newly scaled pods or scale down when the nodes are underutilized.&lt;/p&gt;

&lt;p&gt;There is already an industry-adopted, open-source, and vendor-neutral tool - Cluster Autoscaler that automatically adjusts the cluster size (by adding or removing nodes) based on the presence of pending pods and node utilization metrics. It uses the existing cloud building blocks (Autoscaling Group on AWS) for scaling. The challenges in the cluster autoscaler are the limitations on node groups, and the scaling is tightly bound to the scheduler. &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/kubernetes"&gt;
        kubernetes
      &lt;/a&gt; / &lt;a href="https://github.com/kubernetes/autoscaler"&gt;
        autoscaler
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Autoscaling components for Kubernetes
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#karpenter"&gt;
  &lt;/a&gt;
  Karpenter
&lt;/h2&gt;

&lt;p&gt;Karpenter is a node lifecycle management solution - incubating in AWS Labs, OSS, and vendor-neutral. It observes incoming pods and launches the right instances for the situation. Instance selection decisions are intent-based and driven by the specification of incoming pods, including resource requests and scheduling constraints.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/awslabs"&gt;
        awslabs
      &lt;/a&gt; / &lt;a href="https://github.com/awslabs/karpenter"&gt;
        karpenter
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Kubernetes Node Autoscaling: built for flexibility, performance, and scalability. https://karpenter.sh/
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/3b715b1f3bc15430eb7f7c990b593ff367ece685c7f45fc3afc88e834aa36952/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6177736c6162732f6b617270656e7465722f43492f6d61696e"&gt;&lt;img src="https://camo.githubusercontent.com/3b715b1f3bc15430eb7f7c990b593ff367ece685c7f45fc3afc88e834aa36952/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6177736c6162732f6b617270656e7465722f43492f6d61696e" alt="Build Status"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/b4448a2b1d15fd0418057508cc6ddbbc47736bb1ca82ee8344048964bc9b3889/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6177736c6162732f6b617270656e746572"&gt;&lt;img src="https://camo.githubusercontent.com/b4448a2b1d15fd0418057508cc6ddbbc47736bb1ca82ee8344048964bc9b3889/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6177736c6162732f6b617270656e746572" alt="GitHub stars"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1da8a26e943112488063d133fe2ca22c4cbdbb60d0aa32c37dd73cfab3cb10ae/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f6177736c6162732f6b617270656e746572"&gt;&lt;img src="https://camo.githubusercontent.com/1da8a26e943112488063d133fe2ca22c4cbdbb60d0aa32c37dd73cfab3cb10ae/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f6177736c6162732f6b617270656e746572" alt="GitHub forks"&gt;&lt;/a&gt;
&lt;a href="https://github.com/awslabs/karpenter/blob/main/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/c5b85774d76d1c98c67d4f38b5de1228459ccf9d3cf4503cc55ea779dcf88ecb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d6666363962342e737667" alt="GitHub License"&gt;&lt;/a&gt;
&lt;a href="https://github.com/awslabs/karpenter/issues"&gt;&lt;img src="https://camo.githubusercontent.com/f5054ffcd4245c10d3ec85ef059e07aacf787b560f83ad4aec2236364437d097/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e747269627574696f6e732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c6174" alt="contributions welcome"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/awslabs/karpenterwebsite/static/banner.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aa6jlY9o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/awslabs/karpenterwebsite/static/banner.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;❗Note:&lt;/strong&gt; Karpenter is in active development and should be considered &lt;strong&gt;pre-production&lt;/strong&gt; software. Backwards incompatible API changes are possible in future releases and support is best-effort by the Karpenter community.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Karpenter is a node lifecycle management solution. It observes incoming pods and launches the right instances for the situation. Instance selection decisions are intent based and driven by the specification of incoming pods, including resource requests and scheduling constraints.&lt;/p&gt;
&lt;p&gt;It's responsible for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Launching&lt;/strong&gt; nodes for unschedulable pods&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Replacing&lt;/strong&gt; existing nodes to improve resource utilization&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Terminating&lt;/strong&gt; nodes if outdated or no longer needed&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Draining&lt;/strong&gt; nodes gracefully before preemption&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For most use cases, the entirety of a cluster’s capacity can be managed by a single Karpenter &lt;a href="https://github.com/awslabs/karpenterREADME.md"&gt;Provisioner&lt;/a&gt;. Availability zone, instance type, capacity type, machine image, and scheduling constraints are automatically determined by the controller using a combination of defaults and overrides. Additionally, you can define multiple Provisioners, enabling use cases like…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/awslabs/karpenter"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q4GcPxwU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632450827335/nq0X2fa5G.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q4GcPxwU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632450827335/nq0X2fa5G.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How does it work?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Observes the pod resource requests of unscheduled pods&lt;/li&gt;
&lt;li&gt;Direct provision of Just-in-time capacity of the node. (Groupless Node Autoscaling)&lt;/li&gt;
&lt;li&gt;Terminating nodes if outdated&lt;/li&gt;
&lt;li&gt;Reallocating the pods in nodes for better resource utilization&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Karpenter has two control loops that maximize the availability and efficiency of your cluster.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Allocator - Fast-acting controller ensuring that pods are scheduled as quickly as possible&lt;/li&gt;
&lt;li&gt;Reallocator - Slow-acting controller replaces nodes as pods capacity shifts over time.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h3&gt;

&lt;p&gt;In this section, we will quickly see the node lifecycle scenarios using Karpenter in an AWS EKS cluster.  Create necessary IAM roles for Karpenter autoscaler with the cloud formation template and  Create EKS cluster with the below config file using eksctl. Please refer to the documentation here.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;eksctl.io/v1alpha5&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ClusterConfig&lt;/span&gt;

&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;eks-karpenter-demo&lt;/span&gt;
  &lt;span class="na"&gt;region&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;us-east-1&lt;/span&gt;

&lt;span class="na"&gt;availabilityZones&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;us-east-1a&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;us-east-1b&lt;/span&gt;

&lt;span class="na"&gt;managedNodeGroups&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;eks-karpenter-demo-ng&lt;/span&gt;
    &lt;span class="na"&gt;instanceType&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;t3.medium&lt;/span&gt;
    &lt;span class="na"&gt;minSize&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
    &lt;span class="na"&gt;maxSize&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You need to enable the service account and auth-config map accounts to the Karpenter.  Please refer to the document &lt;a href="https://karpenter.sh/docs/getting-started/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Install the karpenter helm chart.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;helm repo add karpenter https://awslabs.github.io/karpenter/charts
helm repo update
helm upgrade &lt;span class="nt"&gt;--install&lt;/span&gt; karpenter karpenter/karpenter &lt;span class="nt"&gt;--namespace&lt;/span&gt; karpenter &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--create-namespace&lt;/span&gt; &lt;span class="nt"&gt;--set&lt;/span&gt; serviceAccount.create&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="nt"&gt;--version&lt;/span&gt; 0.3.3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#configure-the-karpenter-provisioner"&gt;
  &lt;/a&gt;
  Configure the Karpenter Provisioner
&lt;/h3&gt;

&lt;p&gt;Configure the Karpenter provisioner as below.  Please check the provider spec for more details.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;karpenter.sh/v1alpha3&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Provisioner&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;default&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;cluster&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;eks-karpenter-demo&lt;/span&gt;
    &lt;span class="na"&gt;endpoint&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;CLUSTER_ENDPOINT&amp;gt;&lt;/span&gt;
  &lt;span class="na"&gt;instanceTypes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;t3.medium&lt;/span&gt;    
  &lt;span class="na"&gt;ttlSecondsAfterEmpty&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#deployment"&gt;
  &lt;/a&gt;
  Deployment
&lt;/h3&gt;

&lt;p&gt;Let's do the deployment to check the launching capacity and terminating capacity features.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="s"&gt;kubectl create deployment inflate --image=public.ecr.aws/eks-distro/kubernetes/pause:3.2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#provisioning-nodes"&gt;
  &lt;/a&gt;
  Provisioning Nodes
&lt;/h3&gt;

&lt;p&gt;Scale the deployment and check out the logs in the Karpenter controller.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="s"&gt;kubectl scale deployment inflate --replicas=10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Check the logs of the karpenter controller&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;➜  eks-karpenter-demo git:&lt;span class="o"&gt;(&lt;/span&gt;main&lt;span class="o"&gt;)&lt;/span&gt; kubectl logs &lt;span class="nt"&gt;-f&lt;/span&gt; &lt;span class="nt"&gt;-n&lt;/span&gt; karpenter &lt;span class="si"&gt;$(&lt;/span&gt;kubectl get pods &lt;span class="nt"&gt;-n&lt;/span&gt; karpenter &lt;span class="nt"&gt;-l&lt;/span&gt; &lt;span class="nv"&gt;karpenter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;controller &lt;span class="nt"&gt;-o&lt;/span&gt; name&lt;span class="si"&gt;)&lt;/span&gt;
2021-09-23T04:46:11.280Z        INFO    controller.allocation.provisioner/default       Starting provisioning loop      &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"commit"&lt;/span&gt;: &lt;span class="s2"&gt;"bc99951"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
2021-09-23T04:46:11.280Z        INFO    controller.allocation.provisioner/default       Waiting to batch additional pods        &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"commit"&lt;/span&gt;: &lt;span class="s2"&gt;"bc99951"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
2021-09-23T04:46:12.452Z        INFO    controller.allocation.provisioner/default       Found 9 provisionable pods      &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"commit"&lt;/span&gt;: &lt;span class="s2"&gt;"bc99951"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
2021-09-23T04:46:13.689Z        INFO    controller.allocation.provisioner/default       Computed packing &lt;span class="k"&gt;for &lt;/span&gt;9 pod&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; with instance &lt;span class="nb"&gt;type &lt;/span&gt;option&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;t3.medium]  &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"commit"&lt;/span&gt;: &lt;span class="s2"&gt;"bc99951"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
2021-09-23T04:46:16.228Z        INFO    controller.allocation.provisioner/default       Launched instance: i-0174aa47fe6d1f7b4, &lt;span class="nb"&gt;type&lt;/span&gt;: t3.medium, zone: us-east-1b, &lt;span class="nb"&gt;hostname&lt;/span&gt;: ip-192-168-116-109.ec2.internal    &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"commit"&lt;/span&gt;: &lt;span class="s2"&gt;"bc99951"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
2021-09-23T04:46:16.265Z        INFO    controller.allocation.provisioner/default       Bound 9 pod&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; to node ip-192-168-116-109.ec2.internal  &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"commit"&lt;/span&gt;: &lt;span class="s2"&gt;"bc99951"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
2021-09-23T04:46:16.265Z        INFO    controller.allocation.provisioner/default       Watching &lt;span class="k"&gt;for &lt;/span&gt;pod events &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"commit"&lt;/span&gt;: &lt;span class="s2"&gt;"bc99951"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The allocation controller listens for pods changes. It launched a new instance and bound the provision-able pods into the new nodes by working with kube-scheduler.&lt;/p&gt;

&lt;p&gt;The provisioning time is fast compared to other node management solutions. The other node management solutions usually take 3 min to 6 min for the node to be available.  After deploying the pods, the instances are immediately created and binding. The provisioner decides to launch a new instance within a second, and the node joins the cluster for under 60 seconds. Within 60 seconds, the nodes are available to cluster for running pods.&lt;/p&gt;

&lt;p&gt;You can configure the instance types, capacity type, os, architecture, and other provisioner spec fields.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#terminating-nodes"&gt;
  &lt;/a&gt;
  Terminating Nodes
&lt;/h3&gt;

&lt;p&gt;Now, delete the deployment &lt;code&gt;inflate&lt;/code&gt;. After 30 seconds (&lt;strong&gt;ttlSecondsAfterEmpty - Termination grace period&lt;/strong&gt;), Karpenter should terminate the empty nodes - cordon &amp;amp; drain by listening to the rebalance and termination events.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;2021-09-23T04:46:18.953Z        INFO    controller.allocation.provisioner/default       Watching &lt;span class="k"&gt;for &lt;/span&gt;pod events &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"commit"&lt;/span&gt;: &lt;span class="s2"&gt;"bc99951"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
2021-09-23T04:49:05.805Z        INFO    controller.Node Added TTL to empty node ip-192-168-116-109.ec2.internal &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"commit"&lt;/span&gt;: &lt;span class="s2"&gt;"bc99951"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
2021-09-23T04:49:35.823Z        INFO    controller.Node Triggering termination after 30s &lt;span class="k"&gt;for &lt;/span&gt;empty node ip-192-168-116-109.ec2.internal &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"commit"&lt;/span&gt;: &lt;span class="s2"&gt;"bc99951"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
2021-09-23T04:49:35.849Z        INFO    controller.Termination  Cordoned node ip-192-168-116-109.ec2.internal   &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"commit"&lt;/span&gt;: &lt;span class="s2"&gt;"bc99951"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
2021-09-23T04:49:36.521Z        INFO    controller.Termination  Deleted node ip-192-168-116-109.ec2.internal    &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"commit"&lt;/span&gt;: &lt;span class="s2"&gt;"bc99951"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps
&lt;/h2&gt;

&lt;p&gt;Autoscaling nodes are always challenging. Karpenter addresses key areas of challenges by eliminating Node Group and directly provision nodes. Karpenter is easy to configure, high-performance portable solution, and vendor-agnostic. It scales seamlessly working alongside native kube-scheduler and efficiently responds to dynamic resource requests. &lt;/p&gt;

&lt;p&gt;Check out the &lt;a href="https://github.com/awslabs/karpenter/blob/main/ROADMAP.md"&gt;AWS Labs Karpenter Roadmap&lt;/a&gt;. It's still in beta. In the year 2021, Karpenter is going to focus on covering the majority of known use cases and plan to rigorously test it for scale and performance. &lt;/p&gt;

&lt;p&gt;I'm Siva - working as Sr. Software Architect at &lt;a href="https://www.ceiamerica.com"&gt;Computer Enterprises Inc&lt;/a&gt; from Orlando. I'm an AWS Community builder, Auth0 Ambassador and I am going to write a lot about Cloud, Containers, IoT, and Devops. If you are interested in any of that, make sure to follow me if you haven’t already. Please follow me &lt;a href="https://www.twitter.com/ksivamuthu"&gt;@ksivamuthu&lt;/a&gt; Twitter or check out my blogs at &lt;a href="https://blog.sivamuthukumar.com"&gt;https://blog.sivamuthukumar.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>kubernetes</category>
      <category>containers</category>
      <category>community</category>
    </item>
    <item>
      <title>Recommend an excellent HTML5 video player framework - MuiPlayer</title>
      <author>Leisbanon</author>
      <pubDate>Fri, 24 Sep 2021 02:39:01 +0000</pubDate>
      <link>https://dev.to/leisbanon/recommend-an-excellent-html5-video-player-framework-muiplayer-3gk8</link>
      <guid>https://dev.to/leisbanon/recommend-an-excellent-html5-video-player-framework-muiplayer-3gk8</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a3qP0slc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f1gkbzufe463gqwj8xkv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a3qP0slc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f1gkbzufe463gqwj8xkv.png" alt="Desktop"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IXhpw1Rv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tvz7whx9idi0ew2or025.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IXhpw1Rv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tvz7whx9idi0ew2or025.png" alt="Mobile"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://muiplayer.js.org/"&gt;Docs&lt;/a&gt; | &lt;a href="https://github.com/muiplayer/hello-muiplayer/"&gt;Github&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;MuiPlayer is an HTML5 video playback plug-in, which is configured with exquisite and operable playback controls by default, involving common playback scenarios, such as full-screen playback, playback fast forward, loop playback, volume adjustment, video decoding and other functions.&lt;/p&gt;

&lt;p&gt;Support mp4, m3u8, flv and other media formats to play, solve most compatibility problems, and adapt to play on PCs and mobile phones.&lt;/p&gt;

&lt;p&gt;MuiPlayer has a wealth of parameters to customize the player instance, and the video playback of the customized scene can be completed through easy configuration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;p&gt;MuiPlayer helped us solve some common problems in daily H5 Video application development:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The ui of different browser platforms cannot be unified&lt;/li&gt;
&lt;li&gt;Conflicts between ui extensions and state processing are prone to&lt;/li&gt;
&lt;li&gt;In different environments (android, ios, pc), h5 video api may trigger events at different times&lt;/li&gt;
&lt;li&gt;There are various compatibility issues with media formats, muiplayer handles most of the compatibility issues when playing in different environments&lt;/li&gt;
&lt;li&gt;Repeated stepping on some pits in the process of developing h5 video, we provide a complete solution, so that developers can avoid some detours&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>video</category>
      <category>html</category>
      <category>player</category>
      <category>muiplayer</category>
    </item>
    <item>
      <title>First experience with Pull Request</title>
      <author>Thanh Van</author>
      <pubDate>Fri, 24 Sep 2021 02:35:52 +0000</pubDate>
      <link>https://dev.to/tcvan0707/first-experience-with-pull-request-p3o</link>
      <guid>https://dev.to/tcvan0707/first-experience-with-pull-request-p3o</guid>
      <description>&lt;p&gt;This is my third week get along with open source, and I realize that there are so much fun if we are not working alone. At first, I thought it was really hard to work and develop on someone's program until I give it a shot. Let me walk you through what I have done for this week.&lt;/p&gt;

&lt;p&gt;This is actually my first time working with &lt;em&gt;Pull Request&lt;/em&gt;, and once again I choose &lt;a href="https://github.com/kiennguyenchi"&gt;Kien Nguyen&lt;/a&gt; as my partner for this lab. Based on the previous lab, I have noticed how he writes his program, as well as being familiar with the structure of Kien's program.I also check his &lt;a href="https://github.com/kiennguyenchi/potato-generator"&gt;repo&lt;/a&gt; to see if he would make any changes in his code. And this time, I would love to add &lt;strong&gt;Markdown Support Feature&lt;/strong&gt; in his program. More specifically, I will make some adjustments to process &lt;strong&gt;.md&lt;/strong&gt; file and implement Markdown syntax for &lt;strong&gt;Heading 1&lt;/strong&gt;. This time, I have to be extra careful when modifying his code, I am trying to make less changes as much as possible ^!^. Let see how I make changes to his code in order to support Markdown file mentioned above.&lt;/p&gt;

&lt;p&gt;At first, if I want to process &lt;strong&gt;.md&lt;/strong&gt; file, I have to make the program accpept it and then being able to open it. So, in his &lt;strong&gt;pgprogram.cpp&lt;/strong&gt; file, I create a new variable named &lt;code&gt;mdFile&lt;/code&gt;, then I create another &lt;code&gt;if/else&lt;/code&gt; statement inside the &lt;code&gt;main&lt;/code&gt; function to accept &lt;strong&gt;.md&lt;/strong&gt; file. Another change is inside his &lt;code&gt;HTMLFile.cpp&lt;/code&gt; file, I modify his &lt;code&gt;setHtmlBody&lt;/code&gt; function to support making &lt;strong&gt;Heading 1&lt;/strong&gt;. At this point, another &lt;code&gt;if/else&lt;/code&gt; statement being used again to find the syntax &lt;strong&gt;#&lt;/strong&gt; and replace it with the &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag. I use method &lt;code&gt;find()&lt;/code&gt; to look for the syntax &lt;strong&gt;#&lt;/strong&gt;, and then using method &lt;code&gt;erase()&lt;/code&gt; to delete it, then adding &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag to the place where I delete the &lt;strong&gt;#&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;After modifying his code, I create a pull request and politely ask &lt;a href="https://github.com/kiennguyenchi"&gt;Kien&lt;/a&gt; to review it and let me know if he has any questions. We were having a long conversation discussing about the new feature between &lt;a href="https://github.com/tcvan0707/txt2html/pull/8"&gt;my pull request&lt;/a&gt; and &lt;a href="https://github.com/kiennguyenchi/potato-generator/pull/3"&gt;his&lt;/a&gt;. After all, I have reviewed his pull request and I also make some changes based on his pull request for my program, everything works as exactly what we expect.&lt;/p&gt;

&lt;p&gt;Overall, do not think you are not good enough to contribute to someone else's program. You are not alone, we are here to learn, there are so many things in IT fields for you to learn everyday. Contributing to other's code will allow you to explore new stuffs, understanding different logic as well as the way they write their program. &lt;a href="https://github.com/"&gt;Github&lt;/a&gt; is a wonderful place for you when you want to be part of other's project. Let help us become better ^^.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>opensource</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
