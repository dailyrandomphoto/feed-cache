<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Security Overview of AWS Lambda | AWS White Paper Summary</title>
      <author>Salah Elhossiny</author>
      <pubDate>Mon, 16 Aug 2021 05:29:26 +0000</pubDate>
      <link>https://dev.to/awsmenacommunity/security-overview-of-aws-lambda-aws-white-paper-summary-17dc</link>
      <guid>https://dev.to/awsmenacommunity/security-overview-of-aws-lambda-aws-white-paper-summary-17dc</guid>
      <description>&lt;ul&gt;
&lt;li&gt;The managed runtime environment model further reduces the attack surface while making cloud security simpler. &lt;/li&gt;
&lt;li&gt;This whitepaper presents the underpinnings of that model, along with best practices, to developers, security analysts, security and compliance teams, and other stakeholders.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-shared-responsibility-model"&gt;
  &lt;/a&gt;
  The Shared Responsibility Model
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Security and Compliance is a shared responsibility between AWS and the customer. &lt;/li&gt;
&lt;li&gt;This shared responsibility model can help relieve your operational burden, as AWS operates, manages, and controls the components from the host operating system and virtualization layer, down to the physical security of the facilities in which the service operates.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vOmdCqKT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/127966363-024e9080-3a6c-4d36-ae80-4652256a5999.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vOmdCqKT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/127966363-024e9080-3a6c-4d36-ae80-4652256a5999.png" alt="1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lambda-functions-and-layers"&gt;
  &lt;/a&gt;
  Lambda Functions and Layers
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;With Lambda, you can run code virtually with zero administration of the underlying infrastructure.&lt;/li&gt;
&lt;li&gt;You are responsible only for the code that you provide Lambda, and the conﬁguration of how Lambda runs that code on your behalf.&lt;/li&gt;
&lt;li&gt;Today, Lambda supports two types of code resources: Functions and Layers.&lt;/li&gt;
&lt;li&gt;Layers can be used to share common code or data across diﬀerent functions or AWS accounts. &lt;/li&gt;
&lt;li&gt;You can also control the entire lifecycle of your functions and layers through Lambda's control plane APIs. &lt;/li&gt;
&lt;li&gt;For example, you can choose to delete your function by calling DeleteFunction, or revoke permissions from another account by calling RemovePermission.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#lambda-invoke-modes"&gt;
  &lt;/a&gt;
  Lambda Invoke Modes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The Invoke API can be called in two modes: event mode and request-response mode. 

&lt;ul&gt;
&lt;li&gt;Event mode queues the payload for an asynchronous invocation.&lt;/li&gt;
&lt;li&gt;Request-response mode synchronously invokes the function with the provided payload and returns a response immediately.&lt;/li&gt;
&lt;li&gt;In both cases, the function execution is always performed in a Lambda execution environment, but the payload takes diﬀerent paths.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sSrTHTjQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/128178489-e7c349a8-64e0-48c9-a18e-9588dbeb7729.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sSrTHTjQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/128178489-e7c349a8-64e0-48c9-a18e-9588dbeb7729.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Eventinvocation mode payloads are always queued for processing before invocation.&lt;/li&gt;
&lt;li&gt;All payloads are queued for processing in an Amazon Simple Queue Service (Amazon SQS) queue. &lt;/li&gt;
&lt;li&gt;Queued events are always secured in-transit with TLS 1.2+, but they are not currently encrypted at-rest.&lt;/li&gt;
&lt;li&gt;Queued events are retrieved in batches by Lambda’s poller ﬂeet. &lt;/li&gt;
&lt;li&gt;&lt;p&gt;The poller ﬂeet is a group of EC2 instances whose purpose is to process queued event invocations which have not yet been processed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If the invocation cannot be performed, the poller ﬂeet will temporarily store the event, in-memory, on the host until it is either able to successfully              complete the execution, or until the number of run retry attempts have been exceeded.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#lambda-executions"&gt;
  &lt;/a&gt;
  Lambda Executions
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The Lambda service is split into the control plane and the data plane. &lt;/li&gt;
&lt;li&gt;Each plane serves a distinct purpose in the service. &lt;/li&gt;
&lt;li&gt;The control plane provides the management APIs (for example, CreateFunction, UpdateFunctionCode, PublishLayerVersion, and so on), and manages integrations with all AWS services. &lt;/li&gt;
&lt;li&gt;Communications to Lambda's control plane are protected in-transit by TLS. &lt;/li&gt;
&lt;li&gt;All customer data stored within Lambda's control plane is encrypted at-rest through the use of AWS KMS, which is designed to protect it from unauthorized disclosure or tampering.&lt;/li&gt;
&lt;li&gt;The data plane is Lambda's Invoke API that triggers the invocation of Lambda functions. &lt;/li&gt;
&lt;li&gt;When a Lambda function is invoked, the data plane allocates an execution environmenton an AWS Lambda Worker (or simply Worker, a type of Amazon EC2 instance) to that function version, or chooses an existing execution environment that has already been set up for that function version, which it then uses to complete the invocation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#lambda-execution-environments"&gt;
  &lt;/a&gt;
  Lambda execution environments
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Each invocation is routed by Lambda's invoke service to an execution environment on a Worker that is able to service the request. &lt;/li&gt;
&lt;li&gt;Other than through data plane, customers and other users cannot directly initiate inbound/ingress network communications with an execution environment. &lt;/li&gt;
&lt;li&gt;This helps to ensure that communications to your execution environment are authenticated and authorized.&lt;/li&gt;
&lt;li&gt;Each execution environment may only be used for one concurrent invocation at a time, and they may be reused across multiple invocations of the same function version for performance reasons.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#execution-role"&gt;
  &lt;/a&gt;
  Execution role
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Each Lambda function must also be conﬁgured with an execution role, which is an IAM role that is assumed by the Lambda service when performing control plane and data plane operations related to the function.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#lambda-microvms-and-workers"&gt;
  &lt;/a&gt;
  Lambda MicroVMs and Workers
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Lambda will create its execution environments on a ﬂeet of Amazon EC2 instances called AWS Lambda Workers. &lt;/li&gt;
&lt;li&gt;Workers are bare metalEC2 Nitro instances which are launched and managed by Lambda in a separate isolated AWS account which is not visible to customers.&lt;/li&gt;
&lt;li&gt;Workers have one or more hardware-virtualized Micro Virtual Machines (MVM) created by Firecracker. &lt;/li&gt;
&lt;li&gt;Firecracker is an open-source Virtual Machine Monitor (VMM) that uses Linux’s Kernel-based Virtual Machine (KVM) to create and manage MVMs. &lt;/li&gt;
&lt;li&gt;It is purpose-built for creating and managing secure, multi-tenant container and function-based services that provide serverless operational models.&lt;/li&gt;
&lt;li&gt;As a part of the shared responsibility model, Lambda is responsible for maintaining the security conﬁguration, controls, and patching level of the Workers. &lt;/li&gt;
&lt;li&gt;The Lambda team uses Amazon Inspector to discover known potential security issues, as well as other custom security issue notiﬁcation mechanisms and pre-disclosure lists, so that customers don’t need to manage the underlying security posture of their execution environment.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0oVpJIl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/128300028-bb770510-8453-41b0-9220-22946dadd39e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0oVpJIl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/128300028-bb770510-8453-41b0-9220-22946dadd39e.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lambda-isolation-technologies"&gt;
  &lt;/a&gt;
  Lambda Isolation Technologies
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Lambda uses a variety of open-source and proprietary isolation technologies to protect Workers and execution environments. &lt;/li&gt;
&lt;li&gt;Each execution environment contains a dedicated copy of the following items:

&lt;ul&gt;
&lt;li&gt;The code of the particular function version&lt;/li&gt;
&lt;li&gt;Any AWS Lambda Layers selected for your function version&lt;/li&gt;
&lt;li&gt;The chosen function runtime (for example, Java 11, NodeJS 12, Python 3.8, and so on) or the function's custom runtime&lt;/li&gt;
&lt;li&gt;A writeable /tmp directory&lt;/li&gt;
&lt;li&gt;A minimal Linux user space based on Amazon Linux 2&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#storage-and-state"&gt;
  &lt;/a&gt;
  Storage and state
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Execution environments are never reused across diﬀerent function versions or customers. &lt;/li&gt;
&lt;li&gt;But a single environment can be reused between invocations of the same function version.&lt;/li&gt;
&lt;li&gt;Customers that want to persist data to the ﬁle system outside of the execution environment should consider using Lambda’s integration with Amazon EFS.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#runtime-maintenance-in-lambda"&gt;
  &lt;/a&gt;
  Runtime Maintenance in Lambda
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Lambda tests and deploys the runtime updates without any involvement from customers.&lt;/li&gt;
&lt;li&gt;Typically, no action is required to pick up the latest patches for supported Lambda runtimes, but sometimes action might be required to test patches before they are deployed (for example, known incompatible runtime patches).&lt;/li&gt;
&lt;li&gt;The Lambda team uses Amazon Inspector to discover known security issues. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#monitoring-and-auditing-lambda-functions"&gt;
  &lt;/a&gt;
  Monitoring and Auditing Lambda Functions
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Cloudwatch &lt;/li&gt;
&lt;li&gt;X-Ray&lt;/li&gt;
&lt;li&gt;Cloudtrail&lt;/li&gt;
&lt;li&gt;Config &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#architecting-and-operating-lambda-functions"&gt;
  &lt;/a&gt;
  Architecting and Operating Lambda Functions
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;This section relates to the best practices of well designing and architecting Lambda Functions according to the 5 principles of Well-Architecting Framework. 

&lt;ul&gt;
&lt;li&gt;Operational Excellence Pillar &lt;/li&gt;
&lt;li&gt;Security Pillar &lt;/li&gt;
&lt;li&gt;Reliability Pillar
&lt;/li&gt;
&lt;li&gt;Performance Eﬃciency Pillar &lt;/li&gt;
&lt;li&gt;Cost Optimization Pillar &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#lambda-and-compliance"&gt;
  &lt;/a&gt;
  Lambda and Compliance
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You are responsible for determining which compliance regime applies to your data. &lt;/li&gt;
&lt;li&gt;After you have determined your compliance regime needs, you can use the various Lambda features to match those controls.&lt;/li&gt;
&lt;li&gt;You can contact AWS experts (such as Solution Architects, domain experts, technical account managers and other human resources) for assistance.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#lambda-event-sources"&gt;
  &lt;/a&gt;
  Lambda Event Sources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Lambda integrates with more than 140 AWS services via direct integration and the Amazon EventBridge event bus.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/whitepapers/latest/security-overview-aws-lambda/security-overview-aws-lambda.pdf"&gt; Original White Paper &lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>security</category>
    </item>
    <item>
      <title>Extreme programming Principles</title>
      <author>Aatmaj</author>
      <pubDate>Mon, 16 Aug 2021 05:21:38 +0000</pubDate>
      <link>https://dev.to/aatmaj/extreme-programming-principles-3k9a</link>
      <guid>https://dev.to/aatmaj/extreme-programming-principles-3k9a</guid>
      <description>&lt;h1&gt;
  &lt;a href="#principles-of-extreme-programming-xp"&gt;
  &lt;/a&gt;
  Principles of Extreme Programming XP
&lt;/h1&gt;

&lt;p&gt;Xp is based on a set of proven practices that are all designed to work together, although many folks do pick and choose, and adopt only a portion of XP's rules&lt;/p&gt;

&lt;p&gt;Here are a few practices.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make small, but frequent releases.&lt;/li&gt;
&lt;li&gt;Develop in iteration cycles and not in big-bang models&lt;/li&gt;
&lt;li&gt;Don't put anything that is not in the spec, no matter how tempted you to put in functionality for the future.&lt;/li&gt;
&lt;li&gt;Write the test code first&lt;/li&gt;
&lt;li&gt;No killer schedules, work regular hours&lt;/li&gt;
&lt;li&gt;Refactor (improve the code) whenever and wherever you notice the opportunity&lt;/li&gt;
&lt;li&gt;Don't release anything until it passes all tests&lt;/li&gt;
&lt;li&gt;Set realistic schedules, based around small releases.&lt;/li&gt;
&lt;li&gt;Keep it simple&lt;/li&gt;
&lt;li&gt;Program in pairs, and move people around so that everybody knows pretty much everything about code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Adapted from the book &lt;a href="https://www.amazon.in/Head-First-Java-Brain-Friendly-Guide/dp/8173666024"&gt;Headfirst Java&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Vscode Extension For Every Front-end Developer</title>
      <author>Abkseo</author>
      <pubDate>Mon, 16 Aug 2021 05:06:25 +0000</pubDate>
      <link>https://dev.to/abks/vscode-extension-for-every-front-end-developer-4mfa</link>
      <guid>https://dev.to/abks/vscode-extension-for-every-front-end-developer-4mfa</guid>
      <description>&lt;p&gt; &lt;span&gt;Hello everyone, my name is suman and I'm a frontend developer. In this blog post, I would like to share 10 VS code extensions that every frontend developer should use. The purpose of using these extensions is to write faster, cleaner, and more consistent code. &lt;/span&gt;&lt;span&gt;Let's Jump in!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;a href="https://www.codelivly.com/10-vs-code-extensions-every-frontend-developer-should-use/"&gt;10 VS Code extensions every Frontend Developer should use&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>I made an open-source, fun indie game!</title>
      <author>Virej Dasani</author>
      <pubDate>Mon, 16 Aug 2021 04:59:01 +0000</pubDate>
      <link>https://dev.to/virejdasani/i-made-an-open-source-fun-indie-game-22hf</link>
      <guid>https://dev.to/virejdasani/i-made-an-open-source-fun-indie-game-22hf</guid>
      <description>&lt;h2&gt;
  &lt;a href="#this-is-cuboidal-drift"&gt;
  &lt;/a&gt;
  This is Cuboidal Drift
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/0_qvrFxAGY4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#downloads"&gt;
  &lt;/a&gt;
  Downloads:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.VirejDasani.CuboidalDrift"&gt;Google PlayStore&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://virejdasani.itch.io/cuboidaldrift"&gt;itch.io&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/virejdasani/cuboidaldrift"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cuboidal Drift currently has only 4 levels but because of it being 100% open source, you too can contribute levels on &lt;a href="https://github.com/virejdasani/CuboidalDrift"&gt;GitHub&lt;/a&gt;!&lt;br&gt;
The game is made in Unity3D using the C# language&lt;/p&gt;

&lt;p&gt;A ⭐ to the &lt;a href="https://github.com/virejdasani/CuboidalDrift"&gt;GitHub repo&lt;/a&gt; and a review on the &lt;a href="https://play.google.com/store/apps/details?id=com.VirejDasani.CuboidalDrift"&gt;Google Playstore&lt;/a&gt; is highly appreciated!&lt;/p&gt;

</description>
      <category>unity3d</category>
      <category>gamedev</category>
      <category>opensource</category>
      <category>contributorswanted</category>
    </item>
    <item>
      <title>Stop Using ../../../ While Importing Components, Instead Use This Method</title>
      <author>Suhail Kakar</author>
      <pubDate>Mon, 16 Aug 2021 04:50:21 +0000</pubDate>
      <link>https://dev.to/suhailkakar/stop-using-while-importing-components-instead-use-this-method-3lme</link>
      <guid>https://dev.to/suhailkakar/stop-using-while-importing-components-instead-use-this-method-3lme</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction 📚
&lt;/h3&gt;

&lt;p&gt;When you go to GitHub and see some other developers code, most of them are importing their components like this👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../../components/Buttons/Button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is called relative import. Relative import will start with either &lt;code&gt;./&lt;/code&gt;,&lt;code&gt;/&lt;/code&gt; or &lt;code&gt;../&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I am not telling that this is the wrong way and even there is no issue if you import like that, but if you have a very big and complex project, relative imports will look a lot messy similar to this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../../../../../components/Buttons/Button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, there is a very better and cleaner way to import these components. This method is called absolute import. An absolute import will look this like 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;components/Buttons/Button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#adding-absolute-imports-to-react-apps-cra"&gt;
  &lt;/a&gt;
  Adding absolute imports to React Apps (CRA) 💡
&lt;/h3&gt;

&lt;p&gt;Open your project in any code editor and create a new file in your project's root directory named &lt;code&gt;jsconfig.json&lt;/code&gt;. Once you created the file paste the below JSON inside of it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"compilerOptions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"baseUrl"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"src"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will instruct Webpack to use the &lt;code&gt;src&lt;/code&gt; directory as a base one.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion ⌛
&lt;/h3&gt;

&lt;p&gt;I hope you found this short article helpful. If you need any help please let me know in the comment section. &lt;/p&gt;

&lt;p&gt;Let's connect on  &lt;a href="https://twitter.com/suhailkakar"&gt;Twitter&lt;/a&gt;  and  &lt;a href="https://www.linkedin.com/in/suhailkakar/"&gt;LinkedIn&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;👋 Thanks for reading, See you next time&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>JavaScript Cheat sheet from beginners to advance</title>
      <author>Code Hunter </author>
      <pubDate>Mon, 16 Aug 2021 04:37:43 +0000</pubDate>
      <link>https://dev.to/codehunterbd/javascript-cheat-sheet-from-beginners-to-advance-4i1o</link>
      <guid>https://dev.to/codehunterbd/javascript-cheat-sheet-from-beginners-to-advance-4i1o</guid>
      <description>&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#javascript-basics"&gt;
  &lt;/a&gt;
  JavaScript Basics
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Set of JavaScript basic syntax to add, execute and write basic programming paradigms in JavaScript&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;On Page Script&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Adding internal JavaScript to HTML&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text/javascript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="c1"&gt;//JS code goes here &amp;lt;/script&amp;gt; &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;External JS File&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Adding external JavaScript to HTML&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;filename.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Functions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;JavaScript Function syntax&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;nameOfFunction&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// function body &lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;DOM Element&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Changing content of a DOM Element&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;elementID&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello 
World!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Output&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This will print the value of a in JavaScript console&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#conditional-statements"&gt;
  &lt;/a&gt;
  Conditional Statements
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Conditional statements are used to perform operations based on some conditions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;If Statement&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
The block of code to be executed, when the condition specified is true.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// block of code to be executed if the condition is true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;If-else Statement&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
If the condition for the if block is false, then the else block will be executed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// block of code to be executed if the condition is true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// block of code to be executed if the condition is false&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Else-if Statement&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
A basic if-else ladder&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// block of code to be executed if condition1 is true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// block of code to be executed if the condition1 is false and condition2 is true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// block of code to be executed if the condition1 is false and condition2 is false&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Switch Statement&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Switch case statement in JavaScript&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="c1"&gt;// code block&lt;/span&gt;
&lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="c1"&gt;// code block&lt;/span&gt;
&lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="c1"&gt;// code block&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#iterative-statements-loops"&gt;
  &lt;/a&gt;
  Iterative Statements (Loops)
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Iterative statement facilitates programmer to execute any block of code lines repeatedly and can be controlled as per conditions added by the programmer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;For Loop&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For loop syntax in javascript&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;statement&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;statement&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;statement&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// code block to be executed&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;While Loop&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Runs the code till the specified condition is true&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// code block to be executed&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Do While Loop&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A do while loop is executed at least once despite the condition being true or false&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// run this code in block&lt;/span&gt;
&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#strings"&gt;
  &lt;/a&gt;
  Strings
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;The string is a sequence of characters that is used for storing and managing text data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;charAt method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Returns the character from the specified index.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;concat method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Joins two or more strings together.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;str1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;index of method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Returns the index of the first occurrence of the specified character from the string else -1 if not found.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;substr&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;match method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Searches a string for a match against a regular expression.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;chapter &lt;/span&gt;&lt;span class="se"&gt;\d&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;(\.\d)&lt;/span&gt;&lt;span class="sr"&gt;*&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;/i&lt;/span&gt;&lt;span class="p"&gt;;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;replace method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Searches a string for a match against a specified string or char and returns a new string by replacing the specified values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;str1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;search method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Searches a string against a specified value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;term&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;split method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Splits a string into an array consisting of substrings.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#arrays"&gt;
  &lt;/a&gt;
  Arrays
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;The array is a collection of data items of the same type. In simple terms, it is a variable that contains multiple values.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;variable&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Containers for storing data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;element1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;element2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;element3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;concat method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Joins two or more arrays together.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;indexOf method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Returns the index of the specified item from the array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;join method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Converts the array elements to a string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;pop method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Deletes the last element of the array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;reverse method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This method reverses the order of the array elements&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;sort method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sorts the array elements in a specified manner.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;toString method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Converts the array elements to a string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;valueOf method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;returns the relevant Number Object holding the value of the argument passed&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;valueOf&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#number-methods"&gt;
  &lt;/a&gt;
  Number Methods
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;JS math and number objects provide several constant and methods to perform mathematical operations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;toExponential method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Converts a number to its exponential form.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;toExponential&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;toPrecision method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Formats a number into a specified length.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;toPrecision&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;toString method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Converts an object to a string&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;valueOf method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Returns the primitive value of a number.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;valueOf&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#maths-methods"&gt;
  &lt;/a&gt;
  Maths Methods
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;ceil method&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Rounds a number upwards to the nearest integer, and returns the result&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;exp method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Returns the value of E^x.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;log method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Returns the logarithmic value of x.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;pow method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Returns the value of x to the power y.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;random method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Returns a random number between 0 and 1.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;sqrt method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Returns the square root of a number x&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#dates"&gt;
  &lt;/a&gt;
  Dates
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Date object is used to get the year, month and day. It has methods to get and set day, month, year, hour, minute, and seconds.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Pulling Date from the Date object&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Returns the date from the date object&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;getDate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Pulling Day from the Date object&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Returns the day from the date object&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;getDay&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Pulling Hours from the Date object&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Returns the hours from the date object&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;getHours&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Pulling Minutes from the Date object&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Returns the minutes from the date object&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;getMinutes&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Pulling Seconds from the Date object&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Returns the seconds from the date object&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;getSeconds&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Pulling Time from the Date object&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Returns the time from the date object&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#mouse-events"&gt;
  &lt;/a&gt;
  Mouse Events
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Any change in the state of an object is referred to as an Event. With the help of JS, you can handle events, i.e., how any specific HTML tag will work when the user does something.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;click&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Fired when an element is clicked&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Code to be executed when the event is fired&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;oncontextmenu&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fired when an element is right-clicked&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;contextmenu&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Code to be executed when the event is fired&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;dblclick&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fired when an element is double-clicked&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dblclick&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Code to be executed when the event is fired&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;mouseenter&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fired when an element is entered by the mouse arrow&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mouseenter&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Code to be executed when the event is fired&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;mouseleave&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fired when an element is exited by the mouse arrow&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mouseleave&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Code to be executed when the event is fired&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;mousemove&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fired when the mouse is moved inside the element&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mousemove&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Code to be executed when the event is fired&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#keyboard-events"&gt;
  &lt;/a&gt;
  Keyboard Events
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;keydown&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fired when the user is pressing a key on the keyboard&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;keydown&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Code to be executed when the event is fired&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;keypress&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fired when the user presses the key on the keyboard&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;keypress&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Code to be executed when the event is fired&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;keyup&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fired when the user releases a key on the keyboard&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;keyup&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Code to be executed when the event is fired&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#errors"&gt;
  &lt;/a&gt;
  Errors
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Errors are thrown by the compiler or interpreter whenever they find any fault in the code, and it can be of any type like syntax error, run-time error, logical error, etc. JS provides some functions to handle the errors.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;try and catch&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Try the code block and execute catch when err is thrown&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;Block&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="k"&gt;try&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;Block&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;handle&lt;/span&gt; &lt;span class="nx"&gt;errors&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;alert method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Used to alert something on the screen&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;blur method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The blur() method removes focus from the current window.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;blur&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;setInterval&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Keeps executing code at a certain interval&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Code to be executed&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;setTimeout&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Executes the code after a certain interval of time&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Code to be executed&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;close&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Window. close() method closes the current window&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;confirm&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The window.confirm() instructs the browser to display a dialog with an optional message, and to wait until the user either confirms or cancels&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;confirm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Are you sure?&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;open&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Opens a new window&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://www.anmolraj.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;prompt&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Prompts the user with a text and takes a value. Second parameter is the default value&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;prompt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;What is your name?&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Anmol&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;scrollBy&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollBy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Scroll 100px to the right&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;scrollTo&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Scrolls the document to the specified coordinates.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Scroll to horizontal position 500&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#clearinterval"&gt;
  &lt;/a&gt;
  clearInterval
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Clears the setInterval. var is the value returned by setInterval call&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;clearInterval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;clearTimeout&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Clears the setTimeout. var is the value returned by setTimeout call&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;clearTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;stop&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Stops the further resource loading&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#queryget-elements"&gt;
  &lt;/a&gt;
  Query/Get Elements
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;The browser creates a DOM (Document Object Model) whenever a web page is loaded, and with the help of HTML DOM, one can access and modify all the elements of the HTML document.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;querySelector&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Selector to select first matching element&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;css-selectors&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;querySelectorAll&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A selector to select all matching elements&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;css-selectors&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;getElementsByTagName&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Select elements by tag name&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;element-name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;getElementsByClassName&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Select elements by class name&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;class-name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Get Element by Id&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Select an element by its id&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#creating-elements"&gt;
  &lt;/a&gt;
  Creating Elements
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Create new elements in the DOM&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;createElement&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Create a new element&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;createTextNode&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create a new text node&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createTextNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;some text here&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#code-hunter"&gt;
  &lt;/a&gt;
  &lt;strong&gt;CODE HUNTER&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;If you like it then please like share &amp;amp; follow more&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>frontend</category>
    </item>
    <item>
      <title>🚀20 Best CSS3 Library For Developers.</title>
      <author>Abkseo</author>
      <pubDate>Mon, 16 Aug 2021 04:20:58 +0000</pubDate>
      <link>https://dev.to/abks/20-best-css3-library-for-developers-4g2i</link>
      <guid>https://dev.to/abks/20-best-css3-library-for-developers-4g2i</guid>
      <description>&lt;p&gt;Web Developers used to spend a lot of time creating beautiful CSS. Thanks to the CSS libraries, we now have a better, faster, and more effective way to build responsive websites and web applications.&lt;/p&gt;
&lt;p&gt;Are you still looking for the best CSS libraries? Do you want to know which library you should try? In this article, we have 20 best CSS libraries for your inspiration.&lt;/p&gt;
&lt;h2&gt;
&lt;br&gt;
&lt;a href="https://dev.to/chetan_atrawalkar/20-best-css3-library-for-developers-58p#how-do-css-libraries-work"&gt;&lt;/a&gt;🤔 How do CSS libraries work?&lt;/h2&gt;
&lt;p&gt;CSS library gives web developers a basic structure, which includes grid, interactive UI patterns, web typography, tooltips, buttons, form elements, icons. This structure helps web developers to start quickly and efficiently when they are designing a website or web applications.&lt;/p&gt;
&lt;p&gt;Here we have put together &lt;span&gt;20 best CSS libraries.&lt;/span&gt; We hope you like them, and most importantly, find the best one for your needs.&lt;/p&gt;
&lt;h4&gt;
&lt;br&gt;
&lt;a href="https://dev.to/chetan_atrawalkar/20-best-css3-library-for-developers-58p#lets-go"&gt;&lt;/a&gt;Let's go....🤩&lt;/h4&gt;
&lt;br&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/20-best-css3-library-for-developers/&amp;amp;ved=2ahUKEwii76qFzaPyAhWvyzgGHX9RA-kQFnoECAMQBQ&amp;amp;usg=AOvVaw2AtoxfMkY_y5JPLB2VuSdV"&gt;🚀20 Best CSS3 Library For Developers&lt;/a&gt;&lt;/b&gt;.

</description>
    </item>
    <item>
      <title>Getting Started with Git-GitHub</title>
      <author>Prathamesh Dukare</author>
      <pubDate>Mon, 16 Aug 2021 04:16:31 +0000</pubDate>
      <link>https://dev.to/prathameshkdukare/getting-started-with-git-github-1c1i</link>
      <guid>https://dev.to/prathameshkdukare/getting-started-with-git-github-1c1i</guid>
      <description>&lt;p&gt;If you don't know about Git-GitHub and wanna getting started, then this may be a good starting guide for you. I will explain it in a very simple language.&lt;br&gt;
but, first of all, you should know what Git and GitHub are!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-git-ltgt"&gt;
  &lt;/a&gt;
  What is Git &amp;lt;&amp;gt;?
&lt;/h2&gt;

&lt;p&gt;Git is a Version Control system that maintains the log of your projects (Code) and tracks the changes as you update the files or contents within the file. Git also comes with Branching where you can create the branches to avoid any problems in the main code.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-githubltgt"&gt;
  &lt;/a&gt;
  What is GitHub&amp;lt;&amp;gt;?
&lt;/h2&gt;

&lt;p&gt;GitHub is a project hosting &amp;amp; management platform which comes (works) with git. You can put your code online on GitHub to share it with the world or your team members to collaborate on it. GitHub is so popular that most of the open-source projects are on GitHub &amp;amp; the community contributes to it. &lt;/p&gt;

&lt;p&gt;Now you know what git &amp;amp; GitHub is now let's move ahead to know how it actually works. There are two main methods of working with Git-GitHub,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;With GitHub Desktop App &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With Command Line Interface / Terminal&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here we are gonna see the CLI method ...&lt;/p&gt;

&lt;p&gt;Before starting ,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Download Git from &lt;a href="https://git-scm.com/downloads"&gt;Here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;You can use any terminal for this (Cmd, Bash, Powershell, etc).
Let's begin...&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#initializing-a-git-repository"&gt;
  &lt;/a&gt;
  Initializing a git repository
&lt;/h2&gt;

&lt;p&gt;You need to initialise the git repository which will store all your tracking information &amp;amp; logs.&lt;/p&gt;

&lt;p&gt;CD into Project Folder&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd &amp;lt;Folder Name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Initialize the git repo&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git init 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#start-tracking-files"&gt;
  &lt;/a&gt;
  Start Tracking Files
&lt;/h2&gt;

&lt;p&gt;You need to start git repo to track files for that you need to add files to the staging area to track.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add &amp;lt;filename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also add all files once,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now all the files now being tracked&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#your-first-commit"&gt;
  &lt;/a&gt;
  Your First commit
&lt;/h2&gt;

&lt;p&gt;The commit is like a taking snapshot of the stage which will be stored in log files. Once you are done with all changes &amp;amp; ready to take Snapshot, commit your changes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git commit -m "&amp;lt;commit message&amp;gt;"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you don't use -m, git will open a vim editor (you can select which editor you prefer while running the installation of git) for you to enter the commit message. &lt;/p&gt;

&lt;p&gt;Now your changes are ready and you can upload your project to GitHub with all tracking information.&lt;br&gt;
Let's see how &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#add-remote-repo"&gt;
  &lt;/a&gt;
  Add Remote Repo
&lt;/h2&gt;

&lt;p&gt;For uploading files to GitHub you need to create a repository on GitHub (You can create it by clicking on create repository button) &lt;br&gt;
Now you have a remote repo, to push local changes to the remote you add a remote&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Git remote add &amp;lt;remote name&amp;gt; &amp;lt;remote url&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#push-to-remote-repo"&gt;
  &lt;/a&gt;
  Push to Remote Repo
&lt;/h2&gt;

&lt;p&gt;Push your all local files to remote&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Git push -u &amp;lt;remote name&amp;gt; &amp;lt;upstream branch name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Congratulations, you have successfully uploaded your project to GitHub with all tracking information such as commit messages, changes, log, etc&lt;/p&gt;

&lt;p&gt;This was a beginner guide to publish your first project to GitHub. I hope it was fun. This is the most simple thing you can do with git-GitHub, there are lots of things you should check such as CI/CD with GitHub actions, GitHub pages etc. &lt;/p&gt;

&lt;p&gt;To explore all power of Git &amp;amp; GitHub feal free to google &amp;amp; you will find tons of resources. &lt;/p&gt;

&lt;p&gt;Let me know your thoughts on this post. I tried to explain in most simple manner. I hope you liked it! &lt;/p&gt;

&lt;p&gt;Also, any suggestion or feedback is always appreciated🙏. &lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href="https://twitter.com/prathameshtwits"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>git</category>
      <category>github</category>
      <category>management</category>
    </item>
    <item>
      <title>5 Systems Programming Project Ideas</title>
      <author>Mathew Horner</author>
      <pubDate>Mon, 16 Aug 2021 03:53:53 +0000</pubDate>
      <link>https://dev.to/mdx97/5-systems-programming-project-ideas-2nmn</link>
      <guid>https://dev.to/mdx97/5-systems-programming-project-ideas-2nmn</guid>
      <description>&lt;p&gt;The original post can be found on my blog: &lt;a href="https://hackaway.blog/2021/08/15/5-systems-programming-project-ideas/"&gt;https://hackaway.blog/2021/08/15/5-systems-programming-project-ideas/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-operating-system"&gt;
  &lt;/a&gt;
  1. Operating System
&lt;/h2&gt;

&lt;p&gt;Ever wondered how Windows, MacOS, or Linux work under the hood? You could try creating your own Operating System! Be warned, creating your own OS can be a huge undertaking. Most hobby OS developers have been hacking on their projects for years.&lt;/p&gt;

&lt;p&gt;Luckily, there are a lot of good tutorials and resources available to you if you wish to create your own OS. Here are some examples:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://wiki.osdev.org/Expanded_Main_Page"&gt;OSDev&lt;/a&gt;: A wiki and forum for hobby OS developers. The amount of information on the wiki is incredibly impressive, and should you find yourself stuck, you can always turn to the forums.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://wiki.osdev.org/Barebones"&gt;Bare Bones&lt;/a&gt;: This is an incredibly popular kernel tutorial in the OSDev community, and is intended for complete beginners.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://os.phil-opp.com/"&gt;Writing an OS in Rust&lt;/a&gt;: This tutorial is still a work-in-progress, but it is incredibly high quality and a good option if you wish to write your OS in a more modern language like Rust.&lt;/p&gt;

&lt;p&gt;If you’re interested in learning more about OS theory, I recommend you read the book Operating Systems: Three Easy Pieces, which you can find online for free &lt;a href="https://pages.cs.wisc.edu/~remzi/OSTEP/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-emulator"&gt;
  &lt;/a&gt;
  2. Emulator
&lt;/h2&gt;

&lt;p&gt;Do you miss the days of firing up your Gameboy Advance and playing Pokemon for hours? Creating an emulator could be a fun project for you.&lt;/p&gt;

&lt;p&gt;There are many different types of platforms that you could choose to emulate, but there are only a few that are suitable for your first project. If you are a beginner, it is my opinion that you should choose a relatively simple system like the CHIP-8, NES, or Gameboy.&lt;/p&gt;

&lt;p&gt;Out of these three options, I recommend the CHIP-8 as it is the simplest system and there is a plethora of good resources and tutorials online. Here are my recommendations:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://austinmorlan.com/posts/chip8_emulator/"&gt;Building a CHIP-8 Emulator [C++]&lt;/a&gt;: This is a fantastic and comprehensive CHIP-8 tutorial with the source code included.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tobiasvl.github.io/blog/write-a-chip-8-emulator/"&gt;Guide to making a CHIP-8 emulator&lt;/a&gt;: If you don’t want your hand held through this project, this blog post walks you through a CHIP-8 implementation without giving you the code!&lt;/p&gt;

&lt;p&gt;&lt;a href="http://devernay.free.fr/hacks/chip8/C8TECH10.HTM"&gt;Cowgod’s Chip-8 Technical Reference&lt;/a&gt;: If you want your hand held even less, you can use this amazing technical reference to learn about how the platform works.&lt;/p&gt;

&lt;p&gt;If you have questions, or are looking for other resources, or just a little bit of inspiration; there is an entire community of emulator developers over at Reddit on &lt;a href="https://www.reddit.com/r/EmuDev/"&gt;/r/EmuDev&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-containers"&gt;
  &lt;/a&gt;
  3. Containers
&lt;/h2&gt;

&lt;p&gt;If you are interested in how technologies such as Docker work under the hood, you could build your own container software.&lt;/p&gt;

&lt;p&gt;Doing this type of project will teach you about some of the core concepts that go into container software like kernel namespaces and cgroups.&lt;/p&gt;

&lt;p&gt;Here are some good resources:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=8fi7uSYlOdc&amp;amp;t=594s"&gt;Containers From Scratch • Liz Rice • GOTO 2018&lt;/a&gt;: This is a very popular presentation that walks through how to implement containers in the programming language Go.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.lizzie.io/linux-containers-in-500-loc.html"&gt;Linux containers in 500 lines of code&lt;/a&gt;: This is an incredibly in-depth literate program on how to create containers in C.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-database-or-keyvalue-store"&gt;
  &lt;/a&gt;
  4. Database or Key-Value Store
&lt;/h2&gt;

&lt;p&gt;If you’re interested in data persistence, making your own database software or key-value store could be a cool exercise. If you’re looking to keep this project simple, a key-value store would probably be the easier of the two.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cstack.github.io/db_tutorial/"&gt;Let’s Build a Simple Database&lt;/a&gt; is a fantastic tutorial that walks you through building your own sqlite clone using C. One interesting thing about this tutorial is it presents the code as diffs, rather than chunks of finished code. That way the tutorial takes an iterative approach to writing the code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-dns-server"&gt;
  &lt;/a&gt;
  5. DNS Server
&lt;/h2&gt;

&lt;p&gt;Ever wondered how typing in a url like &lt;a href="https://hackaway.blog/"&gt;https://hackaway.blog&lt;/a&gt; takes you to this site? Implementing your own DNS server could be a fun project for you.&lt;/p&gt;

&lt;p&gt;I highly recommend the &lt;a href="https://github.com/EmilHernvall/dnsguide"&gt;Building a DNS server in Rust&lt;/a&gt; guide by Emil Hernvall on GitHub. This guide will walk you through how to implement the DNS server and recursive resolve.&lt;/p&gt;

&lt;p&gt;If you have suggestions for alternative resources for any of the projects listed above, please feel free to leave a comment!&lt;/p&gt;

</description>
      <category>systems</category>
      <category>tutorial</category>
      <category>programming</category>
      <category>coding</category>
    </item>
    <item>
      <title>Let's Build a Rails App!</title>
      <author>Rylie Spriggs</author>
      <pubDate>Mon, 16 Aug 2021 03:44:54 +0000</pubDate>
      <link>https://dev.to/soiymiilk/let-s-build-a-rails-app-5hb7</link>
      <guid>https://dev.to/soiymiilk/let-s-build-a-rails-app-5hb7</guid>
      <description>&lt;p&gt;Here we are again, writing another post, meaning that I completed my third project for Flatiron school and I could not be happier!&lt;/p&gt;

&lt;p&gt;This time around, I created an Anime series collective of A-Z titles (my favorites of course).&lt;br&gt;
Since you asked, series wise my favorites are: Attack on Titan, Jujutsu Kaisen, and Code Geass: Lelouch of the Rebellion, but as our likes and interests change this will inevitably change.&lt;/p&gt;

&lt;p&gt;Now back to the project..&lt;/p&gt;

&lt;p&gt;Requirements for this project seemed like an insurmountable mountain, solving one step only made it seem like the peak got farther and farther away. However, Dory from Finding Nemo was in my head "just keep swimming(climbing)."&lt;/p&gt;

&lt;p&gt;To start, I created a few models; Users, Shows, Reviews, and Watch Later.&lt;/p&gt;

&lt;p&gt;We want a user to be able to sign in but not hardcode it into the user's controller so I used sessions =&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OCCjZKka--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sjodqnz1lx228662yhr2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OCCjZKka--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sjodqnz1lx228662yhr2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(omniauth was a headache)&lt;/p&gt;

&lt;p&gt;Next, wanted to make sure a user could hop on and see a welcome page to sign up, login, or use a 3rd party, it went like this =&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u3w61gUm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/or3849fyilh4zzw1rp68.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u3w61gUm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/or3849fyilh4zzw1rp68.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Everyone needs a little help sometimes, lets bring in the application helper =&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QTqyC_wP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qx2xiq2uy2d3tlxbwtgy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QTqyC_wP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qx2xiq2uy2d3tlxbwtgy.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H7qc5p-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/50xydjkt9ampim2bg521.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H7qc5p-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/50xydjkt9ampim2bg521.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Good stuff!!&lt;/p&gt;

&lt;p&gt;Alright, next was the seed file, which took a lot longer than anticipated. =&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CGbiYYpQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wcc2wevaqjik468amclu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CGbiYYpQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wcc2wevaqjik468amclu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Awesome! Next was tying things together with the shows controller and view files. =&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--du1kIcV2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2r5v8oydck229yi5chn1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--du1kIcV2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2r5v8oydck229yi5chn1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vWQJk_MP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ambm7r8bh5b7ohikh1yy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vWQJk_MP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ambm7r8bh5b7ohikh1yy.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Everything is in place for our views now =&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uF6sWtuq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kj4uhtsu7vlk1i2exbbv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uF6sWtuq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kj4uhtsu7vlk1i2exbbv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Which all tied together with new, edit, index, and show will look like =&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8_WkdMbC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ywuj9gjolfnaquzu6pml.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8_WkdMbC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ywuj9gjolfnaquzu6pml.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(26 titles are very difficult to fit in one screenshot but you get it)&lt;/p&gt;

&lt;p&gt;So, great! We have our users and shows but we need to add some more spice, let's add reviews! &lt;/p&gt;

&lt;p&gt;Here comes the reviews controller! =&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--77Z-80kh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vcjv5t4fl04tdd4f9pu5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--77Z-80kh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vcjv5t4fl04tdd4f9pu5.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gakw3uhr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lz0fjgitbl4487no4xf0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gakw3uhr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lz0fjgitbl4487no4xf0.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sweet, looks like we're set to create some views so we can give our undying love to these amazing titles =&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YzAiPy5G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c4d2kdxbrjh0idwti7vo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YzAiPy5G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c4d2kdxbrjh0idwti7vo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All tied up like Houdini, it'll look like this! =&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lUZgS6Gv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fl91t43aixqd3eox0q3i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lUZgS6Gv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fl91t43aixqd3eox0q3i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AvanWWA1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yan7qls86jmn41nxxv69.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AvanWWA1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yan7qls86jmn41nxxv69.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5Q8vDNGj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/470r0q5p6i236mkjegdu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Q8vDNGj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/470r0q5p6i236mkjegdu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So we can click on a title, get the genre, description, seasons, and rating, and then leave a review!You can even create a new review, update it or, or delete your review just incase you didn't get give it a 5/5.&lt;/p&gt;

&lt;p&gt;And there you have it folk, an A-Z collective of Anime's you should definitely watch if you haven't already.&lt;/p&gt;

&lt;p&gt;Now I know it doesn't have all the css bells and whistle right now, but this will continue to be a work in progress and will be updated once it's shiny and pretty.&lt;/p&gt;

&lt;p&gt;Thanks for tuning in!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cct6T_iM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dzzwx8kgkhxhl1fwduzz.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cct6T_iM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dzzwx8kgkhxhl1fwduzz.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>rails</category>
      <category>anime</category>
    </item>
    <item>
      <title>What is useEffect Hook in ReactJS?How useEffect works and where to use it? </title>
      <author>Abdul Waqar</author>
      <pubDate>Mon, 16 Aug 2021 02:45:28 +0000</pubDate>
      <link>https://dev.to/abdulwaqar844/what-is-useeffect-hook-in-reactjs-how-useeffect-works-and-where-to-use-it-22im</link>
      <guid>https://dev.to/abdulwaqar844/what-is-useeffect-hook-in-reactjs-how-useeffect-works-and-where-to-use-it-22im</guid>
      <description>&lt;p&gt;&lt;strong&gt;Prerequisite&lt;/strong&gt;: Knowledge of JavaScript and Basic knowledge of ReactJS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#this-post-covers-about-useeffect-hook-of-reactjs-what-is-the-uses-of"&gt;
  &lt;/a&gt;
  This post covers about useEffect hook of ReactJS. What is the uses of
&lt;/h3&gt;

&lt;p&gt;useEffect? What is syntax ? How does it work? When to use it ? And Some common use cases of useEffect Hook. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-react"&gt;
  &lt;/a&gt;
  What is React?
&lt;/h2&gt;

&lt;p&gt;React is a declarative, efficient, and flexible JavaScript library for building user interfaces. It lets you compose complex UIs from small and isolated pieces of code called “components”.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-useeffect-"&gt;
  &lt;/a&gt;
  What is useEffect() ?
&lt;/h2&gt;

&lt;p&gt;Our React Application interact with outside world with functions. useEffect is ReactJS Hook which is used to handle side effect functions(side effect function are those function that communicate with outside world or just out of ReactJS ecosystem ) and by using useEffect we can separate them into other function.&lt;br&gt;
useEffect hook must be declared inside the React component at top level of function. it  gives several advantages : &lt;br&gt;
*It will have access to those data that is required in useEffect hook.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It cal also update the data later base on the dependency and updates.
## What is Syntax of useEffect hook?
Accepts a function that interact with outside world of React components. If we want to execute useEffect after a specific event we pass an array of variables as dependency . Every time a  variable passed to useEffect hook is updated useEffect hook will be re-called.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sideeffect&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
&lt;span class="p"&gt;.....&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;array_of_dependency&lt;/span&gt; &lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#about-hook"&gt;
  &lt;/a&gt;
  About hook
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;if we don’t pass dependency variable then useEffect hook will only called when our  component is rendered .&lt;/li&gt;
&lt;li&gt;If we pass an empty array to useEffect then our component will be rendered for first time when a component is rendered. To re-call useEffect hook we have to refresh our page.&lt;/li&gt;
&lt;li&gt;If we pass dependencies to useEffect hook, then useEffect will executed every time passed variable data is updated.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#how-does-it-work"&gt;
  &lt;/a&gt;
  How does it work?
&lt;/h2&gt;

&lt;p&gt;Every time a React components finish rendering, useEffect run unless you specified dependencies in the dependencies array.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#when-to-use-useeffect"&gt;
  &lt;/a&gt;
  When to use useEffect()?
&lt;/h2&gt;

&lt;p&gt;There are several cases where we  should consider using  useEffect hook. Most import of them are :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If  we want to hit an API endpoint to fetch data and  display data on client side. When our component is rendering, function or handler passed to useEffect hook called and data fetched in component states. Then these states are used in UI components. &lt;/li&gt;
&lt;li&gt;When we want to fetch data based on passed parameter, we can updated this parameter  from client side. Once the parameter is updated to new data , useEffect hook will be re-called.&lt;/li&gt;
&lt;li&gt;We should useEffect, when your component depends on the outside world data, and we can not guarantee that data will come or not (maybe the server is down there). So, Instead of throwing errors and stop other components from being rendered, move them into useEffect hook.&lt;/li&gt;
&lt;li&gt;When you are using browser API  including Timer function, fetch API, local storage and for more browser API, please refer : &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API"&gt;MDN Browser API&lt;/a&gt;.
## Some use cases of React useEffect hook&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;Always run whenever component renders/re-renders
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;UseEffectHookExmaple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;UseEffect called when a component Rendered&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;UseEffect&lt;/span&gt; &lt;span class="nx"&gt;Hook&lt;/span&gt; &lt;span class="nx"&gt;Called&lt;/span&gt; &lt;span class="nx"&gt;every&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;rendered&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;UseEffectHookExmaple&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;2.Run once after that if component re-renders, then it will not run.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;UseEffectCalledOnce&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;UseEffect called Once when component Rendered&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;UseEffect&lt;/span&gt; &lt;span class="nx"&gt;called&lt;/span&gt; &lt;span class="nx"&gt;Once&lt;/span&gt; &lt;span class="nx"&gt;when&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt; &lt;span class="nx"&gt;Rendered&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;UseEffectCalledOnce&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3.Run once by default after that if prop values changes, then run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;UseEffectCalledOnce&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;PageTitle&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;PageTitle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;PageTitle&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;UseEffect&lt;/span&gt; &lt;span class="nx"&gt;called&lt;/span&gt; &lt;span class="nx"&gt;when&lt;/span&gt; &lt;span class="nx"&gt;PageTitle&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;updated&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;UseEffectCalledOnce&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to create Netflix plus clone with pure HTML, CSS, JS</title>
      <author>Abkseo</author>
      <pubDate>Mon, 16 Aug 2021 02:42:54 +0000</pubDate>
      <link>https://dev.to/abks/how-to-create-netflix-plus-clone-with-pure-html-css-js-105</link>
      <guid>https://dev.to/abks/how-to-create-netflix-plus-clone-with-pure-html-css-js-105</guid>
      <description>&lt;p&gt;&lt;span&gt;Netflix has taken the internet and online streaming to an extraordinary level. People have now turned to online sources to keep themselves connected as well as entertained. There is a surge in applications that provide online video streaming and video conferencing. With the growing demand for applications like Netflix, Disney+, and others, now would be the appropriate time to create an app like netflix. Also in this blog we will cover all steps of how to build a streaming service like netflix like app.&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;Read more: &lt;b&gt;&lt;a href="https://www.codelivly.com/how-to-create-a-website-like-netflix/"&gt;How to create Netflix clone with pure HTML, CSS, JS&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Source code is also Given&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
