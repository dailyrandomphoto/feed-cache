<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>State Management Battle in React 2021: Hooks, Redux, and Recoil</title>
      <author>Mihaela</author>
      <pubDate>Tue, 13 Apr 2021 08:32:01 +0000</pubDate>
      <link>https://dev.to/workshub/state-management-battle-in-react-2021-hooks-redux-and-recoil-2am0</link>
      <guid>https://dev.to/workshub/state-management-battle-in-react-2021-hooks-redux-and-recoil-2am0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction:
&lt;/h2&gt;

&lt;p&gt;Over the years, the massive growth of React.JS has given birth to different state management libraries, amongst other things.&lt;br&gt;
The state management libraries available in React at our disposal at the time of this article are enormous. Therefore, knowing what state management library to choose for a particular project not to get carried away by the noise and news from the React community is a significant factor in facilitating the development of an application.&lt;br&gt;
Some developers tackle the challenge by using React Hooks; others combine them with application state management libraries like Redux or the newly release Recoil.&lt;/p&gt;

&lt;p&gt;In this article, we will discuss state management using Redux, Hooks, and Recoil in a typical React application and their best uses cases.&lt;br&gt;
 We will also try to answer questions like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What metric to consider before choosing a state management library?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: This tutorial will be beneficial to readers interested in developing React application that requires a state management library.&lt;br&gt;
This article isn’t an intro to state management in React. It requires a basic understanding of React, hooks, and a bit of Redux; hence, if you’re starting with React and state management in React, please go through these basics before beginning this tutorial 😎.&lt;/p&gt;

&lt;p&gt;## What’s State in a Nutshell?&lt;/p&gt;

&lt;p&gt;State management is simply a way to engender communication and sharing of data across components. It creates a concrete data structure to represent your app's State that you can read and write.&lt;br&gt;
Since React 16.8, every React component, whether functional or class, can have a state.&lt;br&gt;
In the simplest definition, State is a JavaScript object that represents the part of a component that can change based on a resultant action of a user. You could also say states are simply the memory of a component.&lt;br&gt;
When a user performs an action in a typical React app, changes occur in the component's state. While this isn't bad, it quickly becomes a problem if the app begins to scale; hence, such an app's complexity makes it extremely difficult to keep track of all dependencies.&lt;/p&gt;

&lt;p&gt;To answer the introduction question, suppose we are building an eCommerce application; in an app like this, just about every element can be a component – the shopping cart, the buttons, the view cart session, checkout, login bar, etc. In this app, just a single user action of adding to the cart can influence many other components by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;changing the State of the cart component itself,&lt;/li&gt;
&lt;li&gt;adding the cart to the user's cart history,&lt;/li&gt;
&lt;li&gt;checkout product items.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that's to mention only a few from the other plenty stuff that we could add to the eCommerce app. If the engineers in charge do not consider scalability while developing the app, they might soon quickly run into many bugs and problems in the long run.&lt;br&gt;
Constantly debugging and revamping an app like this could eventually be a pain.&lt;/p&gt;

&lt;p&gt;The above scenarios show us the importance of the state in a typical React application.&lt;br&gt;
In managing the state in this application, we could use any library of our choice; they would still get the job done regardless. &lt;/p&gt;

&lt;p&gt;Usually, the state will have to be lifted to the closest parent component and the next until it gets to an ancestor common to both components that need the state, and then it is passed down. This process can be overwhelming and makes the state challenging to maintain. Often it might warrant you to pass data to components that do not even need it.&lt;/p&gt;

&lt;p&gt;State management gets messy as the app grows bigger. That is why you need a state management tool like Redux, Recoil, making it easier to maintain these states. &lt;br&gt;
In the following sections, we would practically look at all the state management libraries(Redux, Hooks, Recoil), their uniqueness, and what to consider before going for any of them.&lt;/p&gt;

&lt;p&gt;## Redux&lt;/p&gt;

&lt;p&gt;The first on our list is Redux; It has been around for a while, pretty much the first react-based state management library.&lt;br&gt;
The state management library Redux was created to address the problem in our eCommerce app. It provides a JavaScript object called the store, which, once set up, includes all states in your application and updates them when necessary. Here is a simplified visualization of how Redux works.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AtAaKDgP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_A4F5E8BF1842A18F95E53C37AE2DEB9C870C228C8E0ED5FEAAFE5522A96BF838_1616174128598_Redux%2BWorkflow.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AtAaKDgP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_A4F5E8BF1842A18F95E53C37AE2DEB9C870C228C8E0ED5FEAAFE5522A96BF838_1616174128598_Redux%2BWorkflow.jpg" alt="Redux workflow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Perhaps you're asking, why is Redux often used with React? The reason from my experiences is because, Redux handles state updates in response to user's actions, especially in UI; Asides from that, Redux can be used as standalone state management from any framework.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-to-use-redux"&gt;
  &lt;/a&gt;
  When to use Redux?
&lt;/h2&gt;

&lt;p&gt;Redux is one of the most popular React state management libraries as of the time of this article.&lt;br&gt;
In this section, we would look closely into when to use Redux in an application.&lt;/p&gt;

&lt;p&gt;Firstly, Redux allows you to manage your app's state in a single place and keep changes in your app more predictable and traceable. It makes occurring changes in your app easier to figure out. Unfortunately, all of these benefits come with specific constraints and tradeoffs.&lt;br&gt;
Frequently, developers feel using Redux adds up some boilerplate code, making little things seemingly overwhelming; however, that depends solely on the app's architectural decision.&lt;/p&gt;

&lt;p&gt;One of the easiest ways to know when you genuinely need to use Redux is when managing state locally begins to look messy. &lt;br&gt;
As the application grows, so does state sharing across components gets tedious.&lt;br&gt;
At that point, you'd now start looking for ways to make the process hassle-free.&lt;br&gt;
In the next section, we would look at why we should Redux with React.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-redux"&gt;
  &lt;/a&gt;
  Why use Redux?
&lt;/h2&gt;

&lt;p&gt;Using Redux with React takes away the hassle of lifting upstate, making it easier for you to trace which action causes any change, hence simplifying the app and making it easier to maintain.&lt;br&gt;
Let's take a look at some tradeoffs that come with using Redux for state management.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Community Support&lt;/strong&gt;&lt;br&gt;
As the official binding library for React and Redux, React-Redux encompasses a large community of users. that makes it easier to ask for help, learn about best practices, use libraries that build on React-Redux, and reuse your knowledge across different applications.&lt;br&gt;
It's the highest stared React state management library on Github. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Enhances Performance&lt;/strong&gt;&lt;br&gt;
React Redux assures performance optimization so that only the connected component only re-renders when it needs to; hence keeping the app's state global wouldn't result in any problem.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Redux makes the state predictable&lt;/strong&gt;&lt;br&gt;
In Redux, the state is always predictable. If the same state and action move to a reducer, it will obtain the same result because reducers are pure functions. The state is also immutable and is never changed. It makes it possible to implement arduous tasks like infinite undo and redo. It is also possible to implement time travel — that is, the ability to move back and forth among the previous states and view the results in real-time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;State persistence on Local Storage&lt;/strong&gt;&lt;br&gt;
Persisting some of the app’s state on local storage and restoring it after a refresh is possible. It makes storing things like cart data on local storage really awesome.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Server-side rendering&lt;/strong&gt;&lt;br&gt;
We can also use redux for server-side rendering. With it, you can handle the app's initial render by sending the state of an app to the server along with its response to the server request. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Redux is maintainable&lt;/strong&gt;&lt;br&gt;
Redux is strict about how code should get designed, making it easier for someone abreast with Redux to understand any Redux application structure. It generally makes it easier to maintain. It also helps you segregate your business logic from your component tree. For large-scale apps, it's critical to keep your app more predictable and maintainable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Debugging is made easy&lt;/strong&gt;&lt;br&gt;
Redux makes it easy to debug an application. By logging actions and state, it is easy to understand coding errors, network errors, and other forms of bugs that might come up during production.&lt;br&gt;
Besides logging, it has excellent DevTools that allows you to time-travel actions, persists actions on page refresh, etc. For medium- and large-scale apps, debugging takes more time than actually developing features. &lt;/p&gt;

&lt;p&gt;While Redux has its benefits, it doesn't warrant that you add Redux in all your apps.&lt;br&gt;
Your application can work well without Redux.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recoil"&gt;
  &lt;/a&gt;
  Recoil
&lt;/h2&gt;

&lt;p&gt;Recoil seems to be the newest tool on the state management community— A community with tons of excellent libraries like Context, Mobx, and Redux, etc.&lt;/p&gt;

&lt;p&gt;Before going into details about Recoil, I'd like to point out that this new state management library is not the "official" state management library for React.&lt;br&gt;
However, the record shows that it was built and released by engineers from Facebook's team, the React creator.&lt;br&gt;
But then, just as Redux isn't an official state management library for React, Recoil isn't either but may gain mass adoption by React enthusiasts if it proves valuable to the React ecosystem at large.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-primary-problem-recoil-solves"&gt;
  &lt;/a&gt;
  The primary problem Recoil solves
&lt;/h2&gt;

&lt;p&gt;While it has its learning curve, it still solves the same as most other state management libraries: global state management.&lt;br&gt;
After using Recoil for only a short while, here are the distinctions I think Recoils comes very handy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;React-like approach and simplicity&lt;/strong&gt;&lt;br&gt;
 The simplicity of Recoil is second to none, hence the reason it's on this list.&lt;br&gt;
 You could build whatever app you build with Recoil as you could make just as with Redux or MobX.&lt;br&gt;
 However, Recoil feels like using a global version of React's useState. It also supports Concurrent Mode, a huge plus (this is still in the works at the time of writing).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Easy Learning Curve&lt;/strong&gt;&lt;br&gt;
Recoil doesn't impose a strict learning curve as Redux and Mobx do.&lt;br&gt;
They aren't so much to learn asides from Atom and Selectors, which are easy to understand.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;App-wide observation&lt;/strong&gt;&lt;br&gt;
Similar to other state management libraries, Recoil handles app-wide state observations well. Other benefits of using Recoil includes;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Boilerplate-free API&lt;/li&gt;
&lt;li&gt;Distributed and incremental state definition&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Recoil's central core concepts are Atoms and Selectors; covering this section is beyond the scope of this article. However, you can check their documentation for an in-depth overview.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-to-use-recoil"&gt;
  &lt;/a&gt;
  When to use Recoil
&lt;/h2&gt;

&lt;p&gt;In less than two years of its release, Recoil has grown so much that it has about 12k plus stars on Github at the time of this article. Asides from that, it's gradually gaining momentum and mass adoption amongst React enthusiasts and the React community at large.&lt;br&gt;
Personally speaking, the only reason I have used Recoil in any of my projects is when I don't intend to have so much Redux boilerplate in my codebase. I have used Recoil on production once, and nothing terrible has happened; everything still works very well to date.&lt;/p&gt;

&lt;p&gt;So when to use Recoil might solely depend on your app's architecture decision, and if you are a lover of simplicity like myself, you might jump into using Recoil 😎.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-react-hooks"&gt;
  &lt;/a&gt;
  Using React Hooks
&lt;/h2&gt;

&lt;p&gt;Hooks is one of the most outstanding features ever added to the React library since its creation. Hooks brought ‘state’ to functional components. Now, functional components can create and manage local states on their own, just like class components.&lt;br&gt;
Anyone already into React should get familiar with React hooks, including &lt;code&gt;useState&lt;/code&gt;, &lt;code&gt;useEffect&lt;/code&gt;, and &lt;code&gt;useReducer&lt;/code&gt;,  etc.&lt;br&gt;
This section will discuss how handy React Hooks can be standalone without intermeddling with any external state management library.&lt;/p&gt;

&lt;p&gt;You could use React Hooks as your primary state management tool without any library, but this will depend on your experience and understanding of React hooks.&lt;/p&gt;

&lt;p&gt;They are powerful on their own and can accomplish almost anything an external library could do.&lt;/p&gt;

&lt;p&gt;To some extent, other state management tools have a few advantages. Still, their procedures make it challenging to get started. Like in the case of Redux, some boilerplate code is needed to get it working in our application; hence, it introduces unnecessary complexity.&lt;br&gt;
On the other hand, with the &lt;code&gt;useContext&lt;/code&gt; API and React Hooks, there is no need to install external libraries to get our app working. It makes it a much simpler, more straightforward way to handle global state management in React applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Assuming you’re already familiar with &lt;code&gt;useState&lt;/code&gt;, we would look into two hooks that aid the process of state management in React.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-raw-usereducer-endraw-hook"&gt;
  &lt;/a&gt;
  The &lt;code&gt;useReducer&lt;/code&gt; Hook
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;useReducer&lt;/code&gt; Hook came with React 16.8. Just like the &lt;code&gt;reduce()&lt;/code&gt; method in JavaScript, the &lt;code&gt;useReducer&lt;/code&gt; Hook receives two values as its argument — a reducer function and an initial state — and then returns a new state:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const [state, dispatch] = useReducer((state, action) =&amp;gt; {
  const { type } = action;
  switch(action) {
    case 'action description':
      const newState = // do something with the action
      return newState;
    default:
      throw new Error()
  }
}, []);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;In the snippet above, we’ve defined our state and a corresponding method, &lt;code&gt;dispatch&lt;/code&gt;, handling it. When we call the &lt;code&gt;dispatch&lt;/code&gt; method, the &lt;code&gt;useReducer()&lt;/code&gt; Hook will perform an action based on the &lt;code&gt;type&lt;/code&gt; that our method receives in its action argument:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
return (
  &amp;lt;button onClick={() =&amp;gt;
    dispatch({ type: 'action type'})}&amp;gt;
  &amp;lt;/button&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
  &lt;a href="#usecontext"&gt;
  &lt;/a&gt;
  useContext
&lt;/h3&gt;

&lt;p&gt;This hook is used to get the current context of a Provider. To create and provide a context, we use the &lt;code&gt;React.createContext&lt;/code&gt; API.&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const myContext = React.createContext()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;We put the root component between the &lt;code&gt;myContext&lt;/code&gt; Provider:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function App() {
    return (
        &amp;lt;myContext.Provider value={900}&amp;gt;
            &amp;lt;Root /&amp;gt;
        &amp;lt;/myContext.Provider&amp;gt;
    )
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;To consume the value provided by the &lt;code&gt;&amp;lt;myContext.Provider&amp;gt;&amp;lt;/myContext.Provider&amp;gt;&lt;/code&gt; we use the &lt;code&gt;useContext&lt;/code&gt; hook.&lt;/p&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function Root() {&lt;br&gt;
    const value = useContext(myContext)&lt;br&gt;
    return (&lt;br&gt;
        &amp;lt;&amp;gt;&lt;br&gt;
            &amp;lt;h3&amp;gt;My Context value: {value} &amp;lt;/h3&amp;gt;&lt;br&gt;
        &amp;lt;/&amp;gt;&lt;br&gt;
    )&lt;br&gt;
}&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
&lt;br&gt;
  &lt;a href="#using-usereducer-and-usecontext"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  Using useReducer and useContext&lt;br&gt;
&lt;/h2&gt;

&lt;p&gt;Using useContext together with useReducer takes the component co-located state management on another level. Suddenly we can pass the state container created by useReducer and its dispatch function to any component from any top-level component. It can also be the most top-level component to make the state "global." It's also possible to pass things down only using React props, but React's Context API makes your state and dispatch function available anywhere without explicitly passing everything down the component tree.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article, we tried to cover the most trending state management tools for React in 2021, how they play an essential role in React state management, and when to use them in a project.&lt;br&gt;
I'd like to know what your experiences are in managing state in a typical React application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://blog.logrocket.com/when-and-when-not-to-use-redux-41807f29a7fb/"&gt;When (and when not) to use Redux&lt;/a&gt; - Christian Nwamba&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.robinwieruch.de/react-state-usereducer-usestate-usecontext"&gt;React State Hooks: useReducer, useState, useContext&lt;/a&gt; - Robin Weiruch&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://blog.logrocket.com/react-recoil-reusable-code-block-component/"&gt;Recoil in action: Building a reusable code block component&lt;/a&gt; - Tomi Odunsanya&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://blog.logrocket.com/refactoring-redux-app-to-use-recoil/"&gt;Refactoring a Redux app to use Recoil&lt;/a&gt; - Ohans Emmanuel &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/alexandrudanpop/why-react-projects-still-use-redux-in-2020-395p"&gt;Why React projects still use Redux&lt;/a&gt; - Alexandru-Dan Pop&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Article by Blessing Krofegha, originally published on &lt;a href="https://javascript.works-hub.com/learn/state-management-battle-in-react-2021-hooks-redux-and-recoil-9977a"&gt;JavaScript Works&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>hooks</category>
      <category>redux</category>
      <category>recoil</category>
    </item>
    <item>
      <title>How to make use of Vue.js Plugins in Nuxt</title>
      <author>Joel Olawanle</author>
      <pubDate>Tue, 13 Apr 2021 08:08:49 +0000</pubDate>
      <link>https://dev.to/olawanle_joel/how-to-make-use-of-vue-js-plugins-in-nuxt-2bao</link>
      <guid>https://dev.to/olawanle_joel/how-to-make-use-of-vue-js-plugins-in-nuxt-2bao</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In computing, a plugin is a software component that makes it easier for users to add a specific feature/functionality to a computer program or website. For example, if you want to sell products, take donations or maybe add carousels to your website/web application, you are going to need a plugin to handle that faster without needing to write lots of complicated codes.&lt;/p&gt;

&lt;p&gt;Nuxt.js is a frontend framework built upon Vue.js that offers great development features such as server-side rendering (SSR), automatically generated routes, improved meta tags managing, and SEO improvement. &lt;/p&gt;

&lt;p&gt;In this article, I will be showing you how to make use of Vue.js Plugins in Nuxt.js understanding fully well that Nuxt is a frontend framework built upon Vue.js.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vue-plugins"&gt;
  &lt;/a&gt;
  Vue Plugins
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Vue.js&lt;/strong&gt; &lt;strong&gt;plugins&lt;/strong&gt; are a powerful but simple way to add global-level functionality to your app. They have a variety of uses, from distributing app-wide components to adding additional capabilities such as routing and immutable data stores to your app. &lt;/p&gt;

&lt;p&gt;Making use of Vue Plugins in vue is much easier due to how the documentation properly explains it, but in the case of nuxt, this can be a little bit tricky for beginners but in this article, I will explain the various ways of installing vue plugins in Nuxt by installing the &lt;a href="https://www.npmjs.com/package/vue-awesome-swiper"&gt;vue-awsome-swiper plugin&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-nuxt-app"&gt;
  &lt;/a&gt;
  Creating Nuxt App
&lt;/h2&gt;

&lt;p&gt;This first thing would be for us to create our nuxt app, and suppose you have a nuxt app and just want to learn how to install plugins, you can click &lt;a href="https://www.dropbox.com/scl/fi/s2h9b4afswbq0jm5d3p43/Making-use-of-Vue-Plugins-in-Nuxt.paper?dl=0&amp;amp;rlkey=oessw2xaxa0q9q0gmzy2raaao#:uid=490193140321199466227516&amp;amp;h2=Installing-Vue-awesome-swiper"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We can create our Nuxt app by either using the scaffolding tool — &lt;code&gt;create-nuxt-app&lt;/code&gt; — or building from scratch. &lt;/p&gt;

&lt;p&gt;To get started, run the following using your package manager of choice:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;    npx create-nuxt-app &lt;span class="nt"&gt;&amp;lt;project-name&amp;gt;&lt;/span&gt;
    //or
    yarn create nuxt-app &lt;span class="nt"&gt;&amp;lt;project-name&amp;gt;&lt;/span&gt;
    //or
    npm init nuxt-app &lt;span class="nt"&gt;&amp;lt;project-name&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Be sure to replace &lt;code&gt;&amp;lt;project-name&amp;gt;&lt;/code&gt; with the name of your project/app.&lt;/p&gt;

&lt;p&gt;Once installation is complete, we will be presented with a series of questions to help configure our application for development, including name, Nuxt options, UI framework, TypeScript, linter, testing framework, and the like.&lt;/p&gt;

&lt;p&gt;The answers to these questions are mostly personal preference. Here’s what my configuration looks like for this article:&lt;br&gt;
Once that’s done, we’ll run the following command in our terminal:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pG-ZVCTv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_7B7E05198F7065003CEA689008D9697DF876E87EB4B74CA5A1DABCA4FC973C94_1616594763052_1.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pG-ZVCTv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_7B7E05198F7065003CEA689008D9697DF876E87EB4B74CA5A1DABCA4FC973C94_1616594763052_1.PNG" alt=""&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;    $ cd &lt;span class="nt"&gt;&amp;lt;project-name&amp;gt;&lt;/span&gt;
    $ npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the above steps complete, our app should be running on &lt;a href="http://localhost:3000/"&gt;http://localhost:3000&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-vueawesomeswiper"&gt;
  &lt;/a&gt;
  Installing Vue-awesome-swiper
&lt;/h2&gt;

&lt;p&gt;This plugin can be installed either using yarn or npm in your preferred package manager.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;    npm install swiper vue-awesome-swiper --save
    //or
    yarn add swiper vue-awesome-swiper
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once that is done we can now register our plugin. You can either register your plugin globally or locally:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#global-registration"&gt;
  &lt;/a&gt;
  Global Registration
&lt;/h2&gt;

&lt;p&gt;This is done by creating a file in the plugins directory of your Nuxt project then import the vue-awesome-swiper and finally tell Vue to use it. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Don’t get confused, I will explain all these in this article.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UqNW-zpl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_7B7E05198F7065003CEA689008D9697DF876E87EB4B74CA5A1DABCA4FC973C94_1616599958359_3.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UqNW-zpl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_7B7E05198F7065003CEA689008D9697DF876E87EB4B74CA5A1DABCA4FC973C94_1616599958359_3.PNG" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For example&lt;/strong&gt; I created a file called “vue-awesome-swiper.js” in the plugins folder, You can give your file any name but so you don’t get confused in a scenario where you will be making use of so many plugins this convention might be the best. Once you have created the file &lt;code&gt;plugins/vue-awesome-swiper.js&lt;/code&gt;, then paste the code below in the file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="c1"&gt;//plugins/vue-awesome-swiper.js&lt;/span&gt;

    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;VueAwesomeSwiper&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-awesome-swiper&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;swiper/swiper-bundle.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

    &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;VueAwesomeSwiper&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="cm"&gt;/* { default options with global component } */&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; The first three lines of the code above are simply importing the vue-awesome-swiper and the swiper-bundle CSS file. The last line of code tells Vue to use the plugin we just imported. Without the &lt;code&gt;vue.use()&lt;/code&gt; command nothing will work.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Once you have your plugin file set up, the next thing will be to add the file path inside the &lt;code&gt;plugins&lt;/code&gt; key of our &lt;code&gt;nuxt.config.js&lt;/code&gt;. The plugins property lets you add Vue.js plugins easily to your main application. All the paths defined in the &lt;code&gt;plugins&lt;/code&gt; property will be imported before initializing the main application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="c1"&gt;//nuxt.config.js&lt;/span&gt;

    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;~/plugins/vue-awesome-swiper.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can now make use of this plugin in your application. To properly explain how this plugin works I will be making use of the vue-awesome-swiper to convert the image below which is cool on the desktop to slide on mobile devices.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TpT_SUpQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_7B7E05198F7065003CEA689008D9697DF876E87EB4B74CA5A1DABCA4FC973C94_1616592705018_2.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TpT_SUpQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_7B7E05198F7065003CEA689008D9697DF876E87EB4B74CA5A1DABCA4FC973C94_1616592705018_2.PNG" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Creating a slider&lt;/strong&gt;&lt;br&gt;
Below is a code to a very simple template you can either use in your components or pages to create a slider.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;swiper&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"mySwiper"&lt;/span&gt; &lt;span class="na"&gt;:options=&lt;/span&gt;&lt;span class="s"&gt;"swiperOptions"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;swiper-slide&amp;gt;&lt;/span&gt;Slide 1&lt;span class="nt"&gt;&amp;lt;/swiper-slide&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;swiper-slide&amp;gt;&lt;/span&gt;Slide 2&lt;span class="nt"&gt;&amp;lt;/swiper-slide&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;swiper-slide&amp;gt;&lt;/span&gt;Slide 3&lt;span class="nt"&gt;&amp;lt;/swiper-slide&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;swiper-slide&amp;gt;&lt;/span&gt;Slide 4&lt;span class="nt"&gt;&amp;lt;/swiper-slide&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;swiper-slide&amp;gt;&lt;/span&gt;Slide 5&lt;span class="nt"&gt;&amp;lt;/swiper-slide&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"swiper-pagination"&lt;/span&gt; &lt;span class="na"&gt;slot=&lt;/span&gt;&lt;span class="s"&gt;"pagination"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/swiper&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;carrousel&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;swiperOptions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;pagination&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;el&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.swiper-pagination&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
              &lt;span class="p"&gt;},&lt;/span&gt;
              &lt;span class="c1"&gt;// Some Swiper option/callback...&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;computed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;swiper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$refs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mySwiper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$swiper&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="nx"&gt;mounted&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Current Swiper instance object&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;swiper&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;swiper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slideTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Explaining the code above, in the template section we have a &lt;code&gt;swiper&lt;/code&gt; tag consisting of 6 &lt;code&gt;swiper-slide&lt;/code&gt; tags. The content of your slide will be in the &lt;code&gt;swiper-slide&lt;/code&gt; tag. For example, take a look at the code below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;swiper-slide&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mt-14 mx-10 flex flex-col items-center space-y-6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
          &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"~/assets/images/1.jpg"&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"rounded-xl h-80 w-80 object-cover object-center"&lt;/span&gt;
          &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;
        &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"font-bold text-4xl"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;$5&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-center text-gray-300"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          Lorem, ipsum dolor sit amet consectetur adipisicing elit.
          Dolor tempore at labore sed molestias soluta asperiores
          aliquam ipsa consequuntur.
        &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt;
          &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bg-gray-900 px-10 py-4 rounded-xl text-xl uppercase"&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Buy Now&lt;span class="nt"&gt;&amp;lt;/a&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/swiper-slide&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In case you want to see how I was able to make use of the Vue-awesome swiper to convert that image to a slider as seen below, you can find my source code &lt;a href="https://github.com/olawanlejoel/explaining-vue-plugins"&gt;here&lt;/a&gt; and the live site &lt;a href="https://explaining-vue-plugins.netlify.app/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---ovoRolW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media0.giphy.com/media/Buji9k1yK8hMlVNxry/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---ovoRolW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media0.giphy.com/media/Buji9k1yK8hMlVNxry/giphy.gif" alt="mobile-swiper"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#local-registration"&gt;
  &lt;/a&gt;
  Local Registration
&lt;/h2&gt;

&lt;p&gt;As I said earlier, you can either register your plugin globally or locally. To install your plugin locally, all you have to do is create a component or page and import the plugin within the script tag just as it’s done when you import components or anything in vue.js.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Swiper&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SwiperSlide&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;directive&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-awesome-swiper&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;swiper/swiper-bundle.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

      &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;carrousel&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;swiperOptions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;pagination&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;el&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.swiper-pagination&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
              &lt;span class="p"&gt;},&lt;/span&gt;
              &lt;span class="c1"&gt;// Some Swiper option/callback...&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;Swiper&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;SwiperSlide&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="na"&gt;directives&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;swiper&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;directive&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;computed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;swiper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$refs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mySwiper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$swiper&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="nx"&gt;mounted&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Current Swiper instance object&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;swiper&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;swiper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slideTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; You must make sure you already have your plugin installed either via npm or yarn before this would work.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You might begin to ask yourself of the importance or essence of making use of a local registration when you can easily make use of it globally. The truth is that it’s totally up to you, both ways work fine but suppose you would be making use of the swiper plugin more than once then registering it globally would be better for cleaner codes, and in a situation you are working in a team.&lt;/p&gt;

&lt;p&gt;I decided to extract what was added to the script tag for the local registration below, so you would understand perfectly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Swiper&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SwiperSlide&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;directive&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-awesome-swiper&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;swiper/swiper-bundle.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;Swiper&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;SwiperSlide&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;directives&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;swiper&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;directive&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Explaining the code above, we imported the plugin’s components and directives and then declared them.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; The example used for the global registration would also work for the local registration.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We’ve taken a look at the basics of making use of vue-plugins in nuxt.js. Though there are few other things I did not explain, I believe this would help you.🤗&lt;/p&gt;

&lt;p&gt;Don't forget to check &lt;a href="https://nuxtjs.org/docs/2.x/directory-structure/plugins#vue-plugins"&gt;Nuxt Documentation&lt;/a&gt; for more information.&lt;/p&gt;




&lt;p&gt;As always, any questions or suggestions, please feel free to leave a response or &lt;a href="https://twitter.com/olawanle_joel"&gt;tweet me&lt;/a&gt; 🤭! Be sure to connect with me on &lt;a href="https://github.com/olawanlejoel"&gt;socials&lt;/a&gt;! 😎&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;




</description>
      <category>vue</category>
      <category>nuxt</category>
      <category>jamstack</category>
      <category>javascript</category>
    </item>
    <item>
      <title>5 Tips On How To Stay Motivated And Productive As A Developer</title>
      <author>Boyan Iliev</author>
      <pubDate>Tue, 13 Apr 2021 08:00:15 +0000</pubDate>
      <link>https://dev.to/boiliev/5-tips-on-how-to-stay-motivated-and-productive-as-a-developer-mgp</link>
      <guid>https://dev.to/boiliev/5-tips-on-how-to-stay-motivated-and-productive-as-a-developer-mgp</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Whether you are a senior developer, or you have just started getting into code, there comes a time when you start losing motivation. It is normal to lose motivation and that lack of motivation can sometimes stick for a long time. Unfortunately, there can be hundreds of reasons that can make you lose motivation. For example, you can't get your code to run the way you want it to. This happens to a lot of us and it can be hard to get back to being productive.&lt;/p&gt;

&lt;p&gt;In this post, I would like to share with you some tips that you can try to help you stay motivated or get that motivation back.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#stay-off-your-phone"&gt;
  &lt;/a&gt;
  Stay off your phone
&lt;/h1&gt;

&lt;p&gt;It's no secret that our mobile devices are very addictive. Of course, some people can't afford to stay off their phone because it is connected with their work. But for most of us, it is a big waste of time. When we surf the internet we can really lose motivation. Spending way too much time on social media, YouTube, or Netflix can make us lose motivation and even make us depressed. This is why when you start feeling down and feel that you are getting a little unproductive, just leave your phone at the other end of the room. &lt;strong&gt;Or just try to stay off of it for as long as you can&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I noticed that this really helped me to be more concentrated and made me enjoy much more the time I spent coding.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#set-minigoals-for-you-to-complete"&gt;
  &lt;/a&gt;
  Set mini-goals for you to complete
&lt;/h1&gt;

&lt;p&gt;If you don't have a &lt;strong&gt;daily to-do list&lt;/strong&gt;, I highly recommend that you make one. You can add in it all the stuff that you want to achieve the next day. So the night before you go to bed make a list and add a few small tasks to it. Some that will be helpful for you, but at the same time not that hard. When you finish one of those tasks and see the progress that you've done when crossing it out from your list will give you a boost of motivation.&lt;/p&gt;

&lt;p&gt;Also, I would recommend that you try to complete the hardest tasks first. I personally prefer to get them out of the way first and then do the other stuff.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#wake-up-properly"&gt;
  &lt;/a&gt;
  Wake up properly
&lt;/h1&gt;

&lt;p&gt;The worst thing to do when you wake up is to get straight away on your phone. You've just slept 7-10 hours and you're body is dehydrated and your brain is confused. And it's not the best idea for your eyes to be staring at a screen before they have even opened up yet.&lt;/p&gt;

&lt;p&gt;I would recommend that you lay in bed for 5 minutes so that you can fully wake up. Then go &lt;strong&gt;drink as much water as you can so that you can hydrate after a night of sleeping&lt;/strong&gt;. Try to stay off any screens for as long as you can in the morning so that your body and mind can get ready for the day. You will feel much more energetic and will have all the power to do all of the stuff that you have to.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#surround-yourself-with-techrelated-stuff"&gt;
  &lt;/a&gt;
  Surround yourself with tech-related stuff
&lt;/h1&gt;

&lt;p&gt;Try to make the stuff you do during the day as connected to web development as possible. Seeing what other people create and the knowledge their share on all the different web dev community websites really makes you feel like you are a part of something big and lift you up. Try to chat with as many developers as you can. We have such an amazing community that just by getting surrounded by it can give you the motivation you need. Some of these sites are the &lt;a href="https://devdojo.com/"&gt;DevDojo&lt;/a&gt; website and &lt;a href="https://dev.to/"&gt;DEV&lt;/a&gt;. Also, another cool thing is the &lt;a href="https://daily.dev/"&gt;daily.dev&lt;/a&gt; extension.&lt;/p&gt;

&lt;p&gt;Try sharing some of your knowledge or share a project your working on. See all the feedback you get. You can learn so many things that way. Or you can help someone else learn something. It's really fun and it can really boost your motivation and productivity when you see other developers that have the same interests as you.&lt;/p&gt;

&lt;p&gt;And finally:&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#look-back-at-the-things-you-have-accomplished"&gt;
  &lt;/a&gt;
  Look back at the things you have accomplished
&lt;/h1&gt;

&lt;p&gt;When you think that you are stuck and can't get anywhere, for example, if you don't know how to get your code to run properly, just sit for a moment and think of how you used to be when you started programming. Think of all the progress that you have made in the last couple of months. This can boost your motivation and productivity by seeing how far you've come.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;These things have really helped me stay motivated and productive. I kept losing motivation because I had to study for my exams and then I couldn't get motivated to code. When I started using these tips, I became more motivated than I have ever been. &lt;/p&gt;

&lt;p&gt;I hope that this post has helped you get more productive and motivated!&lt;/p&gt;

</description>
      <category>developer</category>
      <category>productivity</category>
      <category>motivation</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Understanding Web Vitals</title>
      <author>kaspera</author>
      <pubDate>Tue, 13 Apr 2021 07:54:51 +0000</pubDate>
      <link>https://dev.to/kaspera/understanding-web-vitals-2d6c</link>
      <guid>https://dev.to/kaspera/understanding-web-vitals-2d6c</guid>
      <description>&lt;p&gt;Web Vitals are a set of metrics that Google views as essential to a website’s user experience (UX). Google started the Web Vitals initiative to provide website owners unified guidance for quality signals regarding UX.&lt;/p&gt;

&lt;p&gt;Web Vitals can be grouped into two categories: Core Web Vitals and Other Web Vitals. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--14BLxVJT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o252v0brh3uui5atu9rv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--14BLxVJT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o252v0brh3uui5atu9rv.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When reading articles about Web Vitals, these will often refer to the Core Web Vitals. As the name reveals, these are the metrics that, according to Google, matter the most.&lt;/p&gt;

&lt;p&gt;And Google has really put their money where their mouth is. Starting May 2021, Core Web Vitals will become an official ranking factor in Google.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#core-web-vitals"&gt;
  &lt;/a&gt;
  Core Web Vitals
&lt;/h2&gt;

&lt;p&gt;The Core Web Vitals consists of three metrics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Largest Contentful Paint (LCP) &lt;/li&gt;
&lt;li&gt;First Input Delay (FID)&lt;/li&gt;
&lt;li&gt;Cumulative Layout Shift (CLS)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are metrics that all site owners should measure. Google also captures these metrics in their &lt;a href="https://developers.google.com/web/tools/chrome-user-experience-report"&gt;Chrome User Experience Report (CrUX)&lt;/a&gt;, powered by real-world Chrome users’ experience.&lt;/p&gt;

&lt;p&gt;Tip: You can monitor your own and your competitor’s CrUX-data by using Alertdesk’s competitor monitoring solution.&lt;/p&gt;

&lt;p&gt;The Core Web Vitals are not set in stone but will evolve over time. For now, they focus on three aspects:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Loading – Largest Contentful Paint (LCP)&lt;/li&gt;
&lt;li&gt;Interactivity – First Input Delay (FID)&lt;/li&gt;
&lt;li&gt;Visual Stability – Cumulative Layout Shift (CLS)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s look at what exactly they are and what the recommended “score” is for each. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#largest-contentful-paint-lcp"&gt;
  &lt;/a&gt;
  Largest Contentful Paint (LCP)
&lt;/h3&gt;

&lt;p&gt;Largest Contentful Paint (LCP) is used for measuring perceived load speed. It shows the time it takes to load what is most likely the main content – the largest image or text block visible for the user.&lt;/p&gt;

&lt;p&gt;The elements that are considered in LCP are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Images (

&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;

,

&lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt;

,

&lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;

)
* Videos (

&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;

)&lt;/li&gt;
&lt;li&gt;Background images (elements loaded via the url() function)&lt;/li&gt;
&lt;li&gt;Block level elements (

&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;

,

&lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;

, etc. – &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements"&gt;see full list here&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;A good LCP is anything below 2.5 seconds.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZwOQE4kc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/umwerbzoszmrn5dnr4b7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZwOQE4kc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/umwerbzoszmrn5dnr4b7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/lcp/"&gt;You can read more about Largest Contentful Paint (LCP) here.&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#first-input-delay-fid"&gt;
  &lt;/a&gt;
  First Input Delay (FID)
&lt;/h3&gt;

&lt;p&gt;First Input Delay (FID) is used for measuring load responsiveness. It shows the time it takes from a user interacting with a page (e.g., clicking a button) to the browser begin processing this event. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A good FID is anything below 100 milliseconds.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cwEIxsdr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h0weysaa6harnlwjuq3w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cwEIxsdr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h0weysaa6harnlwjuq3w.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/fid/"&gt;You can read more about First Input Delay (FID) here.&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cumulative-layout-shift-cls"&gt;
  &lt;/a&gt;
  Cumulative Layout Shift (CLS)
&lt;/h3&gt;

&lt;p&gt;Cumulative Layout Shift (CLS) is used for measuring visual stability. It represents how often a user experiences unexpected layout shifts.&lt;/p&gt;

&lt;p&gt;A layout shift is when an element changes its position. These individual layout shifts get a score (layout shift score = impact fraction * distance fraction) and accumulate to the CLS score.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A good CLS is anything below a 0.1 score.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_NV_iSHM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwx5mkvdoa7lh4harcv1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_NV_iSHM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwx5mkvdoa7lh4harcv1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/cls/"&gt;You can read more about Cumulative Layout Shift (CLS) here.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-web-vitals"&gt;
  &lt;/a&gt;
  Other Web Vitals
&lt;/h2&gt;

&lt;p&gt;Even though Core Web Vitals are the most important of the Web Vitals (&lt;a href="https://media.giphy.com/media/aVtdz7iNVPI1W/giphy.gif"&gt;duh&lt;/a&gt;), it doesn’t mean the Other Web Vitals aren’t. They also play a role in the overall user experience.&lt;/p&gt;

&lt;p&gt;Let’s take a look at them. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#first-contentful-paint-fcp"&gt;
  &lt;/a&gt;
  First Contentful Paint (FCP)
&lt;/h3&gt;

&lt;p&gt;Like LCP, First Contentful Paint (FCP) is also used for measuring perceived load speed. It shows the time it takes for any part of the page’s content (text, images, background images, , and non-white -elements) to be shown on screen. &lt;/p&gt;

&lt;p&gt;So the time it takes for the first content to be visible for the user. Having a fast FCP helps to reassure the user that something is happening.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A good FCP is anything below 2 seconds.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/fcp/"&gt;You can read more about First Contentful Paint (FCP) here.&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#time-to-interactive-tti"&gt;
  &lt;/a&gt;
  Time To Interactive (TTI)
&lt;/h3&gt;

&lt;p&gt;Like FID, Time To Interactive (TTI) is also used for measuring load responsiveness. It shows the time it takes for the page to be capable of responding to user input quickly and reliably.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A good TTI is anything below 3.8 seconds.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/tti/"&gt;You can read more about Time To Interactive (TTI) here.&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#total-blocking-time-tbt"&gt;
  &lt;/a&gt;
  Total Blocking Time (TBT)
&lt;/h3&gt;

&lt;p&gt;Total Blocking Time (TBT) is yet another metric for measuring load responsiveness. It measures the time between First Contentful Paint (FCP) and Time to Interactive (TTI).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A good TBT is anything below 300 ms.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/tbt/"&gt;You can read more about Total Blocking Time (TBT) here.&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#speed-index"&gt;
  &lt;/a&gt;
  Speed Index
&lt;/h3&gt;

&lt;p&gt;Speed Index measures how quickly content gets displayed during load. It gets measured by capturing a video of the page loading and afterward computing the visual progression between frames. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A good Speed Index is anything below 4.3 seconds.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/speed-index/"&gt;You can read more about Speed Index here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to dive into the juicy details about Web Vitals and how to optimize them, we recommend you check out Google’s official documentation about Web Vitals: &lt;a href="https://web.dev/learn-web-vitals/"&gt;https://web.dev/learn-web-vitals/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-alertdesk-to-track-your-web-vitals"&gt;
  &lt;/a&gt;
  🩺 Use Alertdesk to track your Web Vitals
&lt;/h2&gt;

&lt;p&gt;Alertdesk helps you keep track of your page’s web vitals.&lt;/p&gt;

&lt;p&gt;Each day we run an automated test from both a Mobile and a Desktop perspective, where we collect and store your metrics.&lt;/p&gt;

&lt;p&gt;Dive into our powerful reports and find the low-hanging fruits that can skyrocket your performance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.alertdesk.com/?utm_source=devto&amp;amp;utm_medium=organic&amp;amp;utm_campaign=article&amp;amp;utm_content=understanding-web-vitals"&gt;Start tracking your web vitals today with Alertdesk. Try us free for 14 days.&lt;/a&gt;&lt;/p&gt;

</description>
      <category>performance</category>
      <category>monitoring</category>
      <category>seo</category>
      <category>webvitals</category>
    </item>
    <item>
      <title>How Can We Identify Emerging Influencers Using Machine Learning?</title>
      <author>Kyle Jones</author>
      <pubDate>Tue, 13 Apr 2021 07:53:29 +0000</pubDate>
      <link>https://dev.to/kerldev/how-can-we-identify-emerging-influencers-using-machine-learning-2eei</link>
      <guid>https://dev.to/kerldev/how-can-we-identify-emerging-influencers-using-machine-learning-2eei</guid>
      <description>&lt;p&gt;In the age of social media more than ever, marketing teams are turning to influencers to advertise their new, innovative products or services. The number of followers, impressions and engagements all impact traffic, which in turn helps drive one very important metric - sales. This makes the ability to identify the next up-and-coming influencer all the more important and valuable, with 61% of marketers agreeing that it’s difficult to find the right influencers for a campaign.&lt;/p&gt;

&lt;p&gt;Influencer marketing is an industry that has seen rapid growth over the past few years with an increase between 40 and 50 percent year on year, according to &lt;a href="https://influencermarketinghub.com/influencer-marketing-benchmark-report-2020/"&gt;Influencer Marketing Hub&lt;/a&gt;. It allows companies to increase brand awareness and trust through directly interacting with their target audience in a way never seen before in other strands of marketing.&lt;/p&gt;

&lt;p&gt;Take &lt;a href="https://www.gymshark.com/"&gt;Gymshark&lt;/a&gt;, recently valued at £1.3bn, this fitness clothing brand was one of the earliest adopters of the influencer marketing model. They are renowned for marketing products through their community of Instagram influencers and YouTubers, with their success being a testament to the importance of influencer marketing, showing that when done right it can be a key driver to exponential growth. &lt;/p&gt;

&lt;p&gt;As an industry, influencer marketing is expected to hit &lt;a href="https://digitalmarketinginstitute.com/en-gb/blog/20-influencer-marketing-statistics-that-will-surprise-you"&gt;$10bn in 2020&lt;/a&gt;, growing enormously from just $3bn in 2017. Increasingly companies are valuing the involvement of influencers in their marketing, so it is now more important than ever to be able to identify emerging influencers and those with the most potential to drive success for a brand. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-makes-an-influencer"&gt;
  &lt;/a&gt;
  So what makes an influencer?
&lt;/h2&gt;

&lt;p&gt;The most obvious type of influencer are celebrities - individuals with large numbers of followers who are often idolized. Similarly, other types of influencers include industry experts, thought leaders and bloggers.&lt;br&gt;
These categories, although relatively vague terms, all have some similar traits that provide us with some insight on what features to look for when trying to identify the next big influencer.&lt;br&gt;
Common traits in these categories are that the individuals often have a sizable audience that they engage with through some kind of platform, and in most cases, they are individuals who talk about topics in a particular niche. For example, Andrew Ng could be considered an influencer due to his sizeable audience on Twitter, where he regularly posts about machine learning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-we-quantify-influence"&gt;
  &lt;/a&gt;
  How do we quantify influence?
&lt;/h2&gt;

&lt;p&gt;As with a large amount of machine learning problems, being able to express a complex idea like influence is paramount to identifying trends. In the context of social media, there are three main types of data we can use:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Number of Followers&lt;/li&gt;
&lt;li&gt;Number of Impressions&lt;/li&gt;
&lt;li&gt;Engagements&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The number of followers and impressions, when measured over time, gives us an idea of the reach of the potential influencer. Engagements then give us information about how the individual is able to convert that reach, giving us insight into how likely the users that are viewing the posts are to be motivated into doing a particular thing, such as purchasing a product.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-we-predict-an-emerging-influencer"&gt;
  &lt;/a&gt;
  How do we predict an emerging influencer?
&lt;/h2&gt;

&lt;p&gt;A &lt;a href="http://cs229.stanford.edu/proj2014/Ruishan%20Liu,%20Yang%20Zhao,%20Liuyu%20Zhou,%20Predict%20Influencers%20in%20the%20Social%20Network.pdf"&gt;paper published by students at Stanford University&lt;/a&gt; discusses a potential solution, while Kaggle (a website which hosts data science and machine learning competitions) &lt;a href="https://www.kaggle.com/c/predict-who-is-more-influential-in-a-social-network"&gt;has several others&lt;/a&gt;. Kaggle's most effective entry makes use of a Bayesian Optimized Light Gradient Boosted Machine that is trained using data that compares two individual's social media statistics, including those discussed above. Bayesian optimization is a process that allows us to fine-tune hyper-parameters for a machine learning model. &lt;a href="https://medium.com/@pushkarmandot/https-medium-com-pushkarmandot-what-is-lightgbm-how-to-implement-it-how-to-fine-tune-the-parameters-60347819b7fc"&gt;LightGBM is a relatively new gradient boosting framework that uses tree-based learning&lt;/a&gt; and differs from other tree-based algorithms in that the tree grows vertically (leaf-wise) rather than horizontally (level-wise).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hPHRLbYv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vin1i38uvgurnkw6vgv9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hPHRLbYv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vin1i38uvgurnkw6vgv9.jpg" alt="Diagram Illustrating Leaf-wise Tree Growth" title="Illustration of Leaf-wise Growth"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7xAoFcDP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/73mrqryvmwh8je7b2r4m.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7xAoFcDP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/73mrqryvmwh8je7b2r4m.jpg" alt="Diagram Illustrating Level-wise Tree Growth" title="Illustration of Level-wise Growth"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some advantages of LightGBM is that it is fast, requires a lower amount of memory and supports GPU learning, however, it is quite sensitive to overtraining. In this implementation, the LightGBM manages to correctly identify which of the two individuals are the most influential with around 87% accuracy, making this model ideal for assisting in deciding between a relatively low number of potential influencers. However, despite this being one of the most accurate machine learning solutions for this problem, it is held back by the need for a large amount of curated data in order to be effective. This means that access to a large volume of user data needs to be accessed via an API or by web scraping, before then pre-processing the data into a given format to be used by the model.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-can-we-do-to-improve-the-implementation"&gt;
  &lt;/a&gt;
  What can we do to improve the implementation?
&lt;/h2&gt;

&lt;p&gt;The difficulty in quantifying influence is that these values better describe an individual’s reach rather than their influence. However, we could also use Natural Language Processing techniques such as sentiment analysis, named entity recognition and document classification to analyse the post itself, along with the text-based engagements. This would give us a better understanding of what topics and what type of posts get a better reach as well as which of these garner the most positive interactions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-you-decide-if-the-influencer-youve-predicted-is-right-for-you"&gt;
  &lt;/a&gt;
  How do you decide if the influencer you’ve predicted is right for you?
&lt;/h2&gt;

&lt;p&gt;Even with the work mentioned above, the influencer may not necessarily be the right fit for the strategy you have in mind. In order to build brand awareness or to increase a social following, you might need to choose a macro-influencer, whereas to reach an ideal audience a micro-influencer might be a better choice. The relevancy of the influencer's usual posts and the quality of the post could also contribute to choosing a different influencer.&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>programming</category>
    </item>
    <item>
      <title>🎉 Winning my very first Hackathon 🎉</title>
      <author>Kaiwalya Koparkar</author>
      <pubDate>Tue, 13 Apr 2021 07:48:22 +0000</pubDate>
      <link>https://dev.to/kaiwalyakoparkar/winning-my-very-first-hackathon-4oi0</link>
      <guid>https://dev.to/kaiwalyakoparkar/winning-my-very-first-hackathon-4oi0</guid>
      <description>&lt;p&gt;I recently participated in my very first hackathon (Online) &lt;strong&gt;Hack You&lt;/strong&gt; hosted by &lt;strong&gt;MLH season&lt;/strong&gt; and Organised by &lt;strong&gt;Merge Intern&lt;/strong&gt;. And Although it was the first time for every team member(4 members including me) we ended up winning 2nd prize overall 🎉 .&lt;br&gt;
So In this blog, I am going to tell all the steps that my team took to grab the position in the top 3. Let's jump into it! 👇&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We participated in the online hackathon. All the below views are with context to it&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finding-a-good-hackathon"&gt;
  &lt;/a&gt;
  📌 Finding a good hackathon:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;This is an initial step for getting to the environment. Now, what do I mean by that? Many hackathons are topic-centric like &lt;strong&gt;FinHack&lt;/strong&gt; (which focuses on financial hackathons) etc. So if you are not familiar with all the techs used in fintech I won't suggest topic-centric hackathons.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Instead of that try to find the hackathon which accepts the ideas from diverse tech stack as well eg: &lt;strong&gt;AR/VR/MR&lt;/strong&gt;, &lt;strong&gt;AI/ML&lt;/strong&gt;, &lt;strong&gt;BlockChain&lt;/strong&gt;, &lt;strong&gt;Open Innovation&lt;/strong&gt;, etc. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Also, keep note of the side prizes like for eg: &lt;strong&gt;Best use of Linode&lt;/strong&gt; or &lt;strong&gt;Best domain name registered&lt;/strong&gt; or &lt;strong&gt;Best octocat drawing&lt;/strong&gt; which run parallel to the main theme of the hackathon. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;At least try to complete 1 challenge from this category as well.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#finding-a-team"&gt;
  &lt;/a&gt;
  📌 Finding a team:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Finding a team is an important point. &lt;/li&gt;
&lt;li&gt;You would like to have an open-minded and active team (Even if they have less knowledge) instead of having all the knowledgeable and inactive team. &lt;/li&gt;
&lt;li&gt;You can easily find the team members via social media, communities, developer groups, etc. &lt;/li&gt;
&lt;li&gt;While selecting a team make sure every team member is good at some of the other techs and will be able to devote the maximum time throughout the hackathon.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#arranging-a-team-meeting"&gt;
  &lt;/a&gt;
  📌 Arranging a team meeting:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Actually, this enhances the conversation between the team members and makes everyone feel like good friends of each other. &lt;/li&gt;
&lt;li&gt;Try to introduce yourself to other team members and get to know about their background, knowledge, experience, etc. &lt;/li&gt;
&lt;li&gt;The meet need not be too long it can be as short as 15 mins or 30 mins.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#ideas"&gt;
  &lt;/a&gt;
  📌 Ideas:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The hackathon portal shows all the accepted techs in advance to their portals so you can start brainstorming with your team members and start gathering the resources you might require. &lt;/li&gt;
&lt;li&gt;Find an idea that helps the community out there. &lt;/li&gt;
&lt;li&gt;Do something that spreads awareness or helps people instead of building a money-making or profit-making model. &lt;/li&gt;
&lt;li&gt;Always think of an idea that can actually create a difference in society and can actually help the people out there.&lt;/li&gt;
&lt;li&gt;Take your time to finalize the ideas. Giving the time turns out with a lot of creative ideas.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#team-work"&gt;
  &lt;/a&gt;
  📌 Team Work:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;After the hackathon starts officially you can get much information and doubts cleared in the opening ceremony of the event. &lt;/li&gt;
&lt;li&gt;Remember every team member of yours has some unique qualities and try to use them all to their fullest and distribute the work accordingly. &lt;/li&gt;
&lt;li&gt;If someone doesn't know something you are good at teaching them. This will increase your bonding and will boost their energy. &lt;/li&gt;
&lt;li&gt;Always be in consistent touch with each other and take constant follow backs of the work they are doing.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#build"&gt;
  &lt;/a&gt;
  📌 Build:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Building the project comes with lots of difficulties. So it is always useful to distribute the work and maintain the isolation of the tasks. &lt;/li&gt;
&lt;li&gt;Create milestones for your role and share those milestones will all of your team members. This helps in keeping the track of all the sections of the project. &lt;/li&gt;
&lt;li&gt;Don't forget to document the project side by side eg: Maintaining a Readme with all the info, screenshots, demo video, etc. this surely gives an extra edge to your project while they get reviewed by the judges' panel.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#pitch"&gt;
  &lt;/a&gt;
  📌 Pitch:
&lt;/h2&gt;

&lt;p&gt;Pitching has two phases:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#submission-"&gt;
  &lt;/a&gt;
  🚩 Submission :
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Always submit a brief extract of the project. Describe the smallest detail while submitting.&lt;/li&gt;
&lt;li&gt;Create a prototyping video as well. (PPT with a voice-over)&lt;/li&gt;
&lt;li&gt;Add Screenshots and links to the deployed version, Prototype video, source code, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#video-pitching-"&gt;
  &lt;/a&gt;
  🚩 Video Pitching :
&lt;/h3&gt;

&lt;p&gt;This usually happens on zoom. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Try wrapping up the ppt presentation in ~1 min as they give restricted time to present.&lt;/li&gt;
&lt;li&gt;Give more time to present on the live deployed version or the project (Your work comes over the ppts)&lt;/li&gt;
&lt;li&gt;In 10 min divide the time wisely. 

&lt;ul&gt;
&lt;li&gt;1 min for ppt presentation&lt;/li&gt;
&lt;li&gt;3 min for a live demo&lt;/li&gt;
&lt;li&gt;6 min for Q &amp;amp; A
More time to q&amp;amp;a because this creates the final impression on the judges.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Stick to the point and cause of the project while presenting and in q &amp;amp; a.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#results"&gt;
  &lt;/a&gt;
  📌 Results:
&lt;/h2&gt;

&lt;p&gt;Wait for the results and enjoy your efforts. Winning or losing doesn't matter at all. If you made friends, connections, awesome projects, had fun then you have already won! 🎉&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#personal-tips"&gt;
  &lt;/a&gt;
  📌 Personal Tips
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Don't start the project before starting the hackathon. This will raise the red flag while removing and sometimes they may disqualify&lt;/li&gt;
&lt;li&gt;Try to maintain frequent commits on the project repo instead of the entire project in a single commit. Otherwise, this may look copied.&lt;/li&gt;
&lt;li&gt;Try to enjoy the process and do for gaining experience instead of the prizes&lt;/li&gt;
&lt;li&gt;Always keep buffer time and milestones. This helps reduce the stress and change the plannings if needed.&lt;/li&gt;
&lt;li&gt;Keep healthy conversations with the team members.&lt;/li&gt;
&lt;li&gt;Help each other in completing their tasks as well.&lt;/li&gt;
&lt;li&gt;Seek help from the mentors and volunteers if needed. Trust me they are super helpful.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#thank-you-for-reading"&gt;
  &lt;/a&gt;
  ❤️ Thank you for reading ❤️
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#may-you-win-lots-of-hackathons"&gt;
  &lt;/a&gt;
  &lt;strong&gt;May you win lots of hackathons&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;🌏 Like | Follow | Share 🌏&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Above was my views entirely I would like to hear your view in the comments below 👇&lt;/em&gt;&lt;/p&gt;

</description>
      <category>hackathon</category>
      <category>discuss</category>
      <category>win</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>I made a simple note taking application named "Blink".</title>
      <author>Anon</author>
      <pubDate>Tue, 13 Apr 2021 07:40:17 +0000</pubDate>
      <link>https://dev.to/anon4620/i-made-a-simple-note-taking-application-named-blink-3gg8</link>
      <guid>https://dev.to/anon4620/i-made-a-simple-note-taking-application-named-blink-3gg8</guid>
      <description>&lt;p&gt;website:- &lt;a href="https://anon4620.github.io/Blink.github.io/"&gt;https://anon4620.github.io/Blink.github.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Github repository:- &lt;a href="https://github.com/ANON4620/Blink.github.io"&gt;https://github.com/ANON4620/Blink.github.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a note taking application I made for fun. Feel free to suggest improvements in the code. &lt;/p&gt;

&lt;p&gt;Recently, I started learning web development. I don't have much experience but I love programming and want to explore more.&lt;br&gt;
Whatever I learned is from the internet. I am a self-taught guy. Please let me know how to learn these stuff as I am a newbie.&lt;br&gt;
Sorry, for the bad english.&lt;br&gt;
Thank you.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Wave - The Open-source Software as a Service Starter Kit </title>
      <author>Bobby Iliev</author>
      <pubDate>Tue, 13 Apr 2021 07:30:51 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/wave-the-open-source-software-as-a-service-starter-kit-35h7</link>
      <guid>https://dev.to/bobbyiliev/wave-the-open-source-software-as-a-service-starter-kit-35h7</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Laravel &lt;a href="https://devdojo.com/wave"&gt;Wave&lt;/a&gt; is an open-source Software as a Service Starter Kit that can help you build your next great idea 💰. &lt;/p&gt;

&lt;p&gt;Wave is built with &lt;a href="https://laravel.com"&gt;Laravel&lt;/a&gt;, &lt;a href="https://voyager.devdojo.com"&gt;Voyager&lt;/a&gt;, &lt;a href="https://tailwindcss.com"&gt;TailwindCSS&lt;/a&gt;, and a few other awesome technologies. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h1&gt;

&lt;p&gt;Here are some of the awesome features that Wave provides out of the box ✨:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/authentication"&gt;Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/user-profiles"&gt;User Profiles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/user-impersonation"&gt;User Impersonation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/billing"&gt;Subscriptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/subscription-plans"&gt;Subscription Plans&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/user-roles"&gt;User Roles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/notifications"&gt;Notifications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/announcements"&gt;Announcements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/blog"&gt;Fully Functional Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/api"&gt;Out of the Box API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/admin"&gt;Voyager Admin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/themes"&gt;Customizable Themes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#github-repository"&gt;
  &lt;/a&gt;
  GitHub Repository
&lt;/h1&gt;

&lt;p&gt;You can get a copy of Laravel Wave here:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/thedevdojo"&gt;
        thedevdojo
      &lt;/a&gt; / &lt;a href="https://github.com/thedevdojo/wave"&gt;
        wave
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Wave - The Software as a Service Starter Kit, designed to help you build the SAAS of your dreams 🚀 💰 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://devdojo.com/wave" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bd40bc573d23939a802425e5c59173df2349e28960d553c95c7f2ac5b87b1071/68747470733a2f2f63646e2e646576646f6a6f2e636f6d2f6173736574732f696d672f6769746875622d776176652d6c6f676f2e737667" width="240"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.producthunt.com/posts/wave-2-0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3dd59d76171a19ca5915f09d1677a6634fe862210dd367f6452c6e7d0a7ff9cf/68747470733a2f2f63646e2e646576646f6a6f2e636f6d2f696d616765732f617072696c323032312f7570766f74652d70726f647563742d68756e742d696d672e706e67" height="200" width="auto"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Introduction&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://devdojo.com/wave" rel="nofollow"&gt;Wave&lt;/a&gt; is a Software as a Service Starter Kit that can help you build your next great idea 💰. Wave is built with &lt;a href="https://laravel.com" rel="nofollow"&gt;Laravel&lt;/a&gt;, &lt;a href="https://voyager.devdojo.com" rel="nofollow"&gt;Voyager&lt;/a&gt;, &lt;a href="https://tailwindcss.com" rel="nofollow"&gt;TailwindCSS&lt;/a&gt;, and a few other awesome technologies. Here are some of the awesome features ✨:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/authentication" rel="nofollow"&gt;Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/user-profiles" rel="nofollow"&gt;User Profiles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/user-impersonation" rel="nofollow"&gt;User Impersonation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/billing" rel="nofollow"&gt;Subscriptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/subscription-plans" rel="nofollow"&gt;Subscription Plans&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/user-roles" rel="nofollow"&gt;User Roles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/notifications" rel="nofollow"&gt;Notifications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/announcements" rel="nofollow"&gt;Announcements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/blog" rel="nofollow"&gt;Fully Functional Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/api" rel="nofollow"&gt;Out of the Box API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/admin" rel="nofollow"&gt;Voyager Admin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/themes" rel="nofollow"&gt;Customizable Themes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Demo&lt;/h2&gt;
&lt;p&gt;View a live &lt;a href="https://wave.devdojo.com" rel="nofollow"&gt;demo here&lt;/a&gt;, or deploy your own instance to DigitalOcean, by clicking the button below.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cloud.digitalocean.com/apps/new?repo=https://github.com/thedevdojo/wave/tree/main" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/df21703b4229f8d44f76c2d56073657a4ab450ca4566ba5d24d05bf528c298f8/68747470733a2f2f7777772e6465706c6f79746f646f2e636f6d2f646f2d62746e2d626c75652e737667" width="240" alt="Deploy to DO"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;To install Wave, you'll want to clone or download this repo:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/thedevdojo/wave.git project_name
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, we can install Wave with these &lt;strong&gt;4 simple steps&lt;/strong&gt;:&lt;/p&gt;
&lt;h3&gt;
1. Create a New Database&lt;/h3&gt;
&lt;p&gt;During the installation we need to use a MySQL database. You will need to create a new database and save the credentials for the next step.&lt;/p&gt;
&lt;h3&gt;
2. Copy the &lt;/h3&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/thedevdojo/wave"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h1&gt;

&lt;p&gt;View a live &lt;a href="https://wave.devdojo.com"&gt;demo here&lt;/a&gt;, or deploy your own instance to DigitalOcean, by clicking the button below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cloud.digitalocean.com/apps/new?repo=https://github.com/thedevdojo/wave/tree/main"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iIBAgYni--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.deploytodo.com/do-btn-blue.svg" width="240" alt="Deploy to DO"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h1&gt;

&lt;p&gt;To install Wave, you'll want to clone or download this repo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/thedevdojo/wave.git project_name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we can install Wave with these &lt;strong&gt;4 simple steps&lt;/strong&gt;:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-create-a-new-database"&gt;
  &lt;/a&gt;
  1. Create a New Database
&lt;/h3&gt;

&lt;p&gt;During the installation we need to use a MySQL database. You will need to create a new database and save the credentials for the next step.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-copy-the-raw-envexample-endraw-file"&gt;
  &lt;/a&gt;
  2. Copy the &lt;code&gt;.env.example&lt;/code&gt; file
&lt;/h3&gt;

&lt;p&gt;We need to specify our Environment variables for our application. You will see a file named &lt;code&gt;.env.example&lt;/code&gt;, you will need to duplicate that file and rename it to &lt;code&gt;.env&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then, open up the &lt;code&gt;.env&lt;/code&gt; file and update your &lt;em&gt;DB_DATABASE&lt;/em&gt;, &lt;em&gt;DB_USERNAME&lt;/em&gt;, and &lt;em&gt;DB_PASSWORD&lt;/em&gt; in the appropriate fields. You will also want to update the &lt;em&gt;APP_URL&lt;/em&gt; to the URL of your application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;APP_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;http://wave.test

&lt;span class="nv"&gt;DB_CONNECTION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;mysql
&lt;span class="nv"&gt;DB_HOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;127.0.0.1
&lt;span class="nv"&gt;DB_PORT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;3306
&lt;span class="nv"&gt;DB_DATABASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;wave
&lt;span class="nv"&gt;DB_USERNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;root
&lt;span class="nv"&gt;DB_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-add-composer-dependencies"&gt;
  &lt;/a&gt;
  3. Add Composer Dependencies
&lt;/h3&gt;

&lt;p&gt;Next, we will need to install all our composer dependencies by running the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;composer&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#4-run-migrations-and-seeds"&gt;
  &lt;/a&gt;
  4. Run Migrations and Seeds
&lt;/h3&gt;

&lt;p&gt;We need to migrate our database structure into our database, which we can do by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;migrate&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;&lt;br&gt;
Finally, we will need to seed our database with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;🎉 And that's it! You will now be able to visit your URL and see your Wave application up and running.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#watch-learn-and-build"&gt;
  &lt;/a&gt;
  Watch, Learn, and Build
&lt;/h1&gt;

&lt;p&gt;We've also got a full video series on how you can setup, build, and configure Wave. 🍿 You can watch first few videos for free, and additional videos will require a &lt;a href="https://devdojo.com/pro?ref=bobbyiliev"&gt;DevDojo Pro&lt;/a&gt; subscription. By subscribing to a &lt;a href="https://devdojo.com/pro"&gt;DevDojo Pro&lt;/a&gt; subscription you will also be supporting the ongoing development of this project. It's a win win! 🙌&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devdojo.com/course/wave"&gt;Click here to watch the Wave Video Series&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#documentation"&gt;
  &lt;/a&gt;
  Documentation
&lt;/h2&gt;

&lt;p&gt;Checkout the &lt;a href="https://wave.devdojo.com/docs"&gt;official documentation here&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;With Laravel Wave you can save time and focus on the functionality of your SaaS.&lt;/p&gt;

&lt;p&gt;If you like the project make sure to star it on GitHub 🙌&lt;/p&gt;

&lt;p&gt;Any feedback is also going to be highly appriciated!&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>php</category>
      <category>tailwindcss</category>
      <category>saas</category>
    </item>
    <item>
      <title>JavaScript detecting which key is pressed</title>
      <author>Chris Bongers</author>
      <pubDate>Tue, 13 Apr 2021 07:13:36 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/javascript-detecting-which-key-is-pressed-322g</link>
      <guid>https://dev.to/dailydevtips1/javascript-detecting-which-key-is-pressed-322g</guid>
      <description>&lt;p&gt;You might find yourself in a situation where certain keypresses might do something for your application or game.&lt;/p&gt;

&lt;p&gt;Today we'll be looking at how we can detect which key is pressed in JavaScript.&lt;/p&gt;

&lt;p&gt;The end result is this cool little playground:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0OjjxMdF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617951849345/d-f651Yu_.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0OjjxMdF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617951849345/d-f651Yu_.gif" alt="JavaScript detect keypress"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#detecting-keys-in-javascript"&gt;
  &lt;/a&gt;
  Detecting keys in JavaScript
&lt;/h2&gt;

&lt;p&gt;Let's start with the basics. We will need a way for JavaScript to be aware any key is pressed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onkeydown&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;key down&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will log all key down events, which is what we are looking for.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;e&lt;/code&gt; variable will contain the actual KeyBoardEvent, and it has quite the information inside.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QyjCrjjb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617950084879/qhTg11Mu-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QyjCrjjb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617950084879/qhTg11Mu-.png" alt="KeyBoardEvent log"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are a couple things we can use that are helpful in there.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;key: A string representation of the key pressed&lt;/li&gt;
&lt;li&gt;keyCode: The number associated with the key. This is mainly used to identify keys in code&lt;/li&gt;
&lt;li&gt;code: A combination to identify which side a key was pressed (leftMeta/rightMeta)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Knowing that, let's make a cool visual tool that will output these three elements for the user.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#html-structure"&gt;
  &lt;/a&gt;
  HTML Structure
&lt;/h2&gt;

&lt;p&gt;I'm going to be using Tailwind to make a quick styled application, the main setup will be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;body&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"my-auto mx-auto bg-gray-100"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"max-w-md py-4 px-8 bg-white shadow-lg rounded-lg my-20"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex justify-center -mt-16 hidden"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
        &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-20 h-20 object-cover rounded-full border-2 border-indigo-500 flex items-center justify-center bg-white text-3xl"&lt;/span&gt;
        &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"keyCodeLarge"&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-gray-600"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"info"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        Press any key to see the magic 🪄
      &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mt-4 text-gray-600 hidden"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;key: &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"key"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mt-2 text-gray-600 hidden"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;code: &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"code"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mt-2 text-gray-600 hidden"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;keyCode: &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"keyCode"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you might have noted, I've added some ids based on which we will add the represented value with JavaScript.&lt;/p&gt;

&lt;p&gt;I've also added an information paragraph for when we don't have any keypress yet.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#assigning-the-keypress-to-our-frontend"&gt;
  &lt;/a&gt;
  Assigning the keypress to our front-end
&lt;/h2&gt;

&lt;p&gt;We start by defining the variables we are going to be needing.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;key&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;code&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="nx"&gt;keyCode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;keyCode&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="nx"&gt;keyCodeLarge&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;keyCodeLarge&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="nx"&gt;info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;info&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="nx"&gt;hiddenElements&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.hidden&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a mix of the key information we will place and the hidden fields we need to show.&lt;/p&gt;

&lt;p&gt;Now in our keyDown function, we can act on this and place the right information.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onkeydown&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;[].&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hiddenElements&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;keyCode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keyCode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;keyCodeLarge&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keyCode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That is as simple as it gets!&lt;/p&gt;

&lt;p&gt;You can try it out in this Codepen.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/rebelchris/embed/eYgePZZ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>How to Add Testimonials to WordPress with Meta Box</title>
      <author>WP Meta Box Plugin</author>
      <pubDate>Tue, 13 Apr 2021 06:59:33 +0000</pubDate>
      <link>https://dev.to/wpmetabox/how-to-add-testimonials-to-wordpress-with-meta-box-21ip</link>
      <guid>https://dev.to/wpmetabox/how-to-add-testimonials-to-wordpress-with-meta-box-21ip</guid>
      <description>&lt;p&gt;Testimonial is a very popular feature on every business website. Adding testimonials to the homepage can considerably increase the credibility of your company and products, making it much more professional. Besides, you can also take advantage of it to add important keywords to the website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mYn561B2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/JMn7boJ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mYn561B2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/JMn7boJ.png" alt="Add Testimonials / reviews to the homepage of the WordPress website." width="1900" height="998"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;span&gt;Tip&lt;/span&gt;:&lt;/em&gt; a tutorial video is included at the end of this post.&lt;/p&gt;

&lt;p&gt;To effortlessly and quickly add testimonials, Meta Box plugin as well as its solution, MB Testimonials, is a powerful tool for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://metabox.io/plugins/mb-testimonials/"&gt;MB Testimonials&lt;/a&gt; is a ready-to-use solution available in the Meta Box lifetime bundle only. It gives you 7 pre-built templates and a lot of settings to set up your testimonials without touching any line of code.&lt;/p&gt;

&lt;p&gt;Let's get started. We only have 4 steps to go:&lt;/p&gt;

&lt;h2&gt;Step 1: Install Meta Box and MB Testimonials&lt;/h2&gt;

&lt;p&gt;As I have said, MB Testimonials is only available in the lifetime bundle of Meta Box. If you haven't got one yet, don't worry, please click &lt;a href="https://metabox.io/pricing/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After purchasing, log in to your account on &lt;a href="https://metabox.io/"&gt;metabox.io&lt;/a&gt; in &lt;a href="https://metabox.io/my-account/"&gt;My Account&lt;/a&gt; and download the MB Testimonials solution, then install and activate it on your website.&lt;/p&gt;

&lt;p&gt;Keep in mind that you have to install Meta Box framework from &lt;a href="https://wordpress.org/plugins/meta-box/"&gt;wordpress.org&lt;/a&gt; to use MB Testimonials.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M1Z6S5aq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/joxvG7n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M1Z6S5aq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/joxvG7n.png" alt="Install Meta Box plugin and MB Testimonials solution." width="989" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Step 2: Add Content to Testimonials with MB Testimonials&lt;/h2&gt;

&lt;p&gt;After installing MB Testimonials, you will have a &lt;strong&gt;Testimonials &lt;/strong&gt;menu in &lt;strong&gt;Dashboard&lt;/strong&gt;. Go there and click &lt;strong&gt;Add New &lt;/strong&gt;to create a new post.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PR9M9AAs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/RyEZSdf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PR9M9AAs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/RyEZSdf.png" alt="Add a new testimonial / review with MB Testimonials solution" width="831" height="882"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note that in each Testimonial post, you can add many reviews from different users.&lt;/p&gt;

&lt;p&gt;Add the content of each testimonial here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h6GBlpOn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/G59IyjZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h6GBlpOn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/G59IyjZ.png" alt="Add the content for the testimonial / review on the back end of WordPress website." width="1600" height="784"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A testimonial includes 2 irreplaceable contents: user name and user reviews. However, to make testimonials more credible and trustworthy, you should also add positions and images of the reviewers, attached a link if available, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2oetKboA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/b2Onf2x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2oetKboA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/b2Onf2x.png" alt="Add positions and images of the reviewers." width="1586" height="929"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;strong&gt;Add more &lt;/strong&gt;to add other testimonials, or click &lt;strong&gt;Remove &lt;/strong&gt;to delete testimonials.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--416aKkGV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/byK1mL6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--416aKkGV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/byK1mL6.png" alt="Add other testimonials / reviews to your WordPress website" width="1585" height="908"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notably, you can drag and drop to arrange testimonials easily like in the gif below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9cVisJMb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/Ytwl4TC.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9cVisJMb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/Ytwl4TC.gif" alt="Drag and drop to arrange testimonials easily with MB Testimonials solution of Meta Box." width="1603" height="929"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, let's customize testimonials' display and layout.&lt;/p&gt;

&lt;h2&gt;Step 3: Customize Testimonials' Display and Layout&lt;/h2&gt;

&lt;p&gt;When scrolling down you will see the &lt;strong&gt;Display &lt;/strong&gt;tab which has 7 built-in templates for testimonials.&lt;/p&gt;

&lt;p&gt;This is an outstanding feature of MB Testimonials in comparison to other plugins. It helps you to immediately apply the built-in templates to testimonials without any adjustment.&lt;/p&gt;

&lt;p&gt;The templates are illustrated in the list below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fg3U1lMi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/gtgzutL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fg3U1lMi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/gtgzutL.png" alt="Choose from 7 pre-made templates of MB Testimonials solution." width="1616" height="849"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When going to &lt;strong&gt;Click here&lt;/strong&gt;, you will see the code of the template you have just chosen. You can customize and add &lt;a href="https://metabox.io/series/custom-fields/"&gt;custom fields&lt;/a&gt; to the template using HTML, or delete the code and create a new one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U5xcA93H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/WvGa4ox.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U5xcA93H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/WvGa4ox.gif" alt="Customize and add custom fields to the review template using HTML." width="1588" height="912"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the &lt;strong&gt;Styling &lt;/strong&gt;tab, you can customize other parameters of testimonials, for example, width, number of columns, slider's mode, ... There are a variety of options for you to make your testimonial more stunning.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qPByEaAn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/WVCHFEi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qPByEaAn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/WVCHFEi.png" alt="Customize other parameters of testimonials / reviews" width="1595" height="873"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After adding and customizing, just click &lt;strong&gt;Publish&lt;/strong&gt; to get your work done.&lt;/p&gt;

&lt;h2&gt;Step 4: Display Testimonials on the Front End&lt;/h2&gt;

&lt;p&gt;Once you click &lt;strong&gt;Publish&lt;/strong&gt;, the plugin will give you a shortcode of the Testimonials post you just made.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MZRk50UH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/s1cdfZg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MZRk50UH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/s1cdfZg.png" alt="Use this shortcode to display the testimonials at any position on the WordPress website." width="1600" height="706"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Use this shortcode to display the testimonials at any position that you want.&lt;/p&gt;

&lt;p&gt;For example, I inserted my shortcode to a new page:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5V2Yyskk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/JW6Q6Ye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5V2Yyskk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/JW6Q6Ye.png" alt="Insert the shortcode to the front end of WordPress website." width="789" height="382"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And this is the result that I got on the front end:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x976X7iQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/k3Pg8Na.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x976X7iQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/k3Pg8Na.gif" alt="The testimonials / reviews display on the front end." width="1570" height="612"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There your work is done! Very simple, isn't it?&lt;/p&gt;

&lt;h2&gt;Tutorial Video&lt;/h2&gt;

&lt;p&gt;We made a video for this tutorial, you may want to watch it:&lt;/p&gt;

&lt;p&gt;https://youtu.be/gNjQwRfI3kY&lt;/p&gt;

&lt;h2&gt;Last Words&lt;/h2&gt;

&lt;p&gt;With MB Testimonials solution, adding testimonials to WordPress websites becomes super easy. You just need to take some minutes to get everything finished. Even non-expert users can use it smoothly. Additionally, as you can see, this solution includes 7 built-in templates and allows you to conveniently customize a lot of other factors.&lt;/p&gt;

&lt;p&gt;In addition to MB Testimonials, Meta Box has other useful solutions, you can refer to them &lt;a href="https://metabox.io/product-category/solutions/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Meta Box plugin not only helps you add and manage custom fields but also has numerous practical and interesting apps. To get to know more about the apps and custom fields of Meta Box, don't forget to read our upcoming tutorials on &lt;a href="https://metabox.io/blog/"&gt;metabox.io&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>wordpress</category>
      <category>testimonial</category>
      <category>metabox</category>
    </item>
    <item>
      <title>ActiveRecord - Value Objects with serialize</title>
      <author>Adam Stomski</author>
      <pubDate>Tue, 13 Apr 2021 06:41:46 +0000</pubDate>
      <link>https://dev.to/adamstomski/activerecord-value-objects-with-serialize-28d7</link>
      <guid>https://dev.to/adamstomski/activerecord-value-objects-with-serialize-28d7</guid>
      <description>&lt;p&gt;I love Value Objects. They can improve and clean up your project by insane amount, yet they are simple and easy to understand for almost everyone. Not only easy to understand but actually easy to write as well!&lt;/p&gt;

&lt;p&gt;But wait, most of the Value Object implementations are just Plain Ruby Objects right? What if I use ActiveRecord? &lt;/p&gt;

&lt;p&gt;Doesn't matter if you like it, or just have to live with the legacy written by hardcore Rails developer - ActiveRecord has a way to inject Value Objects. In both cases they will improve your life and domain model of your code. Lets take a look at one of the simplest possibilities.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-underestimated-serialize"&gt;
  &lt;/a&gt;
  The underestimated serialize
&lt;/h3&gt;

&lt;p&gt;One of the simplest method to use is the &lt;a href="https://api.rubyonrails.org/classes/ActiveRecord/AttributeMethods/Serialization/ClassMethods.html"&gt;serialize&lt;/a&gt; method. All it does it is loading data into object using &lt;code&gt;load&lt;/code&gt; method and dumps the data into db using &lt;code&gt;dump&lt;/code&gt;. Its simple yet powerful mechanism. Lets get some example (implemented as internal class for simplicity):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CreateMeetings&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Migration&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;6.0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;change&lt;/span&gt;
    &lt;span class="n"&gt;create_table&lt;/span&gt; &lt;span class="ss"&gt;:meetings&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;integer&lt;/span&gt; &lt;span class="ss"&gt;:time_limit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;default: &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

      &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;timestamps&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meeting&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ApplicationRecord&lt;/span&gt;
  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TimeLimit&lt;/span&gt;
    &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;Comparable&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time_limit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;time_limit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_i&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time_limit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time_limit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time_limit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="vi"&gt;@time_limit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_i&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;to_i&lt;/span&gt;
      &lt;span class="n"&gt;time_limit&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;&amp;lt;&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;to_i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_i&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;minimum?&lt;/span&gt;
      &lt;span class="n"&gt;time_limit&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;maximum?&lt;/span&gt;
      &lt;span class="n"&gt;time_limit&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;seconds&lt;/span&gt;
      &lt;span class="n"&gt;time_limit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;minutes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;seconds&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="kp"&gt;private&lt;/span&gt;

    &lt;span class="nb"&gt;attr_reader&lt;/span&gt; &lt;span class="ss"&gt;:time_limit&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;serialize&lt;/span&gt; &lt;span class="ss"&gt;:time_limit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;TimeLimit&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see there is implementation of &lt;code&gt;TimeLimit&lt;/code&gt; value object, which allows us to have domain related behaviors (&lt;code&gt;minimum?&lt;/code&gt;, &lt;code&gt;maximum?&lt;/code&gt;, &lt;code&gt;seconds&lt;/code&gt; methods). Its then simply registered into ActiveRecord by using &lt;code&gt;serialize&lt;/code&gt; macro.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;serialize&lt;/span&gt; &lt;span class="ss"&gt;:time_limit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;TimeLimit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lets see it in action:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; :004 &amp;gt; meeting = Meeting.new
 :005 &amp;gt; meeting
 =&amp;gt; #&amp;lt;Meeting id: nil, time_limit: #&amp;lt;Meeting::TimeLimit:0x00007f9744443120 @time_limit=1&amp;gt;, created_at: nil, updated_at: nil&amp;gt;
 :006 &amp;gt; meeting.time_limit.minimum?
 =&amp;gt; true 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see its clearly visible that there is separate object used. We can call all the methods on it directly, without any Rails magic involved. Lets try to change the value using setter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; :014 &amp;gt; meeting.time_limit = 5
 :015 &amp;gt; meeting
 =&amp;gt; #&amp;lt;Meeting id: nil, time_limit: #&amp;lt;Meeting::TimeLimit:0x000056020ecfec50 @time_limit=5&amp;gt;, created_at: nil, updated_at: nil&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Interesting right? A new object with our value! ActiveRecord is using the &lt;code&gt;load&lt;/code&gt; method to create it for us. Lets do a save then!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; :016 &amp;gt; meeting.save
   (0.1ms)  begin transaction
  Meeting Create (0.5ms)  INSERT INTO "meetings" ("time_limit", "created_at", "updated_at") VALUES (?, ?, ?)  [["time_limit", 5], ["created_at", "2021-04-12 20:32:06.867606"], ["updated_at", "2021-04-12 20:32:06.867606"]]
   (17.9ms)  commit transaction
 =&amp;gt; true
 :017 &amp;gt; meeting
 =&amp;gt; #&amp;lt;Meeting id: 2, time_limit: #&amp;lt;Meeting::TimeLimit:0x000056020ebf89c8 @time_limit=5&amp;gt;, created_at: "2021-04-12 20:32:06", updated_at: "2021-04-12 20:32:06"&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Great so it saves a correct value! Turns out it used our &lt;code&gt;dump&lt;/code&gt; method correctly. But this is the same record in memory, lets fetch our newly created meeting from db instead:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; :024 &amp;gt; meeting = Meeting.last
  Meeting Load (0.2ms)  SELECT "meetings".* FROM "meetings" ORDER BY "meetings"."id" DESC LIMIT ?  [["LIMIT", 1]]
 :025 &amp;gt; meeting
 =&amp;gt; #&amp;lt;Meeting id: 2, time_limit: #&amp;lt;Meeting::TimeLimit:0x000056020b8a3618 @time_limit=5&amp;gt;, created_at: "2021-04-12 20:32:06", updated_at: "2021-04-12 20:32:06"&amp;gt; 
 :026 &amp;gt; meeting.time_limit.seconds
 =&amp;gt; 300 seconds 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is so cool right? Simple yet powerful interface, almost no magic involved. This allows us to create Plain Old Ruby Objects and inject them into our ActiveRecord based entities without problems. No need to spread your &lt;code&gt;maximum&lt;/code&gt; logic all over the place (Service Objects I'm looking at you...), we can encapsulate them and still use our beloved(hated?) models!&lt;/p&gt;




&lt;p&gt;For "get rid of AR" developers: you can use this mechanism to inject a domain modeling into legacy code without problems. Ruby duck typing is your friend:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# using ActiveRecord:&lt;/span&gt;
&lt;span class="n"&gt;meeting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;time_limit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;seconds&lt;/span&gt;

&lt;span class="c1"&gt;# using some PORO or w/e:&lt;/span&gt;
&lt;span class="n"&gt;meeting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;time_limit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;seconds&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yes, there is no difference, you can refactor at any point of time, and your code will remain untouched. Isn't that beautiful?&lt;/p&gt;




&lt;p&gt;There is one thing to mention that might catch you off guard: object creation validation. Lets modify our example a bit:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TimeLimit&lt;/span&gt;
    &lt;span class="c1"&gt;# ...&lt;/span&gt;

    &lt;span class="no"&gt;InvalidLimitError&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Class&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;StandardError&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time_limit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="no"&gt;InvalidLimitError&lt;/span&gt; &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;include?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time_limit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="vi"&gt;@time_limit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time_limit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_i&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

   &lt;span class="c1"&gt;# ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And try to create invalid limit:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; :034 &amp;gt; meeting.time_limit = 100
 :035 &amp;gt; meeting.id
 :036 &amp;gt; meeting.time_limit
Traceback (most recent call last):
        3: from app/models/meeting.rb:10:in `load'
        2: from app/models/meeting.rb:10:in `new'
        1: from app/models/meeting.rb:16:in `initialize'
Meeting::TimeLimit::InvalidLimitError (Meeting::TimeLimit::InvalidLimitError)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, ActiveRecord does a lazy loading on serialized attributes, so the &lt;code&gt;load&lt;/code&gt; method is called after first call - &lt;strong&gt;not on the assignment&lt;/strong&gt;. Keep that in mind when writing this kind of code.&lt;/p&gt;




&lt;p&gt;Useful links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://api.rubyonrails.org/classes/ActiveRecord/AttributeMethods/Serialization/ClassMethods.html"&gt;serialize documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://martinfowler.com/bliki/ValueObject.html"&gt;Value Object by Martin Fowler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zverok/good-value-object"&gt;Good Value Object Conventions for Ruby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
      <category>oop</category>
      <category>ddd</category>
    </item>
    <item>
      <title>My First React Project</title>
      <author>Siva Kumar</author>
      <pubDate>Tue, 13 Apr 2021 06:26:55 +0000</pubDate>
      <link>https://dev.to/siva2910/my-first-react-project-24lo</link>
      <guid>https://dev.to/siva2910/my-first-react-project-24lo</guid>
      <description>&lt;p&gt;Hosted on Netlify&lt;br&gt;
Link :&lt;br&gt;
&lt;a href="https://606debb60331a600d3bfd519--react-pictures-project.netlify.app/"&gt;https://606debb60331a600d3bfd519--react-pictures-project.netlify.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open to suggestions&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>netlify</category>
    </item>
  </channel>
</rss>
