<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>P2P Crypto Exchange Script</title>
      <author>RadinDev</author>
      <pubDate>Fri, 20 Aug 2021 07:11:36 +0000</pubDate>
      <link>https://dev.to/radindev1/p2p-crypto-exchange-script-1k9o</link>
      <guid>https://dev.to/radindev1/p2p-crypto-exchange-script-1k9o</guid>
      <description>&lt;p&gt;Peer-to-peer, abbreviated P2P, is a collection of interconnected devices that store and share specific files and documents. Each of these devices or systems is called a node. In this structure, each node has the same power and tasks.&lt;br&gt;
But the term p2p or peer-to-peer has taken on a different color and flavor in financial technologies. It is usually used to refer to the exchange of cryptocurrencies on a person-to-person and decentralized basis. A &lt;a href="https://radindev.com/p2p-cryptocurrency-exchange-software/"&gt;p2p crypto exchange software&lt;/a&gt; records the bid price of the buyer and the seller and, if they match, connects them to make the exchange. Some of the more advanced platforms have even provided a platform for automatic borrowing based on smart contracts.&lt;br&gt;
Let's see where P2P was first used.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-p2p-networks-work"&gt;
  &lt;/a&gt;
  How P2P networks work:
&lt;/h2&gt;

&lt;p&gt;It was stated above that a p2p system is an aggregate of interconnected systems that have the same tasks and power. There is no administrator or admin or supervisor in this system because each node keeps a copy of the file and plays two roles simultaneously. One server and one client.&lt;br&gt;
So each node can download files from other nodes. While in a centralized system, client devices download information from a centralized server.&lt;br&gt;
In P2P networks, networked devices share files stored on their drives. Using software designed to mediate data sharing, users can search for other devices on the web, find and download files. Once the user downloads the file, it can act as the source of that file.&lt;br&gt;
Simply put, a node acts as a client when downloading from other sources, but when it acts as a server, it is a resource from which other nodes can download files. (This can happen at the same time.)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#p2p-history"&gt;
  &lt;/a&gt;
  P2P history:
&lt;/h2&gt;

&lt;p&gt;For the first time in the '80s, after introducing computers, one of the first examples of a user network was Internet Relay Chat, which was a way to send text and chat between two people.&lt;br&gt;
In 1999, Napster introduced a P2P network for music sharing. This service made it possible for anyone to share their favorite music with others.&lt;br&gt;
In 2000, a project called Gnutella started decentralized peer-to-peer sharing, which is still ongoing. Gnutella allows users to access folders on other systems.&lt;br&gt;
Finally, it was in 2009 that Satoshi Nakamoto introduced the Bitcoin network as a peer-to-peer network. Perhaps the most famous sentence in the world about P2P is the first sentence of Bitcoin White Paper:&lt;br&gt;
Bitcoin: A Peer-to-Peer Electronic Cash System&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PHqWt6j---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8nm2qfkp5l59js3be45j.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PHqWt6j---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8nm2qfkp5l59js3be45j.jpg" alt="bitcoin white paper"&gt;&lt;/a&gt;&lt;br&gt;
Most people have never heard of P2P before Bitcoin.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages-of-p2p-networks"&gt;
  &lt;/a&gt;
  Advantages of P2P networks:
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Elimination of intermediaries: From the point of view of some economic actors, probably the most essential advantage of P2P is the elimination of intermediaries such as banks or financial and credit institutions.&lt;br&gt;
In this way, digital currency is transferred directly from one person's wallet to another, and no bank in the middle plays the role of intermediary.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;High security: Many others believe that much more security of this system than centralized client-server systems is the most significant advantage of p2p. It is P2P that protects digital currencies such as bitcoin against Dos attacks. Dos is a type of cyber attack that takes the server off the network and out of the reach of users. However, since peer-to-peer information systems are divided among many nodes, they are resistant to these attacks.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Avoid censorship: Avoiding censorship is another benefit of peer-to-peer networks. Because no one has the permission and power to block users' accounts, some people, such as merchants, see cryptocurrencies as a surefire way to prevent government payments from being blocked.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#disadvantages-of-p2p-networks"&gt;
  &lt;/a&gt;
  Disadvantages of P2P networks:
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Scalability: Because distributed offices must be updated at each node instead of the central server, adding any transaction in the blockchain requires a great deal of computing power. While this increases security, it dramatically reduces efficiency and is one of the main obstacles to scalability and widespread acceptance. However, blockchain encoders and developers are exploring options that may be used as scalability solutions. Prominent examples are the Lightning network, the atrium plasma, and the Wembley protocol.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hard fork attacks: Another potential limitation is related to seizures during a hard fork. Because most blockchains are decentralized and open-source, nodes can freely copy and modify the code, detach from the main chain, and form a new parallel network. A hard fork is perfectly normal and is not a threat in itself. But if security measures are not taken properly, both chains will be vulnerable to replay attacks.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In addition, the distributed nature of P2P networks makes it difficult to control and regulate them. For example, several P2P programs and companies have engaged in illegal activities and copyright infringement.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unstructured-p2p-networks"&gt;
  &lt;/a&gt;
  Unstructured P2P networks
&lt;/h2&gt;

&lt;p&gt;In unstructured P2P networks, there is no specific organization of nodes. In this network, participants communicate with each other randomly. These systems are resistant to high churn activity (i.e., multiple nodes frequently joining and exiting the web).&lt;br&gt;
Although this type of network is easier to build, unstructured P2P grids may require more CPU and memory because search queries are sent to as many people as possible or so-called peers. These requests will fill the network, especially if a small number of nodes provide the desired content.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#structured-p2p-networks"&gt;
  &lt;/a&gt;
  Structured P2P networks
&lt;/h2&gt;

&lt;p&gt;Structured P2P networks have an organized architecture. This architecture allows nodes to search for files effectively, even if the content is not widely available. In most cases, this is done using hash functions that facilitate database search.&lt;br&gt;
While structured networks may be more efficient, they are usually more centralized and require higher operating and maintenance costs. Of course, structured networks have less resistance when faced with high churn activity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hybrid-or-hybrid-p2p-networks"&gt;
  &lt;/a&gt;
  Hybrid or hybrid P2P networks
&lt;/h2&gt;

&lt;p&gt;P2P hybrid networks combine the typical client-server (client-server) model with some aspects of one-to-one architecture. For example, a central server may be designed to facilitate communication between peers or individuals.&lt;br&gt;
This network has a better overall performance compared to the other P2P networks mentioned. Usually, some of the main advantages of each approach are combined with the other, and finally, a considerable degree of efficiency and decentralization is achieved.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#top-5-p2p-cryptocurrency-exchange-platforms"&gt;
  &lt;/a&gt;
  top 5 p2p cryptocurrency exchange platforms:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#paxful"&gt;
  &lt;/a&gt;
  Paxful:
&lt;/h3&gt;

&lt;p&gt;One of the world's leading peer-to-peer exchange currency brands, founded in 2015, is Paxful, which has many fans worldwide.&lt;br&gt;
Paxful has made various payment methods available to its users; methods such as Bank Transfer, CashU, Paypal, Western Union.&lt;br&gt;
The cost that Paxful charges for exchanges are equal to 1% of the total, which is the seller's responsibility. In other words, buying a cryptocurrency in Paxful will not cost you extra.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N09dFiKx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qtfrxxhb7yataqwm75a.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N09dFiKx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qtfrxxhb7yataqwm75a.jpg" alt="paxful,a p2p crypto exchange software"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#localbitcoins"&gt;
  &lt;/a&gt;
  Localbitcoins:
&lt;/h3&gt;

&lt;p&gt;The Finnish company, headquartered in Helsinki, started in 2012. One of the honors of this company is it's most popular in 2017.&lt;br&gt;
The interesting point is that when buying a Cryptocurrency from LocalBitcoins site and the usual methods that Paxful also offers, you can give money to the other party in cash and buy a Cryptocurrency. (Of course, this feature was removed in 2019.)&lt;br&gt;
The cost of Bitcoin trading commission on the LocalBitcoins site is zero.&lt;br&gt;
It should be noted that this website has been hacked once, and it does not make sense to keep your bitcoins in its wallet. Be sure to transfer the bitcoins to your wallet.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zL9Vw4U3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/srgbspotjktaefw606v0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zL9Vw4U3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/srgbspotjktaefw606v0.jpg" alt="localbitcoins as a cryptocurrency exchange platform"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#binance-p2p"&gt;
  &lt;/a&gt;
  Binance P2P:
&lt;/h3&gt;

&lt;p&gt;Probably the most well-known platform for currency exchange is Binance Exchange. The company was founded in 2017 by Changpen Zhao and is currently the most prominent digital currency exchange globally.&lt;br&gt;
The large company's service to most countries globally and support for more than 31 different Fiat currencies has multiplied its popularity.&lt;br&gt;
Binance also supports tether, Bitcoin, Binance USD, BNB, Ethereum, and many more cryptocurrencies.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--syQ2Y3xT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/id3gl3rgu7gtuoe31vdz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--syQ2Y3xT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/id3gl3rgu7gtuoe31vdz.jpg" alt="binance p2p crypto exchange website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wazirx"&gt;
  &lt;/a&gt;
  WazirX:
&lt;/h3&gt;

&lt;p&gt;A few months after the establishment of Binance, the WazirX P2P platform was launched in India and soon became the most trusted peer-to-peer password exchange script.&lt;br&gt;
The main reason for the popularity of this software was that for the first time in the world, it used an automatic p2p matching engine. So instead of choosing the buyer or seller manually, the system does this automatically.&lt;br&gt;
Surprisingly, the exchange cost in WazirX is zero. Isn't that great?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_o-U4Jhm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rixno2vylzn9aq2x9rto.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_o-U4Jhm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rixno2vylzn9aq2x9rto.jpg" alt="wazirx the best cryptocurrency exchange scrippt is india"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#remitano"&gt;
  &lt;/a&gt;
  Remitano:
&lt;/h3&gt;

&lt;p&gt;Remitano was founded in Singapore in the year of its establishment, and with the reputation, it has gained over the years, it has reassured many crypto exchanges.&lt;br&gt;
Remitano's fantastic user interface has had an enormous impact on this much-welcomed platform.&lt;br&gt;
As for the negative points of Remitano, let's say that you have to give one percent of the total amount to the exchange when exchanging the password. You also have to pay a fee when you want to settle the account.&lt;br&gt;
Now, why is it still so popular with all the money it takes from its customers?&lt;br&gt;
That's a good question. Because Remitano has an outstanding level of security and its service is excellent.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gZuQ7sb_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6nhux34ghmcyk8b1d9gh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gZuQ7sb_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6nhux34ghmcyk8b1d9gh.jpg" alt="remitano, a secure p2p crypto exchange software "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#p2p-crypto-exchange-website-development"&gt;
  &lt;/a&gt;
  p2p &lt;a href="https://radindev.com/cryptocurrency-exchange-development/"&gt;crypto exchange website development&lt;/a&gt;:
&lt;/h2&gt;

&lt;p&gt;The cost of developing and designing p2p software for exchanging bitcoins and other cryptocurrencies depends on many factors.&lt;br&gt;
First, you need to fully determine what features you want to offer your customers and design a complete mind map for it and then put it on paper and discuss with your consultants whether they are efficient or not. Features like:&lt;br&gt;
• Stop limit&lt;br&gt;
• Margin order&lt;br&gt;
• OCO&lt;br&gt;
• Future order&lt;br&gt;
• OTC order&lt;br&gt;
• And much more&lt;br&gt;
Each of these features can have a significant impact on your cost.&lt;br&gt;
For example, adding a stop limit will &lt;strong&gt;increase your cost by 25% of the initial price&lt;/strong&gt;, while &lt;strong&gt;25 working days will be added&lt;/strong&gt; to the time. Or, a margin order adds &lt;strong&gt;up to 40% to your initial cost&lt;/strong&gt; and takes &lt;strong&gt;up to 35 days&lt;/strong&gt;. The figure below shows the approximate price increase of other factors affecting the P2P price.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6R3NCgDO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibpg38qx0z25ldvlm0xu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6R3NCgDO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibpg38qx0z25ldvlm0xu.png" alt="added price of each feature to the crypto exchange development website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In addition to features, other factors can affect the price, such as:&lt;br&gt;
• Programming languages ​​and technologies used&lt;br&gt;
• The company you order from&lt;br&gt;
• Mobile application&lt;br&gt;
• Multilingualism&lt;br&gt;
• Crypto payment gateways&lt;/p&gt;

&lt;p&gt;In this article, we tried to provide all the points related to the currency exchange platform development. We hope you find it helpful.&lt;/p&gt;

</description>
      <category>crypto</category>
      <category>blockchain</category>
      <category>p2p</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Some really Amazing opensource programs and internships one should check out - 2021</title>
      <author>Akash Biswas</author>
      <pubDate>Fri, 20 Aug 2021 06:54:31 +0000</pubDate>
      <link>https://dev.to/akshbswas98/some-really-amazing-opensource-programs-and-internships-one-should-check-out-2021-2e2b</link>
      <guid>https://dev.to/akshbswas98/some-really-amazing-opensource-programs-and-internships-one-should-check-out-2021-2e2b</guid>
      <description>&lt;p&gt;Here are some 25+ programs you should definitely check out if you are starting into opensource - &lt;br&gt;
🎈🎈🎈&lt;br&gt;
Reinforcement Learning Open Source Fest - &lt;a href="https://www.microsoft.com/en-us/research/academic-program/rl-open-source-fest/"&gt;https://www.microsoft.com/en-us/research/academic-program/rl-open-source-fest/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LFX Mentorship Program - &lt;a href="https://mentorship.lfx.linuxfoundatio"&gt;https://mentorship.lfx.linuxfoundatio&lt;/a&gt;...&lt;br&gt;
CNCF Mentoring - &lt;a href="https://mentorship.lfx.linuxfoundation.org/#projects_all"&gt;https://mentorship.lfx.linuxfoundation.org/#projects_all&lt;/a&gt;&lt;br&gt;
MLH Fellowship - &lt;a href="https://fellowship.mlh.io"&gt;https://fellowship.mlh.io&lt;/a&gt;&lt;br&gt;
Google Summer of Code - &lt;a href="https://summerofcode.withgoogle.com/about/"&gt;https://summerofcode.withgoogle.com/about/&lt;/a&gt;&lt;br&gt;
LFN Mentorship Program - &lt;a href="https://wiki.lfnetworking.org/display"&gt;https://wiki.lfnetworking.org/display&lt;/a&gt;...&lt;br&gt;
Linux Kernel Mentorship Program - &lt;a href="https://wiki.linuxfoundation.org/lkmp"&gt;https://wiki.linuxfoundation.org/lkmp&lt;/a&gt; &lt;br&gt;
GNOME Internships - &lt;a href="https://wiki.gnome.org/Outreach"&gt;https://wiki.gnome.org/Outreach&lt;/a&gt;&lt;br&gt;
Outreachy Internships - &lt;a href="https://www.outreachy.org"&gt;https://www.outreachy.org&lt;/a&gt;&lt;br&gt;
Google Season of Docs - &lt;a href="https://developers.google.com/season-of-docs/docs/get-started"&gt;https://developers.google.com/season-of-docs/docs/get-started&lt;/a&gt;&lt;br&gt;
X.Org Endless Vacation of Code - &lt;a href="https://www.x.org/wiki/XorgEVoC/"&gt;https://www.x.org/wiki/XorgEVoC/&lt;/a&gt;&lt;br&gt;
Julia Seasons of Contributions (JSoC) - &lt;a href="https://julialang.org/"&gt;https://julialang.org/&lt;/a&gt;&lt;br&gt;
Summer of Haskell - &lt;a href="https://summer.haskell.org"&gt;https://summer.haskell.org&lt;/a&gt;&lt;br&gt;
Open Mainframe Project Mentorship Program -&lt;a href="https://www.openmainframeproject.org/projects/mentorship-program"&gt;https://www.openmainframeproject.org/projects/mentorship-program&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;24 Pull Requests - &lt;a href="https://24pullrequests.com/about"&gt;https://24pullrequests.com/about&lt;/a&gt;&lt;br&gt;
OSOC - &lt;a href="https://osoc.be"&gt;https://osoc.be&lt;/a&gt;&lt;br&gt;
Hyperledger mentorship program - &lt;a href="https://wiki.hyperledger.org/display/INTERN/Hyperledger+Mentorship+Program"&gt;https://wiki.hyperledger.org/display/INTERN/Hyperledger+Mentorship+Program&lt;/a&gt;&lt;br&gt;
Season of KDE 2021 - &lt;a href="https://season.kde.org"&gt;https://season.kde.org&lt;/a&gt;&lt;br&gt;
DataONE Summer Internship Program - &lt;a href="https://old.dataone.org/internships"&gt;https://old.dataone.org/internships&lt;/a&gt;&lt;br&gt;
Intern at the FSF - &lt;a href="https://www.fsf.org/volunteer/internships"&gt;https://www.fsf.org/volunteer/internships&lt;/a&gt;&lt;br&gt;
Processing Foundation Fellowships - &lt;a href="https://processingfoundation.org/fellowships/"&gt;https://processingfoundation.org/fellowships/&lt;/a&gt;&lt;br&gt;
Hacktoberfest - &lt;a href="https://hacktoberfest.digitalocean.com"&gt;https://hacktoberfest.digitalocean.com&lt;/a&gt;&lt;br&gt;
FOSSASIA Codeheat - &lt;a href="https://codeheat.org"&gt;https://codeheat.org&lt;/a&gt;&lt;br&gt;
FOSSASIA Internship Program - &lt;a href="https://docs.google.com/forms/d/e/1FA"&gt;https://docs.google.com/forms/d/e/1FA&lt;/a&gt;...&lt;br&gt;
DrivenData Competitions - &lt;a href="https://www.drivendata.org/competitions/"&gt;https://www.drivendata.org/competitions/&lt;/a&gt;&lt;br&gt;
Kubernetes Release Team Shadows - &lt;a href="https://github.com/kubernetes/sig-rel"&gt;https://github.com/kubernetes/sig-rel&lt;/a&gt;... &lt;/p&gt;

</description>
      <category>opensource</category>
      <category>internships</category>
      <category>2021</category>
      <category>opensource2021</category>
    </item>
    <item>
      <title>Work from Home setup of an Indian Developer 🇮🇳 </title>
      <author>Jyotishman Saikia</author>
      <pubDate>Fri, 20 Aug 2021 05:43:21 +0000</pubDate>
      <link>https://dev.to/jyotishman/work-from-home-setup-of-an-indian-developer-255b</link>
      <guid>https://dev.to/jyotishman/work-from-home-setup-of-an-indian-developer-255b</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OahzW7k2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oeaaynouykl0dawntcp8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OahzW7k2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oeaaynouykl0dawntcp8.png" alt="Work from home setup"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#desk"&gt;
  &lt;/a&gt;
  Desk-
&lt;/h2&gt;

&lt;p&gt;The beginning of every setup is a clean and spacious desk. I am using a custom made wooden desk with a 19mm ply at the top and frame size of 6ft/3ft. The Frame is black painted and top base has a wooden mica.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#chair"&gt;
  &lt;/a&gt;
  Chair-
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pk78lKR2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prtbg5zqfvsks0258lby.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pk78lKR2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prtbg5zqfvsks0258lby.png" alt="Ergonomic chair"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am using an ergonomic office chair bought from Amazon at Rs 6700/- . The best part of this chair is that I can adjust both the  seat and the arm height according to  my requirement. The wheels runs smooth if I move while being seated.&lt;/p&gt;

&lt;p&gt;Amazon Link- &lt;a href="https://amzn.to/3DaAe47"&gt;https://amzn.to/3DaAe47&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#laptop-macbook-pro"&gt;
  &lt;/a&gt;
  Laptop- MacBook Pro
&lt;/h2&gt;

&lt;p&gt;I am using a &lt;strong&gt;MacBook Pro 16inch&lt;/strong&gt; 2019 with the configuration of 16GB RAM 2.6 GHz 6-Core Intel Core i7. This is my primary laptop and I use this to do all my tasks like- web development, app development, photo/video editing, watch movies etc&lt;/p&gt;

&lt;p&gt;Amazon Link- &lt;a href="https://amzn.to/3xVkwpy"&gt;https://amzn.to/3xVkwpy&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#secondary-monitor-dell-p-series-24inch"&gt;
  &lt;/a&gt;
  Secondary Monitor- Dell P Series 24-inch
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s_LdHqb7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eeq0lx8y3wyfzn4vnuy5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s_LdHqb7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eeq0lx8y3wyfzn4vnuy5.png" alt="Dell monitor 24 inch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am using this DELL 24 inch full &lt;strong&gt;HD IPS monitor&lt;/strong&gt; with an aspect ratio of 16:9 .  The monitor height can be adjusted according to my need and it can also do a 360 rotation. I bought this from Amazon at  Rs 13,000/-.&lt;/p&gt;

&lt;p&gt;Amazon Link- &lt;a href="https://amzn.to/3ggTkLL"&gt;https://amzn.to/3ggTkLL&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#external-keyboard"&gt;
  &lt;/a&gt;
  External Keyboard-
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WwSnshzw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ocirh2qagqlqyt3339kq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WwSnshzw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ocirh2qagqlqyt3339kq.jpg" alt="Keychron k2 keyboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Keyboard plays a major role in productivity of every developers. I am using a Keycron k2 RGB Mechanical keyboard with the option to use by  both bluetooth and cable. Keychron official website ships to most of the countries except India so I bought this mechanical keyboard from keychron India website at Rs 8000/- . The typing experience is indeed awesome. &lt;/p&gt;

&lt;p&gt;Website link- &lt;a href="https://keychron.in/product/keychron-k2-v-2/"&gt;https://keychron.in/product/keychron-k2-v-2/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#external-mouse-logitech-mx-master-3"&gt;
  &lt;/a&gt;
  External Mouse- Logitech MX Master 3
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---CMXHJzc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k49u5sbejl2v5sii20oc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---CMXHJzc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k49u5sbejl2v5sii20oc.png" alt="MX Master 3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am using a Logitech MX Master 3 series for productivity. Some of the best use-case which i love about this mouse are-&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Switching between windows with the switch key&lt;/li&gt;
&lt;li&gt;Browser tabs switching using the horizontal scroll.&lt;/li&gt;
&lt;li&gt;Browser forward/backward using the up/down buttons&lt;/li&gt;
&lt;li&gt;The obvious Vertical scroll with approx of 1000 lines per sec.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Amazon Link- &lt;a href="https://amzn.to/3xZ6svi"&gt;https://amzn.to/3xZ6svi&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mobile-devices"&gt;
  &lt;/a&gt;
  Mobile devices-
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;iPhone 11- I use this device as my primary phone as well as a testing device.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;iPad Air 2020 + Apple Pencil- I use this device primarily to note down my daily to-do tasks and a little bit of photo and video editing. Otherwise I used this to watch Netflix or Amazon Prime video.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;OnePlus 6t- This device used to be my primary phone before but now I use this device to test android related stuffs&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#earphone-and-mic"&gt;
  &lt;/a&gt;
  Earphone and mic-
&lt;/h2&gt;

&lt;p&gt;I am not a big fan of loud music so I always use a bluetooth earphone to listen to music or to do an audio/video chat. I use OnePlus bullet if I am doing some physical activity  else I use Boat AirDope if I am in the desk. &lt;/p&gt;

&lt;p&gt;Amazon Link- &lt;a href="https://amzn.to/2Wd8HxW"&gt;https://amzn.to/2Wd8HxW&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Amazon Link- &lt;a href="https://amzn.to/3D5bGtg"&gt;https://amzn.to/3D5bGtg&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#additional-accessories-which-are-there-in-my-desk"&gt;
  &lt;/a&gt;
  Additional accessories which are there in my desk-
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Extension board&lt;/li&gt;
&lt;li&gt;Flower pot&lt;/li&gt;
&lt;li&gt;Computer glass&lt;/li&gt;
&lt;li&gt;Laptop stand&lt;/li&gt;
&lt;li&gt;Monitor Stand&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you liked my setup or want to give any feedback  or suggestions , please comment down below. If possible please share your setup images in the comment section.&lt;/p&gt;

&lt;p&gt;Also I have started posting on twitter related to frontend tips and tricks. You can follow me at- &lt;a href="https://twitter.com/frontend_jsx"&gt;https://twitter.com/frontend_jsx&lt;/a&gt;&lt;/p&gt;

</description>
      <category>workstations</category>
      <category>frontenddeveloper</category>
      <category>softwareengineer</category>
    </item>
    <item>
      <title>How To Use Google Like A Pro</title>
      <author>Suhail Kakar</author>
      <pubDate>Fri, 20 Aug 2021 05:37:21 +0000</pubDate>
      <link>https://dev.to/suhailkakar/how-to-use-google-like-a-pro-5b48</link>
      <guid>https://dev.to/suhailkakar/how-to-use-google-like-a-pro-5b48</guid>
      <description>&lt;p&gt;Google is such a dominant force in the search engine industry that it is the default search engine for Android smartphones and web browsers such as Chrome. To put it frankly, Google has become one of the most widely utilized online resources for discovering everything from random facts and music videos to products and services.&lt;/p&gt;

&lt;p&gt;The sophisticated Google search methods and tips listed below can help you narrow your search results.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-site"&gt;
  &lt;/a&gt;
  1. Site:
&lt;/h3&gt;

&lt;p&gt;Using site: will search within a specific website. For example, if you want to find an article that is published only on Hackernoon, you can simply type&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;site:hackernoon.com article_keyword
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OB_oJxt0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629433983941/x0ukuKArt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OB_oJxt0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629433983941/x0ukuKArt.png" alt="screely-1629433973388.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-asterisk-"&gt;
  &lt;/a&gt;
  2. Asterisk *
&lt;/h3&gt;

&lt;p&gt;You can use * to fill missing words or phrases, like :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;How to integrate * in nodejs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UQDe1T9g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629434118186/pElZ1rnn8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UQDe1T9g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629434118186/pElZ1rnn8.png" alt="screely-1629434101108.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-quotation-"&gt;
  &lt;/a&gt;
  3. Quotation " "
&lt;/h3&gt;

&lt;p&gt;"" is used to search for words or phrases, like :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"Why facebook created react"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UuCMS9pS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629434450078/saRoQCii-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UuCMS9pS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629434450078/saRoQCii-.png" alt="screely-1629434443457.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-related"&gt;
  &lt;/a&gt;
  4. Related:
&lt;/h3&gt;

&lt;p&gt;You can use related: to sites that are similar to other sites, for example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;related:netflix.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rip_jFoS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629434968719/QJkDd-HWG.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rip_jFoS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629434968719/QJkDd-HWG.png" alt="screely-1629434962416.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-link"&gt;
  &lt;/a&gt;
  5. link:
&lt;/h3&gt;

&lt;p&gt;Use link: to find a page that links to another page, like :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;link:suhailkakar.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FWoP31-2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629435112454/QHKVa-K-G.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FWoP31-2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629435112454/QHKVa-K-G.png" alt="screely-1629435108552.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion ⌛
&lt;/h3&gt;

&lt;p&gt;I hope you found these tips helpful. If you need any help please let me know in the comment section. &lt;/p&gt;

&lt;p&gt;Let's connect on  &lt;a href="https://twitter.com/suhailkakar"&gt;Twitter&lt;/a&gt;  and  &lt;a href="https://www.linkedin.com/in/suhailkakar/"&gt;LinkedIn&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;👋 Thanks for reading, See you next time&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Getting started with Azure Machine Learning</title>
      <author>Vivek0712</author>
      <pubDate>Fri, 20 Aug 2021 05:32:43 +0000</pubDate>
      <link>https://dev.to/vivek0712/getting-started-with-azure-machine-learning-48j8</link>
      <guid>https://dev.to/vivek0712/getting-started-with-azure-machine-learning-48j8</guid>
      <description>&lt;p&gt;In this second part of the Azure Machine Learning Series, we will discuss the following with regards to Azure Machine Learning.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4Ab3fMRd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ymi0lzc67et6tcsyxw4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4Ab3fMRd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ymi0lzc67et6tcsyxw4.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#understanding-machine-learning-workflows"&gt;
  &lt;/a&gt;
  Understanding Machine learning Workflows
&lt;/h2&gt;

&lt;p&gt;We will see a quick recap of the introductory blog on Machine Learning. The workflows involved in Machine Learning are as follows&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8y6oSVEr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/87u2ofabeevb7wbl1nqw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8y6oSVEr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/87u2ofabeevb7wbl1nqw.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#challenges-in-mlops"&gt;
  &lt;/a&gt;
  Challenges in MLOps
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Logically create, maintain the resources&lt;/li&gt;
&lt;li&gt;Keep track of ML Experiments and each Runs of experiments  - Create, Reuse, delete environment with dependencies&lt;/li&gt;
&lt;li&gt;Opting, provisioning, re-using Local/Cloud based compute&lt;/li&gt;
&lt;li&gt;Maintaining different versions of Model&lt;/li&gt;
&lt;li&gt;Re-using the existing ML workflows&lt;/li&gt;
&lt;li&gt;Deploying and Maintaining the ML models
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#tools-to-perform-machine-learning-in-azure"&gt;
  &lt;/a&gt;
  Tools to perform Machine Learning in Azure
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Azure Portal

&lt;ul&gt;
&lt;li&gt;Azure Machine Learning Studio (UI + Coding)
&lt;/li&gt;
&lt;li&gt;Azure Machine Learning Designer (Completely UI + less coding)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Azure CLI
&lt;/li&gt;
&lt;li&gt;Azure Python SDK

&lt;ul&gt;
&lt;li&gt;Using Azure ML Studio
&lt;/li&gt;
&lt;li&gt;Visual Studio Code + AzureML Extensions&lt;/li&gt;
&lt;li&gt;Other IDEs
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#architecture-of-azure-machine-learning"&gt;
  &lt;/a&gt;
  Architecture of Azure Machine Learning
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ItFmYQzA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ytgnzqnmdi53ubvokp8g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ItFmYQzA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ytgnzqnmdi53ubvokp8g.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#before-we-get-started"&gt;
  &lt;/a&gt;
  Before we get started...
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Pre-requisites
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Basic Python programming Language&lt;/li&gt;
&lt;li&gt;Understanding of Machine Learning Workflows&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Azure Account with Subscription
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D0UvNqMe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/403lekyfbyha9orlq3s6.png" alt="Azure Sub"&gt;
&lt;/li&gt;
&lt;li&gt;Create a Machine Learning Resource.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q6FEHq2V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qxkmq6hlbulv1bc0wzeq.png" alt="create ml"&gt;
&lt;/li&gt;
&lt;li&gt;Provide a name for the workspace, Container Register&lt;/li&gt;
&lt;li&gt;Launch the Machine Learning Studio&lt;/li&gt;
&lt;li&gt;Create Compute Resource

&lt;ol&gt;
&lt;li&gt;On the left side, under Manage, select Compute.&lt;/li&gt;
&lt;li&gt;Select +New to create a new compute instance.&lt;/li&gt;
&lt;li&gt;Keep all the defaults on the first page, select Next.&lt;/li&gt;
&lt;li&gt;Supply a name and select Create.&lt;/li&gt;
&lt;li&gt;In about two minutes, you'll see the State of the    compute instance change from Creating to Running. It's now ready to go.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Create Dataset&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can create datasets from datastores, public URLs, and Azure Open Datasets.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Launch a Notebook instance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can follow this &lt;a href="https://docs.microsoft.com/en-us/azure/machine-learning/quickstart-create-resources"&gt;doc&lt;/a&gt; to create necessary Azure ML Resources&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#creating-azure-ml-resources"&gt;
  &lt;/a&gt;
  Creating Azure ML Resources
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#workspace"&gt;
  &lt;/a&gt;
  Workspace
&lt;/h3&gt;

&lt;p&gt;An Azure ML Workspace is an Azure resource that organizes and coordinates the actions of many other Azure resources to assist in executing and sharing machine learning workflows. In particular, an Azure ML Workspace coordinates storage, databases, and compute resources providing added functionality for machine learning experimentation, deployment, inference, and the monitoring of deployed models.&lt;/p&gt;

&lt;p&gt;You can create/access workspace by&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Using Constructor&lt;/li&gt;
&lt;li&gt;Using config.json file&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#compute"&gt;
  &lt;/a&gt;
  Compute
&lt;/h3&gt;

&lt;p&gt;All ML Experiments requires Compute to execute. To Create / Access the Compute Resource use ComputeTarget Class&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#experiment"&gt;
  &lt;/a&gt;
  Experiment
&lt;/h3&gt;

&lt;p&gt;In Azure Machine Learning, an experiment is a named process, usually the running of a script or a pipeline, that can generate metrics and outputs and be tracked in the Azure Machine Learning workspace.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Create Experiment&lt;/em&gt;&lt;br&gt;
An experiment can be run multiple times, with different data, code, or settings; and Azure Machine Learning tracks each run, enabling you to view run history and compare results for each run.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-experiment-run-context"&gt;
  &lt;/a&gt;
  The Experiment Run Context
&lt;/h3&gt;

&lt;p&gt;When you submit an experiment, you use its run context to initialize and end the experiment run that is tracked in Azure Machine Learning&lt;br&gt;
You can log, monitor every run in the experiment.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#data"&gt;
  &lt;/a&gt;
  Data
&lt;/h3&gt;

&lt;p&gt;Data&lt;br&gt;
Any Machine Learning problems involves working with Data.&lt;br&gt;
It involves importing the data from the data source&lt;br&gt;
Registering, Maintaining the dataset in Data Store&lt;br&gt;
Versioning the dataset. You can learn more about Datasets &lt;a href="https://docs.microsoft.com/en-us/azure/machine-learning/how-to-create-register-datasets"&gt;here&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Now we have all the necessary resources to train, deploy and monitor ML Models. &lt;/p&gt;

&lt;p&gt;Stay tuned for the next blog in this series for the same. &lt;/p&gt;

</description>
      <category>azure</category>
      <category>microsoft</category>
      <category>machinelearning</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Blitz.js: The Fullstack React Framework</title>
      <author>projectashik</author>
      <pubDate>Fri, 20 Aug 2021 05:10:10 +0000</pubDate>
      <link>https://dev.to/projectashik/blitz-js-the-fullstack-react-framework-2kag</link>
      <guid>https://dev.to/projectashik/blitz-js-the-fullstack-react-framework-2kag</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hey-developers"&gt;
  &lt;/a&gt;
  Hey Developers
&lt;/h2&gt;

&lt;p&gt;Currently, Blitz.js is on rising because of its unique features. Likewise, Typescript is the superset of Javascript; Blitz.js is also like the superset of Next.js. Almost every feature of Next.js works in Blitz.js too.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qk6JDIDI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629386968129/ga3klyXJa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qk6JDIDI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629386968129/ga3klyXJa.png" alt="Blitz.js is a superset of next.js.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#index"&gt;
  &lt;/a&gt;
  Index
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#introduction"&gt;Introduction&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#routing-in-blitzjs"&gt;Routing in Blitz.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#building-project-management-application"&gt;Building Project Management Application&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#tailwind-css"&gt;Tailwind CSS (Recipe)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#clean-up-lets-clean-up-blitz-application"&gt;Clean Up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#creating-files-for-this-project"&gt;Creating files (Code Scaffolding)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database"&gt;Database(Prisma)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-we-learned-today"&gt;What we learned today?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;According to the Blitz.js team, Blitz is a batteries-included framework inspired by Ruby on Rails, is built on Next.js, and features a "Zero-API" 🤯 data layer abstraction that eliminates the need for REST/GraphQL.&lt;/p&gt;

&lt;p&gt;Blitz.js is a framework built on top of Next.js, which comes with all the boring stuff already set up for you! Like ESLint, Prettier, Jest, user sign up, log in, and password reset. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wwmN7mHb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media1.giphy.com/media/1fgI4bZpCo9S57r4Vd/giphy.gif%3Fcid%3D5a38a5a2i01aebbwldc96up6kv28orf1fap7buec1gwv6q7n%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wwmN7mHb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media1.giphy.com/media/1fgI4bZpCo9S57r4Vd/giphy.gif%3Fcid%3D5a38a5a2i01aebbwldc96up6kv28orf1fap7buec1gwv6q7n%26rid%3Dgiphy.gif%26ct%3Dg" alt="Smart Gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Blitz.js provides helpful defaults and conventions for routing, file structure, and authentication while being extremely flexible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;FullStack &amp;amp; monolithic:&lt;/strong&gt;&lt;br&gt;
Blitz.js comes with a database to frontend all preconfigured in a single app to help you build full-stack apps in record time, which you can easily store in server or serverless like Netlify or Vercel.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;API Not Required:&lt;/strong&gt;&lt;br&gt;
Instead of fetching data from the backend, you import your server code directly into your components. At build time, that function import is swapped out with an auto-generated HTTP API.&lt;br&gt;
The generated API can also be used by apps &amp;amp; third parties.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Loose Opinions:&lt;/strong&gt;&lt;br&gt;
In Blitz.js, you are free to plug anything that you can use. Blitz.js doesn't mandate you to use the specific library only. For example, by default, Blits.js comes with Prisma preconfigured as ORM, but you can use others if you feel comfortable on others.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Convention over Configuration:&lt;/strong&gt;&lt;br&gt;
Blits.js does all the boring setup and configuration by default for you. The common project structure and architectural patterns move from one Blitz app to another and immediately feel at home. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Easy to Start, Easy to Scale:&lt;/strong&gt;&lt;br&gt;
It's easy to use and easy to migrate your next.js application to a blitz.js app. &lt;br&gt;
Easy to scale in all forms: lines of code, number of people working in the codebase, and code execution.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Recipes:&lt;/strong&gt;&lt;br&gt;
Recipes are one of the beautiful features of the blitz.js. By using recipes, you can easily set up third-party libraries with a single line of command.&lt;br&gt;
E.g.: &lt;code&gt;blitz install tailwind&lt;/code&gt; will set up tailwind for you.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Testing:&lt;/strong&gt;&lt;br&gt;
Testing is preconfigured in Blitz.js. Blitz.js uses jest for testing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;First Class TypeScript Support:&lt;/strong&gt;&lt;br&gt;
Blitz.js is fully built with Typescript, and the Blitz data layer is fully end-to-end typesafe. All types are completely static without needing a separate type generation process!&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;Blitz.js has its own powerful CLI for creating a new blitz app, code scaffolding, and many more.&lt;/p&gt;

&lt;p&gt;To start working with Blitz.js, you must have Node.js version 12 or newer installed on your PC. If you don't have Node.js installed, go to  &lt;a href="https://nodejs.org/en/download/"&gt;Node.js official documentation&lt;/a&gt;  to install it in your system.&lt;/p&gt;

&lt;p&gt;Run the following command to install the blitz CLI globally.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn global add blitz &lt;span class="c"&gt;# yarn&lt;/span&gt;

npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; blitz &lt;span class="nt"&gt;--legacy-peer-deps&lt;/span&gt; &lt;span class="c"&gt;# npm &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;While installing Blitz CLI with npm &lt;code&gt;--legacy-peer-deps&lt;/code&gt; is needed because npm totally change the behavior of peer dependencies, and some dependencies haven't caught up&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Well done, you have installed Blitz CLI on your machine. Now you can check it by running a &lt;code&gt;blitz -v&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;You should get something like this. But the &lt;code&gt;system option&lt;/code&gt;, &lt;code&gt;binaries path&lt;/code&gt;, and &lt;code&gt;blitz versions&lt;/code&gt; might be different.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;➜ blitz &lt;span class="nt"&gt;-v&lt;/span&gt;
Linux 5.11 | linux-x64 | Node: v14.17.3

blitz: 0.39.0 &lt;span class="o"&gt;(&lt;/span&gt;global&lt;span class="o"&gt;)&lt;/span&gt;
blitz: 0.39.0 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

  Package manager: yarn 
  System:
    OS: Linux 5.11 Pop!_OS 20.04 LTS
    CPU: &lt;span class="o"&gt;(&lt;/span&gt;4&lt;span class="o"&gt;)&lt;/span&gt; x64 Intel&lt;span class="o"&gt;(&lt;/span&gt;R&lt;span class="o"&gt;)&lt;/span&gt; Core&lt;span class="o"&gt;(&lt;/span&gt;TM&lt;span class="o"&gt;)&lt;/span&gt; i3-5005U CPU @ 2.00GHz
    Memory: 146.59 MB / 3.76 GB
    Shell: 5.8 - /usr/bin/zsh
  Binaries:
    Node: 14.17.3 - ~/.nvm/versions/node/v14.17.3/bin/node
    Yarn: 1.22.10 - ~/.nvm/versions/node/v14.17.3/bin/yarn
    npm: 6.14.13 - ~/.nvm/versions/node/v14.17.3/bin/npm
    Watchman: Not Found
  npmPackages:
    @prisma/client: Not Found
    blitz: ^0.39.0 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; 0.39.0 
    prisma: Not Found
    react: Not Found
    react-dom: Not Found
    typescript: Not Found

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you got any error, you can mention that in the  &lt;a href="#comments"&gt;comment section&lt;/a&gt;, I'll surely try to solve it.&lt;/p&gt;

&lt;p&gt;After the &lt;code&gt;blitz cli&lt;/code&gt; is installed, let's create a new blitz app.&lt;/p&gt;

&lt;p&gt;You can create a new blitz app by using a blitz CLI.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;blitz new your-amazing-app-name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Protip: If you don't want to install blitz CLI locally, you can even use it with the following command.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx blitz new your-amazing-app-name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Blitz uses the alpha version of React, so you can use the features of the alpha release like &lt;code&gt;&amp;lt;Suspense&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, you can run the following command to run the blitz application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn dev &lt;span class="c"&gt;# yarn&lt;/span&gt;

npm run dev &lt;span class="c"&gt;# npm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see something like this in your browser when you open  &lt;a href="http://locahost:3000"&gt;http://localhost:3000&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LJAtpVL3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629393029893/qPNQ2MPJg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LJAtpVL3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629393029893/qPNQ2MPJg.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can try signing up and log in in to check the blitz.js default authentication setup.&lt;/p&gt;

&lt;p&gt;Now let's learn it by building a simple Project Management application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#routing-in-blitzjs"&gt;
  &lt;/a&gt;
  Routing in Blitz.js
&lt;/h2&gt;

&lt;p&gt;Since Blitz.js is built on top of Next.js, it also uses the same file-based routing as Next.js.&lt;/p&gt;

&lt;p&gt;See Blitz.js  &lt;a href="https://blitzjs.com/docs/routing"&gt;Routing docs&lt;/a&gt;  for more info.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-project-management-application"&gt;
  &lt;/a&gt;
  Building Project Management Application
&lt;/h2&gt;

&lt;p&gt;We'll be using many cool features of blitz.js while building this application. We'll be using Tailwind CSS for styling, SQLite for the database (preconfigured with Prisma by default), and a default authentication system.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tailwind-css"&gt;
  &lt;/a&gt;
  Tailwind CSS
&lt;/h3&gt;

&lt;p&gt;For this tutorial, we'll be using Tailwind CSS for styling and I'm using Tailwind CSS in this project to show you how to install Tailwind CSS in blitz using the  &lt;a href="https://blitzjs.com/docs/using-recipes"&gt;Recipe&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Run the following command in your project folder and see the magic of Blitz Recipe.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blitz install tailwind
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When tailwind setup is completed you should see something like this.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P4X7sO2g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629395784889/QywBIlkYc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4X7sO2g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629395784889/QywBIlkYc.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And if you see your project folder, then you will find some new files &lt;code&gt;postcss.config.js&lt;/code&gt;, &lt;code&gt;tailwind.config.js&lt;/code&gt;, and &lt;code&gt;app/core/styles/index.css&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;tailwind.config.js&lt;/code&gt; includes the tailwind configurations. Blitz by default use &lt;code&gt;jit&lt;/code&gt; mode in tailwind css.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;postcss.config.js&lt;/code&gt; includes the postcss configurations.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;app/core/styles/index.css&lt;/code&gt; contains the tailwind styles.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* index.css */&lt;/span&gt;

&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;utilities&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;@layer&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.hero&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;w-full&lt;/span&gt; &lt;span class="err"&gt;text-[#333];&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.title&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;m-0&lt;/span&gt; &lt;span class="err"&gt;w-full&lt;/span&gt; &lt;span class="err"&gt;pt-20;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;48px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.title&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.description&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;text-center;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Tailwind setup is completed with just a single command. That's a magic of Blitz recipe.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#clean-up-lets-clean-up-blitz-application"&gt;
  &lt;/a&gt;
  Clean Up (let's clean up blitz application)
&lt;/h3&gt;

&lt;p&gt;To clean up, you have to remove the &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;app/pages/index.tsx&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;app/api&lt;/code&gt; -&amp;gt; Because we're not creating any API routes in this project &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;app/pages/projects&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt; &lt;code&gt;app/projects&lt;/code&gt; folder&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;You might get a question when we're building a Project Management application then why the heck we are removing the &lt;code&gt;projects&lt;/code&gt; folder too.&lt;br&gt;
The reason is, I want to show you the code scaffolding feature by &lt;code&gt;blitz.js&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#creating-files-for-this-project"&gt;
  &lt;/a&gt;
  Creating files for this project
&lt;/h3&gt;

&lt;p&gt;Creating a &lt;code&gt;app/pages/index.tsx&lt;/code&gt; file with following contents.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;BlitzPage&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blitz&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Layout&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;app/core/layouts/Layout&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="cm"&gt;/*
 * This file is just for a pleasant getting started page for your new app.
 * You can delete everything in here and start from scratch if you like.
 */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;BlitzPage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&amp;gt;&amp;lt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;suppressFirstRenderFlicker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getLayout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Layout&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Home"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Layout&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Later we'll use other components to show the data on the index page.&lt;/p&gt;

&lt;p&gt;Our project is all about project management. In this, the user will be able to create projects, get projects created by the authenticated user, update projects, delete them and also manages the tasks related to those projects. We'll cover all CRUD operations.&lt;/p&gt;

&lt;p&gt;Now we need to create the required files for all these operations, for this Blitz provides code scaffolding from its CLI.&lt;/p&gt;

&lt;p&gt;Run the following command to see the magic.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blitz generate all project
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;What it will do?&lt;/strong&gt;&lt;br&gt;
It will generate pages, queries, mutations, and Prisma models for &lt;code&gt;project&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It will generate the following files.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;app/pages/projects/[projectId]/edit.tsx
app/pages/projects/[projectId].tsx
app/pages/projects/index.tsx
app/pages/projects/new.tsx

app/projects/components/ProjectForm.tsx

app/projects/queries/getProject.ts
app/projects/queries/getProjects.ts
app/projects/mutations/createProject.ts
app/projects/mutations/deleteProject.ts
app/projects/mutations/updateProject.ts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And update Prisma schema.&lt;/p&gt;

&lt;p&gt;Now, you can access the project related pages by heading to:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/projects/some-id/edit
/projects/some-id
/projects/index
/projects/new
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Pages for the project related task are situated in the &lt;code&gt;apps/pages/projects&lt;/code&gt; folder, its components lie in &lt;code&gt;apps/projects/components&lt;/code&gt;, and its backend logics lie in &lt;code&gt;app/projects/queries&lt;/code&gt; and &lt;code&gt;app/projects/mutations&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vhGYIjov--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629397866969/AufkCTFjT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vhGYIjov--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629397866969/AufkCTFjT.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It will ask you, whether to run prisma migrate dev or not. Currently, we'll type no. Because we have to edit our &lt;code&gt;schema.prisma&lt;/code&gt; file.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;prisma migrate dev&lt;/code&gt; will update your database with the schema blitz generated.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As mentioned above, we'll also need the files for managing the tasks, so let's create those files.&lt;/p&gt;

&lt;p&gt;For that, run the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;blitz generate all task &lt;span class="nt"&gt;--parent&lt;/span&gt; project
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;What this command will do?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This command will generate some of the files:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;app/pages/projects/[projectId]/tasks/[taskId].tsx
app/pages/projects/[projectId]/tasks/[taskId]/edit.tsx
app/pages/projects/[projectId]/tasks/index.tsx
app/pages/projects/[projectId]/tasks/new.tsx

app/tasks/components/TaskForm.tsx

app/tasks/queries/getTask.ts
app/tasks/queries/getTasks.ts
app/tasks/mutations/createTask.ts
app/tasks/mutations/deleteTask.ts
app/tasks/mutations/updateTask.ts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The project and tasks will have a one-to-many relationship, so every task is related to a project. So, we have created the &lt;code&gt;tasks&lt;/code&gt; with the parent of &lt;code&gt;project&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#database"&gt;
  &lt;/a&gt;
  Database
&lt;/h3&gt;

&lt;p&gt;Since the blitz.js comes with Prisma and SQLite preconfigured, we'll use them. &lt;br&gt;
Open your &lt;code&gt;db/schema.prisma&lt;/code&gt; file and replace the &lt;code&gt;Project&lt;/code&gt; and &lt;code&gt;Task&lt;/code&gt; model with the following.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
model Project {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  description String
  tasks       Task[]
}

model Task {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  project   Project  @relation(fields: [projectId], references: [id])
  projectId Int
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Install  &lt;a href="https://marketplace.visualstudio.com/items?itemName=Prisma.prisma"&gt;Prisma&lt;/a&gt; Vs code extension for syntax highlighting, formating, auto-completion,  jump-to-definition and linting for .prisma files.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now run the following command to update your database.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;blitz prisma migrate dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, you have give a name for this migration. You can write anything. I'll type &lt;code&gt;create_project_tasks_table&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Protip: You can view the GUI for managing the database by the command &lt;code&gt;blitz prisma studio&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nc5M8Hg4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629426296094/nLBW68wSu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nc5M8Hg4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629426296094/nLBW68wSu.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
From here you can select the model.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This much for today guys, tomorrow, I'll come with a next article in which we'll build a complete application.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-we-learned-today"&gt;
  &lt;/a&gt;
  What we learned today?
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Settings of Blitz.js&lt;/li&gt;
&lt;li&gt;Using recipes&lt;/li&gt;
&lt;li&gt;Using Database&lt;/li&gt;
&lt;li&gt;Code Scaffolding&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading up to here.&lt;/p&gt;

</description>
      <category>blitzjs</category>
      <category>react</category>
      <category>nextjs</category>
      <category>fullstack</category>
    </item>
    <item>
      <title>Remove a property of an object immutably in REDUX JavaScript</title>
      <author>Karan-Munjani</author>
      <pubDate>Fri, 20 Aug 2021 04:59:39 +0000</pubDate>
      <link>https://dev.to/karanmunjani/remove-a-property-of-an-object-immutably-in-redux-javascript-4igj</link>
      <guid>https://dev.to/karanmunjani/remove-a-property-of-an-object-immutably-in-redux-javascript-4igj</guid>
      <description>&lt;p&gt;If you're using Redux then you'll absolutely know about immutability, how much it's important to follow.&lt;/p&gt;

&lt;p&gt;So we know that Reducer is the place where all good state change occurs with returning a new state and without modifying the previous state.&lt;/p&gt;

&lt;p&gt;Imagine you're building a Bug Tracker App, and It stores all details about bug which are occurred.&lt;/p&gt;

&lt;p&gt;Suppose your initial store looks something like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[
 {
   id:"1",
   description:"Bug occured in Network call",
   resolved:false,
 },
 {
   id:"2",
   description:"Bug occured while Signup",
   resolved:false,
 }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Also We are logging on console every time store change using store.subscribe():&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;store.subscribe(() =&amp;gt; {
  console.log("store changed!", store.getState());
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#now-suppose-you-are-dispatching-action-when-some-developers-in-working-on-the-bug-to-resolve-it-but-its-not-resolved-yet"&gt;
  &lt;/a&gt;
  Now Suppose you are dispatching action when some developers in working on the bug to resolve it but it's not resolved yet.
&lt;/h3&gt;

&lt;p&gt;Below is code of action which will take place&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export const bugResolving = (id, status) =&amp;gt; ({
  type: actions.BUG_RESOLVING,
  payload: {
    id: id,
    status: status,
  },
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;And from your code you're calling store.dispatch() something like this:&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;store.dispatch(bugAdded("Bug occured in Network call"));
store.dispatch(bugAdded("Bug occured while Signup"));
store.dispatch(bugResolving(1, "resolving in process by devDiesel"));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;And from your code you're calling store.dispatch() something like this:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;store.dispatch(bugResolving(1, "resolving in process by devDiesel"));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thus your store will look something like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w6EkcjcS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/erijcn1sq5e77oj7ww6t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w6EkcjcS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/erijcn1sq5e77oj7ww6t.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see in last store change we added status property in bug with id=1.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now After a cup of coffee☕ the Dev was able to solve and bug was marked as solved🎯.&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Hooray!!🎉🎉&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;As you've guessed now we want to remove the status property from store object whose id is 1, and also update the resolved to true&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So in your reducer function you might write code like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function reducer(state = [], action) {
  switch (action.type) {
   case actions.BUG_ADDED:
    //Some Code

   case actions.BUG_REMOVED:
    //Some Code

   case actions.BUG_RESOLVING:
    //Some Code

   case actions.BUG_RESOLVED:
    return state.map((bug)=&amp;gt; {
      if (bug.id === action.payload.id){
        delete bug.status;
        return { ... bug, resolved:true};
      }
      else return bug;

    default:
      return store;
    }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So we will dispatch the action like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;store.dispatch(bugAdded("Bug occured in Network call"));
store.dispatch(bugAdded("Bug occured while Signup"));

store.dispatch(bugResolving(1, "resolving in process by devDiesel"));

store.dispatch(bugResolved(1)); //⬅This one
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So when the reducer runs BUG_RESOLVED it won't work as expected and will delete the status property from previous original bug state,instead of deleting where we wanted.&lt;/p&gt;

&lt;p&gt;And thus will only update resolved to true in last state.&lt;/p&gt;

&lt;p&gt;Which can be seen with the help of console logging of subscribe() method as described in starting.&lt;/p&gt;

&lt;p&gt;See In this picture:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MjDoWwjx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bo2fa94xhctia3hubd75.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MjDoWwjx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bo2fa94xhctia3hubd75.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#so-why-this-happened"&gt;
  &lt;/a&gt;
  So Why this happened??
&lt;/h3&gt;

&lt;p&gt;As JavaScript is not purely immutable language when we return new state object using &lt;code&gt;return state.map((bug)=&amp;gt;{...})&lt;/code&gt; it does shallow copy of objects.&lt;/p&gt;

&lt;p&gt;That is the status property which we are created in previous state and status property which is we deleting are pointing to the same memory address.&lt;/p&gt;

&lt;p&gt;Thus when we delete this property it's get deleted from both object as its referring to same location inside memory&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#then-how-to-force-immutability-now"&gt;
  &lt;/a&gt;
  Then How to force immutability Now??
&lt;/h3&gt;

&lt;p&gt;We can do deep-copy of the object using Object.assign() method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; case actions.BUG_RESOLVED:
      return state.map((bug) =&amp;gt; {
        let modifiedBug = Object.assign({}, bug);//1
        if (modifiedBug.id === action.payload.id) {
          modifiedBug.status = Object.assign({}, bug.status);//2
          delete modifiedBug.status;//3
          return { ...modifiedBug, resolved: true };//4
        } else return bug;
      });

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In above code:&lt;/p&gt;

&lt;p&gt;1.) We assigning new object using Object.assign() thus modifiedBug will get its own address in memory.&lt;/p&gt;

&lt;p&gt;2.) We setting modifiedBug.status property with new bug.status using Object.assign() this will also force to have it's separate memory address&lt;/p&gt;

&lt;p&gt;3.)Now we are deleting the modifiedBug.status which won't affect any previous bug object cause its pointing to totally different location.&lt;/p&gt;

&lt;p&gt;4.) In last we are appending resolved:true to modifiedBug Object and returning it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thus now our code will work as we expected&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LkmK3SAv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m74tuvif4aswsx90nfg2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LkmK3SAv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m74tuvif4aswsx90nfg2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-out"&gt;
  &lt;/a&gt;
  Thank You For Reading Out.😸
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Post any questions in comments if you have&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>redux</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>Super ultimate guide to Regex in 2021 (how to  use in JavaScript)</title>
      <author>devbookmark</author>
      <pubDate>Fri, 20 Aug 2021 04:55:43 +0000</pubDate>
      <link>https://dev.to/devbookmark/super-ultimate-guide-to-regex-in-2021-how-to-use-in-javascript-ki</link>
      <guid>https://dev.to/devbookmark/super-ultimate-guide-to-regex-in-2021-how-to-use-in-javascript-ki</guid>
      <description>&lt;p&gt;Regular expressions play a vital role in every high-level programming language and so in JavaScript. Let's know them all in detail...&lt;/p&gt;




&lt;p&gt;A &lt;strong&gt;Regular Expression&lt;/strong&gt; (RegEx) is a sequence of characters that defines a search pattern. It helps you to "match" part of the text (string) by given rule.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Let's get our hands dirty with an examples: &lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;A-Z&lt;/span&gt;&lt;span class="se"&gt;]\w&lt;/span&gt;&lt;span class="sr"&gt;+/g&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// (We ommited ' ')&lt;/span&gt;
&lt;span class="c1"&gt;// regex holds a regular expression which will match words starting with a capital letter. &lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Rahul, Taylor and Susanne are coders who live in India`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 

&lt;span class="c1"&gt;// When we apply the regex to str, it returns all matches in a simple array! &lt;/span&gt;
&lt;span class="c1"&gt;// console.log( str.match(regex) )&lt;/span&gt;
&lt;span class="c1"&gt;//["Rahul", "Taylor", "Susanne", "India"]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can do the same operation by using plain JavaScript, but regex can save you hundreds of lines &amp;amp; you can use it with almost any language (and even CLI tools) &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-core-and-some-basics"&gt;
  &lt;/a&gt;
  The Core and Some Basics
&lt;/h3&gt;

&lt;p&gt;When you write a RegEx, it always starts with &lt;strong&gt;/&lt;/strong&gt; and ends with &lt;strong&gt;/&lt;/strong&gt;. Your write the code in between the two slashes. The simplest example - to match the word 'apple' use &lt;strong&gt;/apple/&lt;/strong&gt; RegEx. This, however, won't match 'APPLE' or 'aPpLe', because RegEx is case sensitive. &lt;/p&gt;

&lt;p&gt;To disable case sensitivity in RegEX, use what is called an &lt;strong&gt;i&lt;/strong&gt; flag &lt;strong&gt;/apple/i&lt;/strong&gt; now it will match 'apple', 'APPLE' &amp;amp; 'aPpLe'. To match both 'apple' and 'nut' use &lt;strong&gt;apple|nut/&lt;/strong&gt; RegEx. Simple, ugh? &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-use-in-javascript"&gt;
  &lt;/a&gt;
  How to use in JavaScript
&lt;/h3&gt;

&lt;p&gt;Let's learn the most basic methods in JS for working with RegEx'es &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;str.match(regex)&lt;/strong&gt; : Returns an array with all the matches it has found. Actually. there's a little catch here😉. If you try doing this: &lt;code&gt;"apple apple" .match(/apple/)&lt;/code&gt; you would expect to get ['apple', 'apple'] nut that's not the case. In reality it returns just ['apple']. To get a full array with multiple matches, you should add &lt;strong&gt;g&lt;/strong&gt; flag. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;str.test(str)&lt;/strong&gt; : regex is a variable assigned to your RegEx. &lt;strong&gt;str&lt;/strong&gt; is the string you test with the RegEx. The method returns true if it finds any matches or false.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="c1"&gt;// Let's hang with them&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/code|easy/i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;this code is EaSy super easy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
  &lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// true; means we have a match😍&lt;/span&gt;

  &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// ["code", index: 5, input..]&lt;/span&gt;

  &lt;span class="c1"&gt;// Oops! We forgot adding the g flag&lt;/span&gt;
  &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/code|easy/ig&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// ["code", "EaSy", "easy"]&lt;/span&gt;
  &lt;span class="c1"&gt;// ALRIGHT!!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#concept-of-wildcard-period"&gt;
  &lt;/a&gt;
  Concept of Wildcard Period
&lt;/h2&gt;

&lt;p&gt;We learned how to statically match a word, let's say 'hug' (&lt;strong&gt;/hug/&lt;/strong&gt;). But what if we want to match 'huh', 'hug', 'hum' at the same time? Wildcard period! That's the answer. &lt;code&gt;/hu./&lt;/code&gt; This will match all 3 letters long words starting with &lt;strong&gt;'hu'&lt;/strong&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#match-single-character-with-multiple-possibilities"&gt;
  &lt;/a&gt;
  Match single character with multiple possibilities
&lt;/h2&gt;

&lt;p&gt;A lot of times you want something in-between. Instead of targeting every character by using &lt;code&gt;.&lt;/code&gt; you might want to target only  &lt;strong&gt;a, b, c, d, e&lt;/strong&gt; characters. That's when the nest 'tricks' come in handy.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// CHARACTER CLASSES allow you to define a group of characters you wish to match. You put the chards in [] "car cat cam cal car".match(/ca[rt]/g); &lt;/span&gt;
&lt;span class="c1"&gt;// returns: ['car', 'cat', 'car']&lt;/span&gt;

&lt;span class="c1"&gt;// match "bag", "big", "bug", but nit "bog" "big bag has a bug bog".match(/b[aiu]g/g); &lt;/span&gt;
&lt;span class="c1"&gt;// ["big", "bag", "bug"]&lt;/span&gt;

&lt;span class="c1"&gt;// MAKE CHARACTER CLASSES SHORTER by using [X-Y] which will match fro letter x to letter y. Example: [a-zA-Z] will match all capital and not capital letters from a to z&lt;/span&gt;

&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;abcdefghijklmnopqr&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;d-j&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;// ["d", "e", "f", "g", "h", "i", "j"]&lt;/span&gt;

&lt;span class="c1"&gt;//same as: &lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;abcdefghijklmnopqr&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/defghij/g&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;// ["d", "e", "f", "g", "h", "i", "j"]&lt;/span&gt;

&lt;span class="c1"&gt;// Use it with a number too: &lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1234567890&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/4-9/g&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;//["4", "5", "6", "7, "8", "9"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#reverse-the-character-classes"&gt;
  &lt;/a&gt;
  Reverse the character classes
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;a-z&lt;/code&gt; will match all letters from a to z. To match all symbols, EXCEPT the letters from a to z, use &lt;code&gt;[^a-z]&lt;/code&gt;. The &lt;code&gt;^&lt;/code&gt; operator reverses the behaviours when used in&lt;code&gt;[ ]&lt;/code&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#matching-characters-that-occur-more-than-one-times"&gt;
  &lt;/a&gt;
  Matching characters that occur more than one times
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// With +&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/a+/g&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;abc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//["a"]&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;aabc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//["aa"]&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;aabac&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//["aa", "a"]&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bbc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//null&lt;/span&gt;

&lt;span class="c1"&gt;//without +&lt;/span&gt;
&lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/a/g&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;abc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//["a"]&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;aabc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//["aa"]&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;aabac&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//["aa", "a"]&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bbc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//null&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#search-for-patterns-from-the-beginning-of-the-end-of-the-string"&gt;
  &lt;/a&gt;
  Search for patterns from the beginning of the end of the string
&lt;/h3&gt;

&lt;p&gt;To search a character exactly at the beginning of a string using &lt;code&gt;^&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/^K/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 

&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;__K_K_&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// false - K is not exactly at the beginning!&lt;/span&gt;
&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;K___K___&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// true &lt;/span&gt;

&lt;span class="c1"&gt;//To search for a character at the end of string use $ like so&lt;/span&gt;

&lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/K$/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 

&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;__K__K_&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// false - K has to be at the end&lt;/span&gt;

&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;__K&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#optional-character"&gt;
  &lt;/a&gt;
  Optional character
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/colou&lt;/span&gt;&lt;span class="se"&gt;?&lt;/span&gt;&lt;span class="sr"&gt;r/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// makes 'u' capital&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;american&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;color&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;british&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;colour&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 

&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;american&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;british&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cologr&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Let's take this to advance level&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#common-shorthands"&gt;
  &lt;/a&gt;
  Common shorthands
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Instead of &lt;code&gt;[A-Za=z0-9]&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Use -&amp;gt; &lt;code&gt;\w&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Instead of &lt;code&gt;[^A-Za-z0-9]&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Use -&amp;gt; &lt;code&gt;\W&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Instead of &lt;code&gt;[0-9]&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;\d&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Instead of  &lt;code&gt;^ 0-9&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Use -&amp;gt; &lt;code&gt;\D&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#specify-the-upper-and-lower-limit-of-matches"&gt;
  &lt;/a&gt;
  Specify the upper and lower limit of matches
&lt;/h2&gt;

&lt;p&gt;What if you want to match a sequence of characters that repeats X times, for example - match exactly a sequence of 5 letters 'a'? Here we go &lt;code&gt;a{5}&lt;/code&gt; This would match only 'aaaaa' but not 'aa' or 'aaaaaaa'. &lt;/p&gt;

&lt;p&gt;Let's see...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ama baalo maaaaamal aaaaaa&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="se"&gt;{5}&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;//prints ["aaaaa". "aaaaa"]&lt;/span&gt;

&lt;span class="c1"&gt;//to match 'm' letter followed by 5 x 'a'&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="sr"&gt;/ma&lt;/span&gt;&lt;span class="se"&gt;{5}&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;// prints ["maaaaa", indes: 10, ...]&lt;/span&gt;
&lt;span class="c1"&gt;//which means we have a match at index 10&lt;/span&gt;

&lt;span class="c1"&gt;// to match empty space followed by 4 x 'a'&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\s&lt;/span&gt;&lt;span class="sr"&gt;a&lt;/span&gt;&lt;span class="se"&gt;{4}&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;// prints [" aaaa", index: 19, ...]&lt;/span&gt;
&lt;span class="c1"&gt;// match at index 19&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You saw how to match an exact number of repeating characters &lt;code&gt;a{5}&lt;/code&gt; matches "aaaaa". But what if you want to match not exactly 5, but in a more flexible manner - from 1 to 3 repeating characters? Here we go &lt;code&gt;a{1,3}&lt;/code&gt; which will match "a" , "aa", "aaa", but not "aaaa". &lt;/p&gt;

&lt;p&gt;We can go even further - by omitting the first or the second parameter &lt;code&gt;a{3}&lt;/code&gt; will not match "a", "aa", but will match "aaa", "aaaa" or higher. &lt;/p&gt;

&lt;p&gt;## Match characters t#hat occur multiple times&lt;/p&gt;

&lt;p&gt;Above we have briefly covered this topic, now is the moment to go deep. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;To match one or more characters, use after the target character.&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ama balo maaaaamal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="sr"&gt;/a+/g&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;// ["a", "a", "aa", "aaaaa", "a"]&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="sr"&gt;/a/g&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;// ["a", "a", "a", "a", "a", "a", "a", "a", "a", "a"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;To match zero or more characters, ue after the target character&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;aaa&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="sr"&gt;/a*/g&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;// ["aaa", ""]&lt;/span&gt;

&lt;span class="nx"&gt;consolle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="sr"&gt;/a/g&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;// ["a", "a", "a"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;To match zero or one character, use after the target character&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;aaa&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="se"&gt;?&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;// ["a", "a", "a", ""]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#positive-and-negative-lookahead"&gt;
  &lt;/a&gt;
  Positive and Negative lookahead
&lt;/h3&gt;

&lt;p&gt;This is considered one of the abstract topics in regex, but I will try to cover 80/100 of what you need to know. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;a(?=g)&lt;/code&gt; - Positive lookahead Matches all "a" that is followed by "g", without making the "g" part of the match. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;a(?!g)&lt;/code&gt; - Negative lookahead Matches all "a" that are &lt;strong&gt;NOT&lt;/strong&gt; followed by "g", without making "g" part of the match. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But it can be even more flexible. See this example -&amp;gt; &lt;strong&gt;&lt;code&gt;(?=regex)&lt;/code&gt;   &lt;code&gt;?!regex&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On the place of regex, you can put any valid regex expression. Let's hang with this...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;IsFunBaloonIsLearningRegExIsLean&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="sr"&gt;/Is&lt;/span&gt;&lt;span class="se"&gt;(?=&lt;/span&gt;&lt;span class="sr"&gt;Learning&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;//["Is", index: 11, ...]&lt;/span&gt;
&lt;span class="c1"&gt;//Matches the 2nd "Is", right before "Learning"&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="sr"&gt;/Is&lt;/span&gt;&lt;span class="se"&gt;(?=&lt;/span&gt;&lt;span class="sr"&gt;Lean&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;//["Is", index: 26, ...]&lt;/span&gt;
&lt;span class="c1"&gt;//Match the 3rd "Is", right before "Lean"&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="sr"&gt;/Is&lt;/span&gt;&lt;span class="se"&gt;(?=&lt;/span&gt;&lt;span class="sr"&gt;L&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;// ["Is", "Is"]&lt;/span&gt;
&lt;span class="c1"&gt;//Matches all "Is" which are followed by "L"&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/Is&lt;/span&gt;&lt;span class="se"&gt;(?!&lt;/span&gt;&lt;span class="sr"&gt;L&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="c1"&gt;//["Is", index:0, ...]&lt;/span&gt;
&lt;span class="c1"&gt;// Matches all "Is" which aren't followed by "L"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What if you want the opposite - check the character before, not after the target character? &lt;strong&gt;You use a LookBehind&lt;/strong&gt; ;P&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reusing-patterns-with-capture-groups"&gt;
  &lt;/a&gt;
  Reusing patterns with capture groups
&lt;/h3&gt;

&lt;p&gt;We all know the DRY programming principle - Don't Repeat Yourself. Capture groups help us to do exactly this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bam&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt;  &lt;span class="nx"&gt;same&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; 
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;bamm+&lt;/span&gt;&lt;span class="se"&gt;)\w(&lt;/span&gt;&lt;span class="sr"&gt;bamm+&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt; &lt;span class="nx"&gt;same&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt;
&lt;span class="sr"&gt;/bamm+&lt;/span&gt;&lt;span class="se"&gt;\w&lt;/span&gt;&lt;span class="sr"&gt;bamm+/g&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt; &lt;span class="nx"&gt;same&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt;
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;(\w&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;)\s\1\1\1\1\1\1&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt;  &lt;span class="nx"&gt;same&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt;
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\w&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;\s\w&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;\w&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;\w&lt;/span&gt;&lt;span class="sr"&gt;+/g&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Now let's learn how to unleash this potential regex power and fuel it all to your JavaScript skills!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-regex-in-javascript"&gt;
  &lt;/a&gt;
  Creating RegEx in JavaScript
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;0-9&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;b+/&lt;/span&gt;

&lt;span class="c1"&gt;//if you want to pass flags (like i and g)&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;0-9&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;b+/ig&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;-&amp;gt; Compiles when script is loaded&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Using the RegEx constructor function
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;RegExp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a[0-9]b+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="c1"&gt;//if you want to pass flags (like i and g)&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;RegExp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a[0-9]b+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ig&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;-&amp;gt; Compiled on runtime&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#flags"&gt;
  &lt;/a&gt;
  FLAGS
&lt;/h2&gt;

&lt;p&gt;In JavaScript we have 6 flags which affect the match: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;i&lt;/strong&gt; - Makes the match case-insensitive. No difference between 'C' and 'c'&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;g&lt;/strong&gt; - Without this flag, only the first match will be returned&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;m&lt;/strong&gt; - Multiline more; only affects the behavior of &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;s&lt;/strong&gt; - Dotall mode; allows wildcard period &lt;code&gt;.&lt;/code&gt; to match newline character &lt;code&gt;\n&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;u&lt;/strong&gt; - Enabled full Unicode support&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;y&lt;/strong&gt; - Sticky mode. Enabled searching at a specific position&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;LET'S SEE JS METHODS THAT USE RegEx IN SOME FORM OR ANOTHER&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;str.match(regexp)&lt;/code&gt; - Finds all matches of &lt;strong&gt;regexp&lt;/strong&gt; in the string &lt;strong&gt;str&lt;/strong&gt; and returns an array of those matches&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;regexp.exec(str)&lt;/code&gt; - Similar to the match method but it's meant to be used in a loop when the &lt;strong&gt;regexp&lt;/strong&gt; is stored in global variable but not passed directly
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Difference between the two methods&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;re&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/bla/g&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bla and yea bla yeh&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 

&lt;span class="nx"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// -&amp;gt; ["bla", index: 0, ...]&lt;/span&gt;
&lt;span class="nx"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// -&amp;gt; ["bla", index: 13, ...]&lt;/span&gt;
&lt;span class="nx"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// -&amp;gt; null&lt;/span&gt;
&lt;span class="nx"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// -&amp;gt; ["bla", index: 0, ...]                &lt;/span&gt;
&lt;span class="c1"&gt;// STARTS AGAIN&lt;/span&gt;

&lt;span class="c1"&gt;//USAGE WITH A LOOP&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bla and yeah bla yeh ble&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mathc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// ["bla", index: 0, input: ...]&lt;/span&gt;
&lt;span class="c1"&gt;// ["bla", index: 13, input: ...]&lt;/span&gt;

&lt;span class="c1"&gt;// on the other side, match works pretty simple&lt;/span&gt;
&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;re&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// ["bla", "bla"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;str.matchAll(regexp)&lt;/code&gt; - A new JS feature and improvement on the match method. 3 Differences: 

&lt;ul&gt;
&lt;li&gt;Returns an iterable object with matches instead of an array. &lt;/li&gt;
&lt;li&gt;Each match is in the same format as &lt;code&gt;str.match&lt;/code&gt; without the 'g' flag. &lt;/li&gt;
&lt;li&gt;If there are no matches it returns empty iterable object rather than null if you used to match. &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Always add &lt;strong&gt;g&lt;/strong&gt; flag when using this one!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;regexp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/bla/g&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bla and yeah bla yeh&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;matches&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matchAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regexp&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;match&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// ["bla", index: 0, ...]&lt;/span&gt;
&lt;span class="c1"&gt;// ["bla", index: 13, ...]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;regexp.test(str)&lt;/code&gt; - Looks for at least one match of &lt;strong&gt;regexp&lt;/strong&gt; in &lt;strong&gt;str&lt;/strong&gt;. If found, returns true. Otherwise false. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;str.search(regexp)&lt;/code&gt; - Returns the index of the first available match. If no match is found returns -1. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;str.match(separator)&lt;/code&gt; - Instead of passing a simple string to &lt;strong&gt;separator&lt;/strong&gt; like  ' ', we can also pass regex for more precise split/ &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;str.replace(from, to)&lt;/code&gt; - &lt;strong&gt;from&lt;/strong&gt; is what to match. It can be a string or regex. The first match will be replaced with the string you have passed to the &lt;strong&gt;to&lt;/strong&gt; argument. Instead of a string, you can pass a function too, but this is outside of the scope of this tutorial. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;str.repalceAll(from,to)&lt;/code&gt; - Same as replace, except instead of replacing only the first match it will replace all  matches with the provided to. Example:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;stuffed str living fforever pff&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/f+/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//match one or more 'f'&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;repl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
  &lt;span class="c1"&gt;//repl is "stu*ed str living fforeverpff"&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;repl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replaceAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
  &lt;span class="c1"&gt;// repl is "stu*ed str living *orever p*"&lt;/span&gt;
  &lt;span class="c1"&gt;// NOTE: If you add g flag to replace it works like replaceAll&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;A bit tough and lengthy. Hope you liked it! Use the comments for sharing your views and questions.  &lt;/p&gt;

&lt;p&gt;🔐Thanks For Reading | Happy Coding 📘&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>developer</category>
    </item>
    <item>
      <title>PERSONAL ACCESS TOKENS ON GIT/GITHUB: A TALE OF A LESSON, MISTAKE, AND FUTURE QUEST</title>
      <author>Jeremy Marx</author>
      <pubDate>Fri, 20 Aug 2021 04:42:45 +0000</pubDate>
      <link>https://dev.to/jeremydmarx813/personal-access-tokens-on-git-github-a-tale-of-a-lesson-mistake-and-future-quest-a61</link>
      <guid>https://dev.to/jeremydmarx813/personal-access-tokens-on-git-github-a-tale-of-a-lesson-mistake-and-future-quest-a61</guid>
      <description>&lt;p&gt;Using Git/GitHub has always been a huge hole in my technical knowledge. Sure, I can add files to the staging area and make a basic commit, but anything beyond that has been beyond my comprehension.  I'd like to walk through a couple things I've learned recently, a big mistake I made, and highlight a concept that is still eluding me.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#replacing-githubs-deprecated-password-authentication-with-personal-access-token-authentication"&gt;
  &lt;/a&gt;
  REPLACING GITHUB'S DEPRECATED PASSWORD AUTHENTICATION WITH PERSONAL ACCESS TOKEN AUTHENTICATION
&lt;/h2&gt;

&lt;p&gt;A couple days ago, I sat down and did some work on a project.  When I got done making my changes, I made my commit.  When I went to push to my remote repository, I got a message in my command line that GitHub had removed password authentication and replaced it with the use of personal access tokens (read their statement about the change &lt;a href="https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/"&gt;here&lt;/a&gt;).  So, let's walk through how to set up a personal access token on GitHub, remove the original remote, and how to add a new one with your token.  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Go to your GitHub account, click on your profile picture icon in the top right corner, scroll down and click on &lt;em&gt;Settings&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;On the left hand side of the screen, there is a menu bar.  Scroll down near the bottom of the menu, and click on &lt;em&gt;Developer Settings&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Once again, on the left side of the screen, there is a menu bar.  Click on &lt;em&gt;Personal access tokens&lt;/em&gt;, and then click on &lt;em&gt;Generate new token&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When the menu to create a token comes up, set your expiration date, set you permissions, and generate your token.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Copy your token down and &lt;strong&gt;KEEP IT HANDY&lt;/strong&gt;! As the prompt says, you will not be able to see this again (I deleted the one I made for this example, so don't go trying to use it to add emojis to my codebases!).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, go back to your terminal.  First thing we need to do is remove the remote so we can add it back using the token.  In the terminal, run &lt;code&gt;git remote remove origin&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now, run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git remote add origin https://&amp;lt;GITHUB_ACCESS_TOKEN&amp;gt;@github.com/&amp;lt;GITHUB_USERNAME&amp;gt;/&amp;lt;REPOSITORY_NAME&amp;gt;.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and replace the &lt;code&gt;&amp;lt;PLACEHOLDERS&amp;gt;&lt;/code&gt; with their respective value.  Then you should be free to run &lt;code&gt;git push origin main&lt;/code&gt; with no problems.  And if you go back to the screen we saw in &lt;strong&gt;Step 3&lt;/strong&gt;, you should see your new token paired with the repository, along with the expiration date and permissions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-embarrassing-mistake"&gt;
  &lt;/a&gt;
  MY EMBARRASSING MISTAKE
&lt;/h2&gt;

&lt;p&gt;So after I figure out how to do this, I go to repeat the process in other repositories.  Since I'm lazy, I scroll up to run the command with the access token I had just run.  I see some warning message in my terminal that I don't understand, so I brilliantly decide to use the &lt;code&gt;--force&lt;/code&gt; flag and override and push to that remote.  After doing this a few times, I go to check something on my GitHub repo homepage, and I noticed I wasn't seeing any of the commits I had just made.  After some backtracking, I realize what happened - when I scrolled up to the &lt;em&gt;remote add&lt;/em&gt; command with my token, I forgot to replace the &lt;code&gt;&amp;lt;REPOSITORY_NAME&amp;gt;&lt;/code&gt; placeholder with the current repository name that I actually wanted to push to.  I go to the previous repository homepage on GitHub, and sure enough, there were all my commits.  I had basically just overwritten the entire codebase.&lt;/p&gt;

&lt;p&gt;After a literal facepalm and a litany of swearing, I came up with a solution: go back to my local repo, and redo the push I had done earlier with the force flag.  I'm pretty sure this was not the proper way to do it, but it did fix the problem.  My GitHub remote repository reflected my local repo.  &lt;/p&gt;

&lt;p&gt;So the lesson I learned is:  be very careful when re-using commands to modify them properly!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-git-concept-i-need-to-tackle"&gt;
  &lt;/a&gt;
  NEXT GIT CONCEPT I NEED TO TACKLE
&lt;/h2&gt;

&lt;p&gt;Later that day, I was going through some old projects, and needed to make a GitHub repo to push to for a local repo.  When I made the repo, I initialized it with a README.md, since I know I need to get better at project readme's.  &lt;strong&gt;Note&lt;/strong&gt;: there is not a readme in my local repo.  When I go to set the GitHub repo as a remote, I can't push to it because of the file that is in the remote but not the local repo.  &lt;/p&gt;

&lt;p&gt;I wound up using my newly signature &lt;code&gt;--force&lt;/code&gt; flag trick and just making my README locally, but I know there is a more conventional way to do this.  Clone the repo? Use &lt;code&gt;git pull&lt;/code&gt; or &lt;code&gt;git fetch&lt;/code&gt;?&lt;br&gt;
Let me know in the comments what you think!&lt;/p&gt;

&lt;p&gt;If you liked this article, please give me a virtual like, a follow, share online, and if you &lt;strong&gt;REALLY&lt;/strong&gt; liked it, feel free to &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/jeremydmarx"&gt;Buy Me A Coffee!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>vscode</category>
      <category>git</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Updates on Dev.to clone in Angular - August 20</title>
      <author>Ajit Singh</author>
      <pubDate>Fri, 20 Aug 2021 03:34:51 +0000</pubDate>
      <link>https://dev.to/this-is-angular/updates-on-dev-to-clone-in-angular-august-20-o1l</link>
      <guid>https://dev.to/this-is-angular/updates-on-dev-to-clone-in-angular-august-20-o1l</guid>
      <description>&lt;h3&gt;
  &lt;a href="#help-me-improve-these-updates-by-giving-suggestions"&gt;
  &lt;/a&gt;
  Help me improve these updates by giving suggestions.
&lt;/h3&gt;

&lt;p&gt;Github Repo - &lt;a href="https://github.com/ajitsinghkaler/devto-clone"&gt;https://github.com/ajitsinghkaler/devto-clone&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Deployed on Firebase - &lt;a href="https://dev-toclone.firebaseapp.com/"&gt;https://dev-toclone.firebaseapp.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Last week we added details page but did not style the middle articles portion.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Uj4nQrQ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1u43cjhsk3rmgaffpfx7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uj4nQrQ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1u43cjhsk3rmgaffpfx7.png" alt="Cover"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This week I added the article section CSS and added basic comments the comments section. Is on a different branch so will not deployed right now.&lt;/p&gt;

&lt;p&gt;We have new contributors too &lt;a href="https://twitter.com/NivethaMani12"&gt;Nivetha Mani&lt;/a&gt; who is building the videos detail page did a great job she has already completed it added infinite scroll and made everything responsive too she has already completed her work but there are some small changes after that her work would be merged. To have a look you can have a look at her &lt;a href="https://github.com/ajitsinghkaler/devto-clone/pull/18"&gt;pull request&lt;/a&gt; and let me give you a sneak peek.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J7jTU3cf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/trmqaz2isoy6tryf5qpw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J7jTU3cf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/trmqaz2isoy6tryf5qpw.png" alt="Videos Section"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This week I had a lot of problems with the CSS because the article body was injected and I still could not do the code highlighting properly. It was really really tiring.&lt;/p&gt;

&lt;p&gt;I also resolved other small bugs added GitHub action for deployment on main branch. Lets talk about the small bugs earlier the reactions section was static I added the reactions store so that they are dynamic but there is no reaction api provided by the dev.to/api it so lets see if this is going to be a problem as its structure can change anytime because of no support.&lt;/p&gt;

&lt;p&gt;I also ran into the grid overflow problem mostly grid automatically takes the free space using fr units but some elements in it does not play well. I came to know about this &lt;a href="https://css-tricks.com/preventing-a-grid-blowout/"&gt;https://css-tricks.com/preventing-a-grid-blowout/&lt;/a&gt;. It was a tricky problem because I put an hour into fixing my inner code blocks but the problem was with the grid.&lt;/p&gt;

&lt;p&gt;Adding the GitHub action was fun I have with CI/CD but only on Gitlab I didn't think it would be this different adding actions for other repos seems a weird concept to me but maybe it grows on me. Lets have a look at the GitHub action.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# This is a basic workflow to help you get started with Actions&lt;/span&gt;

name: CI

&lt;span class="c"&gt;# Controls when the workflow will run&lt;/span&gt;
on:
  &lt;span class="c"&gt;# Triggers the workflow on push or pull request events but only for the main branch&lt;/span&gt;
  push:
    branches: &lt;span class="o"&gt;[&lt;/span&gt; main &lt;span class="o"&gt;]&lt;/span&gt;
  pull_request:
    branches: &lt;span class="o"&gt;[&lt;/span&gt; main &lt;span class="o"&gt;]&lt;/span&gt;

  &lt;span class="c"&gt;# Allows you to run this workflow manually from the Actions tab&lt;/span&gt;
  workflow_dispatch: 

&lt;span class="c"&gt;# A workflow run is made up of one or more jobs that can run sequentially or in parallel&lt;/span&gt;
&lt;span class="nb"&gt;jobs&lt;/span&gt;:
  &lt;span class="c"&gt;# This workflow contains a single job called "build"&lt;/span&gt;
  firebase-deploy:
    &lt;span class="c"&gt;# The type of runner that the job will run on&lt;/span&gt;
    runs-on: ubuntu-latest

    &lt;span class="c"&gt;# Steps represent a sequence of tasks that will be executed as part of the job&lt;/span&gt;
    steps:
      &lt;span class="c"&gt;# Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it&lt;/span&gt;
      - uses: actions/checkout@v2
      &lt;span class="c"&gt;# Setup node version which this action will run&lt;/span&gt;
      - uses: actions/setup-node@master
        with:
          node-version: &lt;span class="s1"&gt;'14.x'&lt;/span&gt;

      &lt;span class="c"&gt;# Install node_modules as we don't push them&lt;/span&gt;
      - run: npm &lt;span class="nb"&gt;install&lt;/span&gt;
      &lt;span class="c"&gt;# Build our angular app&lt;/span&gt;
      - run: npm run build
      &lt;span class="c"&gt;# Firebase action to deploy. Still don't fully understand this concept&lt;/span&gt;
      - uses: w9jds/firebase-action@master
      &lt;span class="c"&gt;# With what arguements will this action run&lt;/span&gt;
        with:
          args: deploy &lt;span class="nt"&gt;--only&lt;/span&gt; hosting &lt;span class="nt"&gt;--project&lt;/span&gt; dev-toclone
      &lt;span class="c"&gt;# Environment variables with which you want to run your job. To keep them a secret you can set in your repository secrets &lt;/span&gt;
        &lt;span class="nb"&gt;env&lt;/span&gt;:
          FIREBASE_TOKEN: &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="p"&gt;{ secrets.FIREBASE_TOKEN &lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let me give you the sneak peek of the newly created comments section too this is going to be hard as the way comments are but we are going to use recursion here to render out all the comments. That is going to interesting you will see a new pattern of rendering these types of structures. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--koyx21Ld--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bqkojuclz1ytoww4fulq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--koyx21Ld--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bqkojuclz1ytoww4fulq.png" alt="Comments section"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#current-status-three-branches-"&gt;
  &lt;/a&gt;
  Current Status three branches :-
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/ajitsinghkaler/devto-clone"&gt;Main&lt;/a&gt; - This branch contains the Homepage, Article-detail with comments, Listing page&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ajitsinghkaler/devto-clone/tree/comments"&gt;Comments&lt;/a&gt; - This branch contains the comments section of the article detail page &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ajitsinghkaler/devto-clone/pull/18"&gt;Nivetha Mani&lt;/a&gt; -  This branch contains the videos section&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#discussions"&gt;
  &lt;/a&gt;
  Discussions
&lt;/h2&gt;

&lt;p&gt;I've started a new discussion weather we should move the project to Nx on main branch or keep it on angular-cli. Would love to hear everyone's opinion.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#issue"&gt;
  &lt;/a&gt;
  Issue
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/ajitsinghkaler/devto-clone/issues/21"&gt;In article details page syntax highlighting does not work&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/ajitsinghkaler/devto-clone/issues/23"&gt;Do we need store for all api&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#commits"&gt;
  &lt;/a&gt;
  Commits
&lt;/h2&gt;

&lt;p&gt;This time I won't add all the commits there are many I "ll highlight the most useful &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/ajitsinghkaler/devto-clone/commit/49d782eca08f3086bbc184582aaca781ba28ba98"&gt; add github actions for deployent on main branch &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/ajitsinghkaler/devto-clone/commit/caad69991cccf550bae97eecbd4099645886056d"&gt; fix article details &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/ajitsinghkaler/devto-clone/commit/24557b03a3787e4ebc4e609b923665f9ac8c14ed"&gt;Reactions data added&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/ajitsinghkaler/devto-clone/commit/887241050a1c7725d413953e9a7438e2fe491906"&gt;Fix grid layout and add article detail styles&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Next time I'll finish the comments section. if anyone wants to contribute they can connect on twitter with me my handle is &lt;a href="https://twitter.com/ajitsinghkaler"&gt;@ajitsinghkaler&lt;/a&gt; my dm's are open or on github.&lt;/p&gt;

</description>
      <category>angular</category>
      <category>webdev</category>
      <category>showdev</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Intro to React-Router-DOM</title>
      <author>Adriana DiPietro</author>
      <pubDate>Fri, 20 Aug 2021 02:16:37 +0000</pubDate>
      <link>https://dev.to/am20dipi/intro-to-react-router-dom-236a</link>
      <guid>https://dev.to/am20dipi/intro-to-react-router-dom-236a</guid>
      <description>&lt;p&gt;If you are new to utilizing React alongside JavaScript in your application, I would like to introduce a very special node package called "react-router-dom". &lt;/p&gt;

&lt;p&gt;Today, we will be discussing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#npm"&gt;What is node package manager(NPM)?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#node-package"&gt;What is a node package?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#install-np"&gt;How do we install node packages to our application?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#react-router-dom"&gt;What is "react-router-dom"?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rrdm-app"&gt;How can "react-router-dom" elevate an application?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's get started!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-node-package-manager"&gt;
  &lt;/a&gt;
  What is node package manager? &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;NPM is a manager for Node.js packages. NPM provides countless packages that developers can use -- for free. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-node-package"&gt;
  &lt;/a&gt;
  What is a node package? &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;A package is a set of prewritten code that provides instant functionality and standardization. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-doe-we-install-node-packages-to-our-application"&gt;
  &lt;/a&gt;
  How doe we install node packages to our application? &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;We can install node packages using a command in the terminal:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install "react-router-dom"&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;This will automatically give your application the prewritten functionality. &lt;/p&gt;

&lt;p&gt;You can see your installed packages in the "package.json" file. This is what is may look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;frontend&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;version&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.1.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;private&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dependencies&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-router-dom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;^5.2.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Stored under "dependencies", "react-router-dom" is listed with its version. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-reactrouterdom"&gt;
  &lt;/a&gt;
  What is "react-router-dom"? &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Now that we can guess that "react-router-dom" is a node package, what does it do?&lt;/p&gt;

&lt;p&gt;The node package provides a standard for routing in React. Let's look at an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;BrowserRouter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-router-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Home.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

   &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
         &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;container&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
               &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="nx"&gt;exact&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/home&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Router&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;         &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;       &lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Within the example above, I do a few things: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I import "Route" from 'react-router-dom'. &lt;/li&gt;
&lt;li&gt;I import "BrowserRouter" from 'react-router-dom' and alias it as "Router".&lt;/li&gt;
&lt;li&gt;I import my Home component from it's .js file location.&lt;/li&gt;
&lt;li&gt;I then declare a class component called "App". &lt;/li&gt;
&lt;li&gt;Within my App component, I render and return a div element. &lt;/li&gt;
&lt;li&gt;Within the div, I render a Router component that contains a single route to a component called "Home".&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;"Router" reflects the collection of navigational components (the Routes) that houses the various URL paths. &lt;/p&gt;

&lt;p&gt;"Route" provides the route itself by an "exact path" attribute and provides the component to be rendered using the "component" attribute.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-can-reactrouterdom-elevate-an-application"&gt;
  &lt;/a&gt;
  How can "react-router-dom" elevate an application? &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;React-router-dom does a fantastic job of syncing the UI to the components in a React application. A Route allows a possible URL change to still maintain the same React component. It also provides a standardization that us developers always strive and search for.&lt;/p&gt;

&lt;p&gt;In summary, "react-router-dom" shows us another way in which React abides by declarative programming: our Routes tell us &lt;strong&gt;what we want to achieve&lt;/strong&gt;, not how. &lt;/p&gt;

&lt;p&gt;⚡Thanks for reading!⚡&lt;br&gt;
☁️Comment below☁️&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>redux</category>
      <category>dom</category>
    </item>
    <item>
      <title>Vscode Extensions You Should Try Out</title>
      <author>oyedeletemitope</author>
      <pubDate>Fri, 20 Aug 2021 01:47:20 +0000</pubDate>
      <link>https://dev.to/oyedeletemitope/vscode-extensions-you-should-try-out-4f58</link>
      <guid>https://dev.to/oyedeletemitope/vscode-extensions-you-should-try-out-4f58</guid>
      <description>&lt;p&gt;It’s no news that vscode has been and still is one of the best code editors in the market. &lt;br&gt;
 Vscode comes with tons of extensions and features that’ll make development processes more efficient, get things done faster, and many more.&lt;/p&gt;

&lt;p&gt;In this article, I’ll be writing about some of these extensions. These are the ones that you'll definitely need.Most of them I’ve used and others were recommend by a few of my colleagues. To make it easier for us I’ll be grouping them into :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; General-purpose extension (necessary extensions that will help improve our use of vs code editor)&lt;/li&gt;
&lt;li&gt; Themes (giving our code editor a customized look)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So let's jump right in!!!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#generalpurpose-extensions"&gt;
  &lt;/a&gt;
  General-purpose extensions
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#blockman"&gt;
  &lt;/a&gt;
  Blockman
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wdwfXNr2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/az5kecjqp9619v2zxh34.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wdwfXNr2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/az5kecjqp9619v2zxh34.JPG" alt="blockman"&gt;&lt;/a&gt;&lt;br&gt;
Blockman is a vscode extension for highlighting a nested block of codes. It gives you information about where the code belongs. It's an extension that’s handy. Get it &lt;a href="https://marketplace.visualstudio.com/items?itemName=leodevbro.blockman"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#auto-close-tag"&gt;
  &lt;/a&gt;
  Auto close tag
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VCUzitHT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nshcpk2eagj59lgbsiek.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VCUzitHT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nshcpk2eagj59lgbsiek.JPG" alt="auto close"&gt;&lt;/a&gt;&lt;br&gt;
We’ve all had moments where we forgot to close a tag which has lead to an error or a bug. Auto close tag eases that burden of ensuring we close our tags by automatically adding HTML/XML close tag now we can write our code without even worrying. Get it &lt;a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-close-tag"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#auto-rename-tag"&gt;
  &lt;/a&gt;
  Auto rename tag
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SnD8wSn9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/010hu0ke1ils6qkvb09b.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SnD8wSn9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/010hu0ke1ils6qkvb09b.JPG" alt="auto rename"&gt;&lt;/a&gt;&lt;br&gt;
Auto name tag as the name implies helps in automatically renaming paired HTML/XML tag. This is another extension I’ll recommend. Get it &lt;a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-spell-checker"&gt;
  &lt;/a&gt;
  Code spell checker
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i1erkV3u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nb8m5jgtpg6uvo5ee079.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i1erkV3u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nb8m5jgtpg6uvo5ee079.JPG" alt="code spell"&gt;&lt;/a&gt;This extension helps check whether your spellings and variables are spelled correctly. The goal of this spell checker is to help catch common spelling errors while keeping the number of false positives low. Get it &lt;a href="https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#eslint"&gt;
  &lt;/a&gt;
  Eslint
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x6Vpcd-P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/895l3lsl2lgxndpup56q.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x6Vpcd-P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/895l3lsl2lgxndpup56q.JPG" alt="eslint"&gt;&lt;/a&gt;&lt;br&gt;
ESLint is a vscode extension that can both format your code and analyze it to make suggestions for improvement. It is also configurable. This means that you can customize how your code is evaluated. Get it &lt;a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prettier"&gt;
  &lt;/a&gt;
  Prettier
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3z5cUlvt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iu8dq8dgp1orzghkaeza.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3z5cUlvt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iu8dq8dgp1orzghkaeza.JPG" alt="prettier"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Prettier is a formatting extension like eslint that automatically helps formats your code whenever you save it.  also, if you’re still new to coding, Prettier can save you  by  allowing you to focus on your project  instead of how to make your code  readable. Get it &lt;a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#live-server"&gt;
  &lt;/a&gt;
  Live server
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qvHVp9x1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mhsm48itoo5t58pi6jyd.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qvHVp9x1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mhsm48itoo5t58pi6jyd.JPG" alt="live server"&gt;&lt;/a&gt;&lt;br&gt;
Live server is another “must-have” vscode extension. Normally, when you make a change in your code or write something new, you need to refresh the page manually to see the changes. In other words, if you make 100 changes in your code each day, you need to refresh the browser 100 times.The live-server extension, however, automates this for you. After installing it, automated localhost will be able to run in your browser, which you can start with a single button. Get it &lt;a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quokka-js"&gt;
  &lt;/a&gt;
  Quokka J.s
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RrLSiEIf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0j1i6dd79tjz7ahvty8v.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RrLSiEIf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0j1i6dd79tjz7ahvty8v.JPG" alt="quokka"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Quokka.js is a developer productivity tool for rapid JavaScript / TypeScript prototyping. Runtime values are updated and displayed in your IDE next to your code, as you type. It’s a simple, lightweight extension, and one that’s perfect for both seasoned developers and newbies alike. It’s also free for community use, but if you’re a JavaScript/TypeScript professional, you can also buy a Pro license that lets you modify your runtime values without having to change your code. Get it &lt;a href="https://marketplace.visualstudio.com/items?itemName=WallabyJs.quokka-vscode"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vscode-icons"&gt;
  &lt;/a&gt;
  VSCode icons
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OfrnITQz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lak967vrnhn0mc9ws1v1.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OfrnITQz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lak967vrnhn0mc9ws1v1.JPG" alt="vs code"&gt;&lt;/a&gt;&lt;br&gt;
vscode-icons is an extension for icon customization, project auto-detection and it adds nice icons too. It helps me identify what I’m looking for much faster. Get it &lt;a href="https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#gitlens"&gt;
  &lt;/a&gt;
  Gitlens
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LEZuWhxv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u3ywqohm7ro6f7n2ruzf.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LEZuWhxv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u3ywqohm7ro6f7n2ruzf.JPG" alt="gitlens"&gt;&lt;/a&gt;&lt;br&gt;
The gitlens extension Supercharges the Git capabilities built into Visual Studio Code. It helps you to visualize code authorship at a glance via Git blame annotations and code lens, seamlessly navigate and explore Git repositories, gain valuable insights via powerful comparison commands, and so much more. GitLens simply helps you better understand code. Get it &lt;a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bracket-pair-colorizer"&gt;
  &lt;/a&gt;
  Bracket Pair Colorizer
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bm9R4lrF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y6qxo4dovvlg05s7vmgx.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bm9R4lrF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y6qxo4dovvlg05s7vmgx.JPG" alt="bracket"&gt;&lt;/a&gt;&lt;br&gt;
It’s such a simple quality of life improvement, This extension essentially allows the bracket that you use in your vscode to have a different color depending on how far they are nested. It allows matching brackets to be identified with colors. The user can define which characters to match, and which colors to use. Get it &lt;a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#live-share"&gt;
  &lt;/a&gt;
  Live share
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KU6N4BNP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/agmyv0z7cww3x8j3x47u.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KU6N4BNP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/agmyv0z7cww3x8j3x47u.JPG" alt="live share"&gt;&lt;/a&gt;&lt;br&gt;
Visual Studio Live Share enables you to edit and debug collaboratively with others in real-time, not minding what programming languages you're using or app types you're building. It allows you to instantly (and securely) share your current project, and then as needed, share debugging sessions, terminal instances, localhost web apps, voice calls, and more! Developers that join your sessions receive all of their editor context from your environment (e.g. language services, debugging), which ensures they can start productively collaborating immediately, without needing to clone any repos or install any SDKs.Get it &lt;a href="https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#themes"&gt;
  &lt;/a&gt;
  Themes
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#one-dark-pro"&gt;
  &lt;/a&gt;
  One dark pro
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E_GYJ5dC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zk7vilvfxk5jz0i2zio5.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E_GYJ5dC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zk7vilvfxk5jz0i2zio5.JPG" alt="dark pro"&gt;&lt;/a&gt;&lt;br&gt;
One Dark Pro is based on Atom's default One Dark theme and is one of the most downloaded themes for VS Code. It's one of my favorite themes so far. Get it &lt;a href="https://marketplace.visualstudio.com/items?itemName=zhuangtongfa.Material-theme"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dracula-theme"&gt;
  &lt;/a&gt;
  Dracula theme
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DU7NwHhH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n2uwr8ivwotcjigzcur1.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DU7NwHhH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n2uwr8ivwotcjigzcur1.JPG" alt="dracula"&gt;&lt;/a&gt;&lt;br&gt;
Dracula is a color scheme for code editors and terminal emulators. with features similar to one dark pro. Get it &lt;a href="https://marketplace.visualstudio.com/items?itemName=dracula-theme.theme-dracula"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#night-owl"&gt;
  &lt;/a&gt;
  Night owl
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fONb7G8D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/giscf9s7svm0riznk9p8.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fONb7G8D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/giscf9s7svm0riznk9p8.JPG" alt="night"&gt;&lt;/a&gt;&lt;br&gt;
For those who are fancy coding at night. night owl extension is the one for you. it has been Fine-tuned for those who like to code late into the night. Color choices have taken into consideration what is accessible to people with colorblindness and in low-light circumstances. Get it &lt;a href="https://marketplace.visualstudio.com/items?itemName=sdras.night-owl"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#shades-of-purple-sop"&gt;
  &lt;/a&gt;
  Shades of Purple (SOP)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RTmGjndD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/80626tuy2pldshpm5a8e.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RTmGjndD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/80626tuy2pldshpm5a8e.JPG" alt="purple"&gt;&lt;/a&gt;&lt;br&gt;
A professional theme with hand-picked &amp;amp; bold shades of purple for your VS Code editor and terminal. It comes with features and attributes like color highlighting and more. Get it &lt;a href="https://marketplace.visualstudio.com/items?itemName=ahmadawais.shades-of-purple"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;There are tons of extensions out there, these are the few I've worked with. I'll be at the comment section wanting to hear which VSCode extension you'd recommend and how helpful you think it'll be. Please share if you found this helpful.&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>100daysofcode</category>
      <category>devops</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
