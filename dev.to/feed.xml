<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What's your best PR etiquette tip?</title>
      <author>Waylon Walker</author>
      <pubDate>Tue, 15 Jun 2021 16:01:23 +0000</pubDate>
      <link>https://dev.to/waylonwalker/what-s-your-best-pr-etiquette-tip-5c9b</link>
      <guid>https://dev.to/waylonwalker/what-s-your-best-pr-etiquette-tip-5c9b</guid>
      <description>&lt;p&gt;What's your best PR etiquette tip?  From the standpoint of reviewee or reviewer, your choice.&lt;/p&gt;

&lt;p&gt;Discuss 👇&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>git</category>
    </item>
    <item>
      <title>What are signed routes in Laravel and how to use them?</title>
      <author>Bobby Iliev</author>
      <pubDate>Tue, 15 Jun 2021 15:39:23 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/what-are-signed-routes-in-laravel-and-how-to-use-them-4kni</link>
      <guid>https://dev.to/bobbyiliev/what-are-signed-routes-in-laravel-and-how-to-use-them-4kni</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Signed routes allow you to create routes accessible only when a signature is passed as a GET parameter. This could be used for sharing a preview of a draft article or any other route that you want to be public but only accessible by people who have the signature.&lt;/p&gt;

&lt;p&gt;You could also use signed routes to allow them access to a specific route for a set period of time. For example, if you are launching a new course or SaaS, you might want to open the registration only for a day and allow just a small number of people to sign up for your product initially.&lt;/p&gt;

&lt;p&gt;In this tutorial, you will learn how to create signed routes for your Laravel application!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h1&gt;

&lt;p&gt;Before you start, you would need to have a Laravel application up and running.&lt;/p&gt;

&lt;p&gt;I will be using a DigitalOcean Ubuntu Droplet for this demo. If you wish, you can use my affiliate code to get &lt;a href="https://m.do.co/c/2a9bba940f39"&gt;free $100 DigitalOcean credit&lt;/a&gt; to spin up your own servers!&lt;/p&gt;

&lt;p&gt;If you do not have that yet, you can follow the steps from this tutorial on how to do that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-install-laravel-on-digitalocean-with-1-click"&gt;How to Install Laravel on DigitalOcean with 1-Click&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or you could use this awesome script to do the installation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devdojo.com/episode/laravel-on-digital-ocean-with-larasail"&gt;LaraSail&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#defining-a-signed-route"&gt;
  &lt;/a&gt;
  Defining a signed route
&lt;/h1&gt;

&lt;p&gt;To keep things simple, as an example, we will create a route that returns a discount code. The route would only be available for 10 minutes so that only the first people who get to the route would get the discount code.&lt;/p&gt;

&lt;p&gt;To create a signed route, open your &lt;code&gt;routes/web.php&lt;/code&gt; file with your favorite text editor and add the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Route::get('/discount', function(){
    return 'some_discount_code_here';
})-&amp;gt;name('discountCode')-&amp;gt;middleware('signed');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A quick rundown of the route:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First, we define a get route accessible at the &lt;code&gt;/discount&lt;/code&gt; URL.&lt;/li&gt;
&lt;li&gt;Then we create a closure that only returns a string here. In a real-life scenario, you would use a controller and possibly a Model which returns a discount code stored in your database.&lt;/li&gt;
&lt;li&gt;Then we specify that this is a named route with the &lt;code&gt;name()&lt;/code&gt; method.&lt;/li&gt;
&lt;li&gt;Finally, with the &lt;code&gt;middleware('signed')&lt;/code&gt; method, we specify that this is a signed route.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now thanks to the signed middleware, the route would only be accessible if the user has the signature hash specified as a parameter.&lt;/p&gt;

&lt;p&gt;If you try to visit the &lt;code&gt;/discount&lt;/code&gt; route directly without passing the signature, you will get a &lt;code&gt;403 Invalid signature error&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Next, we will learn how to get the temporary signed route URL!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#generating-the-signature"&gt;
  &lt;/a&gt;
  Generating the signature
&lt;/h1&gt;

&lt;p&gt;We can use the &lt;code&gt;URL::temporarySignedRoute&lt;/code&gt; method to generate the signature.&lt;/p&gt;

&lt;p&gt;Let's quickly create a Laravel controller that will generate the signed route for us:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php artisan make:controller DiscountController
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will generate the new controller at:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;app/Http/Controllers/DiscountController.php
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open the file with your favorite text editor and first include the &lt;code&gt;URL&lt;/code&gt; facade:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;use Illuminate\Support\Facades\URL;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, create a public method with the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public function discount()
{
    return URL::temporarySignedRoute(
        'discountCode', now()-&amp;gt;addMinutes(30)
    );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's create a route that will hit this method and return the signed route! &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#using-the-signed-route"&gt;
  &lt;/a&gt;
  Using the signed route
&lt;/h1&gt;

&lt;p&gt;We will start by adding a new route, to do so open the &lt;code&gt;routes/web.php&lt;/code&gt; file and add the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;use App\Http\Controllers\DiscountController;

Route::get('/generate-signature', [DiscountController::class, 'discount']);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now if you access the &lt;code&gt;/generate-signature&lt;/code&gt; URL via your browser you will get a similar output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://example.com/discount?expires=1617628939&amp;amp;signature=20a44d614b6e4448c1f3a5bf78d3a44ca9b64b2afa940757bdb66ca2b1537974
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Quick rundown:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First, we define a public method called &lt;code&gt;discount&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;After that, we use the &lt;code&gt;temporarySignedRoute&lt;/code&gt; static method provided by the &lt;code&gt;URL&lt;/code&gt; facade, and we give the following parameters:

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;discountCode&lt;/code&gt; is the name of our route&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;now()-&amp;gt;addMinutes(30)&lt;/code&gt; this specifies that the signature will be valid for the next 30 minutes only&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, if you visit the URL with the signature, you will get your discount code as the response.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note, if you get an error that the &lt;code&gt;signed&lt;/code&gt; class does not exist, make sure to add the following to the &lt;code&gt;protected $routeMiddleware&lt;/code&gt; array in the &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        'signed' =&amp;gt; \Illuminate\Routing\Middleware\ValidateSignature::class,
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above URL will only be valid for 30 minutes, but you could generate signed URLs that are valid forever if you decided to do so.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Now you know how to create signed routes in your Laravel application! There is a wide variety of scenarios when you might want to use this!&lt;/p&gt;

&lt;p&gt;For more information on Laravel Signed Routes, make sure to check out the official docs here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://laravel.com/docs/8.x/urls#signed-urls"&gt;Signed URLs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are just getting started with Laravel, make sure to check out this introduction course here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devdojo.com/course/laravel-7-basics"&gt;Getting started with Laravel&lt;/a&gt;&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>php</category>
      <category>webdev</category>
    </item>
    <item>
      <title>The 10 Most Popular PHP Frameworks and Their Creators</title>
      <author>Bobby Iliev</author>
      <pubDate>Tue, 15 Jun 2021 15:34:11 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/the-10-most-popular-php-frameworks-and-their-creators-475p</link>
      <guid>https://dev.to/bobbyiliev/the-10-most-popular-php-frameworks-and-their-creators-475p</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;It would be really intimidating if you had to start from scratch and reinvent the wheel every time you were to start a new project.&lt;/p&gt;

&lt;p&gt;Luckily in 2021 there is a vast number of brilliant PHP frameworks out there that you can use.&lt;/p&gt;

&lt;p&gt;In my opinion using a framework is a must as it would help you structure your project, so that in case that there were other people working on the project they would be able to easily find their way around.&lt;/p&gt;

&lt;p&gt;In this post I will list out the 10 most popular PHP frameworks and their creatos!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#laravel"&gt;
  &lt;/a&gt;
  Laravel
&lt;/h1&gt;

&lt;p&gt;Laravel is a web application framework with expressive, elegant syntax. This is my personal favourite framework! I love the Laravel ecosystem and all of the great open source tools that you could use.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="//laravel.com"&gt;https://laravel.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Creator: &lt;a href="https://twitter.com/taylorotwell"&gt;Taylor Otwell&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Release date: June 2011&lt;/li&gt;
&lt;li&gt;Source code: &lt;a href="https://github.com/laravel/laravel"&gt;Laravel Source Code&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Logo:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qpXusQZM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/FC5R3ue.png" alt="Laravel logo"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#symfony"&gt;
  &lt;/a&gt;
  Symfony
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="https://symfony.com/"&gt;https://symfony.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Creator: &lt;a href="https://dev.toSensioLabs%20SAS"&gt;https://sensiolabs.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Release date: 22 October 2005&lt;/li&gt;
&lt;li&gt;Source code: &lt;a href="https://github.com/symfony/symfony"&gt;Symfony Source Code&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Logo:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uAgMsDYM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/T6kYVo6.png" alt="Symfony Logo"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#codeigniter"&gt;
  &lt;/a&gt;
  CodeIgniter
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="https://codeigniter.com/"&gt;https://codeigniter.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Creator: &lt;a href="https://en.wikipedia.org/wiki/British_Columbia_Institute_of_Technology"&gt;British Columbia Institute of Technology&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Release date: February 28, 2006&lt;/li&gt;
&lt;li&gt;Source code: &lt;a href="https://github.com/bcit-ci/CodeIgniter"&gt;CodeIgniter Source Code&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Logo:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f659Hmvg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/CW9nZK2.png" alt="CodeIgniter Logo"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#zend-framework-laminas-project"&gt;
  &lt;/a&gt;
  Zend Framework / Laminas Project
&lt;/h1&gt;

&lt;p&gt;The Laminas Project is an open-source continuation of Zend Framework, a PHP framework and component library targeting enterprise applications.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="https://getlaminas.org/"&gt;https://getlaminas.org/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Creator: &lt;a href="https://en.wikipedia.org/wiki/Zend_(company)"&gt;Zend&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Release date: March 2006&lt;/li&gt;
&lt;li&gt;Source code: &lt;a href="https://github.com/laminas/laminas-mvc-skeleton"&gt;Laminas Source Code&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Logo:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---c2oIcvw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/UUphaE5.png" alt="Laminas Logo"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#yii-framework"&gt;
  &lt;/a&gt;
  Yii (Framework)
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="https://www.yiiframework.com/"&gt;https://www.yiiframework.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Team: &lt;a href="https://www.yiiframework.com/team"&gt;Yii Team&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Release date: December 2008&lt;/li&gt;
&lt;li&gt;Source code: &lt;a href="https://github.com/yiisoft/yii2"&gt;Yii  Source Code&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Logo:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SCBmBECx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/MHkZ8bZ.png" alt="Yii Logo"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#cakephp"&gt;
  &lt;/a&gt;
  CakePHP
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="https://cakephp.org/"&gt;https://cakephp.org/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Creator: &lt;a href="https://www.toptal.com/resume/michal-tatarynowicz"&gt;Michal Tatarynowicz&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Release date: April 2005&lt;/li&gt;
&lt;li&gt;Source code: &lt;a href="https://github.com/cakephp/cakephp/"&gt;CakePHP Source Code&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Logo:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wlmxkja2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/llQbqzv.png" alt="CakePHP logo"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#slim"&gt;
  &lt;/a&gt;
  Slim
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="https://www.slimframework.com/"&gt;https://www.slimframework.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Creator: &lt;a href="https://github.com/codeguy"&gt;Josh Lockhart&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Release date: v1.0.0 was released on Nov 2 2010&lt;/li&gt;
&lt;li&gt;Source code: &lt;a href="https://github.com/slimphp/Slim"&gt;Slim Source Code&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Logo:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1-BeEFP6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/9xBBCpM.png" alt="Slim PHP Logo"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#phalcon"&gt;
  &lt;/a&gt;
  Phalcon
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="https://phalcon.io"&gt;https://phalcon.io&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Creator: &lt;a href="https://dev.toAndres%20Gutierrez"&gt;https://github.com/andresgutierrez&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Release date: November 14, 2012&lt;/li&gt;
&lt;li&gt;Source code: &lt;a href="https://github.com/phalcon/cphalcon"&gt;Phalcon Source Code&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Logo:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--brz2of6n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/uRcLEZu.png" alt="Phalcon Logo"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#fuelphp"&gt;
  &lt;/a&gt;
  FuelPHP
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="https://fuelphp.com/"&gt;https://fuelphp.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Creator: &lt;a href="https://www.fuelphp.com/about/"&gt;FuelPHP developer team&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Release date: October 2010&lt;/li&gt;
&lt;li&gt;Source code: &lt;a href="https://github.com/fuel/fuel"&gt;FuelPHP Source Code&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Logo:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OEZwKZpf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/kfClqrK.png" alt="FuelPHP Logo"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#fatfree-framework"&gt;
  &lt;/a&gt;
  Fat-Free Framework
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="https://fatfreeframework.com/"&gt;https://fatfreeframework.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Creator: Commonly called F3&lt;/li&gt;
&lt;li&gt;Release date: 2009&lt;/li&gt;
&lt;li&gt;Source code: &lt;a href="https://github.com/bcosca/fatfree"&gt;Fat-Free Source Code&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Logo:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z5DqrZLa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/kb1aEmO.png" alt="Fat-Free Logo"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;If you are just getting started with coding, it might be a bit overwhelming to have to learn a whole Framework. But in the long run this is going to save you a lot fo development time!&lt;/p&gt;

&lt;p&gt;If I missed a framework that you think should be on the list make sure to let me know by tagging me on Twitter: &lt;a href="https://twitter.com/bobbyiliev_"&gt;@bobbyiliev_&lt;/a&gt;&lt;/p&gt;

</description>
      <category>php</category>
      <category>laravel</category>
      <category>webdev</category>
      <category>frameworks</category>
    </item>
    <item>
      <title>React custom hooks : A simple explanation🐱‍👤</title>
      <author>ali</author>
      <pubDate>Tue, 15 Jun 2021 15:11:28 +0000</pubDate>
      <link>https://dev.to/_ali_/react-custom-hooks-a-simple-explanation-bpj</link>
      <guid>https://dev.to/_ali_/react-custom-hooks-a-simple-explanation-bpj</guid>
      <description>&lt;p&gt;Hi all 👋&lt;/p&gt;

&lt;p&gt;React 16.8 V comes with several useful features and one being hooks. Hooks are super useful. Some of the predefined hooks are useState, &lt;a href="https://dev.to/_ali_/useeffect-a-simple-explanation-36n4"&gt;useEffect&lt;/a&gt;. Today we will see how to write a custom hook 🎣.&lt;/p&gt;

&lt;p&gt;But before we start, why do we need to write a custom hook ? &lt;br&gt;
A common scenario where we might need a custom hook is to extract the duplicate code/logic and separate it into a single function, thus re using the same code whenever needed. &lt;br&gt;
Traditionally we had two popular ways to share stateful logic in react.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Render props or &lt;/li&gt;
&lt;li&gt;Higher order components (HOC).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But with hooks we have more flexibility and ease. A custom hook is defined by react as :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A JavaScript function whose name starts with ”use” and that may call other Hooks.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Before we write a custom hook, lets see the rules of hooks.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#rules-of-hooks"&gt;
  &lt;/a&gt;
  Rules of hooks
&lt;/h2&gt;

&lt;p&gt;Basically we have two rules when using hooks and they are :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Only Call Hooks at the Top Level 🔝 &lt;/li&gt;
&lt;li&gt;Only Call Hooks from React Functions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first rule says, not to use hooks in conditions as React relies on the order in which Hooks are called.&lt;/p&gt;

&lt;p&gt;The second rule says to only use hooks from react functions or use a hook in a custom hook.&lt;/p&gt;

&lt;p&gt;We'll cover in-depth about rules of hooks in a separate post but do remember these points while writing your custom hook. Also do remember to name your hook with "&lt;strong&gt;use&lt;/strong&gt;".&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#write-a-simple-custom-hook-%E2%9C%8D"&gt;
  &lt;/a&gt;
  Write a simple custom hook ✍
&lt;/h2&gt;

&lt;p&gt;Let's say we have the following functional component which displays a username and it is fetched from the back-end using a axios get call. Axios is just a library which enables us to make api calls. The data fetching is achieved using the useEffect hook which executes a axios request on component mounting. Do note that I haven't used the cleanup function for ease of understanding, but in an ideal scenario, we must use the cleanup function. I have explained the importance of cleanup function in a separate post on &lt;a href="https://dev.to/_ali_/useeffect-a-simple-explanation-36n4"&gt;useEffect&lt;/a&gt;. The below code fires an axios get request to fetch the username. It also renders loading message or an error message during/after the execution.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;DisplayUserName&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setUserName&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="c1"&gt;//Runs on mounting of the DisplayUserName component&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;axios&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http:localhost:5000/getusername&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;setUserName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Loading ...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="na"&gt;Username&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code works fine. But a proper application would have many number of api calls from different components and is obvious that we may have to repeat the same logic in every component. So to avoid all these boilerplate, we could separate this common logic into our own custom hook which returns the object containing  response, error and loading as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useGetQuery&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setResponse&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="c1"&gt;// Runs whenever the dependency url changes&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;axios&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we extract the code logic and keep it in a separate function. Do note that our name of the custom hook starts with use. This is done so that react understands this is a hook and shows appropriate warnings or errors for our code and react highly recommends that we follow the same convention. Also note that the returning object contains the response, loading and error values. These values can be used in any component which uses our new custom hook. The below code uses our custom hook to display the username, error, loading message whenever applicable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DisplayUserName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http:localhost:5000/getusername&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useGetQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Loading ...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="na"&gt;Username&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#common-errors-while-using-custom-hooks"&gt;
  &lt;/a&gt;
  Common errors while using custom hooks 🐞
&lt;/h2&gt;

&lt;p&gt;Seen this error ?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons: 1. You might have mismatching versions of React and the renderer (such as React DOM) 2. You might be breaking the Rules of Hooks 3. You might have more than one copy of React in the same app See &lt;a href="https://reactjs.org/link/invalid-hook-call"&gt;https://reactjs.org/link/invalid-hook-call&lt;/a&gt; for tips about how to debug and fix this problem&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;or this ?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;React Hook "useGetQuery" cannot be called inside a callback. React Hooks must be called in a React function component or a custom React Hook function.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;or this ?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;React Hook "useGetQuery" is called in function "handleClick" that is neither a React function component nor a custom React Hook function.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This issue may have occurred when a developer tries to call a custom hook in a callback. Remember the rules that I told you about in the beginning? Well this error says just that, that you have violated the rule which says to "use your hook only in a React functional component" and not to use them anywhere else.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#custom-hook-in-a-callback"&gt;
  &lt;/a&gt;
  Custom hook in a callback
&lt;/h2&gt;

&lt;p&gt;As per the rules of hooks, we can't use them in a condition or in a callback. But what if we have to use the logic in a callback ?.&lt;br&gt;
A quick way around is as given below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useFetchQuery&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setResponse&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;🍎&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;🍌&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;🥭&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;🍇&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;🍉&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetchDetails&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;setResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//Logic to update the response to a random fruit&lt;/span&gt;
    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
      &lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="c1"&gt;//The fetchDetails method is returned from our custom hook&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;fetchDetails&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A above code is pretty self explanatory. I have used setTimeout function to emulate a api call. The function fetchDetails updates the response as a random fruit from the fruit array. It also updates the loading state.&lt;/p&gt;

&lt;p&gt;Notice how we have returned the fetchDetails function from our custom hook useFetchQuery. This function can be used in our callback as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;fetchDetails&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useFetchQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleClick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//Notice the fetchDetails method which is used below&lt;/span&gt;
    &lt;span class="nx"&gt;fetchDetails&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;Click&lt;/span&gt; &lt;span class="nx"&gt;Here&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Loading&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Random&lt;/span&gt; &lt;span class="nx"&gt;Fruit&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On clicking the button, handleClick callback is executed which in turn calls the fetchDetails function from our custom hook.&lt;/p&gt;

&lt;p&gt;Here is the codesandbox : &lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/romantic-dawn-yj462"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Conclusion&lt;/p&gt;

&lt;p&gt;React provides us with several hooks. The developer has  more flexibility as he/she can write a custom hook whenever needed. Do remember the rules of the hooks while writing your custom hook. Hope you understood the basics of creating your custom hook. Do follow for more posts similar to this. Until next time 🤟&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Telebot using Python</title>
      <author>Pooja Ghodmode</author>
      <pubDate>Tue, 15 Jun 2021 14:18:54 +0000</pubDate>
      <link>https://dev.to/poojaghodmode/telebot-using-python-3akh</link>
      <guid>https://dev.to/poojaghodmode/telebot-using-python-3akh</guid>
      <description>&lt;p&gt;In this article, we will build a Telegram Bot using Python, which will send cat 😺 photos and cat facts. For this, I will be using &lt;strong&gt;pytelegrambotapi&lt;/strong&gt; library.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-our-bot"&gt;
  &lt;/a&gt;
  Setting our Bot
&lt;/h2&gt;

&lt;p&gt;First, we will need a Telegram account, if you don't have one you can create one easily. In telegram, search for BotFather. It will look as shown in the image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VJpB-qFE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ocwxsma3j8f1mu9lia2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VJpB-qFE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ocwxsma3j8f1mu9lia2.png" alt="BotFather"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then we have to send start and then follow the instructions given by BotFather. In short, &lt;code&gt;/start&lt;/code&gt; &amp;gt; &lt;code&gt;/newbot&lt;/code&gt; &amp;gt; name for bot &amp;gt; username for Bot(unique). After this, BotFather will provide Token to access our bot. Format of AUTH token will be like this 1111111111:AAA_A_aaaaaaaaaaaaaaaaaaa_aaaaaaaaa.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#steps-to-build-the-bot"&gt;
  &lt;/a&gt;
  Steps to build the bot:
&lt;/h2&gt;

&lt;p&gt;Now we move to our code. First we will create a virtual environment using venv. &lt;/p&gt;

&lt;p&gt;💡 &lt;strong&gt;Note&lt;/strong&gt;: You can use other options too.&lt;/p&gt;

&lt;p&gt;If you know this part feel free to skip⏩.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-virtual-environment"&gt;
  &lt;/a&gt;
  Setting Virtual environment:
&lt;/h3&gt;

&lt;p&gt;In terminal, open your directory and enter following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-m&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;venv&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;venv&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To Activate your virtual environment:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;venv\Scripts\activate&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Terminal will look like this..&lt;/p&gt;

&lt;p&gt;(venv) (project_path)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dependencies-required"&gt;
  &lt;/a&gt;
  Dependencies required:
&lt;/h3&gt;

&lt;p&gt;You can find whole code and requirement &lt;a href="https://github.com/PoojaGhodmode/CatBot"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pyTelegramBotAPI==3.7.9
python-dotenv==0.17.1
requests==2.25.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h3&gt;

&lt;p&gt;Finally, create a python file to write our script.  First, let's import requirements. For now, we will just import telebot and incoming parts, we will import others as when required.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;code&gt;purrrfect_bot.py&lt;/code&gt;&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;telebot&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dotenv&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;load_dotenv&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we will store our token in a variable. For this, create a file .env in the same directory. And store the token in the AUTH_TOKEN variable.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.env&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;AUTH_TOKEN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'YOUR_TOKEN'&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we have to load this Token in our main file.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;code&gt;purrrfect_bot.py&lt;/code&gt;&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;load_dotenv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'AUT_TOKEN'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After this, we will create the instance of our bot and start polling the messages.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;code&gt;purrrfect_bot.py&lt;/code&gt;&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;bot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;telebot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TeleBot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# creating a instance
&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;polling&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# looking for message
&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To check our bot, we will set one message handler such that whenever we send &lt;strong&gt;/greet&lt;/strong&gt; (command) or &lt;strong&gt;/start&lt;/strong&gt;, the reply should be "Hello, how are you?". &lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;code&gt;purrrfect_bot.py&lt;/code&gt;&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message_handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;commands&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'greet'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'start'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''' Hello, how are you? '''&lt;/span&gt;
    &lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reply_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In above part, whenever we will send command greet or start to our bot, &lt;code&gt;greet&lt;/code&gt; function will run.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;reply_to&lt;/code&gt; method send reply to &lt;strong&gt;/start&lt;/strong&gt; or &lt;strong&gt;/greet&lt;/strong&gt; i.e. to the message.&lt;/p&gt;

&lt;p&gt;To check our code, we will run code in terminal&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;main_file_name.py&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Try sending &lt;strong&gt;/start&lt;/strong&gt; or &lt;strong&gt;/greet&lt;/strong&gt; to the bot, it should reply "Hello, how are you?"&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M_Ce-ctX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kevimplrewi6ge5pd6wt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M_Ce-ctX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kevimplrewi6ge5pd6wt.png" alt="start function"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But if we don't want to reply to message then we can use &lt;code&gt;send_message&lt;/code&gt; method. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;code&gt;purrrfect_bot.py&lt;/code&gt;&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message_handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;commands&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'greet'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'start'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''' Hello, how are you? '''&lt;/span&gt;
    &lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To use send_message, we will require the id of the sender. We can get this id from the message itself i.e. &lt;code&gt;message.chat.id&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;After running, we will get message without reply.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fBNz2f5d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rap5kc4fmqlkrbaecn2o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fBNz2f5d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rap5kc4fmqlkrbaecn2o.png" alt="start function without reply"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, if a user sends anything other than commands, the bot will not reply with anything. For this, we can set &lt;code&gt;message_handler&lt;/code&gt; with the function that will send the same message back to the user. For more information, see the &lt;a href="https://github.com/eternnoir/pyTelegramBotAPI"&gt;documentation&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;bot.message_handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;lambda&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;m:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;bot.send_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message.chat.id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;message.text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M6hA7WcC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rbhoajtziywanpahfwwe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M6hA7WcC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rbhoajtziywanpahfwwe.png" alt="repeat the message"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;💡 &lt;strong&gt;Note&lt;/strong&gt;: It will work with only text/emojis and not with stickers or any other type of media.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#api"&gt;
  &lt;/a&gt;
  API
&lt;/h3&gt;

&lt;p&gt;So our main aim is to send cat images and facts whenever the user sends a command. To get the cat images and cat facts, we will be using two Public API. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/ThatCopy/catAPI/wiki/Usage"&gt;Cat Images&lt;/a&gt; : &lt;a href="https://thatcopy.pw/catapi/rest/"&gt;https://thatcopy.pw/catapi/rest/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://i.thatcopy.pw/cat/UJzx759.jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"webpurl"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://i.thatcopy.pw/cat-webp/UJzx759.webp"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;47.55&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;60.05&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://alexwohlbruck.github.io/cat-facts/"&gt;Cat Facts&lt;/a&gt; :  &lt;a href="https://cat-fact.herokuapp.com/facts/random?animal_type=cat&amp;amp;amount=1"&gt;https://cat-fact.herokuapp.com/facts/random?animal_type=cat&amp;amp;amount=1&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"status"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"verified"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"sentCount"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"cat"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"deleted"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"591f9890d369931519ce353d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"__v"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"The domestic cat is the only species able to hold its tail vertically while walking. You can also learn about your cat's present state of mind by observing the posture of his tail."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"source"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"api"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"updatedAt"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2020-08-23T20:20:01.611Z"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"createdAt"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2018-01-04T01:10:54.673Z"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"used"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"user"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"5a9ac18c7478810ea6c06381"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Both the output are in JSON format. In the first API, We will use a &lt;code&gt;url&lt;/code&gt; for sending the image or &lt;code&gt;webpurl&lt;/code&gt; to send the cat sticker😸. And in the second API, we will use &lt;code&gt;text&lt;/code&gt; to send the facts.&lt;/p&gt;

&lt;p&gt;To make GET request to API, we will use request module.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;code&gt;purrrfect_bot.py&lt;/code&gt;&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;telebot&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dotenv&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;load_dotenv&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;request&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will write functions to get the image URL and facts.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;code&gt;purrrfect_bot.py&lt;/code&gt;&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_url&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;contents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'https://thatcopy.pw/catapi/rest/'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;image_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'url'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;image_url&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_fact&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;contents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'https://cat-fact.herokuapp.com/facts/random?animal_type=cat&amp;amp;amount=1'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;fact&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'text'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fact&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;get_fact&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fact&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that the get method is used to make a GET request. As our response is in JSON form, request.json() will convert in the dictionary. Hence, we can access it as key-value pair i.e. &lt;code&gt;content['url']&lt;/code&gt; and &lt;code&gt;contents['text']&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If statement is used to not send the facts whose length is less than 10.&lt;/p&gt;

&lt;p&gt;Now we have to set commands for which bot will send image or fact.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;code&gt;purrrfect_bot.py&lt;/code&gt;&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message_handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;commands&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'meow'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;meow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_url&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_photo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message_handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;commands&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'fact'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fact&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;fact&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_fact&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fact&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In my case, &lt;strong&gt;/meow&lt;/strong&gt; will send the image, and &lt;strong&gt;/fact&lt;/strong&gt; will send the fact. In the &lt;code&gt;get_url&lt;/code&gt; function change, &lt;strong&gt;url&lt;/strong&gt; to &lt;strong&gt;webpurl&lt;/strong&gt;, and in the meow function, use send_sticker instead of &lt;code&gt;send_photo&lt;/code&gt; to &lt;code&gt;send_sticker&lt;/code&gt; in place of the image.&lt;/p&gt;

&lt;p&gt;💡 &lt;strong&gt;Note&lt;/strong&gt;: Make sure these message handlers are placed above repeat. Otherwise, the bot will send a command in reply.&lt;/p&gt;

&lt;p&gt;To get more help about what commands have to be used, we can also edit our  &lt;strong&gt;/start&lt;/strong&gt; message.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;code&gt;purrrfect_bot.py&lt;/code&gt;&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message_handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;commands&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'greet'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'start'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''' Hello, how are you? 
Send /meow to get a cat image.
Send /fact to get random Cat Fact.'''&lt;/span&gt;
    &lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eFZCEB-c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/unihdukhjky2dmwnsa1z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eFZCEB-c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/unihdukhjky2dmwnsa1z.png" alt="meow and fact function"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, if we want images or facts on just meow or fact i.e. without '/' (text).&lt;/p&gt;

&lt;p&gt;We can add regex to the same function. We can stack two decorators on the same function. After editing, the code will look like this&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;code&gt;purrrfect_bot.py&lt;/code&gt;&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message_handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;commands&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'meow'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message_handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;regexp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s"&gt;'meow'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;meow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_url&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_photo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message_handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;commands&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'fact'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message_handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;regexp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s"&gt;'fact'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fact&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;fact&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_fact&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fact&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VtUhWjvH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aw8yo0mha9cpmewrpzox.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VtUhWjvH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aw8yo0mha9cpmewrpzox.png" alt="meow and facts function with regex"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, our bot is ready and sending us happiness in form of photos. You can customize it as you want and have fun with it. Feel free to give feedback or to ask any doubt..&lt;/p&gt;

&lt;p&gt;Repository link: &lt;a href="https://github.com/PoojaGhodmode/CatBot"&gt;https://github.com/PoojaGhodmode/CatBot&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/eternnoir/pyTelegramBotAPI"&gt;pytelegrambotapi documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/learn-to-build-your-first-bot-in-telegram-with-python-4c99526765e4/"&gt;Dzaky Widya Putra - Learn to build your first bot in telegram with python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/NwBWW8cNCP4"&gt;CS Dojo - How to create a telegram bot with python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>beginners</category>
      <category>python</category>
      <category>telegram</category>
    </item>
    <item>
      <title>Micronaut – primeiras impressões</title>
      <author>Henrique Lobo Weissmann (Kico)</author>
      <pubDate>Tue, 15 Jun 2021 14:11:23 +0000</pubDate>
      <link>https://dev.to/loboweissmann/micronaut-primeiras-impressoes-456e</link>
      <guid>https://dev.to/loboweissmann/micronaut-primeiras-impressoes-456e</guid>
      <description>&lt;p&gt;Já ouviu falar deste framework? Ele foi criado por Graeme Rocher, o mesmo sujeito que criou o Grails e promete resolver diversos dos problemas que temos tanto no Grails quanto no Spring. Mas ele substitui estes frameworks? No caso do Grails, não, já quando o assunto é Spring, talvez. Neste post vou colocar aqui minhas primeiras impressões.&lt;/p&gt;

&lt;h2&gt;O que é o Micronaut&lt;/h2&gt;

&lt;p&gt;Pelo primeiro parágrafo você já sabe: é mais um framework voltado para o desenvolvimento web, mas não qualquer desenvolvimento web, e sim APIs, mais especificamente micro serviços. Então ao ler sua &lt;a href="https://micronaut.io/documentation.html"&gt;documentação&lt;/a&gt; você verá diversos termos usado para este tipo de aplicação:  &lt;em&gt;cloud native&lt;/em&gt;, &lt;em&gt;service configuration, serverless functions &lt;/em&gt;e todas aquelas palavrinhas que já estamos pra lá de acostumados a ouvir.&lt;/p&gt;

&lt;p&gt;Até aí não há grandes novidades: tanto &lt;a href="https://spring.io"&gt;Spring&lt;/a&gt; quanto &lt;a href="https://grails.org"&gt;Grails&lt;/a&gt; já nos oferecem suporte a todas estas tecnologias  de forma direta ou indireta. Estou desenvolvendo alguns pequenos projetos com ele (um inclusive de grande importância) algo que posso afirmar com segurança é: &lt;strong&gt;não há um significativo salto de produtividade para o desenvolvedor tal como experimentamos no primeiro contato com Grails ou Spring Boot&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Então o que motivou a equipe de Graeme Rocher a criar este novo framework? Quais os problemas que foram detectados no Spring e Grails que ele tenta resolver? É aí que a coisa fica interessante: do ponto de vista estritamente ligado à autoria de código você vai trabalhar com o mesmo JPA que já conhece, a escrita dos controladores é essencialmente igual, é possível inclusive usar quase &lt;a href="https://micronaut-projects.github.io/micronaut-spring/latest/guide/index.html"&gt;todas as anotações do Spring e implementar suas interfaces&lt;/a&gt; no Micronaut. Em relação à linguagem de programação, também não há grandes ganhos: você pode usar Groovy, Java ou Kotlin, então sem choques aqui também. &lt;strong&gt;O que muda é a infraestrutura&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;Que infraestrutura?&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vf-tUXYN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.itexto.com.br/devkico/wp-content/uploads/2019/04/12531655-the-pipes-and-mechanical-systems-of-an-aircraft-jet-engine-would-make-a-great-steam-punk-background-.jpg%3Ffit%3D800%252C550%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vf-tUXYN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.itexto.com.br/devkico/wp-content/uploads/2019/04/12531655-the-pipes-and-mechanical-systems-of-an-aircraft-jet-engine-would-make-a-great-steam-punk-background-.jpg%3Ffit%3D800%252C550%26ssl%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;É aqui que a coisa fica realmente interessante: temos agora uma infraestrutura &lt;strong&gt;realmente nova&lt;/strong&gt;. E isto se aplica em alguns pontos que, confesso, mudaram minha maneira de pensar como frameworks são escritos de uma forma bastante radical.&lt;/p&gt;

&lt;h4&gt;A reflexão mostra seu preço - boot instantâneo e baixíssimo consumo de memória&lt;/h4&gt;

&lt;p&gt;A reflexão tem seu preço, no entanto a primeira vez que realmente o experimentei &lt;strong&gt;de verdade&lt;/strong&gt; este custo foi escrevendo projetos com Micronaut. &lt;/p&gt;

&lt;p&gt;Explico: praticamente todo framework Java usa anotações para identificar seus componentes: a anotação &lt;em&gt;@Controller&lt;/em&gt;, por exemplo, identifica uma classe como um bean que irá disponibilizar endpoints HTTP. Quando sua aplicação inicia o framework lê o classpath da aplicação, identifica todas as classes anotadas e, na sequência, aplica as ações necessárias para que desempenhem o papel definido por estas anotações.&lt;/p&gt;

&lt;p&gt;O Micronaut segue o caminho oposto: ainda temos as anotações, tal como disse acima, você irá codificar suas classes de uma forma bastante similar à que já está acostumado no Spring (é quase igual). A diferença é que usando um recurso pouco conhecido pela maior parte dos programadores (&lt;a href="https://docs.oracle.com/javase/8/docs/api/javax/annotation/processing/Processor.html"&gt;annotation procesors&lt;/a&gt; do Java e processamento de bytecode usando a biblioteca &lt;a href="https://asm.ow2.io/"&gt;ASM&lt;/a&gt;) temos &lt;a href="https://docs.micronaut.io/latest/guide/index.html#ioc"&gt;um novo container de injeção de dependências e inversão de controle&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Um container que não descobre quem são os nossos beans em tempo de execução, mas sim &lt;strong&gt;em tempo de compilação.&lt;/strong&gt; E isto faz toda a diferença. Qual? Basicamente uma aplicação que use os recursos de segurança providos pelo Micronaut, muito similares aos que temos no Spring Security e JPA é iniciada quase que instantaneamente (no máximo 2 segundos em meus testes).&lt;/p&gt;

&lt;p&gt;(se você tem aplicações feitas em Grails que usam o Spring Security sabe muito bem do que estou falando: temos uma inicialização leeeeeenta)&lt;/p&gt;

&lt;p&gt;O modo como lidamos com classes proxy também é diferenciado. Neste container de IoC também podemos trabalhar com &lt;a href="https://docs.micronaut.io/latest/guide/index.html#aop"&gt;AOP&lt;/a&gt;, tal como no caso do Spring, mas com advices e interceptadores também definidos em tempo de compilação.&lt;/p&gt;

&lt;p&gt;E não temos apenas aqui a inicialização instantânea do projeto: outro problema também é resolvido. O &lt;strong&gt;consumo de memória é significativamente menor&lt;/strong&gt;. Algo que já havia experimentado com Node.js estou vivenciando agora: tenho APIs executando agora que consomem menos de 100 Mb de memória. Você consegue imaginar isto com Java? Eu também não acreditava, mas to vendo isto aqui na minha frente agora!&lt;/p&gt;

&lt;h4&gt;Servlets? Finalmente uma alternativa&lt;/h4&gt;

&lt;p&gt;Esta é outra mudança surpreendente. &lt;strong&gt;Todos&lt;/strong&gt; os frameworks que conheço para o desenvolvimento web usam a mesma base: &lt;a href="https://docs.oracle.com/javaee/7/api/javax/servlet/Servlet.html"&gt;servlets&lt;/a&gt;. E aqui pela primeira vez na JVM vejo uma alternativa emergir: não mais uma solução baseada no Java Enterprise Edition padrão, mas sim o provimento de um servidor de aplicação próprio, embutido no projeto.&lt;/p&gt;

&lt;p&gt;Este novo servidor web é o primeiro que vejo na plataforma Java que é independente do Java EE tradicional, baseado em servlets. Se baseia em uma outra tecnologia bastante antiga e infelizmente pouco conhecida pelos desenvolvedores hoje: &lt;a href="https://netty.io/"&gt;Netty&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Um framework usado para a construção de aplicações de rede assíncronos, de altíssima disponibilidade e desempenho que tem como resultado um novo servidor HTTP diferente daquele com o qual estamos acostumados. Um servidor focado &lt;strong&gt;não no padrão MVC tradicional no qual pode haver o retorno de páginas HTML, mas sim uma solução projetada desde o primeiro momento tendo como foco a troca de mensagens (JSON) entre micro-serviços.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Em um primeiro momento você pode pensar nesta mudança como um mero ganho de desempenho. Eu já a vejo como um precedente importantíssimo, que abrirá as portas para um universo de inovações no Java simplesmente maravilhoso.&lt;/p&gt;

&lt;h2&gt;Como é programar usando o Micronaut&lt;/h2&gt;

&lt;p&gt;Se você quer novidade é bastante decepcionante por que é basicamente como estamos acostumados a escrever APIs no Spring. Não há novidades: até as anotações são essencialmente as mesmas, mudando apenas o pacote para que possamos tirar proveito da geração de código em tempo de compilação. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lg62651Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.itexto.com.br/devkico/wp-content/uploads/2010/11/spring_logo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lg62651Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.itexto.com.br/devkico/wp-content/uploads/2010/11/spring_logo.gif" alt=""&gt;&lt;/a&gt;se você já sabe Spring, a curva de aprendizado é mínima&lt;/p&gt;

&lt;p&gt;Como disse antes, não há um salto de produtividade aqui: talvez você consiga um pouquinho mais de produtividade se gosta de Groovy ou Kotlin, que também podem ser usadas no framework, mas já aviso, não terá uma mudança significativa.&lt;/p&gt;

&lt;p&gt;Algo muito bacana no Micronaut é que ele nos perite uma curva de aprendizado mais amigável. Por padrão é usado o Gradle como mecanismo de build, mas se você quiser trabalhar com Maven, é possível também. Recomendo ir pro Maven neste caso? Não, por que a documentação hoje fala mais sobre o Gradle e quase não menciona Maven.&lt;/p&gt;

&lt;p&gt;No uso da IDE a adoção do Gradle faz diferença: se você tentar iniciar o projeto a partir de uma classe isolada, por exemplo, terá problemas neste primeiro momento. Na prática sempre deverá tanto executar a aplicação quanto seus testes a partir do Gradle, o que pode ser um pouco chato no início mas com o tempo você se acostuma.&lt;/p&gt;

&lt;h2&gt;Além da infraestrutura, o que há de interessante&lt;/h2&gt;

&lt;p&gt;Não se engane: temos aqui uma ferramenta voltada para o desenvolvimento de micro serviços, o que fica claro nos recursos que o framework nos fornece de cara.&lt;/p&gt;

&lt;h3&gt;Escrita de testes muito mais simples&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2MCkJjkq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.itexto.com.br/devkico/wp-content/uploads/2019/04/crash-test-dummy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2MCkJjkq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.itexto.com.br/devkico/wp-content/uploads/2019/04/crash-test-dummy.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dentre os recursos, aquele que mais gostei foi o fato de nos fornecer um servidor HTTP embarcado, mas mais do que isto, também um cliente HTTP. Pra escrita de testes é maravilhoso, por que nos permite instanciar o servidor e realizar nossos testes escrevendo requisições HTTP e não apenas chamada a métodos. Isto faz toda a diferença se você, como eu, prefere escrever testes que verificam comportamentos da nossa IDE. A escrita deste tipo de testes tanto no Spring quanto no Grails pode ser bastante trabalhosa: aqui é trivial.&lt;/p&gt;

&lt;p&gt;Você pode escrever seus testes inclusive usando aquilo que já conhece: jUnit ou Spock. Existe inclusive &lt;a href="https://micronaut-projects.github.io/micronaut-test/latest/guide/index.html"&gt;um módulo&lt;/a&gt; que torna a configuração destes testes algo simples.&lt;/p&gt;

&lt;h3&gt;Um framework de segurança pronto e fácil de usar&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lF2stKuN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.itexto.com.br/devkico/wp-content/uploads/2019/04/security.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lF2stKuN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.itexto.com.br/devkico/wp-content/uploads/2019/04/security.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No Grails e Spring temos o Spring Security, e no caso do Micronaut também temos uma solução para esta questão, só que não é um módulo a parte, mas sim parte do próprio framework.&lt;/p&gt;

&lt;p&gt;Se você já conhece o Spring Framework irá se sentir em casa aqui: &lt;a href="https://docs.micronaut.io/latest/guide/index.html#security"&gt;a solução proposta pelo Micronaut&lt;/a&gt; é quase uma cópia, só que mais simples e já vindo com os recursos que são essenciais na escrita de micro-serviços nesta área:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JWT&lt;/li&gt;
&lt;li&gt;Autenticação por sessão.&lt;/li&gt;
&lt;li&gt;LDAP.&lt;/li&gt;
&lt;li&gt;Autenticação básica (jamais recomendo, mas para legados é interessante)&lt;/li&gt;
&lt;li&gt;Um mecanismo que nos permite flexibilidade na construção de nossos próprios provedores de autenticação.&lt;/li&gt;
&lt;li&gt;Endpoints de autenticação prontos pra serem usados.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Prover isto já pronto para o desenvolvedor pode e irá reduzir significativamente os custos na implementação destes requisitos de restrição de acesso. Inclusive, novamente, as mesmas anotações que temos no Spring Security vemos aqui, como a @Secured, por exemplo.&lt;/p&gt;

&lt;h3&gt;Multi tenância&lt;/h3&gt;

&lt;p&gt;O framework também oferece suporte a multi tenância pronta para ser usada. E com um detalhe interessante: nos permite usar o GORM como solução. Sim, o mesmo framework de persistência que usamos no Grails e que é uma das razões pelas quais o adotamos.&lt;/p&gt;

&lt;h3&gt;Monitoramento&lt;/h3&gt;

&lt;p&gt;Se vamos construir micro-serviços, temos aqui a necessidade de monitorarmos a qualidade do serviço. Tal como o Spring Boot nos fornece o Actuator (um módulo a parte), Micronaut nos oferece o básico para que possamos monitorar sua qualidade.&lt;/p&gt;

&lt;p&gt;É uma versão bem mais simples do Actuator, mas na minha opinião bem mais funcional. Nos permite, por exemplo, criar rapidamente (usando apenas configuração) endpoints que nos permitem verificar as configurações do servidor, checagem de versão, beans carregados, recursos computacionais, etc. Muito útil.&lt;/p&gt;

&lt;h2&gt;E a adoção? E pra onde vamos? E o Grails?&lt;/h2&gt;

&lt;p&gt;Faz pouco mais de um mês que a primeira versão final do Micronaut saiu. Naturalmente, este ainda não é uma solução amplamente adotada pela comunidade, mas já é uma solução que está chacoalhando a comunidade Java. O tweet a seguir de Graeme Rocher é bastante significativo:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Amazing thing about the 9 months since we open sourced &lt;a href="https://twitter.com/micronautfw?ref_src=twsrc%5Etfw"&gt;@micronautfw&lt;/a&gt; is the impact it has had on server side &lt;a href="https://twitter.com/java?ref_src=twsrc%5Etfw"&gt;@java&lt;/a&gt;. Inspiring &lt;a href="https://twitter.com/RedHat?ref_src=twsrc%5Etfw"&gt;@Redhat&lt;/a&gt; to come up with &lt;a href="https://twitter.com/QuarkusIO?ref_src=twsrc%5Etfw"&gt;@quarkusio&lt;/a&gt;. Pushing &lt;a href="https://twitter.com/springboot?ref_src=twsrc%5Etfw"&gt;@springboot&lt;/a&gt; to improve performance. Micronaut shifted industry strategy. That is what I call groundbreaking!— Graeme Rocher (@graemerocher) &lt;a href="https://twitter.com/graemerocher/status/1107560444213055489?ref_src=twsrc%5Etfw"&gt;18 de março de 2019&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Não é uma solução mainstream, assim como Grails nunca foi, mas trás algo que é fenomenal: incomoda e inspira. Faz com que outras empresas, como a própria Red Hat venha com novas soluções e faz com que soluções já consagradas como o Spring comecem a tomar uma atitude.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2S2IvAV---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.itexto.com.br/devkico/wp-content/uploads/2010/02/grails_logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2S2IvAV---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.itexto.com.br/devkico/wp-content/uploads/2010/02/grails_logo.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;E é o fim do Grails? Não, pelo contrário. Enquanto o Grails 3 tinha como base o Spring Boot, sabe qual a base do Grails 4? Yeap: Micronaut, ou seja, todos os problemas que temos hoje com a inicialização de nossos projetos pode estar com os dias contados.&lt;/p&gt;

&lt;p&gt;E também não é algo que substituiria o Grails por que o objetivo aqui é outro: enquanto Grails nos fornece um framework fullstack baseado em MVC que cuida tanto do backend quanto do frontend, temos aqui um outro alvo com Micronaut: construir APIs (focado em micro serviços) e ser a base para outros frameworks, como Grails, que agora se tornará muito mais atraente do que já era.&lt;/p&gt;

&lt;p&gt;(e a boa notícia é que pela documentação do Grails 4, o upgrade é relativamente simples, sem quebras significativas com as versões anteriores).&lt;/p&gt;

&lt;h2&gt;Agora vamos discutir!&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5hQhucNb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.itexto.com.br/devkico/wp-content/uploads/2019/04/taverna_dev_all.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5hQhucNb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.itexto.com.br/devkico/wp-content/uploads/2019/04/taverna_dev_all.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A conversa não acaba aqui. Convido todos vocês a continuarem conosco esta conversa experimentando o Micronaut e compartilhando suas experiências. Se quiser, pode compartilhar com seus comentários neste post o que achou, mas temos um lugar bem melhor que é a Taverna do /dev/All, na qual criamos uma &lt;a href="https://taverna.devall.com.br/c/back-end/micronaut"&gt;categoria&lt;/a&gt; só para este assunto. Interessou e quer aprender mais? Faça parte do /dev/All: cadatre-se &lt;a href="https://devall.com.br/cadastro"&gt;aqui&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Também criei um grupo no Facebook caso queira discutir por lá: é aberto e qualquer pessoa pode entrar. Basta clicar neste &lt;a href="https://www.facebook.com/groups/430642854354733/"&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;E se estiver em Belo Horizonte, participe do nosso meetup sobre Spring, Groovy e Grails: o próximo assunto será justamente sobre Micronaut. O link para o grupo é &lt;a href="https://www.meetup.com/pt-BR/Spring-Groovy-e-Grails-em-BH/"&gt;este&lt;/a&gt;, e maiores detalhes sobre quando e onde será o próximo encontro virá em breve (esta semana).&lt;/p&gt;

&lt;h2&gt;E minha jornada no Micronaut&lt;/h2&gt;

&lt;p&gt;Está apenas começando, e estou aprendendo bastante com ela. Mais artigos serão publicados aqui e na Revista do /dev/All em breve. Estou inclusive pensando em gravar alguns vídeos, por que tem oisas que vocês tem de ver.&lt;/p&gt;

&lt;p&gt;Estamos dando nossos primeiros passos neste framework, e estamos gostando, ainda há muito o que ser aprendido. Vou contando para vocês conforme aprendo. Até lá!&lt;/p&gt;

&lt;h2&gt;Um importante update - nosso primeiro meetup!&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N3q-LUcp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.itexto.com.br/devkico/wp-content/uploads/2019/04/meetup_micronaut.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N3q-LUcp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.itexto.com.br/devkico/wp-content/uploads/2019/04/meetup_micronaut.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dia 24/4/2019 iremos nos encontrar pela primeira vez aqui em Belo Horizonte para conversarmos sobre o Micronaut. Caso resida aqui (ou esteja de passagem), sua presença é muito bem vinda!&lt;/p&gt;

&lt;p&gt;Registre-se neste &lt;a href="https://www.meetup.com/pt-BR/Spring-Groovy-e-Grails-em-BH/events/260516468/"&gt;link&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>micronaut</category>
      <category>api</category>
      <category>java</category>
      <category>braziliandevs</category>
    </item>
    <item>
      <title>10 Must-Have VS Code Extensions to Improve Your Productivity</title>
      <author>Alex Omeyer</author>
      <pubDate>Tue, 15 Jun 2021 14:09:27 +0000</pubDate>
      <link>https://dev.to/alexomeyer/10-must-have-vs-code-extensions-to-improve-your-productivity-4goe</link>
      <guid>https://dev.to/alexomeyer/10-must-have-vs-code-extensions-to-improve-your-productivity-4goe</guid>
      <description>&lt;p&gt;I asked developers in my team what VS Code extensions they use to boost their productivity, and here’s what they said.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-live-server"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer"&gt;Live Server&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Live Server allows you to see code changes reflected in the browser. It launches a local development server with a live reload feature both for static and dynamic pages.&lt;/p&gt;

&lt;p&gt;Every time you save your code, you'll instantly see the changes reflected in the browser. You'll be much faster at spotting errors and it's much easier to do some quick experiments with your code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xk2G7r_K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dfieghesypp1pqqdgelx.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xk2G7r_K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dfieghesypp1pqqdgelx.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-remote-ssh"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh"&gt;Remote - SSH&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The Remote - SSH extension lets you use any remote machine with an SSH server as your development environment. This makes it much easier to develop and/or troubleshoot in a wide variety of scenarios.&lt;/p&gt;

&lt;p&gt;You also don’t need any source code on your local machine, because the extension runs commands and other extensions directly on the remote machine.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PQ9Fq_Ws--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/543z793tqtg3arhm0329.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PQ9Fq_Ws--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/543z793tqtg3arhm0329.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-stepsize"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://bit.ly/3vVZsis"&gt;Stepsize&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Sometimes you come across technical debt or other technical issues that should be fixed. You might not have time to fix it right away but you want to make it visible and raise an issue. &lt;/p&gt;

&lt;p&gt;Stepsize allows you to bookmark code, track technical debt directly from the editor, and create TODOs.&lt;/p&gt;

&lt;p&gt;It also allows you to collaborate with your teammates on maintenance and refactoring work.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BCAlqcUg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9o5abjwtugrrtef9zp14.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BCAlqcUg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9o5abjwtugrrtef9zp14.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-prettier"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode"&gt;Prettier&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The Prettier extension helps code look better and be more consistent. It enforces a consistent style by parsing your code and reprinting it with its own rules that take the maximum line length into account, wrapping code when necessary.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6PRBy4ud--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1l3jm9iojr9xgldgxt7h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6PRBy4ud--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1l3jm9iojr9xgldgxt7h.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-wakatime"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://marketplace.visualstudio.com/items?itemName=WakaTime.vscode-wakatime"&gt;WakaTime&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;WakaTime allows you to see metrics, insights, and time tracking automatically generated from your programming activity. &lt;/p&gt;

&lt;p&gt;You will learn exactly how long you spend coding as it automatically tracks when you start and stop typing, with detailed metrics for projects, file, branch, commit/PR, feature, and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VnuOVGKW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9npzyuws3meeupsssgx2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VnuOVGKW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9npzyuws3meeupsssgx2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-code-spell-checker"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker"&gt;Code Spell Checker&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The goal of this spell checker is to help you catch common spelling errors while keeping the number of false positives low. It shows misspelled words that are technical terms or variables within comments and strings.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dCSueA0g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kk47e1p3johcixckdyr4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dCSueA0g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kk47e1p3johcixckdyr4.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-compareit"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://marketplace.visualstudio.com/items?itemName=in4margaret.compareit"&gt;Compareit&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Compareit extension helps you compare two files which you can choose from your current project and other directory on your computer or clipboard.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yam_Ctwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ndrgwprp1fet512c9eqg.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yam_Ctwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ndrgwprp1fet512c9eqg.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-gitlens"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens"&gt;GitLens&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;GitLens helps you better understand code in a glimpse by visualizing code authorship via Git blame annotations and code lens, seamlessly navigate and explore Git repositories, gain valuable insights via powerful comparison commands, and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E0ii7BN3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0c1w8d0xrwdnjqlbb8t3.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E0ii7BN3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0c1w8d0xrwdnjqlbb8t3.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-remote-containers"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers"&gt;Remote - Containers&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The Remote - Containers extension lets you use a Docker container as a full-featured development environment. Containers make a great development environment because you can develop with a consistent reproducible toolchain on the same operating system you deploy to and quickly swap between different, separate development environments, safely make updates, and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1XRI-wXP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iimagr0j7dy3lihmh7vw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1XRI-wXP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iimagr0j7dy3lihmh7vw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-quokkajs"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://marketplace.visualstudio.com/items?itemName=WallabyJs.quokka-vscode"&gt;Quokka.js&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Quokka.js is a developer productivity tool for rapid JavaScript / TypeScript prototyping. Runtime values are updated and displayed in your IDE next to your code, as you type. It makes prototyping, learning, and testing JavaScript / TypeScript much faster.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--paKa-8uN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j26sxydb1aucktkjnczj.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--paKa-8uN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j26sxydb1aucktkjnczj.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>refactorit</category>
      <category>codequality</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Why video tutorials should NOT replace reading documentation</title>
      <author>Carl Wills</author>
      <pubDate>Tue, 15 Jun 2021 14:02:23 +0000</pubDate>
      <link>https://dev.to/carlmobiledev/why-video-tutorials-should-not-replace-reading-documentation-5f02</link>
      <guid>https://dev.to/carlmobiledev/why-video-tutorials-should-not-replace-reading-documentation-5f02</guid>
      <description>&lt;p&gt;As more and more people start their programming journey, I'm finding that the number of video tutorials are increasing. That shouldn't be a surprise to anyone. Of course people will be making video tutorials showing off the basics of a cool new language, package, or feature. Heck, I might even start making video tutorials. But I'm also finding that more and more learners are solely depending on video tutorials when they start learning something new. &lt;/p&gt;

&lt;p&gt;Now, I don't think that video tutorials are bad. I've learned a lot of really good things from them myself. But I'm always amazed at the lack of awareness, by new programmers, that written documentation even exists for whatever they are trying to use.&lt;/p&gt;

&lt;p&gt;I use Flutter a lot in my free time, so I'll use it as an example here. Flutter has awesome documentation. Here's an example from the &lt;a href="https://api.flutter.dev/flutter/dart-ui/Color-class.html"&gt;Color class&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8IpXyVlf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j06tguv6c4244n8v03dy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8IpXyVlf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j06tguv6c4244n8v03dy.png" alt="Screen Shot of Color class documentation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Being able to read and understand this form of documentation is invaluable as you progress on your development journey. In it you'll find useful constructors, parameter descriptions and even common examples!&lt;/p&gt;

&lt;p&gt;There will be many times that all you have to learn from is a set of documentation, and being able to quickly reference it and understand the basics will help you iterate quickly, stand out in the company that you're at, and can even help you be more productive.&lt;/p&gt;

&lt;p&gt;Now all of that being said, I want to reiterate that I think video tutorials are good! But I don't think that they replace being able to read and understand documentation. A healthy balance of both is what's needed to really thrive and grow as a developer these days.&lt;/p&gt;

&lt;p&gt;If you're just learning your first language, or your fifth, I'd recommend taking a look through the documentation to see what you can find! You might be surprised by the little gems that are hidden away in there!&lt;/p&gt;

&lt;p&gt;What do you think? Am I being too harsh? Let me know in the comments if you read through documentation before starting a new project, or if you jump right into video tutorials!&lt;/p&gt;

&lt;p&gt;Thanks for reading,&lt;br&gt;
Carl&lt;/p&gt;

</description>
      <category>career</category>
      <category>programming</category>
      <category>productivity</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Learn React and Context API By Building Netflix</title>
      <author>Hiep Le</author>
      <pubDate>Tue, 15 Jun 2021 13:50:48 +0000</pubDate>
      <link>https://dev.to/hieptl/learn-react-and-context-api-by-building-netflix-3ca8</link>
      <guid>https://dev.to/hieptl/learn-react-and-context-api-by-building-netflix-3ca8</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KpP5fnjl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qo7eckgb22ag25q6aeye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KpP5fnjl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qo7eckgb22ag25q6aeye.png" alt="learn-react-by-building-netflix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm Hiep. I work as a full-time software engineer. Most of my open-source projects are focused on one thing - to help people learn 📚. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Before moving on with this part, you should follow the first part in this series:&lt;/p&gt;

&lt;p&gt;The first part - &lt;strong&gt;Learn React By Building Netflix&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Github: &lt;a href="https://github.com/hieptl/netflix-clone"&gt;https://github.com/hieptl/netflix-clone&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Dev.to: &lt;a href="https://dev.to/hieptl/learn-react-by-building-netflix-1127"&gt;https://dev.to/hieptl/learn-react-by-building-netflix-1127&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;The repository helps you learn React Context API by building Netflix. It means that you are learning React Context API by building a real-life project. I will explain concepts in detail. This post is the eighth part in my series and it is suitable for beginners.&lt;/p&gt;

&lt;p&gt;My post is about &lt;strong&gt;Learn React and Context API By Building Netflix&lt;/strong&gt; on Dev.to:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you feel the repository is useful, please help me share the post and give me a ⭐. It will make me feel motivation to work even harder. I will try to make many open sources and share to the community.&lt;/p&gt;

&lt;p&gt;I also created some series that help you improve your practical skills: &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Master Design Patterns by Building Real Projects - Javascript.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Github: &lt;a href="https://github.com/hieptl/master-javascript-design-patterns-by-building-real-projects"&gt;https://github.com/hieptl/master-javascript-design-patterns-by-building-real-projects&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Blog: &lt;a href="https://dev.to/hieptl/series/13039"&gt;https://dev.to/hieptl/series/13039&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#preface"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Preface&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;This course will help you to learn React Context API by building Netflix. It means that you are learning by doing a real-life project. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Table of Contents&lt;/strong&gt;
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;No.&lt;/th&gt;
&lt;th&gt;Topics&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;a href="#how-to-run-the-project"&gt;How to Run the Project.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;a href="#live-demo"&gt;Live Demo.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;a href="#introduction-about-the-creator"&gt;Introduction about the Creator.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.1&lt;/td&gt;
&lt;td&gt;&lt;a href="#greenwich-university"&gt;      Greenwich University.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.2&lt;/td&gt;
&lt;td&gt;&lt;a href="#hitachi-vantara-vietnam"&gt;      Hitachi Vantara Vietnam.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;&lt;a href="#prequisites"&gt;Prequisites.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;&lt;a href="#softwares"&gt;      Softwares.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.2&lt;/td&gt;
&lt;td&gt;&lt;a href="#technical-skills"&gt;      Technical Skills.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;&lt;a href="#materials"&gt;      Materials.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;&lt;a href="#purposes-of-the-course"&gt;Purposes of the Course.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.1&lt;/td&gt;
&lt;td&gt;&lt;a href="#final-project"&gt;      Final Project.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.2&lt;/td&gt;
&lt;td&gt;&lt;a href="#job"&gt;      Job.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;&lt;a href="#react-context-api"&gt;React Context API.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;&lt;a href="#what"&gt;      What.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.2&lt;/td&gt;
&lt;td&gt;&lt;a href="#why"&gt;      Why.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.3&lt;/td&gt;
&lt;td&gt;&lt;a href="#when"&gt;      When.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.4&lt;/td&gt;
&lt;td&gt;&lt;a href="#how"&gt;      How.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;&lt;a href="#scenarios"&gt;Scenarios&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;&lt;a href="#summary"&gt;Summary.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;&lt;a href="#useful-resources-to-learn-react"&gt;Useful Resources to Learn React.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;&lt;a href="#references"&gt;References.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#table-of-images"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Table of Images.&lt;/strong&gt;
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;No.&lt;/th&gt;
&lt;th&gt;Topics&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;a href="#figure1"&gt;Figure 1: Home Page - Netflix.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;a href="#figure2"&gt;Figure 2: The Final Result.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a id="how-to-run-the-project"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#0-how-to-run-the-project"&gt;
  &lt;/a&gt;
  &lt;strong&gt;0. How to Run the Project.&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Step 1: Clone the project by using git clone or download the zip file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 2: Open "terminal" / "cmd" / "gitbash" and change directory to "netflix-clone" and run "npm install" to install dependencies.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 3: Run "npm run start" to run the fron-end project.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="live-demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-live-demo"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. Live Demo.&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://32vv6.csb.app/"&gt;https://32vv6.csb.app/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="introduction-about-the-creator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-introduction-about-the-creator"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2. Introduction about the Creator.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a id="greenwich-university"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#21-greenwich-university"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2.1. Greenwich University.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;GPA 4.0 / 4.0.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Machine Learning paper - Recommendation System - IEEE/ICACT2020.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Co-Founder / Mentor IT club.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="hitachi-vantara-vietnam"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#22-hitachi-vantara-vietnam"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2.2. Hitachi Vantara Vietnam.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Employee of the year.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Second prize - innovation contest.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Techlead - HN branch.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;One of CoE Leaders (Center of Excellence).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="prequisites"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-prequisites"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3. Prequisites.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a id="softwares"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#31-softwares"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3.1. Softwares.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Install NodeJS.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;An IDE or a text editor (VSCode, Intellij, Webstorm, etc).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="technical-skills"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#32-technical-skills"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3.2. Technical Skills.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Basic programming skill.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Basic HTML, CSS, JS skills.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="materials"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#33-materials"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3.3. Materials.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Html, css, js (source code) was prepared because I want to focus on React and share knowledge about React. Building html and css from scratch would take a lot of time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;README.md (the md file will contain everything about the course).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Netflix data will be used to import to Firebase. In this course, we use Firebase as our back-end service.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="purposes-of-the-course"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-purposes-of-the-course"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4. Purposes of the Course.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a id="final-project"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#41-final-project"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4.1. Final Project.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The course would help you have understanding about React.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You could build the final project with end-to-end solution (front-end solution using React and back-end solution using Firebase).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="job"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#42-job"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4.2. Job.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;After finishing the course, you could get a job with fresher / junior position.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="react-context-api"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-react-context-api"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5. React Context API.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a id="what"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#51-what"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5.1. What.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;React Context API will help us to pass data through the component tree without passing down at every level.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="why"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#53-why"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5.3. Why&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In some cases, you want to pass data down to many components and some components do not really need the data, they just get the data and pass it further down to the child components. It it called &lt;strong&gt;props drilling&lt;/strong&gt; and we should avoid that.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We need to find an optimal solution to pass data throught component tree without passing down at every level.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There are solutions such as Redux, Web Storages and so on. However, in some projects, the development team does not want to use Redux in their applications. React Context API was created by the React team and it could help us to avoid props drilling. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="when"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#54-when"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5.4. When&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;When we need to pass data through the component tree and we do not want to use 3rd party libraries.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="how"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#55-how"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5.5. How&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Step 1: Define the context by using React.createContext().&lt;/li&gt;
&lt;li&gt;Step 2: Use provider to provide data.&lt;/li&gt;
&lt;li&gt;Step 3: Use consumer to get shared data.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="scenarios"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-scenarios"&gt;
  &lt;/a&gt;
  6. Scenarios.
&lt;/h2&gt;

&lt;p&gt;&lt;a id="figure1"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YUwC2OOW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gj9zyy8jyp7ykeg83sbf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YUwC2OOW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gj9zyy8jyp7ykeg83sbf.png" alt="react-context-api"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 1. Home Page - Netflix.&lt;/p&gt;

&lt;p&gt;After the user signed in, we need to display the greeting message on the nav bar. It means that we need to store the user's email in somewhere else and then pass the email to the navbar. We will develop the idea by applying React Context API.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Step 1: create &lt;strong&gt;context&lt;/strong&gt; folder. The folder is used to store our context.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 2: Create &lt;strong&gt;UserContext.js&lt;/strong&gt; inside &lt;strong&gt;context&lt;/strong&gt; folder. It is used to store the user's information.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// import react&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;UserContext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;UserContext&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;1st NOTE&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;We define &lt;strong&gt;UserContext&lt;/strong&gt; by using &lt;strong&gt;React.Context&lt;/strong&gt; and then we assign the initial value to null.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We export &lt;strong&gt;UserContext&lt;/strong&gt; in order to use it in different places in our program.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Step 3: Define the global state. In this case, we may want to share the user's information in different places. For this reason, we need to define the user state and share it to other components by using React Context Provider. Please update &lt;strong&gt;App.js&lt;/strong&gt; with the following code.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// import react router dom.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;BrowserRouter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Switch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-router-dom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import custom components.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/home/Home&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Login&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/login/Login&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import global styling.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./index.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import context provider.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;UserContext&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./context/UserContext&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import useState.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// create App components.&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setUser&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;UserContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Provider&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setUser&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Switch&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* Home Route */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="nx"&gt;exact&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Route&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* End Home Route */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* Login Route */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="nx"&gt;exact&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/login&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Login&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Route&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* End Login Route */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Switch&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Router&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/UserContext.Provider&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// export App component.&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;2nd NOTE&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;We import &lt;strong&gt;UserContext&lt;/strong&gt; and wrap the main of our code by using &lt;strong&gt;UserContext.Provider&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;On the other hand, we define the user state, it works as a global state that will be used to store the user's information. Therefore, we can share the user's information to different components.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We set the initial value for our context by using &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;UserContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Provider&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setUser&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The cool part is about we pass data to other component and we can also pass functions to child components. It means that the child components could get the shared functions from their parent components and trigger those functions as needed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In this case, we pass &lt;strong&gt;setUser&lt;/strong&gt; to other components. &lt;strong&gt;serUser&lt;/strong&gt; is used to update the user state. The idea behind that is to let &lt;strong&gt;Login&lt;/strong&gt; component update the user state after the user logged in.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is time to get shared data.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Step 4: Update the &lt;strong&gt;LoginForm.js&lt;/strong&gt; with the following code:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// import react.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import firebase authentication.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;firebaseAuth&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../firebase/firebase&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import context.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;UserContext&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../context/UserContext&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import history&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useHistory&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-router-dom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * create LoginForm component.
 */&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;LoginForm&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// create email and password state to store user's credentials.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setEmail&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setPassword&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;history&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useHistory&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="cm"&gt;/**
   * handle event when the user clicks on "Login" button.
   */&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;setUser&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// call firebase authentication service.&lt;/span&gt;
    &lt;span class="nx"&gt;firebaseAuth&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;signInWithEmailAndPassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;userCredential&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Signed in&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;userCredential&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c1"&gt;// ...&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`signed in user`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;setUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="cm"&gt;/**
   * update email state when the user inputs the email field.
   * @param {*} e - synthetic event to get the latest email's value.
   */&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onEmailChanged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// get email value.&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updatedEmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// update email state.&lt;/span&gt;
    &lt;span class="nx"&gt;setEmail&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;updatedEmail&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="cm"&gt;/**
   * update password state when the user input the password field.
   * @param {*} e - synthetic event to get the latest password's value.
   */&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onPasswordChanged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// get password value.&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updatedPassword&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// update password state.&lt;/span&gt;
    &lt;span class="nx"&gt;setPassword&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;updatedPassword&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;UserContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Consumer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{({&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setUser&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;history&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__form&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Sign&lt;/span&gt; &lt;span class="nx"&gt;In&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__input mb-16&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
                  &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                  &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Email or phone number&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                  &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onEmailChanged&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__input&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
                  &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                  &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                  &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onPasswordChanged&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;
                &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__submit-btn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;setUser&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
              &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nx"&gt;Sign&lt;/span&gt; &lt;span class="nx"&gt;In&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__options&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Remember&lt;/span&gt; &lt;span class="nx"&gt;me&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__need-help&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Need&lt;/span&gt; &lt;span class="nx"&gt;help&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__footer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__fb&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;
                    &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://assets.nflxext.com/ffe/siteui/login/images/FB-f-Logo__blue_57.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                    &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fb&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                  &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
                  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Login&lt;/span&gt; &lt;span class="kd"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;Facebook&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__new-to-nl&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;New&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;Netflix&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__sign-up&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Sign&lt;/span&gt; &lt;span class="nx"&gt;up&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__google_captcha&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                  &lt;span class="nx"&gt;This&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;protected&lt;/span&gt; &lt;span class="nx"&gt;by&lt;/span&gt; &lt;span class="nx"&gt;Google&lt;/span&gt; &lt;span class="nx"&gt;reCAPTCHA&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;ensure&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;re
                  not a bot.
                  &amp;lt;span className="login-body__learn-more"&amp;gt;Learn more.&amp;lt;/span&amp;gt;
                &amp;lt;/div&amp;gt;
              &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
          &amp;lt;/div&amp;gt;
        );
      }}
    &amp;lt;/UserContext.Consumer&amp;gt;
  );
}
// export LoginForm component.
export default LoginForm;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;3rd NOTE&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In order to get data from React Context, we need to use &lt;strong&gt;UserContext.Consumer&lt;/strong&gt;. We write an arrow function inside JSX to get data from React Context. In this case, we need to get the user state and &lt;strong&gt;setUser&lt;/strong&gt; function which helps us to update the user state.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As mentioned before, &lt;strong&gt;setUser&lt;/strong&gt; is used to update the user state, it is passed to the &lt;strong&gt;login&lt;/strong&gt; function as a callback function. It means that we will call it inside the &lt;strong&gt;login&lt;/strong&gt; function and update the user state if the user's credentials are valid.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;setUser&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="c1"&gt;// call firebase authentication service.&lt;/span&gt;
   &lt;span class="nx"&gt;firebaseAuth&lt;/span&gt;
     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;signInWithEmailAndPassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;userCredential&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="c1"&gt;// Signed in&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;userCredential&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="c1"&gt;// ...&lt;/span&gt;
       &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`signed in user`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="nx"&gt;setUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="p"&gt;})&lt;/span&gt;
     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="p"&gt;});&lt;/span&gt;
 &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;ul&gt;
&lt;li&gt;However, why do we need to get the user state in &lt;strong&gt;LoginForm&lt;/strong&gt; component ? We get the user state in order to redirect the user to the home page after the user logged in.&lt;/li&gt;
&lt;/ul&gt;


&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;history&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;ul&gt;
&lt;li&gt;The history object is created by using &lt;strong&gt;useHistory&lt;/strong&gt; hook from &lt;strong&gt;react-router-dom&lt;/strong&gt; library. We use it to navigate between pages. &lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Step 5: It is time to display the greeting message on the navbar. Please update the &lt;strong&gt;Nav&lt;/strong&gt; component with the following code.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;UserContext&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../context/UserContext&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cm"&gt;/**
 * create Nav component.
 */&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Nav&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;UserContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Consumer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{({&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nav false&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;
              &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nav__logo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
              &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://www.freepnglogos.com/uploads/netflix-logo-0.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
              &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;
            &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nav__greeting&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Hello&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;
              &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nav__avatar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
              &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://pngimg.com/uploads/netflix/netflix_PNG8.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
              &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;
            &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/UserContext.Consumer&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// export Nav component.&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Nav&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;4th NOTE&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The purpose is to get the user state and display the greeting message on the navbar. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As what have done with &lt;strong&gt;LoginForm&lt;/strong&gt;, we still use &lt;strong&gt;UserContext.Consumer&lt;/strong&gt; to get the user state. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In this component, we use conditional rendering to display the greeting message if the user data existing.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nav__greeting&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Hello&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;


&lt;ul&gt;
&lt;li&gt;If you run the code, you can see the final result as the below image: &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="figure2"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--88lc7BXX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nfqas95qsfm8q934hga8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--88lc7BXX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nfqas95qsfm8q934hga8.png" alt="react-context-api"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id="summary"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Summary&lt;/strong&gt;
&lt;/h2&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In some cases, you want to pass data down to many components and some components do not really need the data, they just get the data and pass it further down to the child components. It it called &lt;strong&gt;props drilling&lt;/strong&gt; and we should avoid that.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We need to find an optimal solution to pass data throught component tree without passing down at every level.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There are solutions such as Redux, Web Storages and so on. However, in some projects, the development team does not want to use Redux in their applications. React Context API was created by the React team and it could help us to avoid props drilling.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you so much for taking the course. I hope that you could understand about React Context API and you can build many real-life projects by using React (as front-end) and Firebase (as back-end) in order to solve many problems and make our life become better.&lt;/p&gt;

&lt;p&gt;&lt;a id="useful-resources-to-learn-react"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#useful-resources-to-learn-react"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Useful Resources to Learn React.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;[1]. &lt;a href="https://reactjs.org/docs/getting-started.html"&gt;https://reactjs.org/docs/getting-started.html&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a id="references"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  &lt;strong&gt;References&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;[1]. &lt;a href="https://reactjs.org/docs/getting-started.html"&gt;https://reactjs.org/docs/getting-started.html&lt;/a&gt;.&lt;br&gt;
[2]. &lt;a href="https://firebase.google.com/docs/database"&gt;https://firebase.google.com/docs/database&lt;/a&gt;.&lt;br&gt;
[3]. &lt;a href="https://firebase.google.com/docs/auth/web/password-auth"&gt;https://firebase.google.com/docs/auth/web/password-auth&lt;/a&gt;.&lt;br&gt;
[4]. &lt;a href="https://firebase.google.com/docs/hosting"&gt;https://firebase.google.com/docs/hosting&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Deploying a React App to GitHub Pages</title>
      <author>KUMAR HARSH</author>
      <pubDate>Tue, 15 Jun 2021 13:43:45 +0000</pubDate>
      <link>https://dev.to/cenacr007_harsh/deploying-a-react-app-to-github-pages-370</link>
      <guid>https://dev.to/cenacr007_harsh/deploying-a-react-app-to-github-pages-370</guid>
      <description>&lt;h2&gt;
  &lt;a href="#react-app"&gt;
  &lt;/a&gt;
  React App*
&lt;/h2&gt;

&lt;p&gt;* created using &lt;code&gt;create-react-app&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In this tutorial, I'll show you how I deployed a React app—which I created using &lt;code&gt;create-react-app&lt;/code&gt; to GitHub Pages.&lt;/p&gt;

&lt;p&gt;You can visit the deployed app, at &lt;a href="https://cenacrharsh.github.io/test/"&gt;https://cenacrharsh.github.io/test/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This repository contains the files related to the app. The &lt;code&gt;master&lt;/code&gt; branch contains the app's source code (the code the app's developers edit), and the &lt;code&gt;gh-pages&lt;/code&gt; branch contains a &lt;em&gt;built&lt;/em&gt; version of the app (i.e. the code that GitHub Pages serves to the app's visitors).&lt;/p&gt;

&lt;p&gt;The remainder of this document contains a tutorial on creating a React app (using &lt;code&gt;create-react-app&lt;/code&gt;) and deploying that app to GitHub Pages.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tutorial"&gt;
  &lt;/a&gt;
  Tutorial
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;An adequate version of &lt;a href="https://nodejs.org/"&gt;&lt;code&gt;Node.js&lt;/code&gt;&lt;/a&gt; is installed. Here's the adequate version I use:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;node &lt;span class="nt"&gt;--version&lt;/span&gt;
v14.17.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An adequate version of  &lt;a href="https://nodejs.org/"&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/a&gt; is installed. Here's the adequate version I use:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm &lt;span class="nt"&gt;--version&lt;/span&gt;
6.14.13
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An adequate version of &lt;a href="https://github.com/facebookincubator/create-react-app"&gt;&lt;code&gt;create-react-app&lt;/code&gt;&lt;/a&gt; is installed. Here's the adequate version I use:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;create-react-app &lt;span class="nt"&gt;--version&lt;/span&gt;
4.0.3
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;In the case of &lt;code&gt;create-react-app&lt;/code&gt;, you can either install it globally (i.e. &lt;code&gt;$ npm install -g create-react-app&lt;/code&gt;) or install it locally (i.e. &lt;code&gt;$ npm install create-react-app&lt;/code&gt;). If you choose the latter, you will have to specify its path whenever you invoke it (e.g. &lt;code&gt;path/to/node_modules/.bin/create-react-app&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A &lt;a href="https://www.github.com"&gt;GitHub&lt;/a&gt; account.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A command-line Git client &lt;a href="https://help.github.com/articles/set-up-git/"&gt;setup according to GitHub&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#procedure"&gt;
  &lt;/a&gt;
  Procedure
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create an &lt;em&gt;empty&lt;/em&gt; repository on GitHub.&lt;/strong&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For this tutorial, I'll create a repository named &lt;code&gt;test&lt;/code&gt;.&lt;br&gt;
By &lt;em&gt;empty&lt;/em&gt;, I mean &lt;em&gt;without&lt;/em&gt; a &lt;code&gt;README.md&lt;/code&gt; file, a &lt;code&gt;.gitignore&lt;/code&gt; file, a &lt;code&gt;LICENSE&lt;/code&gt; file, or any other files.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create a new React app on your computer.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;create-react-app &lt;span class="nb"&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;blockquote&gt;
&lt;p&gt;This is the app you will deploy to GitHub Pages in step 7.&lt;br&gt;
I opted to give the app the same name as my GitHub repository (i.e. &lt;code&gt;test&lt;/code&gt;). However, you can name them differently from one another (e.g. you can name your app &lt;code&gt;app-123&lt;/code&gt; and your GitHub Repository &lt;code&gt;repo-456&lt;/code&gt;).&lt;br&gt;
This will create a new folder named &lt;code&gt;test&lt;/code&gt; (or whatever you named your app) on your computer.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Install the &lt;code&gt;gh-pages&lt;/code&gt; package as a "dev-dependency" of the app.&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;The commands shown in the following steps can all be issued from within the app's folder, so make sure to navigate to the newly created &lt;code&gt;test&lt;/code&gt; folder and then use the commands. Use &lt;code&gt;$ cd test&lt;/code&gt; to navigate to the app folder from where you are currently on the terminal.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After navigating to the &lt;code&gt;test&lt;/code&gt; folder use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;```
$ npm install gh-pages --save-dev
```
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Add some properties to the app's &lt;code&gt;package.json&lt;/code&gt; file.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;At the top level, add a &lt;code&gt;homepage&lt;/code&gt; property. Define its value to be the string &lt;code&gt;http://{username}.github.io/{repo-name}&lt;/code&gt;, where &lt;code&gt;{username}&lt;/code&gt; is your GitHub username, and &lt;code&gt;{repo-name}&lt;/code&gt; is the name of the GitHub repository you created in step 1. Since my GitHub username is &lt;code&gt;cenacrharsh&lt;/code&gt; and the name of my GitHub repository is &lt;code&gt;test&lt;/code&gt;, I added the following property:&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//...&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;homepage&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://cenacrharsh.github.io/test&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;blockquote&gt;
&lt;p&gt;In the existing &lt;code&gt;scripts&lt;/code&gt; property, add a &lt;code&gt;predeploy&lt;/code&gt; property and a &lt;code&gt;deploy&lt;/code&gt; property, each having the values shown below:&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scripts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//...&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;predeploy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;npm run build&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;deploy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gh-pages -d build&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create a git repository in the app's folder.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Add the GitHub repository as a "remote" in your local git repository.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git remote add origin https://github.com/cenacrharsh/test.git
&lt;/code&gt;&lt;/pre&gt;


&lt;blockquote&gt;
&lt;p&gt;This will make it so the &lt;code&gt;gh-pages&lt;/code&gt; package knows where you want it to deploy your app in step 7.&lt;br&gt;
It will also make it so git knows where you want it to push your source code (i.e. the commits on your &lt;code&gt;master&lt;/code&gt; branch) in step 8.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Generate a &lt;em&gt;production build&lt;/em&gt; of your app, and deploy it to GitHub Pages.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npm run deploy
&lt;/code&gt;&lt;/pre&gt;


&lt;blockquote&gt;
&lt;p&gt;That's it! Your app is now accessible at the URL you specified in step 4.&lt;br&gt;
In my case, my app is now accessible at: &lt;a href="https://cenacrharsh.github.io/test/"&gt;https://cenacrharsh.github.io/test/&lt;/a&gt;&lt;br&gt;
Explore the GitHub repository at this point. You will see that, although a &lt;code&gt;master&lt;/code&gt; branch did not exist, a &lt;code&gt;gh-pages&lt;/code&gt; branch did exist. The &lt;code&gt;gh-pages&lt;/code&gt; branch contained the &lt;em&gt;built&lt;/em&gt; app code, as opposed to the app's source code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Optionally, commit your source code to the "master" branch and push your commit to GitHub.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git add .
$ git commit -m "Create a React app and publish it to GitHub Pages"
$ git push -u origin master
&lt;/code&gt;&lt;/pre&gt;


&lt;blockquote&gt;
&lt;p&gt;Explore the GitHub repository once again at this point.You will notice that a &lt;code&gt;master&lt;/code&gt; branch now existed, and it contained the app's source code.&lt;br&gt;
So, the &lt;code&gt;master&lt;/code&gt; branch holds the source code, and the &lt;code&gt;gh-pages&lt;/code&gt; branch holds the &lt;em&gt;built&lt;/em&gt; app code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://facebook.github.io/create-react-app/docs/deployment#github-pages-https-pagesgithubcom"&gt;Facebook's tutorial on deploying a React app to GitHub Pages&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>react</category>
      <category>github</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>60+ VSCode themes you definitely need to try (dark + light)</title>
      <author>_CODE</author>
      <pubDate>Tue, 15 Jun 2021 13:42:15 +0000</pubDate>
      <link>https://dev.to/underscorecode/60-vscode-themes-you-definitely-need-to-try-dark-light-3mg5</link>
      <guid>https://dev.to/underscorecode/60-vscode-themes-you-definitely-need-to-try-dark-light-3mg5</guid>
      <description>&lt;p&gt;Hello, everybody!&lt;/p&gt;

&lt;p&gt;I don't know about you, but I'm personally a huge fan of changing my VSCode theme every once in a while, mainly for productivity reasons.&lt;/p&gt;

&lt;p&gt;So today I bring a list of &lt;strong&gt;more than 60 themes&lt;/strong&gt; for you to try and test.&lt;/p&gt;

&lt;p&gt;Check them out and tell me about your favorites in comments below 🙂&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#1-2077"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://marketplace.visualstudio.com/items?itemName=Endormi.2077-theme"&gt;2077&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xBsyXByR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/55mrtvbn340nbu417rnp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xBsyXByR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/55mrtvbn340nbu417rnp.png" alt="React code snippet with the 2077 theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#atlantic-night"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=mrpbennett.atlantic-night"&gt;Atlantic Night&lt;/a&gt;
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#2-atlantic-night"&gt;
  &lt;/a&gt;
  2. Atlantic Night
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QgLxCz_o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oqcucr65os6g0x1vxmqa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QgLxCz_o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oqcucr65os6g0x1vxmqa.png" alt="React code snippet with the Atlantic Night theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-atlantic-night-abyss"&gt;
  &lt;/a&gt;
  3. Atlantic Night Abyss
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xb6RQ7Xi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xyma18vsxp6jzinxwwe5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xb6RQ7Xi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xyma18vsxp6jzinxwwe5.png" alt="React code snippet with the Atlantic Night Abyss theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#august"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=inci-august.august-themes"&gt;August&lt;/a&gt;
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#4-august-ariake-dark"&gt;
  &lt;/a&gt;
  4. August - Ariake Dark
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_BLtl8rv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhrwwjkcq2ybr8fppbao.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_BLtl8rv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhrwwjkcq2ybr8fppbao.png" alt="React code snippet with the August - Ariake Dark theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-august-city-lights-darker"&gt;
  &lt;/a&gt;
  5. August - City Lights Darker
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OK28r2rv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vuapnukqlf7rhqbbqrga.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OK28r2rv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vuapnukqlf7rhqbbqrga.png" alt="React code snippet with the August - City Lights Darker theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-august-dark"&gt;
  &lt;/a&gt;
  6. August - Dark
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pzfj29p5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2fvzmyczmorb89x40j1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pzfj29p5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2fvzmyczmorb89x40j1.png" alt="React code snippet with the August - Dark theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-august-dawbridge"&gt;
  &lt;/a&gt;
  7. August - Dawbridge
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YF77xsKe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mn5rhbnin6b0kb8glmpz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YF77xsKe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mn5rhbnin6b0kb8glmpz.png" alt="React code snippet with the August - Dawbridge theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-august-in-bed-by-7pm"&gt;
  &lt;/a&gt;
  8. August - In Bed By 7pm
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vKsiByzn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cx7z3e2pxyij74s6ff9r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vKsiByzn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cx7z3e2pxyij74s6ff9r.png" alt="React code snippet with the August - In Bed By 7pm theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-august-in-bed-by-7pm-darker"&gt;
  &lt;/a&gt;
  9. August - In Bed By 7pm Darker
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--81Ci5SLG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mwlrlv3gsqla8z5dx9bm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--81Ci5SLG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mwlrlv3gsqla8z5dx9bm.png" alt="React code snippet with the August - In Bed By 7pm Darker theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-august-night-owl"&gt;
  &lt;/a&gt;
  10. August - Night Owl
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dDnMABvM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bb2ujcbi3zs08xzcrsf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dDnMABvM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bb2ujcbi3zs08xzcrsf.png" alt="React code snippet with the August - Night Owl theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#11-august-nord-darker"&gt;
  &lt;/a&gt;
  11. August - Nord (Darker)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1JmE6RW_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/36wvb62e1432394sqn9r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1JmE6RW_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/36wvb62e1432394sqn9r.png" alt="React code snippet with the August - Nord (Darker)theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#12-aurora-x"&gt;
  &lt;/a&gt;
  12. &lt;a href="https://marketplace.visualstudio.com/items?itemName=marqu3s.aurora-x"&gt;Aurora X&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x4cF-eGf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1k98bagzgn4l2qazlnsv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x4cF-eGf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1k98bagzgn4l2qazlnsv.png" alt="React code snippet with the Aurora X theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#ayu"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=teabyii.ayu"&gt;Ayu&lt;/a&gt;
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#13-ayu-mirage"&gt;
  &lt;/a&gt;
  13. Ayu - Mirage
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--owDH-0RI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1tvaprgboq89yv2rh017.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--owDH-0RI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1tvaprgboq89yv2rh017.png" alt="React code snippet with the Ayu - Mirage theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#14-ayu-light"&gt;
  &lt;/a&gt;
  14. Ayu - Light
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z4dldvls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u25wbawcgpdjr9r9ooyp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z4dldvls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u25wbawcgpdjr9r9ooyp.png" alt="React code snippet with the Ayu - Light theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#base16"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=AndrsDC.base16-themes"&gt;Base16&lt;/a&gt;
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#15-base-16-dark-ashes"&gt;
  &lt;/a&gt;
  15. Base 16 - Dark Ashes
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IOQO7GAZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cbi9g2z9tqn7go8wyzm4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IOQO7GAZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cbi9g2z9tqn7go8wyzm4.png" alt="React code snippet with the Base16 - Dark Ashes theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#16-base-16-dark-mocha"&gt;
  &lt;/a&gt;
  16. Base 16 - Dark Mocha
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PC52N1xR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zaj1r774a6oc93975dqv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PC52N1xR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zaj1r774a6oc93975dqv.png" alt="React code snippet with the Base16 - Dark Mocha theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#17-base-16-dark-ocean"&gt;
  &lt;/a&gt;
  17. Base 16 - Dark Ocean
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IKTDD9d7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/opjk6z8dynat77admomy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IKTDD9d7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/opjk6z8dynat77admomy.png" alt="React code snippet with the Base16 - Dark Ocean theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#18-base-16-dark-twilight"&gt;
  &lt;/a&gt;
  18. Base 16 - Dark Twilight
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q5N1ZMr---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wjmu390f6vivso5nm9ri.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q5N1ZMr---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wjmu390f6vivso5nm9ri.png" alt="React code snippet with the Base16 - Dark Twilight theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#19-base-16-unikitty"&gt;
  &lt;/a&gt;
  19. Base 16 - Unikitty
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x_JFB_pD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sn3krfz4xkpsx3uizgcl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x_JFB_pD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sn3krfz4xkpsx3uizgcl.png" alt="React code snippet with the Base16 - Unikitty theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#20-base-16-light-mocha"&gt;
  &lt;/a&gt;
  20. Base 16 - Light Mocha
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iy32Zy4g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eeqwutevhczf99w0505v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iy32Zy4g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eeqwutevhczf99w0505v.png" alt="React code snippet with the Base16 - Light Mocha theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#21-base-16-light-pop"&gt;
  &lt;/a&gt;
  21. Base 16 - Light Pop
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WPPyeaVO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39zu5z3leg2pufaum3xa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WPPyeaVO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39zu5z3leg2pufaum3xa.png" alt="React code snippet with the Base16 - Light Pop theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#22-base-16-light-tomorrow"&gt;
  &lt;/a&gt;
  22. Base 16 - Light Tomorrow
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jrNovi20--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ay4x5v3ovmvfqd7vit7l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jrNovi20--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ay4x5v3ovmvfqd7vit7l.png" alt="React code snippet with the Base16 - Light Tomorrow theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#23-bear-theme"&gt;
  &lt;/a&gt;
  23. &lt;a href="https://marketplace.visualstudio.com/items?itemName=dahong.theme-bear"&gt;Bear Theme&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yuu340Ji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2spil373ovjx3l78jja0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yuu340Ji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2spil373ovjx3l78jja0.png" alt="React code snippet with the Bear theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#bearded-theme"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=BeardedBear.beardedtheme"&gt;Bearded theme&lt;/a&gt;
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#24-bearded-theme-arc-blueberry"&gt;
  &lt;/a&gt;
  24. Bearded Theme - Arc Blueberry
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3c0JfCk3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s4i3ckural89fa1sn8yi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3c0JfCk3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s4i3ckural89fa1sn8yi.png" alt="React code snippet with the Bearded - Arc Blueberry theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#25-bearded-theme-surprising-blueberry"&gt;
  &lt;/a&gt;
  25. Bearded Theme - Surprising Blueberry
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--krDp1_Jd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9zty0bxqdqtt5af4fjnd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--krDp1_Jd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9zty0bxqdqtt5af4fjnd.png" alt="React code snippet with the Bearded - Surprising Blueberry theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#26-bearded-theme-monokai-light"&gt;
  &lt;/a&gt;
  26. Bearded Theme - Monokai Light
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6bCR2YSw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/co5hh4mb8fc3v59cw4qg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6bCR2YSw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/co5hh4mb8fc3v59cw4qg.png" alt="React code snippet with the Bearded - Monokai Light theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#27-city-lights"&gt;
  &lt;/a&gt;
  27. &lt;a href="https://marketplace.visualstudio.com/items?itemName=Yummygum.city-lights-theme"&gt;City lights&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---r948i9p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aopn91yn13i40koux2fr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---r948i9p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aopn91yn13i40koux2fr.png" alt="React code snippet with the City Lights theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#28-cobalt-next-dark"&gt;
  &lt;/a&gt;
  28. &lt;a href="https://marketplace.visualstudio.com/items?itemName=dline.CobaltNext"&gt;Cobalt Next - Dark&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G7L7uWHO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0vl5lqz9euqtwdzzo2sn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G7L7uWHO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0vl5lqz9euqtwdzzo2sn.png" alt="React code snippet with the Cobalt Next - Dark theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#29-cobalt-2"&gt;
  &lt;/a&gt;
  29. &lt;a href="https://marketplace.visualstudio.com/items?itemName=wesbos.theme-cobalt2"&gt;Cobalt 2&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fLpScUFn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vymygxzlszx1kdqth5g8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fLpScUFn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vymygxzlszx1kdqth5g8.png" alt="React code snippet with the Cobalt 2 theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#30-code-blue"&gt;
  &lt;/a&gt;
  30. &lt;a href="https://marketplace.visualstudio.com/items?itemName=Sujan.code-blue"&gt;Code Blue&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1LGPhssZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yb2uuji8do91a15ttwpz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1LGPhssZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yb2uuji8do91a15ttwpz.png" alt="React code snippet with the Code Blue theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#dobri-next"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=sldobri.bunker"&gt;Dobri Next&lt;/a&gt;
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#31-dobri-next-c05-electron"&gt;
  &lt;/a&gt;
  31. Dobri Next - C05 - Electron
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ocP6zW0x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7n3zsjqxtcsqii6tkpqd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ocP6zW0x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7n3zsjqxtcsqii6tkpqd.png" alt="React code snippet with the Dobri Next - C05 - Electron theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#32-dobri-next-c09-eve"&gt;
  &lt;/a&gt;
  32. Dobri Next - C09 - Eve
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Una4Bwsh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fxavc2zcjusbcm8zpu6z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Una4Bwsh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fxavc2zcjusbcm8zpu6z.png" alt="React code snippet with the Dobri Next - C09 - Eve theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#33-dracula"&gt;
  &lt;/a&gt;
  33. &lt;a href="https://marketplace.visualstudio.com/items?itemName=dracula-theme.theme-dracula"&gt;Dracula&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GKmL_3_7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1mqxz7ub8nkb6fcxftfi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GKmL_3_7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1mqxz7ub8nkb6fcxftfi.png" alt="React code snippet with the Dracula theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#34-dracula-at-night"&gt;
  &lt;/a&gt;
  34. &lt;a href="https://marketplace.visualstudio.com/items?itemName=bceskavich.theme-dracula-at-night"&gt;Dracula At Night&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HRl-tu4W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ycnrdwd8ugu96307740q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HRl-tu4W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ycnrdwd8ugu96307740q.png" alt="React code snippet with the Dracula At Night theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#35-electron"&gt;
  &lt;/a&gt;
  35. &lt;a href="https://marketplace.visualstudio.com/items?itemName=kuscamara.electron"&gt;Electron&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--On2nkQC4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ihcxe4jaemwl7ujpzvfz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--On2nkQC4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ihcxe4jaemwl7ujpzvfz.png" alt="React code snippet with the Electron theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#36-halcyon"&gt;
  &lt;/a&gt;
  36. &lt;a href="https://marketplace.visualstudio.com/items?itemName=brittanychiang.halcyon-vscode"&gt;Halcyon&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sSbhy87f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rvlgz5xjr2foduuj5gnw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sSbhy87f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rvlgz5xjr2foduuj5gnw.png" alt="React code snippet with the Halcyon theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#horizon"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=jolaleye.horizon-theme-vscode"&gt;Horizon&lt;/a&gt;
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#37-horizon"&gt;
  &lt;/a&gt;
  37. Horizon
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yk-oJhs4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7dyhge8hptgebue2yj7h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yk-oJhs4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7dyhge8hptgebue2yj7h.png" alt="React code snippet with the Horizon theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#38-horizon-bright"&gt;
  &lt;/a&gt;
  38. Horizon - Bright
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4vcvF7nI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qh0fkpqsw6no41wt17ju.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4vcvF7nI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qh0fkpqsw6no41wt17ju.png" alt="React code snippet with the Horizon - Bright theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#39-laserwave"&gt;
  &lt;/a&gt;
  39. &lt;a href="https://marketplace.visualstudio.com/items?itemName=jaredkent.laserwave"&gt;LaserWave&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JWI5SPDR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/532vbio7zymgop3j3p78.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JWI5SPDR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/532vbio7zymgop3j3p78.png" alt="React code snippet with the LaserWave theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#material"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=Equinusocio.vsc-material-theme"&gt;Material&lt;/a&gt;
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#40-material-theme-ocean"&gt;
  &lt;/a&gt;
  40. Material Theme - Ocean
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cb7uhfke--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ov1nm37n72uzbgi68d3g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cb7uhfke--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ov1nm37n72uzbgi68d3g.png" alt="React code snippet with the Material - Ocean theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#41-material-theme-lighter"&gt;
  &lt;/a&gt;
  41. Material Theme - Lighter
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oYf7zok4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y36fb3lbsxhaupgbz8sj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oYf7zok4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y36fb3lbsxhaupgbz8sj.png" alt="React code snippet with the Material - Lighter theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#mayukai"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=GulajavaMinistudio.mayukaithemevsc"&gt;Mayukai&lt;/a&gt;
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#42-mayukai-mirage"&gt;
  &lt;/a&gt;
  42. Mayukai - Mirage
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hgyr007l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eidot52b1xd0x84egwze.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hgyr007l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eidot52b1xd0x84egwze.png" alt="React code snippet with the Mayukai - Mirage theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#43-mayukai-mono"&gt;
  &lt;/a&gt;
  43. Mayukai - Mono
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i0S1yXn0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/132n7qbjlfdm0rv7kcq4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i0S1yXn0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/132n7qbjlfdm0rv7kcq4.png" alt="React code snippet with the Mayukai - Mono theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#44-mayukai-sunset"&gt;
  &lt;/a&gt;
  44. Mayukai - Sunset
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YUAIwOZX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6lv1orabq2fis5dr1rw0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YUAIwOZX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6lv1orabq2fis5dr1rw0.png" alt="React code snippet with the Mayukai - Sunset  theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#45-min-theme-dark"&gt;
  &lt;/a&gt;
  45. &lt;a href="https://marketplace.visualstudio.com/items?itemName=miguelsolorio.min-theme"&gt;Min Theme - Dark&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EDdx_HRQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxee54gqlwteicunmuqj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EDdx_HRQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxee54gqlwteicunmuqj.png" alt="React code snippet with the Min - Dark theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#night-owl"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=sdras.night-owl"&gt;Night Owl&lt;/a&gt;
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#46-night-owl"&gt;
  &lt;/a&gt;
  46. Night Owl
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QaicsG8N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h88xfebp2i5oi4w2oojq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QaicsG8N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h88xfebp2i5oi4w2oojq.png" alt="React code snippet with the Night Owl theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#47-night-owl-light"&gt;
  &lt;/a&gt;
  47. Night Owl - Light
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--icr_2Dz7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8cgk2blmdiv3inw3lcrg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--icr_2Dz7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8cgk2blmdiv3inw3lcrg.png" alt="React code snippet with the Night Owl - Light theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#48-noctis-hibernus"&gt;
  &lt;/a&gt;
  48. &lt;a href="https://marketplace.visualstudio.com/items?itemName=liviuschera.noctis"&gt;Noctis - Hibernus&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gnLyVX2o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6rv22ewqcaes3ofianej.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gnLyVX2o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6rv22ewqcaes3ofianej.png" alt="React code snippet with the Noctis - Hibernus theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#49-overnight-slumber"&gt;
  &lt;/a&gt;
  49. &lt;a href="https://marketplace.visualstudio.com/items?itemName=cev.overnight"&gt;Overnight - Slumber&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wu4Omd_2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b780uo2n6kkqw8gsofyk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wu4Omd_2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b780uo2n6kkqw8gsofyk.png" alt="React code snippet with the Overnight - Slumber theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#50-panda-syntax"&gt;
  &lt;/a&gt;
  50. &lt;a href="https://marketplace.visualstudio.com/items?itemName=tinkertrain.theme-panda"&gt;Panda Syntax&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YbJ5Vust--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/en52e6m8sv0zjym16glv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YbJ5Vust--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/en52e6m8sv0zjym16glv.png" alt="React code snippet with the Panda Syntax theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#51-radical"&gt;
  &lt;/a&gt;
  51. &lt;a href="https://marketplace.visualstudio.com/items?itemName=dhedgecock.radical-vscode"&gt;Radical&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4WQIPuDv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m1bjsrji7uflrgkw004q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4WQIPuDv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m1bjsrji7uflrgkw004q.png" alt="React code snippet with the Radical theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#ros%C3%A9-pine"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=mvllow.rose-pine"&gt;Rosé Pine&lt;/a&gt;
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#52-ros%C3%A9-pine"&gt;
  &lt;/a&gt;
  52. Rosé Pine
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W8NeQUFJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g8kzao0trw1c7j264psg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W8NeQUFJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g8kzao0trw1c7j264psg.png" alt="React code snippet with the Rosé Pine theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#53-ros%C3%A9-pine-dawn"&gt;
  &lt;/a&gt;
  53. Rosé Pine - Dawn
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3UiG4tGH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j3mnpxyairqlxrjp7jv1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3UiG4tGH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j3mnpxyairqlxrjp7jv1.png" alt="React code snippet with the Rosé Pine - Dawn theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#rouge"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=josef.rouge-theme"&gt;Rouge&lt;/a&gt;
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#54-rouge"&gt;
  &lt;/a&gt;
  54. Rouge
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y_qp8IUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oatwsfsa7q1rp5iwzs34.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y_qp8IUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oatwsfsa7q1rp5iwzs34.png" alt="React code snippet with the Rouge theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#55-rouge-2"&gt;
  &lt;/a&gt;
  55. Rouge 2
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wp8ldXoJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4mj20n8ecb0pflpiiyrz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wp8ldXoJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4mj20n8ecb0pflpiiyrz.png" alt="React code snippet with the Rouge 2 theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#56-sea-green-theme"&gt;
  &lt;/a&gt;
  56. &lt;a href="https://marketplace.visualstudio.com/items?itemName=raashida.fixthecode-vs"&gt;Sea Green Theme&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9pOUfPv5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ayh6cu58nkqvcyp8u3lf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9pOUfPv5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ayh6cu58nkqvcyp8u3lf.png" alt="React code snippet with the Sea Green theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#57-synthwave-84"&gt;
  &lt;/a&gt;
  57. &lt;a href="https://marketplace.visualstudio.com/items?itemName=RobbOwen.synthwave-vscode"&gt;SynthWave '84&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CyYnmdzl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nvxgnmz8b8j10a6witd7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CyYnmdzl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nvxgnmz8b8j10a6witd7.png" alt="React code snippet with the SynthWave '84 theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#tinacious-design"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=tinaciousdesign.theme-tinaciousdesign"&gt;Tinacious Design&lt;/a&gt;
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#58-tinacious-design"&gt;
  &lt;/a&gt;
  58. Tinacious Design
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qa8iHoMp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/liu711lnrx4z6uixzloc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qa8iHoMp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/liu711lnrx4z6uixzloc.png" alt="React code snippet with the Tinacious Design theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#59-tinacious-design-light"&gt;
  &lt;/a&gt;
  59. Tinacious Design - Light
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LtannovI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r1askukcp75w7mt1av16.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LtannovI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r1askukcp75w7mt1av16.png" alt="React code snippet with the Tinacious Design - Light theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#60-tokyo-night"&gt;
  &lt;/a&gt;
  60. &lt;a href="https://marketplace.visualstudio.com/items?itemName=enkia.tokyo-night"&gt;Tokyo Night&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0a8xOjxy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/slgx9d16ad2b3tycs3r1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0a8xOjxy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/slgx9d16ad2b3tycs3r1.png" alt="React code snippet with the Tokyo Night theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#61-vue-theme"&gt;
  &lt;/a&gt;
  61. &lt;a href="https://marketplace.visualstudio.com/items?itemName=mariorodeghiero.vue-theme"&gt;Vue Theme&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vx5EDkSV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3i3qgt0wdiq0cx39m2aw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vx5EDkSV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3i3qgt0wdiq0cx39m2aw.png" alt="React code snippet with the Vue theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;🎉 Don't forget to follow me on &lt;a href="https://instagram.com/underscorecode"&gt;Instagram&lt;/a&gt; and &lt;a href="https://twitter.com/underscorecode"&gt;Twitter&lt;/a&gt; for more related content.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>vscode</category>
      <category>productivity</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>10 raisons pourquoi j'aime Laravel !</title>
      <author> Eric Le Codeur</author>
      <pubDate>Tue, 15 Jun 2021 12:58:23 +0000</pubDate>
      <link>https://dev.to/ericlecodeur/10-raisons-pourquoi-j-aime-laravel-3kec</link>
      <guid>https://dev.to/ericlecodeur/10-raisons-pourquoi-j-aime-laravel-3kec</guid>
      <description>&lt;p&gt;Si vous désirez plus de contenu francophone comme celui-ci, cliquer &lt;strong&gt;Follow ou &lt;a href="https://twitter.com/EricLeCodeur"&gt;suivez-moi sur Twitter&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Au cours des deux dernières années, j'ai essayé plusieurs langages et frameworks de programmation. J'ai réalisé des projets avec Django, Laravel, Ruby on Rails et Node.js avec Express.js&lt;/p&gt;

&lt;p&gt;J'ai adoré tout ces frameworks. Ils sont tous matures et font tous le travail. En revanche, l'un de ces framework m'a séduit un peu plus que les autres ... Laravel.&lt;/p&gt;

&lt;p&gt;Voici les 10 raisons pour lesquelles je crois sincèrement que Laravel est génial!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;PHP est génial! Oui. Ceux qui prétendent le contraire sont, désolés de le dire, ignorants. Ils ignorent que PHP 3.0 est obsolète depuis longtemps et que PHP 8 est désormais un langage POO complet, relativement rapide, mature, stable et très agréable à utiliser.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Le framework Laravel est précisément construit en POO avec les derniers standards PHP. La syntaxe de Laravel est simple, claire et élégante.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Avec Laravel, il n'y a presque pas de code standard à écrire. Comparé à plusieurs autres frameworks, Laravel est livré avec une configuration de démarrage complète. Grâce aux librairies de Laravel, développer une application web c'est simple et ultra rapide!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Il existe une panoplie de packages tiers. Pourquoi ré-inventer la roue ? Utilisez un package existant et économisez des heures et des heures de développement... Un point fort en faveur de Laravel est que les packages tier Laravel sont maintenu, à jour et prêt pour être utilisé sur des vraie projets! &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Les créateurs de Laravel ont créé un éco-système de produits professionnels qui complète Laravel d'une manière merveilleuse. Bien sûr, ces produits sont payants, mais en retour, ils sont prêts pour la mise en production à grande échelle et peuvent vous faire économiser des centaines d'heures de développement.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Avec Laravel, il est également possible de créer des applications fullstack, c'est-à-dire backend mais aussi frontend. Le code reste exécuté sur le serveur mais certains produits comme Livewire permettent de développer des UI interactives comme React mais en pur PHP, simple et facile et sans une ligne de code Javascript.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Laravel prend également en charge la création de composants d'interface utilisateur. Il est donc possible d'intégrer dans votre UI des widgets déjà pré-développés et clé en main qui peuvent être installés en moins d'une minute et toujours en PHP pur et sans javascript. (ex. graphique chart, calendrier, datatable, ect.)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Laravel est open source mais il est développé par ces créateurs comme un produit pro. C'est-à-dire que les retours clients sont pris en compte dans les décisions et que des corrections et améliorations sont régulièrement publiées. Laravel peut se targuer d'être à jour avec les dernières technologies.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Une documentation incroyables. Laravel a à mon avis la meilleure documentation pour un framework backend. Tout est simple, clair et détaillé avec des exemples. Les outils de recherche fonctionnent très bien, il est donc facile de trouver ce que vous recherchez. De plus, elle est régulièrement mis à jour.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;La communauté Laravel est géniale! Tout le monde est le bienvenu pour rejoindre la famille. Il n'y a pas de discrimination et pas de snobisme. Aucune question n'est considérée comme stupide. Les gens veulent aider du mieux qu'ils peuvent.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;C'est tout :-)&lt;/p&gt;

&lt;p&gt;Si cela vous donne envie d'en savoir plus sur Laravel et pourquoi pas l'essayer. Vous pouvez commencer ici: &lt;a href="http://www.laravel.com"&gt;www.laravel.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Je publierai plusieurs articles dans les semaines à venir sur Laravel. Vous pouvez me suivre si vous ne voulez rien manquer.&lt;/p&gt;

</description>
      <category>french</category>
      <category>php</category>
      <category>laravel</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
