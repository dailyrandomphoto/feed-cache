<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>100 blog topic ideas for your next article - No more writers block</title>
      <author>Andrew Baisden</author>
      <pubDate>Mon, 06 Sep 2021 09:42:59 +0000</pubDate>
      <link>https://dev.to/andrewbaisden/100-blog-topic-ideas-for-your-next-article-no-more-writers-block-2e0j</link>
      <guid>https://dev.to/andrewbaisden/100-blog-topic-ideas-for-your-next-article-no-more-writers-block-2e0j</guid>
      <description>&lt;p&gt;A stumbling block for almost all aspiring writers is what should I write about? Writers block prevents a lot of writers from creating articles because they just can't think of something good to write about. I have put together a list of 100 blog topics that you could write about. You can use this list as inspiration to come up with ideas for your own articles.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here are 100 blog topics to inspire you to write!&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-framework-x-vs-framework-y"&gt;
  &lt;/a&gt;
  1. Framework X vs Framework Y
&lt;/h3&gt;

&lt;p&gt;You could compare the differences between React and Vue for example.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-why-i-decided-to-become-a-developer"&gt;
  &lt;/a&gt;
  2. Why I decided to become a developer
&lt;/h3&gt;

&lt;p&gt;Talk about your transition into the tech world&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-frontend-vs-backend"&gt;
  &lt;/a&gt;
  3. Front-End vs Back-End
&lt;/h3&gt;

&lt;p&gt;The difference between the two&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-why-you-should-become-a-writer"&gt;
  &lt;/a&gt;
  4. Why you should become a writer
&lt;/h3&gt;

&lt;p&gt;Reasons for becoming a blogger/writer&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-what-i-learned-from-looking-for-a-developer-job"&gt;
  &lt;/a&gt;
  5. What I learned from looking for a developer job
&lt;/h3&gt;

&lt;p&gt;Talk about your personal experience when you were looking for work&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-how-to-grow-fast-on-twitter"&gt;
  &lt;/a&gt;
  6. How to grow fast on Twitter
&lt;/h3&gt;

&lt;p&gt;Talk about your recent fast growth and what you learned about marketing&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-how-to-build-mobile-apps-using-language-x"&gt;
  &lt;/a&gt;
  7. How to build mobile apps using language X
&lt;/h3&gt;

&lt;p&gt;Building mobile apps using flutter/react native/swift/kotlin/java etc...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-how-to-deal-with-imposter-syndrome"&gt;
  &lt;/a&gt;
  8. How to deal with imposter syndrome
&lt;/h3&gt;

&lt;p&gt;Tips on dealing with imposter syndrome&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-tips-for-building-a-strong-brand"&gt;
  &lt;/a&gt;
  9. Tips for building a strong brand
&lt;/h3&gt;

&lt;p&gt;Examples and personal experience on building a brand&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-why-you-should-join-a-bootcamp"&gt;
  &lt;/a&gt;
  10. Why you should join a bootcamp
&lt;/h3&gt;

&lt;p&gt;Personal experiences on how it worked out for you&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-top-x-ways-to-become-a-self-taught-developer"&gt;
  &lt;/a&gt;
  11. Top X ways to become a self taught developer
&lt;/h3&gt;

&lt;p&gt;A list of items on how to learn and become a developer&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12-how-to-build-an-api-using-language-x"&gt;
  &lt;/a&gt;
  12. How to build an API using language X
&lt;/h3&gt;

&lt;p&gt;You could write a guide for creating an API using Node.js&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#13-a-beginners-guide-to-building-an-app-using-framework-x"&gt;
  &lt;/a&gt;
  13. A beginners guide to building an app using framework X
&lt;/h3&gt;

&lt;p&gt;A guide for building apps using a framework like Next.js, Gatsby, React, Vue etc...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#14-here-are-x-courses-for-learning-language-y"&gt;
  &lt;/a&gt;
  14. Here are X courses for learning language Y
&lt;/h3&gt;

&lt;p&gt;For example 10 courses for learning Python&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#15-x-best-approaches-for-learning-a-programming-language"&gt;
  &lt;/a&gt;
  15. X best approaches for learning a programming language
&lt;/h3&gt;

&lt;p&gt;For example 5 best approaches for learning JavaScript&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#16-why-you-should-be-using-database-x"&gt;
  &lt;/a&gt;
  16. Why you should be using database X
&lt;/h3&gt;

&lt;p&gt;A detailed article on why you should be using MongoDB for storage for example etc...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#17-what-i-learned-after-failing-x-interviews"&gt;
  &lt;/a&gt;
  17. What I learned after failing X interviews
&lt;/h3&gt;

&lt;p&gt;Talk about what you learned after failing 15 interviews for example&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#18-what-i-plan-on-learning-and-who-i-am"&gt;
  &lt;/a&gt;
  18. What I plan on learning and who I am
&lt;/h3&gt;

&lt;p&gt;An introduction on who you are and what you are learning&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#19-fundamentals-all-developers-should-know-about-language-x"&gt;
  &lt;/a&gt;
  19. Fundamentals all developers should know about language X
&lt;/h3&gt;

&lt;p&gt;Talk about JavaScript, Python or another language and the fundamentals&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#20-what-i-realised-after-learning-language-x-language-y-and-language-z"&gt;
  &lt;/a&gt;
  20. What I realised after learning language X, language Y and language Z
&lt;/h3&gt;

&lt;p&gt;For example JavaScript, Python and C# talk about your findings after you played around with them for the first time &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#21-x-good-traits-top-developers-have-and-how-to-be-like-them"&gt;
  &lt;/a&gt;
  21. X good traits top developers have and how to be like them
&lt;/h3&gt;

&lt;p&gt;For example you could talk about 10 good traits and how to use them to your advantage&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#22-what-i-learned-from-hackathons"&gt;
  &lt;/a&gt;
  22. What I learned from hackathons
&lt;/h3&gt;

&lt;p&gt;Talk about your experience&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#23-how-to-use-x-css-framework-with-y-javascript-framework"&gt;
  &lt;/a&gt;
  23. How to use X CSS framework with Y JavaScript framework
&lt;/h3&gt;

&lt;p&gt;In this example you could talk about using Tailwind CSS with React&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#24-how-to-make-a-passive-income-on-gumroad"&gt;
  &lt;/a&gt;
  24. How to make a passive income on GumRoad
&lt;/h3&gt;

&lt;p&gt;Talk about your success and experience on GumRoad&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#25-how-to-make-a-passive-income-on-producthunt"&gt;
  &lt;/a&gt;
  25. How to make a passive income on ProductHunt
&lt;/h3&gt;

&lt;p&gt;Talk about your success and experience on ProductHunt&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#26-freelancing-vs-full-time-employment"&gt;
  &lt;/a&gt;
  26. Freelancing vs Full Time employment
&lt;/h3&gt;

&lt;p&gt;The difference between the two&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#27-the-difference-between-static-site-generators-and-which-one-to-use"&gt;
  &lt;/a&gt;
  27. The difference between static site generators and which one to use
&lt;/h3&gt;

&lt;p&gt;Talk about the differences &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#28-a-day-in-the-life-of-a-software-developer"&gt;
  &lt;/a&gt;
  28. A day in the life of a software developer
&lt;/h3&gt;

&lt;p&gt;Talk about what its really like to work in the industry&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#29-how-to-become-productive-as-a-developer"&gt;
  &lt;/a&gt;
  29. How to become productive as a developer
&lt;/h3&gt;

&lt;p&gt;Tips, tricks and tools that you use day to day&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#30-x-time-management-strategies-to-become-more-productive"&gt;
  &lt;/a&gt;
  30. X time management strategies to become more productive
&lt;/h3&gt;

&lt;p&gt;For example 20 time management strategies&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#31-remote-vs-office-work"&gt;
  &lt;/a&gt;
  31. Remote vs Office Work
&lt;/h3&gt;

&lt;p&gt;The difference between the two from your experience&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#32-how-to-persist-your-data"&gt;
  &lt;/a&gt;
  32. How to persist your data
&lt;/h3&gt;

&lt;p&gt;Talk about using databases, local storage, session state etc...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#33-what-you-love-about-working-as-a-developer"&gt;
  &lt;/a&gt;
  33. What you love about working as a developer
&lt;/h3&gt;

&lt;p&gt;Talk about your experiences&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#34-what-you-dont-love-about-working-as-a-developer"&gt;
  &lt;/a&gt;
  34. What you don't love about working as a developer
&lt;/h3&gt;

&lt;p&gt;Talk about your experiences&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#35-the-best-soft-skills-to-have-as-a-developer"&gt;
  &lt;/a&gt;
  35. The best soft skills to have as a developer
&lt;/h3&gt;

&lt;p&gt;Use examples to back up what you are saying&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#36-how-to-deal-with-burnout"&gt;
  &lt;/a&gt;
  36. How to deal with burnout
&lt;/h3&gt;

&lt;p&gt;Talk about your experiences&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#37-why-you-should-be-active-on-social-media"&gt;
  &lt;/a&gt;
  37. Why you should be active on social media
&lt;/h3&gt;

&lt;p&gt;Talk about your personal experiences and reasoning&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#38-where-you-see-yourself-in-the-next-x-years"&gt;
  &lt;/a&gt;
  38. Where you see yourself in the next X years
&lt;/h3&gt;

&lt;p&gt;Talk about your career growth&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#39-how-to-monetise-your-products"&gt;
  &lt;/a&gt;
  39. How to monetise your products
&lt;/h3&gt;

&lt;p&gt;Talk about strategies that worked for you&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#40-strategies-for-getting-good-at-data-structures"&gt;
  &lt;/a&gt;
  40. Strategies for getting good at data structures
&lt;/h3&gt;

&lt;p&gt;Give examples and maybe link to articles or courses etc...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#41-how-you-deal-with-indecisive-clients"&gt;
  &lt;/a&gt;
  41. How you deal with indecisive clients
&lt;/h3&gt;

&lt;p&gt;Talk about your experiences&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#42-how-to-go-from-unemployed-to-employed-as-a-developer"&gt;
  &lt;/a&gt;
  42. How to go from unemployed to employed as a developer
&lt;/h3&gt;

&lt;p&gt;Strategies to get employed and into the tech industry&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#43-how-i-stay-up-to-date-in-the-industry"&gt;
  &lt;/a&gt;
  43. How I stay up to date in the industry
&lt;/h3&gt;

&lt;p&gt;Stories from your life&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#44-people-that-inspire-me-in-the-industry"&gt;
  &lt;/a&gt;
  44. People that inspire me in the industry
&lt;/h3&gt;

&lt;p&gt;You could do some case studies on other successful developers and how they inspired you&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#45-why-you-dont-do-overtime-work"&gt;
  &lt;/a&gt;
  45. Why you don't do overtime work
&lt;/h3&gt;

&lt;p&gt;Talk about your experiences&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#46-comparing-web-development-to-wix-and-squarespace"&gt;
  &lt;/a&gt;
  46. Comparing web development to Wix and Squarespace
&lt;/h3&gt;

&lt;p&gt;Talk about the differences between them&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#47-x-npm-packages-that-you-should-be-using"&gt;
  &lt;/a&gt;
  47. X NPM packages that you should be using
&lt;/h3&gt;

&lt;p&gt;For example 12 useful packages&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#48-netlifyvercel-serverless-functions"&gt;
  &lt;/a&gt;
  48. Netlify/Vercel serverless functions
&lt;/h3&gt;

&lt;p&gt;A guide on how to use them&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#49-how-to-setup-a-cicd-workflow-with-testing"&gt;
  &lt;/a&gt;
  49. How to setup a CI/CD workflow with testing
&lt;/h3&gt;

&lt;p&gt;A tutorial on how to set it all up&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#50-getting-into-open-source-and-how-to-be-a-good-contributor"&gt;
  &lt;/a&gt;
  50. Getting into open source and how to be a good contributor
&lt;/h3&gt;

&lt;p&gt;A guide on how you did it and what you learned from it&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#51-best-design-resources-for-aspiring-designers"&gt;
  &lt;/a&gt;
  51. Best design resources for aspiring designers
&lt;/h3&gt;

&lt;p&gt;A list of great resources to use&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#52-best-developer-resources-for-aspiring-developers"&gt;
  &lt;/a&gt;
  52. Best developer resources for aspiring developers
&lt;/h3&gt;

&lt;p&gt;A list of great resources to use&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#53-how-to-deal-with-difficult-interview-questions"&gt;
  &lt;/a&gt;
  53. How to deal with difficult interview questions
&lt;/h3&gt;

&lt;p&gt;Give examples on how to do well&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#54-x-tools-every-developer-should-use"&gt;
  &lt;/a&gt;
  54. X tools every developer should use
&lt;/h3&gt;

&lt;p&gt;For example 10 tools&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#55-x-github-repos-that-you-should-know-about"&gt;
  &lt;/a&gt;
  55. X GitHub repos that you should know about
&lt;/h3&gt;

&lt;p&gt;Do some research on GitHub repos and evaluate them&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#56-i-have-x-years-working-as-a-developer-what-i-have-learned-so-far"&gt;
  &lt;/a&gt;
  56. I have X years working as a developer what I have learned so far
&lt;/h3&gt;

&lt;p&gt;Talk about your experience&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#57-how-to-improve-your-apps-performance-using-database-x"&gt;
  &lt;/a&gt;
  57. How to improve your apps performance using database X
&lt;/h3&gt;

&lt;p&gt;A detailed review on how to boost performance using PostgreSQL for example&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#58-best-developers-to-follow-if-you-are-a-x-developer"&gt;
  &lt;/a&gt;
  58. Best developers to follow if you are a X developer
&lt;/h3&gt;

&lt;p&gt;If you are a JavaScript, Python, PHP, C# etc...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#59-what-are-code-reviews-and-why-you-should-get-better-at-them"&gt;
  &lt;/a&gt;
  59. What are code reviews and why you should get better at them
&lt;/h3&gt;

&lt;p&gt;Talk about your experiences and how you improved&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#60-what-is-the-best-laptop-for-a-developer"&gt;
  &lt;/a&gt;
  60. What is the best laptop for a developer
&lt;/h3&gt;

&lt;p&gt;Do a detailed deep dive on different laptops and how they compare&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#61-macos-vs-windows-vs-linux"&gt;
  &lt;/a&gt;
  61. macOs vs Windows vs Linux
&lt;/h3&gt;

&lt;p&gt;How all 3 compare for developers and your preference&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#62-how-to-boost-your-memory"&gt;
  &lt;/a&gt;
  62. How to boost your memory
&lt;/h3&gt;

&lt;p&gt;Personal experiences from learning&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#63-how-to-build-2d-games-using-language-x"&gt;
  &lt;/a&gt;
  63. How to build 2D games using language X
&lt;/h3&gt;

&lt;p&gt;Building games using JavaScript, Python, C# etc...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#64-building-pwa-apps-using-framework-x"&gt;
  &lt;/a&gt;
  64. Building PWA apps using framework X
&lt;/h3&gt;

&lt;p&gt;How to build games using Flutter, React etc...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#65-static-vs-dynamically-typed-languages"&gt;
  &lt;/a&gt;
  65. Static vs Dynamically typed languages
&lt;/h3&gt;

&lt;p&gt;Comparing JavaScript to Dart for example&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#66-standing-desk-vs-normal-desk"&gt;
  &lt;/a&gt;
  66. Standing desk vs normal desk
&lt;/h3&gt;

&lt;p&gt;The difference between the two and your experience&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#67-why-you-chose-to-use-database-x-instead-of-database-y-for-a-project"&gt;
  &lt;/a&gt;
  67. Why you chose to use database X instead of database Y for a project
&lt;/h3&gt;

&lt;p&gt;Comparing a Sql and noSQL database for usage in a project&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#68-the-best-social-media-platforms-for-developers"&gt;
  &lt;/a&gt;
  68. The best social media platforms for developers
&lt;/h3&gt;

&lt;p&gt;Talk about the platforms that you think are great&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#69-how-i-created-my-personal-brand"&gt;
  &lt;/a&gt;
  69. How I created my personal brand
&lt;/h3&gt;

&lt;p&gt;Talk about your success and experience&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#69-how-i-made-x-amount-of-money-with-a-product-i-made"&gt;
  &lt;/a&gt;
  69. How I made X amount of money with a product I made
&lt;/h3&gt;

&lt;p&gt;Talk about your success and how you did it&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#70-how-i-became-successful-on-platform-x"&gt;
  &lt;/a&gt;
  70. How I became successful on platform X
&lt;/h3&gt;

&lt;p&gt;Your experience on gaining a huge following on twitter, YouTube, Hashnode, DEV etc...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#71-learning-how-to-do-web-scraping-using-python"&gt;
  &lt;/a&gt;
  71. Learning how to do web scraping using Python
&lt;/h3&gt;

&lt;p&gt;A tutorial on how to do it&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#72-how-to-build-a-chatbot-using-language-x"&gt;
  &lt;/a&gt;
  72. How to build a chatbot using language X
&lt;/h3&gt;

&lt;p&gt;A  guide on making a chatbot using JavaScript, Python etc...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#73-how-to-get-into-freelancing"&gt;
  &lt;/a&gt;
  73. How to get into freelancing
&lt;/h3&gt;

&lt;p&gt;Talk about how you did it and how others can do the same&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#74-a-tutorial-on-how-to-use-aws-for-cloud-storage"&gt;
  &lt;/a&gt;
  74. A tutorial on how to use AWS for cloud storage
&lt;/h3&gt;

&lt;p&gt;Creating a tutorial about AWS&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#75-how-to-create-css-art-from-scratch"&gt;
  &lt;/a&gt;
  75. How to create CSS Art from scratch
&lt;/h3&gt;

&lt;p&gt;A detailed guide on how to make CSS Art&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#76-the-best-developer-browser-extensions-to-use"&gt;
  &lt;/a&gt;
  76. The best developer browser extensions to use
&lt;/h3&gt;

&lt;p&gt;A list of browser extensions for chrome or Firefox&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#77-how-you-debug-your-applications"&gt;
  &lt;/a&gt;
  77. How you debug your applications
&lt;/h3&gt;

&lt;p&gt;A guide for doing debugging&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#78-how-to-create-cool-buttons-using-css"&gt;
  &lt;/a&gt;
  78. How to create cool buttons using CSS
&lt;/h3&gt;

&lt;p&gt;A guide for creating cool styled buttons&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#79-the-difference-between-promises-and-async-await"&gt;
  &lt;/a&gt;
  79. The difference between promises and async await
&lt;/h3&gt;

&lt;p&gt;Your thoughts on the subject&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#80-a-roadmap-for-learning-a-technical-stack-and-getting-hired"&gt;
  &lt;/a&gt;
  80. A roadmap for learning a technical stack and getting hired
&lt;/h3&gt;

&lt;p&gt;An roadmap article for learning programming languages&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#81-your-progress-on-doing-the-100-days-of-code-challenge-so-far"&gt;
  &lt;/a&gt;
  81. Your progress on doing the 100 days of code challenge so far
&lt;/h3&gt;

&lt;p&gt;A progress update on what you have accomplished so far&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#82-how-to-build-an-ecommerce-website-using-framework-x"&gt;
  &lt;/a&gt;
  82. How to build an e-commerce website using framework X
&lt;/h3&gt;

&lt;p&gt;A tutorial for building a website using the MERN stack&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#83-the-top-x-visual-studio-code-extensions-you-use"&gt;
  &lt;/a&gt;
  83. The top X Visual Studio Code Extensions you use
&lt;/h3&gt;

&lt;p&gt;The top 10 extensions etc...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#84-how-to-network-when-you-dont-have-a-big-social-circle"&gt;
  &lt;/a&gt;
  84. How to network when you don't have a big social circle
&lt;/h3&gt;

&lt;p&gt;Tips for connecting with new people&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#85-what-you-learned-from-a-failed-product-launch"&gt;
  &lt;/a&gt;
  85. What you learned from a failed product launch
&lt;/h3&gt;

&lt;p&gt;A story about your experiences&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#86-what-you-learned-from-a-successful-product-launch"&gt;
  &lt;/a&gt;
  86. What you learned from a successful product launch
&lt;/h3&gt;

&lt;p&gt;A story about your experiences&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#87-x-steps-to-succeeding-in-a-new-job-role"&gt;
  &lt;/a&gt;
  87. X steps to succeeding in a new job role
&lt;/h3&gt;

&lt;p&gt;Talk about your experience from past jobs&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#88-the-best-company-you-have-ever-worked-for-and-what-you-learned"&gt;
  &lt;/a&gt;
  88. The best company you have ever worked for and what you learned
&lt;/h3&gt;

&lt;p&gt;Talk about a previous/current job you had&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#89-the-worst-company-you-have-ever-worked-for-and-what-you-learned"&gt;
  &lt;/a&gt;
  89. The worst company you have ever worked for and what you learned
&lt;/h3&gt;

&lt;p&gt;Talk about a previous/current job you had&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#90-what-you-learned-after-using-github-copilot"&gt;
  &lt;/a&gt;
  90. What you learned after using GitHub Copilot
&lt;/h3&gt;

&lt;p&gt;Talk about your experience using it in a project&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#91-what-it-was-like-when-you-first-started-bloggingyoutube-as-an-introvert"&gt;
  &lt;/a&gt;
  91. What it was like when you first started blogging/YouTube as an introvert
&lt;/h3&gt;

&lt;p&gt;What your personal experience was like on the subject&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#92-how-to-add-a-cms-to-your-website"&gt;
  &lt;/a&gt;
  92. How to add a CMS to your website
&lt;/h3&gt;

&lt;p&gt;A tutorial for using a CMS like Strapi, Gatsby or Sanity.io.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#93-a-cheatsheet-for-language-x"&gt;
  &lt;/a&gt;
  93. A cheatsheet for language X
&lt;/h3&gt;

&lt;p&gt;A detailed cheatsheet for using flex box, css grid, JavaScript, Python etc...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#94-how-to-negotiate-when-getting-a-job-offer"&gt;
  &lt;/a&gt;
  94. How to negotiate when getting a job offer
&lt;/h3&gt;

&lt;p&gt;A guide for managing job offers&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#95-how-to-collaborate-with-other-developers"&gt;
  &lt;/a&gt;
  95. How to collaborate with other developers
&lt;/h3&gt;

&lt;p&gt;A strategy for collaborating with other developers on projects&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#96-how-to-explain-a-technical-subject-to-a-non-tech-person"&gt;
  &lt;/a&gt;
  96. How to explain a technical subject to a non tech person
&lt;/h3&gt;

&lt;p&gt;Talk about an experience you had and how to apply it to other scenarios&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#97-how-to-setup-a-development-environment"&gt;
  &lt;/a&gt;
  97. How to setup a development environment
&lt;/h3&gt;

&lt;p&gt;A guide for setting up a development environment&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#98-how-you-stay-fit-as-a-developer"&gt;
  &lt;/a&gt;
  98. How you stay fit as a developer
&lt;/h3&gt;

&lt;p&gt;Talk about your work out routine and how you schedule it in-between coding sessions&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#99-tips-for-staying-consistent-as-a-writer"&gt;
  &lt;/a&gt;
  99. Tips for staying consistent as a writer
&lt;/h3&gt;

&lt;p&gt;Tips on how you stay consistent&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#100-how-to-use-social-media-to-find-work"&gt;
  &lt;/a&gt;
  100. How to use social media to find work
&lt;/h3&gt;

&lt;p&gt;How you can utilise Twitter and LinkedIn to get your next job role&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;I really hope that you enjoyed reading this article and learned something from it. As a content creator and technical writer I am passionate about sharing my knowledge and helping other people reach their goals. Let's connect across social media you can find all of my social media profiles and blogs on &lt;a href="https://linktr.ee/andrewbaisden"&gt;linktree&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Peace ✌️&lt;/p&gt;

</description>
      <category>career</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Getting Started With Hackerrank Using Python | For Absolute Beginners</title>
      <author>Chinmaya Bisoi</author>
      <pubDate>Mon, 06 Sep 2021 09:09:16 +0000</pubDate>
      <link>https://dev.to/chinmayabisoi/getting-started-with-hackerrank-using-python-for-absolute-beginners-347h</link>
      <guid>https://dev.to/chinmayabisoi/getting-started-with-hackerrank-using-python-for-absolute-beginners-347h</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-intro"&gt;
  &lt;/a&gt;
  The Intro
&lt;/h2&gt;

&lt;p&gt;Data Structures and Algorithms(DSA) are a necessity to land a Good ass Technical job. And when it comes to DSA, people turn to popular websites like &lt;code&gt;Leetcode&lt;/code&gt;, &lt;code&gt;Hackerrank&lt;/code&gt;, &lt;code&gt;Hackerearth&lt;/code&gt; and many more. &lt;/p&gt;

&lt;p&gt;That being said, Starting anew can be difficult and sometimes overwhelming and newbies can find it difficult to figure out the ins and outs of the platform they use (How to take Input(s), how to produce the proper Output(s)  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hackerrank-with-python"&gt;
  &lt;/a&gt;
  Hackerrank with Python
&lt;/h2&gt;

&lt;p&gt;Let's say you come across &lt;a href="https://www.hackerrank.com/challenges/list-comprehensions/problem"&gt;this&lt;/a&gt; kind of question, where you have input &lt;br&gt;
and output like:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rKUjJQEZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i8foqxdr0vsx8chqwn7w.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rKUjJQEZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i8foqxdr0vsx8chqwn7w.PNG" alt="SampleInput"&gt;&lt;/a&gt;&lt;br&gt;
Then the output would be given using &lt;code&gt;print&lt;/code&gt; and one way to take in inputs would be individually take all four inputs like x,y,z,n as given below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if __name__ == '__main__':
    x = int(input())
    y = int(input())
    z = int(input())
    n = int(input())
    print ([[a,b,c] for a in range(0,x+1) for b in range(0,y+1) for c in range(0,z+1) if a + b + c != n ])

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The other way to take in four inputs would be to use a for loop to store the inputs in a list.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Let's see another&lt;/strong&gt; &lt;a href="https://www.hackerrank.com/challenges/find-second-maximum-number-in-a-list/problem"&gt;example&lt;/a&gt; &lt;br&gt;
Consider the given inputs and the following code: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DDqjpp_B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w0249k2wtgbzugi95ac2.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DDqjpp_B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w0249k2wtgbzugi95ac2.PNG" alt="Case2SampleInput"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if __name__ == '__main__':
    n = int(input())
    arr = map(int, input().split())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What the above code does is it assigns 5 to n ; then checks the second line to find &lt;code&gt;2 3 6 6 5&lt;/code&gt; where the input().split() splits the string &lt;code&gt;2 3 6 6 5&lt;/code&gt; to a list with the following items :&lt;br&gt;
&lt;code&gt;2&lt;/code&gt; &lt;code&gt;3&lt;/code&gt; &lt;code&gt;6&lt;/code&gt; &lt;code&gt;6&lt;/code&gt; &lt;code&gt;5&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;The map function then converts the items to integer type and we get a list arr = [2,3,6,6,5] where each item is an integer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hope-this-was-helpful"&gt;
  &lt;/a&gt;
  Hope this was helpful~
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#thats-all-for-now-until-next-time-bros"&gt;
  &lt;/a&gt;
  Thats all for now, Until Next Time Bros
&lt;/h4&gt;

</description>
      <category>python</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How Laravel Website Development Services Helps Organizations To Grow In 2021</title>
      <author>Aditya Goswami</author>
      <pubDate>Mon, 06 Sep 2021 08:45:42 +0000</pubDate>
      <link>https://dev.to/aditya_g_2212/how-laravel-website-development-services-helps-organizations-to-grow-in-2021-326h</link>
      <guid>https://dev.to/aditya_g_2212/how-laravel-website-development-services-helps-organizations-to-grow-in-2021-326h</guid>
      <description>&lt;p&gt;We all know how popular the PHP web framework is for developing web applications. Just like that, With its Model-view-controller architectural pattern. Laravel app development is equally important for web development. Laravel develops websites around the world, organizations like to &lt;em&gt;Hire php Laravel developer&lt;/em&gt; or &lt;em&gt;Laravel experts&lt;/em&gt; for Laravel app development. You will get flawless syntax coding experience with Laravel development.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#many-uses-for-laravel-web-development"&gt;
  &lt;/a&gt;
  Many Uses for Laravel Web Development
&lt;/h3&gt;

&lt;p&gt;Being a website development company, if you are offering quality Laravel website development services, then you surely end up meeting lots of web development projects based on Laravel development. Being a Laravel app development company, you delivered specific requirements for partners.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#laravel-emerge-as-best-php-web-framework"&gt;
  &lt;/a&gt;
  Laravel emerge as Best PHP Web Framework
&lt;/h3&gt;

&lt;p&gt;Being one of the leading PHP development frameworks, Laravel has the potential to deliver well in the website development field. Laravel development is gaining popularity in the community of Laravel web development for its conciseness and simplicity. Community continuously improves the work and quality of Laravel development.&lt;/p&gt;

&lt;p&gt;Being a Laravel development company, the company has experience and understanding of how complexity of code makes a negative impact on the performance of a website. Even sometimes, websites with complex code take lots of time in loading and users leave the platform in frustration. Here I must want to thank MVC architecture for lessened code complexity in Laravel.&lt;/p&gt;

&lt;p&gt;Moreover, one you have crafted the website with Laravel development: you will get the perfect code, quicker development and even code that is cleaner and more efficient. You will get versatility and quality with &lt;a href="https://www.bacancytechnology.com/laravel-development"&gt;Laravel website development services&lt;/a&gt;. hire Laravel programmers and do wonders.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#technical-insight-into-laravel"&gt;
  &lt;/a&gt;
  Technical Insight into Laravel
&lt;/h3&gt;

&lt;p&gt;Caching systems in Laravel are one of the reasons behind the high performance of Laravel development. It can store the numerous caches in the file system and because of that, you can develop the application promptly.&lt;/p&gt;

&lt;p&gt;We all know how competitive the world is right at the moment, you need to be quick in the development process with all the implementation, otherwise anyone can take over your services with high quality services. Laravel website development services offer the most simplified process of user verification to the consumers.&lt;/p&gt;

&lt;p&gt;What if you can do the authentication process with more quality output and lesser complexity and that's exactly what Laravel is offering. Laravel even prevents unauthorized users from accessing your services.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security-is-top-priority-for-laravel"&gt;
  &lt;/a&gt;
  Security is Top Priority for Laravel
&lt;/h3&gt;

&lt;p&gt;Being Laravel developer, you must know what security matters to business and users. If you have an ecommerce business, security must be your top priority and you must protect the client’s details. &lt;/p&gt;

&lt;p&gt;While developing your dream business, you must choose the platform that offers extensive security. You will get lots of code based benefits in Laravel development with almost zero threats. You must hire expert Laravel developer for your Laravel application development.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#future-of-laravel"&gt;
  &lt;/a&gt;
  Future of Laravel
&lt;/h3&gt;

&lt;p&gt;Laravel is at top right now and will keep itself at top and be the most famous and useful PHP frameworks. One of the main reasons behind the demand of the Laravel website development services is its functionality, features, clarity and simplicity. Even the Laravel developers community continuously focus on improving the development that secure the quality of future Laravel development.&lt;/p&gt;

&lt;p&gt;You can use Laravel for any kind of web development, small or bigger, complex or simple, any industries, organizations or startups. Laravel is the perfect choice for your development work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-remarks"&gt;
  &lt;/a&gt;
  Final Remarks
&lt;/h2&gt;

&lt;p&gt;One of the reasons behind the unlimited success of Laravel is - flawless architecture of Laravel. Laravel can do the overall operations of the project without any interruption with accuracy and efficiency. If you want to put your idea into implementation, it's time for you to connect a &lt;strong&gt;Laravel development company&lt;/strong&gt; or &lt;a href="https://www.bacancytechnology.com/hire-laravel-developer"&gt;Hire Laravel expert&lt;/a&gt; with expert-level capabilities in the domain.&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>webdev</category>
      <category>devops</category>
      <category>php</category>
    </item>
    <item>
      <title>How and when to override Android Activity's Lifecycle methods?</title>
      <author>Gourav Khunger</author>
      <pubDate>Mon, 06 Sep 2021 08:23:50 +0000</pubDate>
      <link>https://dev.to/gouravkhunger/how-and-when-to-override-android-activity-s-lifecycle-methods-28b</link>
      <guid>https://dev.to/gouravkhunger/how-and-when-to-override-android-activity-s-lifecycle-methods-28b</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Read this article on &lt;a href="https://genicsblog.com/how-and-when-to-override-android-activity-lifecycle-methods"&gt;my blog&lt;/a&gt; for a better experience :)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yesterday, I came across a &lt;a href="https://stackoverflow.com/questions/69064102/how-can-i-stop-the-progressdialog-after-returning-to-the-activity"&gt;StackOverflow question&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The OP(original poster) of the article had a scenario like this:&lt;/p&gt;

&lt;p&gt;He made a &lt;code&gt;ProgressDialog&lt;/code&gt; in an activity. After pressing a &lt;code&gt;CardView&lt;/code&gt; in that activity corresponding to a meditation session, a &lt;code&gt;ProgressDialog&lt;/code&gt; should appear for 3 seconds, and then the other activity would open - the &lt;code&gt;m1&lt;/code&gt; activity. &lt;/p&gt;

&lt;p&gt;The problem he faced was - After returning to &lt;code&gt;MeditationActivity&lt;/code&gt;, the &lt;code&gt;ProgressDialog&lt;/code&gt; continued to show up and never stopped.&lt;/p&gt;

&lt;p&gt;He wanted that the progress dialog is closed once the user comes back from the &lt;code&gt;m1&lt;/code&gt; activity to the &lt;code&gt;MeditationActivity&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Just after reading the question, it should strike to the mind that one can override the default methods present in an Activity's Lifecycle and dismiss the dialog from there!&lt;/p&gt;

&lt;p&gt;Here's how the lifecycle of an Android Activity looks like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yxje01ct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630915330208/6F9zSmseW2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yxje01ct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630915330208/6F9zSmseW2.png" alt="activity_lifecycle.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is an image from the official &lt;a href="https://developer.android.com/guide/components/activities/activity-lifecycle"&gt;android documentation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;From the flowchart, we can see that it is the &lt;code&gt;onResume()&lt;/code&gt; method that is called whenever a person comes back to the activity from another screen. So it seems to be the place where we should place the logic for dismissing the dialog!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b0zdsn9N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630915509631/Eq9kO4b_9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b0zdsn9N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630915509631/Eq9kO4b_9.png" alt="activity_lifecycle.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's how we can do that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onResume&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;onResume&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;progressDialog&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;progressDialog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;dismiss&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The null check is placed because the &lt;code&gt;progressDialog&lt;/code&gt; was initialized only when the person presses the &lt;code&gt;CardView&lt;/code&gt;. And if it is initialized earlier, then there would be redundant dismissals of the &lt;code&gt;progressDialog&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This was a perfect example where we could override the default lifecycle methods provided by an Android &lt;code&gt;Activity&lt;/code&gt; to perform actions pertaining to lifecycle.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://stackoverflow.com/a/69064294/9819031"&gt;Here's my answer&lt;/a&gt; to the original question on StackOverflow! I'll be writing more explanations to StackOverflow Questions, so consider following me on hashnode.&lt;/p&gt;

&lt;p&gt;I hope you find this article helpful :)&lt;/p&gt;

</description>
      <category>android</category>
    </item>
    <item>
      <title>Introducing Medusa: Your building blocks for amazing digital commerce experiences</title>
      <author>Sebastian Rindom</author>
      <pubDate>Mon, 06 Sep 2021 08:02:18 +0000</pubDate>
      <link>https://dev.to/medusajs/introducing-medusa-your-building-blocks-for-amazing-digital-commerce-experiences-4nhp</link>
      <guid>https://dev.to/medusajs/introducing-medusa-your-building-blocks-for-amazing-digital-commerce-experiences-4nhp</guid>
      <description>&lt;p&gt;Over the past couple of years we have developed Medusa in close collaboration with customers that needed a headless solution that could support their growth for years to come. We are so excited to finally open up about what it is we have built, why we have built it, and how you can succeed with Medusa. Medusa is an open-source headless commerce engine that can power amazing digital commerce experiences and it is a great choice for any new headless ecommerce project out there.&lt;/p&gt;

&lt;p&gt;Headless ecommere has gained plenty of interest recently and more and more businesses are looking towards making the shift to a headless solution to leverage a more modular setup and all the benefits it brings, such as: better page performance, greater flexibility, better support for unique customer experiences, support for best-in-breed tech stacks, etc. When we first started working on Medusa we had no idea what headless ecommerce meant, and initially, we set out to build a fully-fledged platform, but more on this later!&lt;/p&gt;

&lt;p&gt;This is the first blog post we are publishing and it will stand as an important milestone for our work going forward. We have found that through modularity and simplicity our merchants end up being able to do much more with much less, which is why we will keep pursuing this approach when building out our product further. We want to provide a foundational set of building blocks that can be used to create unique, interesting, and powerful digital commerce experiences and we are so excited to see what amazing work we can help create.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-we-built%C2%A0medusa"&gt;
  &lt;/a&gt;
  Why we built Medusa
&lt;/h3&gt;

&lt;p&gt;We didn’t wake up one morning thinking to ourselves that we wanted to build a headless commerce engine, but rather we got to build Medusa through experience with the limitations of existing platforms. Before transitioning to working full-time on Medusa, we operated as an agency, building all kinds of tools for our customers. We built everything from portfolio websites to custom integrations to ecommerce websites, but quickly started specializing in the latter; as we found new customers we also experienced that many of them were hitting limitations with the platforms available at the time.&lt;/p&gt;

&lt;p&gt;This became evident when a client of ours expressed interest in switching platforms. We started looking for good alternatives but it quickly became clear that none of them would support the expansion across markets and brand ownership that they required so we decided with them that we should try to build a bespoke solution that would cater to their exact needs and so we began building a fully-fledged ecommerce platform with a CMS system, fulfilment system, etc. It was not soon after that we realized that we couldn’t do everything well at once so we started removing parts of what we’d built and replacing them with integrations to better tools. In the end, we were left with a core that was capable of processing and managing orders, ensuring payments were going through, and handling basic product and customer data. What was even more important was that this core was extremely good at integrating other tools and as such able to function as the glue between all the tools and services in your ecommerce stack. Essentially we had built a headless ecommerce engine, simply by following what was easiest for us as developers and most cost-efficient and scalable for our customers.&lt;/p&gt;

&lt;p&gt;Our customers were really happy with the solution as they were able to expand to multiple markets while picking and choosing from any services they found interesting without having to worry about the cost of integration. Furthermore, our customers got a high degree of ownership when using our custom-built solution, as they could ask us to build features that they needed and have them released typically within a couple of days. When contemplating how we could ensure the same level of ownership going forward it became clear that we had to open-source the solution so that no central organization would ever be in control of what was possible for the merchant. Open-sourcing Medusa would also bring a bunch of other benefits such as leveraging the community for feedback and contributions which further strengthens the product.&lt;/p&gt;

&lt;p&gt;After experiencing the issues with the existing platforms we were confident that our product would be a good alternative for many new ecommerce projects and shortly after we decided to open-source the product we started pulling out the generic parts of the implementations we had done, gave it the name Medusa and made it available through GitHub. &lt;a href="https://github.com/medusajs/medusa"&gt;Go to Github to view the open source project&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#headless-the-next-generation-of%C2%A0commerce"&gt;
  &lt;/a&gt;
  Headless: The next generation of commerce
&lt;/h3&gt;

&lt;p&gt;In the early days of the internet operating ecommerce required big budgets and with customers still being new to the digital purchasing experience, only a small group of large enterprises set up online commerce channels by either building them from scratch or using solutions like Hybris. As more customers moved online, new platforms as Magento, Shopify, and WooCommerce emerged — these were easy to use and enabled merchants to make digital commerce available as a secondary sales channel.&lt;/p&gt;

&lt;p&gt;In recent years, ecommerce has become a primary channel for many businesses leading to fierce competition in the space, increasing the need for custom solutions to give unique buying experiences. In the quest for customization, many businesses have been left frustrated with the lack of flexibility that existing platforms provide. While optimizing for ease of use, most traditional platforms is putting their focus on templated “out-of-the-box” solutions neglecting the constraints this inevitably put on the development flexibility. In many cases, businesses have been forced to converge towards compromised solutions, or even make entire platform shifts, as their needs grow beyond what a templated solution can offer. Simultaneously, a much wider variety of businesses (e.g. service providers, B2B companies etc.) requiring fully custom solutions from the beginning have started moving online.&lt;/p&gt;

&lt;p&gt;The increasing demand for customization and flexibility has spurred an interest in headless commerce among performance-focused merchants that want differentiated and fully optimized customer experiences. Yet, many of them are still to make the move. One of the main reasons, why headless has yet to become the dominant type of ecommerce is that it can be expensive to operate a headless ecommerce stack as you need developers that can maintain the infrastructure that powers the integrations between systems in your stack and a high up-front investment for making the initial setup. This is something we are solving with Medusa by providing infrastructure that is preconfigured and optimized to run your projects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#putting-the-developer-first-in-your-commerce%C2%A0setup"&gt;
  &lt;/a&gt;
  Putting the developer first in your commerce setup
&lt;/h3&gt;

&lt;p&gt;The modularity and ownership that Medusa can offer is capable of powering incredibly diverse applications ranging from ecommerce websites to more niche cases like in-restaurant experiences and will with high probability be suitable for whatever digital commerce experience you can think of. Many businesses postpone the transition to headless as it can seem daunting and complex when you need developers to maintain your infrastructure and operations; we will make it possible to take out these concerns completely by providing the infrastructure that is configured and optimized to run Medusa projects, thereby making it much cheaper and more accessible for businesses to make the transition to headless early on.&lt;/p&gt;

&lt;p&gt;In more general terms we will be focusing on enabling the developer to do much more with less; this is in line with making sure that merchants can take ownership of their commerce setup as developers can help steer the direction and roadmap for your project without relying on us to create the features you need. By creating powerful tools for the developer we enable them to be more efficient and focused in their work. Examples of tools that we are building are; an infrastructure platform so developers don’t have to configure servers and databases, a powerful CLI that automates the redundant tasks developers face, a React component library to make it easy to build storefronts for Medusa, rich documentation that makes it easy to find what you are looking for and much more.&lt;/p&gt;

&lt;p&gt;With the core project being open-source we will also be open for contributions from the community making sure that we always have a product that is loved by developers so that they can do more!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What’s next?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;We are working hard on completing our infrastructure product so that projects can easily be deployed to the cloud. In the meantime, if you are a developer we encourage you to try out Medusa, you can get up and running within 5 minutes and get a quick overview of what features our platform will bring. &lt;a href="https://docs.medusa-commerce.com/tutorial/set-up-your-development-environment"&gt;Check out the tutorial to get started now&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you are a merchant looking for a new solution we would love to get in touch and discuss what challenges we can help solve and guide you through our process.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>opensource</category>
      <category>showdev</category>
    </item>
    <item>
      <title>🤷‍♂️ 🤷‍♀️ Vue 3 error with using TypeScript: property X does not exist on type 'EventTarget'</title>
      <author>Vic Shóstak</author>
      <pubDate>Mon, 06 Sep 2021 07:45:45 +0000</pubDate>
      <link>https://dev.to/koddr/vue-3-error-with-using-typescript-property-x-does-not-exist-on-type-eventtarget-5cpl</link>
      <guid>https://dev.to/koddr/vue-3-error-with-using-typescript-property-x-does-not-exist-on-type-eventtarget-5cpl</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Hey, DEV people! 👋 It's time to continue the &lt;strong&gt;Simple Errors&lt;/strong&gt; series with an article about the &lt;strong&gt;TypeScript&lt;/strong&gt; error I encountered when I first decided to convert my &lt;a href="https://v3.vuejs.org/guide/introduction.html"&gt;Vue.js&lt;/a&gt; &lt;code&gt;v3.x&lt;/code&gt; project from regular &lt;strong&gt;JavaScript&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;As always, don't judge too harshly, write what you think of such articles, suggest your own topics for parsing in the comments... Here we go! 🚀&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  📝 Table of contents
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#explanation-of-the-error"&gt;Explanation of the error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#input-data-when-an-error-occurs"&gt;Input data when an error occurs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#resolving-the-error"&gt;Resolving the error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusions"&gt;Conclusions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#explanation-of-the-error"&gt;
  &lt;/a&gt;
  Explanation of the error
&lt;/h2&gt;

&lt;p&gt;When I run &lt;code&gt;vue-tsc --noEmit&lt;/code&gt; to check TypeScript, I get errors:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;src/components/forms/Input.vue:4:40 - error TS2531: 
Object is possibly 'null'.

&lt;/span&gt;&lt;span class="gp"&gt;4     @input="$&lt;/span&gt;emit&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'update:modelValue'&lt;/span&gt;, &lt;span class="nv"&gt;$event&lt;/span&gt;.target.value&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"
&lt;/span&gt;&lt;span class="go"&gt;                                         ~~~~~~~~~~~~~

src/components/forms/Input.vue:4:54 - error TS2339: 
Property 'value' does not exist on type 'EventTarget'.

&lt;/span&gt;&lt;span class="gp"&gt;4     @input="$&lt;/span&gt;emit&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'update:modelValue'&lt;/span&gt;, &lt;span class="nv"&gt;$event&lt;/span&gt;.target.value&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"
&lt;/span&gt;&lt;span class="go"&gt;                                                       ~~~~~

Found 2 errors.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While I knew what was wrong with error &lt;code&gt;Object is possibly 'null'&lt;/code&gt;, I had to dig deep into the documentation to find the reason for error &lt;code&gt;Property 'value' does not exist on type 'EventTarget'&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#input-data-when-an-error-occurs"&gt;
  &lt;/a&gt;
  Input data when an error occurs
&lt;/h2&gt;

&lt;p&gt;My Vue component (&lt;code&gt;src/components/forms/Input.vue&lt;/code&gt;) looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"px-3 py-2 border-2 rounded-lg"&lt;/span&gt;
    &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;input=&lt;/span&gt;&lt;span class="s"&gt;"$emit('update:modelValue', $event.target.value)"&lt;/span&gt;
    &lt;span class="na"&gt;:type=&lt;/span&gt;&lt;span class="s"&gt;"inputType"&lt;/span&gt;
    &lt;span class="na"&gt;:tabindex=&lt;/span&gt;&lt;span class="s"&gt;"tabIndex"&lt;/span&gt;
    &lt;span class="na"&gt;:placeholder=&lt;/span&gt;&lt;span class="s"&gt;"placeholder"&lt;/span&gt;
    &lt;span class="na"&gt;:value=&lt;/span&gt;&lt;span class="s"&gt;"modelValue"&lt;/span&gt;
    &lt;span class="na"&gt;:required=&lt;/span&gt;&lt;span class="s"&gt;"isRequired"&lt;/span&gt;
  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ts"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;defineComponent&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;defineComponent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Input&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;inputType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;tabIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;placeholder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;modelValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;isRequired&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Boolean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you've already noticed, in the &lt;code&gt;@input&lt;/code&gt; attribute of the template, I refer to &lt;code&gt;$event.target.value&lt;/code&gt; as I would do in regular JavaScript. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;🤔 &lt;strong&gt;Note:&lt;/strong&gt; Even if &lt;code&gt;$event.target&lt;/code&gt; return &lt;code&gt;null&lt;/code&gt;, which has no &lt;code&gt;value&lt;/code&gt; property, this is not &lt;em&gt;a big problem&lt;/em&gt; for regular JavaScript! It will give a run-time error on the client and this web application will crash. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But that's not how TypeScript works. It checks all possible problematic places in the code at the time of building the project and points them out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;That's why we love and use it!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G_Ue6BQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z11642wyh1kar7n8vtfy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G_Ue6BQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z11642wyh1kar7n8vtfy.jpg" alt="solve the problem"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resolving-the-error"&gt;
  &lt;/a&gt;
  Resolving the error
&lt;/h2&gt;

&lt;p&gt;First, write a new method called &lt;code&gt;handleInputChange(event)&lt;/code&gt; in &lt;a href="https://v3.vuejs.org/guide/composition-api-setup.html"&gt;setup&lt;/a&gt; function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;// ...

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ts"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;defineComponent&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;defineComponent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
  &lt;span class="na"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Define event handler for input changes in TypeScript.&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleInputChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; 
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;HTMLInputElement&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;handleInputChange&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In TypeScript, we need to explicitly point to the object we want to work with. In this case, it is the &lt;code&gt;input&lt;/code&gt; field, so its object will be called &lt;code&gt;HTMLInputElement&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;☝️ &lt;strong&gt;Note:&lt;/strong&gt; The &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement"&gt;HTMLInputElement&lt;/a&gt; interface provides special properties and methods for manipulating the options, layout, and presentation of &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Next, let's add this method to the &lt;code&gt;@input&lt;/code&gt; in our template, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"px-3 py-2 border-2 rounded-lg"&lt;/span&gt;
    &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;input=&lt;/span&gt;&lt;span class="s"&gt;"$emit('update:modelValue', handleInputChange($event))"&lt;/span&gt;
    &lt;span class="na"&gt;:type=&lt;/span&gt;&lt;span class="s"&gt;"inputType"&lt;/span&gt;
    &lt;span class="na"&gt;:tabindex=&lt;/span&gt;&lt;span class="s"&gt;"tabIndex"&lt;/span&gt;
    &lt;span class="na"&gt;:placeholder=&lt;/span&gt;&lt;span class="s"&gt;"placeholder"&lt;/span&gt;
    &lt;span class="na"&gt;:value=&lt;/span&gt;&lt;span class="s"&gt;"modelValue"&lt;/span&gt;
    &lt;span class="na"&gt;:required=&lt;/span&gt;&lt;span class="s"&gt;"isRequired"&lt;/span&gt;
  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

// ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run &lt;code&gt;vue-tsc&lt;/code&gt; once again... and boom! 💥 All errors disappeared.&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h2&gt;

&lt;p&gt;I know how difficult it is to retrain to a new paradigm of interaction with the same objects and properties! But this simple error showed me just how powerful and useful &lt;a href="https://www.typescriptlang.org/"&gt;TypeScript&lt;/a&gt; is in the real world.&lt;/p&gt;

&lt;p&gt;Have a successful work and let simple errors &lt;strong&gt;never stop you&lt;/strong&gt; on the way to realizing your projects! 😉&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#photos-and-videos-by"&gt;
  &lt;/a&gt;
  Photos and videos by
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Sascha Bosshard &lt;a href="https://unsplash.com/photos/qhhp1LwvPSI"&gt;https://unsplash.com/photos/qhhp1LwvPSI&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Lucrezia Carnelos &lt;a href="https://unsplash.com/photos/yGv-pvgRuiI"&gt;https://unsplash.com/photos/yGv-pvgRuiI&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ps"&gt;
  &lt;/a&gt;
  P.S.
&lt;/h2&gt;

&lt;p&gt;If you want more articles like this on this blog, then post a comment below and subscribe to me. Thanks! 😘&lt;/p&gt;

</description>
      <category>vue</category>
      <category>typescript</category>
      <category>showdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Dev tool: A project built to boost your Skills and Productivity 💫</title>
      <author>Anthony Lagrede</author>
      <pubDate>Mon, 06 Sep 2021 07:45:11 +0000</pubDate>
      <link>https://dev.to/alagrede/dev-tool-a-project-built-to-boost-your-skills-and-productivity-29j8</link>
      <guid>https://dev.to/alagrede/dev-tool-a-project-built-to-boost-your-skills-and-productivity-29j8</guid>
      <description>&lt;p&gt;Today I'm pleased to announce the Znote 1.0 💫, a super versatile Markdown code editor! 🎉🎉&lt;/p&gt;

&lt;p&gt;Shared with the Dev.to community in 2020, 🥰 the positive  &lt;a href="https://dev.to/alagrede/dev-tool-a-markdown-editor-for-developers-1j13"&gt;feedback&lt;/a&gt; I received since then motivates me to push forward (many thanks again 🙏). I'm coming after months of HARD WORK, with a robust version dedicated to all your daily code usage.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reminder-what-is-znote"&gt;
  &lt;/a&gt;
  Reminder: What is Znote
&lt;/h2&gt;

&lt;p&gt;Znote is a Markdown editor, designed to be your best companion 🫂 for prototyping and making scripts. The missing piece for JS developers in data exploration, offering a solid alternative to &lt;strong&gt;Jupyter&lt;/strong&gt; in the Python ecosystem.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-approach"&gt;
  &lt;/a&gt;
  The approach
&lt;/h2&gt;

&lt;p&gt;Promulgate an innovative and empirical approach that consists to &lt;strong&gt;write code and documentation in the same place&lt;/strong&gt;. In this app, you can quickly play code block, exploiting results, and put around all the necessary information in Markdown.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Easier to read and share than a raw code script, you will take pleasure to organize and share your work.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1oE5pTQV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fa6hlrr49870ebclplb0.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1oE5pTQV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fa6hlrr49870ebclplb0.gif" alt="Znote demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I honestly love to use it.&lt;/em&gt; 🤗&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-new"&gt;
  &lt;/a&gt;
  What's new?
&lt;/h2&gt;

&lt;p&gt;For this new version, I come with advanced features to cover intensive and professional usages. I use Znote advantageously as a replacement for various software such as SQL client, Postman or Notepad++, but also as a main tool to create and test Node scripts.&lt;/p&gt;

&lt;p&gt;To correctly achieve this:&lt;/p&gt;

&lt;p&gt;✓ I entirely &lt;strong&gt;reviewed the backend code and the UI&lt;/strong&gt; to be more cleaner, usable and robust&lt;br&gt;
✓ Add a dynamic customizable &lt;strong&gt;code completion&lt;/strong&gt;&lt;br&gt;
✓ Also, add &lt;strong&gt;Markdown shortcuts&lt;/strong&gt; and completion&lt;br&gt;
✓ A new &lt;strong&gt;Right context menu&lt;/strong&gt; with commands to transform selected text &lt;em&gt;(will be dynamic in the future)&lt;/em&gt;&lt;br&gt;
✓ A builder to create &lt;strong&gt;shortcut functions&lt;/strong&gt; callable in code&lt;br&gt;
✓ Add the possibility to add and use external &lt;strong&gt;NPM packages&lt;/strong&gt;&lt;br&gt;
✓ Run code with an &lt;strong&gt;external Node installation&lt;/strong&gt;&lt;br&gt;
✓ &lt;strong&gt;Export code&lt;/strong&gt; as scripts and Diagram as SVG&lt;br&gt;
✓ Export the entire note as &lt;strong&gt;PDF, HTML&lt;/strong&gt;...&lt;br&gt;
✓ Add various &lt;em&gt;Magic comments&lt;/em&gt;&lt;br&gt;
✓ A new horizontal layout for the preview (useful for some code use cases like SQL)&lt;br&gt;
✓ More &lt;strong&gt;themes&lt;/strong&gt; to customize the app&lt;br&gt;
✓ A more &lt;strong&gt;performant search&lt;/strong&gt; box&lt;br&gt;
✓ An internal database to &lt;strong&gt;optimize memory&lt;/strong&gt;&lt;br&gt;
And so many things...&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ℹ &lt;em&gt;I am also including in this list some features developed in the very latest preview versions&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#and-its-really-powerful"&gt;
  &lt;/a&gt;
  And it's really powerful...
&lt;/h2&gt;

&lt;p&gt;Create easily an SQL client, Postman... &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5OrWigAs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1d3a90t569r9z7jui8w.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5OrWigAs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1d3a90t569r9z7jui8w.gif" alt="SQL functions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add your NPM packages and create shortcut functions to create your perfect dedicated tool.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cr6DEFmY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/je1f5dkwalvjw8t86c4m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cr6DEFmY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/je1f5dkwalvjw8t86c4m.png" alt="NPM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;More themes are available to enhance the experience&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hAMysySM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h34w5ox8o2g20w0nv4dw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hAMysySM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h34w5ox8o2g20w0nv4dw.png" alt="theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#and-now"&gt;
  &lt;/a&gt;
  And Now?
&lt;/h2&gt;

&lt;p&gt;I now plan to integrate &lt;strong&gt;recipes&lt;/strong&gt; to load via an open marketplace, to safely add useful functions and commands to Znote. I'm also investigating to add automatic Jobs, tabs, a valid EV certificate... &lt;/p&gt;

&lt;p&gt;Because a software is never finished 😅, I finally decided to introduce some paid features, through a perpetual license, like themes or NPM packages &lt;em&gt;(mainly to cover advanced use cases)&lt;/em&gt; to help me to push Znote even further.&lt;/p&gt;

&lt;p&gt;This will also get you a more consistent Cloud space to save and share your works between all your devices. Along the &lt;strong&gt;perpetual license&lt;/strong&gt; you will also get a year of updates.&lt;/p&gt;

&lt;p&gt;Discover all features on the &lt;a href="https://znote.io/checkout.html"&gt;Znote website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;❤️ I really enjoy sharing this app with you from the start, hope to see you soon in my &lt;a href="https://znote.io#newsletter"&gt;newsletter&lt;/a&gt; to share tips and tutorials.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>productivity</category>
      <category>datascience</category>
    </item>
    <item>
      <title>AWS open source news and updates #80</title>
      <author>Ricardo Sueiras</author>
      <pubDate>Mon, 06 Sep 2021 07:36:57 +0000</pubDate>
      <link>https://dev.to/aws/aws-open-source-news-and-updates-80-477e</link>
      <guid>https://dev.to/aws/aws-open-source-news-and-updates-80-477e</guid>
      <description>&lt;h2&gt;
  &lt;a href="#september-6th-2021-instalment-80"&gt;
  &lt;/a&gt;
  September 6th, 2021 - Instalment #80
&lt;/h2&gt;

&lt;p&gt;Newsletter #80.&lt;/p&gt;

&lt;p&gt;So what delights does #80 of this newsletter offer this week? We have plenty of new open source projects, such as aws-o11y-recipes (observability recipes), dassana-io (contextual alerts), sgCheckup (security), aws-lambda-scheduler (developer tool to simplify scheduling of AWS Lambda functions), aacli (AWS cli authentication/SSO) as well as Terraform modules and AWS open source solutions covering Hugging Face, reporting on your AWS accounts and more. If you are more interesting in blog posts covering open source topics, we have posts from the AWS and community covering OpenSearch, GraphQL, Flutter, Apache Airflow, Debezium, Apache Kafka, Kubernetes, Packer, OpenTelemetry and many more. We also have a round up of posts covering last weeks GA announcement of Grafana. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Job of the week&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ur"&gt;Principal Developer Advocate - Java Specialist&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A new opening in my team has come up, for anyone in the Cambridge/Boston area in the US. As a Principal Developer Advocate in the AWS Developer Relations organisation, you will work to earn trust with Enterprise developers and the broader Java community through your technical leadership and expertise. This is a high-impact role that's well-suited to someone with domain-specific technical experience that enjoys sharing what they have learned in order to help users solve their technical issues and overcome any challenges they face. You will have the ability to influence and educate customers at every stage of their experience with technologies such as OpenJDK, Serverless, Containers, DevOps tools and more.&lt;/p&gt;

&lt;p&gt;Check out the &lt;a href="https://aws-oss.beachgeek.co.uk/ur"&gt;job description&lt;/a&gt; for more details, and please feel free to DM or email me with any questions you might have. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#celebrating-open-source-contributors"&gt;
  &lt;/a&gt;
  Celebrating open source contributors
&lt;/h3&gt;

&lt;p&gt;The articles posted in this series are only possible thanks to contributors and project maintainers and so I would like to shout out and thank those folks who really do power open source and enable us all to build on top of what they have created. &lt;/p&gt;

&lt;p&gt;So thank you to the following open source heroes: Oğuzhan Yılmaz, Michael Walmsley, Bhuvanesh R, Derek Bingham, Ankit Anand, Gold Fig Labs, Arkady Titenko, Oren Leung, Francesco Canessa, Eddie Pick, Dhawalkumar Patel, Kapil Shardha, Aravind Singirikonda, Juan Lamadrid, Andrew Hopp, Nicholas Knize, Pavan Kumar Sunder, Jon Slominski, Roy Kincaid, Eric Robertson, Ali Spittel, Aaron Todd, Ian Botsford, Ken Gilmer, Nicki Stone, John Woo, Gopalakrishnan Subramanian, Satheesh Kumar, Alolita Sharma, Nizar Tyrewall, Imaya Kumar Jagannathan, Michael Hausenblas, Danilo Poccia, Julia Hu, Matthieu Fuzellier, Srikanth Kodali, Yuxin Yang, Sheetal Joshi, Mike Stefaniak, Jayanth Varavani, Vimal Bagmar, Waleed Sarwari, and Santosh Vallurupalli.&lt;/p&gt;

&lt;p&gt;Make sure you find and follow these builders and keep up to date with their open source projects and contributions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#latest-open-source-projects"&gt;
  &lt;/a&gt;
  Latest open source projects
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;aws-o11y-recipes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/up"&gt;aws-o11y-recipes&lt;/a&gt; this was the project I spent most time on last week, a new initiative/home to share recipes for observability (o11y) solutions at AWS. Currently this is covering six areas: &lt;strong&gt;destinations&lt;/strong&gt; (Prometheus, Grafana, OpenSearch, CloudWatch and Jaeger), &lt;strong&gt;agents&lt;/strong&gt; (AWS Distro for OpenTelemetry, Fluent Bit, CloudWatch agent and AWS X-Ray agent), &lt;strong&gt;languages&lt;/strong&gt; (Java and Javascript currently, Python, .NET, Go and Rust to come), &lt;strong&gt;infrastructure and databases&lt;/strong&gt; (Amazon RDS, DynamoDB and Managed Streaming for Apache Kafka), &lt;strong&gt;compute&lt;/strong&gt; (AWS Batch, Amazon ECS and EKS, Amazon ElasticBeanstalk and AWS Lambda) and &lt;strong&gt;compute engine&lt;/strong&gt; (AWS Fargate, Amazon EC2 and Amazon Lightsail). This repository will grow over time, so make sure to check it out, bookmark it and even better, why not contribute your own recipes. If you are using Python, .NET, Go or Rust, would be great to start adding those to the repo. To find out more and check out these recipes, head over to &lt;a href="https://aws-oss.beachgeek.co.uk/uq"&gt;AWS Observability Recipes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;dassana-io&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/vl"&gt;dassana-io&lt;/a&gt; this is a new open source project from Dassana that looks interesting. From the &lt;a href="https://aws-oss.beachgeek.co.uk/vm"&gt;docs&lt;/a&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Dassana is on a mission to solve the alert fatigue problem. Now, more than ever before, it is easy to "scan" your environment for security issues and deploy threat detection tools. But as soon as you deploy these tools, you will find that they start generating too many alerts. Although most of the alerts are accurate, they still lack the necessary context to be of great help. For example, if you get an alert that an s3 bucket has been found public in your environment, you might drop everything and start investigating it. But what if you find that there is a website associated with the bucket? What if the bucket has a word public or static in it? Wouldn't it be great if the alert already had this context to begin with? That's what Dassana does. Dassana adds context to security alerts.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I am going to try and get this project up and running this week to find out more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;sgCheckup&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/uj"&gt;sgCheckup&lt;/a&gt; another project from the folks at Gold Fig Labs, sgCheckup is a tool to scan your AWS Security Groups for a combination of open ports and attached Network Interfaces. The goal is to find anything listening on a port that you wouldn't consider safe. In addition to generating reports for security groups, sgCheckup can generate and run nmap to get specifics. Really loving the 80's demo scene logo/graphics on the README - I would love to know how you did that. More please!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WJ0DCzQo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/291215/131582460-4a581540-2f11-4c96-af54-a1e39961e69d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WJ0DCzQo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/291215/131582460-4a581540-2f11-4c96-af54-a1e39961e69d.png" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-lambda-scheduler&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/vh"&gt;aws-lambda-scheduler&lt;/a&gt; it would be nice if you could quickly configure any existing functions you have in AWS Lambda to work on a schedule. I know this has been something I have had to do. Whilst it is not a problem to do this, this handy open source project from &lt;br&gt;
Oğuzhan Yılmaz makes this painless. Deploy this function, and then to run your functions on a schedule, all you need to do is trigger this function with some configuration data. Example/docs will get you up and running in no time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aacli&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/uk"&gt;aacli&lt;/a&gt; Arkady Titenko has created this nice open source CLI tool allows you to programmatically authenticate into AWS accounts through IAM roles in a multi-account AWS Organizations setup, and requires MFA enabled for your account. This project was born from an effort to figure out a simple yet reasonably secure way of programmatic authentication into AWS environments with support for MFA authentication. Read more about this project in the notes, plenty of examples of how to use it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-perspective&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ul"&gt;aws-perspective&lt;/a&gt; I have shared details about this project before, but &lt;a href="https://twitter.com/toksvaeth/status/1431232907834765314"&gt;this tweet&lt;/a&gt; make me think that I should share it again incase anyone missed it the first time. AWS Perspective is a tool that quickly visualizes AWS Cloud workloads as architecture diagrams. You can use the solution to build, customize, and share detailed workload visualizations based on live data from AWS. The latest update to this project focuses heavily on cost related features that allow you to better understand your cloud billing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tVzQrRkr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/awslabs/aws-perspective/blob/master/docs/screenshots/cost-dialog.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tVzQrRkr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/awslabs/aws-perspective/blob/master/docs/screenshots/cost-dialog.png%3Fraw%3Dtrue" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWSTagsAsADatabase&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/um"&gt;AWSTagsAsADatabase&lt;/a&gt; Whilst I absolutely do not recommend anyone does this, this project from Oren Leung did make me smile this week. Following on from an ongoing joke of Amazon Route53 being a "database", now comes using AWS tags as a "database". Growing up in tech in the 80s and the demo scene, this kind of reminds me of the kinds of things that folks tried to do to show what was possible. Nice effort Oren.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;web-client-for-aws-transfer-family&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/v2"&gt;web-client-for-aws-transfer-family&lt;/a&gt; is an open source project that provides a web-based interface to consumers of your existing Transfer Family SFTP endpoints. You can read more details, including how to deploy this project, in the blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/v3"&gt;Announcing the open-source release of Web Client for AWS Transfer Family&lt;/a&gt; from Kapil Shardha, Aravind Singirikonda, and Juan Lamadrid.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QEakpfwJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/e1822db470e60d090affd0956d743cb0e7cdf113/2021/08/26/The-Web-Client-for-AWS-Transfer-Family-solution-deploys-multiple-AWS-resources-example-architecture-1-1024x600.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QEakpfwJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/e1822db470e60d090affd0956d743cb0e7cdf113/2021/08/26/The-Web-Client-for-AWS-Transfer-Family-solution-deploys-multiple-AWS-resources-example-architecture-1-1024x600.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;terraform-ec2-docker-swarm&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/un"&gt;terraform-ec2-docker-swarm&lt;/a&gt; this project from Francesco Canessa helps you to deploy Docker Swarm terraform infrastructure on AWS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;terraform-aws-dms&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/vk"&gt;terraform-aws-dms&lt;/a&gt; if you are looking for a way to provision your Database Migration Service via Infrastructure as Code using Terraform, then clowd.haus has you covered.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;amazon-sagemaker-huggingface-benchmark&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/uo"&gt;amazon-sagemaker-huggingface-benchmark&lt;/a&gt; this project will be of interesting if you are working on building NLP models with HuggingFace. It provides code to help you benchmark the trade-offs between cost, train time, and performance for fine-tuning HuggingFace models with distributed training on Amazon SageMaker. Detailed README to get you going.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;finetune-deploy-bert-with-amazon-sagemaker-for-hugging-face&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/uw"&gt;finetune-deploy-bert-with-amazon-sagemaker-for-hugging-face&lt;/a&gt; this project uses the Hugging Faces transformers and datasets library with Amazon SageMaker to fine-tune a pre-trained transformer on binary text classification. It uses the pre-trained DistilBERT model with the Amazon Reviews Polarity dataset. Eddie Pick and Dhawalkumar Patel have put together this blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/ux"&gt;Fine-tune and host Hugging Face BERT models on Amazon SageMaker&lt;/a&gt; to help walk you through the code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QRAkQiOo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2021/08/31/ML3931-image005.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QRAkQiOo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2021/08/31/ML3931-image005.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;greengrass-v2-sagemaker-edge-manager-python&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ut"&gt;greengrass-v2-sagemaker-edge-manager-python&lt;/a&gt; this project uses two open source projects, AWS Greengrass v2 and NEO to demonstrate how to integrate them via components. At the end of the sample, you will have a Python-based component running inference at the edge with the SageMaker Edge Manager binary agent, and a YOLOv3 Darknet model. To help you get started with this project, check out the blog post &lt;a href="https://aws-oss.beachgeek.co.uk/uu"&gt;Build machine learning at the edge applications using Amazon SageMaker Edge Manager and AWS IoT Greengrass V2&lt;/a&gt; from Pavan Kumar Sunder and Jon Slominski.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tt3BNdYE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2021/08/31/ml2780-image001.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tt3BNdYE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2021/08/31/ml2780-image001.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hot-topics"&gt;
  &lt;/a&gt;
  Hot topics
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Grafana&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Announced during re:Invent 2020 in preview, last week saw the general availability announcement for Amazon Managed Grafana, a fully managed service developed in collaboration with Grafana Labs that makes it easy to use the open-source and the enterprise versions of Grafana to visualize and analyze your data from multiple sources. &lt;/p&gt;

&lt;p&gt;We had several posts covering this, with my colleague Danilo Poccia's sharing the news in &lt;a href="https://aws-oss.beachgeek.co.uk/v6"&gt;Amazon Managed Grafana Is Now Generally Available with Many New Features&lt;/a&gt;. The GA announcement saw plenty of additional new features, and in the post, &lt;a href="https://aws-oss.beachgeek.co.uk/v7"&gt;Amazon Managed Grafana is now Generally Available&lt;/a&gt;, Imaya Kumar Jagannathan and Michael Hausenblas dive a little deeper into the launch, including the new features that have been added.&lt;/p&gt;

&lt;p&gt;Sunil Ramachandra and Roy Rodan walk you through the steps required to integrate your identity provider with Amazon Managed Grafana, in the post &lt;a href="https://aws-oss.beachgeek.co.uk/v8"&gt;Amazon Managed Grafana supports direct SAML integration with identity providers&lt;/a&gt;. They show you how you can assign users and appropriate roles through your identity provider so that your users can seamlessly authenticate into the Amazon Managed Grafana environment to visualise and monitor your workloads and log.&lt;/p&gt;

&lt;p&gt;Finally, we had Julia Hu, Matthieu Fuzellier, Srikanth Kodali, and Yuxin Yang collaborate on this post, &lt;a href="https://aws-oss.beachgeek.co.uk/v9"&gt;How to use InfluxDB and Grafana to visualize ML output with AWS IoT Greengrass&lt;/a&gt; where they show how to build an end-to-end workflow using open source tools with AWS IoT Greengrass version 2 to visualise ML inference results in near real-time on an edge device. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K8iCIJWX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/08/30/juliahu_influxdb-grafana-greengrass_f1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K8iCIJWX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/08/30/juliahu_influxdb-grafana-greengrass_f1.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-and-community-blog-posts"&gt;
  &lt;/a&gt;
  AWS and Community blog posts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Apache Airflow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Mikaela Pisani has put together this blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/va"&gt;How to run Airflow, Spark, &amp;amp; Apache Livy in AWS EKS&lt;/a&gt;, where she walks you through each of these open source components and then how you can run them on Amazon EKS to address some specific results such as scalability, traceability, isolation and speed of processing. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Debezium / Apache Kafka&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Debezium is an open source distributed platform for change data capture. Bhuvanesh R shares his experiences (and helps you avoid the issues he came across) as he walks you through how to integrate Debezium with AWS Managed Streaming for Kafka IAM authentication, in his post &lt;a href="https://aws-oss.beachgeek.co.uk/vb"&gt;Debezium With AWS MSK IAM Authentication&lt;/a&gt;. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zGSR8RmT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thedataguy.in/assets/aws/Debezium%2520With%2520AWS%2520MSK%2520IAM%2520Authentication.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zGSR8RmT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thedataguy.in/assets/aws/Debezium%2520With%2520AWS%2520MSK%2520IAM%2520Authentication.jpg" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Gopalakrishnan Subramanian and Satheesh Kumar explain how to combine HAProxy with a lightweight connection pool handler PgBouncer as a sidecar to load balance the connections to Aurora reader nodes in the blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/v5"&gt;Set up highly available PgBouncer and HAProxy with Amazon Aurora PostgreSQL readers&lt;/a&gt; [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ecWwNLJv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/887309d048beef83ad3eabf2a79a64a389ab1c9f/2021/08/09/DBBLOG-1153-image005_v2-1024x680.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ecWwNLJv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/887309d048beef83ad3eabf2a79a64a389ab1c9f/2021/08/09/DBBLOG-1153-image005_v2-1024x680.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon ECS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;John Preston is back with more blogging goodness, this time helping you to get Traefik up and running within your Amazon ECS environments in, &lt;a href="https://aws-oss.beachgeek.co.uk/vc"&gt;Traefik Proxy in AWS with AWS ECS - Part 1&lt;/a&gt;. When I asked John what Traefik was, he pointed me to the project page but did say that this project "makes network boring" - anything that makes anything boring, also makes my life easier, so make sure you check this post out. John's post are always great to read. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WK6RCk58--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://labs.compose-x.io/_images/TraefikPart1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WK6RCk58--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://labs.compose-x.io/_images/TraefikPart1.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The VPC Container Networking Interface (CNI) Plugin is the open source component that provides a networking plugin for pod networking in Kubernetes using Elastic Network Interfaces on AWS. In the post, &lt;a href="https://aws-oss.beachgeek.co.uk/vj"&gt;Amazon VPC CNI plugin increases pods per node limits&lt;/a&gt;, Sheetal Joshi, Mike Stefaniak, and Jayanth Varavani walk you through some recent enhancements that improve capacity and dive deep into the details of the implementation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o_7wYCIX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fe2ef495a1152561572949784c16bf23abb28057/2021/09/03/image-8-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o_7wYCIX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fe2ef495a1152561572949784c16bf23abb28057/2021/09/03/image-8-1.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Packer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Packer is an open-source tool developed by HashiCorp for creating identical machine images for multiple platforms from a single source configuration. In this post, &lt;a href="https://aws-oss.beachgeek.co.uk/vi"&gt;Migrating from HashiCorp Packer to EC2 Image Builder&lt;/a&gt;, Vimal Bagmar, Waleed Sarwari, and Santosh Vallurupalli walk you through how to migrate Packer template build components specifically for commonly used Packer Provisioners, such as Ansible, Chef, Shell, and Files to their corresponding EC2 Image Builder components.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PkkNGbp7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/972a67c48192728a34979d9a35164c1295401b71/2021/09/02/Picture2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PkkNGbp7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/972a67c48192728a34979d9a35164c1295401b71/2021/09/02/Picture2.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Lambda Powertools&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Michael Walmsley provides a great primer on Idempotency in hist post, &lt;a href="https://aws-oss.beachgeek.co.uk/ve"&gt;Making All Your APIs Idempotent&lt;/a&gt;. From what it is to why you should care, he also shares how you can use AWS Lambda Powertools for Python to make it easy when creating an idempotent API. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SeML2TNb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1022/1%2Auw-EGaoznpKe25eaQqKYcg.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SeML2TNb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1022/1%2Auw-EGaoznpKe25eaQqKYcg.jpeg" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flutter&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Want to know what a BLoc pattern is? I was certainly curious, and in this post, &lt;a href="https://aws-oss.beachgeek.co.uk/vf"&gt;Using the Flutter BLoC Pattern with AWS Amplify Datastore&lt;/a&gt; my good friend Derek Bingham walks you through an example of the BLoC pattern, how you can use it to improve your use of AWS Amplify Datastore API calls, to be a lot cleaner and so easier to maintain. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MSLJ_t8---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--X02BneBS--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pkrotfsyacotuof5uf2h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MSLJ_t8---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--X02BneBS--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pkrotfsyacotuof5uf2h.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GraphQL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of my favourite posts in recent weeks, Ali Spittel has put together &lt;a href="https://aws-oss.beachgeek.co.uk/uz"&gt;A Complete Beginner's Guide to GraphQL&lt;/a&gt; which will get you up and running quickly on this topic.&lt;/p&gt;

&lt;p&gt;Now that you know more about GraphQL, Eric Robertson has put together this blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/uy"&gt;Implementing caching for pipeline resolvers in AWS AppSync GraphQL APIs&lt;/a&gt; that shows how to use caching for pipeline resolvers to unlock lower latency with less requests to backend data sources, and can help reduce costs when using pipeline resolvers in AppSync to orchestrate and connect data from multiple data sources with a single GraphQL API call. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OpenTelemetry&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ankit Anand has put together this post, &lt;a href="https://aws-oss.beachgeek.co.uk/vg"&gt;Everything you need to know about OpenTelemetry Collector&lt;/a&gt; that provides a clean and simple guide to understanding more about what OpenTelemetry is, the architecture, why you should care and then how to get started. Worth 5 minutes of your time. &lt;/p&gt;

&lt;p&gt;In this weeks winner of longest blog title competition, Alolita Sharma and Nizar Tyrewall share the release highlights from version 0.12 of AWS Distro for OpenTelemetry in the post, &lt;a href="https://aws-oss.beachgeek.co.uk/v4"&gt;AWS Distro for OpenTelemetry 0.12 adds metrics support for AWS Lambda, Amazon ECS on EC2 metrics, and Amazon EKS metrics in Amazon Managed Prometheus (Preview)&lt;/a&gt;. Amazon Elastic Kubernetes Service (Amazon EKS) Infrastructure metrics and trace collection, AWS Lambda layers supporting metrics collection for Amazon Managed Service for Prometheus (AMP) and Amazon Elastic Container Service (Amazon ECS) running on Amazon Elastic Cloud Compute (Amazon EC2) container metrics are the three covered, so click on the link to find out more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OpenSearch&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;How many times have you wondered how a piece of technology or software you use works, from end to end? In this post, &lt;a href="https://aws-oss.beachgeek.co.uk/us"&gt;A query, or There and Back Again&lt;/a&gt; Andrew Hopp and Nicholas Knize tell the story of how a query works in OpenSearch by following a query through OpenSearch&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS SDKs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We had a couple of alpha release announcements this week.&lt;/p&gt;

&lt;p&gt;Start off with this post from Aaron Todd, Ian Botsford, and Ken Gilmer, in &lt;a href="https://aws-oss.beachgeek.co.uk/v0"&gt;Announcing new AWS SDK for Kotlin alpha release&lt;/a&gt; they cover how the AWS SDK for Kotlin makes it easy to call AWS services using idiomatic Kotlin APIs. You can use the native Kotlin language constructs you are used to, have mobile support without compromises, and target multiple platforms and execution environments in a single language.&lt;/p&gt;

&lt;p&gt;Following that we had Nicki Stone and John Woo with &lt;a href="https://aws-oss.beachgeek.co.uk/v1"&gt;Announcing new AWS SDK for Swift alpha release&lt;/a&gt;. This helps customers developing in Swift that have asked for a native Swift SDK so they can use the language constructs they are used to, and provides an SDK that behaves similarly to SDKs they have used in other language environments. &lt;/p&gt;

&lt;p&gt;With post of these announcements, the SDK's are still in the early stages of development. This is a great time to influence the roadmap by sharing your thoughts on the SDK design, as well as features and services that are the most important to you. Make sure you use the links in the post to provide your ideas or feedback.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MQTT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We recently announced the general availability of MQTT retained messages for AWS IoT Core. This feature allows you to store a single message per a given MQTT topic for delivery to any current and future topic subscribers. In this post, &lt;a href="https://aws-oss.beachgeek.co.uk/uv"&gt;Getting started with MQTT retained messages for AWS IoT Core&lt;/a&gt; Roy Kincaid provides an overview of this feature, share some use cases to keep in mind when designing your next IoT project, and provide a guide on how to get started. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tTpqj8Ki--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f6e1126cedebf23e1463aee73f9df08783640400/2021/09/01/getting-started-with-retained-messages-01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tTpqj8Ki--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f6e1126cedebf23e1463aee73f9df08783640400/2021/09/01/getting-started-with-retained-messages-01.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ROS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Whilst this post, &lt;a href="https://aws-oss.beachgeek.co.uk/vd"&gt;Introduction to ROS: The Robot Operating System&lt;/a&gt; is not AWS specific, AWS RoboMaker and Amazon have been working with this open source project/foundation for some time, and this tutorial/course is a great primer/introduction if you are interested in open source robotics. You will need to register (I did mine via LinkedIn) and the course covers the basics you need to get started. The course also links to various pieces of hardware that you will need.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quick-updates"&gt;
  &lt;/a&gt;
  Quick updates
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;MariaDB&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon Relational Database Service (Amazon RDS) for MariaDB now supports MariaDB minor versions 10.5.12, 10.4.21, 10.3.31, and 10.2.40. We recommend that you upgrade to the latest minor versions to fix known security vulnerabilities in prior versions of MariaDB, and to benefit from the numerous bug fixes, performance improvements, and new functionality added by the MariaDB community.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon Aurora PostgreSQL-Compatible Edition now supports PostgreSQL major version 13. PostgreSQL 13 includes improved functionality and performance from enhancements such as de-duplication of B-tree index entries, improved performance for queries that use partitioned tables, incremental sorting to accelerate data sorts, parallel processing of indexes with the VACUUM command, more ways to monitor activity within a PostgreSQL database, new security capabilities, and more. This release also adds support for bool_plperl, which simplifies writing Perl procedures.&lt;/p&gt;

&lt;p&gt;With PostgreSQL 13 on Aurora PostgreSQL-Compatible Edition you can create time series data tables with improved data ingestion rates of several hundred thousands of metrics per second for use cases such as storing DevOps metrics or tracking business metrics (e.g., daily sales).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Copilot&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Version 1.10 of AWS Copilot was released with support for publish/subscribe architectures that customers can use to decouple microservices and consume events asynchronously. Customers can now use AWS Copilot to build event-driven architectures or to decouple services in order to increase performance, reliability, and scalability.&lt;/p&gt;

&lt;p&gt;All existing AWS Copilot services and jobs can use the new publish field to broadcast events to Amazon Simple Notification Service (Amazon SNS) topics. These events can then be received via Amazon Simple Queue Service (Amazon SQS) queues with the new "Worker Service" pattern in AWS Copilot for Amazon Elastic Container Service (Amazon ECS) services running on AWS Fargate.&lt;/p&gt;

&lt;p&gt;AWS Copilot v1.10 also adds a new field taskdef_overrides in the manifest file to allow customers to add all fields supported by Amazon ECS task definitions that are not surfaced in the manifest. This enables customers to use configurations available for Amazon ECS (such as the ulimit parameter which allows customers to change default resource limit values) for their AWS Copilot jobs and services which are not supported in AWS Copilot directly. Additionally, the alias field for request and load balanced services has been augmented to accept a list of friendly domain names instead of a single entry.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#events-for-your-diary"&gt;
  &lt;/a&gt;
  Events for your diary
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Cloud DevSecOps with Bridgecrew and Terraform&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;8th September, 9am PST&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;From scanning infrastructure as code (IaC) for security misconfigurations to implementing automated DevSecOps workflows, this workshop will provide a hands-on experience to automate your cloud security. Find out more and &lt;a href="https://aws-oss.beachgeek.co.uk/ud"&gt;register via this link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud Native Day&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;23rd September, Bern Switzerland&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What is this, an in person event returning? A stellar line up including our own Michael Hausenblas, an event looking at CNCF projects and the future of IT. Find out more and to view prices/register, by clicking &lt;a href="https://cloudnativeday.ch/en/#speakers"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GraphQL API security best practices with AWS AppSync and AWS Amplify&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;14th October, 11am AEST&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As a developer, the most important parts of managing your applications should always include enhancing performance while strengthening security. In this webinar, we take you through security best practices for your GraphQL API’s with AWS AppSync and AWS Amplify, providing you with an understanding of how these can be applied to your applications. In this session, you will learn about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GraphQL Protocol and how to configure a schema&lt;/li&gt;
&lt;li&gt;Possible ways to authenticate and authorise access to GraphQL APIs&lt;/li&gt;
&lt;li&gt;How to configure network security for your API&lt;/li&gt;
&lt;li&gt;How to enable observability for your API with logging, tracing or auditing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To &lt;a href="https://aws-oss.beachgeek.co.uk/ue"&gt;register for this event, use this link&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stay-in-touch-with-open-source-at-aws"&gt;
  &lt;/a&gt;
  Stay in touch with open source at AWS
&lt;/h3&gt;

&lt;p&gt;I hope this summary has been useful. Remember to check out the &lt;a href="https://aws.amazon.com/opensource/?opensource-all.sort-by=item.additionalFields.startDate&amp;amp;opensource-all.sort-order=asc"&gt;Open Source homepage&lt;/a&gt; to keep up to date with all our activity in open source by following us on &lt;a href="https://twitter.com/AWSOpen"&gt;@AWSOpen&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>aws</category>
    </item>
    <item>
      <title>How to Display the Progress of Promises in JavaScript</title>
      <author>Jr. Dev 👨🏾‍💻</author>
      <pubDate>Mon, 06 Sep 2021 07:33:10 +0000</pubDate>
      <link>https://dev.to/jrdev_/how-to-display-the-progress-of-promises-in-javascript-lh0</link>
      <guid>https://dev.to/jrdev_/how-to-display-the-progress-of-promises-in-javascript-lh0</guid>
      <description>&lt;h3&gt;
  &lt;a href="#contents"&gt;
  &lt;/a&gt;
  Contents
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#implementation"&gt;Implementation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;h3&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h3&gt;

&lt;p&gt;Displaying the progress of multiple tasks as they are completed can be helpful to the user as it indicates how long they may need to wait for the remaining tasks to finish.&lt;/p&gt;

&lt;p&gt;We can accomplish this by incrementing a counter after each promise has resolved.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The video version of this tutorial can be found here...&lt;/em&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/I2UPGd0qsfY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Our desired output will look something like this, as the tasks are in progress.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Loading 7 out of 100 tasks
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Let's start with the markup!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;All you need is a script tag to point to a JavaScript file (which will be implemented below), and one div element, whose text will be manipulated to update the progress counter of tasks completed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"progress"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;    
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"app.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;strong&gt;Next up, the JavaScript!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We will begin by creating a function which resolves a promise after a random time has passed. &lt;/p&gt;

&lt;p&gt;We do this as it closely resembles how it will work in a real-world application, e.g. HTTP requests resolving at different times.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Secondly, we will create an array of 100 promises and update the progress text to inform the user when &lt;strong&gt;all&lt;/strong&gt; of the tasks have finished.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;loadingBar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;loadingBar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promises&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;loadingBar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Loading...`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;promises&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;loadingBar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Loading Finished`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now imagine if this takes 30 seconds to complete. All the user will see on screen is the text 'Loading...' whilst it is in progress. &lt;/p&gt;

&lt;p&gt;That is not a very useful message!&lt;/p&gt;




&lt;p&gt;Let's improve this now by updating the progress text after each task has resolved.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The code snippet below is the full implementation.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;loadingBar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;loadingBar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;loadingBarStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;loadingBar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Loading &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; of &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promises&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;loadingBarStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;

  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;promises&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;loadingBar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Loading Finished`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, you can see that as each promise is resolved, the counter is incremented and displayed to the user.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;In short, all you need to do is update the progress as each promise is resolved.&lt;/p&gt;

&lt;p&gt;I hope you found this short tutorial helpful.&lt;/p&gt;

&lt;p&gt;Let me know your thoughts in the comments below. 😊&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>AWS SQS Workbench - A Simple &amp; Non-Technical Way To Access AWS SQS</title>
      <author>Harinder Seera 🇭🇲</author>
      <pubDate>Mon, 06 Sep 2021 07:33:00 +0000</pubDate>
      <link>https://dev.to/aws-builders/aws-sqs-workbench-a-simple-non-technical-way-to-access-aws-sqs-10ec</link>
      <guid>https://dev.to/aws-builders/aws-sqs-workbench-a-simple-non-technical-way-to-access-aws-sqs-10ec</guid>
      <description>&lt;p&gt;AWS offers several methods for accessing its services. These services can be accessed via CLI, SDK, and console. If you are a technical (i.e developer), CLI and SDK are most likely your most frequently used approaches. When it comes to a newcomer, or someone who is not overly technical, using a console is preferable. However, this has its own disadvantages. To do any work, you must log in on a regular basis. Which can be annoying if all you are trying to do is access a single service such as SQS.&lt;/p&gt;

&lt;p&gt;To help with this matter, I developed a Windows-based AWS SQS workbench that allows anyone to use SQS without having to know the CLI/SDK or going to the console on a regular basis. This is a great tool for QA testers/BA/Novice who wish to test putting or viewing messages in a queue. This tool is also useful for someone who isn't extremely technical yet wants to access SQS services. Especially if you're working on a Windows computer. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It can be used by both technical and non-technical people. It was, however, created with non-technical users in mind. &lt;/p&gt;

&lt;p&gt;Rest of the post will walk you through how to use AWS SQS Workbench.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#download"&gt;
  &lt;/a&gt;
  Download
&lt;/h2&gt;

&lt;p&gt;The AWS SQS workbench executable can be found at &lt;a href="https://github.com/hseera/aws-python-utilities/blob/main/sqs%20workbench.zip"&gt;this link&lt;/a&gt;. When you start the &lt;strong&gt;sqs workbench&lt;/strong&gt; exe after unzipping, you will be presented with the Config screen.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gfp5CTma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kv3pxtjg78ptaxxlq40c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gfp5CTma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kv3pxtjg78ptaxxlq40c.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#workbench-configuration"&gt;
  &lt;/a&gt;
  Workbench Configuration
&lt;/h2&gt;

&lt;p&gt;In the workbench, you have two options for connecting to AWS services using credentials. The first step is to enter credentials on the configuration tab. Another option is to keep your credentials in the following location on your Windows PC.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/Users/[username]/.aws&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Example:&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uUrarmAy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/69jrs5337x8ym9mzrp2q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uUrarmAy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/69jrs5337x8ym9mzrp2q.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the article, we'll enter our credentials into the text box and connect. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KbOZg8CF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z8btkn71f0l9ksgcs91k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KbOZg8CF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z8btkn71f0l9ksgcs91k.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the connection has been established, select the SQS tab. This is where all of the magic takes place. The following are the various components that comprise the SQS screen. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dl3UAVGH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fa3suo8b9reqkuz9uwm3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dl3UAVGH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fa3suo8b9reqkuz9uwm3.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-region-name"&gt;
  &lt;/a&gt;
  1. Region Name
&lt;/h1&gt;

&lt;p&gt;The region name displays a list of all accessible AWS regions throughout the world. Click the &lt;strong&gt;"List Regions"&lt;/strong&gt; button to see the list.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yAA06dwc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uxdluo9nacpkiwewtktv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yAA06dwc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uxdluo9nacpkiwewtktv.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-queue-list"&gt;
  &lt;/a&gt;
  2. Queue List
&lt;/h1&gt;

&lt;p&gt;The queue list displays all available queues in that region to which you have access. If the region does not have a queue, a message will be displayed on the console. To view the queues, select the region from the region list and then click &lt;strong&gt;"List Queues"&lt;/strong&gt;. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fbIvBg4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wc7p2a8xzz4ktc6uzsyu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fbIvBg4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wc7p2a8xzz4ktc6uzsyu.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-messages-in-the-queue"&gt;
  &lt;/a&gt;
  3. Messages In The Queue
&lt;/h1&gt;

&lt;p&gt;Click on the queue name in the list to see how many messages are in the queue, not visible, or delayed. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RAgZAG1_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0l591swe28xoov2fq47m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RAgZAG1_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0l591swe28xoov2fq47m.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-send-message"&gt;
  &lt;/a&gt;
  4. Send Message
&lt;/h1&gt;

&lt;p&gt;You can send or view SQS messages in the current version of the workbench. Once you have selected the queue, you have two options for sending a message.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You can type the payload into the provided textbox section.&lt;/li&gt;
&lt;li&gt;Open a file and load the payload. Use the &lt;strong&gt;Browse&lt;/strong&gt; button to locate the file containing the payload and the &lt;strong&gt;Load&lt;/strong&gt; button to display it on the screen.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y4m6FZbz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l0kk6dg6460oxydw17nt.png" alt="alt text"&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#5-send-once-or-multiple-sends"&gt;
  &lt;/a&gt;
  5. Send Once OR Multiple Sends
&lt;/h1&gt;

&lt;p&gt;Again, you have two options for how many messages to send to the queue.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Use the &lt;strong&gt;"Send Once"&lt;/strong&gt; option if you only want to send one message to the queue.&lt;/li&gt;
&lt;li&gt;If you want to send numerous messages to the Queue, select &lt;strong&gt;"Send Multi Msgs"&lt;/strong&gt;. Enter the number of messages to send in the &lt;strong&gt;"# of Msg To Send"&lt;/strong&gt; field and the delay between each message in the &lt;strong&gt;"Delay Btw Msgs (sec)"&lt;/strong&gt; field for this option. 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O2PuK-Pf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eje89861fiio0dg0oi8j.png" alt="alt text"&gt;
When sending or receiving messages, the console screen displays the time it took. This is useful if you want to examine the performance of putting and viewing messages. &lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#6-receiveview-message"&gt;
  &lt;/a&gt;
  6. Receive/View Message
&lt;/h1&gt;

&lt;p&gt;To view a message in the queue, choose the queue name and click the &lt;strong&gt;"Receive Msg"&lt;/strong&gt; button. It will display the message's payload. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ePtMUBjX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0kk1xztyssz063sn3qam.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ePtMUBjX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0kk1xztyssz063sn3qam.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#7-console"&gt;
  &lt;/a&gt;
  7. Console
&lt;/h1&gt;

&lt;p&gt;The console screen contains all errors, responses, and logs. The Workbench's &lt;strong&gt;"Save Output"&lt;/strong&gt; option allows you to save console data for further analysis. To clear the console message, use &lt;strong&gt;"Clear Output"&lt;/strong&gt;. In the current version, the output is saved in the same folder as the executable. "output.txt" is the name of the output file.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9u5o7MV---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f07kyynzzyx629mxbrhx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9u5o7MV---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f07kyynzzyx629mxbrhx.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all there is to it when it comes to using the workbench. Hopefully, SQS workbench will come in handy to you in the aforementioned case.&lt;/p&gt;

&lt;p&gt;Keep an eye out for updates as I add new features and improvements. If you find a bug in the workbench, please post a &lt;a href="https://github.com/hseera/aws-python-utilities/issues"&gt;bug report&lt;/a&gt; so I can fix and further improve it. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you want to help with the code, please contact me. Also, if you find it useful, &lt;strong&gt;please leave a comment or a star on the github repo&lt;/strong&gt;. Alternatively, &lt;strong&gt;share it on your social channels&lt;/strong&gt; so that anyone who may require it is aware of the existence of sqs workbench.&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;If you enjoyed this article feel free to share it on social media 🙂&lt;/p&gt;

&lt;p&gt;Say Hello on: &lt;a href="https://www.linkedin.com/in/harinderseera/"&gt;Linkedin&lt;/a&gt; | &lt;a href="https://twitter.com/harinderseera"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.polywork.com/harinderseera"&gt;Polywork&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Blogging: &lt;a href="https://dev.to/harinderseera"&gt;Dev&lt;/a&gt; | &lt;a href="https://harinderseera.hashnode.dev/"&gt;Hashnode&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Github: &lt;a href="https://github.com/hseera"&gt;hseera&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>beginners</category>
      <category>serverless</category>
    </item>
    <item>
      <title>DEBUG CODE - A Developer Blogging Website</title>
      <author>Deeptiman Pattnaik</author>
      <pubDate>Mon, 06 Sep 2021 07:27:47 +0000</pubDate>
      <link>https://dev.to/deeptimancode/debug-code-a-developer-blogging-website-55</link>
      <guid>https://dev.to/deeptimancode/debug-code-a-developer-blogging-website-55</guid>
      <description>&lt;p&gt;Hello Developers,&lt;/p&gt;

&lt;p&gt;I have just launched my new dev blogging website, will publish content from Golang POCs, Kubernetes, Blockchain, System design, and many more related to cloud-native areas, will share open-source projects POCs on the website.&lt;/p&gt;

&lt;p&gt;Please visit my website 👉 &lt;a href="https://debugcode.xyz"&gt;https://debugcode.xyz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ideas and Suggestions are always welcome 🙂😀&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;

</description>
      <category>go</category>
      <category>kubernetes</category>
      <category>docker</category>
      <category>blockchain</category>
    </item>
    <item>
      <title>What is LocalStorage</title>
      <author>Abdullah Furkan Özbek</author>
      <pubDate>Mon, 06 Sep 2021 07:18:35 +0000</pubDate>
      <link>https://dev.to/afozbek/what-is-localstorage-348j</link>
      <guid>https://dev.to/afozbek/what-is-localstorage-348j</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-definition"&gt;
  &lt;/a&gt;
  1. Definition
&lt;/h2&gt;

&lt;p&gt;The localStorage read-only property of the window interface allows you to access a Storage object for the Document's origin; the stored data is saved across browser sessions.&lt;/p&gt;

&lt;p&gt;localStorage is similar to sessionStorage, except that while localStorage data has &lt;strong&gt;no expiration time&lt;/strong&gt;, sessionStorage data gets cleared when the &lt;strong&gt;page session ends&lt;/strong&gt; — that is, when the page is closed. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;localStorage data for a document loaded in a "private browsing" or "incognito" &lt;strong&gt;session is cleared&lt;/strong&gt; when the &lt;strong&gt;last "private" tab is closed&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#2-data-format"&gt;
  &lt;/a&gt;
  2. Data Format
&lt;/h2&gt;

&lt;p&gt;The keys and the values stored with localStorage are always in the &lt;strong&gt;UTF-16 DOMString&lt;/strong&gt; format, which uses two bytes per character. As with objects, integer keys are automatically converted to strings.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-example"&gt;
  &lt;/a&gt;
  3. Example
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Setting and item: key: value&lt;/span&gt;
&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;myCat&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Tom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Reading an item&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;myCat&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Remove an item&lt;/span&gt;
&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;myCat&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Clear all items&lt;/span&gt;
&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/moghaazi/embed/BajWgav?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-advaced-examples"&gt;
  &lt;/a&gt;
  4. Advaced Examples
&lt;/h2&gt;

&lt;p&gt;For setting objects or dates we need to convert to strings because localStorage only store string format&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;userList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;David&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kevin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;// Setting&lt;/span&gt;
&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;userList&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userList&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;date&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="c1"&gt;// Reading&lt;/span&gt;
&lt;span class="nx"&gt;userList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;userList&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;date&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G_ULJebd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/est18ehat29sscllrcoa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G_ULJebd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/est18ehat29sscllrcoa.png" alt="Screenshot of localstorage"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%C2%A0links"&gt;
  &lt;/a&gt;
   Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage"&gt;Mozilla Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>100daysofcode</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
