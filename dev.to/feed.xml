<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>User Authentication vs User Authorization: What Do They Mean in Back-End Web Development?</title>
      <author>Kingsley Ubah</author>
      <pubDate>Mon, 16 Aug 2021 11:18:54 +0000</pubDate>
      <link>https://dev.to/ubahthebuilder/user-authentication-vs-user-authorization-what-do-they-mean-in-back-end-web-development-18bb</link>
      <guid>https://dev.to/ubahthebuilder/user-authentication-vs-user-authorization-what-do-they-mean-in-back-end-web-development-18bb</guid>
      <description>&lt;p&gt;Data security is an integral part of the any online business out there.&lt;/p&gt;

&lt;p&gt;No one wants to do business with any company with poor track record of data protection and security.&lt;/p&gt;

&lt;p&gt;In the past decade, major data breaches have rocked some major tech companies in the world. Here are some of the most notable and devastating ones till date, according to CSO Online:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Yahoo in 2013, a whooping 3 billion accounts where affected.&lt;/li&gt;
&lt;li&gt;LinkedIn in 2021, 700 million users we affected.&lt;/li&gt;
&lt;li&gt;Alibaba in 2019, 1.1 billion accounts were affected.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To build an online services that people can trust and engage with, there has to be heavy investment in securing the backend of the website or web application.&lt;/p&gt;

&lt;p&gt;The Back-End is the part of a website which is hidden from the client user . The Back-End comprises of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The database: This is where user data is stored and managed. &lt;/li&gt;
&lt;li&gt;The application: This is the program which runs on the server and carries out the tasks needed to keep the backend working, such as validations, querying the database as well as packaging and sending back data to the client.&lt;/li&gt;
&lt;li&gt;The server: This is the computer where the entire server application is running on. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The website is also hosted on this computer. It receives request from the client.&lt;br&gt;
When building a web site,  data can be stored in the Front-End and in the Back-End. None of this strategy is good or bad in itself. &lt;/p&gt;

&lt;p&gt;There is nothing wrong with storing data on the Front-end. For example, if you are looking to create a simple static page which is going to display some static data on the web browser, then storing it on the Front-end is fine.&lt;/p&gt;

&lt;p&gt;An example of this is a simple HTML file displaying static information on the web browser:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zU-BBKrC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629111790284/66uLshJVdB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zU-BBKrC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629111790284/66uLshJVdB.png" alt="HTML.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, this is just a simple data. What if we were dealing with sensitive data?&lt;/p&gt;

&lt;p&gt;As a user, imagine if your banking information, office location, home address, family information or some other kind of personal information was stored on the front web? Anyone can easily gain access to such data, and if the person is malicious, he will use such data to exploit you.&lt;/p&gt;

&lt;p&gt;This is why user data is mostly stored on the Back-end.  The Back-end is thus the only place where data is well secured from theft and exploitation, but for there to be an access to such data, there has to be user authentication and user authorization.&lt;/p&gt;

&lt;p&gt;These two concepts play a huge role in how our Backend application operates in relation to a user.&lt;/p&gt;

&lt;p&gt;To get a conceptual idea of these terms, let's use a bank as an example.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#banking-staff-example"&gt;
  &lt;/a&gt;
  BANKING STAFF EXAMPLE
&lt;/h4&gt;

&lt;p&gt;In the banking premises, supposing a female staff wants to gain access to a restricted area within a bank (that is, its backend), She has to go through two officers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Authentication Officer&lt;/li&gt;
&lt;li&gt;The Authorization Officer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Authentication Officer is charged with the task of making sure the staff is who she says she is.&lt;/p&gt;

&lt;p&gt;This officer will verify every information the staff presents about herself to make sure they are true and valid.&lt;/p&gt;

&lt;p&gt;On the other hand, the Authorization Officer checks the status or position of the staff and decides what offices to grant her access to.&lt;/p&gt;

&lt;p&gt;If the staff is a cashier, for example, she may not have access to the top offices or sections within the bank.&lt;/p&gt;

&lt;p&gt;An Executive Officer, on the other hand, may have access to every single office within the same building.&lt;/p&gt;

&lt;p&gt;In other words, while Authentication is all about verifying the user, Authorization is about granting access and privileges to the user.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#an-illustration-of-user-authentication-and-authorization"&gt;
  &lt;/a&gt;
  AN ILLUSTRATION OF USER AUTHENTICATION AND AUTHORIZATION
&lt;/h4&gt;

&lt;p&gt;When you first navigate to a private page – Let’s consider three people: Jack and Jill and Joe and an arbitrary movie site: &lt;code&gt;mymovies.com/movies&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Jack is from the US, Jill is from the UK and Joe is from Australia. Jack prefers Horror movies , Joe likes Sci-fi and Jill prefers a bit of drama. &lt;/p&gt;

&lt;p&gt;They all navigate to mymovies.com/movies to watch some movies, but they are stopped. Why is that?&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mymovies.com/movies&lt;/code&gt; is a restricted page. The Back-End doesn’t know the three of them because they don't have an account yet. &lt;/p&gt;

&lt;p&gt;Since this is the first time all three of them are using the service, the movie platform needs to find a way to “remember them”. Hence, a sign-up form is rendered for all of them to fill out:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here’s how Jack’s form will read in the end:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Name: Jack Doe&lt;/li&gt;
&lt;li&gt;Password: IamJack&lt;/li&gt;
&lt;li&gt;Age: 23&lt;/li&gt;
&lt;li&gt;Country: US&lt;/li&gt;
&lt;li&gt;Preferred Genre: Horror&lt;/li&gt;
&lt;li&gt;Budget: $10/m&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Here’s how Jane filled her form:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Name: Jane Doe&lt;/li&gt;
&lt;li&gt;Password: IamJane&lt;/li&gt;
&lt;li&gt;Age: 45&lt;/li&gt;
&lt;li&gt;Country: the UK&lt;/li&gt;
&lt;li&gt;Preferred Genre: Drama&lt;/li&gt;
&lt;li&gt;Budget: $40/m&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;And here’s how Joe filled his:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Name: Joe Doe&lt;/li&gt;
&lt;li&gt;Password: IamJoe&lt;/li&gt;
&lt;li&gt;Age: 30&lt;/li&gt;
&lt;li&gt;Country: Australia&lt;/li&gt;
&lt;li&gt;Preferred Genre: Sci-fi&lt;/li&gt;
&lt;li&gt;Budget: $10/m&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All three of them submit their credentials and the Back-end signs them in.&lt;br&gt;
At a later time they all return to view some new movies. This is where Authentication and Authorization once again comes into play.&lt;/p&gt;

&lt;p&gt;To grant each of the three users access, the Back-End has to make sure they are who they say they are.  Hence, they are asked to supply some unique information for verification, this is usually their username and password. In other words, the back-end tries to authenticate them .&lt;/p&gt;

&lt;p&gt;When this is submitted, Netflix takes this information to it’s database to confirm if those user data have an account which corresponds to the unique identification.&lt;/p&gt;

&lt;p&gt;When all three of them are verified, they are all granted access to the same page: mymovies.com/movies.  However, all three of them are presented with three different genres of movies:&lt;/p&gt;

&lt;p&gt;Jack only receives Horror movies, Jane only receives Sci-fi and Joe only receives drama. How did this happen? This is basically what User Authorization is all about.&lt;/p&gt;

&lt;p&gt;Remember that when the three users submitted their information to the platform while signing in, they also included their preferred genre. The Back-end then made sure that each of them were only authorized to access movies based on those genres.&lt;/p&gt;

&lt;p&gt;Another scenario is that all of them chose the same genre, say Action for example. Jane and Jack receives a collection of 15 movies to choose from. &lt;/p&gt;

&lt;p&gt;However, Joe receives only 12. Turns out that only users from the US and UK where authorized to access to the remaining three. This is another example of User Authorization in work.&lt;/p&gt;

&lt;p&gt;Another scenario is that the user with a budget of $40/month and above will be authorized to access to all three genres.  In such a case, Jane will be the only Authorized user to access all three sections.&lt;/p&gt;

&lt;p&gt;This is how authorization works. Using the user information, the backend program decides who has access to what. And for those who do not qualify for a, there is some sort of blocking mechanism in place to restrict such users.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#types-of-user-authentication"&gt;
  &lt;/a&gt;
  TYPES OF USER AUTHENTICATION
&lt;/h4&gt;

&lt;p&gt;When trying to sign in to a web application, you will be asked to provide some unique identification, such as a password.&lt;/p&gt;

&lt;p&gt;This kind of authentication is called Knowledge based Authentication. This is because your authentication is based on some knowledge which you possess. In most cases, this is your username and password.  Sometimes it can be some secret and personal information like the name of your pet, your favourite colour or your mother’s name.&lt;/p&gt;

&lt;p&gt;Another type of Authentication is Possession based Authentication. This type of Authentication is based on something you possess. An example of this is text-based authentication. &lt;/p&gt;

&lt;p&gt;A secret code gets sent to your mobile phone number when trying to log in. Most banking applications tend to use this form of Authentication.&lt;/p&gt;

&lt;p&gt;To ensure maximum security, some platforms use a combination of both these types of authentication for their web application. This is known as Two-factor Authentication.&lt;/p&gt;

&lt;p&gt;Another type of Authentication is Third Party Authentication. In this case, the information is not obtained directly from the user, but from another platform with which that user is actively authenticated with.&lt;/p&gt;

&lt;p&gt;For example, when trying to sign in or sign up to some web apps, you will be offered the option of signing in with your Google or Facebook account. What happens is that the platform which you are trying to sign into sends a request to the other platform, asking for your data. They will then use that data to authenticate and sign you in.&lt;/p&gt;

&lt;p&gt;IN SUMMARY:&lt;/p&gt;

&lt;p&gt;User Authentication and User Authorization are a core principles controlling how a user accesses content on the Back end web.&lt;/p&gt;

&lt;p&gt;While Authentication is all about making sure the right user with valid credential is allowed in to use a service, Authorization is about determining what resources/sections/privileges a verified user will have access to.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  WRAPPING UP
&lt;/h4&gt;

&lt;p&gt;I hope you got something useful from this post. If you have any questions or suggestions, you can leave them in the comments below or reach me on  &lt;a href="https://twitter.com/UbahTheBuilder"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;YOU MAY ALSO LIKE &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://ubahthebuilder.tech/what-are-object-prototypes-explaining-prototype-inheritance-to-a-five-year-old"&gt;What are Object Prototypes in JavaScript?&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://ubahthebuilder.tech/what-are-object-prototypes-explaining-prototype-inheritance-to-a-five-year-old"&gt;Polymorphism in OOP Explained in Simple Terms &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://ubahthebuilder.tech/what-is-pseudocode-here-is-a-four-step-guide-to-solving-any-coding-problem-with-pseudocode"&gt;Four Steps to Solving any Coding Problems with Pseudocode&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On a regular basis I post articles like this, so make sure to follow this blog so you don't miss an update. &lt;/p&gt;

&lt;p&gt;Thank you for reading and see you soon.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;P/S: If you like articles like this follow this blog to never miss an update. If you are learning JavaScript, you’ll definitely want to check out my  &lt;a href="//gum.co/js-50"&gt;JavaScript Notes.&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Getting started with open source!</title>
      <author>DeviousLab</author>
      <pubDate>Mon, 16 Aug 2021 11:13:55 +0000</pubDate>
      <link>https://dev.to/deviouslab/getting-started-with-open-source-kdm</link>
      <guid>https://dev.to/deviouslab/getting-started-with-open-source-kdm</guid>
      <description>&lt;p&gt;So you've progressed quite a ways into your foray of the programming world and you're starting to feel confident in your coding skills.&lt;/p&gt;

&lt;p&gt;You might want to start looking to contributing to some &lt;strong&gt;open source&lt;/strong&gt; projects to develop your skills even further. But you aren't sure where to start? This article aims to provide some sources of projects where you can get your feet wet!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-good-first-issue"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://goodfirstissue.dev/"&gt;Good First Issue&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m7fQj1Pj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rclxa1vg5bg5ufy9q86x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m7fQj1Pj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rclxa1vg5bg5ufy9q86x.png" alt="Homepage for good-first issue"&gt;&lt;/a&gt;&lt;br&gt;
Good First Issue is a site that curates issues from popular open-source projects, and helps you make your first contribution to open-source with filters according to the desired programming language.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-good-first-issues"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://goodfirstissues.com/"&gt;Good First Issues&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ayqEguup--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a31vf347azyeggmnt3b7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ayqEguup--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a31vf347azyeggmnt3b7.png" alt="Homepage for Good First Issues"&gt;&lt;/a&gt;&lt;br&gt;
Like #1, Good First Issues also provides developers with filters, this website empowers them to browse and select issues and repositories based on programming languages that they are comfortable with. In addition, they can select the type of issues they want to address.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-up-for-grabs"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://up-for-grabs.net/"&gt;Up For Grabs&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZV95r59k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/35e9pb8csacrwz1runet.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZV95r59k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/35e9pb8csacrwz1runet.png" alt="Homepage for Up For Grabs"&gt;&lt;/a&gt;&lt;br&gt;
Up For Grabs is a list of projects which have curated tasks specifically for new contributors. These are a great way to get started with a project, or to help share the load of working on open source projects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-codetriage"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://www.codetriage.com/"&gt;CodeTriage&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eMcnxI4z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fvsu8xduregtperp8rcb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eMcnxI4z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fvsu8xduregtperp8rcb.png" alt="Homepage for CodeTriage"&gt;&lt;/a&gt;&lt;br&gt;
CodeTriage helps by picking a handful of open issues and delivering them directly to your inbox. After you sign up for CodeTriage, you pick the repos you want to help with, and they periodically send you issues. There is also a section with docs and tips for making your contribution journey successful.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-awesome-open-source"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://awesomeopensource.com/"&gt;Awesome Open Source&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hkf6-1v9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3txvplstizy0k1oamox3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hkf6-1v9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3txvplstizy0k1oamox3.png" alt="Homepage for Awesome Open Source"&gt;&lt;/a&gt;&lt;br&gt;
Awesome Open Source is a massive directory of over 370,000 GitHub projects filtered into 59 categories of development that is further filtered into 7000 more topics according to programming technologies or technologies used. This source isn't as beginner friendly as the rest.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-github"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://github.com/showcases/great-for-new-contributors"&gt;GitHub&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xs93N00a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jnrsnvtkobs0gs2ncnxc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xs93N00a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jnrsnvtkobs0gs2ncnxc.png" alt="New contributors showcase page for GitHub"&gt;&lt;/a&gt;&lt;br&gt;
And finally GitHub themselves, GitHub has also setup a showcase of projects have a history and reputation for being welcoming to new open source contributors. But personally I prefer another method.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4seimTy0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iu76rih3nju9a5hgo5jz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4seimTy0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iu76rih3nju9a5hgo5jz.png" alt="Advanced filter for issue search on Github"&gt;&lt;/a&gt;&lt;br&gt;
I like to use the Search function of GitHub and type: &lt;br&gt;
&lt;code&gt;label:"good first issue" state:open&lt;/code&gt; &lt;br&gt;
into the search bar. Which will list a huge list of issues tagged with the 'good first issue' label. Here is a &lt;a href="https://github.com/search?q=label%3A%22good+first+issue%22+state%3Aopen&amp;amp;type=Issues"&gt;preformatted link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I hope you any aspiring programmers will find this resource useful. Feel free to list any more useful resources that you've found, in the comments!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Huge thanks to the folks over at &lt;a href="https://twitter.com/fastprogrammer"&gt;fast tracked programmer&lt;/a&gt; for introducing me to open source!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>opensource</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>GitLive 14.0: Codeshare without calling, view teammate's pushed changes, and more</title>
      <author>Sunny</author>
      <pubDate>Mon, 16 Aug 2021 11:07:37 +0000</pubDate>
      <link>https://dev.to/gitlive/gitlive-14-0-codeshare-without-calling-view-teammate-s-pushed-changes-and-more-18d6</link>
      <guid>https://dev.to/gitlive/gitlive-14-0-codeshare-without-calling-view-teammate-s-pushed-changes-and-more-18d6</guid>
      <description>&lt;p&gt;GitLive 14.0 has arrived! This update consists mostly of features requested by our users, your feedback is invaluable so please keep sending it. Here are the new features and noteworthy improvements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#codeshare-without-calling"&gt;Codeshare without calling&lt;/a&gt; - You can now start sharing code with a teammate without getting on a call first.&lt;/li&gt;
&lt;li&gt;
&lt;a href="#view-a-teammates-pushed-changes"&gt;View a teammate's pushed changes&lt;/a&gt; - You can now choose to see the changes your teammates have pushed in addition to their local changes in the GitLive window.&lt;/li&gt;
&lt;li&gt;
&lt;a href="#os-level-calling-notifications"&gt;OS-level calling notifications&lt;/a&gt; - Never miss a call again with push notifications when you receive a call from a teammate.&lt;/li&gt;
&lt;li&gt;
&lt;a href="#choose-where-to-branch-from-when-starting-a-new-issue"&gt;Choose where to branch from when starting a new issue&lt;/a&gt; - You can see which branch is already connected to an issue or choose which branch to use as a starting point for a new issue when selecting an issue to work on.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Install the latest GitLive &lt;a href="https://marketplace.visualstudio.com/items?itemName=TeamHub.teamhub"&gt;VS Code extension&lt;/a&gt; or &lt;a href="https://plugins.jetbrains.com/plugin/11955-gitlive"&gt;JetBrains plugin&lt;/a&gt; to get started.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#codeshare-without-calling"&gt;
  &lt;/a&gt;
  Codeshare without calling
&lt;/h2&gt;

&lt;p&gt;In those cases you are already on a call or in a meeting with your teammate via Zoom, Slack, Teams, etc. you can now start a codeshare session without having to place a call. &lt;/p&gt;

&lt;p&gt;You can find the direct codeshare button next to the call icon in the GitLive window.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
  &lt;th&gt; VS Code&lt;/th&gt;
  &lt;th&gt; JetBrains&lt;/th&gt;
    &lt;tr&gt;
    &lt;td&gt;
              &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4FQHKXqD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.git.live/assets/images/posts/2021/codeshare%2520vscode.png" alt="Codeshare Option"&gt;
            &lt;/td&gt;
    &lt;td&gt;
              &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xcO9QMx0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.git.live/assets/images/posts/2021/codeshare%2520ij.png" alt="Codeshare Option"&gt;
            &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;You can also choose to codeshare through the command palette (VS Code) or through the "Search Everywhere" list (JetBrains).&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
  &lt;th&gt; VS Code&lt;/th&gt;
  &lt;th&gt; JetBrains&lt;/th&gt;
    &lt;tr&gt;
    &lt;td&gt;
              &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OM1aa6u1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.git.live/assets/images/posts/2021/codeshare%2520command%2520pallette%2520vscode%25202.png" alt="Codeshare Option"&gt;
            &lt;/td&gt;
    &lt;td&gt;
              &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FgnKN34B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.git.live/assets/images/posts/2021/codeshare%2520command%2520pallette%2520ij%25202.png" alt="Codeshare Option"&gt;
            &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Note the option will be disabled for teammates that have not yet updated to the latest version of GitLive. After you select "share" your teammate will receive a notification in their editor, asking them to accept or decline the invitation to codeshare. &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
  &lt;th&gt; VS Code&lt;/th&gt;
  &lt;th&gt; JetBrains&lt;/th&gt;
    &lt;tr&gt;
    &lt;td&gt;
              &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aLq5Eqj9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.git.live/assets/images/posts/2021/accept%2520codeshare%2520vscode%25202.png" alt="Accept Codeshare"&gt;
            &lt;/td&gt;
    &lt;td&gt;
              &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TBkI-KAY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.git.live/assets/images/posts/2021/accept%2520codeshare%2520ij%25202.png" alt="Accept Codeshare"&gt;
            &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Once accepted the session will begin! Learn more about &lt;a href="https://blog.git.live/real-time-editing"&gt;real-time editing in GitLive&lt;/a&gt;.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#view-a-teammates-pushed-changes"&gt;
  &lt;/a&gt;
  View a teammate’s pushed changes
&lt;/h2&gt;

&lt;p&gt;We've always shown your teammate's unpushed changes in the GitLive window, which you won't find anywhere else, such as GitHub. But it can also be useful to see all changes on a teammate's branch compared to the default branch, like you do on a pull request on GitHub for example.&lt;/p&gt;

&lt;p&gt;So now, by default, we show both pushed and unpushed changes in the tree. If a file contains unpushed changes it will show as modified (white dot beside the name in VS Code, asterisk on the icon in JetBrains). &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
  &lt;th&gt; VS Code&lt;/th&gt;
  &lt;th&gt; JetBrains&lt;/th&gt;
    &lt;tr&gt;
    &lt;td&gt;
              &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jk5RL98F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.git.live/assets/images/posts/2021/team%2520tree%2520pushed-unpushed%2520vscode.png" alt="All Changes"&gt;
            &lt;/td&gt;
    &lt;td&gt;
              &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eFSw1T44--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.git.live/assets/images/posts/2021/team%2520tree%2520pushed-unpushed%2520ij.png" alt="All Changes"&gt;
            &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;To see only unpushed changes in the tree like before (or even to see only pushed changes), you can change the view filters, which appear as a filter icon in VS Code, and as an eye icon in JetBrains.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
  &lt;th&gt; VS Code&lt;/th&gt;
  &lt;th&gt; JetBrains&lt;/th&gt;
    &lt;tr&gt;
    &lt;td&gt;
              &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yf9_A1pW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.git.live/assets/images/posts/2021/pushed%2520changes%2520option%2520vscode.png" alt="Pushed Changes Option"&gt;
            &lt;/td&gt;
    &lt;td&gt;
              &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9drywGZb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.git.live/assets/images/posts/2021/pushed%2520changes%2520option%2520ij.png" alt="Pushed Changes Option"&gt;
            &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;When viewing a diff of a file it will also only show pushed or unpushed changes depending on the view filters you selected. You can also change the view filter for diffs independently of the tree, using the view filter on the right-hand side.   &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
  &lt;th&gt; VS Code&lt;/th&gt;
  &lt;th&gt; JetBrains&lt;/th&gt;
    &lt;tr&gt;
    &lt;td&gt;
              &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nn11pnMR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.git.live/assets/images/posts/2021/unpushed%2520changes%2520diff%2520view%2520vscode.png" alt="All Changes"&gt;
            &lt;/td&gt;
    &lt;td&gt;
              &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HpgdBoVD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.git.live/assets/images/posts/2021/unpushed%2520changes%2520diff%2520view%2520ij%25202.png" alt="All Changes"&gt;
            &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#oslevel-calling-notifications"&gt;
  &lt;/a&gt;
  OS-level calling notifications
&lt;/h2&gt;

&lt;p&gt;As the calling notifications in the IDE can be quite hard to notice, you can now enable OS-level notifications via your browser. Next time you answer a call, your browser should prompt you to enable push notifications for GitLive. Once enabled you will receive notifications for incoming calls inside your IDE (if open) and also at the OS-level. Clicking on the OS-level notifications will answer the call directly.  &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
  &lt;th&gt; Mac&lt;/th&gt;
  &lt;th&gt; Linux&lt;/th&gt;
    &lt;tr&gt;
    &lt;td&gt;
              &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ba5RK5uO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628678791270/7HdDh4vjd.png" alt="Foreground Notification Mac"&gt;
            &lt;/td&gt;
    &lt;td&gt;
              &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dbm-E4JJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628678803913/F7nsG435E.png" alt="Foreground Notification Linux"&gt;
            &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Learn more about &lt;a href="https://blog.git.live/gitlive-12.0-voice-and-video-calling-with-screen-code-share"&gt;calling in GitLive&lt;/a&gt;.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#choose-where-to-branch-from-when-starting-a-new-issue"&gt;
  &lt;/a&gt;
  Choose where to branch from when starting a new issue
&lt;/h2&gt;

&lt;p&gt;Before, when selecting an issue to work on in GitLive, a feature branch named after that issue automatically gets created (if it does not already exist) and checked out from the default branch.&lt;/p&gt;

&lt;p&gt;We have updated this functionality so you can now choose which branch to use as a starting point for a new issue when selecting an issue.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
  &lt;th&gt; VS Code&lt;/th&gt;
  &lt;th&gt; JetBrains&lt;/th&gt;
    &lt;tr&gt;
    &lt;td&gt;
              &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_ejspSXv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628678440852/SAjaEANMb.png" alt="Branch from default or current branch"&gt;
            &lt;/td&gt;
    &lt;td&gt;
              &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7jHYvWux--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628678436416/ZjT_3ejUk.png"&gt;
            &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;And for existing issues that are already associated with a branch you will now see the name of the connected branch in the issue selector.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;strong&gt;VS Code&lt;/strong&gt;
      &lt;/tr&gt;
      &lt;br&gt;
      &lt;tr&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kcllz1ek--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.git.live/assets/images/posts/2021/branch%2520names%2520vscode.png" alt="Branch names"&gt;
      &lt;/tr&gt;
      &lt;br&gt;
      &lt;tr&gt;
        &lt;strong&gt;JetBrains&lt;/strong&gt;
      &lt;/tr&gt;
      &lt;br&gt;
      &lt;tr&gt;
       &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bvzu1D0u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.git.live/assets/images/posts/2021/branch%2520names%2520ij.png" alt="Branch Names"&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Learn more about &lt;a href="https://blog.git.live/gitlive-9.0-Issue-Tracker-Integration-including-Jira"&gt;issue tracking in GitLive&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;That's it for now, we would love to know what you think of these updates and how we can make GitLive better for you, so please reach out via the comments section below.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>productivity</category>
      <category>vscode</category>
      <category>programming</category>
    </item>
    <item>
      <title>Create React App without create-react-app (Typescript)</title>
      <author>Riddhi Agrawal</author>
      <pubDate>Mon, 16 Aug 2021 10:55:14 +0000</pubDate>
      <link>https://dev.to/riddhiagrawal001/create-react-app-without-create-react-app-typescript-5ea2</link>
      <guid>https://dev.to/riddhiagrawal001/create-react-app-without-create-react-app-typescript-5ea2</guid>
      <description>&lt;p&gt;In my &lt;a href="https://dev.to/riddhiagrawal001/create-react-app-without-create-react-app-2lgd"&gt;previous post&lt;/a&gt; on Create react App from scratch using JS , I got positive responses and many comments on making a post on typescript, hence i decided to do the same task using Typescript with Fast Refresh. Hope you would like this as well! :)&lt;/p&gt;

&lt;p&gt;The simplest way to create a basic react app is to run npx create-react-app my-app --template typescript and boom your basic react app will be created but have you ever wondered, can I do that whole process on my own? Well yes, you can. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pre-requisites&lt;/strong&gt;: Node js and Vs code. That’s all you need.&lt;/p&gt;

&lt;p&gt;Let’s go..!!&lt;br&gt;
&lt;a href="https://i.giphy.com/media/S5yqNNTQlEZfqQ7InC/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/S5yqNNTQlEZfqQ7InC/giphy.gif" alt="Yeayyy..!!"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#1-open-your-vs-code-terminal-and-run-the-below-commands"&gt;
  &lt;/a&gt;
  1. Open your vs code terminal and run the below commands:
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;By running this command package.json will be formed, which holds important information required before publishing to NPM and defines attributes of a project that is used by npm to install dependencies, run scripts, and identify the entry point of the project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;react&lt;/span&gt; &lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;dom&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;React will be needed to create user interfaces whereas React-Dom is a glue between React and browser DOM.&lt;/p&gt;

&lt;p&gt;After running this command, node_modules and package.lock.json will be created. Node modules hold all the dependencies downloaded from npm. Package.lock.json keeps track of the exact version of every package installed and the dependency tree of every package.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;dev&lt;/span&gt; &lt;span class="nx"&gt;typescript&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;types&lt;/span&gt;&lt;span class="sr"&gt;/react @types/&lt;/span&gt;&lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;dom&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get the support of typescript the above command is used along with types.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;dev&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;babel&lt;/span&gt;&lt;span class="sr"&gt;/core @babel/&lt;/span&gt;&lt;span class="nx"&gt;preset&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;babel&lt;/span&gt;&lt;span class="sr"&gt;/preset-react @babel/&lt;/span&gt;&lt;span class="nx"&gt;preset&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;typescript&lt;/span&gt; &lt;span class="nx"&gt;babel&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;loader&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Babel is a JS Compiler that converts modern JS code into vanilla Js code that can be supported in older browsers and environments. Babel-loader transpile JS files using Babel and webpack. Babel’s preset-typescript is used to generate your JS files and you get the ability to work with existing build pipelines.&lt;/p&gt;

&lt;p&gt;For further reading visit &lt;a href="https://babeljs.io/docs/en/"&gt;https://babeljs.io/docs/en/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2create-a-file-babelrc-and-copy-the-code-below"&gt;
  &lt;/a&gt;
  2.Create a file .babelrc and copy the code below
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;presets&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@babel/preset-env&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@babel/preset-react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;runtime&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;automatic&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@babel/preset-typescript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This file is a configuration file for babel whereas presets act as a shareable set of Babel plugins and/or config options.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3create-a-file-tsconfigjson-and-copy-the-code-below"&gt;
  &lt;/a&gt;
  3.Create a file tsconfig.json and copy the code below
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;compilerOptions&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;target&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ES5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;module&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ESNext&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;moduleResolution&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;node&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;lib&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DOM&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ESNext&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jsx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-jsx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;noEmit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;isolatedModules&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;esModuleInterop&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;strict&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;skipLibCheck&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;forceConsistentCasingInFileNames&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;resolveJsonModule&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;include&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src/**/*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This file is a configuration file for typescript. The presence of a tsconfig.json file in a directory indicates that the directory is the root of a TypeScript project. The tsconfig.json file specifies the root files and the compiler options required to compile the project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;dev&lt;/span&gt; &lt;span class="nx"&gt;webpack&lt;/span&gt; &lt;span class="nx"&gt;webpack&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;cli&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;pmmmwh&lt;/span&gt;&lt;span class="sr"&gt;/react-refresh-webpack-plugin react-refres&lt;/span&gt;&lt;span class="err"&gt;h
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Webpack is a tool that lets you compile JavaScript modules, also known as module bundlers.Given a large number of files, it generates a single file (or a few files) that run your app. Webpack-CLI provides the interface of options webpack uses in its configuration file.React-refresh-webpack-plugin and React-refresh helps in fast Refresh with state retention property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;dev&lt;/span&gt; &lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;webpack&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;plugin&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;loader&lt;/span&gt; &lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;loader&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;loader&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All these are loaders that help in bundling various files along with webpack.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4create-a-file-webpackconfigjs-and-copy-the-code-below"&gt;
  &lt;/a&gt;
  4.Create a file webpack.config.js and copy the code below
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;HtmlWebpackPlugin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;html-webpack-plugin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ReactRefreshWebpackPlugin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@pmmmwh/react-refresh-webpack-plugin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;webpack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webpack&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isDevelopment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NODE_ENV&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;production&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;isDevelopment&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;development&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;production&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/index.tsx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;devServer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;hot&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;web&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bundle.[hash].js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dist&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;HtmlWebpackPlugin&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/index.html&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}),&lt;/span&gt;
    &lt;span class="nx"&gt;isDevelopment&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;webpack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HotModuleReplacementPlugin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
    &lt;span class="nx"&gt;isDevelopment&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ReactRefreshWebpackPlugin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;node_modules&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.jsx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.tsx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;ts$|tsx/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;exclude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/node_modules/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;babel-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="nx"&gt;isDevelopment&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-refresh/babel&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Boolean&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;css$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;style-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;css-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;png|svg|jpg|gif$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;file-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This config file provides all the required information like an entry point,bundle output filename and path , plugins and various loaders that are being used for webpack to bundle and resolve various kinds of files.&lt;br&gt;
For further reading visit: &lt;a href="https://webpack.js.org/concepts/"&gt;https://webpack.js.org/concepts/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5create-a-folder-src-and-inside-that-create-a-file-apptsx"&gt;
  &lt;/a&gt;
  5.Create a folder “src” and inside that create a file “App.tsx”
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt;  &lt;span class="nx"&gt;Counter&lt;/span&gt;  &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./Counter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Create&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="nx"&gt;Scratch&lt;/span&gt; &lt;span class="nx"&gt;Using&lt;/span&gt; &lt;span class="nx"&gt;Typescript&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="o"&gt;!!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Counter&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a basic arrow function that returns  Create React App from Scratch Using Typescript wrapped inside an h1 tag along with Counter Component.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6create-another-file-countertsx-inside-src-folder"&gt;
  &lt;/a&gt;
  6.Create another file "Counter.tsx " inside “src” folder.
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Update&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;edit&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tsx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;preserved&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Count&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This component returns a basic button with Counter increasing on every click. This components uses react hook "useState" to store the current value of counter.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7create-a-file-indextsx-which-will-be-the-entry-point-of-our-code"&gt;
  &lt;/a&gt;
  7.Create a file “index.tsx” which will be the entry point of our code.
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt;  &lt;span class="nx"&gt;App&lt;/span&gt;  &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;App&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;,&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#root&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#8create-another-file-indexhtml"&gt;
  &lt;/a&gt;
  8.Create another file “index.html”
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;React with Typescript &lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"root"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In our configuration, we specified that it should read ./src/index.HTML as a template. We have also set the inject option to true. With that option, Html-webpack-plugin adds a script tag with the path provided by Webpack right into the final HTML page. This final page is the one you get in dist/index.html after running npm run build, and the one that gets served from / when you run npm start.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9in-your-packagejson-write-the-following-lines-of-code-in-place-of-the-script-tag"&gt;
  &lt;/a&gt;
  9.In your package.json write the following lines of code in place of the script tag
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scripts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webpack serve  --hot --open&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;build&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webpack --config webpack.config.js --mode development&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can start your react app by writing npm start and you will see a blank page with Hello React written on it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FTkXyTJo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ie38jxccp8n3sjs7rlpu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FTkXyTJo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ie38jxccp8n3sjs7rlpu.png" alt="Final Output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finally-you-are-done-"&gt;
  &lt;/a&gt;
  Finally you are done ..!!
&lt;/h2&gt;

&lt;p&gt;As Fast Refresh was included, even after doing some changes the state would be preserved and the previous state would not be lost. This comes in very handy during development.&lt;/p&gt;

&lt;p&gt;It was a longer process than creating React app from scratch with Js as Fast Refresh was included  and that’s what create-react-app makes it easier for you. It automates this whole hefty process of making every single file by replacing it with just a single command .&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>react</category>
    </item>
    <item>
      <title>Some cool JavaScript Shorthand that will make your code cleaner than your peer's</title>
      <author>Shubhra Agarwal</author>
      <pubDate>Mon, 16 Aug 2021 10:35:30 +0000</pubDate>
      <link>https://dev.to/shubhracodes/some-cool-javascript-shorthand-that-will-make-your-code-cleaner-than-your-peer-s-5fh8</link>
      <guid>https://dev.to/shubhracodes/some-cool-javascript-shorthand-that-will-make-your-code-cleaner-than-your-peer-s-5fh8</guid>
      <description>&lt;p&gt;Here are 7 JavaScript shorthands that you as a JavaScript developer should know because who doesn't like shorter and cleaner code ¯_(ツ)_/¯&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#convert-string-to-number"&gt;
  &lt;/a&gt;
  Convert string to number
&lt;/h2&gt;

&lt;p&gt;Normally we use the &lt;code&gt;parseInt()&lt;/code&gt; to do this. But, you can do this using the unary operator &lt;code&gt;+&lt;/code&gt;. Sick right?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pC3M8cas--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8xhn4bsi89k0cvqfwbn1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pC3M8cas--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8xhn4bsi89k0cvqfwbn1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also do this by just adding the unary operator to an empty string&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OId0vNe7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jr3b6pui1dzzz6ct4ixp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OId0vNe7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jr3b6pui1dzzz6ct4ixp.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-ternary-operator"&gt;
  &lt;/a&gt;
  The ternary operator
&lt;/h2&gt;

&lt;p&gt;I'm pretty sure all of you must be aware about this but what's the harm in sharing it again.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vaJLWilY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebwt1x5mfqtm0mfe9izp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vaJLWilY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebwt1x5mfqtm0mfe9izp.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-short-circuit"&gt;
  &lt;/a&gt;
  The short circuit
&lt;/h2&gt;

&lt;p&gt;Ever wanted to check for a condition and output something only if the condition was true? Were you also using &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; like me? Well, not anymore, I present to you the short circuit.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5DmvtLDB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iz2cwm82jmng6uospgp7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5DmvtLDB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iz2cwm82jmng6uospgp7.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z5rNM0M---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdezbqwpmyvhr6tyqrrs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z5rNM0M---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdezbqwpmyvhr6tyqrrs.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flattening-an-array"&gt;
  &lt;/a&gt;
  Flattening an array
&lt;/h2&gt;

&lt;p&gt;A lot of people use various methods to flatten an array like filter(), concat etc. But using the flat() method can get the job done quicker and better.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zUggbvXC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t50dcuxvaiqj0v95wr5x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zUggbvXC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t50dcuxvaiqj0v95wr5x.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#merging-arrays"&gt;
  &lt;/a&gt;
  Merging arrays
&lt;/h2&gt;

&lt;p&gt;Merging of arrays is one of the tasks that we need to do in our day to day coding. Be it the data from an API or whatever. Using the spread operator can get this job done in no time.&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XhjXKmnF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fweqma08sp5imreecehi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XhjXKmnF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fweqma08sp5imreecehi.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cloning-arrays"&gt;
  &lt;/a&gt;
  Cloning Arrays
&lt;/h2&gt;

&lt;p&gt;Just like merging, spread operator comes in handy even when you want to clone an array&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F1wjEnRu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh7g0gcd832a15gm79nm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F1wjEnRu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh7g0gcd832a15gm79nm.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-shorthand-of-raw-for-endraw-loops"&gt;
  &lt;/a&gt;
  The shorthand of &lt;code&gt;for&lt;/code&gt; loops
&lt;/h2&gt;

&lt;p&gt;We all have been writing for loops the C++ way up until now, but now it's time to do it the modern way. &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x1xNXbUf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m3x3pq8a9oijqes52r44.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x1xNXbUf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m3x3pq8a9oijqes52r44.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Convert string to number&lt;/li&gt;
&lt;li&gt;Ternary Operator&lt;/li&gt;
&lt;li&gt;Short Circuit&lt;/li&gt;
&lt;li&gt;Flattening an array&lt;/li&gt;
&lt;li&gt;Merging arrays&lt;/li&gt;
&lt;li&gt;Cloning Arrays&lt;/li&gt;
&lt;li&gt;The shorthand &lt;code&gt;for&lt;/code&gt; loop&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>shorthands</category>
      <category>javascript</category>
    </item>
    <item>
      <title>My Internship </title>
      <author>Cali-Bae</author>
      <pubDate>Mon, 16 Aug 2021 10:32:33 +0000</pubDate>
      <link>https://dev.to/calibae/my-internship-17b</link>
      <guid>https://dev.to/calibae/my-internship-17b</guid>
      <description>&lt;p&gt;Hi, my name is Amarachi Nwachukwu. I just got out of school and I got a smart internship on front end development from Zuri training. I am so excited about this internship especially now I am out of school. I hope to acquire a lot of knowledge from it, meet new people, expand my knowledge of HTML, CSS, JavaScript and all round development. I also hope to be gain knowledge about design, user interface and expectations. &lt;br&gt;
I have also watched some tutorial online in preparation of this internship, I know it is a great opportunity for me and I really thank The Zuri Team for making it possible.&lt;br&gt;
&lt;a href="https://internship.zuri.team"&gt;https://internship.zuri.team&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/dI_CUlVKrFw"&gt;https://youtu.be/dI_CUlVKrFw&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/1MbQaYCCzzI"&gt;https://youtu.be/1MbQaYCCzzI&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/W6NZfCO5SIk"&gt;https://youtu.be/W6NZfCO5SIk&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Step By Step Guide To Push Your First Project On GitHub</title>
      <author>Code Hunter </author>
      <pubDate>Mon, 16 Aug 2021 10:30:20 +0000</pubDate>
      <link>https://dev.to/codehunterbd/step-by-step-guide-to-push-your-first-project-on-github-3aag</link>
      <guid>https://dev.to/codehunterbd/step-by-step-guide-to-push-your-first-project-on-github-3aag</guid>
      <description>&lt;p&gt;Depending on your situation, or what you are trying to do, there are probably a dozen ways to push your source code for for the first time to GitHub. But I’m these six git commands are the only ones I use.&lt;br&gt;
My situation is a little simpler. I use GitHub just for my personal work. I don’t really collaborate with anyone. I don’t use branches. I work on the master directly. I use Windows. If this is your situation as well, then this post might help you.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#set-up-your-environment"&gt;
  &lt;/a&gt;
  Set Up Your Environment
&lt;/h2&gt;

&lt;p&gt;I assume that you have already set up your environment to use the git commands. If not, make sure you do the following first:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://git-scm.com/"&gt;Git SCM&lt;/a&gt; on your computer to enable you to use git on the command line.&lt;/li&gt;
&lt;li&gt;Register at GitHub. Then, create an empty repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#the-six-commands"&gt;
  &lt;/a&gt;
  The Six Commands
&lt;/h2&gt;

&lt;p&gt;I run these six commands in this order:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add -A
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git commit -m “your message”
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git remote add origin https://github.com/username/reponame.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git pull –rebase
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push -f origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#git-init"&gt;
  &lt;/a&gt;
  git init
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Initializes and prepares your directory for git. Suffice it to say that you need to open a command prompt or PowerShell » CD to your source code directory » type git init and Enter. You can execute git status at any point in time to see where you’re at in the process.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#git-add-a"&gt;
  &lt;/a&gt;
  git add -A
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Prepares all changes on staging. The -A means all changes are staged including edits, additions, and deletes. I do this because I don’t have to think!&lt;/p&gt;

&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#git-commit-m"&gt;
  &lt;/a&gt;
  git commit -m
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Commits all the changes. After commit, you are ready to push to GitHub.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#git-remote-add-origin"&gt;
  &lt;/a&gt;
  git remote add origin
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Associates your directory with a remote git server and repo. The URL of your repo is that URL that you see when you click the Clone or download button. You can execute git remote -v to verify that your directory has been associated with your remote repo.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#git-pull-rebase"&gt;
  &lt;/a&gt;
  git pull –rebase
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;This step is somewhat controversial. I only use this because I am pushing directly to a master, so I need to pull from the remote first before pushing. In fact, if I don’t use this, it won’t let me push! According to Atlassian, it’s like saying, “I want to put my changes on top of what everybody else has done.” So, this is perfectly fine for my situation.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#git-push-f-origin-master"&gt;
  &lt;/a&gt;
  git push -f origin master
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Because I did a pull –rebase, I need to force or use the -f directive.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thats-it"&gt;
  &lt;/a&gt;
  That’s it
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#let-me-know-what-you-think"&gt;
  &lt;/a&gt;
  Let me know what you think!
&lt;/h4&gt;

</description>
      <category>github</category>
      <category>git</category>
      <category>vscode</category>
      <category>code</category>
    </item>
    <item>
      <title>Integrating Krisp with Google Meet - Enjoy Hassle-Free Calls with Improved Noise Cancellation
</title>
      <author>Bala Priya C </author>
      <pubDate>Mon, 16 Aug 2021 10:22:01 +0000</pubDate>
      <link>https://dev.to/balapriya/integrating-krisp-with-google-meet-enjoy-hassle-free-calls-with-improved-noise-cancellation-34fj</link>
      <guid>https://dev.to/balapriya/integrating-krisp-with-google-meet-enjoy-hassle-free-calls-with-improved-noise-cancellation-34fj</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;The pandemic has certainly brought about a paradigm shift to virtual. It has been over a year of video conferencing - from classes in schools and grad schools going online to remote work bringing in the need for several sync calls in a day. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;One of the major challenges of using conferencing apps, such as Google Meet and Zoom is the inevitable background noise from various sources during the call, which often can come in the way of effectively listening and taking part in discussions, especially more impactful in a call with a large audience.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Over the next few minutes, let’s see how we can possibly mitigate the effect of noise by integrating Krisp, an AI-powered app that removes background noise and echos making meeting experiences much more pleasant, with Google Meet, widely used for conferencing  in academia. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Please note that if you already have a subscription to an enterprise G-Suite workspace, you may want to try out the built-in noise cancellation feature that you have access to, and use Krisp for overhauling existing performance.&lt;/p&gt;

&lt;p&gt;Kindly read ahead and find the steps to install Krisp and integrate it with Google Meet.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#steps-to-install-krisp-and-integrate-with-google-meet"&gt;
  &lt;/a&gt;
  Steps to install Krisp and integrate with Google Meet
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Visit krisp.ai to download your Krisp client. You’d be prompted to sign up for a free account. Yes, it’s completely free; You don’t have to provide your card details.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JCg4DJQl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/en2pc0t77qizzs50fsiz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JCg4DJQl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/en2pc0t77qizzs50fsiz.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; You may download the client for the Operating System that you use. This tutorial would focus on Windows OS.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RCGKAsX8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10gp63525uur11yxkzax.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RCGKAsX8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10gp63525uur11yxkzax.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; When you click on the Install on Windows option, you'll see this screen which has the next steps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qVSkjwny--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/poumvvccn2j9dy6g6e91.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qVSkjwny--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/poumvvccn2j9dy6g6e91.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; When you click on the Install on Windows option, you'll see this screen which has the next steps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gGvJfeFA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eqjp7yo1l1vnwlu2aboe.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gGvJfeFA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eqjp7yo1l1vnwlu2aboe.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt; The setup process takes a few minutes to complete.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xvbyTp_P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a66ub65f8v2qvlqpy016.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xvbyTp_P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a66ub65f8v2qvlqpy016.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt; Once the setup is complete, you should be able to launch Krisp client to check if it works for background noise cancellation on your device.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MmA_7fKQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/997d5d3p7t8qhce6s3fn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MmA_7fKQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/997d5d3p7t8qhce6s3fn.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 7:&lt;/strong&gt; So far so good? The next step is to launch Google Meet and choose &lt;code&gt;krisp microphone (Virtual)&lt;/code&gt; and &lt;code&gt;krisp speaker (Virtual)&lt;/code&gt; as the devices of choice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 8:&lt;/strong&gt; When you join a call, please be sure to toggle the Mute Noise option for both your speaker and microphone to enable noise cancellation. And yes,noise cancellation has been successfully enabled.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N2ZU4QVz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q15fgxhshtunaxmgp7o2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N2ZU4QVz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q15fgxhshtunaxmgp7o2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That said, maybe it’s time to get Krisp up and running on your system as well?&lt;/p&gt;

</description>
      <category>tutorial</category>
    </item>
    <item>
      <title>Practical Introduction to CSS Grid</title>
      <author>Albert Chang</author>
      <pubDate>Mon, 16 Aug 2021 10:09:51 +0000</pubDate>
      <link>https://dev.to/a89529294/practical-introduction-to-css-grid-22go</link>
      <guid>https://dev.to/a89529294/practical-introduction-to-css-grid-22go</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-is-css-grid"&gt;
  &lt;/a&gt;
  What is CSS Grid
&lt;/h3&gt;

&lt;p&gt;A two dimensional system made up of rows and columns that helps you position your html elements.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-enable-and-use-css-grid"&gt;
  &lt;/a&gt;
  How to enable and use CSS Grid
&lt;/h3&gt;

&lt;p&gt;On any element, declare &lt;code&gt;display:grid ;&lt;/code&gt;&lt;br&gt;
Every item that is added to that element will by default occupy a row.&lt;br&gt;
So if I add five divs to the grid, you will see five rows created and occupied by the divs.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-to-modify-default-behaviour-of-the-grid-container-element"&gt;
  &lt;/a&gt;
  How to modify default behaviour of the grid container element
&lt;/h3&gt;

&lt;p&gt;If you want to create a 3x2 (3 rows x 2 columns) grid then this is what you need to declare on the grid element:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;display:grid;
grid-template-rows: 1fr 1fr 1fr;
grid-template-columns: 1fr 1fr;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note: There are many other units you can use here in place of fr, like px, %, and many more. Fr units means the remaining space so in this example all the rows have the same height and all the columns have the same width.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-the-items-position-themselves-in-a-grid-container"&gt;
  &lt;/a&gt;
  How the items position themselves in a grid container
&lt;/h3&gt;

&lt;p&gt;By default, items flow from left to right, top to bottom. So continuing last section's example, the 1st item will occupy the top left cell, the 2nd item will occupy the top center cell and so on, until the first row is filled up. Then the items will move down to the next row. &lt;br&gt;
Note: This is the default behaviour which can be changed by specifying &lt;code&gt;grid-auto-flow: column&lt;/code&gt;, then the items will flow from top to bottom then left to right.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-to-position-a-specific-element-into-a-certain-cell"&gt;
  &lt;/a&gt;
  How to position a specific element into a certain cell
&lt;/h3&gt;

&lt;p&gt;Say we have a 3x3 grid. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e8NvYX35--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e9v7imr256vylvlur4b2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e8NvYX35--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e9v7imr256vylvlur4b2.png" alt="grid_lines"&gt;&lt;/a&gt;&lt;br&gt;
If we want to position an element with class &lt;code&gt;item&lt;/code&gt; into the center cell we have to declare&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.item {
  grid-area: 2/2/3/3;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;grid-area: row-start/ col-start/ row-end/ col-end;&lt;br&gt;
Here the row-start etc, refer to the lines.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#there-are-many-different-ways-to-define-a-grid-and-to-position-items-on-a-grid-this-only-serves-as-a-very-basic-starting-point-so-you-can-start-using-grids-in-your-projects"&gt;
  &lt;/a&gt;
  There are many different ways to define a grid and to position items on a grid. This only serves as a very basic starting point so you can start using grids in your projects.
&lt;/h6&gt;

</description>
      <category>css</category>
      <category>beginners</category>
      <category>html</category>
    </item>
    <item>
      <title>backdrop-filter: blur / header sticky</title>
      <author>Aito / Asagiri Design</author>
      <pubDate>Mon, 16 Aug 2021 10:09:16 +0000</pubDate>
      <link>https://dev.to/aito/backdrop-filter-blur-header-sticky-1120</link>
      <guid>https://dev.to/aito/backdrop-filter-blur-header-sticky-1120</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/pistol/embed/abWxgqz?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
    </item>
    <item>
      <title>Maths Game (Made for Mathnasium [mathnasium.com)</title>
      <author>FRADAR</author>
      <pubDate>Mon, 16 Aug 2021 09:52:01 +0000</pubDate>
      <link>https://dev.to/fradar/maths-game-made-for-mathnasium-mathnasium-com-39e9</link>
      <guid>https://dev.to/fradar/maths-game-made-for-mathnasium-mathnasium-com-39e9</guid>
      <description>&lt;p&gt;Just another small maths game that I made for a tuition.&lt;/p&gt;

&lt;p&gt;Comment your scores to be on the leaderboard!&lt;/p&gt;

&lt;p&gt;Check out the leaderboard!:&lt;br&gt;
&lt;a href="https://codepen.io/FRADAR/full/QWvPXwQ"&gt;https://codepen.io/FRADAR/full/QWvPXwQ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Play the game here:&lt;br&gt;
&lt;a href="https://codepen.io/FRADAR/full/WNjLQON"&gt;https://codepen.io/FRADAR/full/WNjLQON&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Like my games?&lt;br&gt;
Follow me:&lt;br&gt;
&lt;a href="https://codepen.io/FRADAR"&gt;https://codepen.io/FRADAR&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Until next time, folks!&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>gamedev</category>
      <category>maths</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Check out my portfolio!</title>
      <author>Siddharth</author>
      <pubDate>Mon, 16 Aug 2021 09:47:24 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/check-out-my-portfolio-4oi</link>
      <guid>https://dev.to/siddharthshyniben/check-out-my-portfolio-4oi</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR
&lt;/h2&gt;

&lt;p&gt;It's &lt;a href="https://siddharthshyniben.github.io/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Like it? Bugs? Tell me in the comments!&lt;/p&gt;

&lt;p&gt;There's also a bunch of easter eggs :D&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#portfolio"&gt;
  &lt;/a&gt;
  Portfolio!
&lt;/h3&gt;

&lt;p&gt;I just built a &lt;a href="https://siddharthshyniben.github.io/"&gt;portfolio&lt;/a&gt;. It's pretty empty (I haven't built anything big yet), but I think it's a great design, especially for me who is bad at CSS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UnvpR2i2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eg1zt3qa2fqq45w7s2xo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UnvpR2i2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eg1zt3qa2fqq45w7s2xo.png" alt="Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Try &lt;code&gt;cd&lt;/code&gt;ing around, &lt;code&gt;ch&lt;/code&gt;anging the &lt;code&gt;root&lt;/code&gt;, maybe &lt;code&gt;shred&lt;/code&gt; a few files, &lt;code&gt;cat&lt;/code&gt;, &lt;code&gt;cd&lt;/code&gt;, &lt;code&gt;fortune&lt;/code&gt;, &lt;code&gt;lolcat&lt;/code&gt; and more. &lt;code&gt;cat help.txt&lt;/code&gt; for some help. Also try &lt;code&gt;vim&lt;/code&gt; or &lt;code&gt;nano&lt;/code&gt; or &lt;code&gt;emacs&lt;/code&gt; or &lt;code&gt;ed&lt;/code&gt; or more...&lt;/p&gt;

&lt;p&gt;There's also multiline prompt: Try typing &lt;code&gt;cat help &amp;amp;&amp;amp;&lt;/code&gt; and hitting enter.&lt;/p&gt;

&lt;p&gt;There's also a bunch of easter eggs (5 to be exact). Let me see how many you can find!&lt;/p&gt;

&lt;p&gt;There's also a text version. Just click the link at the bottom left.&lt;/p&gt;

&lt;p&gt;Like it? Comment down below :D&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
