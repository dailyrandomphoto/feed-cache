<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Let be friends!</title>
      <author>Thin Htoo Han </author>
      <pubDate>Sun, 05 Dec 2021 11:57:53 +0000</pubDate>
      <link>https://dev.to/thinhtoohan/let-be-friends-5cjk</link>
      <guid>https://dev.to/thinhtoohan/let-be-friends-5cjk</guid>
      <description>&lt;p&gt;Hello Everyone,&lt;br&gt;
I'm &lt;strong&gt;Thin Htoo Han&lt;/strong&gt;.&lt;br&gt;
I'm finding &lt;strong&gt;&lt;em&gt;more developer friends&lt;/em&gt;&lt;/strong&gt;.&lt;br&gt;
Please contact me if you want to study or work with me.&lt;br&gt;
&lt;a href="https://thin-htoo-han.github.io/My-Portfolio-Website/"&gt;&lt;em&gt;Get in touch&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>myanmar</category>
    </item>
    <item>
      <title>Binance Clone app- Get exclusive app for your binance like business</title>
      <author>xavier trinkal</author>
      <pubDate>Sun, 05 Dec 2021 11:44:45 +0000</pubDate>
      <link>https://dev.to/xtrinkal/binance-clone-app-get-exclusive-app-for-your-binance-like-busines-3f65</link>
      <guid>https://dev.to/xtrinkal/binance-clone-app-get-exclusive-app-for-your-binance-like-busines-3f65</guid>
      <description>&lt;h2&gt;
  &lt;a href="#binance-clone-app-development"&gt;
  &lt;/a&gt;
  Binance clone app development
&lt;/h2&gt;

&lt;p&gt;This article will explore the concept of Binance clone app development and show if they are business-friendly or not.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-a-brief-explanation-about-binance-amp-binance-app"&gt;
  &lt;/a&gt;
  First, A Brief Explanation About Binance &amp;amp; Binance App
&lt;/h2&gt;

&lt;p&gt;The Binance Exchange is the biggest Cryptocurrency exchanges are platforms that facilitate the trading of cryptocurrencies for other assets, including digital and fiat in the world as of January 2018, facilitating more than 1.4 million transactions per second. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oGZ16S2H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wphsjqxk6khxkktcu7y2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oGZ16S2H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wphsjqxk6khxkktcu7y2.png" alt="Binance clone app development" width="880" height="543"&gt;&lt;/a&gt;&lt;br&gt;
Binance app, whose 24-hour volume reached an average of 10 billion in 2021, is the largest cryptocurrency trading platform. Binance gives you the chance to exchange 258 different coins for 876 different currencies. Binance, with 28 million daily visitors, is the best forex broker where you can manage your investment. Binance, which has low commission rates compared to its competitors, has a mobile application where you can easily perform all transactions and be sure that your money is safe.&lt;br&gt;
Binance App Customer Services: In case you have an issue while trading on Binance, all you need to do is to contact Binance customer services, it is available 24/7.&lt;br&gt;
Also, Binance is capable of processing 1,400,000 orders per second&lt;br&gt;
Supports many cryptocurrencies&lt;br&gt;
Binance serves more than 15,000,000 users worldwide, operates in over 40 countries&lt;br&gt;
Is based in over 180 countries &amp;amp; regions.&lt;br&gt;
App Installs: 10,000,000+&lt;br&gt;
Votes: 386,819&lt;br&gt;
And Rating: 4.4/5&lt;br&gt;
&lt;em&gt;Give your users a complete new level of crypto exchange experience with customizing native iOS and Android Binance like app development solutions.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#binance-clone-app"&gt;
  &lt;/a&gt;
  Binance clone app
&lt;/h2&gt;

&lt;p&gt;The &lt;b&gt;&lt;a href="https://radindev.com/binance-clone-script/"&gt;Binance Clone App&lt;/a&gt;&lt;/b&gt; is a ready app that can be accessed through various available platforms of Android, iOS, and windows, through developing scalability. The Binance Clone App is designed to provide instant push and pop notifications, permitting the user to keep track of his expenses at that moment. Like the Binance app, have an updated Binance clone app for your business. Binance clone app development involves all the essential and updated features along with security updates to make your cryptocurrency exchange business encrypted and secure. Binance Dex have an app, means, Trust Wallet, the official crypto wallet app of Binance, has started support for trading on Binance DEX, the community-led decentralized exchange built on Binance Chain.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-choose-binance-clone-app"&gt;
  &lt;/a&gt;
  Why choose binance clone app?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jvwMKh0C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/diytwtth10zq705o57te.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jvwMKh0C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/diytwtth10zq705o57te.png" alt="Features of Binance Clone App" width="860" height="768"&gt;&lt;/a&gt;&lt;br&gt;
Binance clone app gives you a bunch of reasons and new features to use on its platform: &lt;br&gt;
• Over $37 billion in daily trading volume&lt;br&gt;
• Strong security&lt;br&gt;
• Low downtimes&lt;br&gt;
• Most coins available&lt;br&gt;
• Multiple payment methods&lt;br&gt;
• Opportunity to invest with a credit card&lt;br&gt;
• Opportunity to invest with a wire transfer&lt;br&gt;
• Live chats in many languages&lt;br&gt;
• Forward Transactions&lt;br&gt;
• Sweepstakes&lt;br&gt;
• Fast actions&lt;br&gt;
• Low Commission&lt;br&gt;
• Authentication using biometrics&lt;br&gt;
• The Approval Process is short&lt;br&gt;
• Having offices everywhere&lt;br&gt;
• Easy to use&lt;br&gt;
• Stunning UI/UX design&lt;br&gt;
• In built wallet&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-making-a-binance-clone-app"&gt;
  &lt;/a&gt;
  Benefits of Making a Binance Clone App
&lt;/h2&gt;

&lt;p&gt;• For a safe store of hard-earned bitcoins&lt;br&gt;
• Personalize your Binance wallet profile&lt;br&gt;
• Can share your bitcoin wallet address or QR code with traders or friends&lt;br&gt;
• Track their trades and know the current status of bitcoins.&lt;br&gt;
• Easily Send, receive and store bitcoins which can be transacted anytime, anywhere&lt;br&gt;
• Know the updated bitcoin-to-fiat conversion rates and more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#white-labelling-promotes-the-vision-of-your-brand"&gt;
  &lt;/a&gt;
  White labelling Promotes the Vision of Your Brand
&lt;/h2&gt;

&lt;p&gt;White labeling helps in boosting the image of the brand. It is a great idea to go with white labeling for your products, which will help you to proliferate your all-new brand name without being nasty, and it will undoubtedly increase the public awareness of your brand.&lt;br&gt;
White labelling allows us to take the benefit of expert work as if the third party has expertise in developing a product better than us then why not pay them and white label it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-advantages-of-using-whitelabel-android-amp-ios-apps"&gt;
  &lt;/a&gt;
  What are the advantages of using white-label Android &amp;amp; IOS apps?
&lt;/h3&gt;

&lt;p&gt;Redefined Product&lt;br&gt;
The product developed by the third party has already gone through the various process like a beta test, troubleshooting etc. Instead of going through the pain of launching your own product, white label is a better option.&lt;br&gt;
Quality Responsibility&lt;br&gt;
If something went wrong regarding the quality of the product, then the third party which developed the product takes the full responsibility to make the product in a correct way again.&lt;br&gt;
Low Initial Investment: If a start-up company requires to enter the android app development market with minimal initial investment, then white-label apps are the way to go. &lt;br&gt;
Fast Turnaround Time: For a company looking to capture a market share immediately, they may not choose to waste any further time and rather go for a ready-made solution to hit the market. &lt;br&gt;
Proven Features Set: Company A might have decided to launch an app to estimate the market size and understand user expectations. They may not have the required experience to work out the feature set of android apps, and therefore might decide to step the beaten track in order to minimize their chance of incurring a loss. &lt;br&gt;
White Labeling Saves Money and Time&lt;br&gt;
Developing your own product might sound very interesting at some point until you have done it successfully in the past, you presumably are not familiar with all the resources and energy that helps in creating a primordial product, so why you should waste your time and money when you can white label the product?&lt;br&gt;
If you are planning to start a clone app like Binance and want to earn a high Return on Investment also by providing your customers with great satisfaction levels, you can start your own cryptocurrency exchange with a white-label Binance clone app. You can also go with any other solution which is reliable and trustable in the market.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4KlygkaE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oz24jgm4kxnnifd99d4t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4KlygkaE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oz24jgm4kxnnifd99d4t.png" alt="White-label Binance Clone App" width="880" height="740"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whitelabel-binance-clone-app-to-start-customized-cryptocurrency-trading-application-like-binance"&gt;
  &lt;/a&gt;
  White-label Binance Clone App - To Start Customized Cryptocurrency Trading Application Like Binance
&lt;/h2&gt;

&lt;p&gt;White-Label Binance Clone App is a 100% customizable Crypto Exchange Clone App that contains of all the present features and functionalities of the Binance Exchange. This clone app, provides a platform to launch your own cryptocurrency exchange website like Binance.&lt;br&gt;
White label Binance clone app permits you to customize the trading features according to the current digital trend, and it allows you to customize the brand name, theme, design according to your business demands. &lt;br&gt;
A white-label app is an app developed by a white-label platform or private label development company and later rebranded and re-sold by other companies.&lt;br&gt;
As you have begun your journey into the world of mobile app development, you now have two options: build a custom app from scratch or use a white-label app builder. While the notion of a ready-to-use and deploy framework seems appealing and cost-effective, it has its flaws. And, more often than not, the concerns associated with white-label applications are too significant to overlook.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-disadvantages-of-using-whitelabel-android-amp-ios-apps"&gt;
  &lt;/a&gt;
  What are the disadvantages of using white-label Android &amp;amp; IOS apps?
&lt;/h3&gt;

&lt;p&gt;Lack of custom design: With a white-label android app development, you may not have the complete freedom to change user experience design.  Therefore, the android app may not build a different and better experience for the end-user.&lt;br&gt;
Quality of code: The company B may not have full control over the quality of code that is being used in the android app development. The code may have malicious elements, may be prone to crashing often, and may not achieve good performance.&lt;br&gt;
Cloud-based setup: Some white-label android apps are cloud based and hence do not allow the company B to download it entirely. That may severely limit the secrecy of code and thereby compromise its efficacy.&lt;br&gt;
Scalability is limited: A white-label android app development may not offer you the required scalability. It might prevent you from scaling up due to limitations in either the code or the cloud setup.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>app</category>
      <category>cryptocurrency</category>
    </item>
    <item>
      <title>5 Reasons to Use Ubuntu Instead of Windows</title>
      <author>Mark Vassilevskiy</author>
      <pubDate>Sun, 05 Dec 2021 11:34:32 +0000</pubDate>
      <link>https://dev.to/markfusion/5-reasons-to-use-ubuntu-instead-of-windows-5epb</link>
      <guid>https://dev.to/markfusion/5-reasons-to-use-ubuntu-instead-of-windows-5epb</guid>
      <description>&lt;p&gt;Windows is a great platform for getting work done, but Linux offers many features and benefits that Windows simply does not. Linux has been around since 1991 and it continues to be popular today because of how customizable it is. Linux users have the power to choose which applications they want on their machine, as well as what other software can be installed and run on their systems. Linux also provides security benefits by giving the user more control over the system than Windows would allow.&lt;/p&gt;

&lt;p&gt;Linux also tends to be more stable than Windows, and it can be run on a wider variety of hardware. Finally, Linux is free and open-source software, which means that users are able to freely distribute and modify the code as they see fit. If you're looking for an alternative to Windows, Linux is definitely worth considering. Here are five reasons why:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#customizatization"&gt;
  &lt;/a&gt;
  Customizatization
&lt;/h2&gt;

&lt;p&gt;Linux is highly customizable, which means that users can change nearly anything they want about their system. This includes the look and feel of the desktop, the applications that are installed, and even how the system works.&lt;/p&gt;

&lt;p&gt;And when I say you can customize anything it means that really everything in this operating system is fully customizable and you can do whatever you want to. For instance, you don't like your Desktop, no problem, you can easily switch to another visual environment or even make yours. Yeah, you got me right, you can write even your visual environments and some programs that will work with hardware and operating system directly.&lt;/p&gt;

&lt;p&gt;Linux is also highly customizable when it comes to applications. Linux users can install their own preferred programs and choose which ones they want to run at a start-up. This makes Linux much more efficient since unnecessary software isn't always running in the background, consuming memory or other system resources that could be used elsewhere. Linux allows its user full control over what is installed and how the system works.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security
&lt;/h2&gt;

&lt;p&gt;Windows has been notorious for its security vulnerabilities, which have allowed hackers to exploit systems and steal data. Linux, on the other hand, is much more secure because it gives users more control over their system than Windows does. Linux allows users to set permissions for each application, so that only authorized&lt;/p&gt;

&lt;p&gt;Because Linux is open-source software, users are able to see and modify the code as they please. This makes it more difficult for hackers to exploit vulnerabilities in Linux systems. In addition, Linux distributions often come with pre-installed security features that Windows does not have.  &lt;/p&gt;

&lt;p&gt;Linux is also more reliable than Windows since Linux is not an operating system that needs to be constantly updated. Linux tends to only need updates when new software or hardware drivers are installed, and these can often be taken care of by the distribution itself.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#availability"&gt;
  &lt;/a&gt;
  Availability
&lt;/h2&gt;

&lt;p&gt;Linux systems are cheaper than Windows because Linux does not require a license fee for each computer it's on like Windows does. Linux has been around for over two decades now, which means that it has had time to mature into its own ecosystem with plenty of support from developers and users alike. &lt;/p&gt;

&lt;p&gt;Last but certainly not least, Linux provides security benefits in addition to all the other features I've already mentioned above; such as user customization and better availability across different platforms (hardware). Linux is free, open-source software that can be modified and redistributed by anyone.&lt;/p&gt;

&lt;p&gt;Linux users also have the benefit of being able to see the source code for everything running on their system; this makes Linux much more available than Windows systems since it allows users to view vulnerabilities in programs before they're exploited by hackers or malware.&lt;/p&gt;

&lt;p&gt;Additionally, Linux has been around for nearly three decades, which means Linux is well-established and has had time to mature into its own ecosystem with plenty of support from developers and users alike.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stability"&gt;
  &lt;/a&gt;
  Stability
&lt;/h2&gt;

&lt;p&gt;Windows is known for its instability, which can often result in system crashes and other problems. Linux, on the other hand, tends to be more stable and reliable. This is because Linux is less resource-intensive than Windows, meaning that it can run on a wider variety of hardware. Linux systems are also less likely to become infected with malware and viruses. Linux is also not as frequently targeted for attacks by hackers, so Linux systems tend to be more secure than Windows ones.&lt;/p&gt;

&lt;p&gt;Ubuntu Linux has gained a lot of popularity recently because it provides all the benefits I outlined above without any licensing fees or complicated terms and conditions. Ubuntu Linux has become very popular among computer users around the world, with over 20 million people now using this operating system on their computers at home or work. Linux distributions like Ubuntu are easy-to-use alternatives to Windows that provide better security features, increased stability, greater availability across different hardware platforms (e.g., laptops), and lower prices since they don't require expensive license fees for each installation. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hardware-compatibility"&gt;
  &lt;/a&gt;
  Hardware Compatibility
&lt;/h2&gt;

&lt;p&gt;Linux is able to run on a wider variety of hardware than Windows, making it a more versatile operating system. Linux can be installed on older machines, as well as newer ones. In addition, Linux can be run on different types of processors, including ARM-based processors found in many mobile devices. Linux can even be used on mainframes, which are very powerful computers that manage large volumes of data. Linux is also available for handheld devices like smartphones and tablets.&lt;/p&gt;

&lt;p&gt;Linux also provides several Linux distributions that are specifically designed for use on laptops, including Linux Mint and Ubuntu Linux.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Many people who switch from Windows computers to Linux do so because they find Linux more reliable than Windows. Linux is also easier to use, provides better security features, works well with different types of hardware platforms (e.g., mobile devices), and licenses are free since Linux doesn't require any license fees for each computer installation like Windows does. Linux has come a long way in the past two decades or so; it's now making its way into the mainstream as a viable alternative to Windows. If you're looking for an operating system that is reliable, easy-to-use, and provides better security features than Windows, Linux may be the right choice for you!&lt;/p&gt;

</description>
      <category>linux</category>
      <category>ubuntu</category>
      <category>programming</category>
      <category>windows</category>
    </item>
    <item>
      <title>Reactive Systems on AWS | AWS White Paper Summary</title>
      <author>Adit Modi</author>
      <pubDate>Sun, 05 Dec 2021 11:31:27 +0000</pubDate>
      <link>https://dev.to/awsmenacommunity/reactive-systems-on-aws-aws-white-paper-summary-43fa</link>
      <guid>https://dev.to/awsmenacommunity/reactive-systems-on-aws-aws-white-paper-summary-43fa</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Microservice application requirements have changed dramatically in recent years. Many modern applications are expected to handle petabytes of data, require close to 100% uptime, and deliver sub-second response time to users. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Typical N-tier applications can’t deliver on these requirements. Today reactive architectures and reactive systems have been adopted by a growing number of enterprises, because it is necessary to design applications in a highly scalable and responsive way. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;But what exactly is a reactive system?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;The Reactive Manifesto, describes the essential characteristics of reactive systems including: responsiveness, resiliency, elasticity, and being message driven.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Being message driven is perhaps the most important characteristic of reactive systems. Asynchronous messaging helps in the design of loosely coupled systems, which is a key factor for scalability. In order to build highly resilient systems, it is important to isolate services from each other. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Microservices are an architectural and organizational approach to software development where software is composed of small independent services that communicate over well-defined APIs. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;These services are owned by small, self-contained teams. Isolation and decoupling are an important aspect of the microservices pattern as well. This makes reactive systems and microservices a natural fit.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#characteristics-of-reactive-systems"&gt;
  &lt;/a&gt;
  Characteristics of reactive systems
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;The following sections outline the essential characteristics of reactive systems.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#responsive"&gt;
  &lt;/a&gt;
  Responsive
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Responsiveness means that systems respond in a timely manner. It is crucial to reduce latency between request and response. Latency is an important factor that can, under certain circumstances, be decisive for the success or failure of a service. It directly influences the behavior of the consumer of the website or webservice. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Imagine, you want to check out your shopping cart on an e-commerce website and processing of the payment takes a significant amount of time or even crashes. This results in an overall bad user experience. Latency is often correlated with conversion rate. Responding in a timely manner ensures these systems deliver a consistent behavior and quality of service.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#resilient"&gt;
  &lt;/a&gt;
  Resilient
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A resilient system stays responsive in the face of failure. A resilient workload has the capability to recover when stressed by load, attacks, and failure of any component in the workload's components. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If a failure occurs in one component, this must be contained in the source of the failure by isolating it from others. As a result, this prevents a small failure from causing a major outage of the complete system.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#elastic"&gt;
  &lt;/a&gt;
  Elastic
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;A reactive architecture remains responsive under varying workload. This elasticity requires you to be able to scale a system dynamically and add or remove resources to react to changes which leads to the avoidance of bottlenecks. These systems support predictive as well as reactive scaling based on metrics which leads to an efficient use of resources.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#message-driven"&gt;
  &lt;/a&gt;
  Message driven
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In order to establish boundaries between services, reactive systems rely on asynchronous message-passing. This helps ensure loose coupling, isolation, and location transparency. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Location transparency can be achieved by using a message queue or a similar system to access data without the explicit knowledge of the location. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This can be achieved using network resources like DNS. The main advantage of this approach is that it’s not important where exactly the resource is located. This is key for resiliency and elasticity, because a failover mechanism can be implemented that abstracts the actual resource behind a network name. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In reactive systems, asynchronous message-passing is also used to distribute information of failures or other errors as messages. By using this pattern, the system enables better load management by monitoring the message queues and implementing a mechanism for backpressure.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This allows non-blocking communication which leads to less system overhead. One of the biggest challenges to effectively scale large systems is the bottleneck that is introduced by shared resources. This communication pattern helps minimizing concurrent access.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#observability-and-tracing"&gt;
  &lt;/a&gt;
  Observability and tracing
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;As already outlined, reactive systems are defined as message-driven and resilient, which means, a reactive system - by nature - will be a distributed system. This necessarily includes additional network communication. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In a traditional monolithic application (for example, a JavaEE application) the complete application resides in the same memory on one device, potentially with full redundant copies on other machines to allow for failover. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In many cases, monolithic applications have better latency compared to distributed application but with limitations in scalability and availability.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This tracing header can be used to correlate events with log entries. In addition, you can use services such as AWS X-Ray to trace and analyze requests as they travel through your entire system, from Application Load Balancer or Amazon API Gateway APIs to the underlying services, making it much easier to identify issues and visualize service calls. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS X-Ray helps developers analyze and debug production, distributed applications, which are built using a microservices architecture. X-Ray’s service maps let you see relationships between services and resources in your application in real&lt;br&gt;
time. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can easily detect where high latencies are occurring, visualize node and edge latency distribution for services, and then drill down into the specific services and paths impacting application performance.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#reactive-programming-and-reactive-streams"&gt;
  &lt;/a&gt;
  Reactive programming and reactive streams
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It is important to make a distinction between reactive systems and reactive programming because these two completely different concepts are often confused.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reactive systems are responsive, resilient, elastic, and message driven as per preceding paragraphs. This description shows that reactive systems are an architectural approach to design distributed responsive systems. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reactive programming, however, is a software design approach which focusses on asynchronous data streams. Everything in the application is seen as a stream of data which can be observed (observer pattern).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The goal behind the Reactive Streams’ specification is to create the basis for compatible implementations that can communicate with each other. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This specification includes a minimal set of interfaces, methods, and protocols, that define operations and&lt;br&gt;
entities that are necessary to implement a compatible version.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#typical-usecases-for-reactive-systems"&gt;
  &lt;/a&gt;
  Typical use-cases for reactive systems
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;What do typical use cases for reactive systems have in common?&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Potentially millions of messages flow into the backend system. The impact of this requirement is a backend system that is able to quickly scale out and is resilient.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Advertising technology (Ad tech) face an interesting challenge to collect or track a lot of information. Usually this is a tracking pixel on a website that ingests data into a system.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Depending on the campaign and its success, the amount of data that needs to be collected and transformed may significantly vary and is not always predictable. The following sections take a closer look at an example implementation for a tracking system for ads.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For eCommerce, it’s a similar situation: if a product goes viral on social media or an advertising campaign is surprisingly successful, a lot of people will visit the eCommerce website and order products.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For IoT, you need to be able to manage millions of connected devices that produce a huge amount of sensor data. This data needs to be collected, stored, and analyzed. Often it is necessary to send additional data back to the connected devices to update the status. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The complete system has to be responsive in order to deliver feedback to users or trigger changes in the devices or machines within a short span of time.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#example-architecture"&gt;
  &lt;/a&gt;
  Example architecture
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;To help explain how reactive principles can be applied to real world application, the following example architecture implements a reactive system for the following common ad-tech use case.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Many ad-tracking companies collect large amounts of data in near-real-time. In many cases, these workloads are very spiky and heavily depend on the success of the ad- tech company’s customers; they also need to be responsive and resilient, as these systems form part of the backbone of many ad-tech companies.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lue4IetD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgkl4rgxsuft4dizll0l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lue4IetD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgkl4rgxsuft4dizll0l.png" alt="Image description" width="584" height="336"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In this example architecture the system can be logically divided into one part focused on data collection and another part focuses on core data updates. The data collection subsystem is responsible for collecting, validating, and persisting the tracking data, potentially enriching it with some core data in the process. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the core data update subsystem, the data that is used to validate and enrich the incoming raw tracking data—this typically includes data on ad inventory, campaigns, publishers, publishers’ remaining campaign budgets, and etc.— receives updates from upstream back-office systems (not implemented in the example architecture) and notifies all subscribers about the changed and added data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Typically for an ad-tracking use case, the data collection subsystem can be separated further into a real-time part and a non-real-time part.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;More details on Example architecture and using event driven and non-blocking framework available &lt;a href=""&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#the-reactive-manifesto-and-aws-services"&gt;
  &lt;/a&gt;
  The reactive manifesto and AWS services
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;The following section focuses on how to map compute and messaging services to the four principles of the reactive manifesto. This section only focuses on a limited set of services which are also used in the example implementation examined in the last chapter.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#service-introduction"&gt;
  &lt;/a&gt;
  Service introduction
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Amazon Elastic Container Service (Amazon ECS)&lt;/strong&gt; is a fully managed container orchestration service. It is a shared state, optimistic concurrency system that provides flexible scheduling capabilities for your tasks and containers. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Amazon Elastic Kubernetes Service (Amazon EKS)&lt;/strong&gt; gives you the flexibility to start, run, and scale Kubernetes applications in the AWS Cloud or on-premises. Amazon EKS helps you provide highly-available and secure clusters and automates key tasks such as patching, node provisioning, and updates. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;AWS Lambda&lt;/strong&gt; is a serverless compute service that lets you run code without provisioning or managing servers, creating workload-aware cluster scaling logic, maintaining event integrations, or managing runtimes. With Lambda, you can run code for virtually any type of application or backend service - all with zero administration.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Amazon Kinesis Data Streams&lt;/strong&gt; is a massively scalable and durable real-time data streaming service. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Amazon ElastiCache&lt;/strong&gt; offers a fully managed in-memory data store, compatible with Redis or Memcached that enables you to power real-time applications with sub- millisecond latency. The service can scale-out, scale-in, and scale-up to meet fluctuating application demands. Write and memory scaling is supported with sharding. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Amazon DynamoDB&lt;/strong&gt; is a key-value and document database that delivers single-digit millisecond performance at any scale. It is a fully managed database with scalability and high availability built in. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#principles-and-services"&gt;
  &lt;/a&gt;
  Principles and services
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#responsive"&gt;
  &lt;/a&gt;
  Responsive
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;As previously mentioned, being responsive means that systems respond in a timely manner, even under heavy load. To meet this requirement, special attention must be paid to latency. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#resilient"&gt;
  &lt;/a&gt;
  Resilient
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;According to the AWS Well-Architected Framework, resiliency is “The ability for a system to recover from a failure induced by load, attacks, and failures”. Depending on the service used, resiliency is either part of the service offering or has to be designed by the customer, depending on the specific requirements. The following section discusses resiliency for different AWS services and how this can be implemented.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#aws-global-infrastructure"&gt;
  &lt;/a&gt;
  AWS Global Infrastructure
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The AWS Global Infrastructure consists of multiple building blocks that provide different levels of independent, redundant components. AWS partitions resources and requests via some dimension. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#aws-lambda"&gt;
  &lt;/a&gt;
  AWS Lambda
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;In addition to the benefits of the AWS global infrastructure, AWS Lambda offers several features to help support your data resiliency and backup needs. Lambda runs instances of your function in multiple AZs to ensure that it is available to process events in case of a service interruption in a single zone. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#amazon-ecs"&gt;
  &lt;/a&gt;
  Amazon ECS
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Amazon Elastic Container Service (Amazon ECS) schedulers leverage the same cluster state information provided by the Amazon ECS API to make appropriate placement decisions. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#amazon-eks"&gt;
  &lt;/a&gt;
  Amazon EKS
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Amazon Elastic Kubernetes Service (Amazon EKS) runs Kubernetes control plane instances across multiple Availability Zones to ensure high availability. Amazon EKS automatically detects and replaces unhealthy control plane instances, and it provides automated version upgrades and patching for them. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#amazon-dynamodb"&gt;
  &lt;/a&gt;
  Amazon DynamoDB
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;DynamoDB is a regional, cell-based service that offers a high degree of resiliency out of the box. The service provides on-demand backup capability. It enables you to store full backups of your tables for long-term retention and archival. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#amazon-elasticache"&gt;
  &lt;/a&gt;
  Amazon ElastiCache
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Amazon ElastiCache helps mitigate common failure modes that could affect your (external) caching layer and thus the overall system’s responsiveness and resiliency. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#amazon-kinesis-data-streams"&gt;
  &lt;/a&gt;
  Amazon Kinesis Data Streams
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Amazon Kinesis Data Streams is a massively scalable and durable real-time data streaming service. High availability and durability are achieved by synchronously replicating data to three AZs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#elastic"&gt;
  &lt;/a&gt;
  Elastic
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Elasticity is “The ability to acquire resources as you need them and release resources when you no longer need them. In the cloud, you want to do this automatically.” Depending on the service, elasticity is sometimes part of the service itself. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Other services require vertical scaling. A third group of services integrate with AWS Auto Scaling. The following section discusses elasticity for different AWS services and how this can be implemented.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#aws-lambda"&gt;
  &lt;/a&gt;
  AWS Lambda
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;AWS Lambda has elastic scalability already built in: the service executes your code only when needed and scales automatically, from a few requests per day to thousands per second. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#amazon-ecs-and-amazon-eks"&gt;
  &lt;/a&gt;
  Amazon ECS and Amazon EKS
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Amazon ECS cluster auto scaling gives you control over how you scale tasks within a cluster. Each cluster has one or more capacity providers and an optional default capacity provider strategy. The capacity providers determine the infrastructure to use for the tasks, and the capacity provider strategy determines how the tasks are spread across the capacity providers. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When you run a task or create a service, you can either use the cluster's default capacity provider strategy or specify a capacity provider strategy that overrides the cluster's default strategy.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#amazon-kinesis-data-streams"&gt;
  &lt;/a&gt;
  Amazon Kinesis Data Streams
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Amazon Kinesis Data Streams offers provisioned capacity: each data stream is composed of one or more shards that act as units of capacity. Shards make it easy to design and scale a streaming pipeline by providing a predefined write and read capacity.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#message-driven"&gt;
  &lt;/a&gt;
  Message driven
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A message-driven architecture uses messages to communicate between decoupled services and is common in modern applications built with microservices, since asynchronous message-passing between loosely coupled services helps to ensure isolation and provides location transparency. The following section discusses different messaging patterns and how these can be implemented on AWS.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#event-sourcing-and-cqrs"&gt;
  &lt;/a&gt;
  Event sourcing and CQRS
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;In the context of microservices architectures, event sourcing decouples different parts of an application by using a publish/subscribe pattern, and it feeds the same event data into different data models for separate microservices. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#aws-messaging-services"&gt;
  &lt;/a&gt;
  AWS messaging services
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;AWS messaging services enable different software systems and end devices - often using different programming languages, and on different platforms - to communicate and exchange information. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#fanout"&gt;
  &lt;/a&gt;
  Fanout
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The Fanout scenario is when a message published is replicated and pushed to multiple endpoints, which allows for parallel asynchronous processing. For example, you can develop an application that publishes a message to an SNS topic whenever an order is placed for a product. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then, Amazon Simple Queue Service (Amazon SQS) queues that are subscribed to the Amazon Simple Notification Service (Amazon SNS) topic receive identical notifications for the new order. A service attached to one of the SQS queues can handle the processing or fulfillment of the order.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#filtering"&gt;
  &lt;/a&gt;
  Filtering
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;By default, an Amazon SNS topic subscriber receives every message published to the topic. To receive a subset of the messages, a subscriber must assign a filter policy to the topic subscription. A filter policy is a simple JSON object containing attributes that define which messages the subscriber receives. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When you publish a message to a topic, Amazon SNS compares the message attributes to the attributes in the filter policy for each of the topic's subscriptions. If any of the attributes match, Amazon SNS sends the message to the subscriber. Otherwise, Amazon SNS skips the subscriber without sending the message.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;After reviewing the concepts for reactive systems, you should have a good understanding of the landscape of potential AWS services you can choose to build a reactive system on AWS.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The key patterns in this paper, highlighted the necessary concepts for implementing the foundational building block for reactive systems. The characteristics of reactive systems based on the definition of the reactive manifesto.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The example architecture utilizes the same patterns on a micro-level which are being used on an architectural macro-level. The AWS services are a great starting point to implement reactive principles and microservices improve isolation of different workloads. In combination with managed services, you can focus on the business requirements and remove the undifferentiated heavy lifting.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://d1.awsstatic.com/whitepapers/reactive-systems-on-aws.pdf?did=wp_card&amp;amp;trk=wp_card"&gt;Original paper&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>architecture</category>
      <category>eventdriven</category>
    </item>
    <item>
      <title>Step by step, implement a simple Python background task</title>
      <author>Alchemist</author>
      <pubDate>Sun, 05 Dec 2021 11:30:52 +0000</pubDate>
      <link>https://dev.to/junmingzhang/step-by-step-implement-a-simple-python-background-task-3idn</link>
      <guid>https://dev.to/junmingzhang/step-by-step-implement-a-simple-python-background-task-3idn</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---fxdfZD0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k4om6por9omqeb8bi2le.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---fxdfZD0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k4om6por9omqeb8bi2le.png" alt="Multithread: from https://www.geeksforgeeks.org/multithreading-python-set-1/" width="712" height="391"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Image from: &lt;a href="https://www.geeksforgeeks.org/multithreading-python-set-1/"&gt;Multithreading in Python | Set 1&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;During these days, I am working on a small-scale Django project for user data analysis. Of course, we use a machine learning model to make such an analysis. To improve our model with newly uploaded data, the model is periodically trained. Here is a small pseudocode example for training our model continuously.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;while True:
    model = json.load(model_path)
    data = mysql
           .connector
           .connect(database_config)
           .cursor()
           .execute("SELECT * FROM your_table")
    model.train(data)
    json.save(model, model_path)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is an infinite loop because we continuously train our model. It is worth noting that you cannot put this training process in any of your main tasks (for example, an event after clicking a button) because this blocks your main workflow (or the main thread, which is the thread a customer uses). If you put an infinite loop in your main workflow by accident, your customer cannot use it, and the application may even crash!&lt;/p&gt;

&lt;p&gt;To deal with this problem, we can initialize a separate thread or process for the training task. If you have no idea about the thread or process or do not know their differences, please read this &lt;a href="https://en.wikipedia.org/wiki/Thread_(computing)"&gt;introduction&lt;/a&gt; on Wikipedia. &lt;/p&gt;

&lt;p&gt;Python supports both multi-thread and multi-process tasks with library &lt;strong&gt;threading&lt;/strong&gt; and &lt;strong&gt;multiprocessing&lt;/strong&gt;. They have been provided in the Python language library, so you do not have to install them but just import them. Since a thread is more lightweight than a process, I will use a thread for my background training task, aka the &lt;strong&gt;threading&lt;/strong&gt; library. Let's use the &lt;strong&gt;threading&lt;/strong&gt; library to reimplement the function, so this enables the above pseudocode to run synchronously with the user's workflow.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from threading import Thread

class CreateTrainModelPeriodicallyThread(Thread):
    def __init__(self):
        Thread.__init__(self)

    def run(self):
        try:
            while True:
                  model = json.load(model_path)
                  data = mysql
                         .connector
                         .connect(database_config)
                         .cursor()
                         .execute("SELECT * FROM your_table")
                  model.train(data)
                  json.save(model, model_path)
        except Exception as e:
            print(e)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please note we create a thread task by writing a new class that inherits the Python built-in Thread class. The &lt;code&gt;__init__(self)&lt;/code&gt; part initializes the thread task, and I will use this part later to add more features. The body of the training task is in the &lt;code&gt;run&lt;/code&gt; method of this thread class. To start this task, you need to create this thread at first, here is an example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;myTrainTask = CreateTrainModelPeriodicallyThread()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then you can start your task somewhere by the &lt;code&gt;start&lt;/code&gt; method inherited from the &lt;strong&gt;threading&lt;/strong&gt; library.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;myTrainTask.start()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's think about another problem. Imagine you have to provide service for different users, so you need your model to make an analysis based on different users' data. Maybe you will create different tables for different users. In the example above, the table is fixed, but you want to extract data from different tables. Therefore, the table name is an input variable. The thread class is not created in a function, then how can you send a variable to your task?&lt;/p&gt;

&lt;p&gt;Now you should use the &lt;code&gt;__init__(self)&lt;/code&gt; method, which is used to initialize an object of a class in Python. To pass variables to a thread, you can add parameters for the &lt;code&gt;__init__(self)&lt;/code&gt; method. For example, if you want to pass the table name, you can implement it as the example below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from threading import Thread

class CreateTrainModelPeriodicallyThread(Thread):
    def __init__(self, table_name):
        Thread.__init__(self)
        self.table_name = table_name

    def run(self):
        try:
            while True:
                  model = json.load(model_path)
                  data = mysql
                         .connector
                         .connect(database_config)
                         .cursor()
                         .execute("SELECT * FROM {}".format(table_name))
                  model.train(data)
                  json.save(model, model_path)
        except Exception as e:
            print(e)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Of course, you can do more with this &lt;code&gt;__init__(self)&lt;/code&gt; method. Now your customer needs to terminate this task at any time. But we know an infinite loop cannot terminate at all. Also, Python does not formally provide a &lt;code&gt;stop&lt;/code&gt; or &lt;code&gt;exit&lt;/code&gt; method for a thread. But we can realize our &lt;code&gt;stop&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;To realize this, we need to use the &lt;code&gt;Event&lt;/code&gt; object in the threading library. An &lt;code&gt;Event&lt;/code&gt; object is used for communication between threads, if one thread signals an event, another thread will wait on it. An &lt;code&gt;Event&lt;/code&gt; has an internal flag that denotes the status of this thread. If the status A is active (denoted by &lt;code&gt;eventA&lt;/code&gt;), &lt;code&gt;eventA.is_set()&lt;/code&gt; returns &lt;code&gt;True&lt;/code&gt;. To activate this status, you can use &lt;code&gt;eventA.set()&lt;/code&gt;, and to deactivate it, you can use &lt;code&gt;eventA.clear()&lt;/code&gt;. Let's add a threading event to indicate if the running task of the thread is terminated, for example, &lt;code&gt;_stopevent&lt;/code&gt;. You want to continuously train the model if &lt;code&gt;_stopevent.is_set()&lt;/code&gt; returns &lt;code&gt;False&lt;/code&gt;. To get rid of the race condition, you may want to block the thread until the internal flag is set or a timeout. Then you can use &lt;code&gt;eventA.wait(timeout)&lt;/code&gt; Let's set up a thread event. Also, if you want your task to be executed after a time interval, you can use the &lt;code&gt;sleep&lt;/code&gt; method in the Python built-in library &lt;code&gt;time&lt;/code&gt;. This will block a thread or a process after a time interval.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from threading import Thread
import time

class CreateTrainModelPeriodicallyThread(Thread):
    def __init__(self, table_name):
        Thread.__init__(self)
        self.table_name = table_name
        self._stopevent = Event() # initialize the event
        self._sleepperiod = 1.0 # we wait 1 second to start the thread

    def run(self):
        try:
            self._stopevent.clear() # Make sure the thread is unset
            while not self._stopevent.is_set():
                  time.sleep(5 * 60) # train the model every 5 minutes
                  model = json.load(model_path)
                  data = mysql
                         .connector
                         .connect(database_config)
                         .cursor()
                         .execute("SELECT * FROM {}".format(table_name))
                  model.train(data)
                  json.save(model, model_path)
                  self._stopevent.wait(self._sleepperiod)
        except Exception as e:
            print(e)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, if the &lt;code&gt;_stopevent&lt;/code&gt; is unset, the thread keeps running. Finally, let's add a method to kill the thread if we want. We can override the &lt;code&gt;join&lt;/code&gt; method of threading to terminate a thread. Be careful that the &lt;code&gt;join&lt;/code&gt; method does not kill a thread, it blocks this thread until this &lt;code&gt;join&lt;/code&gt; method is terminated by some management mechanism of the programming language. In our example, the daemon thread does this for us. A daemon thread has a low priority and runs in the background to perform some systematic tasks. For example, it performs garbage collection after a program finishes running. In Java, the Java virtual machine (JVM) manages daemon threads, which run the Java executables (.class) and realize the cross-platform property of the Java language. The daemon thread of Python works similarly with Java. Typically, the daemon thread is shut down at the end of finishing a program. Therefore, once the &lt;code&gt;join&lt;/code&gt; method of this thread is executed, it will be blocked until the daemon thread completes its task (i.e., the program finishes its work). Therefore, we can use the &lt;code&gt;join&lt;/code&gt; method to stop the thread. Before joining, we want to stop the training loop, so we should set the &lt;code&gt;_stopevent&lt;/code&gt; and then the &lt;code&gt;_stopevent.is_set()&lt;/code&gt; returns &lt;code&gt;True&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We have our complete workflow below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class CreateTrainModelPeriodicallyThread(Thread):
    def __init__(self, table_name):
        Thread.__init__(self)
        self.table_name = table_name
        self._stopevent = Event() # initialize the event
        self._sleepperiod = 1.0 # we wait 1 second to start the thread

    def run(self):
        try:
            self._stopevent.clear() # Make sure the thread is unset
            while not self._stopevent.is_set():
                  time.sleep(5 * 60) # train the model every 5 minutes
                  model = json.load(model_path)
                  data = mysql
                         .connector
                         .connect(database_config)
                         .cursor()
                         .execute("SELECT * FROM {}".format(table_name))
                  model.train(data)
                  json.save(model, model_path)
                  self._stopevent.wait(self._sleepperiod)
        except Exception as e:
            print(e)

    def join(self, timeout=None):
        self._stopevent.set() # set the stop event so the training loop is terminated.
        Thread.join(self, timeout)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Building such a thread to run a background job is very easy for a small project. However, if you are building a large project, you will have to manage many different tasks and each is executed by a thread, you may need a thread pool or a job queue to manage them. Then I recommend you to read more about the package "&lt;a href="https://django-background-tasks.readthedocs.io/en/latest/"&gt;Django-background-tasks&lt;/a&gt;" for the Django project. I tried that before, and it is not scheduled as my expectation (my Django version is 3.0+ which is not compatible with this library). Another good choice is "&lt;a href="https://docs.celeryproject.org/en/stable/django/first-steps-with-django.html"&gt;Celery&lt;/a&gt;", which is a job queue that manages scheduled tasks. To set up a Celery application, you need a broker to exchange messages between the Celery workers and your Django application, "&lt;a href="https://redis.io"&gt;Redis&lt;/a&gt;" is a good choice.&lt;/p&gt;

&lt;p&gt;Please implement your background task right after reading this blog!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A YouTube Video "Add Thread in Django | Django thread in Background | With example | How to use thread in Django": &lt;a href="https://www.youtube.com/watch?v=U5nuICIuAp0&amp;amp;t=530s"&gt;https://www.youtube.com/watch?v=U5nuICIuAp0&amp;amp;t=530s&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Terminating a Thread: &lt;a href="https://www.oreilly.com/library/view/python-cookbook/0596001673/ch06s03.html"&gt;https://www.oreilly.com/library/view/python-cookbook/0596001673/ch06s03.html&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Python threading library docs: &lt;a href="https://docs.python.org/3/library/threading.html"&gt;https://docs.python.org/3/library/threading.html&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;MULTITHREADING - DAEMON THREADS &amp;amp; JOIN METHOD: &lt;a href="https://www.bogotobogo.com/python/Multithread/python_multithreading_Daemon_join_method_threads.php"&gt;https://www.bogotobogo.com/python/Multithread/python_multithreading_Daemon_join_method_threads.php&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Daemon thread in Java: &lt;a href="https://www.geeksforgeeks.org/daemon-thread-java/"&gt;https://www.geeksforgeeks.org/daemon-thread-java/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Python Daemon Threads: &lt;a href="https://www.geeksforgeeks.org/python-daemon-threads/"&gt;https://www.geeksforgeeks.org/python-daemon-threads/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Asynchronous Tasks With Django and Celery: &lt;a href="https://realpython.com/asynchronous-tasks-with-django-and-celery/"&gt;https://realpython.com/asynchronous-tasks-with-django-and-celery/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Image from "&lt;em&gt;Multithreading in Python | Set 1&lt;/em&gt;": &lt;a href="https://www.geeksforgeeks.org/multithreading-python-set-1/"&gt;https://www.geeksforgeeks.org/multithreading-python-set-1/&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>python</category>
      <category>multithread</category>
    </item>
    <item>
      <title>Two new react frameworks</title>
      <author>Rakesh Potnuru</author>
      <pubDate>Sun, 05 Dec 2021 11:08:24 +0000</pubDate>
      <link>https://dev.to/rakeshpotnuru/two-new-react-frameworks-3hg7</link>
      <guid>https://dev.to/rakeshpotnuru/two-new-react-frameworks-3hg7</guid>
      <description>&lt;p&gt;React is one the biggest JavaScript frameworks, since then many react frameworks like NextJs, GatsbyJs, etc., popped in. So, in this blog, I will give an introduction to two new react frameworks launched recently.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-get-started"&gt;
  &lt;/a&gt;
  Let's get started
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#1-refine"&gt;
  &lt;/a&gt;
  1. Refine
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://refine.dev"&gt;Refine&lt;/a&gt; - A react-based framework launched in september, 2021.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QcFVsj1k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1440621951341400071/pu/img/femkQpNiP-1Mz-2o.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--GYBGJEM9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1438406726177497089/vTNQBEnP_normal.jpg" alt="refine profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        refine
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @refine_dev
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      🚀 We've just launched refine!&lt;br&gt;&lt;br&gt;Visit &lt;a href="https://t.co/RztxOxmHgj"&gt;refine.dev&lt;/a&gt; for demo project, tutorial, documents and live code examples. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      10:22 AM - 22 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1440622541249253386" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1440622541249253386" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1440622541249253386" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;As mentioned in their docs refine gives so many out-of-the-box functionalities for routing, networking, authentication, state management, internationalization, and UI(Ant design). &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lhyp9UVS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cq210nz8le5urcg9qdyn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lhyp9UVS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cq210nz8le5urcg9qdyn.png" alt="refine website" width="880" height="450"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With &lt;strong&gt;Refine&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You have full control over UI. &lt;/li&gt;
&lt;li&gt;It supports so many REST and GraphQL databases like NestJs CRUD, Airtable, Strapi, Strapi GraphQL, Supabase, Hasura, and Altogic.&lt;/li&gt;
&lt;li&gt;It makes your codebase significantly smaller, by eliminating redundant code such as reducers, actions, and unit tests.&lt;/li&gt;
&lt;li&gt;It uses &lt;strong&gt;hooks&lt;/strong&gt; as a default way of interacting with components.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It can mainly be used for applications that need to process large volumes of data like admin panels, dashboards, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-hydrogen"&gt;
  &lt;/a&gt;
  2. Hydrogen
&lt;/h2&gt;

&lt;p&gt;The second framework is &lt;a href="https://hydrogen.shopify.dev"&gt;Hydrogen&lt;/a&gt; by &lt;a href="https://shopify.dev"&gt;Shopify&lt;/a&gt; launched a few weeks ago.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5fhomT0_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7h157rsajks28812oga5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5fhomT0_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7h157rsajks28812oga5.png" alt="hydrogen website" width="880" height="451"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hydrogen is another React-based framework to build e-commerce sites. It is like NextJs because it provides server-side rendering. But there are limitations with this framework - currently, you can only build Shopify web storefronts. &lt;br&gt;
The cool thing is you can directly host your e-commerce site on Shopify with &lt;strong&gt;Oxygen&lt;/strong&gt; which Shopify will launch soon.&lt;/p&gt;




&lt;p&gt;What do you think about these frameworks? Comment below 👇&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tool-of-the-week"&gt;
  &lt;/a&gt;
  ⚒️Tool of the week⚒️
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://responsively.app"&gt;Responsively&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Responsively is a DevTool for front-end developers. You can see your website on different display sizes. It is open-source and free to use.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2_GA8vkz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://responsively.app/assets/img/screenshot.png" alt="Responsively app" width="880" height="495"&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Hoping this helps you!&lt;br&gt;
Save for reference.&lt;br&gt;
Follow for more awesomeness 😀.&lt;br&gt;
You can connect with me on &lt;a href="https://twitter.com/rakesh_at_tweet"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/rakesh-potnuru-067a8b1b1"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Create dynamic custom shields for your GitHub Readme!</title>
      <author>Sanjay Kumar Baskaran</author>
      <pubDate>Sun, 05 Dec 2021 11:05:31 +0000</pubDate>
      <link>https://dev.to/sanjaybaskaran01/create-custom-shields-for-your-github-readme-5bfi</link>
      <guid>https://dev.to/sanjaybaskaran01/create-custom-shields-for-your-github-readme-5bfi</guid>
      <description>&lt;p&gt;This article explains how to create a custom dynamic shield that will change over time using shields.io.&lt;/p&gt;

&lt;p&gt;Ever wanted to display your discord bot servers count on your GitHub repository?&lt;br&gt;
The article covers that too.&lt;/p&gt;

&lt;p&gt;I implemented this for my discord bot, Valorina.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/sanjaybaskaran01"&gt;
        sanjaybaskaran01
      &lt;/a&gt; / &lt;a href="https://github.com/sanjaybaskaran01/Valorina"&gt;
        Valorina
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Discord 🤖 to never miss a Valorant skin drop!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://discord.com/oauth2/authorize?client_id=888741654482272276&amp;amp;permissions=2147739648&amp;amp;scope=bot" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b3d6babd707b460d422cb09b968449c8e139d37a49c2ec00e9547374966c4a9b/68747470733a2f2f696d672e736869656c64732e696f2f656e64706f696e743f75726c3d68747470732533412532462532467365727665722d636f756e742d73616e6a61796261736b6172616e30312e76657263656c2e617070253246617069" alt="valorina"&gt;&lt;/a&gt;
&lt;a href="https://github.com/sanjaybaskaran01/Valorina/issues"&gt;&lt;img src="https://camo.githubusercontent.com/635040a5d31ec5e8b0e5c4c3eb4b89fbf7deb9b9cdd3807aff84d3a950ccc14d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f73616e6a61796261736b6172616e30312f56616c6f72696e613f7374796c653d666f722d7468652d6261646765" alt="Issues"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;
  &lt;a href="https://discord.com/oauth2/authorize?client_id=888741654482272276&amp;amp;permissions=2147739648&amp;amp;scope=bot" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/e82df88b524cf846ca6249affbb86974e2d74e7f9d02d036f1be627ea40e288c/68747470733a2f2f692e696d6775722e636f6d2f4869415a324e452e706e67" alt="Logo" width="80"&gt;
  &lt;/a&gt;
  &lt;/p&gt;
&lt;h3&gt;
Valorina&lt;/h3&gt;
  &lt;p&gt;
    Discord bot for all valorant skin enthusiasts
    &lt;br&gt;
    &lt;br&gt;
  &lt;a href="https://discord.com/oauth2/authorize?client_id=888741654482272276&amp;amp;permissions=2147739648&amp;amp;scope=bot" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/27f61b33627625d82923e94c0288e40f5b00b639b4aa0381dd2795a92e50ede3/68747470733a2f2f692e696d6775722e636f6d2f6c396e4a784c332e706e67" alt="invite" width="115"&gt;
  &lt;/a&gt;
  &lt;/p&gt;
  &lt;p&gt;
    &lt;a href="https://top.gg/bot/888741654482272276" rel="nofollow"&gt;Top.gg&lt;/a&gt;
    ·
    &lt;a href="https://github.com/sanjaybaskaran01/Valorina/issues"&gt;Report Bug&lt;/a&gt;
    ·
    &lt;a href="https://github.com/sanjaybaskaran01/Valorina/issues"&gt;Request Feature&lt;/a&gt;
  &lt;/p&gt;
&lt;h2&gt;
Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sanjaybaskaran01/Valorina#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sanjaybaskaran01/Valorina#about-the-project"&gt;About The Project&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sanjaybaskaran01/Valorina#built-with"&gt;Built With&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sanjaybaskaran01/Valorina#features-and-commands"&gt;Features and Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sanjaybaskaran01/Valorina#automated-reminders"&gt;Automated Reminders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sanjaybaskaran01/Valorina#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sanjaybaskaran01/Valorina#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sanjaybaskaran01/Valorina#contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
About The Project&lt;/h2&gt;

&lt;p&gt;Check the skins available in your store and balance using Valorina without having to open the Valorant client and get notified whenever your favourite skins are up for grabs! 🥳 🎊&lt;/p&gt;
&lt;h3&gt;
Built With&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.python.org/" rel="nofollow"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discordpy.readthedocs.io/en/stable/" rel="nofollow"&gt;DiscordPy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.mongodb.com/drivers/pymongo/" rel="nofollow"&gt;PyMongo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Features and Commands&lt;/h2&gt;
&lt;br&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;+help
Summary of all available commands
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/sanjaybaskaran01/Valorina./assets/+help.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q8FbRZ5k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/sanjaybaskaran01/Valorina./assets/%2Bhelp.gif" alt="+help" width="500"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;+adduser &amp;lt;username&amp;gt; &amp;lt;password&amp;gt; &amp;lt;region&amp;gt;
Adds the user (IN DM COMMAND)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/sanjaybaskaran01/Valorina./assets/+adduser.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Spxliw7F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/sanjaybaskaran01/Valorina./assets/%2Badduser.gif" alt="+adduser" width="500"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;+store &amp;lt;username&amp;gt; &amp;lt;region&amp;gt;
Shows all the available weapon skins in your store
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/sanjaybaskaran01/Valorina./assets/+store.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lMThgtmP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/sanjaybaskaran01/Valorina./assets/%2Bstore.gif" alt="+store" width="500"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;+bal &amp;lt;username&amp;gt; &amp;lt;region&amp;gt;
Shows the balance of your account
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/sanjaybaskaran01/Valorina./assets/+bal.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wlbKyyqn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/sanjaybaskaran01/Valorina./assets/%2Bbal.gif" alt="+bal" width="500"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;+reminder &amp;lt;username&amp;gt; &amp;lt;region&amp;gt; &amp;lt;skin name&amp;gt;
Sets reminder of your favourite skin and notifies you if it is available in your store (IN DM COMMAND)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/sanjaybaskaran01/Valorina./assets/+reminder.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DTwELaF5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/sanjaybaskaran01/Valorina./assets/%2Breminder.gif" alt="+reminder" width="500"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;
Automated Reminders&lt;/h2&gt;
&lt;p&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/sanjaybaskaran01/Valorina./assets/automated.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nJ7KTWcO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/sanjaybaskaran01/Valorina./assets/automated.gif" alt="reminderoutput" width="500"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;Contributions are what make the open source community such an…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/sanjaybaskaran01/Valorina"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-we-are-going-to-accomplish"&gt;What we are going to accomplish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#file-structure"&gt;File Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#how-we-are-going-to-accomplish-it"&gt;How we are going to accomplish it&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="//#mongodb-and-bot.py"&gt;MongoDB and Bot.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#creating-the-backend-api-endpoint-to-generate-a-badge"&gt;Creating the Backend API endpoint to generate a badge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#customise-the-shield"&gt;Customise the shield&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hosting-the-backend-using-vercel"&gt;Hosting the backend using vercel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  &lt;b&gt; Prerequisites &lt;/b&gt;
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;MongoDB &lt;/li&gt;
&lt;li&gt;Discord.py or Discord.js&lt;/li&gt;
&lt;li&gt;Free Vercel account or any server to host backend endpoint&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#what-we-are-going-to-accomplish"&gt;
  &lt;/a&gt;
  &lt;b&gt; What we are going to accomplish &lt;/b&gt;
&lt;/h2&gt;

&lt;p&gt;Build a Github badge that display the server count of the bot and dynamically update when added to a new server&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OU4crJIx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/endpoint%3Furl%3Dhttps%253A%252F%252Fserver-count-sanjaybaskaran01.vercel.app%252Fapi" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OU4crJIx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/endpoint%3Furl%3Dhttps%253A%252F%252Fserver-count-sanjaybaskaran01.vercel.app%252Fapi" alt="valorina-badge" width="308" height="28"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#file-structure"&gt;
  &lt;/a&gt;
  &lt;b&gt; File structure &lt;/b&gt;
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;.&lt;/span&gt;
├── server_count &lt;span class="o"&gt;(&lt;/span&gt;Backend folder&lt;span class="o"&gt;)&lt;/span&gt;
│   ├── index.js
│   ├── models
│   │   └── server.js
│   ├── package.json
│   ├── package-lock.json
│   └── vercel.json
└── Valorina &lt;span class="o"&gt;(&lt;/span&gt;Bot folder&lt;span class="o"&gt;)&lt;/span&gt;
    ├── bot.py
    ├── db.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#how-we-are-going-to-accomplish-it"&gt;
  &lt;/a&gt;
  &lt;b&gt; How we are going to accomplish it &lt;/b&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#mongodb-and-botpy"&gt;
  &lt;/a&gt;
  MongoDB and Bot.py
&lt;/h3&gt;

&lt;p&gt;Create a new collection in mongoDB&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C5ZXQosq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/effs1axhfw7jbaydqxp7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C5ZXQosq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/effs1axhfw7jbaydqxp7.png" alt="new collection" width="603" height="466"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create a new document in your mongoDB collection&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WF2dqyDH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a5povxbiwc0ji9yl6917.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WF2dqyDH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a5povxbiwc0ji9yl6917.png" alt="document creation" width="598" height="503"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Copy the ID of the document which is 619637ac508090df22a468b5 for me&lt;/p&gt;

&lt;p&gt;Now on your db.py, we are creating a function which will find this document,create a field in it called "server_count" and set the count&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# db.py
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pymongo&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MongoClient&lt;/span&gt;

&lt;span class="n"&gt;MONGO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"mongodb+srv://name:password@etcetc.mongodb.net"&lt;/span&gt; &lt;span class="c1"&gt;# Mongo string 
&lt;/span&gt;&lt;span class="n"&gt;ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"619637ac508090df22a468b5"&lt;/span&gt; &lt;span class="c1"&gt;# ID of Mongo document that will contain the server count
&lt;/span&gt;&lt;span class="n"&gt;cluster&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MongoClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MONGO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cluster&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"discord"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# Name of your cluster
&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;updateServerCount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;collection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'servers'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# Name of the collection in your cluster
&lt;/span&gt;    &lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'_id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ObjectId&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;)},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"$set"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="s"&gt;'server_count'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;}})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now on your bot.py, we will use updateServerCount function whenever the bot joins a new server&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# bot.py
&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;discord&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;db&lt;/span&gt;
&lt;span class="c1"&gt;# All other imports
&lt;/span&gt;
&lt;span class="c1"&gt;# Create a bot event or client event depending on what you are using
&lt;/span&gt;
&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_guild_join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;guilds&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;guilds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# array with all the servers but we need just its length
&lt;/span&gt;    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;updateServerCount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# function that will update server count
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#creating-the-backend-api-endpoint-to-generate-a-badge"&gt;
  &lt;/a&gt;
  &lt;b&gt; Creating the Backend API endpoint to generate a badge &lt;/b&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init &lt;span class="nt"&gt;-y&lt;/span&gt;
npm i express
npm i mongoose
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; vercel
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a new folder called model for the schema of the document&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// /models/server.js&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Schema&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ServerSchema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Schema&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;server_count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;server count is required&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Servers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;servers&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ServerSchema&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// servers is the name of the collection in mongoDB&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Servers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create an index.js file in the folder&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// index.js&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;


&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MONGO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mongodb+srv://name:password@etcetc.mongodb.net&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; 
&lt;span class="c1"&gt;// Mongo string &lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;619637ac508090df22a468b5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; 
&lt;span class="c1"&gt;// ID of Mongo document that will contain the server count&lt;/span&gt;

&lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;MONGO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;useUnifiedTopology&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Promise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;global&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Servers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./models/server&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;3001&lt;/span&gt;


&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;servers_count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Servers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;schemaVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Valorina #6711&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`Server count: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;servers_count&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;server_count&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;namedLogo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Discord&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;labelColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;586AEA&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;for-the-badge&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;logoColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;white&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;FE424F&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`listening to port &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us look at what we have created&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node index.js
listening to port 3001
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If everything went as instructed we should receive this when we open &lt;a href="http://localhost:3001/api"&gt;localhost:3001/api&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o1WQAPIX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a88cnznl9iosb0ostonj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o1WQAPIX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a88cnznl9iosb0ostonj.png" alt="localhost" width="880" height="464"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have successfully built an endpoint which sheilds.io can utilise&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#customise-the-shield"&gt;
  &lt;/a&gt;
  &lt;b&gt; Customise the shield &lt;/b&gt;
&lt;/h3&gt;

&lt;p&gt;Please feel free to customise the shield to your liking&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lDDlGxFr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/acs81yqbuf89enbq9swu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lDDlGxFr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/acs81yqbuf89enbq9swu.png" alt="shields.io" width="804" height="752"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once done we can head over to &lt;a href="https://shields.io/endpoint"&gt;shields.io/endpoint&lt;/a&gt; and try previewing the shield. &lt;/p&gt;

&lt;p&gt;But we stumble into a problem here. shields.io does not accept endpoints from localhosts we must host this backend that we have created somewhere.&lt;/p&gt;

&lt;p&gt;Vercel comes handy in this scene.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hosting-the-backend-using-vercel"&gt;
  &lt;/a&gt;
  &lt;b&gt; Hosting the backend using vercel &lt;/b&gt;
&lt;/h3&gt;

&lt;p&gt;Please feel free to host the backend in any cloud services, we are using Vercel since it is free.&lt;/p&gt;

&lt;p&gt;run the command &lt;code&gt;vercel&lt;/code&gt; in root of backend&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;? Set up and deploy “~/Desktop/username/vercel-node-app”? &lt;span class="o"&gt;[&lt;/span&gt;Y/n] y
? Which scope &lt;span class="k"&gt;do &lt;/span&gt;you want to deploy to? username
? Link to existing project? &lt;span class="o"&gt;[&lt;/span&gt;y/N] n
? What’s your project’s name? server-count
? In which directory is your code located? ./
No framework detected. Default Project Settings:
- Build Command: &lt;span class="sb"&gt;`&lt;/span&gt;npm run vercel-build&lt;span class="sb"&gt;`&lt;/span&gt; or &lt;span class="sb"&gt;`&lt;/span&gt;npm run build&lt;span class="sb"&gt;`&lt;/span&gt;
- Output Directory: &lt;span class="sb"&gt;`&lt;/span&gt;public&lt;span class="sb"&gt;`&lt;/span&gt; &lt;span class="k"&gt;if &lt;/span&gt;it exists, or &lt;span class="sb"&gt;`&lt;/span&gt;.&lt;span class="sb"&gt;`&lt;/span&gt;
- Development Command: None
? Want to override the settings? &lt;span class="o"&gt;[&lt;/span&gt;y/N] n
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We need to create a vercel.json in the root of backend,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"builds"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"src"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"./index.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"use"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"@vercel/node"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"routes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"src"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/(.*)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"dest"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now run the command &lt;code&gt;vercel&lt;/code&gt; again and we will find fully working deployed link which has all the routes, copy that link eg: &lt;a href="https://server-count-sanjaybaskaran01.vercel.app/api"&gt;server-count-sanjaybaskaran01.vercel.app/api&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Head over to shields.io/endpoint &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8HRQ62Lr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ncy5n035jo54lh79yqz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8HRQ62Lr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ncy5n035jo54lh79yqz.png" alt="shields.io endpoint" width="678" height="402"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Voilà! 🎊🎊&lt;/p&gt;

&lt;p&gt;We have successfully created a Github shield for our discord bot which will dynamically display the amount of servers in which the bot is a part of. &lt;/p&gt;

</description>
      <category>github</category>
      <category>javascript</category>
      <category>discord</category>
      <category>python</category>
    </item>
    <item>
      <title>Learning Blockchain development #day1 - As a frontend developer.</title>
      <author>kritik sah</author>
      <pubDate>Sun, 05 Dec 2021 10:50:47 +0000</pubDate>
      <link>https://dev.to/kritik/learning-blockchain-development-day1-as-a-frontend-developer-579b</link>
      <guid>https://dev.to/kritik/learning-blockchain-development-day1-as-a-frontend-developer-579b</guid>
      <description>&lt;p&gt;Hello Everyone, I am Kritik Sah and i am a frontend end developer.&lt;br&gt;
I use HTML, CSS, Bootstrap and JavaScript to build a frontend website.&lt;br&gt;
Now I am learning react.js &amp;amp; tailwind css for frontend development. NEXT.js for fullstack development and Mongodb as our database.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gS1Dmq57--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hosasajs2k6yvtly3oyc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gS1Dmq57--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hosasajs2k6yvtly3oyc.jpg" alt="my time optmization" width="880" height="622"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm will follow this time table which i created for myself.&lt;/p&gt;

&lt;p&gt;Starting My blockchain Developer journey from today, I am very confused Where to start and how to progress. I did my research on this but i got myself more confused. That's why i am jumping right Into the dev space for help , support  and collaboration i will be greatful.&lt;/p&gt;




&lt;p&gt;What i did in last few weeks.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Trying to find out what blockchain is and how it works.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Now i understood about Blockchain  and how it works, Why we have to pay gas and How minners are helping the ecosystems, And about L2 solution to overcome high gas fees.&lt;br&gt;
Diffrence between Mainnet vs Testnet, Currency(BNB) VS TOKEN(CAKE)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What are the requirements to Build a dAPP's, I still don't know much about this.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We need a basic web development experience to build a simple website.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We need a wallet lets say MetaMask.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;IDE as a beginner I think &lt;a href="https://remix.ethereum.org/"&gt;remix.ethereum.org&lt;/a&gt; will be a good fit for me, Later we will use VS Code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Solidity(Programing Language)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;openzeppelin and other npm pakages (not sure about which to use).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;learn things one at a time and connect with people and learn together.&lt;br&gt;
if you want to connect with me, and build projects together, join my &lt;a href="https://discord.gg/2BBhj8VCpb"&gt;discord server&lt;/a&gt;. Thank you!.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#we-will-try-to-build-our-first-dapp-with-nextjs-and-tailwind-css-molarir-or-infura-in-our-next-session"&gt;
  &lt;/a&gt;
  We will try to build our first Dapp with next.js and tailwind CSS + Molarir or Infura in our next session
&lt;/h2&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>blockchain</category>
    </item>
    <item>
      <title>Form with pop-up button</title>
      <author>ProTec Games</author>
      <pubDate>Sun, 05 Dec 2021 10:39:48 +0000</pubDate>
      <link>https://dev.to/prakhardoneria/form-with-pop-up-button-4eab</link>
      <guid>https://dev.to/prakhardoneria/form-with-pop-up-button-4eab</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/PrakharDoneria/embed/dyVYEYK?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>html</category>
      <category>email</category>
    </item>
    <item>
      <title>Practical sales tips (or "The psychology of selling" mini-summary)</title>
      <author>RockAndNull</author>
      <pubDate>Sun, 05 Dec 2021 10:17:29 +0000</pubDate>
      <link>https://dev.to/rockandnull/practical-sales-tips-or-the-psychology-of-selling-mini-summary-389j</link>
      <guid>https://dev.to/rockandnull/practical-sales-tips-or-the-psychology-of-selling-mini-summary-389j</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AKA2WDFH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1521791136064-7986c2920216%3Fcrop%3Dentropy%26cs%3Dtinysrgb%26fit%3Dmax%26fm%3Djpg%26ixid%3DMnwxMTc3M3wwfDF8c2VhcmNofDR8fHNhbGVzfGVufDB8fHx8MTYzODY5OTExMg%26ixlib%3Drb-1.2.1%26q%3D80%26w%3D2000" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AKA2WDFH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1521791136064-7986c2920216%3Fcrop%3Dentropy%26cs%3Dtinysrgb%26fit%3Dmax%26fm%3Djpg%26ixid%3DMnwxMTc3M3wwfDF8c2VhcmNofDR8fHNhbGVzfGVufDB8fHx8MTYzODY5OTExMg%26ixlib%3Drb-1.2.1%26q%3D80%26w%3D2000" alt='Practical sales tips (or "The psychology of selling" mini-summary)' width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are many books on sales. But if you wanted to read the few most popular ones, "&lt;a href="https://smile.amazon.com/Psychology-Selling-Increase-Thought-Possible/dp/0785288066"&gt;The pychology of selling&lt;/a&gt;" would probably be on top of that list.&lt;/p&gt;

&lt;p&gt;This sales classic is full of practical advice, insights, and strategies on how to approach and excel in sales, no matter if you are a pro or just getting started.&lt;/p&gt;

&lt;p&gt;Without further ado, let's see a super quick summary of the book.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#chapter-1-the-inner-game-of-selling"&gt;
  &lt;/a&gt;
  Chapter 1: The inner game of selling
&lt;/h2&gt;

&lt;p&gt;Mostly a "self-help" (but important) chapter.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Decide to do the small things consistently over time. Eventually, the results will accumulate into an extraordinary difference from the competition.&lt;/li&gt;
&lt;li&gt;Do not be afraid to go and ask the best for advice and guidance. You will be surprised that most of them are eager to share and teach.&lt;/li&gt;
&lt;li&gt;Don't forget that rejection is not personal. It's part of the sales game. Bounce-back immediately.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#chapter-2-set-and-achieve-your-sales-goal"&gt;
  &lt;/a&gt;
  Chapter 2: Set and achieve your sales goal
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Set clear (and realistic) targets on what you want to achieve. Your subconscious will work for you for identifying opportunities on achieving your goals.&lt;/li&gt;
&lt;li&gt;Visualization and affirmations are the most powerful tools for activating your subconscious. Visualize yourself as an expert in prospecting, presenting, and closing sales. Every time your repeat an affirmation as a command you help shape your subconscious mind.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#chapter-3-why-people-buy"&gt;
  &lt;/a&gt;
  Chapter 3: Why people buy
&lt;/h2&gt;

&lt;p&gt;Maybe the most important chapter.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Uncover basic needs by questioning and listening carefully. Listen more than you talk.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The one who asks the questions has control over the conversation. Be that one.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;The desire for gain has motivational power of 1. Fear of loss has a negative motivational power of 2.5. Fear is 2x more powerful than the desire for gain -&amp;gt; People are more motivated to buy if they feel they are going to lose something by not buying.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;People decide emotionally and then justify logically.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Increase the intensity of buying desire and lower the fears of making a mistake by offering money-back guarantees and freebies with high value&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#chapter-4-creative-selling"&gt;
  &lt;/a&gt;
  Chapter 4: Creative selling
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Determine exactly what your product does for your customers. Be a specialist instead of a generalist.&lt;/li&gt;
&lt;li&gt;Which customers can most benefit from what you do better than anyone else.&lt;/li&gt;
&lt;li&gt;Set clear priorities and concentrate single-mindedly on prospects who represent only the very best potential as a customer.&lt;/li&gt;
&lt;li&gt;Brainstorm 250 ideas every year and it would have a tremendous impact on your career.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#chapter-5-getting-more-appointments"&gt;
  &lt;/a&gt;
  Chapter 5: Getting more appointments
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;When cold calling, always ask if it's the right time to talk. Only then launch your pitch.&lt;/li&gt;
&lt;li&gt;The first sale is the appointment. Sell the appointment, not the product over the phone (except if you are certain you can close the deal).&lt;/li&gt;
&lt;li&gt;Choose your words carefully. Your prospect is probably doing something else while you talk on the phone. Aim for the "really, can you do that?!" reaction. Stay benefit-center (benefit for your prospect).&lt;/li&gt;
&lt;li&gt;Before a prospect agrees to meet, they need to be assured of: (1) You have something important to communicate, (2) He or she is speaking to the right person, (3) It will be a short visit/talk, (4) Not be placed under any obligation, (5) No high pressure will be used.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#chapter-6-the-power-of-suggestion"&gt;
  &lt;/a&gt;
  Chapter 6: The power of suggestion
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;People are affected by: (1) external elements (people around them), (2) internal elements (appearance, voice, attitude).&lt;/li&gt;
&lt;li&gt;95% of the impression comes from clothing. Aim for colorful attractive visuals. Presentation material should be clean and neat.&lt;/li&gt;
&lt;li&gt;Sales conversion is 55% Body Language, 38% tone of voice, 7% words used.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#chapter-7-making-the-sale"&gt;
  &lt;/a&gt;
  Chapter 7: Making the sale
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Most prospects have "generalized sales resistance". Understand it and work to break it.&lt;/li&gt;
&lt;li&gt;
&lt;u&gt;The approach close&lt;/u&gt;: agree in advance on getting a decision at the end of the presentation to avoid the "I will think about it" responses. Use something like: "All I ask is that you look at what I have to show you with an open mind, determine if it applies to your situation, and tell me at the end of our conversation if this product makes sense.". Fulfill your end, and demand some response at the end of the presentation.&lt;/li&gt;
&lt;li&gt;
&lt;u&gt;The demonstration close&lt;/u&gt;: convert the question from "will you listen to me" to "how much you can invest". Use something like: "I could show you the best on the market today, are you in the position to invest in XYZ right now?"&lt;/li&gt;
&lt;li&gt;Never forget the 3 part presentation: (1) Because of this…(product feature), (2) You can…(product benefit), (3) Which means…(customer benefit)&lt;/li&gt;
&lt;li&gt;And the 5 keys for effective listening: (1) Listen attentively, (2) Pause Before Replying, (3) Question for clarification, (4) Paraphrase in your own words, (5) Use Open-Ended questions&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#the-types-of-buyers"&gt;
  &lt;/a&gt;
  The types of buyers
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;The apathetic buyer – don't waste your time, always rejecting&lt;/li&gt;
&lt;li&gt;The self-actualizing buyer –they know exactly what they want, if you are offering this then you got a deal&lt;/li&gt;
&lt;li&gt;The analytical buyer – they want proof and time to analyze what you are selling&lt;/li&gt;
&lt;li&gt;The relater buyer – they rely on relationships on helping and being helped, give them plenty of time and build a relationship with them&lt;/li&gt;
&lt;li&gt;The driver buyer – they are super busy and don't want intros, get straight to the point&lt;/li&gt;
&lt;li&gt;The socialized buyer – they are achievement-oriented, as soon as you agree get it on paper.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#chapter-10-8-keys-to-success"&gt;
  &lt;/a&gt;
  Chapter 10: 8 keys to success
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Do what you love to do and be excellent in it.&lt;/li&gt;
&lt;li&gt;Decide exactly what you want.&lt;/li&gt;
&lt;li&gt;Back your goal with persistence and determination&lt;/li&gt;
&lt;li&gt;Commit to lifelong learning&lt;/li&gt;
&lt;li&gt;Use your time well&lt;/li&gt;
&lt;li&gt;Follow the leaders&lt;/li&gt;
&lt;li&gt;Character is everything&lt;/li&gt;
&lt;li&gt;Unlock your inborn creativity&lt;/li&gt;
&lt;li&gt;Practice the Golden Rule&lt;/li&gt;
&lt;li&gt;Pay the price of success&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>business</category>
    </item>
    <item>
      <title>Day 56 of 100 Days of Code &amp; Scrum: Working On Ghost For Blogging This Week</title>
      <author>Rammina</author>
      <pubDate>Sun, 05 Dec 2021 10:00:29 +0000</pubDate>
      <link>https://dev.to/rammina/day-56-of-100-days-of-code-scrum-working-on-ghost-for-blogging-this-week-kj9</link>
      <guid>https://dev.to/rammina/day-56-of-100-days-of-code-scrum-working-on-ghost-for-blogging-this-week-kj9</guid>
      <description>&lt;p&gt;Happy Sunday, everyone!&lt;/p&gt;

&lt;p&gt;My main objective for this week is to get my professional blog up and running. I intend to use a combination of Next.js frontend deployed on Vercel and Ghost headless CMS deployed on Heroku. If possible, I would like to deploy two applications (main site and blog) in separate repositories, but on the same domain.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;Just like I do every weekend, I did my 8th Weekly Sprint Review and Retrospective, in which I went over what I've managed to do well, what my shortcomings were, and what I could do better in the future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;I set up my weekly Sprint Goals, which will focus on my &lt;strong&gt;professional blog&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weekly-sprint-goals"&gt;
  &lt;/a&gt;
  Weekly Sprint Goals
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;code my blog's Next.js frontend.&lt;/li&gt;
&lt;li&gt;setup Ghost headless CMS.&lt;/li&gt;
&lt;li&gt;have the frontend communicate with Ghost Content API.&lt;/li&gt;
&lt;li&gt;fix the bugs in my company website.&lt;/li&gt;
&lt;li&gt;continue to learn Next.js and Typescript by using concepts while I build my blog or maybe just from reading documentations.&lt;/li&gt;
&lt;li&gt;continue studying for Professional Scrum Master I (PSM I) certification.&lt;/li&gt;
&lt;li&gt;continue networking.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Have a great week, everyone!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" alt="Rammina Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ghost.org/docs/content-api/"&gt;Content API | Ghost&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/docs/deployment"&gt;Deployment | Next.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/learn/basics/create-nextjs-app?utm_source=next-site&amp;amp;utm_medium=nav-cta&amp;amp;utm_campaign=next-website"&gt;Official Next.js tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#other-media"&gt;
  &lt;/a&gt;
  Other Media
&lt;/h3&gt;

&lt;p&gt;Feel free to reach out to me in other media!&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://www.rammina.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BK-zilS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1638444046/rammina-button-128_x9ginu.png" alt="Rammina Logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://twitter.com/RamminaR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C341ckO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636792959/twitter-logo_laoyfu_pdbagm.png" alt="Twitter logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://github.com/Rammina"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4ZlXeay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636795051/GitHub-Emblem2_epcp8r.png" alt="Github logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Make a toast with HTML, CSS, and JS</title>
      <author>Anish De</author>
      <pubDate>Sun, 05 Dec 2021 09:56:40 +0000</pubDate>
      <link>https://dev.to/anishde12020/make-a-toast-with-html-css-and-js-25if</link>
      <guid>https://dev.to/anishde12020/make-a-toast-with-html-css-and-js-25if</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Toasts are very useful for showing users some information. It has a wide variety of uses from displaying success messages for successful actions, showing error messages in case something goes wrong, and much more. Today we are going to build a simple toast with HTML and CSS. We are going to be using some javascript to add some interactivity.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-we-are-making-"&gt;
  &lt;/a&gt;
  What we are making -
&lt;/h3&gt;

&lt;p&gt;We are going to be making a toast that shows up when a button is clicked. It can also be closed, which is hidden away, by clicking a close button.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/anishde12020/embed/JjrYMrW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#basic-css-to-make-a-toast"&gt;
  &lt;/a&gt;
  Basic CSS to make a toast
&lt;/h2&gt;

&lt;p&gt;To make a toast animate in or out, we need to make the toast first. For this example, I am going to add a simple icon and some text in a box and that is going to be our toast.&lt;/p&gt;

&lt;p&gt;So, in the markup, let us start by adding a &lt;code&gt;div&lt;/code&gt; for out toast -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"toast"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"toast"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we need to add an icon. I am going to grab a simple information icon from &lt;a href="https://heroicons.com/"&gt;HeroIcons&lt;/a&gt; and put in the SVG -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"toast"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"toast"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 24 24"&lt;/span&gt; &lt;span class="na"&gt;stroke=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;stroke-linecap=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-linejoin=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-width=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let us also add a text -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"toast"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"toast"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 24 24"&lt;/span&gt; &lt;span class="na"&gt;stroke=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;stroke-linecap=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-linejoin=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-width=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Some Information&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is what our page should look like - &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aOMRfIBT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638691425468/rYVyqWbLO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aOMRfIBT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638691425468/rYVyqWbLO.png" alt="image.png" width="880" height="479"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The icon is so big that is doesn't even fit in the view. Let us fix this design with some CSS and then style it.&lt;/p&gt;

&lt;p&gt;First, we are going to style the icon by defining a width and a height -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.icon&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let us now make our toast a flexbox and add some margin on the icon. I am also going to position the toast on the top-right using an absolute position.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.icon&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.toast&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CxsAO6Xq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638691746319/Xe8uqB4fX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CxsAO6Xq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638691746319/Xe8uqB4fX.png" alt="image.png" width="880" height="481"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Everything looks good except for the styling. Let us add some colors and other styles -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.icon&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.text&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.toast&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#029c91&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have changed the background color of the toast, added a border to it, added some border radius, and changed the colors of the icon and the text so that they are visible on the black background.&lt;/p&gt;

&lt;p&gt;This is how our toast should now look like - &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HBgP0JEF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638691938348/ZVHA6pQDM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HBgP0JEF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638691938348/ZVHA6pQDM.png" alt="image.png" width="880" height="482"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let us also add a button that will trigger the animation, that is, show the toast -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"toast"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"toast"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 24 24"&lt;/span&gt; &lt;span class="na"&gt;stroke=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;stroke-linecap=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-linejoin=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-width=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Some Information&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"show-toast"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"show-toast"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Show Toast&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let us also style this button as it looks quite ugly now&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.show-toast&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let us also disable any overflow -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is how everything should look like now - &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EtbtPmWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638692227596/Bp9zQYJd3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EtbtPmWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638692227596/Bp9zQYJd3.png" alt="image.png" width="880" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-animations"&gt;
  &lt;/a&gt;
  Adding animations
&lt;/h2&gt;

&lt;p&gt;Now that we have the toast and a button to trigger the animations, it is time to add the animations.&lt;/p&gt;

&lt;p&gt;First of all, we are going to give the toast a starting point by putting it outside the view. So let us edit the CSS for the toast -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.toast&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-500px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#029c91&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us make a new class called &lt;code&gt;toast-active&lt;/code&gt; that will get added to the toast whenever the button is clicked -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.toast-active&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that we are also changing the opacity during the transition. This just makes it look a little better.&lt;/p&gt;

&lt;p&gt;Now let us write some javascript to add this class to the toast whenever the button is clicked -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;toast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;toast&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;show-toast&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;toast-active&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, whenever the button is clicked, the &lt;code&gt;toast-active&lt;/code&gt; class is being added to the toast. Right now the animation is instant, which doesn't look good. Let us add a transition -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.toast&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-500px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#029c91&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="m"&gt;0.25s&lt;/span&gt; &lt;span class="n"&gt;ease-out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here the transition goes on for a quarter of a second and we have also eased it out so it isn't harsh.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-a-close-button-to-the-toast"&gt;
  &lt;/a&gt;
  Adding a close button to the toast
&lt;/h2&gt;

&lt;p&gt;We would like to give the user a close button that they can click to close the toast.&lt;/p&gt;

&lt;p&gt;First of all, we need to add a button the the toast in our markup -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"toast"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"toast"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 24 24"&lt;/span&gt; &lt;span class="na"&gt;stroke=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;stroke-linecap=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-linejoin=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-width=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Some Information&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"close-button"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"close-button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="ni"&gt;&amp;amp;#10005;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"show-toast"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"show-toast"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Show Toast&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let us also style it so that it is visible -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.close-button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, when this button will be clicked, it will just do the reverse of what the show toast button did, that is, remove the &lt;code&gt;toast-active&lt;/code&gt; class -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;close-button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;toast-active&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, clicking the cross symbol (close button) in the toast should take it away from the screen with a transition.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;If everything has worked out well so far, give yourself a pat on the back because you have just built a toast with nothing but HTML, CSS, and JS!!! &lt;/p&gt;

&lt;p&gt;If you had any issues, feel free to comment down below or reach out to me via &lt;a href="https://twitter.com/AnishDe12020"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;p&gt;Codepen for this project - &lt;a href="https://codepen.io/anishde12020/pen/JjrYMrW"&gt;https://codepen.io/anishde12020/pen/JjrYMrW&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;HeroIcons - &lt;a href="https://heroicons.com/"&gt;https://heroicons.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My Twitter - &lt;a href="https://twitter.com/AnishDe12020"&gt;https://twitter.com/AnishDe12020&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
