<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>16 Best Ruby Frameworks For Web Development</title>
      <author>Harish Rajora</author>
      <pubDate>Tue, 08 Jun 2021 08:33:12 +0000</pubDate>
      <link>https://dev.to/harishrajora12/16-best-ruby-frameworks-for-web-development-3l9i</link>
      <guid>https://dev.to/harishrajora12/16-best-ruby-frameworks-for-web-development-3l9i</guid>
      <description>&lt;p&gt;Ruby is a programming language that has been accepted with open arms since 1995, and thanks to its open-source nature, it is still growing every day. Ruby is fast, object-oriented, and secure, which brings a dynamic nature into the project with an MVC support structure that makes development more comfortable than ever. With start-ups openly accepting Ruby, the language has shown remarkable progress in almost every field, especially web development. Ruby’s popularity motivated people to take the development to the next level and bring out some best ruby frameworks for the developers.&lt;/p&gt;

&lt;p&gt;Some frameworks are built to ease out middleware and request/response of the application. Some are made for REST APIs and others for web applications. Collecting the best ruby frameworks from across the globe, in this post, we’ll talk about these frameworks and how each framework lets the developer take advantage of Ruby.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#best-ruby-frameworks-for-web-development"&gt;
  &lt;/a&gt;
  Best Ruby Frameworks For Web Development
&lt;/h2&gt;

&lt;p&gt;Without further ado, let’s delve into details of the best ruby frameworks for web development that will surely benefit your business.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ruby-on-rails"&gt;
  &lt;/a&gt;
  Ruby on Rails
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://rubyonrails.org/"&gt;Ruby on Rails&lt;/a&gt; is regarded as one of the best ruby frameworks. It was the primary language in developing big projects such as Twitter and helped the language boost the community. Often referred to as “Rails,” Ruby on Rails is a web development framework with an MVC control structure and currently running its 6.1 version. The 16-year-old language has dramatically influenced the web development structures and managing databases, web pages, and other components on a web application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9ljVFjbR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Ruby-on-Rails-1024x681.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ljVFjbR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Ruby-on-Rails-1024x681.png" alt="Ruby on Rails"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ruby on Rails has an extensive plugin library called “gems” and can be distributed and installed through the popular Ruby package manager called RubyGems. The most notable Ruby on Rails projects include Twitter, Airbnb, and Bloomberg.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sinatra"&gt;
  &lt;/a&gt;
  Sinatra
&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://sinatrarb.com/"&gt;Sinatra&lt;/a&gt; is the best ruby framework available in the market for web development. Sinatra is a simple and easy-to-use DSL written in Ruby and often used popularly in place of Ruby on Rails as a web development framework. Sinatra is named after the legendary musician Frank Sinatra and is powerful enough to set up a fully functional web application with just a single file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cZP2L1C2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Sinatra-1024x384.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cZP2L1C2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Sinatra-1024x384.png" alt="Sinatra"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sinatra was launched in 2007, is open-source, and hence free to use for the Ruby enthusiasts. Built on Rack, Sinatra can develop micro web applications to full-scale heavy web applications with fewer resources than rails. You would sometimes hear that Sinatra is a microframework, but that is just because of its lightweight and smaller size. In the arena, Sinatra is powerful, capable, and supports RubyGems to accomplish specific tasks with minimum effort.&lt;/p&gt;

&lt;p&gt;Some notable projects using Sinatra are LinkedIn, Heroku, Apple, and BBC.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#camping"&gt;
  &lt;/a&gt;
  Camping
&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://www.ruby-camping.com/"&gt;Camping&lt;/a&gt; is another best ruby web framework. The source code of the camping framework is just 4KB in size, making it the most lightweight Ruby framework on the internet (with equal capabilities). Apart from its size, camping has also been popular since it was written by an unidentified programmer who disappeared in August 2009. Identified by the pseudo-name “Why the lucky stiff,” the programmer has left the project, and since then, camping has been an open-source framework with a huge community.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M5icCzTB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Camping-1024x553.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M5icCzTB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Camping-1024x553.png" alt="Camping"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Camping requires Rack to work on the projects and is available as a RubyGem on GitHub. An excellent powerful feature of camping is converting the complete web application into a single file organizing it as an MVC structure. You can visit the &lt;a href="https://github.com/camping/camping"&gt;official GitHub page&lt;/a&gt; to learn more about Camping.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ramaze"&gt;
  &lt;/a&gt;
  Ramaze
&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://ramaze.net/"&gt;Ramaze&lt;/a&gt; is another best ruby web framework in competition to help create outstanding web development projects. Being light-weight, Ramaze is faster and offers a flat learning curve. For ruby projects involving JQuery, AJAX, ORM, Javascript, or some templating engine, Ramaze stands as an excellent choice to be seen in the consideration. Ramaze is robust and popular as a “bug-free” framework.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VH8WyXfD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Ramaze.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VH8WyXfD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Ramaze.png" alt="Ramaze"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ramaze provides clean and light solutions as compared to Rails. The GitHub page for Ramaze can be accessed through the &lt;a href="https://github.com/Ramaze/ramaze"&gt;Ramaze Github link&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#goliath"&gt;
  &lt;/a&gt;
  Goliath
&lt;/h3&gt;

&lt;p&gt;Unlike the other described ruby frameworks, which focus on the “development” part, &lt;a href="https://postrank-labs.github.io/goliath/"&gt;Goliath&lt;/a&gt; is considered to be one of the best ruby frameworks written in Ruby. Goliath is a lightweight web server framework powering PostRank and focuses on server-specific mechanisms. These include implementation and management of Rack API, middleware in Ruby, and fully asynchronous processing. Goliath focuses on event-driven design, thanks to the EventMachine reactor, which forms the Goliath working basis.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nJAypPtk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Goliath.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nJAypPtk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Goliath.png" alt="Goliath"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Goliath project can be accessed through its &lt;a href="https://github.com/postrank-labs/goliath"&gt;GitHub repository page&lt;/a&gt;. Goliath boasts a powerful feature of decluttering the complicated asynchronous requests into a linear execution communication process. The asynchronous mechanism of Goliath can hence be used very quickly for streaming the data, firehose API, etc. Also, Goliath is open-source, which has been a significant factor in its linear development over time. If you are into web-server development in Ruby, you will love working in Goliath.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hanami"&gt;
  &lt;/a&gt;
  Hanami
&lt;/h3&gt;

&lt;p&gt;With a clean architectural design and a primary object methodology, &lt;a href="https://hanamirb.org/"&gt;Hanami&lt;/a&gt; is counted among the best ruby frameworks that have gained popularity as an alternative to Rails. Hanami is “sorted” in design and provides small files that can be used independently to create a project stack. Hanami is lightweight and consumes fewer resources claiming 60% lesser memory than other big Ruby frameworks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5mQKzFJv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Hanami.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5mQKzFJv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Hanami.png" alt="Hanami"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hanami is based on the MVC structure and offers excellent additional features like CSRF, HTML escaping to prevent XSS, and maintaining the browser’s content security policy.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#padrino"&gt;
  &lt;/a&gt;
  Padrino
&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://padrinorb.com/"&gt;Padrino&lt;/a&gt; is another best ruby web framework that is based on Sinatra and is open source in nature. Padrino is used popularly as an alternative to Merb and Camping. Similar to the frameworks mentioned in this section, Padrino too works on the Rack webserver interface. Padrino’s development idea comes from Sinatra’s popularity and extending Sinatra’s functionality to more and more domains giving it a shape of a library-rich framework.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oDpA4gtD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Padrino-1024x409.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oDpA4gtD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Padrino-1024x409.png" alt="Padrino"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Padrino’s &lt;a href="https://github.com/DAddYE/web-frameworks-benchmark/wiki"&gt;benchmark metrics&lt;/a&gt; also reveal that it is four times faster than Rails. You can access Padrino through its &lt;a href="https://github.com/padrino/padrino-framework"&gt;GitHub page&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nyny"&gt;
  &lt;/a&gt;
  NYNY
&lt;/h3&gt;

&lt;p&gt;The &lt;a href="https://alisnic.github.io/nyny/"&gt;NYNY’s official page&lt;/a&gt; defines NYNY as “ridiculously” small and considered to be one of the best ruby web frameworks. Ridiculously small in the sense that NYNY is written in only 300 lines of code, which is considered significantly less than other frameworks such as Rack. Honestly, a majority of plugins are written in more LOC than NYNY.&lt;/p&gt;

&lt;p&gt;The highlighting thing in NYNY is that this ruby framework contains all the Ruby developers’ popular requirements. If you want something more, you can edit the framework and add your functionality on top of it. Such edits will help you build reliable and multi-functional middleware.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nq1C7hz3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/pasted-image-0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nq1C7hz3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/pasted-image-0.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;NYNY application can be used with Sinatra, Rails, or any other Rack-based application. The &lt;a href="https://github.com/alisnic/nyny"&gt;NYNY GitHub official page&lt;/a&gt; contains all the relevant information, from setting up to configuring the application to running it on the server.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cuba"&gt;
  &lt;/a&gt;
  Cuba
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://cuba.is/"&gt;Cuba&lt;/a&gt; is a microframework to develop web applications in the Ruby language. Rum inspires Cuba, and the official website defines Cuba as “a tiny but powerful mapper for Rack applications.” making it one of the best ruby frameworks. The &lt;a href="https://github.com/soveran/cuba#cuba"&gt;GitHub page&lt;/a&gt; is a practical guide if you are looking to start development in Cuba.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RAzG555e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Cuba.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RAzG555e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Cuba.png" alt="Cuba"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cuba takes help from a lot of other technologies to bring the best of everything. For example, the responses in Cuba are the optimized version of the Rack responses. The templates are integrated via &lt;a href="https://github.com/rtomayko/tilt"&gt;Tilt&lt;/a&gt; and testing via &lt;a href="https://github.com/djanowski/cutest"&gt;Cutest&lt;/a&gt; and &lt;a href="https://github.com/teamcapybara/capybara"&gt;Capybara&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#grape"&gt;
  &lt;/a&gt;
  Grape
&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://www.ruby-grape.org/"&gt;Grape&lt;/a&gt; is a REST-like microframework written in Ruby programming language. Grape is also considered among the best ruby frameworks and can be used to run on top of Rack or can be used to complement the existing web application frameworks such as Sinatra or Rails. The latter can be done through the DSL-based REST-API for communication. The Grape ruby web framework facilitates efficient and meaningful APIs working in the web application domain.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M-cyqUoD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Grape.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M-cyqUoD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Grape.png" alt="Grape"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Grape’s support extends to standard conventions, multiple format support, content negotiation, versioning, etc. The complete guide to Grape to develop REST-APIs, test the API and analyze the performance metrics is available on its &lt;a href="https://github.com/ruby-grape/grape"&gt;official GitHub page&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scorched"&gt;
  &lt;/a&gt;
  Scorched
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://scorchedrb.com/"&gt;Scorched&lt;/a&gt; is another one of the best ruby web frameworks that requires Ruby 2.0 and above to work. Scorched is light-weight, and the official website states Scorched as “true evolutionary enhancement of Sinatra, with more power, focus, and less clutter.” Scorched developers have assumed that since Scorched is on top of Rack, the fellow developers are already familiar with it. With that effect, they have removed any “overlapping” functionality and kept Scorched simplified and concrete in its working.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CkGnbv1h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Scorched-1024x488.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CkGnbv1h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Scorched-1024x488.png" alt="Scorched"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Scorched is not recommended to new Ruby developers or inexperienced programmers. Scorched lets you experiment, implement new tools and play around with this open-ended framework. It provides a definite and robust structure for working with HTTP requests and can also be used for scalable ruby-based applications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#roda"&gt;
  &lt;/a&gt;
  Roda
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://roda.jeremyevans.net/documentation.html"&gt;Roda&lt;/a&gt; is another best ruby framework that aids in building web applications. Roda relies on the simplicity, usability, and productivity of the language. Built on Rack, Roda offers a flexible architecture and a large variety of APIs. Roda is also known for bringing the routing tree web toolkit to perform requests at any routing point. It uses comparatively lesser memory and is very easy to install, configure and use. Roda ships with a very long list of plugins, including middleware, request/response, and mail.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vtoe3dPF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Roda.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vtoe3dPF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Roda.png" alt="Roda"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#volt"&gt;
  &lt;/a&gt;
  Volt
&lt;/h3&gt;

&lt;p&gt;Volt is a ruby web application framework that helps in the development of web-based applications. Volt focuses on speed by running the Ruby code both on the server and the client. When the user interacts with the web application, the document object model nodes change dynamically on the server and the page. This process is also called reactive programming.&lt;/p&gt;

&lt;p&gt;Volt focuses on a persistent communication network instead of HTTP to communicate between the server and the client. With synchronization mechanisms built into the Volt code, the data gets updated on multiple clients, servers, and databases with the change in any one of the clients.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b0Jy__K5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Volt-1024x623.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b0Jy__K5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Volt-1024x623.png" alt="Volt"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Volt has helped in building a lot of functional web-based applications working in various domains. To learn more about Volt, you can visit its &lt;a href="https://github.com/voltrb/volt"&gt;Volt GitHub page&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ramverk"&gt;
  &lt;/a&gt;
  Ramverk
&lt;/h3&gt;

&lt;p&gt;Ramverk is a ruby web application framework that works on the minimalistic approach. Ramverk helps in building up MVC applications with a huge scope of adding your own functionalities into the framework. Ramverk aims to provide just the necessary functionalities to startup the application but demand more addition through the developer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--StlDtlXQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Ramverk-1024x707.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--StlDtlXQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Ramverk-1024x707.png" alt="Ramverk"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Honestly, Ramverk is neither that powerful nor provides a full-fledged framework for highly scalable and complex ruby applications. With a vast range to choose from, Ramverk indeed gets defeated due to the extra work it demands from the developers. But, Ramverk is still developing and hopefully will bring something concrete in the later releases. The &lt;a href="https://github.com/sandelius/ramverk"&gt;Ramverk GitHub page&lt;/a&gt; can guide you through the installation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hobbit"&gt;
  &lt;/a&gt;
  Hobbit
&lt;/h3&gt;

&lt;p&gt;Hobbit is a microframework for web applications running on the don’t-repeat-yourself philosophy. Hobbit is the lightweight best ruby framework that offers a faster execution than other microframeworks. Hobbit ruby framework is built on top of Rack while Sinatra inspires the DSL.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tXlhzN56--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Hobbit.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tXlhzN56--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Hobbit.png" alt="Hobbit"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The code of Hobbit can also be extended with various other Rack classes and modules with no extra logic. With minimum configurations, Hobbit is the right choice for developing web applications leveraging the functionalities.&lt;/p&gt;

&lt;p&gt;You can access the recipes, templates, guides, and demo applications through the &lt;a href="https://github.com/patriciomacadden/hobbit"&gt;Hobbit GitHub page&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cramp"&gt;
  &lt;/a&gt;
  Cramp
&lt;/h3&gt;

&lt;p&gt;Cramp is a real-time web framework written in Ruby and built on top of EventMachine. Cramp is another ruby framework that uses asynchronous communication mechanisms and can be used smoothly for too many open connections. Cramp can be used for developing WebSockets, Server-Sent Events, and APIs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8aiVQf1d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Cramp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8aiVQf1d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/04/Cramp.png" alt="Cramp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The official repository of cramp can be found on the &lt;a href="https://github.com/lifo/cramp"&gt;Cramp GitHub page&lt;/a&gt; and installed via the simple gem command: gem install cramp. Cramp provides full-duplex bi-directional communication, which is efficient and faster.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#did-we-miss-something"&gt;
  &lt;/a&gt;
  Did We Miss Something?
&lt;/h2&gt;

&lt;p&gt;As a reader and a developer, it is entirely up to your requirements to choose your best ruby frameworks. Regardless of the framework you use for web development, &lt;a href="https://www.lambdatest.com/?utm_source=dev&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Harish-8062021&amp;amp;utm_term=Harish"&gt;LambdaTest&lt;/a&gt; is a cloud-based cross browser testing platform that will support all your web testing needs with out-of-the-box features like responsive testing, visual UI testing, automation testing, etc.&lt;/p&gt;

&lt;p&gt;You can also leverage &lt;a href="https://www.lambdatest.com/lt-browser?utm_source=dev&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Harish-8062021&amp;amp;utm_term=Harish"&gt;LT Browser&lt;/a&gt; – a developer-friendly tool to test websites for responsiveness across 50+ pre-built device viewports like mobile, tablets, desktops, and laptops.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://downloads.lambdatest.com/lt-browser/LTBrowser.exe"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BVP2fotB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/4a26fdb4-acb2-4356-848a-e8f9f7e98059/" alt="windows.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://downloads.lambdatest.com/lt-browser/LTBrowser.dmg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fs8h2OlW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/1e613647-fd74-4fb7-a9bb-3d823f212d30/" alt="macos.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://downloads.lambdatest.com/lt-browser/LTBrowser.AppImage"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A89Pel75--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ucarecdn.com/013e814b-41a5-402e-aefa-7371662486a8/" alt="linux.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have experience in some other best ruby frameworks and are excited to have it in this list, mention your framework with its capabilities in the comment section below. I hope this list justified the ruby programmers and the people ready to dive into the Ruby pool.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to keep learning as a developer</title>
      <author>Pavel Polívka</author>
      <pubDate>Tue, 08 Jun 2021 08:12:52 +0000</pubDate>
      <link>https://dev.to/pavel_polivka/how-to-keep-learning-as-a-developer-33gb</link>
      <guid>https://dev.to/pavel_polivka/how-to-keep-learning-as-a-developer-33gb</guid>
      <description>&lt;p&gt;"Keep learning." It's one of those things you will read on every guide on how to become a good developer. But how can one keep learning every day? It's easy in the beginning you are starting, there is so much to learn. But now, you have a good-paying job, you know everything well enough to keep you and your employers happy. Sure from time to time, there will be some challenges that will enable you to learn new stuff. But it's not enough. I think that I need to learn at least one new thing each day, otherwise I do not count that day as a good productive day. &lt;/p&gt;

&lt;p&gt;OK, but what can we do? In this article, I will go over a list of possible solutions to this problem.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#side-projects"&gt;
  &lt;/a&gt;
  Side projects
&lt;/h2&gt;

&lt;p&gt;Side projects are the obvious solution to this problem. You do not need to aim for the best-looking, startup-ready project out there. The goal (at least for me) is to learn something new. So If your day job is mostly writing backend Java your side project should not be a backend Java. I recently redid my blog with Next.JS as a way to force myself to keep current with modern front-end technologies. In the past, I did a lot of side projects that were more of a joke. &lt;/p&gt;

&lt;p&gt;To learn machine learning I tried to do something call Putin Emoji. I was image search, that searched through photos of Vladimir Putin that matched the desired emoji. He surprisingly has almost a full range of expressions. &lt;/p&gt;

&lt;p&gt;You can even deploy it somewhere for people to see, the DevOps part can be a learning experience as well. I was running Putin emoji live for a month or so, but as you imagine it's hard to monetize such a thing (based on a stolen image of one of the world leaders) and it was not very cheap to run so I decided to take it down. Plus you know it was not perfect anyway but I learned a ton. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reading"&gt;
  &lt;/a&gt;
  Reading
&lt;/h2&gt;

&lt;p&gt;Another obvious solution is to read. You can read books, blogs, Twitter, etc... You can learn a ton through reading but I would count that as a piece of theoretical knowledge, I need to touch stuff to learn. Maybe you can code alongside the reading, etc... &lt;/p&gt;

&lt;p&gt;Do not confuse reading through your Twitter wall with learning. Sure there may be tons of tweets describing a concept, etc.. but how hard a concept can be if it could be explained in the form of a Tweet? &lt;/p&gt;

&lt;p&gt;Great sources you can use are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev,to/"&gt;Dev.to&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/"&gt;Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hashnode.code"&gt;Hashnode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#writing"&gt;
  &lt;/a&gt;
  Writing
&lt;/h2&gt;

&lt;p&gt;Writing is a great tool that can help you learn new stuff. I try to document everything that I learn. This way I have notes to almost everything. For this, I use a folder full of markdown files that I edit in VS Code (the most overkill note-taking app). Sometimes some of my notes will make it as a blog post. Or Stackoverflow answer. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#videos"&gt;
  &lt;/a&gt;
  Videos
&lt;/h2&gt;

&lt;p&gt;You can also watch video courses (or YT videos) where someone is explanting the stuff to you. To be honest I do not like watching videos, as I much prefer written tutorials. You need to keep up with the video, rarely do people code alongside, as the video keeps rolling, and I hate pausing it. You cannot copy-paste from a video either. &lt;/p&gt;

&lt;p&gt;But hey some people use videos as their main learning source and do not complain. That is why it's on this list.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#speaking"&gt;
  &lt;/a&gt;
  Speaking
&lt;/h2&gt;

&lt;p&gt;I always found that the topics I know the best are the topics I used to teach to others. In my previous job, I was doing a lot of company-wide workshops about clean code and testing. I used a lot of time preparing those presentations and keeping those up to date (yes mainly changing meme images in the slides to the current memes) this kept in the loop, I was perceived as an expert on the topic and I kept learning new stuff. You can do the same as a speaker in your local meetups and or any conference. &lt;/p&gt;




&lt;p&gt;For more tips like this, you can follow me on &lt;a href="https://twitter.com/pavel_polivka"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>java</category>
      <category>learning</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Creating a Simple Horizontal Switchable Tabs Panel Using HTML, CSS &amp; JavaScript.</title>
      <author>Brian Maina</author>
      <pubDate>Tue, 08 Jun 2021 08:04:31 +0000</pubDate>
      <link>https://dev.to/mainakibe/creating-a-simple-horizontal-switchable-tabs-panel-using-html-css-javascript-e0l</link>
      <guid>https://dev.to/mainakibe/creating-a-simple-horizontal-switchable-tabs-panel-using-html-css-javascript-e0l</guid>
      <description>&lt;p&gt;Tabs are ideal for singular page web apps or websites with multiple subjects to display. In this tutorial, we shall create a simple web application with a horizontal switchable tabs panel. The web application can do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Show the active tab.&lt;/li&gt;
&lt;li&gt;Switch between the tabs.&lt;/li&gt;
&lt;li&gt;Display the contents of each tab.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will define the structure of the web application using HTML. Then render the elements on the screen using CSS and finally, add the functionality using some bit of Vanilla JavaScript. That's right, no fancy JavaScript framework is needed, just the simple Vanilla JavaScript we all know. Let's begin!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;p&gt;Before getting into the coding part of this project, ensure you have the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intermediate level knowledge in HTML, CSS &amp;amp; JavaScript.&lt;/li&gt;
&lt;li&gt;Text editor or a codepen account.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#step-1-setting-up-the-html"&gt;
  &lt;/a&gt;
  Step 1: Setting up the HTML
&lt;/h2&gt;

&lt;p&gt;Essentially the HTML has a few levels of elements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The wrapper of the tabbed panel.&lt;/li&gt;
&lt;li&gt;The sidebar&lt;/li&gt;
&lt;li&gt;The tab contents&lt;/li&gt;
&lt;li&gt;The actual tab buttons.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Begin by constructing the tab panel wrapper. Create a &lt;code&gt;div&lt;/code&gt;, give it a class, and call it &lt;code&gt;tabs&lt;/code&gt;; this will be the wrapper for the tab panel. Create a new &lt;code&gt;div&lt;/code&gt; inside the wrapper, give it a class, and title it &lt;code&gt;sidebar&lt;/code&gt;; this will contain the tab buttons. Create three buttons in the &lt;code&gt;sidebar&lt;/code&gt;, then give each one the &lt;code&gt;tab-btn&lt;/code&gt; class. To the first button, add a &lt;code&gt;tab-btn-active&lt;/code&gt; class. The active class will come in handy when specifying in the CSS and JavaScript what happens to the tab when the tab &lt;code&gt;button&lt;/code&gt; is clicked. Add HTML, CSS, and JavaScript as the names of the buttons, respectively. Add a &lt;code&gt;data for-tab=' '&lt;/code&gt; attribute to each of these buttons now. Add a tab number to the &lt;code&gt;data&lt;/code&gt; element to specify which &lt;code&gt;button&lt;/code&gt; corresponds to which tab. Tab 1, tab 2, and tab 3 are examples. In the JavaSript, the tab number is used to read the properties and select which tab to open.&lt;/p&gt;

&lt;p&gt;Create a parent &lt;code&gt;div&lt;/code&gt; underneath the sidebar and give it the class content to act as a wrapper for the tab contents. Create a new &lt;code&gt;div&lt;/code&gt; and give it the &lt;code&gt;tab-content&lt;/code&gt; class. Also, give the tab content &lt;code&gt;div&lt;/code&gt; a class called &lt;code&gt;tab-content-active&lt;/code&gt;. The active class will be used in CSS and JavaScript to indicate what happens to the tab when the tab &lt;code&gt;button&lt;/code&gt; is clicked.&lt;/p&gt;

&lt;p&gt;We'll map the &lt;code&gt;data-for-tab&lt;/code&gt; attribute within this &lt;code&gt;div&lt;/code&gt;, so add a &lt;code&gt;data-tab='1'&lt;/code&gt; property to it and give it a tab number of 1 to represent the first tab. You may now go ahead and fill the &lt;code&gt;div&lt;/code&gt; with some content. Do the same for tab two and three, but remove the &lt;code&gt;tab-content-active&lt;/code&gt; class and name their &lt;code&gt;data-tab&lt;/code&gt; attribute 2 and three respectively. Finally, add some bit of content.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/hfZyXNkY"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wSeJP-X5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/8zNq0StT/1.png" alt="1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're loading the page from the server, you might want to utilize loops or export the data so that the &lt;code&gt;data-tab&lt;/code&gt; values for tabs 1, 2, and 3 matches the &lt;code&gt;data-for-tab&lt;/code&gt; values. Make sure the &lt;code&gt;data-for-tab&lt;/code&gt; and &lt;code&gt;data-tab&lt;/code&gt; numbers match if you're not using any server-side code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-styling-the-page"&gt;
  &lt;/a&gt;
  Step 2: Styling the page
&lt;/h2&gt;

&lt;p&gt;We will first style the tab wrapper. Apply the following styles to the tab wrapper:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/JtPKF9zh"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---EpNlg8g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/nct5Xx8q/2.png" alt="2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thereafter apply the following styles to the sidebar and tab buttons:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/hX7rfvbJ"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J0PyIhqM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/QdfnYWFq/3.png" alt="3.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Afterwards, specify what will happen to the button once it gets clicked; that will be the &lt;code&gt;tab-btn-active&lt;/code&gt; class. When the button is clicked, it will apply the following styles to the &lt;code&gt;button&lt;/code&gt; element:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/478t8RQk"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0r4TgWni--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/wMzVj6tv/4.png" alt="4.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The following styles will be applied to the content, tab-content and tab-content classes:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/214ZsZ7x"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a9uPBQMa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/VkhWb9S2/5.png" alt="5.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;position absolute&lt;/code&gt; applied in the &lt;code&gt;tab-content&lt;/code&gt; class will stack the content the all the tabs. After that, &lt;code&gt;display none&lt;/code&gt; the contents of all the tabs.&lt;/p&gt;

&lt;p&gt;A &lt;code&gt;display block&lt;/code&gt; style is applied to the &lt;code&gt;tab-content-active&lt;/code&gt; class so as to display the content in the default tab, which is the first tab.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-add-javascript"&gt;
  &lt;/a&gt;
  Step 3: Add JavaScript
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#part-1"&gt;
  &lt;/a&gt;
  Part 1:
&lt;/h3&gt;

&lt;p&gt;To begin the coding, create a method called &lt;code&gt;setupTabs&lt;/code&gt;. Then pick all the components with the &lt;code&gt;tab-btn&lt;/code&gt; class with a &lt;code&gt;querySelectorAll&lt;/code&gt;. When the &lt;code&gt;button&lt;/code&gt; is clicked, utilize the &lt;code&gt;forEach&lt;/code&gt; method on it to fire a &lt;code&gt;clickeventListener&lt;/code&gt; or a function. The content of the selected tab will be displayed using the &lt;code&gt;button function.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/N9P967QQ"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---mUKYqoL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/KjmPyJV3/6.png" alt="6.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#part-2"&gt;
  &lt;/a&gt;
  Part 2:
&lt;/h3&gt;

&lt;p&gt;Define the following constants to represent the tabs wrapper, sidebar, tab number and tab content to activate:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/GHD8DyV1"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WWhRAasf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/L6CzrkVh/7.png" alt="7.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;const sidebar = button.parentElement&lt;/code&gt; will start at the &lt;code&gt;button&lt;/code&gt;, then go to the parent element, the &lt;code&gt;sidebar&lt;/code&gt;. &lt;code&gt;const tabs = sidebar.parentElement&lt;/code&gt; selects the parent element of the sidebar, which is the tab wrapper. &lt;code&gt;const tabNumber = button.dataset.forTab&lt;/code&gt;, the &lt;code&gt;dataset&lt;/code&gt; refers to any attributes that start with a &lt;code&gt;data-&lt;/code&gt; attribute. The JavaScript will convert the snake-case format of the &lt;code&gt;dataset&lt;/code&gt; into camel-case. The forTab refers to the value in the &lt;code&gt;data-for-tab&lt;/code&gt; attribute. Now to get the actual tab content to activate, we use the &lt;code&gt;const tabActivate =tabs.querySelector()&lt;/code&gt; then inside the &lt;code&gt;querySelector&lt;/code&gt; we pass &lt;code&gt;.tab-content[data-tab="${tabNumber}"]&lt;/code&gt; to select the tab content element with data-tab equals to the number gotten  after clicking the tab.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#part-3"&gt;
  &lt;/a&gt;
  Part 3:
&lt;/h3&gt;

&lt;p&gt;Add a DOMContetntLoaded eventListener and call the setupTabs function once the DOM content has been loaded.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/y3Zd0MfT"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xbp5udLE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/L5y1FRLG/8.png" alt="8.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#part-4"&gt;
  &lt;/a&gt;
  Part 4:
&lt;/h3&gt;

&lt;p&gt;First, you will set all the &lt;code&gt;buttons&lt;/code&gt; to be inactive, then set the active &lt;code&gt;button&lt;/code&gt;. You will do the same for the &lt;code&gt;tab content.&lt;/code&gt; Select all the &lt;code&gt;buttons&lt;/code&gt; and for each &lt;code&gt;button&lt;/code&gt;, remove the &lt;code&gt;tab-btn-active&lt;/code&gt; class, in doing this it will reset and no &lt;code&gt;button&lt;/code&gt; will have an active state, then set the clicked &lt;code&gt;button&lt;/code&gt; to have the &lt;code&gt;tab-btn-active&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/tnN00D7j"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FZF6HMlT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Vv3zCV8d/9.png" alt="9.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After that, select all the &lt;code&gt;tab contents&lt;/code&gt; and for each tab, remove the &lt;code&gt;tab-content-active&lt;/code&gt; class, in doing this it will reset and no tab will have an active state, then set the active tab to have the &lt;code&gt;tab-content-active&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/18f96hfV"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JqGS08S1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Gmj9WbRK/10.png" alt="10.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now simply add the &lt;code&gt;tab-btn-active&lt;/code&gt; class so that whenever the &lt;code&gt;button&lt;/code&gt; is clicked, it becomes active.  We will do the same for the tab content, using the tabActivate constant add the &lt;code&gt;tab-content-active&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/B8F4YT5q"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d5DT9UbH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/LsC5svnZ/11.png" alt="11.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And that's it!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/brian-dot-hub/embed/eYvrzGr?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion!
&lt;/h2&gt;

&lt;p&gt;The purpose of this tutorial was to give you the most detailed instructions on how to make a horizontal switchable tabs panel using HTML, CSS, and JavaScript. I hope this tutorial guided you through the process of creating a horizontal switchable tab panel. To reach a larger audience, please like or share the article. In the comments section, feel free to make a comment or ask a question.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Mistakes I made in my 20s as a Software Developer.</title>
      <author>Ankur Tyagi</author>
      <pubDate>Tue, 08 Jun 2021 07:45:50 +0000</pubDate>
      <link>https://dev.to/tyaga001/mistakes-i-made-in-my-20s-as-a-software-developer-558d</link>
      <guid>https://dev.to/tyaga001/mistakes-i-made-in-my-20s-as-a-software-developer-558d</guid>
      <description>&lt;h1&gt;
  &lt;a href="#mistakes-i-made-in-my-20s-as-a-software-developer"&gt;
  &lt;/a&gt;
  Mistakes I made in my 20s as a Software Developer.
&lt;/h1&gt;


&lt;blockquote&gt;
&lt;p&gt;Mistakes I made in my 20s as a Software Developer...&lt;br&gt;&lt;br&gt;A Thread... &lt;a href="https://t.co/wulqhBuLbE"&gt;pic.twitter.com/wulqhBuLbE&lt;/a&gt;&lt;/p&gt;— Ankur💻🎧💪 (@TheAnkurTyagi) &lt;a href="https://twitter.com/TheAnkurTyagi/status/1401910166228926468?ref_src=twsrc%5Etfw"&gt;June 7, 2021&lt;/a&gt;
&lt;/blockquote&gt;  

&lt;p&gt;It’s OK to make mistakes. Yes, even when it comes to your career. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Career mistakes in your 20s aren’t the end of the world. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Not that I'm encouraging you to make career mistakes but just know, if you do, you can hopefully bounce back stronger than ever...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Being a young professional can be exciting.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There’s no easy way to condition yourself as a perfect professional, nor is there a shortcut to a perfect career path.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Learning from your mistakes does not happen automatically—it requires thinking and reflection."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#1-failing-to-network-early"&gt;
  &lt;/a&gt;
  1- Failing to network early.
&lt;/h2&gt;

&lt;p&gt;Networking is a major key to success in the business world in part because connections are how to learn more about yourself &amp;amp; your skills, &lt;/p&gt;

&lt;p&gt;And in part, because it will give you more potential career paths when it comes time to look for a new position.&lt;/p&gt;

&lt;p&gt;College juniors and seniors can leverage the power of their universities by connecting with their alumni network and professors.&lt;/p&gt;

&lt;p&gt;New professionals can start attending networking events and meeting new people as often as possible.&lt;/p&gt;

&lt;p&gt;The sooner you start, the better it will be.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-blame-people-for-my-unhappiness"&gt;
  &lt;/a&gt;
  2. Blame People For My Unhappiness.
&lt;/h2&gt;

&lt;p&gt;As a child, you’re taken care of by others. &lt;/p&gt;

&lt;p&gt;That may be your parents, siblings, family members, foster parents, or any other person who takes responsibility. &lt;/p&gt;

&lt;p&gt;Hence, you assume that someone is responsible for you.&lt;/p&gt;

&lt;p&gt;But that’s not true.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When you grow up, You are responsible for yourself. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So never look at others when you’re unhappy—it’s not fair to the people in your life. &lt;/p&gt;

&lt;p&gt;Instead, accept your unhappiness, and then do something about it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-not-asking-questions"&gt;
  &lt;/a&gt;
  3. Not asking questions
&lt;/h2&gt;

&lt;p&gt;As a new hire, I was nervous about asking questions for fear of sounding stupid.&lt;/p&gt;

&lt;p&gt;I was afraid to ask questions that would expose my programming ignorance, and this greatly impeded my growth as a developer.&lt;/p&gt;

&lt;p&gt;Once I built a strong rapport with my team members, I began asking more questions. &lt;/p&gt;

&lt;p&gt;Every developer starts from zero, &lt;br&gt;
and while we all learn at different speeds, &lt;br&gt;
We all have to go through the same process.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"It is vital to ask questions if you don’t understand."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#4-taking-constructive-criticism-personally"&gt;
  &lt;/a&gt;
  4. Taking constructive criticism personally
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;"Constructive criticism is important to grow as a developer."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When someone gives me constructive criticism, my first instinct is to interpret this as a reflection of my personal identity; it feels as though they’re attacking who I am.&lt;/p&gt;

&lt;p&gt;Next time when someone gives you a piece of constructive criticism that you don’t believe is true, don’t immediately get defensive and shut down.&lt;/p&gt;

&lt;p&gt;Take some time to process what they’ve just suggested and truly see whether their feedback holds some truth.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-comparison-self-doubt-and-fear"&gt;
  &lt;/a&gt;
  5. Comparison, Self Doubt, And Fear
&lt;/h2&gt;

&lt;p&gt;It’s human nature to compare ourselves with others all the time, that’s the case in programming as well.&lt;/p&gt;

&lt;p&gt;Some devs are good at picking up the concept very easily.&lt;/p&gt;

&lt;p&gt;Some devs take time but slow learning is completely ok.&lt;/p&gt;

&lt;p&gt;Ask yourself…&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What can I do to become a better programmer? &lt;/li&gt;
&lt;li&gt;What are the areas I should improve on?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Identify your strength be thankful for it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Identify your weakness and work on that by taking help from others.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#6-laziness-in-doing-practice"&gt;
  &lt;/a&gt;
  6. Laziness in Doing Practice
&lt;/h2&gt;

&lt;p&gt;There is no point to read thousand of lines of code if you don’t get your hands dirty.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Practicing actual code should never be neglected in programming.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Programming is a skill acquired by practice and example rather than from books.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;-Alan Turing&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-rushing-into-a-job"&gt;
  &lt;/a&gt;
  8. Rushing into a job
&lt;/h2&gt;

&lt;p&gt;Too many young devs prioritize the notion of getting a job above anything else in the job-hunting process.&lt;/p&gt;

&lt;p&gt;While it’s important to start getting a paycheck so you can afford living expenses.&lt;/p&gt;

&lt;p&gt;It’s not a good idea to rush into the first job you’re offered.&lt;/p&gt;

&lt;p&gt;In the end,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You’re not expected to be a perfect employee and teammate.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But having the ability to understand your flaws and learn from your mistakes will improve your job performance and set you on the road to success.&lt;/p&gt;

&lt;p&gt;Thanks for reading. &lt;/p&gt;

&lt;p&gt;If you like this you might be you are interested in my eBook as well.&lt;/p&gt;

&lt;p&gt;I have recently written a book for developer growth &amp;amp; shared my 11+ years of experience.&lt;/p&gt;

&lt;p&gt;Grab the book now at a discounted price... &lt;a href="https://gumroad.com/l/nextgendev/grow"&gt;ThePrimeGuide&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OtPEzgRR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622969340878/j1oDA44p8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OtPEzgRR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622969340878/j1oDA44p8.png" alt="book.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;"Don't miss out" Follow your mentor  on Twitter 👉 &lt;a href="https://twitter.com/TheAnkurTyagi"&gt;TheAnkurTyagi&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;You can buy me a beer if you feel generous. Happy coding!!!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/ankurtyagi"&gt;BUY Me a Beer.&lt;/a&gt; &lt;/p&gt;

</description>
      <category>career</category>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Top 20 JavaScript tips and tricks to increase your Speed and Efficiency</title>
      <author>Kapil Raghuwanshi🖥</author>
      <pubDate>Tue, 08 Jun 2021 07:09:33 +0000</pubDate>
      <link>https://dev.to/techygeeky/top-20-javascript-tips-and-tricks-to-increase-your-speed-and-efficiency-283g</link>
      <guid>https://dev.to/techygeeky/top-20-javascript-tips-and-tricks-to-increase-your-speed-and-efficiency-283g</guid>
      <description>&lt;h3&gt;
  &lt;a href="#convenient-and-useful-techniques-to-reduce-the-lines-of-code-and-pace-up-your-dev-work"&gt;
  &lt;/a&gt;
  Convenient and useful techniques to reduce the lines of code and pace up your Dev Work!
&lt;/h3&gt;

&lt;p&gt;In our daily tasks, we get to write functions such as sorting, searching, finding unique values, passing parameters, swapping values etc, so here I present my list of shorthand techniques to write all of them as a Pro!✌🏻&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WgxQe1g9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh2m04o3fgw3a6i8bzha.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WgxQe1g9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh2m04o3fgw3a6i8bzha.jpg" alt="Increase Your Performance"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;JavaScript is truly an awesome language💛 to learn and work with. And there can be more than one approach to reach to the same solution for given problem. In this article, we will discuss only the quickest ones.🚀&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;These approaches will definitely help you in:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reducing the number of LOC(lines of code),&lt;/li&gt;
&lt;li&gt;Coding Competitions, &lt;/li&gt;
&lt;li&gt;Hackathons or &lt;/li&gt;
&lt;li&gt;Other time bound tasks.⏱&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these JavaScript Hacks uses techniques from ECMAScript6(ES2015) onwards, though the latest version is ECMAScript11(ES2020). &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: All below tricks have been tested on the Console of Google Chrome.&lt;/em&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-declare-and-initialize-arrays"&gt;
  &lt;/a&gt;
  1. Declare and Initialize Arrays
&lt;/h4&gt;

&lt;p&gt;We can initialize array of particular size with default values like &lt;code&gt;""&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;. You might have used these for the 1-D array but how about initializing 2-D array/matrix?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const array = Array(5).fill(''); 
// Output 
(5) ["", "", "", "", ""]

const matrix = Array(5).fill(0).map(()=&amp;gt;Array(5).fill(0)); 
// Output
(5) [Array(5), Array(5), Array(5), Array(5), Array(5)]
0: (5) [0, 0, 0, 0, 0]
1: (5) [0, 0, 0, 0, 0]
2: (5) [0, 0, 0, 0, 0]
3: (5) [0, 0, 0, 0, 0]
4: (5) [0, 0, 0, 0, 0]
length: 5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#2-find-out-the-sum-minimum-and-maximum-value"&gt;
  &lt;/a&gt;
  2. Find out the sum, minimum and maximum value
&lt;/h4&gt;

&lt;p&gt;We should make use of &lt;code&gt;reduce&lt;/code&gt; method to quickly find basic maths operations.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const array  = [5,4,7,8,9,2];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Sum
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;array.reduce((a,b) =&amp;gt; a+b);
// Output: 35
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Max
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;array.reduce((a,b)=&amp;gt;a&amp;gt;b?a:b);
// Output: 9
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Min
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;array.reduce((a,b)=&amp;gt;a&amp;lt;b?a:b);
// Output: 2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#3-sorting-array-of-string-numbers-or-objects"&gt;
  &lt;/a&gt;
  3. Sorting Array of String, Numbers or Objects
&lt;/h4&gt;

&lt;p&gt;We have inbuilt methods &lt;code&gt;sort()&lt;/code&gt; and &lt;code&gt;reverse()&lt;/code&gt; for sorting strings but How about numbers or array of objects?&lt;br&gt;
Let's check out sorting hacks for Numbers and Objects in Increasing and Decreasing order as well.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sort String Array
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const stringArr = ["Joe", "Kapil", "Steve", "Musk"]
stringArr.sort();
// Output
(4) ["Joe", "Kapil", "Musk", "Steve"]

stringArr.reverse();
// Output
(4) ["Steve", "Musk", "Kapil", "Joe"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Sort Number Array
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const array  = [40, 100, 1, 5, 25, 10];
array.sort((a,b)=&amp;gt;a-b);
// Output
(6) [1, 5, 10, 25, 40, 100]

array.sort((a,b)=&amp;gt;b-a);
// Output
(6) [100, 40, 25, 10, 5, 1]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Sort Array of Objects
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const objectArr = [ 
    { first_name: 'Lazslo', last_name: 'Jamf'     },
    { first_name: 'Pig',    last_name: 'Bodine'   },
    { first_name: 'Pirate', last_name: 'Prentice' }
];
objectArr.sort((a, b) =&amp;gt; a.last_name.localeCompare(b.last_name));
// Output
(3) [{…}, {…}, {…}]
0: {first_name: "Pig", last_name: "Bodine"}
1: {first_name: "Lazslo", last_name: "Jamf"}
2: {first_name: "Pirate", last_name: "Prentice"}
length: 3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#4-ever-need-to-filter-falsy-values-out-of-an-array"&gt;
  &lt;/a&gt;
  4. Ever need to filter falsy values out of an array?
&lt;/h4&gt;

&lt;p&gt;Falsy values like &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;""&lt;/code&gt;, &lt;code&gt;''&lt;/code&gt; can be omitted easily through below trick&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const array = [3, 0, 6, 7, '', false];
array.filter(Boolean);
// Output
(3) [3, 6, 7]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#5-use-logical-operators-for-various-conditions"&gt;
  &lt;/a&gt;
  5. Use Logical Operators for various conditions
&lt;/h4&gt;

&lt;p&gt;If you want to reduce nested if..else or switch cases, you can simply play with basic of logical operators &lt;code&gt;AND/OR&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function doSomething(arg1){ 
    arg1 = arg1 || 10; 
// set arg1 to 10 as a default if it’s not already set
return arg1;
}

let foo = 10;  
foo === 10 &amp;amp;&amp;amp; doSomething(); 
// is the same thing as if (foo == 10) then doSomething();
// Output: 10

foo === 5 || doSomething();
// is the same thing as if (foo != 5) then doSomething();
// Output: 10
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#6-remove-duplicates-values"&gt;
  &lt;/a&gt;
  6. Remove Duplicates values
&lt;/h4&gt;

&lt;p&gt;You might have used &lt;code&gt;indexOf()&lt;/code&gt; with for loop which return first found index or newer one &lt;code&gt;includes()&lt;/code&gt; which returns boolean true/false from the array to find out/remove duplicates. Here's we have 2 quicker approaches.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const array  = [5,4,7,8,9,2,7,5];
array.filter((item,idx,arr) =&amp;gt; arr.indexOf(item) === idx);
or
const nonUnique = [...new Set(array)];
// Output: [5, 4, 7, 8, 9, 2]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#7-create-a-counter-object-or-map"&gt;
  &lt;/a&gt;
  7. Create a Counter Object or Map
&lt;/h4&gt;

&lt;p&gt;Most of the time, the requirement to solve problem by creating counter object or map which tracks variables as keys with their frequency/occurrences as values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let string = 'kapilalipak';

const table={}; 
for(let char of string) {
  table[char]=table[char]+1 || 1;
}
// Output
{k: 2, a: 3, p: 2, i: 2, l: 2}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const countMap = new Map();
  for (let i = 0; i &amp;lt; string.length; i++) {
    if (countMap.has(string[i])) {
      countMap.set(string[i], countMap.get(string[i]) + 1);
    } else {
      countMap.set(string[i], 1);
    }
  }
// Output
Map(5) {"k" =&amp;gt; 2, "a" =&amp;gt; 3, "p" =&amp;gt; 2, "i" =&amp;gt; 2, "l" =&amp;gt; 2}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#8-ternary-operator-is-cool"&gt;
  &lt;/a&gt;
  8. Ternary Operator is cool
&lt;/h4&gt;

&lt;p&gt;You can avoid nested conditional if..elseif..elseif with ternary operators.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function Fever(temp) {
return temp &amp;gt; 97 ? 'Visit Doctor!'
      : temp &amp;lt; 97 ? 'Feel Better!'
      : temp === 97 ? 'Take Some Rest!'
      : 'Go Out and Play!';
}

// Output
Fever(97): "Take Some Rest!" 
Fever(100): "Visit Doctor!"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#9-quicker-for-loops-compare-to-legacy-onces"&gt;
  &lt;/a&gt;
  9. Quicker for loops compare to legacy onces
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;for&lt;/code&gt; and &lt;code&gt;for..in&lt;/code&gt; gets you index by default, but you can use arr[index]. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;for..in&lt;/code&gt; accepts non numeric as well so avoid it.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;forEach&lt;/code&gt;, &lt;code&gt;for...of&lt;/code&gt; gets you element directly. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;forEach&lt;/code&gt; can get you index also but for/of can't. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;for&lt;/code&gt; and &lt;code&gt;for...of&lt;/code&gt; considers holes in array but other 2 do not.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#10-merge-2-objects"&gt;
  &lt;/a&gt;
  10. Merge 2 objects
&lt;/h4&gt;

&lt;p&gt;Often we need to merge multiple objects in our daily tasks.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const user = { 
 name: 'Kapil Raghuwanshi', 
 gender: 'Male' 
 };
const college = { 
 primary: 'Mani Primary School', 
 secondary: 'Lass Secondary School' 
 };
const skills = { 
 programming: 'Extreme', 
 swimming: 'Average', 
 sleeping: 'Pro' 
 };

const summary = {...user, ...college, ...skills};

// Output 
gender: "Male"
name: "Kapil Raghuwanshi"
primary: "Mani Primary School"
programming: "Extreme"
secondary: "Lass Secondary School"
sleeping: "Pro"
swimming: "Average"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#11-arrow-functions"&gt;
  &lt;/a&gt;
  11. Arrow Functions
&lt;/h4&gt;

&lt;p&gt;An arrow function expression is a compact alternative to a traditional function expression, but is limited and can't be used in all situations. Since they have lexical scope (parental scope) and does not have their own &lt;code&gt;this&lt;/code&gt; and &lt;code&gt;arguments&lt;/code&gt; hence they refer to the environment in which they are defined.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const person = {
name: 'Kapil',
sayName() {
    return this.name;
    }
}
person.sayName();
// Output
"Kapil"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const person = {
name: 'Kapil',
sayName : () =&amp;gt; {
    return this.name;
    }
}
person.sayName();
// Output
""
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#12-optional-chaining"&gt;
  &lt;/a&gt;
  12. Optional Chaining
&lt;/h4&gt;

&lt;p&gt;The optional chaining ?. stops the evaluation if the value before ?. is undefined or null and returns undefined.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const user = {
  employee: {
    name: "Kapil"
  }
};
user.employee?.name;
// Output: "Kapil"
user.employ?.name;
// Output: undefined
user.employ.name
// Output: VM21616:1 Uncaught TypeError: Cannot read property 'name' of undefined
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#13-shuffle-an-array"&gt;
  &lt;/a&gt;
  13. Shuffle an Array
&lt;/h4&gt;

&lt;p&gt;Making use of inbuilt &lt;code&gt;Math.random()&lt;/code&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const list = [1, 2, 3, 4, 5, 6, 7, 8, 9];
list.sort(()=&amp;gt;{
    return Math.random() - 0.5;
});
// Output
(9) [2, 5, 1, 6, 9, 8, 4, 3, 7]
Call it again
(9) [4, 1, 7, 5, 3, 8, 2, 9, 6]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#14-nullish-coalescing-operator"&gt;
  &lt;/a&gt;
  14. Nullish Coalescing Operator
&lt;/h4&gt;

&lt;p&gt;The nullish coalescing operator (??) is a logical operator that returns its right-hand side operand when its left-hand side operand is null or undefined, and otherwise returns its left-hand side operand.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const foo = null ?? 'my school';
// Output: "my school"

const baz = 0 ?? 42;
// Output: 0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#15-rest-amp-spread-operators"&gt;
  &lt;/a&gt;
  15. Rest &amp;amp; Spread operators
&lt;/h4&gt;

&lt;p&gt;Those mysterious 3 dots &lt;code&gt;...&lt;/code&gt; can rest or spread!🤓&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function myFun(a,  b, ...manyMoreArgs) {
   return arguments.length;
}
myFun("one", "two", "three", "four", "five", "six");

// Output: 6
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const parts = ['shoulders', 'knees']; 
const lyrics = ['head', ...parts, 'and', 'toes']; 

lyrics;
// Output: 
(5) ["head", "shoulders", "knees", "and", "toes"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#16-default-parameters"&gt;
  &lt;/a&gt;
  16. Default Parameters
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const search = (arr, low=0,high=arr.length-1) =&amp;gt; {
    return high;
}
search([1,2,3,4,5]);

// Output: 4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#17-convert-decimal-to-binary-or-hexa"&gt;
  &lt;/a&gt;
  17. Convert Decimal to Binary or Hexa
&lt;/h4&gt;

&lt;p&gt;We can use some in-built methods like &lt;code&gt;.toPrecision()&lt;/code&gt; or &lt;code&gt;.toFixed()&lt;/code&gt; to achieve much of helping functionalities while solving problems.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const num = 10;

num.toString(2);
// Output: "1010"
num.toString(16);
// Output: "a"
num.toString(8);
// Output: "12"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#18-simple-swap-2-values-using-destructuring"&gt;
  &lt;/a&gt;
  18. Simple Swap 2 values using Destructuring
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let a = 5;
let b = 8;
[a,b] = [b,a]

[a,b]
// Output
(2) [8, 5]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#19-singleliner-palindrome-check"&gt;
  &lt;/a&gt;
  19. Single-liner Palindrome check
&lt;/h4&gt;

&lt;p&gt;Well, this is not a shorthand trick overall but it will give you clear idea to play with strings.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function checkPalindrome(str) {
  return str == str.split('').reverse().join('');
}
checkPalindrome('naman');
// Output: true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#20-turn-object-attributes-into-an-array-of-attributes"&gt;
  &lt;/a&gt;
  20. Turn Object attributes into an Array of attributes
&lt;/h4&gt;

&lt;p&gt;Using &lt;code&gt;Object.entries()&lt;/code&gt;,&lt;code&gt;Object.keys()&lt;/code&gt; and &lt;code&gt;Object.values()&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const obj = { a: 1, b: 2, c: 3 };

Object.entries(obj);
// Output
(3) [Array(2), Array(2), Array(2)]
0: (2) ["a", 1]
1: (2) ["b", 2]
2: (2) ["c", 3]
length: 3

Object.keys(obj);
(3) ["a", "b", "c"]

Object.values(obj);
(3) [1, 2, 3]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So that's it guys for now! 🤗&lt;/p&gt;

&lt;p&gt;If you know few more hacks like above, feel free to share them in the comment section below, so that we can all learn them together.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#if-you-really-learned-something-new-with-this-article-or-it-really-made-your-dev-work-faster-than-before-like-it-save-it-and-share-it-with-your-colleagues"&gt;
  &lt;/a&gt;
  If you really learned something new with this article or it really made your dev work faster than before, like it, save it and share it with your colleagues.
&lt;/h5&gt;

&lt;p&gt;I have been writing tech blogs for quite a time now, and have mostly published through my &lt;a href="https://www.medium.com/@techygeeky"&gt;Medium&lt;/a&gt; account, this is my first tech article/tutorial in Dev.to. Hope you guys will shower love to it!🤩&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Let’s be connected on &lt;a href="https://www.linkedin.com/in/kapilraghuwanshi/"&gt;LinkedIn&lt;/a&gt; and &lt;a href="https://www.twitter.com/techygeeeky"&gt;Twitter&lt;/a&gt; for more such engaging Tech Articles and Tutorials.🤝&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>webdev</category>
      <category>tutorial</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>How to Build an EDA App in Python</title>
      <author>Data Professor</author>
      <pubDate>Tue, 08 Jun 2021 07:04:09 +0000</pubDate>
      <link>https://dev.to/dataprofessor/how-to-build-an-eda-app-in-python-4een</link>
      <guid>https://dev.to/dataprofessor/how-to-build-an-eda-app-in-python-4een</guid>
      <description>&lt;p&gt;Exploratory data analysis (EDA) is an essential and preliminary first steps for exploring and summarizing the main characteristics of datasets. EDA provides the means to help us better understand variables and their relationships. This is achieved by non-graphical (descriptive statistics) and graphical (data visualization) techniques.&lt;/p&gt;

&lt;p&gt;In this article, we will be creating an EDA web app that you can use to speed up your EDA analysis or allow your colleagues to perform EDA without having to code in Python. A simple upload of the input CSV file is all it takes to perform EDA analysis.&lt;/p&gt;

&lt;p&gt;You can also refer to my YouTube video &lt;a href="https://youtu.be/p4uohebPuCg"&gt;&lt;strong&gt;&lt;em&gt;How to build an Exploratory Data Analysis app using Pandas Profiling&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt; on my YouTube channel (&lt;a href="https://www.youtube.com/channel/UCV8e2g4IWQqK71bbzGDEI4Q"&gt;&lt;strong&gt;&lt;em&gt;Data Professor&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;) as a supplement to this article.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://towardsdatascience.com/how-to-build-an-eda-app-in-python-af7ec4b51528"&gt;&lt;strong&gt;Read the full article&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>datascience</category>
      <category>python</category>
      <category>analytics</category>
    </item>
    <item>
      <title>How to Build a Simple Portfolio Website for FREE</title>
      <author>Data Professor</author>
      <pubDate>Tue, 08 Jun 2021 06:58:54 +0000</pubDate>
      <link>https://dev.to/dataprofessor/how-to-build-a-simple-portfolio-website-for-free-4k3o</link>
      <guid>https://dev.to/dataprofessor/how-to-build-a-simple-portfolio-website-for-free-4k3o</guid>
      <description>&lt;p&gt;In this article, you will learn how to build a portfolio website for free in order to showcase your projects whether it be for data science, software development or web development. Some of the benefits of a portfolio website helps potential employers see the breadth and depth of your experience, which may be particularly helpful if you’re coming from an unconventional background (such as being a self-taught professional, etc.).&lt;/p&gt;

&lt;p&gt;The portfolio website that we will be building today will be hosted for free on on GitHub pages. I will assume that you have minimal to no HTML experience. But if you have prior experience, this tutorial should take you even less time to complete.&lt;/p&gt;

&lt;p&gt;We have a lot to cover here and without further ado let’s get started!&lt;/p&gt;

&lt;p&gt;Also check out the accompanying YouTube video by the same name (&lt;a href="https://www.youtube.com/watch?v=6NXLGP65S2Q"&gt;&lt;strong&gt;&lt;em&gt;How to Build a Simple Portfolio Website for FREE&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;) that you can watch alongside reading this blog post.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://towardsdatascience.com/how-to-build-a-simple-portfolio-website-for-free-f49327675fd9"&gt;&lt;strong&gt;Read the full article&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Creating Tic-Tac-Toe Using React / JavaScript</title>
      <author>Tim Winfred (He/She/They)</author>
      <pubDate>Tue, 08 Jun 2021 06:48:28 +0000</pubDate>
      <link>https://dev.to/twinfred/creating-tic-tac-toe-using-react-javascript-b3</link>
      <guid>https://dev.to/twinfred/creating-tic-tac-toe-using-react-javascript-b3</guid>
      <description>&lt;p&gt;As I continued my #100DaysOfCode challenge tonight, I decided to test my React skills to see if I could create the classic children's game Tic-Tac-Toe.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twinfred.github.io/TIM-Tac-Toe/"&gt;Play TIM-Tac-Toe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twinfred/TIM-Tac-Toe"&gt;See the code on Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From start to finish, I believe the challenge took me about two hours, although the first 15 minutes was prepping how I wanted to design my code.&lt;/p&gt;

&lt;p&gt;These were my pre-coding notes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Use React

Create GameBoard component
Create GameRow component
Create GameSquare component (button)

State will live in the GameBoard component

State will include a 3x3 2D array that represents the board
- 0 = unfilled
- 1 = X
- 2 = O

State will include a moves counter that increments every time a move is made

Every time a player clicks on a GameSquare button, it sends an onClick up to parent component
Modifying the state will rerender the GameSquare component to visually show X or O

Every time a player makes a move, increment the move counter and check the move counter amount
If the counter is at least 5, check the win conditions
Only check win conditions related to the location that was updated (see below)

Win conditions:
- all items in a row
- all items in a column
- all items diagonally

Win conditions stored in a hash table (object)
- the keys would be the location of each square
&amp;gt;&amp;gt; i.e. [0,0], [0,1], [0,2], [1,0], [1,1], etc...
- values would be possible win directions for the key
&amp;gt;&amp;gt; i.e. [0,0] win conditions would be [[0,1],[0,2]], [[1,0],[2,0]], [[1,1],[2,2]]

If a win condition is ever satisfied, send an alert announcing who won and reset state
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The hardest part of this challenge was figuring out how to handle the win conditions. I still think there is probably an algorithmic way to code the &lt;code&gt;winConditions&lt;/code&gt;, but that felt more like a "nice-to-have". Maybe I'll end up updating it in the future, who knows =)&lt;/p&gt;

&lt;p&gt;I'd love any feedback on my code, which I've pasted below for convenience. Drop me a comment if you have any thoughts!&lt;/p&gt;

&lt;p&gt;The biggest issue I ran into was even though the &lt;code&gt;gameBoard&lt;/code&gt; state was being updated when a &lt;code&gt;GameBoard&lt;/code&gt; button was clicked, the DOM wasn't updating to reflect the change. After some sleuthing, I discovered that this was happening because I was originally just passing &lt;code&gt;gameBoard&lt;/code&gt; into &lt;code&gt;updateGameBoard&lt;/code&gt; (&lt;code&gt;Gameboard.js&lt;/code&gt; - line 51). The children components weren't updating because React was seeing it as the same array (even though elements inside of it were updated). In the end, I had to spread the array into a new array to force it to update. Worked like a charm!&lt;/p&gt;

&lt;p&gt;Here is the final code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// GameBoard.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;GameRow&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./GameRow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;gameBoard&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;updateGameBoard&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]]);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;winner&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;updateWinner&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;turnCounter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;updateTurnCounter&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;currentPlayer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;updateCurrentPlayer&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;winner&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Congrats player &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;winner&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, you're the winner!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;updateGameBoard&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]]);&lt;/span&gt;
      &lt;span class="nx"&gt;updateWinner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;updateTurnCounter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;updateCurrentPlayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;winner&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isWinner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;winConditions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0,0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]]],&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0,1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]],&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0,2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]]],&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1,0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]]],&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1,1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]]],&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1,2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]]],&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2,0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]]],&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2,1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]]],&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2,2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]]&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;winner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nx"&gt;winConditions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;winLocation&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isWinner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;winLocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;every&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;gameBoard&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]][&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;currentPlayer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;

      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isWinner&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;winner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;winner&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleGameSquareClick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;gameBoard&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]][&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;currentPlayer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;updateGameBoard&lt;/span&gt;&lt;span class="p"&gt;([...&lt;/span&gt;&lt;span class="nx"&gt;gameBoard&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;turnCounter&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;weHaveAWinner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isWinner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;do we have a winner?&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;weHaveAWinner&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;weHaveAWinner&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;updating winner&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;updateWinner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentPlayer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;updateCurrentPlayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentPlayer&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;updateTurnCounter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;turnCounter&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;TIM&lt;/span&gt; &lt;span class="nx"&gt;Tac&lt;/span&gt; &lt;span class="nx"&gt;Toe&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Player&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;currentPlayer&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;s turn&amp;lt;/h2&amp;gt;
      {
        gameBoard.map((row, index) =&amp;gt; (
          &amp;lt;GameRow row={row} rowIndex={index} key={index} handleClick={handleGameSquareClick}/&amp;gt;
        ))
      }
    &amp;lt;/div&amp;gt;
  );
}

export default App;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// GameRow.jsx&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;GameSquare&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./GameSquare&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;GameRow&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;square&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;GameSquare&lt;/span&gt; &lt;span class="nx"&gt;square&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;square&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;columnIndex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;GameRow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./GameSquare.scss&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;GameSquare&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;square&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;rowIndex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;columnIndex&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;rowIndex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;columnIndex&lt;/span&gt;&lt;span class="p"&gt;])}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;square&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;square&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;X&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;O&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;GameSquare&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>react</category>
      <category>javascript</category>
      <category>gamedev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>The Power of Scraping LinkedIn Data for Businesses</title>
      <author>jeremiah-t</author>
      <pubDate>Tue, 08 Jun 2021 06:04:01 +0000</pubDate>
      <link>https://dev.to/jeremiaht/the-power-of-scraping-linkedin-data-for-businesses-572h</link>
      <guid>https://dev.to/jeremiaht/the-power-of-scraping-linkedin-data-for-businesses-572h</guid>
      <description>&lt;h6&gt;
  &lt;a href="#in-this-article-we-explore-how-scraping-linkedin-data-can-lead-to-a-significant-competitive-edge-in-business-intelligence-for-any-company"&gt;
  &lt;/a&gt;
  In this article, we explore how scraping LinkedIn data can lead to a significant competitive edge in business intelligence for any company.
&lt;/h6&gt;

&lt;h2&gt;
  &lt;a href="#introduction-to-open-web-external-data"&gt;
  &lt;/a&gt;
  Introduction to Open Web, External Data
&lt;/h2&gt;

&lt;p&gt;In an era of digitization, data is becoming the core component for business growth. Today, apart from already collecting their internal data for analysis, companies are realizing the importance of open web data (external data) in gaining a competitive advantage.&lt;br&gt;
There are millions of data sources but today we look at LinkedIn as a data source and how that can allow businesses to gain an edge.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#linkedin-is-a-gold-mine-for-actionable-business-data"&gt;
  &lt;/a&gt;
  LinkedIn is a “Gold Mine” for actionable, business data.
&lt;/h2&gt;

&lt;p&gt;LinkedIn reports over &lt;a href="https://economicgraph.linkedin.com/"&gt;772 million&lt;/a&gt; users from across 200 countries. With a &lt;a href="https://go.forrester.com/blogs/the-global-information-worker-population-swells-to-1-25-billion-in-2018/"&gt;1.25 billion&lt;/a&gt; global information worker population (people that use a smartphone, PC, or tablet for work an hour more per day in a typical week.) as of 2018 and growing, that is an estimated 70% (and growing) of all information workers listed on LinkedIn.&lt;br&gt;
Consider that, and nearly 55 million companies, 14 million open jobs, and 36,000 skills listed on the platform, LinkedIn becomes an essential primary open web data source for business intelligence.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-kind-of-data-is-available-on-linkedin"&gt;
  &lt;/a&gt;
  What Kind of Data is Available on LinkedIn?
&lt;/h2&gt;

&lt;p&gt;There are thousands of data points available on the platform. However, there are some common types of data that are of utmost importance for clients and organizations. Here are some of the data points that are most commonly acquired using the available LinkedIn scraping services out there.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;More than two new members join LinkedIn every second.&lt;/p&gt;
&lt;h6&gt;
  &lt;a href="#business-of-apps"&gt;
  &lt;/a&gt;
  -Business of Apps
&lt;/h6&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#people-data"&gt;
  &lt;/a&gt;
  People Data
&lt;/h2&gt;

&lt;p&gt;With the 772 million professional profiles on LinkedIn steadily increasing, you can now tap on the wealth of such People data. There are over 100 data points per LinkedIn profile. More importantly, LinkedIn's resume-style profiles are retrospective where a user fills in the full back-dated career or education history. This means you can effectively reconstruct an individual's entire professional career just from work experience in a data field.&lt;/p&gt;

&lt;p&gt;Here are some data points available from an individual's LinkedIn Profile&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SpbzK8FL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iq14j7dizbkr6jg48q8f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SpbzK8FL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iq14j7dizbkr6jg48q8f.png" alt="Profile Data Points"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#company-data"&gt;
  &lt;/a&gt;
  Company Data
&lt;/h2&gt;

&lt;p&gt;Companies now invest a serious amount of resources in maintaining their LinkedIn company profiles with key firmographic, social activity, and job data. Extracting basic firmographic data enables companies to stay ahead of the competition and understand the market landscape. Companies can use search filters like industry, company size, and geographic location to attain in-depth competitive intelligence.&lt;/p&gt;

&lt;p&gt;You can extract fully enriched company data with crucial information such as:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iXlQS9YL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f3h4g5bpemeomw0rj070.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iXlQS9YL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f3h4g5bpemeomw0rj070.png" alt="Company Data Points"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#social-listening-data"&gt;
  &lt;/a&gt;
  Social Listening Data
&lt;/h2&gt;

&lt;p&gt;Whether in Finance, Research, or any business discipline, what a company or top executive shares on social media platforms has value as an indicator with possible business impact. Newmarket expansion, M&amp;amp;As, product failures, executive hires, or departures can all be captured. This is especially true as companies and individuals start to be more active on LinkedIn.&lt;/p&gt;

&lt;p&gt;The key is staying updated on such indicators by monitoring the social activities of companies and top business professionals.&lt;/p&gt;

&lt;p&gt;You can derive information from the social activity data from LinkedIn by using the following data points:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SXinyEuT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ctqzp7yazp1rwzs3uhk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SXinyEuT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ctqzp7yazp1rwzs3uhk.png" alt="Social Activity Data Points"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-is-linkedin-data-useful-for-businesses"&gt;
  &lt;/a&gt;
  How is LinkedIn Data Useful for Businesses?
&lt;/h2&gt;

&lt;p&gt;With all that data available, how do businesses utilize this data in an effective manner to gain a competitive edge. To understand this, we will look at a couple of common use cases for the data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#research"&gt;
  &lt;/a&gt;
  Research
&lt;/h3&gt;

&lt;p&gt;With the power of reconstructing whole careers using a LinkedIn profile, one can only imagine how vast this can be applied in the field of research.&lt;/p&gt;

&lt;p&gt;Top-tier academic and research institutions are starting to discover the power of such data and are even starting to incorporate LinkedIn into their publications as references.&lt;/p&gt;

&lt;p&gt;An example would be collecting all profiles affiliated with Company A from 2010 to 2016, extracting data points such as skills, and correlating that to the sales performance of Company A. One could then make inferences that certain skills found in employees would lead to an outperforming company. I'm no researcher but you get where I'm coming from.&lt;/p&gt;

&lt;p&gt;Read more about how Researchers are using LinkedIn data &lt;a href="https://mantheos.com/use-cases/research/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#human-resources"&gt;
  &lt;/a&gt;
  Human Resources
&lt;/h3&gt;

&lt;p&gt;Human Resources, as the name suggests, is all about the people. And with LinkedIn essentially a resume database of all the professionals in the world, you can imagine the competitive advantage this gives any recruiter, HR tech SaaS or service provider. Of course, browsing them manually on LinkedIn is not very scalable but when you have all that data in its raw format, you have all the power. This data also lends itself very well to HR Tech companies like &lt;a href="https://hiretual.com/"&gt;Hiretual&lt;/a&gt; and &lt;a href="https://goarya.com/"&gt;Arya&lt;/a&gt; who are utilizing Artificial Intelligence to source and match highly relevant candidates for a particular role using data found on a LinkedIn profile.&lt;/p&gt;

&lt;p&gt;Read more about how HR companies are using LinkedIn data &lt;a href="https://mantheos.com/use-cases/human-resource/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#alumni-corporate-amp-academia-relations"&gt;
  &lt;/a&gt;
  Alumni (Corporate &amp;amp; Academia) Relations
&lt;/h3&gt;

&lt;p&gt;As a college graduate, chances are, you would have received one of those alumni forms in the mail asking for an update of contact details. Chances also are, that you never filled that out. Universities want to know how your career develops upon graduation but only collect data on enrolment and graduation.&lt;/p&gt;

&lt;p&gt;Most of the top-tier universities are also successful due to their strong alumni network and funding. And good alumni relations start with knowing who they are and where they are in their careers now.&lt;/p&gt;

&lt;p&gt;Scraping LinkedIn data allows universities to track their alumni, group alumni based on seniority levels, industries, job functions and therefore build a strong alumni community. Identifying notable alumni also helps with building donor lists and encouraging new enrolment.&lt;/p&gt;

&lt;p&gt;Read more about how Universities are using LinkedIn data &lt;a href="https://mantheos.com/use-cases/alumni/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#alternative-data-for-finance"&gt;
  &lt;/a&gt;
  Alternative Data for Finance
&lt;/h3&gt;

&lt;p&gt;Investing in companies, whether a start-up or a fortune 500 company has traditionally been about reading financial statements and reports. While that is a good indicator of output, it often does not tell the full story. Financial institutions are constantly looking for more alternative data to better evaluate the investment potential of a company. This is where people's data comes in when you think about it, talent fundamentally drives the performance of a company, and if you believe that then procuring as much data about a company's people aka employees becomes of utmost priority.&lt;/p&gt;

&lt;p&gt;The power of having the full LinkedIn profile data of all employees from any company cannot be underestimated. Companies can use this data to analyze company hierarchies, functional compositions, educational backgrounds, and more. Thereafter, collecting this data monthly gives insights like key executive hires/departures, geographical market expansions, and talent acquisition strategies.&lt;/p&gt;

&lt;p&gt;Read more about how Financial Institutions are using LinkedIn data &lt;a href="https://mantheos.com/use-cases/investing/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-scrape-linkedin"&gt;
  &lt;/a&gt;
  How to Scrape LinkedIn?
&lt;/h2&gt;

&lt;p&gt;For the benefit of some readers, data scraping is a technique that uses computer programs that enables the extraction of data from numerous sources such as webpages, social media platforms, blogs, and e-commerce platforms. If you are technical and are willing to invest the required time and effort, you could explore building your own scraper but scraping LinkedIn has its unique set of challenges with the vast amount of data and platform restrictions. Another option would be looking at companies offering such professional scraping services.&lt;/p&gt;

&lt;p&gt;There are a few LinkedIn scraping tools available on the market with differences in available data points, quality of data, and scale of aggregation. Choosing the right data partner is absolutely critical depending on your requirements unique to your business.&lt;/p&gt;

&lt;p&gt;Here at Mantheos, our data aggregation techniques are constantly evolving to provide a LinkedIn scraping service that provides scraping at scale, well-structured/prepared datasets, comprehensive data points, and most importantly, high-quality data. This is showcased with our &lt;a href="https://www.mantheos.com/real-time-api/"&gt;real-time LinkedIn scraping API&lt;/a&gt; that is designed to empower companies with a real-time people/company data pipeline that they can efficiently plug into their business processes and technologies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;LinkedIn data is amongst the most comprehensive and sought after data sources for People and Company data. This is expected to grow as the platform continues to acquire more users. The possibilities with the amount of data are simply endless and companies need to start capitalizing on this opportunity. Although there are growing concerns among users about data privacy issues, a controlled effort with specific guidelines to collect data from LinkedIn will ensure the users' legitimacy of data uses and privacy.&lt;/p&gt;

&lt;p&gt;Follow us on &lt;a href="https://www.linkedin.com/company/mantheos/"&gt;LinkedIn&lt;/a&gt; and &lt;a href="https://www.facebook.com/mantheosgroup/"&gt;Facebook&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>bigdata</category>
      <category>webscraper</category>
      <category>datascraper</category>
      <category>linkedin</category>
    </item>
    <item>
      <title>We Need Your Help</title>
      <author>Zack</author>
      <pubDate>Tue, 08 Jun 2021 05:04:57 +0000</pubDate>
      <link>https://dev.to/zackenstien/we-need-your-help-23c6</link>
      <guid>https://dev.to/zackenstien/we-need-your-help-23c6</guid>
      <description>&lt;p&gt;Today, I started a small project named "CodeSnippets".  The goal is to have a library of easily accessible code snippets and examples with no license.&lt;/p&gt;

&lt;p&gt;The project can be found here: &lt;a href=""&gt;https://github.com/trimorphdev/codesnippets&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And if you have any questions about the project or want to know where to start contributing, feel free to &lt;a href="https://github.com/trimorphdev/codesnippets/issues/new"&gt;create an issue&lt;/a&gt;!  I would be more than happy to help you get started.&lt;/p&gt;

&lt;p&gt;Thanks for your contributions :)&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Give vue-i18n more superpowers❕</title>
      <author>Adriano Raiano</author>
      <pubDate>Tue, 08 Jun 2021 05:02:08 +0000</pubDate>
      <link>https://dev.to/adrai/give-vue-i18n-more-superpowers-12la</link>
      <guid>https://dev.to/adrai/give-vue-i18n-more-superpowers-12la</guid>
      <description>&lt;p&gt;It’s joyful to work with &lt;a href="https://vuejs.org/"&gt;Vue.js&lt;/a&gt;. The design is elegant and the robust first-party additions which can be coupled with, make building browser apps a pleasure.&lt;/p&gt;

&lt;p&gt;The most famous i18n plugin for the progressive JavaScript framework &lt;a href="https://vuejs.org/"&gt;Vue.js&lt;/a&gt; is probably &lt;a href="https://kazupon.github.io/vue-i18n/"&gt;Vue I18n&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/kazupon"&gt;Kazuya&lt;/a&gt;, thank you for this great i18n plugin!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Dmi2jrE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gfui8d7c8a2jsr3xnit4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Dmi2jrE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gfui8d7c8a2jsr3xnit4.jpg" alt="https://www.npmtrends.com/vue-i18n-vs-vue-gettext-vs-v-localize-vs-voo-i18n-vs-vue-i18next-vs-vue-multilanguage-vs-vue-polyglot-vs-vue-translate-plugin"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#toc"&gt;
  &lt;/a&gt;
  TOC
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#new-versions"&gt;New versions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#start"&gt;So how does a basic vue-i18n setup look like? Let's get into it...&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#vue-i18n-better"&gt;Is it possible to make a vue-18n setup even better?&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#language-switcher"&gt;Language Switcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#component-directive"&gt;Component interpolation and directive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#superpowers"&gt;Where are the additional superpowers?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-look"&gt;How does this look like?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#save-missing"&gt;save missing translations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#more"&gt;👀 but there's more...&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#congratulations"&gt;🎉🥳 Congratulations 🎊🎁&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#new-versions"&gt;
  &lt;/a&gt;
  New versions &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Beside templates, directives, data binding, event handling, etc... with v3 Vue.js is now introducing also &lt;a href="https://v3.vuejs.org/guide/composition-api-introduction.html"&gt;Composition API&lt;/a&gt;, &lt;a href="https://v3.vuejs.org/guide/teleport.html"&gt;Teleport&lt;/a&gt;, &lt;a href="https://v3.vuejs.org/guide/migration/fragments.html"&gt;Fragments&lt;/a&gt;... and &lt;a href="https://v3.vuejs.org/guide/migration/suspense.html"&gt;Suspense&lt;/a&gt;.&lt;br&gt;
The appropriate version to Vue.js v3 for Vue I18n is &lt;a href="https://blog.intlify.dev/posts/vue-i18n-9.html"&gt;v9&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#so-how-does-a-basic-vuei18n-setup-look-like"&gt;
  &lt;/a&gt;
  So how does a basic vue-i18n setup look like? &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;h2&gt;
  &lt;a href="#lets-get-into-it"&gt;
  &lt;/a&gt;
  Let's get into it...
&lt;/h2&gt;
&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Make sure you have Node.js and npm installed. It's best, if you have some experience with simple HTML, JavaScript and basic Vue.js, before jumping to &lt;a href="https://kazupon.github.io/vue-i18n/"&gt;vue-i18n&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Take your own Vue.js project or create a new one, i.e. with &lt;a href="https://cli.vuejs.org/guide/creating-a-project.html#vue-create"&gt;the vue create cli command&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx @vue/cli create vue-starter-project
&lt;span class="c"&gt;# select vue 3 preset&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's install the vue-i18n dependency:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install vue-i18n@9&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let's prepare the &lt;code&gt;main.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createApp&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createI18n&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-i18n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createI18n&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;locale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// set locale&lt;/span&gt;
  &lt;span class="na"&gt;fallbackLocale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// set fallback locale&lt;/span&gt;
  &lt;span class="na"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;en&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;welcome&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Welcome to Your Vue.js App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;de&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;welcome&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Willkommen zu Deiner Vue.js App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;// If you need to specify other options, you can set other options&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's create a first component &lt;code&gt;TranslationShowCase.vue&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;$t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;welcome&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;TranslationShowCase&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;...and use that component in &lt;code&gt;App.vue&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Vue logo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./assets/logo.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TranslationShowCase&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;TranslationShowCase&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/TranslationShowCase.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;TranslationShowCase&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Avenir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Helvetica&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sans&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;webkit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;smoothing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;antialiased&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;moz&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;osx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;smoothing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;grayscale&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nx"&gt;c3e50&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should now see something like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IW4UPJDs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ryewad8wgv89oy0i5fl3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IW4UPJDs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ryewad8wgv89oy0i5fl3.jpg" alt="result"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#language-switcher"&gt;
  &lt;/a&gt;
  Language Switcher &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Now we will create a language switcher to make the content change between different languages.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;$t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;welcome&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;hr&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale !== 'de'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;changeLanguage('de')&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;DE&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;strong&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale === 'de'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;DE&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/strong&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;nbsp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;|&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;nbsp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale !== 'en'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;changeLanguage('en')&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;EN&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;strong&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale === 'en'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;EN&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/strong&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;TranslationShowCase&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;changeLanguage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;locale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;lang&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vAT6_eLl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rzc2zptoayij78iwndgs.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vAT6_eLl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rzc2zptoayij78iwndgs.jpg" alt="result"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;🥳 Awesome, you've just created your first language switcher!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#component-interpolation-and-directive"&gt;
  &lt;/a&gt;
  Component interpolation and directive &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Now let's try &lt;a href="https://vue-i18n.intlify.dev/guide/advanced/component.html#basic-usage"&gt;component interpolation&lt;/a&gt; and the &lt;a href="https://vue-i18n.intlify.dev/api/directive.html#translationdirective"&gt;translation directive&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;$t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;welcome&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="nx"&gt;keypath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;descr&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;tag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;label&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;doc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://cli.vuejs.org&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;_blank&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;$t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;doc&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/i18n-t&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;{path:'end'}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="nx"&gt;can&lt;/span&gt; &lt;span class="nx"&gt;also&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;written&lt;/span&gt; &lt;span class="nx"&gt;like&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;'end'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;hr&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale !== 'de'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;changeLanguage('de')&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;DE&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;strong&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale === 'de'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;DE&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/strong&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;nbsp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;|&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;nbsp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale !== 'en'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;changeLanguage('en')&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;EN&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;strong&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale === 'en'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;EN&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/strong&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;TranslationShowCase&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;changeLanguage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;locale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;lang&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;...and add the new keys to your translations:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createApp&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createI18n&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-i18n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createI18n&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;locale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// set locale&lt;/span&gt;
  &lt;span class="na"&gt;fallbackLocale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// set fallback locale&lt;/span&gt;
  &lt;span class="na"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;en&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;welcome&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Welcome to Your Vue.js App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;descr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;For a guide and recipes on how to configure / customize this project, check out the {0}.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-cli documentation&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;end&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;have fun!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;de&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;welcome&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Willkommen zu Deiner Vue.js App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;descr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Eine Anleitung und Rezepte für das Konfigurieren / Anpassen dieses Projekts findest du in der {0}.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-cli Dokumentation&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;end&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;habe Spass!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;// If you need to specify other options, you can set other options&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This should be the result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cirOFdzu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gi4dq7bdd45miasp7yev.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cirOFdzu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gi4dq7bdd45miasp7yev.jpg" alt="result"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-are-the-additional-superpowers"&gt;
  &lt;/a&gt;
  Where are the additional superpowers? &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Let's meet &lt;a href="https://github.com/locize/locizer"&gt;locizer&lt;/a&gt;...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/locize/locizer"&gt;locizer&lt;/a&gt; is a lightweight module to access data from your &lt;a href="https://www.locize.com"&gt;locize&lt;/a&gt; project and use that inside your application.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="//../2021-04-14-how-to-internationalize-react-i18next/#for-sure"&gt;What is locize?&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#how-does-this-look-like"&gt;
  &lt;/a&gt;
  How does this look like? &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;First you need to signup at &lt;a href="https://locize.com/register"&gt;locize&lt;/a&gt; and &lt;a href="https://docs.locize.com/integration/getting-started/create-a-user-account"&gt;login&lt;/a&gt;.&lt;br&gt;
Then &lt;a href="https://docs.locize.com/integration/getting-started/add-a-new-project"&gt;create a new project&lt;/a&gt; in locize and add your translations. You can add your translations either by &lt;a href="https://docs.locize.com/more/general-questions/how-to-import-translations-from-a-file"&gt;importing the individual json files&lt;/a&gt; or via &lt;a href="https://docs.locize.com/integration/api#update-remove-translations"&gt;API&lt;/a&gt; or by using the &lt;a href="https://github.com/locize/locize-cli"&gt;CLI&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Having the translations in your code file works, but is not that suitable to work with, for translators.&lt;br&gt;
Using locize separates the translations from the code.&lt;/p&gt;

&lt;p&gt;Having imported all translations should look like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qJV2TmyG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aaw2k9ak7n1iohgyw6ee.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qJV2TmyG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aaw2k9ak7n1iohgyw6ee.jpg" alt="imported"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Done so, we're going to install &lt;a href="https://github.com/locize/locizer"&gt;locizer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install locizer&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let's create a dedicated &lt;code&gt;i18n.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createI18n&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-i18n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;locizer&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;locizer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;namespace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;messages&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// your namespace name added in locize&lt;/span&gt;
&lt;span class="nx"&gt;locizer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;projectId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;your-locize-project-id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createI18n&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;locale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;locizer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lng&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// locizer.lng is the language detected in your browser.&lt;/span&gt;
  &lt;span class="na"&gt;fallbackLocale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// set fallback locale&lt;/span&gt;
  &lt;span class="c1"&gt;// If you need to specify other options, you can set other options&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;// called from within setup hook in App.vue&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;loadMessagesPromise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;locizer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loadAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;namespace&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;global&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setLocaleMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The translations are now loaded asynchronously, that's why we export the &lt;code&gt;loadMessagesPromise&lt;/code&gt; and use it in your &lt;code&gt;App.vue&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Vue logo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./assets/logo.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TranslationShowCase&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;loadMessagesPromise&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./i18n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;TranslationShowCase&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/TranslationShowCase.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;TranslationShowCase&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="c1"&gt;// used in combination with Suspense.&lt;/span&gt;
  &lt;span class="c1"&gt;// useful when translations are not in-memory...&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;loadMessagesPromise&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Avenir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Helvetica&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sans&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;webkit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;smoothing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;antialiased&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;moz&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;osx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;smoothing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;grayscale&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nx"&gt;c3e50&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Additionally, we make use of the new &lt;a href="https://v3.vuejs.org/guide/migration/suspense.html"&gt;Suspense&lt;/a&gt; functionality of Vue.js.&lt;br&gt;
Let's create a new file: i.e. &lt;code&gt;Suspenser.vue&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Suspense&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;fallback&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Loading&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Suspense&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Suspenser&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;App&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And use that in your &lt;code&gt;main.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createApp&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./i18n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Suspenser.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, as long your translations gets loaded you'll see the fallback template:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EiepcSe8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kc04m16j8u1jiiaiukpb.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EiepcSe8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kc04m16j8u1jiiaiukpb.jpg" alt="suspense"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If your browser is configured with german language, you may now have seen the language automatically was set to german by default. This is because of the language detection feature of locizer. You can configure the language detection with other &lt;a href="https://github.com/locize/locizer#init-options"&gt;options&lt;/a&gt;&lt;br&gt;
By default the language detection also is looking for the query parameter lng, so you can also type this url to test this: &lt;a href="http://localhost:8080/?lng=de"&gt;http://localhost:8080/?lng=de&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0bEn6l_b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vot6nrv9ozhqmt786uh7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0bEn6l_b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vot6nrv9ozhqmt786uh7.jpg" alt="language detection"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#save-missing-translations"&gt;
  &lt;/a&gt;
  save missing translations &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;I wish newly added keys in the code, would automatically be saved to locize.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Your wish is my command!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Extend the &lt;code&gt;i18n.js&lt;/code&gt; file with the locize api-key and the handleMissing function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createI18n&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-i18n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;locizer&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;locizer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;namespace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;messages&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// your namespace name added in locize&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;apiKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-api-key&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// used for handleMissing functionality, do not add your api-key in a production build&lt;/span&gt;
&lt;span class="nx"&gt;locizer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;projectId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;your-locize-project-id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;apiKey&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createI18n&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;locale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;locizer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lng&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// locizer.lng is the language detected in your browser.&lt;/span&gt;
  &lt;span class="na"&gt;fallbackLocale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// set fallback locale&lt;/span&gt;
  &lt;span class="c1"&gt;// If you need to specify other options, you can set other options&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;// called from within setup hook in App.vue&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;loadMessagesPromise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;locizer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loadAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;namespace&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;global&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setLocaleMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handleMissing&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;locale&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;apiKey&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;locale&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;locizer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;referenceLng&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;
  &lt;span class="nx"&gt;locizer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;namespace&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And use it in the component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Vue logo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./assets/logo.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TranslationShowCase&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useI18n&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-i18n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;loadMessagesPromise&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;handleMissing&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./i18n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;TranslationShowCase&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/TranslationShowCase.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;TranslationShowCase&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="c1"&gt;// used in combination with Suspense.&lt;/span&gt;
  &lt;span class="c1"&gt;// useful when translations are not in-memory...&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;useI18n&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;setMissingHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;handleMissing&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;loadMessagesPromise&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Avenir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Helvetica&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sans&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;webkit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;smoothing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;antialiased&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;moz&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;osx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;smoothing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;grayscale&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nx"&gt;c3e50&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, if you add a new key in your templates, &lt;code&gt;&amp;lt;h2&amp;gt;{{ $t("How are you?") }}&amp;lt;/h2&amp;gt;&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;$t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;welcome&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;$t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;How are you?&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="nx"&gt;keypath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;descr&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;tag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;label&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;doc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://cli.vuejs.org&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;_blank&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;$t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;doc&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/i18n-t&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;{path:'end'}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="nx"&gt;can&lt;/span&gt; &lt;span class="nx"&gt;also&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;written&lt;/span&gt; &lt;span class="nx"&gt;like&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;'end'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;hr&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale !== 'de'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;changeLanguage('de')&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;DE&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;strong&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale === 'de'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;DE&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/strong&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;nbsp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;|&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;nbsp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale !== 'en'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;changeLanguage('en')&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;EN&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;strong&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$i18n.locale === 'en'&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;EN&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/strong&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;TranslationShowCase&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;changeLanguage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;locale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;lang&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It gets automatically saved to locize:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dCj0ULIV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/veoo6pcq7qwt1lg53y2f.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dCj0ULIV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/veoo6pcq7qwt1lg53y2f.jpg" alt="save missing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lastly, with the help of the &lt;a href="https://docs.locize.com/whats-inside/auto-machine-translation"&gt;auto-machinetranslation workflow&lt;/a&gt;, new keys not only gets added to locize automatically, while developing the app, but are also automatically translated into the target languages using machine translation:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lACgu4gb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ckafj57v362osxu850vk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lACgu4gb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ckafj57v362osxu850vk.jpg" alt="machine translation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--92z1KZgy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p3758w9edjuji10zacad.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--92z1KZgy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p3758w9edjuji10zacad.jpg" alt="result"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-theres-more"&gt;
  &lt;/a&gt;
  👀 but there's more... &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://docs.locize.com/more/caching"&gt;Caching&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kJUDbeA_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bvg7kh84bt8zmu5hxhwq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kJUDbeA_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bvg7kh84bt8zmu5hxhwq.jpg" alt="caching"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.locize.com/more/versioning#merging-versions"&gt;Merging versions&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AKfT1gaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tl63h2jryuyyk9f34tx2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AKfT1gaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tl63h2jryuyyk9f34tx2.jpg" alt="versioning"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;🧑‍💻 The code can be found &lt;a href="https://github.com/locize/locizer/tree/master/example/vue"&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#congratulations"&gt;
  &lt;/a&gt;
  🎉🥳 Congratulations 🎊🎁 &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;I hope you’ve learned a few new things about &lt;a href="https://kazupon.github.io/vue-i18n/"&gt;Vue.js localization&lt;/a&gt; and &lt;a href="https://locize.com"&gt;modern localization workflows&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So if you want to take your i18n topic to the next level, it's worth to try &lt;a href="https://locize.com"&gt;locize&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  👍
&lt;/h1&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>21 beginner JavaScript interview question you must know</title>
      <author>devdefinitive</author>
      <pubDate>Tue, 08 Jun 2021 04:47:11 +0000</pubDate>
      <link>https://dev.to/devdefinitive/21-beginner-javascript-interview-question-you-must-know-1fj6</link>
      <guid>https://dev.to/devdefinitive/21-beginner-javascript-interview-question-you-must-know-1fj6</guid>
      <description>&lt;p&gt;To construct a JavaScript programming vocation, applicants need to break the meeting. They are requested different JavaScript interview questions and replies. &lt;/p&gt;

&lt;p&gt;Following is a rundown of JavaScript interview questions and replies, which are probably going to be asked during the meeting. Competitors are probably going to be asked fundamental JavaScript talk with the interview to propel JS interview questions relying upon their experience and different variables. &lt;/p&gt;

&lt;p&gt;The underneath list covers all the JavaScript interview for freshers and JavaScript interview for proficient level applicants.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#what-is-the-difference-between-java-and-javascript"&gt;
  &lt;/a&gt;
  What is the difference between Java and JavaScript?
&lt;/h3&gt;

&lt;p&gt;Java is a static OOP language that deals with different stages. JavaScript is a powerful programming language that is utilized to make sites and applications dynamic. &lt;/p&gt;

&lt;p&gt;Java is an independent language—it enjoys its opportunity. JavaScript is somewhat more sincerely mutually dependent (however positively?), implying that it works with HTML and CSS on site pages to make the dynamic substance.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-the-firstclass-function-in-javascript"&gt;
  &lt;/a&gt;
  What is the first-class function in JavaScript?
&lt;/h3&gt;

&lt;p&gt;In Javascript, functions are top of the line objects. The first-class function implies when works in that language are dealt with like some other variable. &lt;/p&gt;

&lt;p&gt;Learn in more detail -&amp;gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/First-class_Function"&gt;What is first Class function - MDN&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-closure-in-javascript"&gt;
  &lt;/a&gt;
  What is closure in JavaScript?
&lt;/h3&gt;

&lt;p&gt;A closure is a function that recalls its external factors and can get to them. In certain coding languages, that is unrealistic, or a function ought to be written extraordinarily to get it going. In JavaScript, all functions are normally terminations (there is just a single special case, to be shrouded in The "new Function" linguistic structure).&lt;/p&gt;

&lt;p&gt;Learn in more detail -&amp;gt; &lt;a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-closure-b2f0d2152b36"&gt;Closures in JS - Eric Elliot&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-high-order-function-in-javascript"&gt;
  &lt;/a&gt;
  What is high order function in JavaScript?
&lt;/h3&gt;

&lt;p&gt;Higher-order functions are functions that accept different functions as contentions or return functions as their outcomes. Accepting another function as contention is frequently alluded to as a callback work since it is gotten back to by the higher-request work. This is an idea that Javascript utilizes a great deal.&lt;/p&gt;

&lt;p&gt;Learn in Detail - &lt;a href="https://www.30secondsofcode.org/blog/s/javascript-higher-order-functions"&gt;High Order Functions - 30 Seconds of Code&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-hoisting"&gt;
  &lt;/a&gt;
  What is Hoisting
&lt;/h3&gt;

&lt;p&gt;Hoisting is a JavaScript component where factors(variables) and function announcements are moved to the highest point of their degree before code execution. This implies that regardless of where functions and factors(variables) are pronounced, they are moved to the highest point of their degree whether or not their extension is worldwide or nearby.&lt;/p&gt;

&lt;p&gt;Learn in detail -&amp;gt; &lt;a href="https://www.digitalocean.com/community/tutorials/understanding-hoisting-in-javascript"&gt;What is hoisting - DigitalOcean&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-isnan-function"&gt;
  &lt;/a&gt;
  What is isNaN function?
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;isNaN()&lt;/code&gt; work decides if a worth is an unlawful number (Not-a-Number). This function returns valid if the worth likens to NaN. Else it returns bogus. &lt;code&gt;isNaN()&lt;/code&gt; doesn't change the qualities over to a number, and won't return valid for any worth that isn't of the sort Number.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-classes-in-es6"&gt;
  &lt;/a&gt;
  What are classes in ES6
&lt;/h3&gt;

&lt;p&gt;There are two kinds of Class in ES6: parent class/superclass: The class reached out to make a new class are know as a parent class. kid/subclasses: The class are recently made are known as youngster or subclass. Subclass acquire every one of the properties from the parent class except constructor&lt;/p&gt;

&lt;p&gt;Learn about them in Detail -&amp;gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes"&gt;MDN Docs - Classes&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-negative-infinity-in-javascript"&gt;
  &lt;/a&gt;
  What is negative infinity in JavaScript?
&lt;/h3&gt;

&lt;p&gt;The negative infinity in JavaScript is a consistent worth that is utilized to address a worth that is the most minimal accessible. This implies that no other number is lesser than this worth. It tends to be produced utilizing an independent function or by a math activity. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-callback-function"&gt;
  &lt;/a&gt;
  What is a callback function
&lt;/h3&gt;

&lt;p&gt;In JavaScript, a callback is a function passed into another function as a contention to be executed later. To track down every one of the odd numbers in the cluster, you can utilize the &lt;code&gt;filter()&lt;/code&gt; strategy for the Array object. The &lt;code&gt;filter()&lt;/code&gt; strategy makes another cluster with the components that finish the assessment executed by a function.&lt;/p&gt;

&lt;p&gt;Learn in detail -&amp;gt; &lt;a href="https://www.freecodecamp.org/news/javascript-callback-functions-what-are-callbacks-in-js-and-how-to-use-them/"&gt;Callback functions in JS&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-pure-function"&gt;
  &lt;/a&gt;
  What is a pure function?
&lt;/h3&gt;

&lt;p&gt;A module is only a document. One content is one module. That basic. &lt;/p&gt;

&lt;p&gt;Modules can stack one another and utilize unique mandates fare and import to exchange usefulness, call elements of one module from another: &lt;/p&gt;

&lt;p&gt;Read in detail -&amp;gt; &lt;a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976"&gt;Pure Functions - Eric Elliot&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-iife-in-javascript"&gt;
  &lt;/a&gt;
  What is IIFE in JavaScript?
&lt;/h3&gt;

&lt;p&gt;An  Immediately-invoked Function Expression  (IIFE) is an approach to execute works promptly when they are made. IIFEs are valuable since they don't dirty the worldwide item, and they are a straightforward method to detach factors statements.&lt;/p&gt;

&lt;p&gt;Learn in Detail -&amp;gt; &lt;a href="https://www.freecodecamp.org/news/iife-in-javascript-what/"&gt;IIFE - FreeCodeCamp&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-abcs-of-javascript"&gt;
  &lt;/a&gt;
  What are the ABCs of JavaScript?
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;apply()&lt;/code&gt;, &lt;code&gt;bind()&lt;/code&gt; and, &lt;code&gt;call()&lt;/code&gt; in JavaScript. &lt;/p&gt;

&lt;p&gt;Learn in Detail -&amp;gt; &lt;a href="https://dev.to/rahxuls/abc-of-javascript-50h3"&gt;ABC in JavaScript&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-do-we-need-callbacks"&gt;
  &lt;/a&gt;
  Why do we need callbacks?
&lt;/h3&gt;

&lt;p&gt;Callbacks ensure that a function won't run before an assignment is finished yet will pursue it right after the undertaking has finished. It assists us with creating offbeat JavaScript code and protects us from issues and mistakes.&lt;/p&gt;

&lt;p&gt;Learn in detail -&amp;gt; &lt;a href="https://www.freecodecamp.org/news/javascript-callback-functions-what-are-callbacks-in-js-and-how-to-use-them/"&gt;Callback functions in JS&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-do-you-get-a-syntax-error-in-javascript"&gt;
  &lt;/a&gt;
  When do you get a syntax error in JavaScript?
&lt;/h3&gt;

&lt;p&gt;The SyntaxError object addresses a blunder when attempting to decipher linguistically invalid code. It is tossed when the JavaScript motor experiences tokens or token request that doesn't adjust to the linguistic structure of the language when parsing code.&lt;/p&gt;

&lt;p&gt;Learn in Detail - &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError"&gt;Syntax Error - MDN&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-modules-in-javascript"&gt;
  &lt;/a&gt;
  What are modules in JavaScript?
&lt;/h3&gt;

&lt;p&gt;A module puts together a connected arrangement of JavaScript code. A module can contain factors and functions. A module is just a lump of JavaScript code written in a document. As a matter of course, variables and elements of a module are not accessible for use. Factors and functions inside a module ought to be sent out so they can be gotten to from inside different records. Modules in ES6 work just in exacting mode. This implies factors or functions pronounced in a module won't be available all around the world.&lt;/p&gt;

&lt;p&gt;Learn in more detail -&amp;gt; &lt;a href="https://www.freecodecamp.org/news/javascript-modules-a-beginner-s-guide-783f7d7a5fcc/"&gt;Modules in JS by freecodecamp&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-events"&gt;
  &lt;/a&gt;
  What are events?
&lt;/h3&gt;

&lt;p&gt;JavaScript's communication with HTML is taken care of through events that happen when the client or the program controls a page. At the point when the page loads, it is called an occasion. ... Occasions are a piece of the Document Object Model (DOM) and each HTML component contains a bunch of occasions that can trigger JavaScript Code.&lt;/p&gt;

&lt;p&gt;Learn in detail -&amp;gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events"&gt;Events - MDN&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-memoization-in-javascript"&gt;
  &lt;/a&gt;
  What is memoization in JavaScript?
&lt;/h3&gt;

&lt;p&gt;Memoization is a streamlining method that velocities up applications by putting away the consequences of costly functions calls and returning the stored result when similar sources of info are provided once more. &lt;/p&gt;

&lt;p&gt;Learn in Detail -&amp;gt; &lt;a href="https://scotch.io/tutorials/understanding-memoization-in-javascript"&gt;Memoization - Scotch&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-constructor-method-in-javascript"&gt;
  &lt;/a&gt;
  What is a constructor method in JavaScript?
&lt;/h3&gt;

&lt;p&gt;A JavaScript constructor strategy is an uncommon sort of technique that is utilized to instate and make an item. It is called when memory is allotted for an item. &lt;/p&gt;

&lt;p&gt;Learn in Detail -&amp;gt; &lt;a href="https://javascript.info/constructor-new"&gt;Constructor - JavaSacriptInfo&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-call-stack-in-javascript"&gt;
  &lt;/a&gt;
  What is Call Stack in JavaScript?
&lt;/h3&gt;

&lt;p&gt;A call stack is a component for a translator (like the JavaScript mediator in an internet browser) to monitor its place in a container that calls different functions — which function is as of now being run and which functions are called from inside that function, and so on. &lt;/p&gt;

&lt;p&gt;Learnin detail -&amp;gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Call_stack"&gt;Call stack - MDN&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-currying-in-javascript"&gt;
  &lt;/a&gt;
  What is Currying in JavaScript?
&lt;/h3&gt;

&lt;p&gt;Currying is a strategy of assessing functions with different contentions, into a grouping of capacities with a single argument. In different words, when a function, rather than taking all contentions all at once, takes the first and return another function that requires the subsequent one and returns another function. &lt;/p&gt;

&lt;p&gt;Learn in detail -&amp;gt; &lt;a href="https://blog.bitsrc.io/understanding-currying-in-javascript-ceb2188c339"&gt;Currying - BitSrc&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-this-in-javascript"&gt;
  &lt;/a&gt;
  What is "this" in JavaScript?
&lt;/h3&gt;

&lt;p&gt;Each javascript work while executing has a reference to its present execution setting, called this. The execution set implies here is the way the functions is called.  To comprehend this catchphrase, just we need to know how, when and from where the functions are called, doesn't make any difference how and where functions are proclaimed or characterized.&lt;/p&gt;

&lt;p&gt;Learn in Detail -&amp;gt; &lt;a href="https://blog.bitsrc.io/what-is-this-in-javascript-3b03480514a7"&gt;this in JavaScript - BitSrc&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;So these were the 21 Basic JavaScript interview question I have faced commonly. There is one more list coming related to advanced JavaScript interview questions. I would add more questions in the future. So stay tuned and follow me. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>codenewbie</category>
    </item>
  </channel>
</rss>
