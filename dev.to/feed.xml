<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Why is Technical Debt Bad?</title>
      <author>lduecode</author>
      <pubDate>Tue, 14 Dec 2021 11:02:57 +0000</pubDate>
      <link>https://dev.to/lduecode/what-is-technical-debt-3jh5</link>
      <guid>https://dev.to/lduecode/what-is-technical-debt-3jh5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-technical-debt"&gt;
  &lt;/a&gt;
  What Is Technical Debt?
&lt;/h2&gt;

&lt;p&gt;There are many ways to define technical debt, but to put it into simple words, it's the interest you have to pay when you choose the effortless short-ranged development choice instead of the challenging and elaborate one. Typically, this debt arises from using code that works perfectly fine for a short period of time but causes trouble in the long run. These kinds of quick and easy decisions lead to the cost of reworking the code in your program, leading to technical debt.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#causes-of-technical-debt"&gt;
  &lt;/a&gt;
  Causes Of Technical Debt
&lt;/h2&gt;

&lt;p&gt;There are various reasons you can fall into the spiral of technical debt, the most common one amongst them being the lack of attention to long-term planning. Developers pay more attention to getting the software on the market rather than its long-term wearability. Often, creators can make the simple mistake of overseeing a harmful code which then results in technical issues. Similar to this, a faulty code or an easier one can also cause run time errors later. These practices later pile up in the form of technical debt, which not only deteriorates the quality of the product but can also cause delays in its delivery.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-is-technical-debt-bad"&gt;
  &lt;/a&gt;
  Why Is Technical Debt Bad?
&lt;/h2&gt;

&lt;p&gt;Although technical debt works pretty well for some time, it causes trouble both to the software and the developer if not paid off within due time. Even if you do put up your software on the market, by having technical debt, the developer may be unable to keep the system up to date and may start getting complaints about its faulty nature. If this problem is not paid attention to at the right time, then the software may get signals of system failure. Moreover, the developer will have to spend more time solving this problem rather than working on updates.&lt;/p&gt;

&lt;p&gt;This also causes a lot of issues in the team that is working on the software as well as the software itself because you have to make sure that the old interface and the new updated interfaces work together seamlessly. Even the slightest mistake may affect the workability of the software. Technical debt might seem like an easy solution in the initial developmental stages of a software, but it is very troublesome to both the creators and the clients after a short while.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tips-and-tricks-to-avoid-technical-debt"&gt;
  &lt;/a&gt;
  Tips And Tricks To Avoid Technical Debt
&lt;/h2&gt;

&lt;p&gt;There are several strategies that you can use to avoid technical debt. Some of these are listed below.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fixing-code"&gt;
  &lt;/a&gt;
  Fixing code
&lt;/h3&gt;

&lt;p&gt;The real reason behind technical debt is a weak code which can be fixed even after the damage. The faster you fix your code and find a good alternative for it, the better your software will advance according to the needs of your customers. If you don't fix the code when you come to know about it, it may not work properly and will bound developers to work on old iterations rather than new ones.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#focusing-on-the-code-quality"&gt;
  &lt;/a&gt;
  Focusing on the code quality
&lt;/h3&gt;

&lt;p&gt;When creating a software, it's important to focus on the structural integrity and code quality. It is important to give your time to each part of the project properly and finding things that will make it work even more smoothly. Instead of one person working on the project, a team with different perspectives can help develop a software even better.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#paying-off-your-debt"&gt;
  &lt;/a&gt;
  Paying off your debt
&lt;/h3&gt;

&lt;p&gt;It is imperitive to pay off your debt in a timely manner as it can cause a lot of problems in the future for the users. It is necessary for you and your team to work and fix the code so that it does not cause any more trouble than it already has. You should set a maximum threshold for the debt you can afford. Once it crosses that level, you should work on paying it off first.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-all-technical-debt-bad"&gt;
  &lt;/a&gt;
  Is All Technical Debt Bad?
&lt;/h2&gt;

&lt;p&gt;Surprisingly not all technical debt is bad. Just like a financial loan, a technical debt can help in reaching your goals faster. However, if you don't plan to deal with the debt later, you might run into some problems. If you fail to address the debt when it is required to be, then it might come in the way of innovation and advancements that you may want to make in the software.&lt;/p&gt;

&lt;p&gt;Like everything else in this world, technical debt also has its pros and cons. It may help you to get your software on the market faster, but at the same time, it may cause trouble if you don't take care of it on time. Therefore, it is best to start with a code that would do good in the long run. Even if you do manage to fix the code later, you still have to spend time in paying off the technical debt. So, it is best to start with a code that is beneficial to you and the software.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-reduce-technical-debt"&gt;
  &lt;/a&gt;
  How To Reduce Technical Debt?
&lt;/h2&gt;

&lt;p&gt;There are many ways through which you can avoid technical debts. Treating this debt like any other loan is the best approach for reducing it. You can set up upper limits for the tax debt you can afford. Similarly, you can also set deadlines for paying it off. This way, there is no excessive pile up of technical debt, and you can stay in control of the quality of your software. Overall, realistically, technical debt can never be zero, however, you should be able to manage it efficiently to guarantee the smooth running of your software.&lt;/p&gt;

</description>
      <category>codequality</category>
      <category>codereview</category>
      <category>technicaldebt</category>
    </item>
    <item>
      <title>The fundamentality of building projects and how is it useful in the overall development</title>
      <author>Karthik Pariti</author>
      <pubDate>Tue, 14 Dec 2021 10:51:12 +0000</pubDate>
      <link>https://dev.to/kardev07/the-fundamentality-of-building-projects-and-how-is-it-useful-in-the-overall-development-38lm</link>
      <guid>https://dev.to/kardev07/the-fundamentality-of-building-projects-and-how-is-it-useful-in-the-overall-development-38lm</guid>
      <description>&lt;p&gt;If you have read my previous article, which was about &lt;strong&gt;Why you should not work on projects&lt;/strong&gt;, you might be a bit uneasy seeing the title of this article, because, in a sense, both of them are quite the opposite in regard to building projects. &lt;/p&gt;

&lt;p&gt;But why? As they say, a coin has 2 sides associated with it. The same applies to building projects. Hence I decided to explore both the facets of this concept.&lt;/p&gt;

&lt;p&gt;So, if you were convinced not to build projects from the previous article, maybe this one convinces you to do the contrary.&lt;/p&gt;

&lt;p&gt;Let's get started!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MxWGrNXg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hbdf3nn2rlqog2ns5u3k.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MxWGrNXg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hbdf3nn2rlqog2ns5u3k.gif" alt="Let's get started" width="498" height="206"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the previous article, I've described the hardships, difficulties, and hurdles during project development. But as I previously said, there is also another facet to this. &lt;/p&gt;

&lt;p&gt;There are not only disadvantages and problems regarding project development, there are many advantages and enriching aspects. This article elaborates and details these positive instances about projects.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Projects enrich creativity&lt;/em&gt; -&lt;br&gt;
When you think of ideas for projects, you are utilizing your creative skills. We all know how important creative skills are. Your projects signify how creative you are. But that is not an end to it. Building projects frequently enrich your creativity, leading you to perform better.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Projects comprehend teamwork&lt;/em&gt; -&lt;br&gt;
Developing projects with a group comprehends teamwork, communication skills, coordination with others and makes you compatible with team members. These skills are known to be extremely important and vital in workplaces.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Projects nourish vital skills&lt;/em&gt; -&lt;br&gt;
Projects enrich skills like problem-solving skills, and project-specific skills, and so on. Almost everyone is familiar with this point that projects improve the existing skills as well as develop new ones during the process. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Projects make you curious&lt;/em&gt; -&lt;br&gt;
Being curious is very advantageous for nourishing the mindset of people to always question their surroundings, learn from what they do, and self-derive answers from their questions. Curiosity is vital for a critical thinking approach.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;You build confidence in yourself&lt;/em&gt; -&lt;br&gt;
When you build your project you are confident of yourself, about your skills and are further motivated to keep progressing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;You learn how to manage your surroundings&lt;/em&gt; -&lt;br&gt;
Project management is an essential factor that needs to be taken care of while making a specific project. While managing your project, you also learn how to be organized, plan in advance, etc. In the process, you also learn to manage other parts of your life more efficiently than before without problems.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So these were some of the advantages/pros of building projects. Note that these aren't the end to the positive side of building projects.&lt;/p&gt;

&lt;p&gt;But one thing that I've observed to be common among people building projects is that they abandon their current projects in the process of building itself and move on to new ones, this creates a virtuous cycle where you do not focus on one thing and always look for alternatives.&lt;/p&gt;

&lt;p&gt;This in the long term leads to major commitment issues where your lack the important trait of being committed to what you do and always abandon your responsibilities halfway through itself.&lt;/p&gt;

&lt;p&gt;It's completely normal when you think that you don't feel the same interest as before about a specific thing, this may lead to not achieving anything at all in the epilogue. &lt;/p&gt;

&lt;p&gt;So how do you overcome this? Just keep faith in what you do. Even if you think you don't have the same enthusiasm as you did before, but you still know that what you did until now ran for a good cause. This must become the motivation for you to progress in what you do. But if you think your idea isn't valid anymore or it doesn't apply to anything anymore, maybe abandoning it is for the good.&lt;/p&gt;

&lt;p&gt;You can reach out to me on any of these platforms listed &lt;a href="https://links-app-kardev07.vercel.app"&gt;here&lt;/a&gt; for any further queries!&lt;/p&gt;

</description>
      <category>programming</category>
    </item>
    <item>
      <title>Top 5 Profitable Blockchain Business Ideas for 2022</title>
      <author>Emma</author>
      <pubDate>Tue, 14 Dec 2021 10:46:55 +0000</pubDate>
      <link>https://dev.to/emmabaker/top-5-profitable-blockchain-business-ideas-for-2022-143o</link>
      <guid>https://dev.to/emmabaker/top-5-profitable-blockchain-business-ideas-for-2022-143o</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction:
&lt;/h2&gt;

&lt;p&gt;Blockchain for business is very much valuable for facilitating transactions with one another. With the involvement of distributed ledger technology, authorized users will be entitled to access the information simultaneously. This technology brings a plethora of improvements, efficiency, trust and it eliminates friction between two parties. Blockchain facilitates a solution to rapidly scale and size as many solutions can be implemented to carry out several tasks across multiple industries. The cryptocurrency ecosystem is one among the several sectors to be benefited with the arrival of blockchain technology.&lt;/p&gt;

&lt;p&gt;Cryptocurrencies have slowly emerged as the face of digital finance currently and are gaining traction across the globe. The sheer profit margin of this sector is the reason behind it’s popularity. The cryptocurrency world provides you with endless opportunities for making huge profits. Businesses involved in any sector can be enhanced through the adoption of cryptocurrencies. With the increase in adoption as well as user base, businesses related to retail, e-commerce and manufacturing can have a competitive edge with crypto integration. &lt;/p&gt;

&lt;p&gt;Cryptocurrencies, along with blockchain technology have been around for over a decade now. Despite their existence in over 12 years, we are still at the tip of the iceberg in using their full potential. With several ideas blooming for crypto businesses such as creating, exchanging or trading different cryptos, it is more likely to build a crypto business in any niche. The success rate of cryptocurrency business is due to the adaptation of blockchain technology along with it. By integrating blockchain, every single business will gain a competitive edge and trust from their users.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#blockchain-business"&gt;
  &lt;/a&gt;
  Blockchain Business:
&lt;/h2&gt;

&lt;p&gt;With firewalls going out of the league due to lack of robust security, only a handful businesses are relying on them now. Since most of the businesses now are based online, people are looking to store data in a cloud format with secured features for protecting the recorded data. Blockchain technology, apart from securing your data and encrypting your online information, also manages to oversee your entire business using automated management systems.&lt;/p&gt;

&lt;p&gt;Blockchain technology is on a mission to revolutionize business operations going on in the real world. Blockchain technology seems to be implemented everywhere and is taking the internet by storm. Briefly, blockchain is a network consisting of a decentralized network of nodes that are linked together as a chain. This entire process is tamper-proof with a lot of complexity and upon verification, every transaction is recorded by several nodes when executed. The implementation of blockchain technology is the main factor behind the success of cryptocurrencies. Presently, there are several crypto-related businesses that are boosted by blockchain technology. This has sparked interest among multiple emerging entrepreneurs to successfully commence their business career. In that regard, below are the top 5 blockchain based crypto-related business ideas that are capable of reaping significant profit margins. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wwoo9P5n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q5su1j434eehb8y3crgp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wwoo9P5n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q5su1j434eehb8y3crgp.png" alt="Image description" width="880" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cryptocurrency-exchange-platform"&gt;
  &lt;/a&gt;
  Cryptocurrency Exchange Platform:
&lt;/h2&gt;

&lt;p&gt;A cryptocurrency exchange is a common platform used for transacting several cryptocurrencies between two interested parties in a short span. Starting a cryptocurrency exchange is a quite profitable business as there are plenty of revenue streams in that. Right from listing fee to transaction fee, a cryptocurrency exchange is capable of providing your profits on all fronts. In a crypto exchange, the blockchain technology, which falls under the distributed ledger facility offers the best security as well as provides end-to-end data encryption. &lt;/p&gt;

&lt;p&gt;Based on the above mentioned attributes, there are several types of cryptocurrency exchange platforms that you can start your crypto business with. They are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Centralized cryptocurrency exchange&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Decentralized cryptocurrency exchange&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hybrid exchange&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Among these types, pick out the best method that is fitting to your interest and budget for initiating &lt;a href="https://www.zabtechnologies.net/cryptocurrency-exchange-software-development-company?utm_campaign=top5blog&amp;amp;utm_medium=exchange1&amp;amp;utm_source=gracelyndev"&gt;crypto exchange development&lt;/a&gt;. With every method having its own merits, every single one of them will take some preparation for setting up. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#crypto-payment-gateway"&gt;
  &lt;/a&gt;
  Crypto Payment Gateway:
&lt;/h2&gt;

&lt;p&gt;The increase in cryptocurrency adoption across the globe has also increased the demand for cryptocurrency acceptance with several businesses. Just like the conventional monetary card processing, ventures need to go through an intermediary for accepting these alternate methods of payment. This is the place where you can go in and process this in-demand. &lt;/p&gt;

&lt;p&gt;During the process of payment, the gateway will be held liable for converting cryptocurrency payment into conventional currency for stabilizing the value. Crypto payment gateway development, as a business will reap rewards through transactional fees, account set-up fee as well as subscription fee for delivering merchant services.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#crypto-wallet"&gt;
  &lt;/a&gt;
  Crypto Wallet:
&lt;/h3&gt;

&lt;p&gt;The need for a wallet is crucial for facilitating cryptocurrencies. Cryptocurrency is secure due to its requirement of a dedicated key for accessing. With the correct set of tools related to cybersecurity, digital wallet allows people to access their cryptocurrencies whenever they wish to. Cryptocurrency wallets come in different types with each having its own merits and demerits. These wallets are available online as well as offline storage drives for storing cryptos and to prevent from getting hacked &amp;amp; stolen. &lt;/p&gt;

&lt;p&gt;By integrating a crypto wallet service, you can earn revenues in the form of transaction fee and gas fee. Having said that, the profit range might vary depending upon the type of wallet service offered.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#crypto-loans"&gt;
  &lt;/a&gt;
  Crypto Loans:
&lt;/h2&gt;

&lt;p&gt;Cryptocurrency investments are gaining attention worldwide and having an account in any crypto exchange will make you eligible for gaining loans. Crypto lending/loaning is one of the creative businesses which is trending currently. From a cryptocurrency exchange owner’s perspective, crypto lending can play a vital part in providing margin trading or any other trading process and get interest in return for it. &lt;/p&gt;

&lt;p&gt;This type of business would be ideal for someone who owns a venture in a crypto business where the crypto progression itself is in a higher volume. Providing attractive lending options will help in attracting more traders for your business. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#crypto-crowdfunding-ico-sto-amp-ieo"&gt;
  &lt;/a&gt;
  Crypto Crowdfunding (ICO, STO &amp;amp; IEO):
&lt;/h2&gt;

&lt;p&gt;Crowdfunding cannot be considered as a new concept anymore as most of the newly emerging startups executed the crowdfunding program for gathering capital funds. Crowdfunding is regarded as the alternative for venture capitalism. The main difference is the investors, instead of large shareholders, crowdfunding investors contribute a small investment which would be expected to multiply eventually. &lt;/p&gt;

&lt;p&gt;As far as crypto crowdfunding is concerned, it is possible to raise funds through the execution of a crypto token using ICO, IEO and STO. All these methods are used as a means for creating tokens for raising funds. Among these, ICO (initial coin offering) is the initial stage of token sales which is fairly easy to start rather than starting IEO and STO. In an entrepreneur's perspective, having the facility of crowdfunding gives you additional revenue streams through token creation. The primary part of a crowdfunding event is the creation of tokens, using which the investors are guaranteed dividends on several fronts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Crypto Token Creation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;From the introduction of cryptocurrencies, it has proved to be a highly rewarding business module for any newly emerging entrepreneur to get started. In that regard, creating crypto tokens has proved to be a rather profitable revenue stream for a cryptocurrency exchange owner. Powered by the blockchain technology, token creation has managed to completely revolutionize the digital sectors with its abundantly available features. Moving on, tokens come in two types viz., fungible tokens and non-fungible tokens (NFT).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fungible Tokens:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Few of the most famous contract classes that involve blockchains currently are fungible tokens. These contracts are used for creating homogeneous tokens which can be either transferred to other users or spent as currency. Fungible tokens implicate a certain degree of equality when the assets are being considered. Fungibility is the capability of mutual interchangeability between two tokens of the same type.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Non-Fungible Tokens:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Non-fungible tokens are currently one of the hottest trending businesses in the cryptocurrency ecosystem and it is quite popular among entrepreneurs/startups. Non-fungible tokens have revolutionized the art of seeking collectibles. NFTs have totally turned the tables related to celebrating digital antique collections and innovative ideas. Non-fungible tokens are entirely unique and are immutable as well as non-interchangeable.&lt;/p&gt;

&lt;p&gt;Token creation is a fairly profitable business module which is mostly incorporated on almost all cryptocurrency exchanges.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h2&gt;

&lt;p&gt;The above mentioned are some of the most profitable business streams associated with crypto-related blockchain businesses. Any upcoming entrepreneur with a vision to succeed in the cryptocurrency ecosystem can get profited by using these modes of revenue. In order for that to happen, you will need an extremely good blockchain development platform. For that, it is highly advisable to approach the best &lt;a href="https://www.zabtechnologies.net/blockchain-development-company?utm_campaign=top5blog&amp;amp;utm_medium=blockchain2&amp;amp;utm_source=gracelyndev"&gt;blockchain development company&lt;/a&gt; from the cryptocurrency industry. Having a set of professional experts by your side will provide you with a technical edge over your competitors. In addition to that, the amount of software expertise and professional guidance that comes along with hiring experts will prove to be very useful for the long run. &lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>beginners</category>
      <category>startup</category>
      <category>security</category>
    </item>
    <item>
      <title>Day 63 of 100 Days of Code &amp; Scrum: The Open Graph Protocol and next-seo</title>
      <author>Rammina</author>
      <pubDate>Tue, 14 Dec 2021 10:44:45 +0000</pubDate>
      <link>https://dev.to/rammina/day-63-of-100-days-of-code-scrum-the-open-graph-protocol-and-next-seo-297g</link>
      <guid>https://dev.to/rammina/day-63-of-100-days-of-code-scrum-the-open-graph-protocol-and-next-seo-297g</guid>
      <description>&lt;p&gt;Hello there, everyone!&lt;/p&gt;

&lt;p&gt;Like every Tuesday, I had to go to my physical therapy session, so I could not code as much.&lt;/p&gt;

&lt;p&gt;However, I still made some progress with my &lt;a href="https://www.rammina.com"&gt;company website&lt;/a&gt;'s &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tags. I learned about &lt;strong&gt;OpenGraph&lt;/strong&gt;, which is essential for improving page SEO. Another thing I used was the &lt;code&gt;next-seo&lt;/code&gt; package to make it a lot easier to manage &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; on a page-by-page basis. I highly recommend anyone using Next.js to utilize that library, as it gives a lot of quality of life improvements.&lt;/p&gt;

&lt;p&gt;Anyway, let's move on to my daily report!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I deployed and fixed production bugs on my &lt;a href="https://www.rammina.com/blog"&gt;web development blog&lt;/a&gt;. I also enhanced some styling, and I was fairly pleased with everything so far.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here are the things I learned and worked on today:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#company-website"&gt;
  &lt;/a&gt;
  Company Website
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;learned about &lt;strong&gt;OpenGraph&lt;/strong&gt; and the Twitter equivalent.&lt;/li&gt;
&lt;li&gt;used &lt;code&gt;next-seo&lt;/code&gt; package to manage &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;added different preview images for different parts of the website.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I did some practice flashcards for Scrum.&lt;/li&gt;
&lt;li&gt;reviewed some of the things I've learned before.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you for reading! I wish you the best.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" alt="Rammina Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ogp.me/"&gt;The Open Graph Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/garmeeh/next-seo"&gt;next-seo | GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#other-media"&gt;
  &lt;/a&gt;
  Other Media
&lt;/h3&gt;

&lt;p&gt;Feel free to reach out to me in other media!&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://www.rammina.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BK-zilS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1638444046/rammina-button-128_x9ginu.png" alt="Rammina Logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://twitter.com/RamminaR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C341ckO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636792959/twitter-logo_laoyfu_pdbagm.png" alt="Twitter logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://github.com/Rammina"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4ZlXeay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636795051/GitHub-Emblem2_epcp8r.png" alt="Github logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Native vs. Cross-Platform Mobile App Development</title>
      <author>andreyonopriyenko</author>
      <pubDate>Tue, 14 Dec 2021 10:37:41 +0000</pubDate>
      <link>https://dev.to/andreyonopriyenko/native-vs-cross-platform-mobile-app-development-233a</link>
      <guid>https://dev.to/andreyonopriyenko/native-vs-cross-platform-mobile-app-development-233a</guid>
      <description>&lt;p&gt;People make many life- and business-related decisions using the Internet or mobile applications. According to the statistics, the annual number of mobile app downloads is projected to &lt;a href="https://www.statista.com/statistics/241587/number-of-free-mobile-app-downloads-worldwide/"&gt;reach 299 billion in 2023&lt;/a&gt;. The COVID-19 pandemic made businesses realize that software is the key to withstanding competition and reaching a wider audience. With such an increased user interest, it’s a great time to build your own mobile app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bn-9rLz8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gx5ts3mrrwem6ibx3gay.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bn-9rLz8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gx5ts3mrrwem6ibx3gay.png" alt="Statista research" width="880" height="569"&gt;&lt;/a&gt;&lt;br&gt;
The stats show that there are 1.85 million apps in the App Store and 2.56 million on Google Play Store. The common &lt;a href="https://www.upwork.com/resources/benefits-of-mobile-apps-for-business"&gt;reasons businesses build custom mobile apps&lt;/a&gt; are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;added value to customers;&lt;/li&gt;
&lt;li&gt;enhanced customer engagement;&lt;/li&gt;
&lt;li&gt;high-quality customer service;&lt;/li&gt;
&lt;li&gt;increased revenue;&lt;/li&gt;
&lt;li&gt;develop brand awareness.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you`ve decided to develop one, the next step is selecting the right approach. &lt;/p&gt;

&lt;p&gt;The two choices are native and cross-platform application development. If you hesitate between them, you’re in the right place. In this article, we will take a closer look at &lt;a href="https://keyua.org/custom-mobile-development-services/"&gt;custom mobile app development&lt;/a&gt; and compare native vs cross-platform mobile app development, analyzing their pros, cons, and potential use cases.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-native-app-development"&gt;
  &lt;/a&gt;
  What is Native App Development?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XkCTBOS4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cgzzcjus00vtfvsm5smd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XkCTBOS4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cgzzcjus00vtfvsm5smd.png" alt="native development" width="850" height="492"&gt;&lt;/a&gt;&lt;br&gt;
Native apps are aimed at specific operating systems and devices like Android and iOS. The development process involves tailoring them to a certain platform.&lt;/p&gt;

&lt;p&gt;Popular programming languages for native app development include Java and Kotlin for Android and Swift and Objective-C for iOS mobile apps. Native mobile apps are an excellent option if your focus is user experience and interface. This approach lets engineers use hardware elements like GPS, camera, or microphone.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-benefits-of-native-apps"&gt;
  &lt;/a&gt;
  The Benefits of Native Apps
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#robust-functionality"&gt;
  &lt;/a&gt;
  Robust Functionality
&lt;/h3&gt;

&lt;p&gt;Optimization for a certain platform ensures efficiency and fast performance. With no limits in the development process, mobile app developers can leverage APIs and tools provided by a platform. &lt;br&gt;
Additionally, native apps perform flawlessly even if there is no Internet connection. They are more convenient for users living in remote areas or with limited Internet connectivity. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#enhanced-scalability"&gt;
  &lt;/a&gt;
  Enhanced scalability
&lt;/h3&gt;

&lt;p&gt;A wide choice of tools and flexible resource management make apps more scalable in the native environment. It is easier to integrate new complex features and technologies. Moreover, the testing process is not so lengthy and demanding. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#supported-by-app-stores"&gt;
  &lt;/a&gt;
  Supported by app stores
&lt;/h3&gt;

&lt;p&gt;Before publishing, app stores check native apps for data security to make sure they are safe and reliable. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#great-performance-and-ux-design"&gt;
  &lt;/a&gt;
  Great performance and UX design
&lt;/h3&gt;

&lt;p&gt;When choosing &lt;a href="https://keyua.org/blog/top_mobile_app_development_tools/"&gt;tools for mobile app development&lt;/a&gt;, pay attention to those offering excellent interaction experiences. Native apps are faster because many elements are preloaded, and the data is obtained from the web. The highlight of native apps is attractive UI/UX design combined with simple navigation and a straightforward user experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-drawbacks-of-native-apps"&gt;
  &lt;/a&gt;
  The Drawbacks of Native Apps
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#costs-a-pretty-penny"&gt;
  &lt;/a&gt;
  Costs a pretty penny
&lt;/h3&gt;

&lt;p&gt;Native app development requires much investment, especially for large-scale projects. This is the first obstacle for businesses. If you plan to launch an app on both platforms, be ready to double your budget. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#requires-more-time"&gt;
  &lt;/a&gt;
  Requires more time
&lt;/h3&gt;

&lt;p&gt;The scope of work done for one platform can’t be used for another. Since you need to build two apps from scratch, your teams require more time to work on different versions. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-bigger-tech-team-is-needed"&gt;
  &lt;/a&gt;
  A bigger tech team is needed
&lt;/h3&gt;

&lt;p&gt;Native mobile apps require a specific tech stack for different platforms. Hence, it’s hard to find a developer who will build a native app from start to finish. Two teams with different tech stacks are needed to build native apps, while the cross-platform type requires only one team.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-is-native-app-development-good"&gt;
  &lt;/a&gt;
  When is Native App Development Good?
&lt;/h2&gt;

&lt;p&gt;Native app development is a good fit if:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Robust UX and functionality are a highlight of your mobile app;&lt;/li&gt;
&lt;li&gt;You need to use certain device functionality like sensor or camera;&lt;/li&gt;
&lt;li&gt;You need to involve 3D elements and animations.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-crossplatform-app-development"&gt;
  &lt;/a&gt;
  What is Cross-Platform App Development?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Hp2GtYF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nggn5pjnxmbckxcd4im0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Hp2GtYF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nggn5pjnxmbckxcd4im0.jpg" alt="cross-platform development" width="880" height="412"&gt;&lt;/a&gt;&lt;br&gt;
Cross-platform mobile apps operate on a unified code base on any OS. Tools like React Native, Xamarin, or Flutter are popular to build cross-platform apps. This approach saves your time and budget, but you sometimes need to compromise the functionality and productivity.&lt;/p&gt;

&lt;p&gt;It’s hard to build an app that runs seamlessly on multiple platforms without exceeding the framework capabilities. &lt;a href="https://keyua.org/cross-platform-app-development-services/"&gt;Cross-platform app development services&lt;/a&gt; are preferred by startups that ###strive to optimize their resources.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-benefits-of-crossplatform-apps"&gt;
  &lt;/a&gt;
  The Benefits of Cross-Platform Apps
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#reusable-code"&gt;
  &lt;/a&gt;
  Reusable code
&lt;/h3&gt;

&lt;p&gt;80% of code can be applied on different platforms in a single codebase. It speeds up product development and simplifies the work of engineers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#speedy-and-affordable-development"&gt;
  &lt;/a&gt;
  Speedy and affordable development
&lt;/h3&gt;

&lt;p&gt;A single development cycle is necessary to build such an app. Hence, you need fewer engineers and less time to complete the app development project. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wider-user-reach"&gt;
  &lt;/a&gt;
  Wider user reach
&lt;/h3&gt;

&lt;p&gt;Cross-platform apps are an excellent option for enterprises that want to reach a broad audience on both platforms within a short time. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#easy-maintenance"&gt;
  &lt;/a&gt;
  Easy maintenance
&lt;/h3&gt;

&lt;p&gt;A unified codebase means making easier updates and fixes. Changes are more accurate, ensuring enhanced performance on all platforms. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-drawbacks-of-crossplatform-apps"&gt;
  &lt;/a&gt;
  The Drawbacks of Cross-Platform Apps
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#slower-performance"&gt;
  &lt;/a&gt;
  Slower performance
&lt;/h3&gt;

&lt;p&gt;Performance speed is a key factor when comparing native app development versus cross-platform app development. An additional abstraction layer needed for cross-platform apps slows down the performance.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#limited-features"&gt;
  &lt;/a&gt;
  Limited features
&lt;/h3&gt;

&lt;p&gt;Cross-platform solutions have limited support from libraries and SDKs. It can be difficult to customize an app and integrate all the desired features. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#basic-uiux-design"&gt;
  &lt;/a&gt;
  Basic UI/UX design
&lt;/h3&gt;

&lt;p&gt;Native UX components can’t be used by cross-platform apps. That’s why they provide an inferior experience compared to native apps. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-is-crossplatform-app-development-good"&gt;
  &lt;/a&gt;
  When is Cross-Platform App Development Good?
&lt;/h2&gt;

&lt;p&gt;A cross-platform app is a good fit if:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You want to launch a mobile app on multiple platforms within a tight budget;&lt;/li&gt;
&lt;li&gt;You target both iOS and Android;&lt;/li&gt;
&lt;li&gt;Fast app development is needed;&lt;/li&gt;
&lt;li&gt;The app has a rather basic feature set that doesn’t differ on different platforms.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#a-few-words-about-hybrid-apps"&gt;
  &lt;/a&gt;
  A few words about hybrid apps
&lt;/h2&gt;

&lt;p&gt;The hybrid approach lies between a native app or a cross-platform solution. The code is written with CSS/HTML and JavaScript. Then, the code is embedded using such plugins as Capacitor, Apache Cordova, Sencha, etc. It allows access to native functionality, yet the code is written only once for many platforms.&lt;/p&gt;

&lt;p&gt;Hybrid apps aim to provide a native-like experience with less effort. Hybrid apps have a smooth UI/UX, and their maintenance and backend development are cheaper and more affordable. However, hybrid apps still lack OS support for specific functionality. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-choose-the-right-approach-for-mobile-app-development"&gt;
  &lt;/a&gt;
  How to Choose the Right Approach for Mobile App Development?
&lt;/h2&gt;

&lt;p&gt;Here are the most important factors to consider when building your mobile application. The fundamental difference between native and cross-platform solutions is the amount of effort and resources you are ready to invest. Before you start the development itself, you need to clarify the following points: &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#complexity"&gt;
  &lt;/a&gt;
  Complexity
&lt;/h3&gt;

&lt;p&gt;If your app deals with heavy data processing or requires access to native functionality and APIs, native app development is optimal for you. If you need something more basic and realize that you can avoid extra performance, cross-platform development is better for your product. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#costs"&gt;
  &lt;/a&gt;
  Costs
&lt;/h3&gt;

&lt;p&gt;The chosen technologies and tools for mobile app development also influence the final choice. Platform-specific apps require larger teams with expertise in specific technologies. The main problem is writing separate codebases for every OS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#timetomarket"&gt;
  &lt;/a&gt;
  Time-to-market
&lt;/h3&gt;

&lt;p&gt;Sometimes you need to &lt;a href="https://techcrunch.com/2012/07/13/how-to-create-a-minimum-viable-product/"&gt;get an MVP built&lt;/a&gt; quickly to exceed the competition. Cross-platform development saves a great deal of time to release an app on all OS and devices. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#uiux-design-requirements"&gt;
  &lt;/a&gt;
  UI/UX design requirements
&lt;/h3&gt;

&lt;p&gt;The right &lt;a href="https://keyua.org/blog/how-to-choose-the-best-tech-stack-for-a-mobile-application/"&gt;tech stack for mobile app development&lt;/a&gt; is essential to reach your design goals. Pay special attention to front-end development tools responsible for interaction with users. Native app development focuses more on user experience, while the cross-platform approach limits the opportunities. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#native-vs-cross-platform-app-development-which-is-the-winner"&gt;
  &lt;/a&gt;
  Native vs Cross Platform App Development: Which is the Winner?
&lt;/h2&gt;

&lt;p&gt;None of the app types discussed in this article is a universal choice for every development project. Before making a choice, you need to clarify your expectations and define your budget. You also need to consult tech-savvy specialists to choose an optimal tech stack. If complexity and flawless user experience are your priority, native app development will work for you.&lt;/p&gt;

&lt;p&gt;However, be ready to make big investments. To reach the maximum audience with a limited time and budget, multi-platform app development will fit you. But be prepared for a weaker user experience and a more basic UI/UX design.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#to-wrap-up"&gt;
  &lt;/a&gt;
  To Wrap Up
&lt;/h2&gt;

&lt;p&gt;Regardless of the industry, businesses need to &lt;a href="https://www.forbes.com/sites/forbestechcouncil/2020/09/21/does-the-business-really-need-a-mobile-app-12-questions-to-ask/?sh=3113a8093c85"&gt;build their own mobile app&lt;/a&gt; to reach more customers and keep up with the competition. The final decision on hybrid, native or cross-platform development depends on your unique project conditions and requirements.&lt;/p&gt;

&lt;p&gt;Defining your goals, needs, and priorities is the primary step towards the success of your mobile app in the market. All the approaches have their benefits and drawbacks, so you need to figure out which will be most advantageous for your mobile app project. &lt;/p&gt;

&lt;p&gt;Hopefully, this article will help you evaluate the main points and select an optimal approach for custom mobile app development.&lt;/p&gt;

</description>
      <category>reactnative</category>
      <category>comparison</category>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Advent of code day 14: A puzzle too good for me.</title>
      <author>Marco Servetto</author>
      <pubDate>Tue, 14 Dec 2021 09:41:50 +0000</pubDate>
      <link>https://dev.to/marcoservetto/advent-of-code-day-14-a-puzzle-too-good-for-me-440e</link>
      <guid>https://dev.to/marcoservetto/advent-of-code-day-14-a-puzzle-too-good-for-me-440e</guid>
      <description>&lt;p&gt;Ok, this was very challenging.&lt;br&gt;
On the other side, I feel like we are moving into puzzles territory and OUTSIDE of programming skill territory.&lt;br&gt;
I just wanted some nice programming exercises, not deep logical puzzles...&lt;br&gt;
It is similar to an older puzzle, where we are given a simple algorithm that would be exponentially inefficient to run directly.&lt;br&gt;
Part 1 works well over that algorithm, part 2 needed more brain.&lt;br&gt;
Part one here:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;reuse [L42.is/AdamsTowel]
Fs = Load:{reuse[L42.is/FileSystem]}
SNMap = Collection.map(key=S val=Num)
Part1 = {
  Lab = Data:{
    var S.List product
    S.Map map
    read method S map(S that)=(
      o = \map.val(key=that)
      if o o.val() else S""
      )
    class method mut This (S string)= (
      top = string.split(S.nl()++S.nl())
      imm product = S.List()(for s in top().split() \add(s))
      imm map = S.Map()(for ss in top().split(S.nl())(
        vals = ss.split(S" -&amp;gt; ")
        \put(key=vals(),val=vals())
        ))
      This(product=product,map=map)
      )
    mut method Void doStep() =\product(\step)
    read method S.List step() = \()((
      (product) = this
      for a in product.vals(0I to=\size-1I)
          b in product.vals(1I to=\size) (
        c = this.map(a++b)
        \add(a)
        if c!=S"" \add(c)
        )
      \add(product.right())
      ))
    }
  Main=(
    lab = Lab(string=Fs.Real.#$of().read(\"input"))
    for i in Range(10I) lab.doStep()
    map = SNMap()(for e in lab.product() (
      o = \val(key=e)
      if o \put(key=e,val=o.val()+1Num)
      else \put(key=e,val=1Num)
      ))
    Debug(map)//3092-717=2375
    )
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Part 2 is below; here I'm showing that in 42 you can just group classes so that you do not clash by declaring the same class names again. In my experience this is very useful when doing automated testing.&lt;/p&gt;

&lt;p&gt;I tried many different solutions.&lt;br&gt;
The main idea is that we can keep a map of chemical pairs into their current 'amount'.&lt;br&gt;
But... at the end we have to count how many we have of the individual chemicals, not the chemical pairs.&lt;br&gt;
I naively just spitted all pairs and.. that does not work: some elements are shared between pairs.&lt;br&gt;
But the map is losing all the information on what order the various pairs are.&lt;/p&gt;

&lt;p&gt;I was getting pretty desperate, when eventually I figured out:&lt;br&gt;
Just keep a count when you add the elements.&lt;br&gt;
So I added a 'tot' map and that did the trick.&lt;br&gt;
However, in order to make the strict aliasing and immutability type system of 42 happy I had to use 'lent': a way to mutate data while creating immutable stuff.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Part2={
    Lab = Data:{
    mut SNMap tot
    var SNMap product
    S.Map map
    read method S map(S that)=(
      o = \map.val(key=that)
      if o o.val() else S""
      )
    class method mut This (S string)= (
      top = string.split(S.nl()++S.nl())
      imm product = S.List()(for s in top().split() \add(s))
      imm map = S.Map()(for ss in top().split(S.nl())(
        vals = ss.split(S" -&amp;gt; ")
        \put(key=vals(),val=vals())
        ))
      imm mP = SNMap()(
        for a in product.vals(0I to=\size-1I)
            b in product.vals(1I to=\size) (
          o = \val(key=a++b)
          if o \put(key=a++b,val=o.val()+1Num)
          else \put(key=a++b,val=1Num)
          )
        )
      tot = SNMap()(for e in product (
        o = \val(key=e)
        if o \put(key=e,val=o.val()+1Num)
        else \put(key=e,val=1Num)
        ))      
      This(tot=tot,product=mP,map=map)
      )
    mut method Void doStep() =\product(\step(tot=this.#tot()))
    read method SNMap step(lent SNMap tot) = (
      mut res=SNMap()
      for (key,val) in this.product() {
        imm c = this.map().val(key=key).val()
        imm totVal=tot.val(key=c)
        if totVal tot.put(key=c, val=totVal.val()+val)
        else tot.put(key=c, val=val)
        p1 = key.subString(0I to=1I)++c
        p2 = c++key.subString(1I to=2I)
        val1 = res.val(key=p1)
        val2 = res.val(key=p2)
        if val1 res.put(key=p1,val=val1.val()+val)
        else    res.put(key=p1,val=val)
        if val2 res.put(key=p2,val=val2.val()+val)
        else    res.put(key=p2,val=val)
        return void
        }
      res
      )
    }
  Main=(
    lab = Lab(string=Fs.Real.#$of().read(\"input"))
    for i in Range(40I) ( lab.doStep() )
    Debug(lab.tot())
    )
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>adventofcode</category>
      <category>adventofcode2021</category>
      <category>programming</category>
      <category>42</category>
    </item>
    <item>
      <title>How to get early access of thirdWeb.com</title>
      <author>azizqamar7</author>
      <pubDate>Tue, 14 Dec 2021 09:32:45 +0000</pubDate>
      <link>https://dev.to/azizqamar7/how-to-get-early-access-of-thirdwebcom-1de</link>
      <guid>https://dev.to/azizqamar7/how-to-get-early-access-of-thirdwebcom-1de</guid>
      <description>&lt;p&gt;On 13 Dec 2021, thirdweb launches its on platform to make it possible and incredibly to build web3 applications.&lt;/p&gt;

&lt;p&gt;thirdweb will enable you to build web3 projects such as NFT's, marketplaces, tokens, and more awesome projects in few clicks.&lt;/p&gt;

&lt;p&gt;You can also integrate web3 features into your app using SDK's, widgets, and interfaces.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--emM0InN7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcrgd8cag914afz6m16j.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--emM0InN7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcrgd8cag914afz6m16j.JPG" alt="thirdweb features" width="880" height="361"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#to-get-early-access-of-thirdweb-follow-below-steps"&gt;
  &lt;/a&gt;
  To get early access of thirdweb, follow below steps:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Step-1:&lt;/strong&gt; Go to this link &lt;a href="https://thirdweb.com/early"&gt;https://thirdweb.com/early&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lwOFTPTN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gh3ia0g13z59s1gqe5yi.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lwOFTPTN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gh3ia0g13z59s1gqe5yi.JPG" alt="Early access to thirdweb" width="880" height="401"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step-2:&lt;/strong&gt; Before clicking &lt;code&gt;connect wallet&lt;/code&gt; button, make sure you have &lt;strong&gt;Metamask wallet&lt;/strong&gt; and &lt;strong&gt;Polygon Network&lt;/strong&gt; added in your wallet. (P.S. you can connect any wallet, to be safe you can use Mumbai(testnet) network)&lt;/p&gt;

&lt;p&gt;Here how you can get your &lt;a href="https://metamask.io/"&gt;Metamask wallet&lt;/a&gt; and to add Polygon network, add below details by clicking ADD NETWORK button in Metamask.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Network Name: Polygon Mainnet&lt;br&gt;
New RPC URL: &lt;a href="https://polygon-rpc.com"&gt;https://polygon-rpc.com&lt;/a&gt;&lt;br&gt;
ChainID: 137&lt;br&gt;
Symbol: MATIC&lt;br&gt;
Block Explorer URL: &lt;a href="https://polygonscan.com/"&gt;https://polygonscan.com/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Step-3:&lt;/strong&gt; Now you can click &lt;code&gt;connect wallet&lt;/code&gt; button&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step-4:&lt;/strong&gt; After connecting your wallet, you can select polygon network from drop down.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step-5:&lt;/strong&gt; Successfully message shall appear as below image shown&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3fJ-YA6L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yxf1itzs9vkseaxhwywz.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3fJ-YA6L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yxf1itzs9vkseaxhwywz.JPG" alt="thirdweb" width="880" height="395"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you have minted Free early access NFT 😉, enjoy!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#to-view-your-thirdweb-early-access-nft"&gt;
  &lt;/a&gt;
  To view your thirdweb early access NFT
&lt;/h2&gt;

&lt;p&gt;Go to your OpenSea account, if you don't have create one by connecting your Metamask wallet.&lt;/p&gt;

&lt;p&gt;After creating, go to your profile section and click the HIDDEN TAB, you can view there.&lt;/p&gt;

&lt;p&gt;By clciking bottom 3 dots on that NFT, click unhide.&lt;/p&gt;

&lt;p&gt;Here's how Early access membership NFT looks: &lt;a href="https://opensea.io/assets/matic/0xa9e893cc12026a2f6bd826fdb295eac9c18a7e88/0"&gt;&lt;em&gt;click here&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hurray! Welcome to Web3.&lt;/p&gt;

&lt;p&gt;If you have any questions let me know in the comment section. Happy to help here :)&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>web3</category>
      <category>nfts</category>
    </item>
    <item>
      <title>Build a real-time leaderboard with D3.js and React !</title>
      <author>Rémy Hidra</author>
      <pubDate>Tue, 14 Dec 2021 09:13:54 +0000</pubDate>
      <link>https://dev.to/rhidra/build-a-real-time-leaderboard-with-d3js-and-react--2lmj</link>
      <guid>https://dev.to/rhidra/build-a-real-time-leaderboard-with-d3js-and-react--2lmj</guid>
      <description>&lt;p&gt;As web apps are more suited for real-time data processing, we need more and more data visualization solutions for real-time data, with a responsive layout.&lt;/p&gt;

&lt;p&gt;In this article, I show you how to make this simple leaderboard, using D3.js and React.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D3.js&lt;/strong&gt; is one of the standard library for front-end data visualization rendering. It a declarative system to build an underlying complex SVG.&lt;/p&gt;

&lt;p&gt;To bring life to your leaderboard, I will show you how to make simple animations. They will make real-time more readable and interesting for the user.&lt;/p&gt;

&lt;p&gt;Lastly, we will make sure to have a responsive leaderboard, which should adapt to any size of input data, while staying readable on a smaller screen. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 You already want to check out the end result ? &lt;a href="http://leaderboard.remyhidra.dev"&gt;Look at it here !&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Are you ready ? Then let's get started !! 🤩&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#setup-the-project-and-libraries"&gt;
  &lt;/a&gt;
  Setup the project and libraries
&lt;/h1&gt;

&lt;p&gt;To follow along with this tutorial, you can either setup the article's project in a few commands, or you can adapt it directly in your project.&lt;/p&gt;

&lt;p&gt;We are going to use 3 libraries : D3.js and React, of course, but also &lt;a href="https://www.npmjs.com/package/react-use-measure"&gt;react-use-measure&lt;/a&gt;, a small librairy to easily measure React components. This will be useful to have a flexible and responsive SVG component.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-the-tutorial-project"&gt;
  &lt;/a&gt;
  Using the tutorial project
&lt;/h2&gt;

&lt;p&gt;To follow along the article, you download the article's React project using these simple commands.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Cloning the starter project&lt;/span&gt;
git clone &lt;span class="nt"&gt;-b&lt;/span&gt; setup git@github.com:rhidra/d3js-leaderboard.git
&lt;span class="nb"&gt;cd &lt;/span&gt;d3js-leaderboard

&lt;span class="c"&gt;# Install dependancies&lt;/span&gt;
npm i
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#for-your-own-project"&gt;
  &lt;/a&gt;
  For your own project
&lt;/h2&gt;

&lt;p&gt;Install D3.js.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i d3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install a small React library to measure components. This will be useful when we try to make our leaderboard responsive.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i react-use-measure
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#overview-of-the-initial-setup"&gt;
  &lt;/a&gt;
  Overview of the initial setup
&lt;/h2&gt;

&lt;p&gt;If you look in the &lt;code&gt;App.jsx&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"app"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"leaderboard-container"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Leaderboard&lt;/span&gt;
      &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;refreshData&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Refresh Data&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have two blocks, one with our future leaderboard, and one with a button. If you look at the rest of the file you can see that the button will update the data passed to the leaderboard in the &lt;code&gt;data&lt;/code&gt; variable.&lt;/p&gt;

&lt;p&gt;Basically, we give some data to the leaderboard. This data may come from the frontend, as it is now, but it may also come from a backend, using an asynchronous function.&lt;/p&gt;

&lt;p&gt;The goal of the leaderboard is to update the data in real-time, without refreshing the page. So, in the &lt;code&gt;Leaderboard&lt;/code&gt; component, we must consider possible changes to the &lt;code&gt;data&lt;/code&gt; input.&lt;/p&gt;

&lt;p&gt;Now let's take a look at the &lt;code&gt;Leaderboard.jsx&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;d3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Leaderboard&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;d3Ref&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/***
    Write D3.js code here !
    ***/&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;d3Ref&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;svg&lt;/span&gt;
      &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;d3Ref&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Leaderboard&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the &lt;code&gt;useEffect()&lt;/code&gt;, you will write all the D3.js code. The &lt;code&gt;Leaderboard&lt;/code&gt; component is basically just made of a &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; component. In the following sections, we are going to connect it to D3.js. Then, we will use the framework to draw shapes and text on the SVG canvas.&lt;/p&gt;

&lt;p&gt;Finally, we can take a quick look at the data. It comes from the &lt;code&gt;data.js&lt;/code&gt; file and is made of a unique ID, a label and a value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;label&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Indonesia&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;label&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;China&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;label&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Germany&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;label&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;China&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;38&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;label&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Argentina&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;label&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;China&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#setting-a-fixed-width-and-height"&gt;
  &lt;/a&gt;
  Setting a fixed width and height
&lt;/h1&gt;

&lt;p&gt;First of all, because we want a flexible and responsive design, we should not use the SVG &lt;code&gt;viewBox&lt;/code&gt; parameter. Because of this, we &lt;strong&gt;must&lt;/strong&gt; specify a fixed width and height for the SVG component.&lt;/p&gt;

&lt;p&gt;Since we will know the height of one row of the leaderboard, we can easily compute the total height. We can also include some margin and padding, if we want to.&lt;/p&gt;

&lt;p&gt;Because we want a vertical leaderboard, which should take all the horizontal space, the CSS width should be &lt;code&gt;100%&lt;/code&gt;. Unfortunately, we cannot write &lt;code&gt;&amp;lt;svg width="100%"/&amp;gt;&lt;/code&gt;, we must use a value in pixel. A solution is to measure the child component from the parent. In &lt;code&gt;App.jsx&lt;/code&gt;, you will measure the width of the &lt;code&gt;Leaderboard&lt;/code&gt; child. Then, you can pass it its width as a parameter.&lt;/p&gt;

&lt;p&gt;Here is the new &lt;code&gt;Leaderboard&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Leaderboard&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;

    &lt;span class="c1"&gt;// Constant (in px)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rowHeight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// Total height of the leaderboard&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setHeight&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rowHeight&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Update total height, to use the most up-to-date value &lt;/span&gt;
        &lt;span class="nx"&gt;setHeight&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rowHeight&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rowHeight&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;// ...&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;d3Ref&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;


    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;svg&lt;/span&gt;
          &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
          &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
          &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;d3Ref&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For &lt;code&gt;App&lt;/code&gt;, there is no easy, one-line solution to easily measure the size of a component. So instead, we will use a React library, &lt;a href="https://www.npmjs.com/package/react-use-measure"&gt;react-use-measure&lt;/a&gt;. It is quite popular and very easy to use.&lt;/p&gt;

&lt;p&gt;This makes our &lt;code&gt;App&lt;/code&gt; look like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;useMeasure&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-use-measure&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// ...&lt;/span&gt;

&lt;span class="c1"&gt;// Use React-use-measure to measure the Leaderboard component&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;leaderboardWidth&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useMeasure&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;debounce&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"leaderboard-container"&lt;/span&gt; &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Leaderboard&lt;/span&gt;
        &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;leaderboardWidth&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;One last important thing :&lt;/strong&gt; do not forget to set a constant &lt;code&gt;max-width&lt;/code&gt; and &lt;code&gt;width: 100%&lt;/code&gt; in the CSS, so that the leaderboard component does not extends its width indefinitely, and it looks good on smaller devices ! &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#lets-draw-some-svg-"&gt;
  &lt;/a&gt;
  Let's draw some SVG !
&lt;/h1&gt;

&lt;p&gt;Now that the boring stuff is done, time to have some fun 🥳 !&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;

    &lt;span class="c1"&gt;// Select the root SVG tag&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;svg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d3Ref&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// Scales&lt;/span&gt;
    &lt;span class="c1"&gt;// Get the biggest value in the set,&lt;/span&gt;
    &lt;span class="c1"&gt;// to draw all other relative to the maximum value.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;maxValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scaleLinear&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;domain&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;maxValue&lt;/span&gt;&lt;span class="p"&gt;]).&lt;/span&gt;&lt;span class="nx"&gt;range&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scaleLinear&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;domain&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;]).&lt;/span&gt;&lt;span class="nx"&gt;range&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

    &lt;span class="c1"&gt;// Join the data&lt;/span&gt;
    &lt;span class="c1"&gt;// We use the ID of a row to distinguish identical elements.&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;selectAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;g&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First, we select the root SVG component, and we draw &lt;code&gt;&amp;lt;g&amp;gt;&lt;/code&gt; elements, &lt;strong&gt;one for each data row&lt;/strong&gt;. In SVG, a &lt;code&gt;&amp;lt;g&amp;gt;&lt;/code&gt; element is just a group of other elements. &lt;/p&gt;

&lt;p&gt;We also define a few scaling utility functions &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, using the maximum value of the dataset.&lt;/p&gt;

&lt;p&gt;On the last line, we are telling D3.js to use the ID of a row to look for identical rows. Note that our code will be executed every time we change the data or the screen size, so rows may already be drawn. Maybe the value will be the same, but the order may not, so we must move it. Therefore, using D3.js, we can easily decide what to do whether we are &lt;strong&gt;creating, updating&lt;/strong&gt; or &lt;strong&gt;deleting&lt;/strong&gt; a row.&lt;/p&gt;

&lt;p&gt;To recap a bit, first we are going to define rows at creation, then how each one should be updated (the newly created, but also previously modified rows), and finally we will define a small animation before removing the row.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-the-rows"&gt;
  &lt;/a&gt;
  Create the rows
&lt;/h2&gt;

&lt;p&gt;At the initialization, we will simply define the skeleton of the SVG, i.e. creating the tags with as much static information as possible. The &lt;code&gt;g.enter()&lt;/code&gt; function isolate the rows that needs to be created.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Initialization&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;gEnter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;g&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;transform&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`translate(0, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;)`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First, we define the &lt;code&gt;&amp;lt;g&amp;gt;&lt;/code&gt; element of our row, and we give it a transformation. This transform instructions moves the group vertically to &lt;code&gt;y(data.length) + 500&lt;/code&gt; . In other words, it moves the row beyond the bottom of the leaderboard, to not be in sight. This will allow us to make a small &lt;strong&gt;enter animation&lt;/strong&gt; for when new rows are added.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// More constants !&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fontSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1.1rem&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;textColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;black&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bgColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#d4d8df&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Background bar color (grey)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;barColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#3d76c1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Main bar color (blue)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;barHeight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;marginText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Margin between the text and the bars&lt;/span&gt;

&lt;span class="c1"&gt;// Append background rect as child&lt;/span&gt;
&lt;span class="nx"&gt;gEnter&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rect&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;class&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fill&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;bgColor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;x&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;y&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;marginText&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rx&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ry&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;height&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;barHeight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Append main rect as child&lt;/span&gt;
&lt;span class="nx"&gt;gEnter&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rect&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;class&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;main&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fill&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;barColor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;x&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;y&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;marginText&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rx&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ry&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Rectangle border radius&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;height&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;barHeight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Append label text as child&lt;/span&gt;
&lt;span class="nx"&gt;gEnter&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;class&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;label&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;font-size&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fill&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;textColor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;x&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;y&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Append value text as child&lt;/span&gt;
&lt;span class="nx"&gt;gEnter&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;class&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;value&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text-anchor&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;end&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fill&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;textColor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;font-size&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;y&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our row is made up of four elements :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The background bar in grey, which should always have the same shape.&lt;/li&gt;
&lt;li&gt;The main bar, above the background bar, which has a variable width and a color.&lt;/li&gt;
&lt;li&gt;The label, with a constant value found in the row data.&lt;/li&gt;
&lt;li&gt;The value text, with a variable value.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NuPmCCul--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639334243600/ENe9Ab8ha.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NuPmCCul--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639334243600/ENe9Ab8ha.png" alt="A single row" width="290" height="42"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The lines are quite self-explanatory, we siply set color, size and position attribute to the four elements. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#update-the-rows"&gt;
  &lt;/a&gt;
  Update the rows
&lt;/h2&gt;

&lt;p&gt;Now that we created each necessary row, we can take care of updating them, if they need to.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Update each g row, when data changes&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;gUpdate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;gEnter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;gUpdate&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;easePoly&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;transform&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`translate(0, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;)`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because we use a parent &lt;code&gt;&amp;lt;g&amp;gt;&lt;/code&gt;, we can simply update its transform attribute to move the row to the right position. You can see that we display the rows in order, which is why we use the &lt;code&gt;i&lt;/code&gt; index parameter instead of the value &lt;code&gt;d.value&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can also see that we use a transition animation. If you remove it, you will see an &lt;em&gt;ugly&lt;/em&gt; &lt;em&gt;snap&lt;/em&gt; of all the row at their positions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Update rect bg&lt;/span&gt;
&lt;span class="nx"&gt;gUpdate&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rect.bg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;width&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;maxValue&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="c1"&gt;// Update rect main&lt;/span&gt;
&lt;span class="nx"&gt;gUpdate&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rect.main&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;easePolyOut&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;width&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="c1"&gt;// Update value text&lt;/span&gt;
&lt;span class="nx"&gt;gUpdate&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text.value&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;x&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;maxValue&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we update the rest of the elements. We set the correct width to the rectangles, also by using a transition animation. And we also update the text value. As you can see, since the label is constant, we do not need to update it. If you don't have a constant label for a same ID, you will probably need to update like here.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#remove-the-rows"&gt;
  &lt;/a&gt;
  Remove the rows
&lt;/h2&gt;

&lt;p&gt;Some rows won't be present in the dataset after an update, so we must remove them. To do that, we use the &lt;code&gt;g.exit()&lt;/code&gt; function, which isolate rows which should be removed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Exit animation&lt;/span&gt;
&lt;span class="nx"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;opacity&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;easeLinear&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;transform&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`translate(-50, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;)`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;opacity&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To remove them, we simply move them 50 pixels left smoothly, and we reduce slowly their opacity to 0. You can tweak the &lt;code&gt;.duration(200)&lt;/code&gt; if you are not happy with the exit animation duration.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#and-thats-it-"&gt;
  &lt;/a&gt;
  And... That's it ?
&lt;/h1&gt;

&lt;p&gt;Yup ! That's it ! 😁&lt;/p&gt;

&lt;p&gt;You can try it with a smaller screen size, and change the data input. It probably does not look exactly as you want for your project, so you can add more properties and tweak the parameters in the D3.js code. &lt;/p&gt;

&lt;p&gt;You can check out the &lt;a href="https://github.com/rhidra/d3js-leaderboard"&gt;full project source code&lt;/a&gt;, and &lt;a href="https://leaderboard.remyhidra.dev"&gt;a live demo of the leaderboard 📊.&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 &lt;strong&gt;Feel free to follow me on Twitter (&lt;a href="https://twitter.com/remyhidra"&gt;@remyhidra&lt;/a&gt;), to get more articles and tutorial about Web development. I just started writing blog posts and I am trying to build a small audience from it, so there will be plenty of content coming soon !&lt;/strong&gt; 😄&lt;/p&gt;

&lt;p&gt;Additionaly, tell me in the comments, what other kind of data visualization would you like to build ? &lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>d3js</category>
      <category>datavisualization</category>
    </item>
    <item>
      <title>An introduction to GraphQL and how to use GraphQL APIs</title>
      <author>Salma Alam-Naylor</author>
      <pubDate>Tue, 14 Dec 2021 09:08:22 +0000</pubDate>
      <link>https://dev.to/whitep4nth3r/an-introduction-to-graphql-and-how-to-use-graphql-apis-13i</link>
      <guid>https://dev.to/whitep4nth3r/an-introduction-to-graphql-and-how-to-use-graphql-apis-13i</guid>
      <description>&lt;p&gt;I’ve been using the Contentful GraphQL API pretty extensively for the past year to build a variety of projects on the Jamstack, and I got sucked in pretty quickly without really knowing much about the inner workings of GraphQL. While it’s easy to start making your first query with GraphQL with very little research, I thought it would be useful to consolidate all I’ve learned throughout the year and provide a high-level introduction to GraphQL for anyone interested in getting started. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-an-api"&gt;
  &lt;/a&gt;
  What is an API?
&lt;/h2&gt;

&lt;p&gt;API stands for Application Programming Interface, which is a way to communicate between different software services. Different types of APIs are used in programming hardware and software, including Web APIs — like the APIs that Contentful provides. If you’re new to development, I recommend you check out this blog post — &lt;a href="https://dev.to/whitep4nth3r/what-is-an-api-587c"&gt;What is an API?&lt;/a&gt; — to get a good grounding on APIs and the role they play in web development.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/whitep4nth3r" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xCrpC75f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--uqkZs4wv--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/492757/3e8de3e2-8172-4cf6-958c-ed1221225d6a.jpg" alt="whitep4nth3r"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/whitep4nth3r/what-is-an-api-587c" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;What is an API?&lt;/h2&gt;
      &lt;h3&gt;Salma Alam-Naylor ・ Aug 12 ・ 9 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#a-brief-history-of-graphql"&gt;
  &lt;/a&gt;
  A brief history of GraphQL
&lt;/h2&gt;

&lt;p&gt;GraphQL is a language used to communicate with backend systems, allowing you to fetch and manipulate your data. It was developed by Facebook in 2012, and released to the public in 2015. In 2019, the project was moved to the non-profit &lt;a href="https://graphql.org/foundation/"&gt;GraphQL Foundation&lt;/a&gt;, with a mission to ensure that the GraphQL community is able to focus on its continued evolution on a neutral platform.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-does-graphql-mean"&gt;
  &lt;/a&gt;
  What does GraphQL mean?
&lt;/h2&gt;

&lt;p&gt;GraphQL is language-agnostic, which means it can be used with any backend framework or programming language, and is essentially an addition to a backend service that allows developers to communicate with the database and request data in a specific way. &lt;/p&gt;

&lt;p&gt;To create a GraphQL server for your data source, you can use specialized tools such as &lt;a href="https://www.apollographql.com/"&gt;ApolloGraphQL&lt;/a&gt;, which allow you to create a layer on top of your backend and database(s), enabling your data to be represented, queried and changed via the Graph Query Language.&lt;/p&gt;

&lt;p&gt;And finally, GraphQL stands for “Graph Query Language.” Let’s unpack what we mean by “graph” and “query language.”&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#your-data-represented-in-a-graph"&gt;
  &lt;/a&gt;
  Your data, represented in a graph
&lt;/h2&gt;

&lt;p&gt;GraphQL creates a representation of your data that is designed to feel familiar and natural, like a visual graph. &lt;a href="https://www.oxfordlearnersdictionaries.com/definition/english/graph"&gt;The Oxford Learner’s Dictionary&lt;/a&gt; defines a graph as:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[A] diagram consisting of a line or lines, showing how two or more sets of numbers are related to each other.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The graph part of GraphQL describes a data structure of a collection of objects — or nodes — that are connected to each other through a set of links, or edges. Relationships between different objects can be represented in a user interface as a result of this graph structure. The key concept is that the data structure is &lt;strong&gt;non-linear&lt;/strong&gt;, meaning that one object can be connected to more than one other object, and relationships can also be circular.&lt;/p&gt;

&lt;p&gt;There are specialized tools available, such as &lt;a href="https://graphql-dotnet.github.io/docs/getting-started/graphiql/"&gt;GraphiQL&lt;/a&gt;, to represent the relationships between node types on a GraphQL API. Here’s a screenshot from another great tool — the &lt;a href="https://www.contentful.com/marketplace/app/graphql-playground/"&gt;GraphQL Playground app available in Contentful’s app marketplace&lt;/a&gt; — showing the relationships between data in the Contentful space that powers my personal website. Notice how you can drill down and inspect the data types in each content type, and understand how they are related to each other. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--befC7R0i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tewwh6dyoxnbcoka32y3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--befC7R0i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tewwh6dyoxnbcoka32y3.png" alt="A screenshot of the GraphQL playground in Contentful, showing the docs tabs open, showing the connection between objects or nodes in the GraphQL schema. In this particular example, a blogPost node contains an author node, which contains an image node, which contains a fileName of type String." width="880" height="506"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this particular example, a &lt;code&gt;blogPost&lt;/code&gt; node contains an &lt;code&gt;author&lt;/code&gt; node, which contains an &lt;code&gt;image&lt;/code&gt; node, which contains a &lt;code&gt;fileName&lt;/code&gt; of &lt;em&gt;type String&lt;/em&gt;. Trace the relationships down the tree by following the highlighted nodes. &lt;/p&gt;

&lt;p&gt;Being able to inspect all types that exist in your data is a really powerful tool with predictable results to help you build robust and scalable applications. You might already be starting to realize that having this level of visibility and insight over the data structures that power your content — all within a user interface — is starting to look and feel pretty powerful if you’re a front-end developer! If you want to read more about “thinking in graphs,” have a look at &lt;a href="https://graphql.org/learn/thinking-in-graphs/"&gt;this fantastic resource from graphql.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So that’s the &lt;strong&gt;graph&lt;/strong&gt; part of GraphQL. Next, let’s take a look at the &lt;strong&gt;query language&lt;/strong&gt; and how a type system ties everything together.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-type-system-makes-things-predictable"&gt;
  &lt;/a&gt;
  A type system makes things predictable
&lt;/h2&gt;

&lt;p&gt;You may already be familiar with the concept of a REST API, which adopts a resource-based approach to data reading and writing, determined by the format of the API URLs over HTTP. (If you’re new to REST and you want some more context, check out this post — &lt;a href="https://dev.to/whitep4nth3r/what-is-a-rest-api-51h"&gt;What is a REST API?&lt;/a&gt;) In contrast to REST, the GraphQL query language allows you to request data from multiple different “resources” (such as blog posts, pages, authors and anything else) in just one API call using a single URL endpoint — usually over HTTP.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/whitep4nth3r" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xCrpC75f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--uqkZs4wv--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/492757/3e8de3e2-8172-4cf6-958c-ed1221225d6a.jpg" alt="whitep4nth3r"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/whitep4nth3r/what-is-a-rest-api-51h" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;What is a REST API?&lt;/h2&gt;
      &lt;h3&gt;Salma Alam-Naylor ・ Oct 5 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#api&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;When building up a web page, you may need to display different types of data in different UI components. Perhaps you might need to fetch a blog post, an author, a set of navigation links, a list of related blog posts, and so on — all for a single page. When using GraphQL, &lt;strong&gt;you can request all the different data types you need to build up your UIs in a single API call&lt;/strong&gt;, instead of having to make multiple requests for different “resources.”&lt;/p&gt;

&lt;p&gt;Here’s an example of a GraphQL query which is requesting data from four different content types (or resources) in Contentful: a &lt;code&gt;blogPost&lt;/code&gt;, an &lt;code&gt;author&lt;/code&gt;, an &lt;code&gt;event&lt;/code&gt;, and a &lt;code&gt;talk&lt;/code&gt;. Essentially, we’re requesting four different objects, and particular fields on those objects. For example, on the &lt;code&gt;eventCollection&lt;/code&gt; object, we’re requesting the &lt;code&gt;items&lt;/code&gt; field, and for each of those objects in &lt;code&gt;items&lt;/code&gt;, the &lt;code&gt;name&lt;/code&gt; field. The query is prefixed with the word query — on the GraphQL schema, a query is of type &lt;code&gt;Query&lt;/code&gt;!&lt;/p&gt;

&lt;p&gt;When using a REST API, you’d need to make four different API calls to request data from these four different content types. With GraphQL, you can do it all in one go!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;blogPostCollection&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;eventCollection&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;talkCollection&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And here’s the result of the query. Notice we have all the data we requested in one response. (Note: I added limits into the query below to be able to demonstrate this in a single page view.) What’s also great about the GraphQL response object is that the object keys returned are exactly the same as we requested. This makes GraphQL predictable and intuitive to use. You get exactly what you ask for in the response — no more, no less — in the same order, with the same structure.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y5_2jyrP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwar7fxuej05k3fvtlhh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y5_2jyrP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwar7fxuej05k3fvtlhh.png" alt="A screenshot of the GraphQL playground in Contentful showing the result of the query described above." width="880" height="506"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Use the keyboard shortcut &lt;strong&gt;ctrl + space&lt;/strong&gt; when you’re building up a query in a GraphQL explorer to see the fields available to select on an object. This is a handy way to get inline hints about the schema of your data as you build up your queries — and the data type of those fields.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cZ3xK2Ks--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ym5cjj53lsbzzm2hz1mf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cZ3xK2Ks--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ym5cjj53lsbzzm2hz1mf.png" alt="An annotated diagram showing the hint or context menu that shows in the GraphQL explorer when you press ctrl and space. The menu shows the fields available to query on the current node, and the type of field it is when it is selected." width="689" height="820"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to take a deeper dive into types in GraphQL, &lt;a href="https://graphql.org/learn/schema/#type-system"&gt;take a look at the official GraphQL documentation on schemas and types&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You might be thinking — how is this graph structure generated from the GraphQL schema? Let’s take a look at introspection queries.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#introspection-queries-expose-a-graphql-schema"&gt;
  &lt;/a&gt;
  Introspection queries expose a GraphQL schema
&lt;/h2&gt;

&lt;p&gt;GraphQL comes with an introspection query system, which is a way to query the type system and data structures in your database in order to generate the documentation and provide hints in the GraphQL UI. If you’re not familiar with the word &lt;strong&gt;introspection&lt;/strong&gt;, it means to look inward and examine your own state.&lt;/p&gt;

&lt;p&gt;You can actually query your GraphQL schema using GraphQL itself! This root-level query returns all of the data types you have in your schema.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;__schema&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;types&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V5avK-YB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nbae971vwl9puk4ky0xx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V5avK-YB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nbae971vwl9puk4ky0xx.png" alt="A screenshot of the GraphQL playground showing the result of the schema query made above." width="880" height="662"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You’ll see three different types of data returned in an introspection query.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Types defined by the schema: in the case of my personal website built with Contentful, these will be types such as &lt;code&gt;BlogPost&lt;/code&gt;, &lt;code&gt;Asset&lt;/code&gt;, &lt;code&gt;Talk&lt;/code&gt;, &lt;code&gt;Event&lt;/code&gt;, &lt;code&gt;Project&lt;/code&gt; and so on.&lt;/li&gt;
&lt;li&gt;Types defined by the type of field data (scalar types): such as &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Boolean&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Internal introspection query types: such as &lt;code&gt;__Schema&lt;/code&gt;, &lt;code&gt;__Type&lt;/code&gt;, &lt;code&gt;__Field&lt;/code&gt; — and these are prefixed by a double underscore. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In GraphQL, each field in a query acts as a function which returns the next field type, and the next type, and the next type, until the field returned is a scalar value, such as a String or a Boolean. This is demonstrated in the example above from my personal website, where a &lt;code&gt;blogPost&lt;/code&gt; node contained an &lt;code&gt;author&lt;/code&gt; node, which contained an &lt;code&gt;image&lt;/code&gt; node, which contained a &lt;code&gt;fileName&lt;/code&gt; of &lt;em&gt;type String&lt;/em&gt; — a scalar value — and that’s where the journey ends.&lt;/p&gt;

&lt;p&gt;When any field is executed, a &lt;strong&gt;resolver&lt;/strong&gt; is called to produce the field value. When developing your own GraphQL servers and making database changes, you’ll need to provide a &lt;strong&gt;resolver&lt;/strong&gt; for each new field type you add to the API. &lt;a href="https://graphql.org/learn/execution/"&gt;Learn more about resolvers from GraphQL.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A great feature of the Contentful GraphQL API is that the GraphQL schema of your data is generated at request time, meaning it is always up to date with the current status of your Contentful space. You don’t need to worry about resolvers — we handle it for you. &lt;/p&gt;

&lt;p&gt;If you want to find out more about introspection queries and how to watch them run in the network tab of the browser when loading up a GraphQL explorer, &lt;a href="https://www.youtube.com/watch?v=udou5eV9QFw"&gt;check out this video on the Contentful Youtube channel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So far we’ve focused on just reading data from a GraphQL API. But writing to a database via GraphQL is also possible — and this comes with another special word — &lt;strong&gt;mutation&lt;/strong&gt;. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#write-data-with-graphql-mutations"&gt;
  &lt;/a&gt;
  Write data with GraphQL mutations
&lt;/h2&gt;

&lt;p&gt;To mutate something means to change, or manipulate it. You can manipulate your server-side data via GraphQL using the &lt;code&gt;mutation&lt;/code&gt; keyword that prefixes a query. &lt;strong&gt;The Contentful GraphQL API is read-only&lt;/strong&gt;, so you can’t perform mutations in Contentful using GraphQL, but in theory, here’s how it works if I wanted to create a new blog post, save the title, and return the new data in the response.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;mutation&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;CreateNewBlogPost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;!)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;createBlogPost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;The query begins with the word &lt;code&gt;mutation&lt;/code&gt;, and in GraphQL APIs that support mutations, this is of type &lt;code&gt;Mutation&lt;/code&gt;, in the same way that a read-query is of type &lt;code&gt;Query&lt;/code&gt; as described above. &lt;/li&gt;
&lt;li&gt;Next, we need to wrap the mutation in what looks like a function, where we define the variables needed — and their types — to complete the mutation. This is CreateNewBlogPost which takes in a variable title which is of type String. The ! means that the variable is required in order for the mutation to happen.  For more information on how to use variables in GraphQL, check out this blog post I wrote a little while back:&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/whitep4nth3r" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xCrpC75f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--uqkZs4wv--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/492757/3e8de3e2-8172-4cf6-958c-ed1221225d6a.jpg" alt="whitep4nth3r"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/whitep4nth3r/til-how-to-use-graphql-variables-to-give-my-queries-type-safety-3m4h" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;TIL: How to use GraphQL variables to give my queries type safety&lt;/h2&gt;
      &lt;h3&gt;Salma Alam-Naylor ・ Oct 25 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#graphql&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#security&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Inside the “function,” you would use the mutation available on the GraphQL API (use introspection queries to find it!). In this case, it’s &lt;code&gt;createBlogPost&lt;/code&gt;. Inside the mutation, define the variable(s) to pass in.&lt;/li&gt;
&lt;li&gt;And finally, inside the mutation, define the fields you’d like to return in the response. In this case, I’m just creating a title, so I just want to return the new title in the response.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make a request to the API with the mutation query and variables, and here’s the response you’ll see from the API after the mutation has completed. Again, the output is in the same recognizable format as the input!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"createBlogPost"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"My new blog post title!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To read more on GraphQL mutations, &lt;a href="https://graphql.org/learn/queries/#mutations"&gt;check out the official documentation from GraphQL.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So now we’ve covered how to read from (query) and write to (mutate) a GraphQL API where supported, let’s take a brief look at how we can communicate with a GraphQL API to perform those actions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-communicate-with-a-graphql-api"&gt;
  &lt;/a&gt;
  How to communicate with a GraphQL API
&lt;/h2&gt;

&lt;p&gt;GraphQL is usually served over HTTP via a GraphQL server. There are other ways to communicate with GraphQL, such as via WebSockets, but HTTP is largely the most popular choice. If you’d like to read up on how to use GraphQL with cURL, Python, JavaScript, Ruby and PHP over HTTP, check out this blog post: &lt;a href="https://www.contentful.com/blog/2021/01/14/GraphQL-via-HTTP-in-five-ways/"&gt;GraphQL via HTTP in five ways&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here’s a quick example of how to request a title and excerpt from a blog post stored in Contentful via GraphQL, using JavaScript fetch. You can make this same HTTP call using any language or framework as long as it supports HTTP!&lt;/p&gt;

&lt;p&gt;In this example we’re sending the request via HTTP POST by sending the access token in an Authorization header and the GraphQL query in the body of the request. You can also make the same request via HTTP GET, but you’ll need to append the query and access token to the URL of the request. &lt;a href="https://www.contentful.com/developers/docs/references/graphql/#/introduction/http-methods"&gt;Read more about using HTTP POST and GET on the Contentful GraphQL API in the documentation&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Build the GraphQL Query&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`{
  blogPostCollection(limit: 1) {
    items {
      title
      excerpt
    }
  }`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Send a POST request via fetch to the Contentful GraphQL URL endpoint&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://graphql.contentful.com/content/v1/spaces/{yourSpaceId}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="c1"&gt;// Include Authorization and Content-Type HTTP headers&lt;/span&gt;
  &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;Authorization&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bearer {yourAccessToken}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="c1"&gt;// Send the GraphQL query in the body of the request&lt;/span&gt;
  &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And boom, you’ve got data from a GraphQL API! Remember, GraphQL is language-agnostic, so you can read and write to a GraphQL API using any programming language or framework — as long as it supports the protocol you need, such as HTTP.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further reading
&lt;/h2&gt;

&lt;p&gt;GraphQL is a powerful way to organize how you communicate with your backend services and databases. I’ve really enjoyed exploring what’s possible with GraphQL this year, and I’m excited to dive deeper into new projects. I might even experiment with building my own GraphQL API!&lt;/p&gt;

&lt;p&gt;To find out more about using GraphQL to get your Contentful data — including published and preview content — &lt;a href="https://www.contentful.com/developers/docs/references/graphql/"&gt;check out the official documentation&lt;/a&gt;. And if you want to explore the wonderful world of GraphQL in more detail, take a look at the official GraphQL specification and learning materials on &lt;a href="https://graphql.org/"&gt;graphql.org&lt;/a&gt;. Maybe it’ll inspire you to build your own GraphQL API. Happy querying!&lt;/p&gt;

</description>
      <category>graphql</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Cherry-Pick Your Teammate's Changes Without Push 'n Pull-ing To Your Repo In Android Studio</title>
      <author>Michael</author>
      <pubDate>Tue, 14 Dec 2021 09:06:36 +0000</pubDate>
      <link>https://dev.to/gitlive/cherry-pick-your-teammates-changes-without-push-n-pull-ing-to-your-repo-in-android-studio-3dnf</link>
      <guid>https://dev.to/gitlive/cherry-pick-your-teammates-changes-without-push-n-pull-ing-to-your-repo-in-android-studio-3dnf</guid>
      <description>&lt;p&gt;You asked your teammate for help with a piece of code and they showed you the solution in their editor. Now you need to fetch those changes. Usually, this would mean a series of tedious Git commands for both of you (not to mention that the changes will forever grace your git history), but no longer - GitLive allows you to cherry-pick your teammate's changes straight from their local files without having to push and pull to Git.&lt;/p&gt;

&lt;p&gt;In Android Studio, open up the team window by clicking on the GitLive icon on the bottom tool window bar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bXE1FJf4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639399419640/xUcQducw0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bXE1FJf4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639399419640/xUcQducw0.png" alt="img-1-red-box.png" width="880" height="581"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will show a list of your teammates, if they are online (or away) and the issue they are currently working on. Click the arrow on the left-hand side of the teammate that helped you to see the repositories they have cloned, locate the one they made the changes to and click the arrow beside that too.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HbwsEP0s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639398608237/s6w-BmcCd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HbwsEP0s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639398608237/s6w-BmcCd.png" alt="IMG-2.png" width="880" height="532"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, you can see the list of files changed by your teammate on their branch compared to the main branch. Files with asterisks next to the file icon contain changes made locally by your teammate that have not yet been pushed to the remote repository.&lt;/p&gt;

&lt;p&gt;Since we are only interested in their local changes, click the filter icon at the bottom of the team window to filter to only the unpushed changes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8ID7tSfJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639398600703/zGYH287l8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8ID7tSfJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639398600703/zGYH287l8.png" alt="IMG-3.png" width="880" height="576"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we can see the single file that contains the solution we want to copy! Clicking on it will open a diff of the changes so we can make sure it contains only the changes we need. Now all we need to do is to right click on the file and select the cherry-pick option to pick the changes. And voilà - no need for any git push- or git pull -ing!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BmAzCPKz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639398593172/6-fjX8pz-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BmAzCPKz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639398593172/6-fjX8pz-.png" alt="IMG-4.png" width="880" height="576"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also perform the cherry pick at the level above if you want to pick all changes from multiple files at once by right-clicking on the repository and selecting the cherry-pick option.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4uvIsUVM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639398583768/-XEEChZua.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4uvIsUVM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639398583768/-XEEChZua.png" alt="IMG-5.png" width="880" height="532"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Don't have the GitLive extension installed yet? You can &lt;a href="https://plugins.jetbrains.com/plugin/11955-gitlive"&gt;find GitLive here&lt;/a&gt;, and if you want to learn more, check out &lt;a href="https://blog.git.live/gitlive-8-0-Cherry-picking-your-teammates-changes"&gt;this blog post&lt;/a&gt; or the &lt;a href="https://docs.git.live/docs/cherrypicking/"&gt;GitLive docs&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
      <category>git</category>
    </item>
    <item>
      <title>Should I learn React or angular js</title>
      <author>Deepak Gupta</author>
      <pubDate>Tue, 14 Dec 2021 08:44:19 +0000</pubDate>
      <link>https://dev.to/deepakguptacoder/should-i-learn-react-or-angular-js-3be0</link>
      <guid>https://dev.to/deepakguptacoder/should-i-learn-react-or-angular-js-3be0</guid>
      <description>&lt;h1&gt;
  &lt;a href="#hello-everyone"&gt;
  &lt;/a&gt;
  Hello Everyone..
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In this Article we are seeing the best things I can't tell about what to learn, but there are advantages of both of them, and I hope my comparison will help you to choose or at least learn something new.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reactjs"&gt;
  &lt;/a&gt;
  ReactJS
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i621UGWx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/po9oomcjq3sm8o1xd5pc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i621UGWx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/po9oomcjq3sm8o1xd5pc.png" alt="Image description" width="267" height="189"&gt;&lt;/a&gt;&lt;br&gt;
ReactJS is a JavaScript library developed and powered by Facebook.It has easy learning API and interface and is great for debugging. The technology has a component-based architecture making a code highly reusable. It has proven to be efficient for large scale high traffic applications such as Facebook, Instagram, BBC, and Netflix.&lt;br&gt;
Other benefits of ReactJS are React Native library and server-side rendering, which allows solving SEO and performance issues.ReactJS assures faster updates creating and synchronizing minimal lists of update portions.&lt;/p&gt;

&lt;p&gt;these benefits, ReactJS is essentially a library, not a full framework.In addition, the absence of templates and the use of Components for the UI generation may be confusing for programmers who do not specialize in React.Model-View-Controller paradigm while routing, data fetching and state management need to be tackled with the help of third parties.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#angularjs"&gt;
  &lt;/a&gt;
  AngularJS
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0eVOD2wA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s7r0dw897y4155bm6al6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0eVOD2wA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s7r0dw897y4155bm6al6.png" alt="Image description" width="554" height="554"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AngularJS is a Google product released in 2009, which makes it the oldest JavaScript framework.Directives of AngularJS allow adding special behavior to parts of the DOM, thus, facilitating the extension of HTML.It is a complete solution with a Model-View-Controller&lt;br&gt;
architecture, declarative programming style and strong feature set. AngularJS provides simple routing, intuitive alteration, and straightforward UI design.&lt;/p&gt;

&lt;p&gt;On the one hand, it significantly reduces the amount of code needed for the creation of dynamic views; on the other hand, it hurts performance and complicates debugging.A two-way data binding seems to be simultaneously the most appreciated and the most detested feature of AngularJS.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h5&gt;

&lt;h6&gt;
  &lt;a href="#i-hope-you-found-this-article-useful-if-you-need-any-help-please-let-me-know-in-the-comment-section"&gt;
  &lt;/a&gt;
  I hope you found this article useful, if you need any help please let me know in the comment section.💯
&lt;/h6&gt;

</description>
      <category>react</category>
      <category>angular</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to connect Flask to ReactJs</title>
      <author>Faruq Abdulsalam</author>
      <pubDate>Tue, 14 Dec 2021 08:41:26 +0000</pubDate>
      <link>https://dev.to/nagatodev/how-to-connect-flask-to-reactjs-1k8i</link>
      <guid>https://dev.to/nagatodev/how-to-connect-flask-to-reactjs-1k8i</guid>
      <description>&lt;p&gt;Building web applications with the &lt;code&gt;Flask&lt;/code&gt; framework and the inbuilt &lt;a href="https://palletsprojects.com/p/jinja/"&gt;jinja&lt;/a&gt; template is cool but hooking your backend to a react frontend(which I believe we all love 😉) is much more interesting. In this tutorial, you are going to be taken through the easy steps you need to take to connect your &lt;code&gt;Flask&lt;/code&gt; backend to a &lt;code&gt;React&lt;/code&gt; frontend. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h2&gt;

&lt;p&gt;1) Beginner level understanding of the flask framework. If you are new to &lt;code&gt;Flask&lt;/code&gt; you can check out my article on how to set up your flask project and use it with the &lt;a href="https://palletsprojects.com/p/jinja/"&gt;jinja&lt;/a&gt; template engine &lt;a href="https://dev.to/nagatodev/getting-started-with-flask-1kn1"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;2) Familiarity with the basics of &lt;code&gt;ReactJs&lt;/code&gt;. You will be making use of the &lt;code&gt;useState&lt;/code&gt; hook and also fetching data from API using &lt;code&gt;axios&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let's get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-directory"&gt;
  &lt;/a&gt;
  Project directory
&lt;/h2&gt;

&lt;p&gt;Create the project directory where your application will be stored and then navigate into it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;mkdir&lt;/span&gt; &lt;span class="nx"&gt;project&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;project&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#react-frontend-setup"&gt;
  &lt;/a&gt;
  React frontend setup
&lt;/h2&gt;

&lt;p&gt;Create the frontend react application by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="nx"&gt;flask_react&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Move into the &lt;code&gt;flask_react&lt;/code&gt; directory&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;flask_react&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and then start the frontend application by running&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The default react application page should pop up in your browser; if it does not, copy and open the link below in your browser.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//localhost:3000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xVMOIwxd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mmpra1xpsht2bx1o7ls2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xVMOIwxd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mmpra1xpsht2bx1o7ls2.png" alt="react default" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flask-backend-setup"&gt;
  &lt;/a&gt;
  Flask backend setup
&lt;/h2&gt;

&lt;p&gt;Create a new directory in your base directory&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;mkdir&lt;/span&gt; &lt;span class="nx"&gt;backend&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then navigate into it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;backend&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you have been following my &lt;code&gt;Building a web application with Flask&lt;/code&gt; series you should know the next thing that needs to be created. Yes, a virtual environment. Did you happen to get that right? 😀&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#virtual-environment"&gt;
  &lt;/a&gt;
  Virtual environment
&lt;/h3&gt;

&lt;p&gt;It is recommended to always create a virtual environment before you start your project. This helps you to separate the packages you use in this application from other applications; any change you make here won't affect the same package in another application on your system. To create a  virtual environment on your system; run this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;For&lt;/span&gt; &lt;span class="nx"&gt;mac&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;unix&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;python3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="nx"&gt;venv&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt;
&lt;span class="nx"&gt;For&lt;/span&gt; &lt;span class="nx"&gt;windows&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;py&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="nx"&gt;venv&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After creating the environment, activate it by running :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;For&lt;/span&gt; &lt;span class="nx"&gt;mac&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;unix&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;source&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;activate&lt;/span&gt;
&lt;span class="nx"&gt;For&lt;/span&gt; &lt;span class="nx"&gt;windows&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;Scripts&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;activate&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#installing-flask"&gt;
  &lt;/a&gt;
  Installing Flask
&lt;/h3&gt;

&lt;p&gt;Now that you have your environment up and running, you can go ahead and install Flask&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;pip&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;flask&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next thing is to register the script in an environment file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;pip&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;dotenv&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After successful installation, create the &lt;code&gt;.flaskenv&lt;/code&gt; file in the &lt;code&gt;backend&lt;/code&gt; directory created above.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;touch&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flaskenv&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please note that the preceding &lt;code&gt;.&lt;/code&gt; is very important. If you name your file just &lt;code&gt;flaskenv&lt;/code&gt;, any environment variable you'll put in it won't be read.&lt;/p&gt;

&lt;p&gt;Now put your environment variables in the &lt;code&gt;.flaskenv&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;FLASK_APP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt;
&lt;span class="nx"&gt;FLASK_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;development&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The application environment is set to development mode so you can easily debug your application and the base.py file which will contain your flask application will be created in the next section.&lt;/p&gt;

&lt;p&gt;If the above approach is not used, you would need to keep on exporting your environment variables using &lt;code&gt;export FLASK_APP=base.py&lt;/code&gt; and &lt;code&gt;export FLASK_ENV=development&lt;/code&gt; whenever you restart your terminal window.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; To ensure that the focus of this article doesn't deviate, I'll be making the flask backend structure simple. If you want to build bigger projects you definitely have to create a better folder structure for your application. You can check out my articles on &lt;a href="https://dev.to/nagatodev/getting-started-with-flask-1kn1"&gt;Getting started with Flask&lt;/a&gt; and &lt;a href="https://dev.to/nagatodev/building-a-todo-list-application-with-flask-fcj"&gt;Building a Todo List Application with Flask&lt;/a&gt; if you need to learn how to create a folder structure for larger projects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#basepy"&gt;
  &lt;/a&gt;
  base.py
&lt;/h3&gt;

&lt;p&gt;Create a new file &lt;code&gt;base.py&lt;/code&gt; in the &lt;code&gt;backend&lt;/code&gt; directory where the &lt;code&gt;.flaskenv&lt;/code&gt; directory is also located.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;touch&lt;/span&gt; &lt;span class="nx"&gt;base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your folder structure should currently look like 👇&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--avApmJBz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nxushvw3xnha5k71ns1h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--avApmJBz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nxushvw3xnha5k71ns1h.png" alt="Folder structure" width="485" height="593"&gt;&lt;/a&gt;&lt;br&gt;
Inside the &lt;code&gt;base.py&lt;/code&gt; script create a simple API that returns your name and info about you:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="nx"&gt;flask&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Flask&lt;/span&gt;

&lt;span class="nx"&gt;api&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/profile&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;def&lt;/span&gt; &lt;span class="nx"&gt;my_profile&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="nx"&gt;response_body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Nagato&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;about&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello! I'm a full stack developer that loves python and javascript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response_body&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code above contains a simple API which would be called by the react front end to get the &lt;code&gt;response_body&lt;/code&gt; dictionary.&lt;/p&gt;

&lt;p&gt;You might have noticed two things:&lt;br&gt;
i) the &lt;code&gt;GET&lt;/code&gt; http method is not specified here. This is because, by default, &lt;code&gt;view&lt;/code&gt; functions in flask accept GET requests only.&lt;br&gt;
ii) the &lt;code&gt;response_body&lt;/code&gt; dictionary being returned at the end of the function is not being passed as an argument to the popular &lt;code&gt;jsonify&lt;/code&gt; function like this &lt;code&gt;jsonify(response_body)&lt;/code&gt;. This is because view functions in Flask can return a dictionary, which Flask then turns to JSON format.&lt;/p&gt;

&lt;p&gt;The backend has been successfully set up, you can test this by running your application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;flask&lt;/span&gt; &lt;span class="nx"&gt;run&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then navigate to the url &lt;code&gt;http://127.0.0.1:5000/profile&lt;/code&gt;.You should see the dictionary &lt;code&gt;response_body&lt;/code&gt; rendered in JSON format.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6Pw3uU82--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e9xh5xpucwv4imfjfq6h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Pw3uU82--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e9xh5xpucwv4imfjfq6h.png" alt="flask-run-view" width="880" height="384"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You could also use &lt;code&gt;postman&lt;/code&gt; to confirm this and you'll still get the same result.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U8swoJPr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5jpcob7r7jot1qowyiio.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U8swoJPr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5jpcob7r7jot1qowyiio.png" alt="postman-api-call" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to push your code to source control. Don't forget to add your &lt;code&gt;env&lt;/code&gt; and &lt;code&gt;__pycache__&lt;/code&gt; folders to the &lt;code&gt;gitignore&lt;/code&gt; file in the base directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;backend&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;
&lt;span class="nx"&gt;backend&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;__pycache__&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#connecting-the-api-endpointprofile-to-the-react-frontend"&gt;
  &lt;/a&gt;
  Connecting the API endpoint(/profile) to the react frontend
&lt;/h2&gt;

&lt;p&gt;Now you can return to the base directory where the react frontend is located.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install the &lt;code&gt;axios&lt;/code&gt; library:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#packagejson"&gt;
  &lt;/a&gt;
  package.json
&lt;/h3&gt;

&lt;p&gt;Open the package.json file and add the proxy below the "private": true, line so it ends up like 👇.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;flask_react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;version&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.1.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;private&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;proxy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://localhost:5000&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;//newline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By doing this, you will be able to use relative paths when you are making the API requests. Instead of making use of &lt;code&gt;http://localhost:5000/profile&lt;/code&gt; you can simply make use of &lt;code&gt;/profile&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The default url which is normally used to access flask applications in the browser is &lt;code&gt;http://127.0.0.1:5000&lt;/code&gt; but &lt;code&gt;http://localhost:5000&lt;/code&gt; was used above as the value to the proxy key. Don't be confused, they are both the same. You can read more on that &lt;a href="https://whatismyipaddress.com/localhost"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Don't close the &lt;code&gt;package.json&lt;/code&gt; file yet. There is something cool you can add as well. You know that whenever your react server is started and you make any change in a file and you save it, the server restarts so that the new change can reflect right?. You can also add that feature to your flask backend application. This is another advantage of connecting react to flask 😎.&lt;/p&gt;

&lt;p&gt;Under the &lt;code&gt;scripts&lt;/code&gt; section add another key and value. &lt;br&gt;
&lt;code&gt;"start-backend": "cd backend &amp;amp;&amp;amp; env/bin/flask run --no-debugger",&lt;/code&gt; so it ends up looking like 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scripts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-scripts start&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;start-backend&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cd backend &amp;amp;&amp;amp; env/bin/flask run --no-debugger&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;//new line&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;build&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-scripts build&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-scripts test&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;eject&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-scripts eject&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can start your backend server with &lt;code&gt;npm run start-backend&lt;/code&gt;. This executes the command passed as its value in the package.json file. It navigates into the &lt;code&gt;env&lt;/code&gt; directory in your &lt;code&gt;backend&lt;/code&gt; directory and executes the &lt;code&gt;flask run&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;--no-debugger&lt;/code&gt; option is also passed here to disable the browser-based debugger as the Flask backend only serves as a server that holds the API endpoint.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#appjs"&gt;
  &lt;/a&gt;
  app.js
&lt;/h3&gt;

&lt;p&gt;Here, you'll be making the call to the API endpoint in the flask backend server. After the changes, the app.js file will look exactly like 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;logo&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./logo.svg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

   &lt;span class="c1"&gt;// new line start&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;profileData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setProfileData&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getData&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;GET&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/profile&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;
      &lt;span class="nx"&gt;setProfileData&lt;/span&gt;&lt;span class="p"&gt;(({&lt;/span&gt;
        &lt;span class="na"&gt;profile_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;about_me&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;about&lt;/span&gt;&lt;span class="p"&gt;}))&lt;/span&gt;
    &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;})}&lt;/span&gt;
    &lt;span class="c1"&gt;//end of new line &lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;header&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App-header&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;logo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App-logo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;logo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nx"&gt;Edit&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/code&amp;gt; and save to reload&lt;/span&gt;&lt;span class="err"&gt;.
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;
          &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App-link&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://reactjs.org&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;_blank&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;noopener noreferrer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nx"&gt;Learn&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* new line start*/&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;To&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;profile&lt;/span&gt; &lt;span class="nx"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&amp;gt;&amp;lt;button onClick={getData}&amp;gt;Click me&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;profileData&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Profile&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;profileData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;profile_name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;About&lt;/span&gt; &lt;span class="na"&gt;me&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;profileData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;about_me&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
         &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* end of new line */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/header&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's go through the new lines of code added to the app.js file.&lt;/p&gt;

&lt;p&gt;At the top of the file, the &lt;code&gt;useState&lt;/code&gt; hook and axios module are both imported.&lt;/p&gt;

&lt;p&gt;Then inside the function named &lt;code&gt;App&lt;/code&gt; the useState hook is used to control the state of the &lt;code&gt;profileData&lt;/code&gt; variable.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;getData&lt;/code&gt; function handles the API calls. It contains the &lt;code&gt;axios&lt;/code&gt; module which is used to send a &lt;code&gt;GET&lt;/code&gt; request to the API endpoint(\profile) on the backend which responds with the &lt;code&gt;jsonified&lt;/code&gt; format of the dictionary declared in the view function. &lt;/p&gt;

&lt;p&gt;Next, the &lt;code&gt;setProfileData&lt;/code&gt; function updates the state of &lt;code&gt;profileData&lt;/code&gt; by assigning the data in the json response to &lt;code&gt;profile_name&lt;/code&gt; and &lt;code&gt;about_me&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;getData&lt;/code&gt; function is only called when the &lt;code&gt;click me&lt;/code&gt; button is pressed.&lt;/p&gt;

&lt;p&gt;Finally &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; is used as a conditional operator, to avoid getting an error. &lt;code&gt;profileData&lt;/code&gt; is going to be assigned an initial &lt;code&gt;null&lt;/code&gt; state when the application first loads so if you try to access &lt;code&gt;profileData.profile_name&lt;/code&gt; or &lt;code&gt;profileData.about_me&lt;/code&gt; you get an error message.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Cannot&lt;/span&gt; &lt;span class="nx"&gt;read&lt;/span&gt; &lt;span class="nx"&gt;properties&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reading&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;profile_name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hence the need for the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; conditional operator, so that the application only knows of the existence of the &lt;code&gt;profileData.profile_name&lt;/code&gt; and &lt;code&gt;profileData.about_me&lt;/code&gt; codes when the value of &lt;code&gt;profileData&lt;/code&gt; has changed from &lt;code&gt;null&lt;/code&gt; to containing the &lt;code&gt;response data&lt;/code&gt; from the API call.&lt;/p&gt;

&lt;p&gt;You don't need to make changes to any other file in the base directory. The work on the frontend part of the application is now complete. Now you can go ahead and test it:&lt;/p&gt;

&lt;p&gt;Step1: start your backend server using &lt;code&gt;npm run start-backend&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;note&lt;/strong&gt; this command can be run while you are in any directory; be it the base directory(flask_react) or the flask directory (backend)&lt;/p&gt;

&lt;p&gt;Step2: start your react server using &lt;code&gt;npm start&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yplu121H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7doeymujo1m8zxgaftwa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yplu121H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7doeymujo1m8zxgaftwa.png" alt="flask-react-project" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now click on the &lt;code&gt;click me&lt;/code&gt; button to make the API call and get the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;about_me&lt;/code&gt; data from the backend. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IJ-wICfj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h08hsk3ael2synu0viwc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IJ-wICfj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h08hsk3ael2synu0viwc.png" alt="api call made to get name and about me data" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Voila!! you have successfully connected your flask backend to your react frontend. Now I am sure you can build small API endpoints in your flask backend and call the endpoints from your react frontend.&lt;/p&gt;

&lt;p&gt;If you have any questions, feel free to drop them as a comment or send me a message on &lt;a href="https://www.linkedin.com/in/faruq-abdulsalam-b2847b160"&gt;Linkedin&lt;/a&gt; or &lt;a href="https://twitter.com/Ace_II"&gt;Twitter&lt;/a&gt; and I'll ensure I respond as quickly as I can.&lt;/p&gt;

&lt;p&gt;Incase you are a &lt;code&gt;Django&lt;/code&gt; lover, you would definitely love to connect it to &lt;code&gt;React&lt;/code&gt; as well. You can check out my article on &lt;a href="https://dev.to/nagatodev/how-to-connect-django-to-reactjs-1a71"&gt;How to connect Django to ReactJs&lt;/a&gt; to learn how to go about that. Ciao 👋&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uLTQOY1S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ais6tpi9rcyc91w64d86.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uLTQOY1S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ais6tpi9rcyc91w64d86.gif" alt="Cartman" width="455" height="490"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>python</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
