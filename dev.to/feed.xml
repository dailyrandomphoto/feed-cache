<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Django Basics: Creating Models</title>
      <author>Meet Gor</author>
      <pubDate>Tue, 04 Jan 2022 17:11:25 +0000</pubDate>
      <link>https://dev.to/mr_destructive/django-basics-creating-models-2bg5</link>
      <guid>https://dev.to/mr_destructive/django-basics-creating-models-2bg5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;We have seen the basics of Django templating in the previous parts of the series. Now, we can move on to the more backend stuff in Django which deals with the Databases, queries, admin section, and so on. In this particular part, we'll cover the fundamental part of any application in Django i.e the &lt;code&gt;Model&lt;/code&gt;. We'll understand what the model is, how to structure one, how to create relationships and add constraints on the fields, etc. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-models"&gt;
  &lt;/a&gt;
  What are Models?
&lt;/h2&gt;

&lt;p&gt;A model is a Django-way(Pythonic) to structure a database for a given application. It is technically a class that can act as a table in a database generally and inside of the class, the properties of it act as the attributes of that database. It's that simple. Just a blueprint to create a table in a database, don't worry about what and where is our database. We will explore the database and its configuration in the next part. &lt;/p&gt;

&lt;p&gt;By creating a model, you don't have to write all the basic SQL queries like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;CREATE TABLE NAME(
attrb1_name type,
attrb2_name type,
.
.
.
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If your application is quite big or is complex in terms of the relations among the entities, writing SQL queries manually is a daunting task and also quite repetitive at times. So Django handles all the SQL crap out of the way for the programmer. So Models are just a Pythonic way to create a table for the project/application's database.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-create-a-model"&gt;
  &lt;/a&gt;
  How to create a Model?
&lt;/h2&gt;

&lt;p&gt;Creating a model for an application is as easy as creating a class in python. But hey! It's more than that as there are other questions to address while designing the class. You need to design the database before defining the fields in the model.&lt;/p&gt;

&lt;p&gt;OK, well it's not straightforward as it seems to but still for creating simple and dummy projects to start with. You can use certain tools like &lt;a href="https://www.lucidchart.com/pages/database-diagram/database-design-tool"&gt;lucidchart&lt;/a&gt;, &lt;a href="https://dbdiagram.io/home"&gt;dbdiagrams.io&lt;/a&gt;, and other tools you are comfortable with. It's important to visualize the database schema or the structure of the application before tinkering with the actual database inside the project. Let's not go too crazy and design a simple model to understand the process.&lt;/p&gt;

&lt;p&gt;Here's a basic model for a Blog:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#from django.db import models
from django.contrib.auth.models import User

class Article(models.Model):
    title = models.CharField(max_length=255)
    post = models.TextField()
    author = models.ForeignKey(User, on_delete=models.CASCADE, related_name='Article')
    created = models.DateTimeField(auto_now_add=True)
    updated = models.DateTimeField(auto_now=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ignore the &lt;code&gt;from django.db import models&lt;/code&gt; as it is already in the file created by Django. If not, please uncomment the line and that should be good to go.&lt;br&gt;
This is a basic model you might wanna play with but don't dump it anywhere. &lt;/p&gt;

&lt;p&gt;We define or create our models in the application inside the project. Inside the application there is already a file called &lt;code&gt;models.py&lt;/code&gt; just &lt;strong&gt;append&lt;/strong&gt; the above code into it. The application can be any application which makes the most sense to you or better create a app if not already created and name it as &lt;code&gt;article&lt;/code&gt; or &lt;code&gt;post&lt;/code&gt; or anything you like.&lt;/p&gt;

&lt;p&gt;If you are familiar with Python OOP(object-oriented programming), we have basically inherited the &lt;code&gt;models.Model&lt;/code&gt; class from the &lt;code&gt;django.db&lt;/code&gt; module into our model.&lt;/p&gt;

&lt;p&gt;If you want more such examples, let's see more such models :&lt;/p&gt;

&lt;p&gt;An E-Mail application core model. Attributes like &lt;code&gt;sender&lt;/code&gt;, &lt;code&gt;subject&lt;/code&gt; of the mail, &lt;code&gt;body&lt;/code&gt; of the mail, &lt;code&gt;recipients_list&lt;/code&gt; i.e. the &lt;code&gt;To:&lt;/code&gt; section in a mail system and the &lt;code&gt;attachment_file&lt;/code&gt; for a file attachment to a mail if any.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#from django.db import models
from user import EmailUser

class EMail(models.Model):
    sender = models.EmailField(max_length = 255) 
    subject = models.CharField(max_length = 78)
    body = models.CharField(max_length = 40000)
    recipients_list = models.ManyToManyField(EmailUser, related_name = 'mail_list')
    attachment_file = models.FileField(blank=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A sample model for a note-taking app, consisting of a Note and a Book. A book might be a collection of multiple notes i.e. a single book can have multiple notes so we are using a &lt;code&gt;ManyToManyField&lt;/code&gt;, what is that? We'll see that shortly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.db import models
from user.models import User

class Notes(models.Model):
    author = models.ForeignKey(User, on_delete=models.CASCADE)
    title = models.CharField(max_length = 1024)
    content = models.Textfield()
    created = models.DateTimeField(auto_now_add = True)
    modified = models.DateTimeField(auto_now = True)
    book = models.ManyToManyField(Book, related_name = 'book')

class Book():
    name = models.CharField(max_length = 1024)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are just dummies and are not recommended to use anywhere especially in a serious project. &lt;br&gt;
So, we have seen a model, but what are these fields and the constraints like &lt;code&gt;on_delete&lt;/code&gt;, &lt;code&gt;max_length&lt;/code&gt;, and others in the upcoming section on fields.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#fields-in-django"&gt;
  &lt;/a&gt;
  Fields in Django
&lt;/h2&gt;

&lt;p&gt;Fields are technically the attributes of the class which here is the model, but they are further treated as a attribute in a table of a database. So the model becomes a list of attributes which will be then parsed into an actual database. &lt;/p&gt;

&lt;p&gt;By creating attributes inside a class we are defining the structure for a table. We have several types of fields defined already by django for the ease of validating and making a constrained setup for the database schema.&lt;/p&gt;

&lt;p&gt;Let's look at some of the types of fields in Django Models.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#types-of-fields"&gt;
  &lt;/a&gt;
  Types of Fields
&lt;/h3&gt;

&lt;p&gt;Django has a lot of fields defined in the models class. If you want to go through all the fields, you read through the django docs &lt;a href="https://docs.djangoproject.com/en/4.0/ref/models/fields/#model-field-types"&gt;field references&lt;/a&gt;. We can access the fields from the &lt;code&gt;models&lt;/code&gt; module like &lt;code&gt;name = models.CharField(max_length=10)&lt;/code&gt;, this is a example of defining a attributes &lt;code&gt;name&lt;/code&gt; which is a CharField. We can set the max_length which acts a constraint to the attribute as we do not want the name field to be greater than 10 and hence parsing the parameter &lt;code&gt;max_length&lt;/code&gt; to 10. &lt;/p&gt;

&lt;p&gt;We have other field types like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;IntegerField&lt;/code&gt; -&amp;gt; for an integer value.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;TextField&lt;/code&gt; -&amp;gt; for long input of text (like text area in html).&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;EmailField&lt;/code&gt; -&amp;gt; for an single valid email field.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;DateField&lt;/code&gt; -&amp;gt; for inputting in a date format. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;URLField&lt;/code&gt; -&amp;gt; for input a URL field.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;BooleanField&lt;/code&gt; -&amp;gt; for a boolean value input.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And there are other fields as well which can be used as per requirements.&lt;/p&gt;

&lt;p&gt;We also have some other fields which are not directly fields so to speak but are kind of relationship defining fields like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;ForeignKey&lt;/code&gt; -&amp;gt; Define a many-to-one relationship to another model/class. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ManyToManyField&lt;/code&gt; -&amp;gt; define a many-to-many relationship to another model/class.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;OneToOneField&lt;/code&gt; -&amp;gt; define a one to one relationship between different tables/model/class.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, that's about the field types for just a feel of how to structure or design a database table using a model with some types of attributes. We also need to talk about constraints which needs to added to the fields inside the models. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#field-optionsarguments"&gt;
  &lt;/a&gt;
  Field Options/Arguments
&lt;/h3&gt;

&lt;p&gt;We can add constraints and pass arguments to the fields in the models. We can add arguments like &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;blank&lt;/code&gt;, &lt;code&gt;defualt&lt;/code&gt;, &lt;code&gt;choices&lt;/code&gt;, etc. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;null=True/False&lt;/code&gt; -&amp;gt; Set a check for the entry in the table as not null in the database.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;blank=True/False&lt;/code&gt; -&amp;gt; Set a check for the input validation to empty or not.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;unique=True/False&lt;/code&gt; -&amp;gt; Set a constraint to make the entry unique throughout the table.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;defualt=anyvalue&lt;/code&gt; -&amp;gt; Set a default value for the field.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;choices=list&lt;/code&gt; -&amp;gt; Set a list of defined choices to select in the field (a list of two valued tuple).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We also have another constraint specific to the fields like &lt;code&gt;max_length&lt;/code&gt; for &lt;code&gt;CharField&lt;/code&gt;, &lt;code&gt;on_delete&lt;/code&gt; for ForeignKey which can be used as a controller for the model when the related model is deleted, &lt;code&gt;verbose_name&lt;/code&gt; to set a different name for referencing the entry in the table/model from the admin section compared to the default name of the model, &lt;code&gt;verbose_name_plural&lt;/code&gt; similar to the &lt;code&gt;verbose_name&lt;/code&gt; but for referencing the entire table/model. Also &lt;code&gt;auto_now_add&lt;/code&gt; and &lt;code&gt;auto_now&lt;/code&gt; for &lt;code&gt;DateTimeField&lt;/code&gt; so as to set the current date-time by default.&lt;/p&gt;

&lt;p&gt;More options and arguments that can be passed to the fields in models are given in the django docs &lt;a href="https://docs.djangoproject.com/en/4.0/topics/db/models/#field-options"&gt;field options&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These are some of the options or arguments that we can or need to pass to the fields to set up a constrained schema for our database. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#meta-class"&gt;
  &lt;/a&gt;
  Meta class
&lt;/h3&gt;

&lt;p&gt;Meta class is a nested class inside the model class which is most of the times used for ordering the entries(objects) in the table, managing permissions for accessing the model, add constraints to the models related to the attributes/fields inside it, etc.&lt;/p&gt;

&lt;p&gt;You can read about the functionalities of the Meta class in the &lt;a href="https://docs.djangoproject.com/en/4.0/ref/models/options/"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#model-methods"&gt;
  &lt;/a&gt;
  Model methods
&lt;/h2&gt;

&lt;p&gt;As a class can have functions, so does a model as it is a Python class after all. We can create kind of a helper methods/functions inside the model. The model class provides a helpful &lt;code&gt;__str__()&lt;/code&gt; function which is used to rename an object from the database. We also have other predefined helper functions like &lt;code&gt;get_absolute_url&lt;/code&gt; that generates the URL and returns it for further redirection or rendering.&lt;/p&gt;

&lt;p&gt;Also, you can define the custom functions that can be used as to help the attributes inside the model class.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#django-orm"&gt;
  &lt;/a&gt;
  Django ORM
&lt;/h2&gt;

&lt;p&gt;Django has an Object Relational Mapper is the core concept in Django or the component in Django that allows us to interact with the database without the programmer writing SQL/DB queries. It is like a Pythonic way to write and execute sql queries, it basically abstracts away the layer to manually write SQL queries. &lt;/p&gt;

&lt;p&gt;We'll explore the details of how the ORM works under the hood but it's really interesting and fascinating for a Beginner to make web applications without learning SQL(not recommended though personally). For now, its just magical to see Django handling the DB operations for you. You can get the references for learning about the Queryset in ORM from the &lt;a href="https://docs.djangoproject.com/en/4.0/ref/models/querysets/"&gt;docs&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#example-model"&gt;
  &lt;/a&gt;
  Example Model
&lt;/h2&gt;

&lt;p&gt;Let us set up a model from what we have learned so far. &lt;/p&gt;

&lt;p&gt;We'll create a model for a Blog Post again but with more robust fields and structure.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#from django.db import models
from django.contrib.auth.models import User

class Article(models.Model):

    options = (
    ('draft', 'Draft'),
    ('published', 'Published'),
    )

    title = models.CharField(max_length=255, unique=True)
    slug = models.SlugField(max_length=255, unique_for_date='publish')
    post = models.TextField()
    author = models.ForeignKey(User, on_delete=models.CASCADE, related_name='Posts')
    created = models.DateTimeField(auto_now_add=True)
    updated = models.DateTimeField(auto_now=True)
    status = models.CharField(max_length=16, choices=option, default='draft')

    def __str__()
        return self.title

    class Meta:
        ordering = ('-publish',)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can see in the above model that we have defined the Meta class which is optional and is generally written to modify how to entries inside the table appear or order with other functionalities as well. We have also added the choices option in the status field which has two choices &lt;code&gt;Draft&lt;/code&gt; and &lt;code&gt;Publish&lt;/code&gt; one which is seen by the django interface and the other to the end-users. We have also added certain fields like slug that will create the URL for the blog post, also certain options like &lt;code&gt;unique&lt;/code&gt; has been set to restrict duplicate entries being posted to the database. The &lt;code&gt;related_name&lt;/code&gt; in the &lt;code&gt;ForeignKey&lt;/code&gt; refers to the name given to the relation from the Article model to the User model in this case. &lt;/p&gt;

&lt;p&gt;So, we can see that Django allows us to structure the schema of a database. Though nothing is seen as an end result, when we configure and migrate the model to our database we will see the results of the hard work spent in creating and designing the model. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#database-specific-fields"&gt;
  &lt;/a&gt;
  Database Specific fields
&lt;/h2&gt;

&lt;p&gt;By this time, you will have gotten a feel of what a database might be. Most of the projects are designed around SQL databases but No-SQL databases and others are also used in cases which suite them the most. We have tools to manage this database in SQL we call it the Database Management System (DBMS). It's just a tool to manage data, but there is not just a single Database management tool out there, there are gazillions and bazillions of them. Most  popular include &lt;code&gt;MySQL&lt;/code&gt;, &lt;code&gt;PostgreSQL&lt;/code&gt;, &lt;code&gt;SQLite&lt;/code&gt;, &lt;code&gt;Oracle&lt;/code&gt;, &lt;code&gt;Microsoft Access&lt;/code&gt;, &lt;code&gt;Maria DB&lt;/code&gt;, and tons of others. &lt;/p&gt;

&lt;p&gt;Well, these different DBMS tools are almost similar with a few hiccups here and there. So, different Database tools might have different fields they provide. For Example, in Database &lt;code&gt;PostgreSQL&lt;/code&gt; provides the ListField which &lt;code&gt;SQLite&lt;/code&gt; doesn't that can be the decision to be taken before creating any project. There might be some fields that some DBMS provide and other doesn't.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We understood the basics of creating a model. We didn't touch on the database yet but the next part is all about configuration and migration so we'll get hands-on with the databases. We covered how to structure our database, how to write fields in the model, add constraints and logic to them and explore the terminologies in Django like ORM, Database Types, etc. &lt;/p&gt;

&lt;p&gt;Thank you for reading the article, if you have any feedback kindly let me know, and until then Happy Coding :)&lt;/p&gt;

</description>
      <category>django</category>
      <category>python</category>
      <category>webdev</category>
      <category>backend</category>
    </item>
    <item>
      <title>6+ Next JS Template Tailwind CSS for 2022</title>
      <author>Remi W.</author>
      <pubDate>Tue, 04 Jan 2022 17:10:40 +0000</pubDate>
      <link>https://dev.to/ixartz/6-next-js-template-tailwind-css-for-2022-2069</link>
      <guid>https://dev.to/ixartz/6-next-js-template-tailwind-css-for-2022-2069</guid>
      <description>&lt;p&gt;Starting a new project is hard and one the most important things is to build a landing page. A really important steps before launching any projects.&lt;/p&gt;

&lt;p&gt;Currently, one of most trendy framework in JavaScript ecosystem is Next JS. I use Next JS in JAMStack mode and Tailwind CSS to save costs and time.&lt;/p&gt;

&lt;p&gt;So, I have built several landing pages for my products and at the end I was reinvent the wheel all the time by building several landing pages from scratch using Next JS 12 and Tailwind CSS 3.&lt;/p&gt;

&lt;p&gt;I thought it was great to build beautiful templates with the best developer experience. So, I open sourced my landing page template:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ixartz"&gt;
        ixartz
      &lt;/a&gt; / &lt;a href="https://github.com/ixartz/Next-JS-Landing-Page-Starter-Template"&gt;
        Next-JS-Landing-Page-Starter-Template
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🚀 Free NextJS Landing Page Template written in Tailwind CSS 3 and TypeScript ⚡️ Made with developer experience first: Next.js 12 + TypeScript + ESLint + Prettier + Husky + Lint-Staged + VSCode + Netlify + PostCSS + Tailwind CSS
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Landing Page Template built with Next JS 12+, Tailwind CSS 3 and TypeScript &lt;a href="https://twitter.com/ixartz" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/22898de970db41d476e65546387c7b5147565904f1a4197980bb0e3eb30eb8ab/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f747769747465722e636f6d2f636c6f7564706f7373652e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f7725323025343049786172747a" alt="Twitter"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;
  &lt;a href="https://creativedesignsguru.com/demo/nextjs-landing-page/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3WIPM87I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ixartz/Next-JS-Landing-Page-Starter-Templatepublic/assets/images/nextjs-landing-page-banner.png%3Fraw%3Dtrue" alt="Next js starter banner"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;🚀 Landing Page theme written in Next.js, Tailwind CSS and TypeScript ⚡️ Made with developer experience first: Next.js, TypeScript, ESLint, Prettier, Husky, Lint-Staged, VSCode, Netlify, PostCSS, Tailwind CSS.&lt;/p&gt;

&lt;p&gt;Clone this project and use it to create your own &lt;a href="https://nextjs.org" rel="nofollow"&gt;Next.js&lt;/a&gt; project. You can check a &lt;a href="https://creativedesignsguru.com/demo/nextjs-landing-page/" rel="nofollow"&gt;Next js templates demo&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
DEMO&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://creativedesignsguru.com/demo/nextjs-landing-page/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3fSA1OVd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ixartz/Next-JS-Landing-Page-Starter-Templatepublic/assets/images/nextjs-landing-page-screenshot.png%3Fraw%3Dtrue" alt="Nextjs Landing Page Template Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check out our &lt;a href="https://creativedesignsguru.com/demo/nextjs-landing-page/" rel="nofollow"&gt;live demo&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
Features&lt;/h3&gt;

&lt;p&gt;Developer experience first:&lt;/p&gt;


&lt;ul&gt;
&lt;li&gt;
🔥 &lt;a href="https://nextjs.org" rel="nofollow"&gt;Next.js&lt;/a&gt; for Static Site Generator&lt;/li&gt;
&lt;li&gt;
🎨 Integrate with &lt;a href="https://tailwindcss.com" rel="nofollow"&gt;Tailwind CSS&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
💅 PostCSS for processing Tailwind CSS and integrated to &lt;code&gt;styled-jsx&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
🎉 Type checking &lt;a href="https://www.typescriptlang.org" rel="nofollow"&gt;TypeScript&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
✅ Strict Mode for TypeScript and React 17&lt;/li&gt;
&lt;li&gt;
✏️ Linter with &lt;a href="https://eslint.org" rel="nofollow"&gt;ESLint&lt;/a&gt; (default NextJS, NextJS Core Web Vitals and Airbnb configuration)&lt;/li&gt;
&lt;li&gt;
🛠 Code Formatter with &lt;a href="https://prettier.io" rel="nofollow"&gt;Prettier&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
🦊 Husky for Git Hooks&lt;/li&gt;
&lt;li&gt;
🚫 Lint-staged for running linters on Git staged files&lt;/li&gt;
&lt;li&gt;
🗂 VSCode configuration: Debug, Settings, Tasks and extension for PostCSS, ESLint, Prettier…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ixartz/Next-JS-Landing-Page-Starter-Template"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;You can checkout the YouTube video for a demo:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/gWN0BF59MXs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Or, you can visualize the &lt;a href="https://creativedesignsguru.com/demo/nextjs-landing-page/"&gt;Next JS Tailwind Landing Page&lt;/a&gt; live demo.&lt;/p&gt;

&lt;p&gt;If you want to see the code, you browse &lt;a href="https://github.com/ixartz/Next-JS-Landing-Page-Starter-Template/"&gt;Next JS Lading Page Template GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔥 Next.js 12&lt;br&gt;
🎨 styled with Tailwind CSS 3&lt;br&gt;
💅 PostCSS for processing Tailwind CSS and integrated to styled-jsx&lt;br&gt;
🎉 Type checking TypeScript&lt;br&gt;
✅ Strict Mode for TypeScript and React 17&lt;br&gt;
✏️ Linter with ESLint (default NextJS, NextJS Core Web Vitals and Airbnb configuration)&lt;br&gt;
🛠 Code Formatter with Prettier&lt;br&gt;
🦊 Husky for Git Hooks&lt;br&gt;
🚫 Lint-staged for running linters on Git staged files&lt;br&gt;
🗂 VSCode configuration: Debug, Settings, Tasks and extension for PostCSS, ESLint, Prettier, TypeScript&lt;br&gt;
🤖 SEO metadata, JSON-LD and Open Graph tags with Next SEO&lt;br&gt;
⚙️ Bundler Analyzer&lt;br&gt;
🖱️ One click deployment with Vercel or Netlify (or manual deployment to any hosting services)&lt;br&gt;
🌈 Include a FREE theme&lt;br&gt;
💯 Maximize lighthouse score&lt;/p&gt;

&lt;p&gt;Built-in feature from Next.js:&lt;/p&gt;

&lt;p&gt;☕ Minify HTML &amp;amp; CSS&lt;br&gt;
💨 Live reload&lt;br&gt;
✅ Cache busting&lt;/p&gt;

&lt;p&gt;You can also checkout my other Next JS Tailwind Template:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-js-tailwind-theme"&gt;
  &lt;/a&gt;
  Next JS Tailwind Theme
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://creativedesignsguru.com/landing-indigo-modern-react-theme/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wXvlOQVv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/landing-indigo-modern-nextjs-theme-badge.png" alt="Next JS Tailwind Theme" width="880" height="1100"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://creativedesignsguru.com/landing-indigo-modern-react-theme/"&gt;Next JS Tailwind Theme&lt;/a&gt; - More info&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-js-tailwind-dashboard-template"&gt;
  &lt;/a&gt;
  Next JS Tailwind Dashboard Template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://creativedesignsguru.com/dashboard-indigo-modern-nextjs-theme/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2Xsj8W_b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/dashboard-indigo-modern-nextjs-theme-badge.png" alt="Next JS Tailwind Dashboard Template" width="880" height="1100"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://creativedesignsguru.com/dashboard-indigo-modern-nextjs-theme/"&gt;Next JS Tailwind Dashboard Template&lt;/a&gt; - More info&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-js-tailwind-landing-page-theme"&gt;
  &lt;/a&gt;
  Next JS Tailwind Landing Page Theme
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://creativedesignsguru.com/landing-green-modern-nextjs-theme/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ariLuuEP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/landing-green-modern-nextjs-theme-badge.png" alt="Next JS Tailwind Landing Page Theme" width="880" height="1100"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://creativedesignsguru.com/landing-green-modern-nextjs-theme/"&gt;Next JS Tailwind Landing Page Theme&lt;/a&gt; - More info&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-js-tailwind-landing-page"&gt;
  &lt;/a&gt;
  Next JS Tailwind Landing Page
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://creativedesignsguru.com/landing-blue-modern-react-theme/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kXOSd_YR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/landing-blue-modern-nextjs-theme-badge.png" alt="Next JS Tailwind Landing Page" width="880" height="1100"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://creativedesignsguru.com/landing-blue-modern-react-theme/"&gt;Next JS Tailwind Landing Page&lt;/a&gt; - More info&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-js-tailwind-landing-page-template"&gt;
  &lt;/a&gt;
  Next JS Tailwind Landing Page Template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://creativedesignsguru.com/landing-purple-modern-react-theme/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--944cQmVv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/landing-purple-modern-nextjs-theme-badge.png" alt="Next JS Tailwind Landing Page Template" width="880" height="1100"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://creativedesignsguru.com/landing-purple-modern-react-theme/"&gt;Next JS Tailwind Landing Page Template&lt;/a&gt; - More info&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#disclamer"&gt;
  &lt;/a&gt;
  Disclamer
&lt;/h2&gt;

&lt;p&gt;I'm the maker of all these 7 themes and I have learned so much by making these themes. I'll definitely share my experience with tutorials and articles.&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>react</category>
      <category>nextjs</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Variáveis - Ruby</title>
      <author>Diego Novais</author>
      <pubDate>Tue, 04 Jan 2022 16:55:14 +0000</pubDate>
      <link>https://dev.to/dnovais/variaveis-ruby-f8p</link>
      <guid>https://dev.to/dnovais/variaveis-ruby-f8p</guid>
      <description>&lt;h2&gt;
  &lt;a href="#vari%C3%A1veis-locais"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Variáveis Locais&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;As variáveis locais são as mais comuns quando estamos utilizando o Ruby. Para usá-la basta que seja atribuído um valor à variável desejada. Vejam os exemplos:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Diego Novais'&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"Diego Novais"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;as variáveis possuem seu escopo, por ex. uma variável local exercerá seu papel apenas “no local” onde foi definida.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;my_name_is&lt;/span&gt;
  &lt;span class="n"&gt;first_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Diego'&lt;/span&gt;
  &lt;span class="n"&gt;last_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Novais'&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="ss"&gt;:my_name_is&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Se tentarmos imprimir uma das variáveis fora do escopo do método &lt;code&gt;my_name_is&lt;/code&gt; teremos um erro:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;010&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;first_name&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="no"&gt;NameError&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;undefined&lt;/span&gt; &lt;span class="n"&gt;local&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="nb"&gt;method&lt;/span&gt; &lt;span class="sb"&gt;`first_name' for main:Object)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#vari%C3%A1veis-globais%C2%A0"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Variáveis Globais $&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;O conceito de variável global é, basicamente, uma referência acessível em qualquer parte da aplicação. Existe uma convenção de nomes onde diz que estas variáveis devem ser iniciadas com $ (cifrão).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="vg"&gt;$version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"1.2.3"&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"1.2.3"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;defined?&lt;/span&gt; &lt;span class="vg"&gt;$version&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"global-variable"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#vari%C3%A1veis-de-inst%C3%A2ncia-"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Variáveis de Instância @&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;As variáveis de instância são aquelas que &lt;strong&gt;ficam disponíveis para cada uma das instâncias de uma classe&lt;/strong&gt;, ou seja, isoladamente em cada objeto. Ou seja, variáveis de instância implementam os atributos de uma classe, ou suas variáveis membro, e, coletivamente, representam o estado de um objeto. São definidas na classe de forma independente dos outros objetos da mesma classe.&lt;/p&gt;

&lt;p&gt;Veja o exemplo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;
    &lt;span class="vi"&gt;@name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"teste"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;speak&lt;/span&gt;
    &lt;span class="s2"&gt;"I'm speaking with you! &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="ss"&gt;:speak&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
&lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;instance_variables&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:@name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#vari%C3%A1veis-de-classe%C2%A0"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Variáveis de Classe @@&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Variáveis de classe são responsáveis por guardar informações em um classe. Armazenam seu próprio estado e são compartilhadas entre todos os objetos e &lt;strong&gt;“atravessam” as heranças entre classes&lt;/strong&gt;. Variáveis de classe devem ser iniciadas com @@ (2 arrobas).&lt;/p&gt;

&lt;p&gt;Veja o exemplo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Animal&lt;/span&gt;
  &lt;span class="vc"&gt;@@kind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'flying'&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;kind&lt;/span&gt;
    &lt;span class="vc"&gt;@@kind&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="no"&gt;Animal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;kind&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"flying"&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Duck&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;Animal&lt;/span&gt;
  &lt;span class="vc"&gt;@@kind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'walk'&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="no"&gt;Duck&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;kind&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"walk"&lt;/span&gt;

&lt;span class="no"&gt;Animal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;class_variables&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:@@kind&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>braziliandevs</category>
      <category>ruby</category>
      <category>rails</category>
    </item>
    <item>
      <title>Beautify Your GitHub Profile README</title>
      <author>Xyphuz</author>
      <pubDate>Tue, 04 Jan 2022 16:37:44 +0000</pubDate>
      <link>https://dev.to/wst24365888/beautify-your-github-profile-readme-24fg</link>
      <guid>https://dev.to/wst24365888/beautify-your-github-profile-readme-24fg</guid>
      <description>&lt;p&gt;Have you ever seen a beautiful &lt;a href="https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-profile/customizing-your-profile/managing-your-profile-readme"&gt;profile README&lt;/a&gt; while browsing the GitHub profiles of someone?&lt;/p&gt;

&lt;p&gt;You may be wondering how to make it look like that. Here are some tips:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-html-elements"&gt;
  &lt;/a&gt;
  Use HTML Elements
&lt;/h2&gt;

&lt;p&gt;Because README uses Markdown syntax, there are some features in the layout that HTML Elements can do that Markdown cannot, such as centering blocks and resizing images.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-tools"&gt;
  &lt;/a&gt;
  Use Tools
&lt;/h2&gt;

&lt;p&gt;There are many tools that can help you make your README more beautiful. The idea is to use the GitHub API to dynamically generate SVG charts that show your GitHub data, such as contribution amount, cost used languages or total star earned, total PRs... etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#for-badges"&gt;
  &lt;/a&gt;
  For Badges
&lt;/h3&gt;

&lt;p&gt;For badges, try &lt;a href="https://shields.io/"&gt;&lt;strong&gt;shields.io&lt;/strong&gt;&lt;/a&gt;, it helps you create many different kinds of badges, and there are many parameters to create the badge you want to show.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/badges/shields"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Buk2TUq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github-readme-stats.vercel.app/api/pin/%3Fusername%3Dbadges%26repo%3Dshields" alt="repo-link" width="400" height="140"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is an example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4_hn_Qpd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Example-black%3Flogo%3Ddev.to%26style%3Dfor-the-badge" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4_hn_Qpd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Example-black%3Flogo%3Ddev.to%26style%3Dfor-the-badge" alt="badge-example" width="105" height="28"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#for-stats"&gt;
  &lt;/a&gt;
  For Stats
&lt;/h3&gt;

&lt;p&gt;For stats, try &lt;strong&gt;github-readme-stats&lt;/strong&gt;, it helps you create SVG for all kinds of your GitHub stats.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QWapfgqQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github-readme-stats.vercel.app/api/pin/%3Fusername%3Danuraghazra%26repo%3Dgithub-readme-stats" alt="repo-link" width="400" height="120"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is an example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T8XvN9Wh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github-readme-stats.vercel.app/api%3Fusername%3Dwst24365888%26border_radius%3D0%26icon_color%3D0aa%26bg_color%3D000%26text_color%3Dccc%26title_color%3DFCE928%26show_icons%3Dtrue%26count_private%3Dtrue%26hide_border%3Dtrue%26include_all_commits%3Dtrue%26hide_title%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T8XvN9Wh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github-readme-stats.vercel.app/api%3Fusername%3Dwst24365888%26border_radius%3D0%26icon_color%3D0aa%26bg_color%3D000%26text_color%3Dccc%26title_color%3DFCE928%26show_icons%3Dtrue%26count_private%3Dtrue%26hide_border%3Dtrue%26include_all_commits%3Dtrue%26hide_title%3Dtrue" alt="stats-example" width="495" height="165"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#for-commitcontribution-graph"&gt;
  &lt;/a&gt;
  For Commit/Contribution Graph
&lt;/h3&gt;

&lt;p&gt;For commit/contribution graph, try &lt;strong&gt;github-contribution-graph&lt;/strong&gt;! &lt;/p&gt;

&lt;p&gt;It's an awesome tool for dynamically generating contribution graphs that show your GitHub contributions.&lt;/p&gt;

&lt;p&gt;It's beautiful, it has SLIM animation, and it supports custom background image (even &lt;code&gt;.gif&lt;/code&gt; !)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ez4o/github-contribution-graph"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4WNZOX34--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github-readme-stats.vercel.app/api/pin/%3Fusername%3Dez4o%26repo%3Dgithub-contribution-graph" alt="repo-link" width="400" height="140"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is the demo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xkG8hHI5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ucxf4y60oi8go5cwf6p.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xkG8hHI5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ucxf4y60oi8go5cwf6p.gif" alt="Image description" width="632" height="680"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Okay, that's all about today's tips!&lt;/p&gt;

&lt;p&gt;If you have any ideas or questions, please feel free to share them with me in the comment section!&lt;/p&gt;

&lt;p&gt;If you like any of the above tools, don't forget to leave a star in their GitHub repo!&lt;/p&gt;

</description>
      <category>github</category>
      <category>profile</category>
      <category>readme</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Build Test Report Dashboard using MERN stack </title>
      <author>Akshay C A</author>
      <pubDate>Tue, 04 Jan 2022 16:35:34 +0000</pubDate>
      <link>https://dev.to/akshayca/build-test-report-dashboard-using-mern-stack-29c</link>
      <guid>https://dev.to/akshayca/build-test-report-dashboard-using-mern-stack-29c</guid>
      <description>&lt;p&gt;A test report dashboard is an organized summary of results. It is created and used to help stakeholders (product managers, analysts, testing teams, and developers) understand product quality and decide whether a product, feature or defect resolution is on track for release.&lt;/p&gt;

&lt;p&gt;The idea is to build a Dashboard that quickly encapsulates test results from browser UI tests, windows UI tests, API tests, performance tests, etc., performed by a particular build.&lt;/p&gt;

&lt;p&gt;I used &lt;strong&gt;MongoDB&lt;/strong&gt; because its flexible schema makes it easy to evolve and store data. &lt;strong&gt;React&lt;/strong&gt; and &lt;strong&gt;Express.js&lt;/strong&gt; for building the web application and API. &lt;/p&gt;

&lt;p&gt;So, the different testing frameworks would make the REST API call with the test results in JSON format to our application as soon as the test execution is completed. &lt;/p&gt;

&lt;p&gt;Our App which will be running on a server would store this data and display it to all the stakeholders in real-time.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#lets-get-started-"&gt;
  &lt;/a&gt;
  Let's get started !!
&lt;/h4&gt;

&lt;p&gt;You can clone my code repository for GitHub for your reference : &lt;a href="https://github.com/akshayca/Dashboard"&gt;Link&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;u&gt;&lt;strong&gt;Step 1&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Prerequisite:&lt;/em&gt;&lt;br&gt;
You need Docker installed on your machine. &lt;/p&gt;

&lt;p&gt;You need &lt;code&gt;mongo&lt;/code&gt; and &lt;code&gt;mongo-express&lt;/code&gt;. So, create a &lt;em&gt;docker-compose.yml&lt;/em&gt; file, add the below content.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;version: '3'
services:
  mongodb:
    image: mongo
    ports:
     - 27017:27017
    environment:
     - MONGO_INITDB_ROOT_USERNAME=admin
     - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
     - mongo-data:/data/db
  mongo-express:
    image: mongo-express
    ports:
     - 8081:8081
    environment:
     - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
     - ME_CONFIG_MONGODB_ADMINPASSWORD=password
     - ME_CONFIG_MONGODB_SERVER=mongodb
volumes:
  mongo-data:
    driver: local
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the Docker compose command -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker-compose -f docker-compose.yml up 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should be able to access it on localhost port- 8081.&lt;br&gt;
Go ahead and create the database and name it &lt;code&gt;DashboardApp&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LOXvvC_---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sc3qxw5kmugewqqf09k4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LOXvvC_---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sc3qxw5kmugewqqf09k4.png" alt="description" width="880" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;u&gt;&lt;strong&gt;Step 2&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Prerequisite:&lt;/em&gt;&lt;br&gt;
You need Node installed on your machine. &lt;/p&gt;

&lt;p&gt;Create the React application by running this command&lt;br&gt;
&lt;code&gt;npx create-react-app &amp;lt;app-name&amp;gt;&lt;/code&gt;&lt;br&gt;
Now navigate into the App and create the &lt;em&gt;backend&lt;/em&gt; folder. &lt;br&gt;
Inside this folder, we will create the backend &lt;br&gt;
&lt;code&gt;npm init -y&lt;/code&gt;. &lt;br&gt;
So, that it connects to the MongoDB then we will come back and write the React later. &lt;/p&gt;

&lt;p&gt;We will install these dependencies for our backend.&lt;br&gt;
&lt;code&gt;npm install express cors mongoose dotenv&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Create the &lt;em&gt;server.js&lt;/em&gt; file to connect to the database and the &lt;em&gt;.env&lt;/em&gt; file to store the environment variables.&lt;/p&gt;

&lt;p&gt;Now you can start the server and the console should look something like this - &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I2Uskr-n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/287ceql4wu4wxczswjrj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I2Uskr-n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/287ceql4wu4wxczswjrj.png" alt="description" width="880" height="215"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;u&gt;&lt;strong&gt;Step 3&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;Now let's create the database schema. Create a new directory called &lt;code&gt;models&lt;/code&gt;. &lt;br&gt;
Add all the different schemas you want to create in the &lt;code&gt;model.js&lt;/code&gt; files.&lt;br&gt;
Once this is done, we need to add the API endpoints routes to perform the &lt;strong&gt;CRUD&lt;/strong&gt; operations.&lt;br&gt;
Inside the backend folder, create another folder called routes and the CRUD operations code in it.&lt;/p&gt;

&lt;p&gt;You can test the server by making an API call. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dWoAuf5C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7u3om38olwkr21zfk0sf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dWoAuf5C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7u3om38olwkr21zfk0sf.png" alt="description" width="649" height="507"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PoCgelgL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2e2f0ehun2wra1hvta8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PoCgelgL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2e2f0ehun2wra1hvta8.png" alt="description" width="880" height="431"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;u&gt;&lt;strong&gt;Step 4&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;Now it's time to build the front end using React.&lt;br&gt;
You also npm install &lt;code&gt;axios&lt;/code&gt;, &lt;code&gt;bootstrap&lt;/code&gt;, &lt;code&gt;react-bootstrap&lt;/code&gt;, &lt;code&gt;react-icons&lt;/code&gt;, &lt;code&gt;react-router-dom:5.0.0&lt;/code&gt; and &lt;code&gt;react-scripts:4.0.3&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You need to edit the default template provided by React in &lt;code&gt;index.html&lt;/code&gt;, &lt;code&gt;index.js&lt;/code&gt;, and in &lt;code&gt;App.js&lt;/code&gt; files&lt;/p&gt;

&lt;p&gt;You use components to tell what we want to see on the screen.&lt;br&gt;
So, create a folder called &lt;em&gt;components&lt;/em&gt; inside the &lt;em&gt;src&lt;/em&gt; folder.&lt;br&gt;
Create the components files or projects as per your project needs.&lt;/p&gt;

&lt;p&gt;Once, this is done you can start the Dashboard by running the &lt;code&gt;npm start&lt;/code&gt; command. &lt;br&gt;
The App should start running at localhost port- 3000. &lt;/p&gt;

&lt;p&gt;Added some more data into the database and the Dashboard UI should look something like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9Lft8oBk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8yekfnv9rjnvtnt866a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Lft8oBk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8yekfnv9rjnvtnt866a.png" alt="description" width="880" height="352"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BSBrMgoJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yeo3tzs5xbn7ehdazis8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BSBrMgoJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yeo3tzs5xbn7ehdazis8.png" alt="description" width="880" height="338"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;u&gt;&lt;strong&gt;Step 5&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;Now, let's Dockerize our Dashboard application. So, it will be easy to start our app or run on only server easily.&lt;/p&gt;

&lt;p&gt;We need to create a Dockerfile for the server and the client. The Dockerfile essentially contains the build instructions to build the image.&lt;/p&gt;

&lt;p&gt;And it using the docker build command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker build -t &amp;lt;image-name&amp;gt; .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To run our entire application together, i.e run all containers parallelly, we need to configure the docker-compose file.&lt;br&gt;
So, I will be editing the existing docker-compose file.&lt;/p&gt;

&lt;p&gt;To start the entire application services we need to run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker-compose up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note: You need to update the .env file in the backend since we are running the services within the docker container.&lt;br&gt;
i.e &lt;code&gt;MONGO_URI=mongodb://mongodb:27017/DashboardApp&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can access the application at localhost port- 3000.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E2ASiuXb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nyu8vhz80f2debiflh7l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E2ASiuXb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nyu8vhz80f2debiflh7l.png" alt="description" width="880" height="313"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well, that's it!&lt;/p&gt;

&lt;p&gt;You can run this Dashboard App on your machine by following these steps&lt;/p&gt;

&lt;p&gt;Clone the repo&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;https://github.com/akshayca/Dashboard.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;Dashboard
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Start the app&lt;/p&gt;

&lt;p&gt;Go to the project directory and run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up &lt;span class="nt"&gt;--build&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The app will start running at &lt;code&gt;localhost:3000&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let me know if you need any help :)&lt;/p&gt;

&lt;p&gt;Here are the links which you might find useful:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/7CqJlxBYj-M"&gt;Learn the MERN Stack&lt;/a&gt;&lt;br&gt;
&lt;a href="https://medium.com/mozilla-club-bbsr/dockerizing-a-mern-stack-web-application-ebf78babf136"&gt;Dockerizing a MERN Stack Web Application&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>mongodb</category>
      <category>dashboard</category>
    </item>
    <item>
      <title>¿What is it really like to look for a job in the 21st century?</title>
      <author>Manu Martinez</author>
      <pubDate>Tue, 04 Jan 2022 16:24:45 +0000</pubDate>
      <link>https://dev.to/whitehatdevv/what-is-it-really-like-to-look-for-a-job-in-the-21st-century-3h74</link>
      <guid>https://dev.to/whitehatdevv/what-is-it-really-like-to-look-for-a-job-in-the-21st-century-3h74</guid>
      <description>&lt;p&gt;Linkedin, Infojobs, Indeed, JobToday... hemos llegado al año 2022 y el mundo sigue sin tener una aplicación decente que nos ayude a encontrar un trabajo (ni que estuviéramos pidiendo tanto, hombre ya!). Existen un sin fin de aplicaciones que lo único que logran es hacernos perder el tiempo llenando formularios interminables y enviando cientos de curriculums, que con algo de suerte, alguna empresa llegará a leer algún día (si es que antes no te lo rechaza alguno de los software automáticos que tan de moda se han puesto ahora). &lt;/p&gt;

&lt;p&gt;Pero vaya, que siempre es la misma historia: te postulas a decenas de ofertas de trabajo, envías tu currículum a todo el mundo, casi nadie te responde, y si lo hacen, con suerte consigues una entrevista en la que tras un largo proceso de entrevistas y pruebas, te acaban diciendo el clásico “ya te llamaremos”. Todavía estoy esperando vuestra llamada! 💩 &lt;/p&gt;

&lt;p&gt;¿Pero por qué es tan complicado conseguir un trabajo en esta época?¿No se supone que vivimos en el momento de la historia con mayor conectividad del mundo? 🤖&lt;/p&gt;

&lt;p&gt;Estamos viviendo la mayor era digital de la historia, y aun así, nunca antes había sido tan difícil conseguir trabajo. Y es que buscar trabajo hoy en día se ha vuelto complicado, para que mentirnos. Antiguamente ibas a cualquier empresa, les dabas el cv en mano y el lunes comenzabas a trabajar con ellos. Hoy todo ese proceso se ha convertido en una grotesca escena de Los Juegos del Hambre, y plataformas como Linkedin, Indeed e Infojobs, lejos de ayudarnos, solo lograron complicarlo todo aún más.&lt;/p&gt;

&lt;p&gt;Fíjate en mi caso, nada más terminar la carrera salí al mundo con ganas de comérmelo entero, pero me dí de morros al ver realmente como funcionan las cosas aquí afuera: ya no alcanzaba con enviar tu CV a una empresa por email, ahora tienes que enviar tu portfolio, un vídeo de presentación, tener todas las redes sociales a la orden del día, ser un influencer y community manager a la vez, haber fundado una empresa exitosa antes de los 18, y al menos tener un Record Guiness... Si lo llego a saber antes me hubiera hecho un canal de YouTube en vez de estudiar Ingeniería 👨‍🎓&lt;/p&gt;

&lt;p&gt;Lo cierto es que estaba muy perdido, y como sabia persona que soy, decidí buscar consejos en mis amigos, y uno de ellos me dijo “Tío métete a LinkedIn, es lo que ahora se lleva, es lo que usan todas las empresas” 🚀&lt;/p&gt;

&lt;p&gt;Dicho y hecho, empecé a descubrir como funcionaba todo aquello de buscar trabajo por internet empezando con Linkedin. Y si tengo que serte sincero, a día de hoy, todavía no sé que coño estoy haciendo ahí metido. ¿Qué es exactamente Linkedin? Porque a mí me recuerda a Facebook, pero con otro nombre. Te dice que puedes encontrar un empleo a través de su plataforma y lo único que terminas haciendo es perder el tiempo haciendo scroll infinito, mirando memes, y leyendo las historias de una red de contactos, que no conoces ni vas a conocer, y con la que has ido conectando solo porque se dedican al mismo trabajo que tú o te han dado like en tu última publicación. 🕵🏼&lt;/p&gt;

&lt;p&gt;Digamos que ya tienes tu perfil actualizado y decides comenzar con la búsqueda de empleo: primero tienes que pasar horas y horas revisando cientos de ofertas en busca de alguna que encaje con tu perfil, para que cuando finalmente des con la oferta perfecta, esa oferta que coincide en todo contigo, y que hasta parece que lleva tu nombre escrito, tenga nada más ni menos que... BOOM! 200 solicitudes en las últimas 2 horas. Holy shit. ¿En serio tengo que “competir” contra más de 200 candidatos por un único puesto de trabajo? &lt;/p&gt;

&lt;p&gt;En mi opinión, alguien deberia quitar ese contador de solicitudes tan desalentador. 😱&lt;/p&gt;

&lt;p&gt;Pero bueno, ¿tu seguro que no eres de los que se desanima por algo así, verdad que no? Y con un par de pelotas, decides aplicar a la oferta, pero de pronto se abre otra pestaña y... SORPRESA! Tienes que registrarte en la página web de la empresa si quieres aplicar a la oferta! 😈Así que ahora toca rellenar todos tus datos de nuevo (y regalar toda tu información personal a una empresa que no sabrás que hará con ellos 💸). Y mucho cuidado con las ofertas falsas, que solo buscan tener tus datos para venderlos y ganar dinero a tu costa. No se puede negar que uno de los problemas que tienen plataformas como Linkedin es que tratan de abarcar tantas funcionalidades, que hasta las ratas se cuelan en el propio barco. 🐀&lt;/p&gt;

&lt;p&gt;Pero vaya, te voy a ir dejando ya, que tengo que colgar un nuevo post para que las empresas me vean como un perfil activo, siempre conectado y listo para la acción. Que si no publico mínimo una vez por semana e interactúo cada día con toda mi red de contactos desconocidos, el algoritmo me pondrá al final de la cola de posibles candidatos viables. ¿Sabes que creo? Que más que en la era de la conectividad digital, estamos en la era de hacer el paripé para vendernos a nosotros mismos 🤡. Ves, por eso no me gustan las redes sociales, porque todo el mundo tiene que estar al tanto de todo lo que haces en todo momento. Ya no existe la privacidad ni para buscar trabajo. ⛔&lt;/p&gt;

&lt;p&gt;Nos pasa a todos y seguirá pasando hasta que algo cambie.&lt;/p&gt;

&lt;p&gt;LinkedIn, InfoJobs, Indeed, JobToday… hemos llegado al año 2022 y el mundo aún no conoce una aplicación que nos de lo que todos estamos buscando: una plataforma moderna y eficiente que no nos haga perder el tiempo, y que sobre todo, nos ayude a encontrar un trabajo acorde a nuestras habilidades y preferencias, en vez de enviarnos ofertas basadas solo en el nombre del puesto de trabajo. 😷&lt;/p&gt;

&lt;p&gt;¿Algo así suena a utopía, verdad? Pero no tiene porque serlo. &lt;/p&gt;

&lt;p&gt;Manteneros al tanto. El cambio está en camino.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>webdev</category>
      <category>works</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Vimgrep Tips and Tricks</title>
      <author>Igor Irianto</author>
      <pubDate>Tue, 04 Jan 2022 16:16:12 +0000</pubDate>
      <link>https://dev.to/iggredible/vimgrep-tips-and-tricks-54pl</link>
      <guid>https://dev.to/iggredible/vimgrep-tips-and-tricks-54pl</guid>
      <description>&lt;p&gt;When I started using Vim, I wished that Vim had a powerful in-file search feature that other popular IDEs / editors have. How could I search for the files that contain the string "echo"? How could I search for only the &lt;code&gt;.js&lt;/code&gt; files containing the string "const"?&lt;/p&gt;

&lt;p&gt;It turns out that Vim &lt;em&gt;does&lt;/em&gt; come with a powerful in-file search right out of the box.&lt;/p&gt;

&lt;p&gt;There are two main in-file searches in Vim: &lt;code&gt;:grep&lt;/code&gt; and &lt;code&gt;:vimgrep&lt;/code&gt;. The former uses an external grep command and the latter is built into Vim. This article will cover how to use the &lt;code&gt;:vimgrep&lt;/code&gt; command. Maybe in the future I will write about &lt;code&gt;:grep&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-learn-vimgrep"&gt;
  &lt;/a&gt;
  Why Learn Vimgrep
&lt;/h2&gt;

&lt;p&gt;The ability to perform complex searches quickly can boost your productivity.&lt;/p&gt;

&lt;p&gt;It is true that the Vim ecosystem today contains many useful plugins, some of them are search-related plugins like ctrlp, denite, and fzf.vim. These plugins are convenient and powerful, so why bother learning vimgrep?&lt;/p&gt;

&lt;p&gt;Just because it is old doesn't mean it is no good. There are a few advantages of learning vimgrep.&lt;/p&gt;

&lt;p&gt;First, the &lt;code&gt;:vimgrep&lt;/code&gt; command is built into Vim, so you don't have to worry about installing dependencies (and all the issues that might come with it). If you ever had to use vanilla Vim (ex: when you're in an SSH, or using someone else's computer, or in your mobile phone, etc), you can be sure that &lt;code&gt;:vimgrep&lt;/code&gt; will always be there.&lt;/p&gt;

&lt;p&gt;Second, vimgrep uses Vim's built-in regex engine (remember &lt;code&gt;'verymagic'&lt;/code&gt;? :D). This may sound like a con to some people, but to me, this is a huge pro. Using the same, consistent regex engine as Vim itself means there is zero friction between performing a Vim search (&lt;code&gt;/&lt;/code&gt;) and using &lt;code&gt;:vimgrep&lt;/code&gt;. Your brain won't have to switch to a different mode. The less you have to use your brain for editing, the more you can use it for the more fun stuff!&lt;/p&gt;

&lt;p&gt;Vimgrep has some downsides. The biggest one is that because it loads all the search results into memory,  if you have a large search result, it can slow down Vim. However, if you're working on a small / medium project, it is fast enough.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#basic-usage"&gt;
  &lt;/a&gt;
  Basic Usage
&lt;/h2&gt;

&lt;p&gt;Did you know that &lt;code&gt;:vimgrep&lt;/code&gt; shorthand is &lt;code&gt;:vim&lt;/code&gt;? That's right! A &lt;code&gt;:vim&lt;/code&gt; command inside Vim? How meta!&lt;/p&gt;

&lt;p&gt;Anyway, from now on, I'll refer to it as &lt;code&gt;:vim&lt;/code&gt; in the remainder of this article.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;:vim&lt;/code&gt; command follows the following syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:vim /pattern/flag path
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;pattern&lt;/code&gt; is your search pattern.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;flag&lt;/code&gt; is a flag that you can pass to the search pattern.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;path&lt;/code&gt; is the file argument. You can pass multiple arguments.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ok, enough theory. You're here to learn some vimgrep, aren't you? Let's go!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#searching-for-a-string-inside-a-particular-file"&gt;
  &lt;/a&gt;
  Searching for a String Inside a Particular File
&lt;/h2&gt;

&lt;p&gt;If you need to find the string "hello" inside all ruby files (.rb) inside app/controllers/ directory, run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:vim /hello/ app/controllers/**/*.rb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I use the wildcards &lt;code&gt;*&lt;/code&gt; and double wildcards (globstar) &lt;code&gt;**&lt;/code&gt; a lot. The globstar, &lt;code&gt;**&lt;/code&gt;, searches recursively (it will match things like &lt;code&gt;app/controllers/dir/&lt;/code&gt;, &lt;code&gt;app/controllers/some/dir/&lt;/code&gt;, &lt;code&gt;app/controllers/file&lt;/code&gt;). The wildcard, &lt;code&gt;*&lt;/code&gt;, matches any string of any length. In this case, &lt;code&gt;*.rb&lt;/code&gt; matches any string that ends with &lt;code&gt;.rb&lt;/code&gt; (like &lt;code&gt;hello_controller.rb&lt;/code&gt;, &lt;code&gt;whatever.rb&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Btw, do not confuse the wildcards with the asterisk in regex. These two are different things. Regex asterisk pattern means zero or more of subsequent pattern (ex: &lt;code&gt;a*&lt;/code&gt; means zero or more "a"), while the wildcard does not require a subsequent pattern (&lt;code&gt;*&lt;/code&gt; means any string of any length).&lt;/p&gt;

&lt;p&gt;If you want to learn about globs, check out &lt;a href="https://mywiki.wooledge.org/glob"&gt;https://mywiki.wooledge.org/glob&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;:vim&lt;/code&gt; search displays the results in quickfix. If you aren't familiar with it, think of it as a set of items. In this case, it is a set of search results.&lt;/p&gt;

&lt;p&gt;After running the search command, run &lt;code&gt;:copen&lt;/code&gt; to open the quickfix window.&lt;/p&gt;

&lt;p&gt;If you're brand new to quickfix and aren't sure how to interact with it, here are some useful quickfix commands to get you started immediately:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:copen        Open the quickfix window
:cclose       Close the quickfix window
:cnext        Go to the next location
:cprevious    Go to the previous location
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above list is by no means comprehensive. I suggest you learn about quickfix if you have time. It shouldn't take long. It's a useful skill to have in your Vim toolbelt. To learn more about quickfix, check out &lt;code&gt;:h quickfix&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#searching-for-a-string-inside-a-particular-file-extension"&gt;
  &lt;/a&gt;
  Searching for a String Inside a Particular File Extension
&lt;/h2&gt;

&lt;p&gt;If you need to look for the string "echo" but only inside a &lt;code&gt;.sh&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:vim /echo/ **sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The globstar is very useful if you have a nested directory structure. Here, it will match both &lt;code&gt;./some_file.sh&lt;/code&gt; and &lt;code&gt;./some/really/long/dir/then/file.sh&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;If you only want to search in adjacent files (like &lt;code&gt;./hey.sh&lt;/code&gt; and &lt;code&gt;./some_file.sh&lt;/code&gt;, not &lt;code&gt;./some_dir/then/file.sh&lt;/code&gt;), instead of using the globstar, use a single wildcard: &lt;code&gt;*sh&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#searching-for-a-string-inside-files-ending-with-particular-extensions"&gt;
  &lt;/a&gt;
  Searching for a String Inside Files Ending With Particular Extensions
&lt;/h2&gt;

&lt;p&gt;If you need to look for the string "echo" but only inside either a &lt;code&gt;.sh&lt;/code&gt; or a &lt;code&gt;.rb&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:vim /echo/ **{sh,rb}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#passing-multiple-files-to-search-inside-of"&gt;
  &lt;/a&gt;
  Passing Multiple Files to Search Inside of
&lt;/h2&gt;

&lt;p&gt;Note that earlier I said that vimgrep accepts multiple file arguments. We have been passing it only one argument so far. However, we can totally pass it with more than one argument!&lt;/p&gt;

&lt;p&gt;If you need to look for the string "echo" inside either &lt;code&gt;.sh&lt;/code&gt; or &lt;code&gt;.rb&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:vim /echo/ **sh **rb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you need to look for the string "echo" inside of either &lt;code&gt;app/controllers/&lt;/code&gt; or &lt;code&gt;Rakefile&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:vim /echo/ app/controllers/** Rakefile
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You are not limited to only two file arguments, you can pass it as many arguments as you want. If you need to look for "echo" inside of either &lt;code&gt;app/controllers/&lt;/code&gt; directory, &lt;code&gt;Rakefile&lt;/code&gt; in the current directory, a &lt;code&gt;.json&lt;/code&gt; in the current directory, and a &lt;code&gt;sh&lt;/code&gt; file somewhere inside the &lt;code&gt;bin/&lt;/code&gt; directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:vim /echo/ app/controllers/** Rakefile *.json bin/**/*sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#finding-multiple-matches-in-the-same-line"&gt;
  &lt;/a&gt;
  Finding Multiple Matches in the Same Line
&lt;/h2&gt;

&lt;p&gt;When we did &lt;code&gt;:vim /echo/ app/controllers/**&lt;/code&gt;, Vim returns the first match on each line.&lt;/p&gt;

&lt;p&gt;That means if we have a line that contains multiple keywords, like &lt;code&gt;echo "I like to echo echo echo"&lt;/code&gt;, the search result only displays one result instead of four. Using the pattern &lt;code&gt;/echo/&lt;/code&gt; only matches the first "echo" of that line.&lt;/p&gt;

&lt;p&gt;What if we want our search result to display all four of them?&lt;/p&gt;

&lt;p&gt;To catch all of the "echo" strings whenever it occurs multiple times in a line, we need to use the global flag (&lt;code&gt;g&lt;/code&gt;).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:vim /echo/g app/controllers/**
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now it will match all 4 "echo" occurrences in that line.&lt;/p&gt;

&lt;p&gt;I like the global flag and I use it in over 80% of my vimgrep searches.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fuzzy-search-a-string-inside-a-particular-file"&gt;
  &lt;/a&gt;
  Fuzzy Search a String Inside a Particular File
&lt;/h2&gt;

&lt;p&gt;Vimgrep is also capable of running a fuzzy search. We need to pass it a &lt;code&gt;f&lt;/code&gt; flag. To fuzzy search the string "echo" inside a &lt;code&gt;.sh&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:vim /echo/fg  **sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will fuzzy search all lines inside &lt;code&gt;**sh&lt;/code&gt; pattern for strings that &lt;em&gt;resemble&lt;/em&gt; "echo".&lt;/p&gt;

&lt;p&gt;So how does a vimgrep fuzzy search differ from a regular search?  In addition to matching a literal "echo" string, it would also match something like: &lt;code&gt;puts "Checking Homebrew..."&lt;/code&gt; because the "ec" in "Checking" and "Ho" in "Homebrew" constructs an "echo".&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#search-a-regular-expression-pattern-in-a-particular-file"&gt;
  &lt;/a&gt;
  Search a Regular Expression Pattern in a Particular File
&lt;/h2&gt;

&lt;p&gt;Vimgrep accepts regular expression in your keyword search pattern. If want to search for either "echo" or "ecko" inside a &lt;code&gt;.sh&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:vim /ec[hk]o/g **sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;[]&lt;/code&gt; in &lt;code&gt;[hk]&lt;/code&gt; is a character set syntax. In this case, it will match either "h" or "k" letters.&lt;/p&gt;

&lt;p&gt;If you need to search for a text surrounded by a single quote (like &lt;code&gt;'hello'&lt;/code&gt;, or &lt;code&gt;'foo'&lt;/code&gt;, or &lt;code&gt;'1234'&lt;/code&gt;) inside a &lt;code&gt;.sh&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:vim /'[^']*'/g **sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There is so much more you can do with regex. I won't cover how to use regex here  - but I want to show you that vimgrep works great with regex. If you want to learn more regex, I like to go to &lt;a href="https://www.regular-expressions.info/tutorial.html"&gt;https://www.regular-expressions.info/tutorial.html&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#search-for-a-string-inside-a-particular-directory"&gt;
  &lt;/a&gt;
  Search for a String Inside a Particular Directory
&lt;/h2&gt;

&lt;p&gt;The double star (globstar) &lt;code&gt;**&lt;/code&gt; and the wildcard can be used at the start, in the middle, or at the end. It can also be used multiple times in a file pattern.&lt;/p&gt;

&lt;p&gt;If you want to search for "echo" inside the &lt;code&gt;/controllers/&lt;/code&gt; directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:vim /echo/g **/controllers/**
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to search for "echo" inside the &lt;code&gt;/controllers/&lt;/code&gt; directory and inside a file that begins with "shipment" and end with "rb" (ex: &lt;code&gt;shipment_domestic.rb&lt;/code&gt;, &lt;code&gt;shipment_incoming.rb&lt;/code&gt;):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:vim /echo/g **/controllers/**/shipment*rb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#search-for-a-string-inside-a-different-directory-than-your-current-working-directory"&gt;
  &lt;/a&gt;
  Search for a String Inside a Different Directory Than Your Current Working Directory
&lt;/h2&gt;

&lt;p&gt;Vimgrep searches in your working directory. But what if you need to search for the string "echo" inside a different directory? Easy. Just go to that other directory, then do the search!&lt;/p&gt;

&lt;p&gt;Vim has a &lt;code&gt;:cd&lt;/code&gt; command that changes the directory you are currently in.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:cd somewhere/else
:vim /echo/g **js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you're done, just &lt;code&gt;:cd&lt;/code&gt; back to your previous directory.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#search-in-the-current-file"&gt;
  &lt;/a&gt;
  Search in the Current File
&lt;/h2&gt;

&lt;p&gt;You can use Vim's filename expansion to shortcut your file pattern search. &lt;code&gt;%&lt;/code&gt; in Vim represents the current active buffer (the file you're currently on).&lt;/p&gt;

&lt;p&gt;If you need to search for "echo" the current file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:vim /echo/g %
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more: :help :_%&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-other-search-commands"&gt;
  &lt;/a&gt;
  Using Other Search Commands
&lt;/h2&gt;

&lt;p&gt;There are times when we need to perform a more advanced search. We may need to use other commands, like &lt;code&gt;find&lt;/code&gt;. No problem. To search for "echo" inside all files whose names start with "docker" using the &lt;code&gt;find&lt;/code&gt; command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:vim /echo/g `find . -type f -name 'docker*'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more on how &lt;code&gt;find&lt;/code&gt; works, check out &lt;code&gt;man find&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;git ls-files&lt;/code&gt; is another useful shell command for git-related searches. Assuming that you are inside a git repository, to search for "echo" inside of all modified files only:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:vim /echo/g `git ls-files --modified`
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more on how &lt;code&gt;git ls-files&lt;/code&gt; works, check out &lt;code&gt;man git-ls-files&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#searching-infiles-within-arglist"&gt;
  &lt;/a&gt;
  Searching in-Files Within Arglist
&lt;/h2&gt;

&lt;p&gt;The argument list (&lt;code&gt;arglist&lt;/code&gt;) is a Vim feature wherein Vim stores a list of files.&lt;/p&gt;

&lt;p&gt;The gist of arglist is, if you open Vim with multiple files (ex: &lt;code&gt;vim file1.js file2.rb file3.py&lt;/code&gt;), Vim collects these files inside the arglist. To see them, run &lt;code&gt;:args&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Arglist does not necessarily have to be populated on start too. You can create your own arglist while in Vim by running &lt;code&gt;:args file1.js file2.rb file3.py&lt;/code&gt;. To see them, run &lt;code&gt;:args&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Once you have a list of files, you can quickly go to the next or previous arglist files with &lt;code&gt;:next&lt;/code&gt; or &lt;code&gt;:prev&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ok, so arglist is a collection of files. So how does arglist relate to vimgrep?&lt;/p&gt;

&lt;p&gt;Usually when performing a task, you would gather all the relevant files first. Once you have all your relevant files in a collection, you can very quickly navigate between them. Arglist is a very useful feature for that.&lt;/p&gt;

&lt;p&gt;Vim has a number of file expansion shortcuts. Just like how &lt;code&gt;%&lt;/code&gt; represents the current buffer, Vim has one for arglist too! &lt;code&gt;##&lt;/code&gt; represents the current arglist.&lt;/p&gt;

&lt;p&gt;So if we want to search within our arglist files for the string "echo":&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:vim /echo/g ##
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Why is this useful? I mean, it looks like I'm adding an extra step to the search process: first, I need to gather the files to an arglist and second, I run the vimgrep command. That's two steps altogether. Why can't I just run &lt;code&gt;:vim /echo/g file1.js file2.rb file3.py&lt;/code&gt; and be done with only one step?&lt;/p&gt;

&lt;p&gt;Speaking from experience, often I find myself needing to perform multiple keyword searches within the same set of files, like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:vim /echo1/g file1.js file2.rb file3.py
:vim /foo2/g file1.js file2.rb file3.py
:vim /bar3/g file1.js file2.rb file3.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I find it painful each time I have to re-type the same set of files. This is where arglist can save time!&lt;/p&gt;

&lt;p&gt;Why not collect an arglist first:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:arglist file1.js file2.rb file3.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then reuse it in subsequent vimgrep searches? &lt;/p&gt;

&lt;p&gt;Now I can just run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:vim /echo1/g ##
:vim /foo2/g ##
:vim /bar3/g ##
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you need to perform different keyword searches against the same set of files, arglist can save you time.&lt;/p&gt;

&lt;p&gt;If you're curious about how &lt;code&gt;##&lt;/code&gt; works, check out &lt;code&gt;:h :_##&lt;/code&gt;. If you want to learn more arglist, check out &lt;code&gt;:h :arglist&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quickly-get-the-last-search-pattern"&gt;
  &lt;/a&gt;
  Quickly Get the Last Search Pattern
&lt;/h2&gt;

&lt;p&gt;Sometimes I need to search for a complicated pattern. Before I enter that in the &lt;code&gt;:vim&lt;/code&gt; command, I like to test it with search (&lt;code&gt;/&lt;/code&gt;) first.&lt;/p&gt;

&lt;p&gt;For example, if you want to search for a string surrounded by a single quote, while &lt;em&gt;excluding&lt;/em&gt; the single quotes, you could do &lt;code&gt;'\zs[^']*\ze'&lt;/code&gt;. But this pattern may not be intuitive at first. When using a semi-complicated pattern, I like to test if it does what I think it does, so before I run &lt;code&gt;:vim /'\zs[^']*\ze'/g **sh&lt;/code&gt;, I would usually do a quick search command &lt;code&gt;/'\zs[^']*\ze'&lt;/code&gt; to test if it works.&lt;/p&gt;

&lt;p&gt;Once I confirm that the pattern meets my expectations, I would then enter it to the &lt;code&gt;:vim&lt;/code&gt; command. But do I really want to re-type &lt;code&gt;'\zs[^']*\ze'&lt;/code&gt; all over again? I mean, look at those brackets and single quotes and backslashes... I could easily mistype them when I am typing them on the &lt;code&gt;:vim&lt;/code&gt; command. &lt;/p&gt;

&lt;p&gt;Moreover, what if my pattern is a lot longer, like &lt;code&gt;\(["']\)\(\%(\1\@!.\)*\)\1&lt;/code&gt;? Oh boy, look at those backslashes, parentheses, and brackets... what are the chances of me retyping that correctly in the first try?&lt;/p&gt;

&lt;p&gt;Luckily, there is a trick that allows you to "paste" your most recently used search command. After typing &lt;code&gt;:vim /&lt;/code&gt;, type &lt;code&gt;Ctrl-r&lt;/code&gt; then &lt;code&gt;/&lt;/code&gt;. The secret is that &lt;code&gt;Ctrl-r&lt;/code&gt; when used in insert mode (or in this case, command-line mode) invokes the Vim registers. Here we ask Vim for the value from the search register (&lt;code&gt;/&lt;/code&gt;). &lt;/p&gt;

&lt;p&gt;This is where the &lt;code&gt;:vim&lt;/code&gt; command has an advantage over the regular &lt;code&gt;:grep&lt;/code&gt; command. The search command (&lt;code&gt;/&lt;/code&gt;) uses Vim regex flavor, which &lt;code&gt;:vim&lt;/code&gt; also uses. But the &lt;code&gt;:grep&lt;/code&gt; command doesn't use Vim regex flavor (it uses whatever grep external command you set up; for more, check out &lt;code&gt;:h 'grepprg'&lt;/code&gt;). Using the same regex flavor for &lt;code&gt;/&lt;/code&gt; then &lt;code&gt;:vim&lt;/code&gt; command means zero friction and a buttery-smooth search experience!&lt;/p&gt;

&lt;p&gt;Albeit, performance-wise, &lt;code&gt;:grep&lt;/code&gt; is faster, but if speed is not a big issue (it isn't really noticeable in most cases), &lt;code&gt;:vim&lt;/code&gt; offers a better user experience.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;This is a good place to stop. You've learned a number of cool tricks for the &lt;code&gt;:vim&lt;/code&gt; program. I wish I knew half of these tricks when I started Vim. Don't just speed read this and leave. Take your time going through each command. Go through each one of them - tweak it, break it, and understand it. Make it your goal to be able to perform them without much mental effort. This is by no means a comprehensive list of &lt;code&gt;:vimgrep&lt;/code&gt; tips and tricks. There are so many other combinations that you can do with vimgrep. Don't stop learning!&lt;/p&gt;

&lt;p&gt;Vim is a great editor even without plugins. Vim is a universal program that can be found/installed in practically any machine. There may be times when you can't use search plugins. This will be the time where your vanilla Vim knowledge will shine. Don't let the lack of plugins cripple your Vim productivity. Learn to use Vim with and without plugins. Learn &lt;code&gt;:vimgrep&lt;/code&gt; and also learn &lt;code&gt;:grep&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Happy Vimming!&lt;/p&gt;

</description>
      <category>vim</category>
      <category>grep</category>
      <category>vimgrep</category>
      <category>tips</category>
    </item>
    <item>
      <title>Managing Your Lows</title>
      <author>Shariq</author>
      <pubDate>Tue, 04 Jan 2022 16:11:19 +0000</pubDate>
      <link>https://dev.to/shariq/managing-your-lows-14ll</link>
      <guid>https://dev.to/shariq/managing-your-lows-14ll</guid>
      <description>&lt;p&gt;As someone in a management role at a large, multi-national, software engineering firm, I've come across many diverse individuals for whom it's my goal to make work approachable, flexible, and supportive. Today, I wanted to share something that was affecting one of my team members earlier this year and often affects me.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=HJp14HBB5a4"&gt;Watch on YouTube&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#having-a-bad-day"&gt;
  &lt;/a&gt;
  Having A Bad Day
&lt;/h2&gt;

&lt;p&gt;My team member said they were having a down day. This is definitely something a lot of us hear from others and feel&lt;br&gt;
ourselves, especially with the limited social interactions that we've had since the onset of COVID-19. This "low" may have been just how they were feeling for some unknown reason, how productive they were that day, or anything really where they felt they didn't meet their own expectations for what success or happiness felt like.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sometimes-we-all-get-a-little-down"&gt;
  &lt;/a&gt;
  Sometimes, We All Get A Little Down
&lt;/h2&gt;

&lt;p&gt;However, you need to remember that having an off day is really just that - one day. Sometimes, you feel like you’ll&lt;br&gt;
never recover or that you’ve made a mistake that’s going to haunt you forever. Fortunately, though, our mistakes are not unique. Someone else likely made that exact mistake before we did, and they were able to move on. Maybe the anguish lasts a few days or weeks, but you can generally find a modicum of happiness somewhere in there.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-do-i-do-to-deal-with-a-bad-day"&gt;
  &lt;/a&gt;
  What Do I Do To Deal With A Bad Day
&lt;/h2&gt;

&lt;p&gt;For me, if I can’t find that happiness, I try to or at least find a vision of what happiness looks like to me. This has a two-fold effect. One is that it gets my mind off of whatever is making me feel not quite like myself that day. The second is that it helps me re-frame my state of mind to think through how I can achieve that state of happiness that I envisioned. This plan isn't always eating healthier, working out more, or studying harder. We don't always need to strive to achieve and fall into some sort of glorified hustle culture.&lt;/p&gt;

&lt;p&gt;Sometimes it's just deciding I need time off from work or social interaction to stay home and read or play video games. Maybe it's to catch up on TV or post memes about how mad I am at Game of Thrones.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-to-say-to-someone-having-a-bad-day"&gt;
  &lt;/a&gt;
  What To Say To Someone Having A Bad Day
&lt;/h2&gt;

&lt;p&gt;The way I try to look at it is somewhat like the stock market. It has a long history of highs and lows, but in&lt;br&gt;
general, its more recent lows are higher than its past lows. This isn't always the case, but as long as we aim to grow over time, hopefully, we can achieve the same level of higher lows. There are going to be days when we bottom out. There are going to be days when those around you bottom out. No one really has it together - not all the money, fame, or success can help that. All we can do is aim to be better - whatever we ourselves define better as.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The most important thing to me as a manager, a friend, and someone random on the internet is your ability to succeed in the long term. Today doesn't define you. It's everything you've done until today and what you will do tomorrow that I look for. I hope you can do the same for yourself.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Predicciones 🧞‍♀️💻 2022</title>
      <author>Khriztian Moreno</author>
      <pubDate>Tue, 04 Jan 2022 15:56:34 +0000</pubDate>
      <link>https://dev.to/khriztianmoreno/predicciones-2022-48a8</link>
      <guid>https://dev.to/khriztianmoreno/predicciones-2022-48a8</guid>
      <description>&lt;p&gt;Algunos puntos que deberías prestar atención para este año 2022 que seguro tendrán un alto impacto en el ecosistema tecnológico.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;RIP Babel y Webpack&lt;/strong&gt;: No desaparecerán para siempre, pero serán reemplazados en gran medida por nuevas herramientas de compilación que son más rápidas e intuitivas, como &lt;a href="https://swc.rs/"&gt;SWC&lt;/a&gt;, &lt;a href="https://esbuild.github.io/"&gt;esbuild&lt;/a&gt; y &lt;a href="https://vitejs.dev/"&gt;Vite&lt;/a&gt;. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Serverless ayudará a los desarrolladores frontend a convertirse en desarrolladores fullstack (reales)&lt;/strong&gt;: y (con suerte) recibir el pago correspondiente. Gran parte de la tecnología sin servidor se basa en V8 y está adoptando Web APIs, por lo que los frontend developers ya estarán familiarizados con las partes clave de la infraestructura sin servidor. Ahora, en lugar de poner en marcha un servidor Express y llamarse a sí mismo un "fullstack developer", Serverless le permitirá ser realmente uno.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Next.js se volverá menos un meta-framework de React y más un meta-framework &lt;em&gt;web&lt;/em&gt;&lt;/strong&gt;: Vercel ya ha contratado a Rich Harris (también conocido como Lord of the Svelte) y ha compartido sus planes para un enfoque &lt;a href="https://vercel.com/features/edge-functions"&gt;edge-first&lt;/a&gt; para la web con cualquier framework. Se apoyarán aún más en esto en 2022, se adaptarán a más frameworks/libs JS (con fundas de almohada llenas de efectivo) y se prepararán para una &lt;a href="https://es.wikipedia.org/wiki/Oferta_p%C3%BAblica_de_venta"&gt;IPO&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Las herramientas &lt;a href="https://www.genbeta.com/desarrollo/que-programacion-low-code-no-code-que-se-diferencian-como-estan-democratizando-creacion-aplicaciones"&gt;No/Low-code&lt;/a&gt; dominarán aún más&lt;/strong&gt;: Probablemente continuaremos ignorándolas; mientras tanto, más agencias y adolescentes ganarán millones de dólares enviando sitios sin escribir una línea de código. En 2022, también comenzaremos a ver empresas de software más establecidas con "desarrolladores reales" que aprovechan las herramientas sin código o con poco código porque el mejor código es el que no tiene que mantener.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Meta cederá el control de React&lt;/strong&gt;: Al igual que cuando crearon &lt;a href="https://graphql.org/foundation/"&gt;GraphQL Foundation&lt;/a&gt; en 2018, Meta creará una React Foundation a finales de este año y cederá el control de React. A diferencia de Microsoft/Amazon/Google, Meta nunca ha monetizado (con éxito) a los desarrolladores, por lo que React no es una prioridad estratégica para la empresa. Eso podría ser aún más cierto ahora, con los ojos de Zuck en el Metaverso y Sebastian Markbåge &lt;a href="https://twitter.com/sebmarkbage/status/1470761450541142023"&gt;partiendo hacia Vercel&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;VC resolverá la financiación de Open Source&lt;/strong&gt;: Al menos, se sentirá así. Con algunos proyectos OSS previos a los ingresos/tracción/pmf que generaron rondas de semillas a valoraciones entre $25-50MM, querrá desempolvar ese viejo proyecto secundario suyo. No sé si es sostenible (no lo es), pero es mucho mejor que cuando confiamos en &lt;a href="https://twitter.com/youyuxi/status/970722976739086336"&gt;Patreon&lt;/a&gt; para financiar nuestra infraestructura web crítica.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Netlify adquirirá Remix&lt;/strong&gt;: Los framework de "Bottoms up" es la ola. &lt;a href="https://www.netlify.com/"&gt;Netlify&lt;/a&gt; querrá la distribución y &lt;a href="https://remix.run/"&gt;Remix&lt;/a&gt; querrá el… dinero. Permitiría al equipo de Remix dedicar su tiempo a aquello en lo que son buenos, Remix-the-framework, en lugar de Remix-the-business. El emparejamiento les daría a ambos una oportunidad mucho mejor de ponerse al día con Vercel/Next.js&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Mientras todo eso ocurre ...? podemos seguir trabajando tranquilamente.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>spanish</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Our favorite javascript one-liners</title>
      <author>J.</author>
      <pubDate>Tue, 04 Jan 2022 15:53:17 +0000</pubDate>
      <link>https://dev.to/everlyhealth/our-favorite-javascript-one-liners-3l7n</link>
      <guid>https://dev.to/everlyhealth/our-favorite-javascript-one-liners-3l7n</guid>
      <description>&lt;p&gt;These are our favorite one-liners that we've used and forgot existed because they work so well 😁.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#generate-a-random-hex-color"&gt;
  &lt;/a&gt;
  Generate a random hex color
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mh"&gt;0xffffff&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;padEnd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#remove-array-duplicates"&gt;
  &lt;/a&gt;
  Remove array duplicates
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;removeDuplicates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#reverse-a-string"&gt;
  &lt;/a&gt;
  Reverse a string
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reverseString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#clear-all-cookies"&gt;
  &lt;/a&gt;
  Clear all cookies
&lt;/h2&gt;

&lt;p&gt;Note: This will not always work because cookies can be set to not be changed from the front-end. (Thanks &lt;a class="mentioned-user" href="https://dev.to/lukeshiru"&gt;@lukeshiru&lt;/a&gt;!)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;clearCookies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^ +/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/=.*/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;=;expires=${new Date(0).toUTCString()};path=/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#remove-falsy-values-from-an-array"&gt;
  &lt;/a&gt;
  Remove falsy values from an array
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;removeFalsyValues&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Boolean&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#get-the-value-of-a-query-parameter-from-a-url"&gt;
  &lt;/a&gt;
  Get the value of a query parameter from a url
&lt;/h2&gt;

&lt;p&gt;Pass in the url and the parameter that you're looking for the value of, and this function will return the value to you&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getQueryParam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;param&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;searchParams&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;queryParam&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#copy-to-clipboard"&gt;
  &lt;/a&gt;
  Copy to clipboard
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;copyToClipboard&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clipboard&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;writeText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#get-selected-text"&gt;
  &lt;/a&gt;
  Get selected text
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getSelectedText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSelection&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#scroll-to-top"&gt;
  &lt;/a&gt;
  Scroll to Top
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;scrollToTop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#scroll-to-bottom"&gt;
  &lt;/a&gt;
  Scroll to Bottom
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;scrollToBottom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollHeight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#toggle-a-boolean"&gt;
  &lt;/a&gt;
  Toggle a Boolean
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toggleBool&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;bool&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#convert-fahrenheit-celsius"&gt;
  &lt;/a&gt;
  Convert Fahrenheit / Celsius
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cToF&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;celsius&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;celsius&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fToC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fahrenheit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fahrenheit&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#thanks"&gt;
  &lt;/a&gt;
  Thanks
&lt;/h3&gt;

&lt;p&gt;Special thanks to Fernando, José, Patricia and &lt;a class="mentioned-user" href="https://dev.to/lukeshiru"&gt;@lukeshiru&lt;/a&gt; for adding to this list and optimizing!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>snippet</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Dev Learning Hub - a place to share your knowledge with everyone powered with MongoDB Atlas</title>
      <author>Brayan Arrieta</author>
      <pubDate>Tue, 04 Jan 2022 15:52:33 +0000</pubDate>
      <link>https://dev.to/brayanarrieta/dev-learning-hub-a-place-to-share-your-knowledge-with-everyone-powered-with-mongodb-atlas-24hc</link>
      <guid>https://dev.to/brayanarrieta/dev-learning-hub-a-place-to-share-your-knowledge-with-everyone-powered-with-mongodb-atlas-24hc</guid>
      <description>&lt;h3&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Dev Learning Hub&lt;/strong&gt; is the place to share your knowledge with other developers. &lt;strong&gt;Dev Learning Hub&lt;/strong&gt; is a website with the main idea of creating a collection of useful resources based on community feedback and request. That will allow to everyone improve their level skills and also collaborate with other developers to learn together as a community. Some of the features provided by &lt;strong&gt;Dev Learning Hub&lt;/strong&gt; are:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#code-snippet-collection"&gt;
  &lt;/a&gt;
  Code Snippet Collection
&lt;/h4&gt;

&lt;p&gt;Code snippets are templates that make it easier to enter repeating code patterns. For that reason, every developer probably has several snippets that can help to do the work easier. &lt;strong&gt;Dev Learning Hub&lt;/strong&gt; wants to have a collection of developers' code snippets of different technologies.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/IYl7VtnyUpk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#interview-questions-collection"&gt;
  &lt;/a&gt;
  Interview Questions Collection
&lt;/h4&gt;

&lt;p&gt;I believe that each one of us has ever had to prepare for a job interview. Regardless of whether we are students, junior developers, senior developers, or a different role, we know how complicated it can be at first to enter the world of interviews. Over time, some of us gain experience in the process with the help of advice that we receive, or we gain self-confidence to make the interviews much easier.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dev Learning Hub&lt;/strong&gt; wants to share a collection of common interview questions based on the community feedback that could help with a future interview process, and also with that, we can learn together as a community.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/9JHDblWhoiw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#quiz-interview-practice"&gt;
  &lt;/a&gt;
  Quiz Interview Practice
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Dev Learning Hub&lt;/strong&gt; wants to share a simulator to improve your skills and prepare before your interviews with some common questions about different technologies.&lt;/p&gt;

&lt;p&gt;Right now just the &lt;strong&gt;React&lt;/strong&gt; quiz interview is available, but during the next few days, I will be adding more information to the other technologies.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/zDUKf-2tfdQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#community-requests"&gt;
  &lt;/a&gt;
  Community Requests
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Dev Learning Hub&lt;/strong&gt; wants that everyone shares their knowledge with others, for that reason the &lt;strong&gt;Community Request&lt;/strong&gt; feature is one of the most important. The feature consists of a process so similar as when you create a merge request or pull request for your code. In this case, there is just one difference is that the content of the community request will be to add or share knowledge with the community so could create a community request to add a new &lt;strong&gt;free course&lt;/strong&gt;, a new &lt;strong&gt;code snippet&lt;/strong&gt;, a new** interview question*&lt;em&gt;, after that need to be reviewed for the community and when you have **5 approves&lt;/em&gt;* you can merge to the page and will be added to the main content of the page.&lt;/p&gt;

&lt;p&gt;Right now we can just create &lt;strong&gt;community requests&lt;/strong&gt; to add new content, however, the idea is that in the future we will community request to edit and remove the content of the page based on the feedback of the community.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/lkc1Pu-uWdg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Choose Your Own Adventure&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/brayanarrieta"&gt;
        brayanarrieta
      &lt;/a&gt; / &lt;a href="https://github.com/brayanarrieta/dev-learning-hub"&gt;
        dev-learning-hub
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Dev Learning Hub - a place to share your knowledge with everyone
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#dev-learning-hub-demo"&gt;
  &lt;/a&gt;
  Dev Learning Hub Demo
&lt;/h4&gt;

&lt;p&gt;Rigth now, there is a demo of Dev Learning Hub in the next URL &lt;a href="https://dev-learning-hub.vercel.app/"&gt;https://dev-learning-hub.vercel.app/&lt;/a&gt;. There are some data that I have added and probably I will still add more data on the page, but the main idea is that the community share their knowledge and preference and start to add content so that will allow to the site grow based on the feedback of everyone.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h-31Mn2e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/esubm7a5sl9vzfmbo9cw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h-31Mn2e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/esubm7a5sl9vzfmbo9cw.png" alt="Dev Learning Hub" width="880" height="443"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#build-with-the-help-of-the-next-technologies"&gt;
  &lt;/a&gt;
  Build with the help of the next technologies
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pNpJjwey--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c0nnluz4nfoz2v27s2rn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pNpJjwey--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c0nnluz4nfoz2v27s2rn.png" alt="Technologies" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Technologies&lt;/strong&gt;: &lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt;, &lt;a href="https://www.typescriptlang.org/"&gt;Typescript&lt;/a&gt;, &lt;a href="https://chakra-ui.com/"&gt;Chakra UI&lt;/a&gt;, &lt;a href="https://react-hook-form.com/"&gt;react-hook-form&lt;/a&gt;, &lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt;, &lt;a href="https://mongoosejs.com/"&gt;Mongoose&lt;/a&gt;, &lt;a href="https://eslint.org/"&gt;Eslint&lt;/a&gt;, &lt;a href="https://www.npmjs.com/package/react-markdown"&gt;react-markdown&lt;/a&gt;, &lt;a href="https://auth0.com/"&gt;Auth0&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Platforms&lt;/strong&gt;: &lt;a href="https://vercel.com/"&gt;Vercel&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Database&lt;/strong&gt;: MongoDB hosted on &lt;a href="https://www.mongodb.com/cloud/atlas"&gt;Mongo DB Atlas&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#database-structure"&gt;
  &lt;/a&gt;
  Database Structure
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ca4VGMuY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydyeg2t96n0kr2v3yzjq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ca4VGMuY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydyeg2t96n0kr2v3yzjq.png" alt="Database Diagram" width="880" height="511"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h4&gt;

&lt;p&gt;I hope you find this article really interesting about &lt;strong&gt;Dev Learning Hub&lt;/strong&gt;, the code is shared so if you have some recommendation or suggestion will be helpful. There is a lot of work to do, so if you have an idea that we can use to improve the process or the main idea of the project, please share 👍.&lt;/p&gt;

</description>
      <category>atlashackathon</category>
      <category>nextjs</category>
      <category>mongodb</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to Write an Effective Technical Résumé</title>
      <author>Bala Priya C</author>
      <pubDate>Tue, 04 Jan 2022 15:41:19 +0000</pubDate>
      <link>https://dev.to/balapriya/how-to-write-an-effective-technical-resume-36lc</link>
      <guid>https://dev.to/balapriya/how-to-write-an-effective-technical-resume-36lc</guid>
      <description>&lt;p&gt;Getting your résumé writing right is an important step in your developer journey.&lt;/p&gt;

&lt;p&gt;Have you ever been a part of the job search process—be it an internship or a full-time opportunity—as a student or a new grad? &lt;/p&gt;

&lt;p&gt;If yes, you already know: getting past the résumé screening step, and &lt;em&gt;landing that interview call&lt;/em&gt; can often be harder than the actual interview.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/A5vvxQfVGVbInEXzTa/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/A5vvxQfVGVbInEXzTa/giphy.gif" alt="It's so hard" width="480" height="384"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Over the next few minutes, you'll get to know some actionable tips for résumé writing, that you could use to revamp your résumé. This post is inspired by Jessie Newman's webinar for WWCode, NYC chapter.&lt;/p&gt;

&lt;p&gt;Let's get started.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-goes-on-a-r%C3%A9sum%C3%A9"&gt;
  &lt;/a&gt;
  What goes on a résumé?
&lt;/h2&gt;

&lt;p&gt;Let's start with this question:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;What are companies and hiring managers looking for?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Well, they're looking for candidates who:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;can improve the company's products with their technical expertise,&lt;/li&gt;
&lt;li&gt;be enjoyable to work with, and&lt;/li&gt;
&lt;li&gt;can contribute positively to the company's culture and growth.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Even if the recruiter skims through your résumé for less than a minute, you should stand out as a prospective candidate, yes?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For this to happen, the content on your résumé should be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Recent&lt;/strong&gt;: Always present information in reverse chronological order—starting with the most recent experience first.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Relevant&lt;/strong&gt; to the role that you're applying to.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Clear&lt;/strong&gt; even to a reader who has no context.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Typically, your résumé should only be about a page long. And that's all you've got to make an impression on the reviewer.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;As they say, "You're much more than a one-page résumé—but your résumé should not be more than one page.😄&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#format-of-a-r%C3%A9sum%C3%A9"&gt;
  &lt;/a&gt;
  Format of a résumé
&lt;/h2&gt;

&lt;p&gt;There's no one recommended format to draft your résumé. However, the following sections should typically be present:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- Name and Contact info
- Objective (optional)
- Education
- Technical Experience
- Skills
- Leadership | Volunteering
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's now visit each of these sections, and see how you can best structure each of them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#name-and-contact-info"&gt;
  &lt;/a&gt;
  Name and contact info
&lt;/h3&gt;

&lt;p&gt;✅ Include your name, your email address, links to your portfolio/GitHub.&lt;/p&gt;

&lt;p&gt;✅ Be sure to check if your email address is professional enough.&lt;/p&gt;

&lt;p&gt;✅ Include social media handles—like LinkedIn—only if you've updated them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#objective-raw-optional-endraw-"&gt;
  &lt;/a&gt;
  Objective (&lt;code&gt;optional&lt;/code&gt;)
&lt;/h3&gt;

&lt;p&gt;Include the objective section &lt;em&gt;only&lt;/em&gt; if you aim at providing some context to the reviewer.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Every line should tell the recruiter something that they don't already know.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For example, if you're a CS major applying to a software engineering role, your objective isn't going to provide any context to the recruiter. &lt;/p&gt;

&lt;p&gt;On the other hand, suppose you're a professional accountant, who's looking to break into software development. Then, the objective tells the recruiter upfront that you're trying to switch careers—and they won't look for a CS degree or developer experience as they skim through your résumé.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#education"&gt;
  &lt;/a&gt;
  Education
&lt;/h3&gt;

&lt;p&gt;Always cite details of your education—starting from your highest qualification first. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/6XX4V0O8a0xdS/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/6XX4V0O8a0xdS/giphy.gif" alt="study" width="500" height="270"&gt;&lt;/a&gt;&lt;br&gt;
If you're a Master's student, only mention details of your Master's and undergraduate degree. Some companies do have a certain cut-off GPA, so be sure to include your GPA.&lt;/p&gt;

&lt;p&gt;Some people do include &lt;code&gt;Relevant Coursework&lt;/code&gt; subsection in their &lt;code&gt;Education&lt;/code&gt; tab.&lt;/p&gt;

&lt;p&gt;However, you should use it only if needed.&lt;/p&gt;

&lt;p&gt;Being a CS major, doing courses in algorithm design and analysis, and operating systems isn't any interesting to the reviewer. If you're from a non-CS stream, but have supplemented your coursework with courses from the CS bucket—you may include them in the &lt;code&gt;Relevant Coursework&lt;/code&gt; section.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#technical-experience"&gt;
  &lt;/a&gt;
  Technical Experience
&lt;/h3&gt;

&lt;p&gt;This section should account for nearly &lt;code&gt;80%&lt;/code&gt; of your résumé, and should include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Relevant work experience and&lt;/li&gt;
&lt;li&gt;Projects&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;▶ We'll talk about this in greater detail in the next section.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#skills"&gt;
  &lt;/a&gt;
  Skills
&lt;/h3&gt;

&lt;p&gt;You should always organize your skills by category—ordered by proficiency.&lt;/p&gt;

&lt;p&gt;Here's an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Languages: Python, JavaScript
Libraries: NumPy, pandas, scikit-learn
Tools: Git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should always remember to demonstrate your skills in the other sections.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For example, if Python is the language that you're most proficient in—your projects should be indicative of your proficiency.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#leadership-volunteering"&gt;
  &lt;/a&gt;
  Leadership | Volunteering
&lt;/h3&gt;

&lt;p&gt;If you've been volunteering, involved in open-source communities, mentoring and the like, you may include them in this section.&lt;/p&gt;

&lt;p&gt;Ensure that you're communicating your interests and impact clearly, and keep this section short and towards the end of your résumé.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-to-describe-your-technical-experience"&gt;
  &lt;/a&gt;
  How to describe your technical experience
&lt;/h2&gt;

&lt;p&gt;This section is the most crucial section in your résumé—be sure to draft this section carefully.&lt;/p&gt;

&lt;p&gt;Here are a few suggestions on how you should explain your experience and projects.&lt;/p&gt;

&lt;p&gt;❌ Do not list down your job responsibilities. &lt;br&gt;
✔ Write what you accomplished.&lt;/p&gt;

&lt;p&gt;❌ Do not tell what you learned.&lt;br&gt;
✔ Instead, explain what you built with that knowledge.&lt;/p&gt;

&lt;p&gt;❌ Do not use weak language.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Avoid phrases like:

- Helped build, 
- worked as part of the team,
- helped implement
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;✔ Use strong language that's impactful.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Say:
- Built,
- Worked on,
- Implemented
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;❌ Do not be vague when specifying impact.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...worked on speeding up the inference pipeline --&amp;gt; # not quantifying impact
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;✔ Quantify impact wherever possible—talk numbers!.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...worked on speeding up the inference pipeline by 30% 
by reducing the inference time to 2.5 ms --&amp;gt; #quantifying impact
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;❌ Do not include many projects without explaining each of them. &lt;br&gt;
✔ Explain your projects clearly in detail—prioritize quality over quantity.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Be sure to specify the programming language, and tech stacks used.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Built a ____ using JavaScript, React.

Used Python to code a process scheduler.

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Never leave the recruiter guessing why the project is interesting/relevant. Explain clearly.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that you know how to draft all major sections in your résumé, let's list down a few concluding points.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#points-to-remember"&gt;
  &lt;/a&gt;
  Points to remember
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Have a résumé for every role that you'd be applying to.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;If you're interested in both software engineering and data analytics, be sure to draft a dedicated résumé for each of these roles. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Don't be terse in explaining your projects—including portfolio links doesn't suffice. &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The recruiter may not have time to look at your portfolio. So your  résumé should do the talking for you. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do not use fuzzy language just to make your projects sound look cool and complicated.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/WsNbxuFkLi3IuGI9NU/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/WsNbxuFkLi3IuGI9NU/giphy.gif" alt="explain me" width="480" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Prefer using simple and clear language instead—just the way you'd explain to your friends.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;🎯 And you've reached the end of this post on best practices in résumé writing.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Thanks for reading all the way up to here!😄&lt;/p&gt;

&lt;p&gt;Hope you found this post helpful. If you know someone who'd find this useful, do share with them as well.&lt;/p&gt;

&lt;p&gt;If you're currently looking for opportunities, I wish you loads of luck in your endeavors. &lt;br&gt;
&lt;a href="https://i.giphy.com/media/12XDYvMJNcmLgQ/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/12XDYvMJNcmLgQ/giphy.gif" alt="good-luck" width="480" height="359"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>resume</category>
    </item>
  </channel>
</rss>
