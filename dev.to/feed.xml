<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Marketing Your Mobile App, The Steps For Continued Success</title>
      <author>Krowser Web Services </author>
      <pubDate>Sun, 30 May 2021 11:51:50 +0000</pubDate>
      <link>https://dev.to/krowser/marketing-your-mobile-app-the-steps-for-continued-success-4bk3</link>
      <guid>https://dev.to/krowser/marketing-your-mobile-app-the-steps-for-continued-success-4bk3</guid>
      <description>&lt;p&gt;Here are some tips for continued success in marketing your app to new users and maintaining your existing userbase. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ask Users For Feedback&lt;/strong&gt;&lt;br&gt;
If people are using your app constantly, it is a sign that have made a connection with the product. Give them the opportunity to express their opinions with a popup invitation to leave a review, but remember that user experience should not be sacrificed by this tactic. Think about when and how you want to ask for a review and make sure it flows well with the user experience so it won’t frustrate users. The more strategically the popup is placed, the better the chances are for a positive review.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Consider A Burst Campaign&lt;/strong&gt;&lt;br&gt;
A “burst campaign” is one of the most popular techniques used by mobile app marketers who want to climb the app store ranks. The idea of a burst campaign is to provide a “burst” of exposure for your app in which you aggressively purchase paid media exposure over a short period of time – usually between 24 and 72 hours, depending on budget.&lt;br&gt;
The goal is to get as many paid installs as possible, boosting your ranking. All this with the hope of increasing the volume of quality organic installs – that should follow when the app is finally ranked high enough to be discovered. While you should attract more organic downloads from a successful burst campaign, continued paid advertising will maintain steady downloads. You need to keep the momentum going.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Offer A Referral Bonus&lt;/strong&gt;&lt;br&gt;
Offering your users a bonus or benefit when they promote your app online is a surefire way to get them to spread the word. With a staggering 3900% growth rate, Dropbox is an excellent example of how powerful referrals can be. The company had just 1,00,000 registered users in 2008, which climbed to a staggering 4,000,000 registered users within a mere 15 month period as a result of their referral program. This post from Localytics explains how Dropbox used referrals to exponentially increase their user base&lt;/p&gt;

</description>
      <category>android</category>
      <category>ios</category>
      <category>webdev</category>
      <category>marketing</category>
    </item>
    <item>
      <title>Java vs JavaScript. Key differences and similarities</title>
      <author>Coderslang: Become a Software Engineer</author>
      <pubDate>Sun, 30 May 2021 11:38:02 +0000</pubDate>
      <link>https://dev.to/coderslang/java-vs-javascript-key-differences-and-similarities-33mo</link>
      <guid>https://dev.to/coderslang/java-vs-javascript-key-differences-and-similarities-33mo</guid>
      <description>&lt;p&gt;The software programming world has progressed rapidly over time and has a lot of programming languages to offer. You might have heard about programming languages Java and JavaScript that sound similar in name and might have got confused about whether they're different names for the same language or are they different. Well, all your confusion will be clear after this brief yet full of knowledge blog.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-java"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is Java?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Java is an OOP (Object-orientated programming language), class-based, and multi-platform programming language having a VM (Virtual Machine) platform. OOP is a programming paradigm based on the concept of objects containing the code and data. The Virtual Machine helps you create compiled programs that have the flexibility to run anywhere, on any platform. Java refers to this concept as Write Once, Run Anywhere.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-get-started-with-writing-code-in-java"&gt;
  &lt;/a&gt;
  &lt;strong&gt;How to get started with writing code in Java&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;There are two simple set-up steps you need to follow:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Download and set up the Java SE Development kit&lt;/li&gt;
&lt;li&gt;Choose any text editor that you like&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I recommended you choose Notepad as a complete beginner since it's the most basic one. A different text editor or an IDE will also work, just try not to get too fancy, as you want to focus on the essentials now.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#writing-a-simple-code-in-java"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Writing a simple code in Java&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Let's see how you can simply print a &lt;code&gt;hello world&lt;/code&gt; program in Java.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="c1"&gt;// A Java Program used for printing a simple string (character input type, e.g. HelloWorld),&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;HelloWorld&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, World!"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#explanation-of-the-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Explanation of the code&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The first line you see starts with the generic comment statement that describes what our program does. You can see that it starts with &lt;code&gt;//&lt;/code&gt; which is a symbolic representation of a single line comment (a comment that's restricted to a single line).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Before we move onto the next line, let's explore the curly braces. Opening curly brace &lt;code&gt;{&lt;/code&gt; refers to the opening of the respective class or function, whereas ending curly brace &lt;code&gt;}&lt;/code&gt; refers to where it ends.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;class&lt;/code&gt; refers to an object constructor or, in simple words, a blueprint from which we create objects. Each class has a name, and in this case, our class name is &lt;code&gt;HelloWorld&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now coming towards the main method of our program, that is&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  public static void main(String[] args)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;. Let's break this down into chunks:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;public&lt;/code&gt; refers to this method being accessible to anyone from anywhere, which means it is globally available.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;static&lt;/code&gt; is a keyword that simply defines that this method is static and can't be changed.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;void&lt;/code&gt; is also a keyword that refers to a method not returning anything.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;main&lt;/code&gt; refers to the name of the Java main method.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;String args[]&lt;/code&gt; refers to the arguments that are being passed to the main method. &lt;code&gt;args&lt;/code&gt; refers to the name of the string. You can name &lt;code&gt;args&lt;/code&gt; with any other string name, it's just a standard naming used for it.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;System.out.println("Hello, World!");&lt;/code&gt; This is the actual output line where our &lt;code&gt;Hello, World!&lt;/code&gt; gets printed. Individual statements and variable declarations end with a semi-colon.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Sounds pretty complex for a program that just prints out a single string to the screen? That's true, and it's one of the reasons &lt;a href="https://js.coderslang.com"&gt;why learning JavaScript is a much better choice for beginner devs&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-javascript"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is JavaScript?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;JavaScript is a high-level scripting programming language that is lightweight and is normally used to make web pages dynamic and interactive. It can add dynamic text into HTML and is known for being the browser's language. We will discuss its detailed features in its comparison with Java.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-get-started-with-writing-code-in-javascript"&gt;
  &lt;/a&gt;
  &lt;strong&gt;How to get started with writing code in JavaScript&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;You just need to have the following 2 things to get started with JavaScript:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Browser (Google Chrome, Safari, Firefox, Internet Explorer)&lt;/li&gt;
&lt;li&gt;Text editor (Notepad, VS Code, Atom)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#how-to-write-your-first-javascript-program"&gt;
  &lt;/a&gt;
  How to write your first &lt;strong&gt;JavaScript program&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Let's see how you can write your first &lt;code&gt;hello world&lt;/code&gt; program in JavaScript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// A JavaScript Program used for printing a simple string (character input type, e.g. HelloWorld),&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#explanation-of-the-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Explanation of the code&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The first line is again the same single line comment, as we previously saw for the Java program.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In JavaScript, we simply use the statement&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  console.log
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;to print anything on the console (an object which provides access to the browser debugging console). In short, you can view it when:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You right-click on your mouse&lt;/li&gt;
&lt;li&gt;Click on inspect&lt;/li&gt;
&lt;li&gt;Select the console tab&lt;/li&gt;
&lt;li&gt;View the logged statement in the console&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now tell me, how much easier it is when compared to Java?&lt;/p&gt;

&lt;p&gt;You're right, it's not even close.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#differences-between-java-and-javascript"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Differences between Java and JavaScript&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;We can note the following major differences amongst the two languages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Programming Paradigm:&lt;/strong&gt; Java strictly follows the object-oriented programming paradigm, whereas JavaScript follows a multi-paradigm that includes object-oriented programming, procedural, and scripting programming language.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Code Execution:&lt;/strong&gt; Java applications have the flexibility of running on the JVM (virtual run time environment for Java), whereas JavaScript runs only on Browser-specific application-specific environments.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Objects:&lt;/strong&gt; Java objects are purely class-based whereas JavaScript objects are prototype-based.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Type Checking:&lt;/strong&gt; Java ensures strong type checking of its variables and functions before compilation, which makes the probability run or compile-time run quite low. However, JavaScript is weakly typed, the type of the variables is unknown until they get compiled, and hence, the chances of run or compile-time errors increase.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;File Extension:&lt;/strong&gt; Java has a &lt;code&gt;.java&lt;/code&gt; file extension, whereas JavaScript has a &lt;code&gt;.js&lt;/code&gt; file extension.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Multithreading:&lt;/strong&gt; Java supports multithreading (a process of executing two or more threads simultaneously to maximum utilization of CPU), whereas JavaScript doesn't.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Memory Usage:&lt;/strong&gt; Since Java has a lot going around in it, it occupies more space, whereas JavaScript occupies less.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Language Dependency:&lt;/strong&gt; Both languages can work independently on their own and can also pair up with other languages.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Concurrency Approach:&lt;/strong&gt; Java takes advantage of its multithreading ability and has a thread-based approach, whereas JavaScript follows an event-driven approach.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Performance:&lt;/strong&gt; Scripting languages are always more efficient than pure programming languages because of their nature of engagement, and hence, Java is less efficient and slow as compared to JavaScript.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#similarities-between-java-and-javascript"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Similarities between Java and JavaScript&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Any of the differences, right? Let's also explore what do these two have in common.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Browser Compatibility:&lt;/strong&gt; Both languages can run on a browser.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Support:&lt;/strong&gt; Both languages have a lot of online support community.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Syntax and Programming Concepts:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Though both are two different languages, both share the same core programming concepts and some syntax concepts such as:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Use of programming loops such as for loop, while loop.&lt;/li&gt;
&lt;li&gt;Use of conditional statements such as if and else if.&lt;/li&gt;
&lt;li&gt;Use of Math libraries such as Math.pow.&lt;/li&gt;
&lt;li&gt;Common shared syntax signs such as code block delimiters { }, semi-colon to end code statements.&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Similar Name:&lt;/strong&gt; This one's strange, but both Java and JavaScript have "Java" in common, though both languages are completely different.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;To sum it up, Java and JavaScript are two different languages that are different. A few similarities in them mainly come from the core programming principles, but apart from that, they both are two different worlds that share a similar name but diverge from each other majorly.&lt;/p&gt;

&lt;p&gt;Get my &lt;a href="https://learn.coderslang.com/free-ebooks/"&gt;free e-book&lt;/a&gt; to prepare for the technical interview or start to &lt;a href="https://js.coderslang.com"&gt;Learn Full-Stack JavaScript&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>java</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Understand React Js Hooks once and for all | part I</title>
      <author>Dimer BWimBA</author>
      <pubDate>Sun, 30 May 2021 11:23:52 +0000</pubDate>
      <link>https://dev.to/dimer191996/understand-react-js-hooks-once-and-for-all-part-i-86h</link>
      <guid>https://dev.to/dimer191996/understand-react-js-hooks-once-and-for-all-part-i-86h</guid>
      <description>&lt;p&gt;You'll already know now The React framework includes react hooks. Witch are Special hook functions that can be called from within a component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  function component(){

      //your react hook 

  return &amp;lt;&amp;gt;UI&amp;lt;/&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So By defining functions, we may create static or dumb react components. And UI components, on the other hand, are frequently dynamic; they may need to change the state of their data, respond to &lt;code&gt;lifecycle events&lt;/code&gt;, and access items from the &lt;code&gt;DOM&lt;/code&gt;, among other things.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;1) Reactive State &amp;gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function Component(){

   const [state] = useState('🍏')

  return &amp;lt;&amp;gt;UI&amp;lt;/&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;2) Side Effects &amp;gt; 🔛 &amp;gt; Effects &amp;gt; 📴&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function Component(){

  useEffect(() =&amp;gt; alert('💃'))

  return &amp;lt;&amp;gt;UI&amp;lt;/&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;3) Grab &amp;gt; HTML5 &amp;gt; Elements &amp;gt; ⭐&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function Component(){

  const el = useRef('😊')

  return &amp;lt;&amp;gt;UI&amp;lt;/&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;...more&lt;/p&gt;

&lt;p&gt;😠😠😠😠😠&lt;br&gt;
But prior to react &lt;code&gt;version 16.8&lt;/code&gt;, developers were required to write classes to take advantage of certain react features. &lt;/p&gt;

&lt;p&gt;😠😠😠😠😠&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#before"&gt;
  &lt;/a&gt;
  Before
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class btn extends React.Component{
     constructor(props) {
       super(props);
       this.state = {
         count:0
       }
     }
     render() {
       return (
         &amp;lt;p&amp;gt;{this.state.count}&amp;lt;/p&amp;gt;
     );
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;😊😊😊😊&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#after"&gt;
  &lt;/a&gt;
  After
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function Btn(){

   const [state] = useState({count:0})

   &amp;lt;p&amp;gt;{state.count}

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can still use &lt;code&gt;classes&lt;/code&gt; in react 😠... &lt;br&gt;
But &lt;code&gt;hooks&lt;/code&gt; 😊 generally provide a more ergonomic way to build components because you can reuse stateful logic without changing your component hierarchy. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💪💪💪React has 10 built in hooks, and you'll understand what every single one of them does by the end of four part series 'articles'. In addition, you'll learn how to build your own hooks from scratch to extract your own component logic into reusable functions 💪💪💪. So follow me bruh , let learn together .&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ax8qnYCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/umeos2whin555t7y7z91.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ax8qnYCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/umeos2whin555t7y7z91.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;                #let gooooo #👴👴👴👴
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Before we dive into  the react hooks world 👴👴, it's helpful to understand why hooks exist in the first place. In the past stateful logic or data that changes within the application was tightly coupled to a class based component. That means in order to work with reactive data, you needed to create a component that seems reasonable. But what it led to in reality was a complex tree of nested components.&lt;/p&gt;

&lt;p&gt;👴👴And this is where I have to admit that I used to really dislike and I never learned react because sharing any logic required some frustrating ‍👤 jujitsu like higher order components and render props, which are patterns that have you passing components as arguments to other components. And that just always felt way more complex to me than patterns you find in other frameworks like Angular. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/d0jIZ9i3ludE5ycGA1/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/d0jIZ9i3ludE5ycGA1/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;😊 Fortunately, 😊  hooks changed everything by giving you access to lower level features of react outside of the context of a component. When you work with hooks, you can think of them like low level primitives of the React framework that gives you special abilities that you wouldn't otherwise have in vanilla JavaScript. The hooks themselves are functions, which always start with the name of &lt;code&gt;use&lt;/code&gt;, because you're using the super powers of the React framework. Now before you start using hooks, there's really just one rule you should be aware of. &lt;/p&gt;

&lt;p&gt;And that's to only call them at the top level of a functional component. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OPc23XyD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yanxpn0dfaani0qweoog.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OPc23XyD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yanxpn0dfaani0qweoog.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
They don't work inside of regular JavaScript functions, nested functions, loops, or anything like that. &lt;/p&gt;

&lt;p&gt;The only exception to this rule is when building your own custom hooks, which we'll look at towards the end of these 'articles'. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N-lpVn3I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wf66zwmv13x4rew2v5gv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N-lpVn3I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wf66zwmv13x4rew2v5gv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#now-the-question-becomes-what-are-these-primitives-or-hooks-actually-do"&gt;
  &lt;/a&gt;
  Now the question becomes, what are these primitives or hooks actually do?
&lt;/h1&gt;

&lt;p&gt;Let's break them down one by one, starting with &lt;code&gt;useState&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--banipYJE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7lg5jm8d4v2d1698c2b7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--banipYJE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7lg5jm8d4v2d1698c2b7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;useState&lt;/code&gt; is easily the most important and often used hook . The purpose of &lt;code&gt;useState&lt;/code&gt; is to handle reactive data. any data that changes in the application is called state. And when the state changes, you want react to update the UI. So the latest changes are reflected to the end user. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The hook takes one optional argument, which is the default state, which we'll go ahead and set to zero the function and returns an array that contains two values you can use within your component. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--24LVEomK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zf5rvxdrwpki499w9bvv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--24LVEomK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zf5rvxdrwpki499w9bvv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The reason they're returned in an array is because we can destructur  them with JavaScript to easily assign the values to local variables that we can name whatever we want. &lt;/p&gt;

&lt;p&gt;The first value is the reactive data or state. If we then reference it in the UI, and its value changes in the future, React will automatically rebuild the UI to show the latest value, it'll start with a value of zero our default in the hook. &lt;/p&gt;

&lt;p&gt;But how do we then change its value in the future, the second element in the array is a setter function. For example, we might listen to the on click event on the button, and when clicked will call the set count function to increment the count by one. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JFkbLcLH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x3q9x5jhcwbzdwkckq4d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JFkbLcLH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x3q9x5jhcwbzdwkckq4d.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;😠If we compare this code to a class based component, you can see &lt;br&gt;
 down bellow it's far more complex. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zx_ea5----/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mokmr05076kueiamw7vh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zx_ea5----/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mokmr05076kueiamw7vh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;😠&lt;em&gt;We need a class to extend a react component than a constructor to initialize the state. And also notice how we're required to reference the this keyword all over the place. You state in my opinion is a much cleaner solution&lt;/em&gt;. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#now-were-ready-to-tackle-the-second-most-important-hook-raw-useeffect-endraw-"&gt;
  &lt;/a&gt;
  Now we're ready to tackle the second most important hook &lt;code&gt;useEffect&lt;/code&gt;.
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4gcMGJJP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5z28gr2ziozlgmfvdwar.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4gcMGJJP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5z28gr2ziozlgmfvdwar.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also happens to be one of the most #confusing to me and many other . So in order to understand it, you first need to understand the &lt;code&gt;component lifecycle&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Down below is a simplified breakdown of the component lifecycle, the component is added to the UI or mounted, which can only happen once then reactive data on the component can change or it's updated, which can happen multiple times. Then finally, at some point, that component will be removed from the UI or unmounted. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J6InbpFd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s28jpkdeyqxgf3vgst1b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J6InbpFd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s28jpkdeyqxgf3vgst1b.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now keep these three &lt;code&gt;lifecycle events&lt;/code&gt; or &lt;code&gt;side effects&lt;/code&gt; in mind as we talk about the use effect hook, which allows us to implement logic for all of them from within a single function API.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;UseEffect&lt;/code&gt; is a function that takes a function you define as its first argument, React will then run your function or a side effect after it is updated the DOM with the current implementation, it will run this function anytime stateful data changes on the component. That means it'll run once when the component is initialized with a default value, then run again each time the state or account is updated. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J6InbpFd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s28jpkdeyqxgf3vgst1b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J6InbpFd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s28jpkdeyqxgf3vgst1b.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;💪💪💪In most cases, though, you'll likely want more fine grained control over that behavior. For example, imagine we need to fetch data when the component is first initialized, then update the state asynchronously after the data has been fetched. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uXxxN-5S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/czprrsqosgrdlaj2sv2t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uXxxN-5S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/czprrsqosgrdlaj2sv2t.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This previews code in the image would result in an infinite loop. Because every time we do the fetch, we then update the state, which then triggers another fetch, and so on forever. &lt;/p&gt;

&lt;p&gt;The way we address this is by adding a second argument to use a fact, which is an array of dependencies. If you add an empty array, it means there are no dependencies, which means it will only run once when the component is first initialized. But in other cases, you might want to rerun the function anytime certain staple data has changed, you can do that by adding the state to the dependencies array. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U2-N6y2---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7p7j0h3wu0djdcq9myk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U2-N6y2---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7p7j0h3wu0djdcq9myk.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Now react will track that value, and any time it changes, it will rerun this function&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;Now one last thing you might want to do with &lt;code&gt;useEffect&lt;/code&gt; is run some teardown code when the component is destroyed. The way we implement a teardown function is to return a function from our use effect callback, React will take the function returned here, then call it when the component is destroyed. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_pAY2e8Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kgggiownkwchfunkl98i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_pAY2e8Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kgggiownkwchfunkl98i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#and-with-that-lets-move-on-to-our-next-hook-use-context"&gt;
  &lt;/a&gt;
  And with that, let's move on to our next hook use context.
&lt;/h1&gt;

&lt;p&gt;This hook allows you to work with react context API, which itself is a mechanism that allows you to share or scope values throughout the entire component tree. &lt;/p&gt;

&lt;p&gt;Part 2 Tomorrow &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/l41K4KlVE8dgozf8I/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/l41K4KlVE8dgozf8I/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Buying a new domain is not the way to start your side project</title>
      <author>Rinas</author>
      <pubDate>Sun, 30 May 2021 11:08:22 +0000</pubDate>
      <link>https://dev.to/onerinas/buying-a-new-domain-is-not-the-way-to-start-your-side-project-21e8</link>
      <guid>https://dev.to/onerinas/buying-a-new-domain-is-not-the-way-to-start-your-side-project-21e8</guid>
      <description>&lt;p&gt;💡 When an idea strikes, the very next thing to do is buy a domain 😅&lt;/p&gt;

&lt;p&gt;I do this a lot and started to slow down recently. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You take a shower and the idea generator puts an awesome idea in your head&lt;/li&gt;
&lt;li&gt;It would be the most incredible idea you have ever come across. &lt;/li&gt;
&lt;li&gt;Rush to laptop see if that perfect domain name is available and boom 💥 &lt;/li&gt;
&lt;li&gt;What did just happen? You got a dopamine effect of achieving something. Feels like the project is half done right? Nope. Wrong. &lt;/li&gt;
&lt;li&gt;In reality, you did nothing. You just paid some few $$&lt;/li&gt;
&lt;li&gt;Now you have 1 year to work on the project before it expires. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Guess what? You will probably let it expire or worse, renew it for one more year assuming some miracle is gonna happen this year. Nope, you are wrong again. &lt;/p&gt;

&lt;p&gt;I started keeping aside at least an hour for side projects starting March and obviously, I ended up buying few domains - nonolist.me, shipit.club, myfailedstartups.com&lt;/p&gt;

&lt;p&gt;Wanna know the current status of these projects? MVP is not ready yet. &lt;/p&gt;

&lt;p&gt;Meanwhile, I started thinking about this domain hoarding problem and hit the aha shower moment again 💡&lt;/p&gt;

&lt;p&gt;Let's build a website to find out how many domains people own 😂&lt;/p&gt;

&lt;p&gt;For some miraculous reason, I didn't buy a domain for this 😹&lt;/p&gt;

&lt;p&gt;📝 I created a form using typeform and tweeted the link asking how many domains people own. &lt;/p&gt;

&lt;p&gt;😱 oh boy, many owned hundreds of domain names &lt;/p&gt;

&lt;p&gt;👨‍💻 Ok, now I hit that rush to buy a domain to build a website for this. &lt;/p&gt;

&lt;p&gt;🐣 &lt;a href="https://highscore.domains"&gt;HIGHSCORE.domains&lt;/a&gt; is born. A fun leaderboard to find out who owns more domains. &lt;/p&gt;

&lt;p&gt;🤔 I know you are reading this and thinking "oh wait, how many domains do I own actually?" 🤣&lt;/p&gt;

&lt;p&gt;😎 HIGHSCORE.domains is the project I bought the domain after seeing people are responding to it and might have some potential. &lt;br&gt;
Guess what? this is the only project which is live and not yet another "Sign up for early access" page.&lt;/p&gt;

&lt;p&gt;🙋 Do you face this problem as well - ie, ended up buying domains and not use them? Is there any tricks/realization you had recently which helped to overcome this?  &lt;/p&gt;

</description>
      <category>sideprojects</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Scheduling API for Digital Courses and e-learning</title>
      <author>Spurwing</author>
      <pubDate>Sun, 30 May 2021 10:57:53 +0000</pubDate>
      <link>https://dev.to/spurwing/scheduling-api-for-digital-courses-and-e-learning-7hj</link>
      <guid>https://dev.to/spurwing/scheduling-api-for-digital-courses-and-e-learning-7hj</guid>
      <description>&lt;p&gt;The world of work, learning, and play has been forever changed. What was once a source of anxiety has now begun to bear fruit, showing us that the new normal is a frontier with some exciting opportunities for &lt;strong&gt;training and learning&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;As businesses and institutions acclimatize to their new environment, attempting to schedule classes around the world is becoming a costly problem to fix.&lt;/p&gt;

&lt;p&gt;Spurwing's time management solutions and API systems can help institutions in this transition: offering &lt;strong&gt;scheduling interfaces&lt;/strong&gt; that can even help businesses open themselves to the training systems of the future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-spurwings-api-system-help-students-access-classes-around-the-world"&gt;
  &lt;/a&gt;
  How can Spurwing's API System Help Students Access Classes Around the World?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cif3K58l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/enenuzg7m6xayswf4hg8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cif3K58l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/enenuzg7m6xayswf4hg8.png" alt="scheduling api for education"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#navigating-world-time-zones-with-ease"&gt;
  &lt;/a&gt;
  Navigating World Time Zones with Ease
&lt;/h3&gt;

&lt;p&gt;Distance learning and work from home have spread students, teachers, or tutors around the world. And, for perhaps the first time, businesses are having to contend with digital classrooms full of learners in entirely different time zones.&lt;/p&gt;

&lt;p&gt;Spurwing's Scheduling API can keep all your participants up-to-date and on time with our automated notifications – available to send out at any time of the day.&lt;/p&gt;

&lt;p&gt;Simply customise our pre-designed templates (or disable them and craft your own) and send out &lt;strong&gt;booking confirmations or reminders&lt;/strong&gt; via e-mail and SMS. This will reduce the risk of missed appointments, keeping your classes on the schedule and your trainees learning.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#making-scheduling-convenient-intuitive-and-efficient"&gt;
  &lt;/a&gt;
  Making Scheduling Convenient, Intuitive, and Efficient
&lt;/h3&gt;

&lt;p&gt;Best of all: there is no need to overhaul your institution's digital infrastructure to do it.&lt;/p&gt;

&lt;p&gt;The Spurwing Scheduling API was specifically crafted to solve these problems while delivering a feature set that integrates neatly into your institution's existing software, communication channels, workflows to maximise productivity and appeal to your participants.&lt;/p&gt;

&lt;p&gt;You can enjoy a series of innovative, bespoke applications, features, and integrations to keep your online classes and digital training courses running smoothly:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fully &lt;strong&gt;two-way synced&lt;/strong&gt; with Google Calendar, Outlook, and iCal, enjoy one-click add-to-calendar links and make full use of the scheduling systems your participants are already using to organise their time.&lt;/li&gt;
&lt;li&gt;Discord, Slack, and Facebook Messenger bots ensure that the API is fully optimizable to whichever workflows your training courses are making use of.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MvRO86Hg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pgs9l4pi20bff0e1nhrp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MvRO86Hg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pgs9l4pi20bff0e1nhrp.png" alt="scheduling for education"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-api-that-keeps-on-giving"&gt;
  &lt;/a&gt;
  The API That Keeps on Giving
&lt;/h3&gt;

&lt;p&gt;Not only that, &lt;strong&gt;Spurwing's scheduling API&lt;/strong&gt; is feature-rich, non-intrusive, and all our plans come with unparalleled customer support:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Spurwing has developed an &lt;strong&gt;open-source marketplace&lt;/strong&gt; for features, bots, widgets, and interface tools, meaning that there are truly no limits to what can be done with our world-class API.&lt;/li&gt;
&lt;li&gt;All templates, widgets, and interfaces can be &lt;strong&gt;entirely customized&lt;/strong&gt; with your institution or business's branding. Not a single mention of Spurwing in sight!&lt;/li&gt;
&lt;li&gt;We offer both &lt;strong&gt;developer and product support&lt;/strong&gt; on your terms. We are available via email or live chat whenever you need us. We are even happy to join your team's Slack channel to stay in the loop.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0EVCYSPk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4t9qvb1349liomhvnabo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0EVCYSPk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4t9qvb1349liomhvnabo.png" alt="scheduling api for online classes"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#online-virtual-reality-classes-with-spurwings-scheduling-api"&gt;
  &lt;/a&gt;
  Online Virtual Reality Classes with Spurwing's Scheduling API
&lt;/h2&gt;

&lt;p&gt;As the world of learning changes, so too do the platforms on which we operate. Throughout the COVID-19 pandemic, we have seen a creeping adoption of &lt;strong&gt;Virtual Reality platforms&lt;/strong&gt; for distance learning and work-from-home.&lt;/p&gt;

&lt;p&gt;Virtual Reality is truly the future. But it opens a world of problems for businesses already struggling to cope with the challenges of organizing schedules across various &lt;strong&gt;time zones&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Spurwing's bespoke integrations and open-source marketplace make our Scheduling API the perfect launch-point for businesses looking to branch out and include VR mechanics without overhauling their management systems.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Spurwing's Scheduling API offers a lifeline to companies and learning institutions looking to navigate the new world of work and learning.&lt;/p&gt;

&lt;p&gt;From a feature-rich open-source marketplace to unparalleled customer support, your institution will never be left hung out to dry. Our Scheduling API is easy to use and integrates seamlessly into your current systems.&lt;/p&gt;

&lt;p&gt;Our Scheduling API can help your learners stay on track, navigate the perils of the new world of work, and open your platforms to the learning solutions of the future.&lt;/p&gt;

&lt;p&gt;What's not to love? Join thousands of businesses that have adopted Spurwing and &lt;a href="https://www.spurwing.io/learn-more"&gt;schedule a 30-minute intro call with one of our developers today&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Continue reading what Spurwing can do here - &lt;a href="https://github.com/Spurwing/Appointment-Scheduling-API"&gt;https://github.com/Spurwing/Appointment-Scheduling-API&lt;/a&gt;&lt;/p&gt;

</description>
      <category>writing</category>
      <category>devops</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
    <item>
      <title>Legacy Interface</title>
      <author>Md. Kawser Habib </author>
      <pubDate>Sun, 30 May 2021 10:47:03 +0000</pubDate>
      <link>https://dev.to/khabib97/legacy-interface-edo</link>
      <guid>https://dev.to/khabib97/legacy-interface-edo</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Suppose you are working on a &lt;strong&gt;very very big&lt;/strong&gt; java project.&lt;br&gt;
&lt;em&gt;Congratulations!!!&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#problem-scenario"&gt;
  &lt;/a&gt;
  Problem Scenario
&lt;/h3&gt;

&lt;p&gt;Suddenly your senior comes to your desk and says- "Hey X, we need to add a new method to &lt;em&gt;XYX&lt;/em&gt; interface".&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#inside-your-brain"&gt;
  &lt;/a&gt;
  Inside your brain
&lt;/h3&gt;

&lt;p&gt;Holy Crap! &lt;/p&gt;

&lt;p&gt;Impossible, I can't do this. &lt;/p&gt;

&lt;p&gt;It will break all existing code blocks. &lt;/p&gt;

&lt;p&gt;No, it is not possible. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-it-is-not-possible"&gt;
  &lt;/a&gt;
  Why it is not possible?
&lt;/h3&gt;

&lt;p&gt;According to &lt;a href="https://docs.oracle.com/javase/tutorial/java/concepts/interface.html"&gt;oracle documents&lt;/a&gt;, a java interface is a group of related methods with empty bodies. Like-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;interface Bicycle {

    //  wheel revolutions per minute
    void changeCadence(int newValue);

    void changeGear(int newValue);

    void speedUp(int increment);

    void applyBrakes(int decrement);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Suppose, already 100 classes implement Bicycle interface. So, if you want to add a new method in the Bicycle interface-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You need to modify 100 classes. Complete the method's body in each and every classes, who implements bicycle interface.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#can-it-be-a-feasible-solution"&gt;
  &lt;/a&gt;
  Can it be a feasible solution?
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;No, never. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h3&gt;

&lt;p&gt;Java 8 introduced completely a new concept to overcome this crucial situation. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It is &lt;strong&gt;default method&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Using default keyword, you can add a &lt;em&gt;complete method&lt;/em&gt; in a java interface(&lt;em&gt;magic&lt;/em&gt;), this will help you maintain existing legacy code, untouched.&lt;/p&gt;

&lt;p&gt;With a new default method in Bicycle interface-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;interface Bicycle {

    void changeCadence(int newValue);

    void changeGear(int newValue);

    void speedUp(int increment);

    void applyBrakes(int decrement);

    //method with body in an interface
    default void saveTheWord(){
      System.out.println("Haha! it is a magic");
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, you don't need to modify 100 existing classes(if you wish you can). However, after this point, newly implemented classes can use/override this method if they want.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#extending-interfaces-that-contain-default-methods"&gt;
  &lt;/a&gt;
  Extending Interfaces That Contain Default Methods
&lt;/h3&gt;

&lt;p&gt;When you extend an interface that contains a default method, you can do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Not mention the default method at all, which lets your extended interface inherit the default method.&lt;/li&gt;
&lt;li&gt;Redeclare the default method, which makes it abstract.&lt;/li&gt;
&lt;li&gt;Redefine the default method, which overrides it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cheers"&gt;
  &lt;/a&gt;
  Cheers
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GrwHHxc_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i716wjvko2i9tl38841y.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GrwHHxc_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i716wjvko2i9tl38841y.jpg" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

</description>
      <category>java</category>
    </item>
    <item>
      <title>Confusing Terms in the Git Terminology</title>
      <author>Pragati Verma</author>
      <pubDate>Sun, 30 May 2021 10:43:56 +0000</pubDate>
      <link>https://dev.to/pragativerma18/confusing-terms-in-the-git-terminology-1578</link>
      <guid>https://dev.to/pragativerma18/confusing-terms-in-the-git-terminology-1578</guid>
      <description>&lt;p&gt;&lt;a href="https://git-scm.com/"&gt;&lt;strong&gt;Git&lt;/strong&gt;&lt;/a&gt; and &lt;a href="https://github.com/"&gt;&lt;strong&gt;GitHub&lt;/strong&gt;&lt;/a&gt; are at the core of open source in today’s programming world. However, there are a lot of confusing terms that often seem similar yet can have conflicting meanings and uses. Let’s demystify these confusing terms by decoding their underlying meanings.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;em&gt;This article expects some knowledge of Git and GitHub.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cVSSICDX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1600/1%2AZIrFsOM49UJ7dlmATwkzIg.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cVSSICDX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1600/1%2AZIrFsOM49UJ7dlmATwkzIg.gif" alt="Octacat gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#origin-and-upstream"&gt;
  &lt;/a&gt;
  Origin and Upstream
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;From &lt;a href="https://git-scm.com/doc"&gt;Git Documentation&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When you fork a repo and clone it locally, then there is a default remote called &lt;strong&gt;origin&lt;/strong&gt; that points to your fork on GitHub, not the original repo it was forked from.&lt;br&gt;
To keep track of the original repo, you need to add another remote named &lt;strong&gt;upstream&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This confusion arises when you are working on the clone of a forked repo. &lt;strong&gt;Upstream&lt;/strong&gt; is what you would use to fetch from the original repo to keep your local copy in sync with the project you wanted to contribute to. Meanwhile, &lt;strong&gt;origin&lt;/strong&gt; is what you would use to pull and push code to your fork, and thereafter you can contribute back to the upstream repo by making a pull request.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oEi39Vsp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2A2VsgQel00bwqhvKN8qHNCA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oEi39Vsp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2A2VsgQel00bwqhvKN8qHNCA.png" alt="Origin vs Upstream"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remember&lt;/strong&gt;: Remotes like &lt;code&gt;upstream&lt;/code&gt; and &lt;code&gt;origin&lt;/code&gt; are simply an alias that stores the URL of repositories. They can be named anything, but it’s a convention to set original repo’s remote as upstream.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fetch-and-pull"&gt;
  &lt;/a&gt;
  Fetch and Pull
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;From &lt;a href="https://git-scm.com/doc"&gt;Git Documentation&lt;/a&gt;&lt;/strong&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;git fetch&lt;/code&gt; can fetch from either a single named repository or URL or from several repositories at once.&lt;br&gt;
&lt;code&gt;git pull&lt;/code&gt; incorporates changes from a remote repository into the current branch.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l5cTI0Ww--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1224/1%2Ab50bU2iCz4fCf3ZuOn-yfw.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l5cTI0Ww--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1224/1%2Ab50bU2iCz4fCf3ZuOn-yfw.jpeg" alt="fetch vs pull"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git fetch&lt;/code&gt; is the command that tells your local git to retrieve the latest meta-data info from the original yet doesn’t do any file transferring. It’s more like just checking to see if there are any changes available. &lt;code&gt;git pull&lt;/code&gt;, on the other hand, git fetch and applies the changes from the remote repository to the local repository.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remember&lt;/strong&gt;: &lt;code&gt;git pull&lt;/code&gt; is shorthand for &lt;code&gt;git fetch&lt;/code&gt; followed by &lt;code&gt;git merge FETCH_HEAD&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Putting it rather simply, &lt;code&gt;git fetch&lt;/code&gt; can be used to know the changes done in the remote repo/branch since your last pull. This is useful to allow for checking before doing a git pull, which could change files in your current branch and working copy and potentially lose your changes, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8m2KEOLt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1216/1%2AlIGZ2jFMwVcp0-q12Ba2FA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8m2KEOLt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1216/1%2AlIGZ2jFMwVcp0-q12Ba2FA.png" alt="fetch vs pull"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git fetch&lt;/code&gt; can be helpful in several scenarios, one of them being slightly optimizing your workflow to reduce network hits. Each git pull involves a &lt;code&gt;git fetch&lt;/code&gt;, so if you want to get a pull on five different branches, you have four redundant extra &lt;code&gt;git fetch&lt;/code&gt; calls.&lt;br&gt;
Also, &lt;code&gt;git fetch&lt;/code&gt; can often save you in situations you are working offline or working on the go, maybe on a train, but you want to make sure that you have all the changes from every branch available to you while working remotely. You can simply git fetch once while you’re on the network, and then leave. Later, without a network connection, you can manually &lt;code&gt;git checkout branch&lt;/code&gt;; &lt;code&gt;git merge origin/branch&lt;/code&gt; to merge the changes you previously fetched.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#switch-and-checkout"&gt;
  &lt;/a&gt;
  Switch and Checkout
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;From &lt;a href="https://git-scm.com/doc"&gt;Git Documentation&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;git switch&lt;/code&gt; switches to a specified branch. The working tree and the index are updated to match the branch.&lt;br&gt;
&lt;code&gt;git checkout&lt;/code&gt; updates files in the working tree to match the version in the index or the specified tree.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;git switch&lt;/code&gt; is not a new feature but an additional command to switch/change branch feature which is already available in the overloaded git checkout command. Hence, to separate the functionalities, &lt;strong&gt;Git 2.23&lt;/strong&gt; introduced the new &lt;code&gt;git switch branch&lt;/code&gt; command which is an attempt to start to scale back to the responsibilities without breaking backward compatibility.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5-EMDruh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bluecast.tech/wp-content/uploads/2019/09/git_switch_branch_vs_git_Checkout_branch-1024x521.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5-EMDruh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bluecast.tech/wp-content/uploads/2019/09/git_switch_branch_vs_git_Checkout_branch-1024x521.png" alt="Checkout vs Switch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;git checkout&lt;/code&gt; command operates upon three distinct entities: files, commits, and branches. To put it simply, if you modify a file but haven’t staged the changes, then &lt;code&gt;git checkout &amp;lt;filename&amp;gt;&lt;/code&gt; will discard the modifications and you would remain on the same branch, while &lt;code&gt;git checkout &amp;lt;commit hash&amp;gt;&lt;/code&gt; lets you roll back to an older commit, whereas &lt;code&gt;git checkout &amp;lt;branch&amp;gt;&lt;/code&gt; would switch the branches, hence, to avoid this confusion, &lt;code&gt;git switch&lt;/code&gt; was introduced.&lt;/p&gt;

&lt;p&gt;Below are the three most common use cases of &lt;code&gt;git checkout&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J3ZblWe1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1276/1%2AsHJdaHsRpAzCk_ib4x4gCA.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J3ZblWe1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1276/1%2AsHJdaHsRpAzCk_ib4x4gCA.jpeg" alt="git checkout commit"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y96kV12G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1276/1%2AkODKf_nR0rwv3ZOr98cEhg.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y96kV12G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1276/1%2AkODKf_nR0rwv3ZOr98cEhg.jpeg" alt="git checkout branch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d-cbkW_8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1276/1%2AJwsbBKmfqWuyadWCK275Ag.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d-cbkW_8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1276/1%2AJwsbBKmfqWuyadWCK275Ag.jpeg" alt="git checkout file"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#head-and-head"&gt;
  &lt;/a&gt;
  HEAD~ and HEAD^
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;~&lt;/code&gt;(tilde) and &lt;code&gt;^&lt;/code&gt;(caret) symbols are used to point to a position relative to a specific commit. The symbols are used together with a commit reference, typically &lt;code&gt;HEAD&lt;/code&gt;(represents the current snapshot of a branch) or a commit hash.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jrMCbybJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1200/1%2AhxjscRxtC0YpXdNf-9YmoA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jrMCbybJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1200/1%2AhxjscRxtC0YpXdNf-9YmoA.png" alt="head terminology"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;~n&lt;/code&gt; refers to the nth grandparent. &lt;code&gt;HEAD~1&lt;/code&gt; refers to the commit’s first parent. &lt;code&gt;HEAD~2&lt;/code&gt; refers to the first parent of the commit’s first parent.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;-&lt;code&gt;^n&lt;/code&gt; refers to the nth parent. &lt;code&gt;HEAD¹&lt;/code&gt; refers to the commit’s first parent. &lt;code&gt;HEAD²&lt;/code&gt; refers to the commit’s second parent. A commit can have two parents in a merge commit.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#revert-and-reset"&gt;
  &lt;/a&gt;
  Revert and Reset
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;From &lt;a href="https://git-scm.com/doc"&gt;Git Documentation&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;git revert&lt;/code&gt; is used to record some new commits to reverse the effect of some earlier commits (often only a faulty one).&lt;br&gt;
&lt;code&gt;git reset&lt;/code&gt; resets the current &lt;code&gt;HEAD&lt;/code&gt; to the specified state.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The &lt;code&gt;git revert&lt;/code&gt; command is used for undoing changes to a repository’s commit history. It is used to invert the changes introduced by a specific commit and append a new commit with the resulting inverse content. This can be useful for tracking down a bug introduced by a single commit so that it can be automatically fixed by a &lt;code&gt;git revert&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---vpPYyzu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1334/1%2AgwwLoCvrGdTPk6QfX7PZfQ.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---vpPYyzu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1334/1%2AgwwLoCvrGdTPk6QfX7PZfQ.jpeg" alt="reset vs revert"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git reset&lt;/code&gt; is another complex and versatile git command used for undoing changes, however, &lt;code&gt;git reset&lt;/code&gt; will move the &lt;code&gt;HEAD&lt;/code&gt; ref pointer and the current branch ref pointer whereas the &lt;code&gt;git revert&lt;/code&gt; command doesn’t move the &lt;code&gt;HEAD&lt;/code&gt; ref pointer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8IMKOS4h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.stack.imgur.com/UWGiw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8IMKOS4h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.stack.imgur.com/UWGiw.png" alt="git reset"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Putting it simply, if you have already pushed your branch somewhere or someone pulled from your branch, your only option is to &lt;code&gt;git revert&lt;/code&gt; to undo the changes. Meanwhile, if you have kept your commits entirely local and private, you can simply use &lt;code&gt;git reset&lt;/code&gt; to undo the changes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zhr-cYYE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2A8q5OTBysupIfkpROkbH_qg.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zhr-cYYE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2A8q5OTBysupIfkpROkbH_qg.jpeg" alt="reset vs revert"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#merge-and-rebase"&gt;
  &lt;/a&gt;
  Merge and Rebase
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;From &lt;a href="https://git-scm.com/doc"&gt;Git Documentation&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;git merge&lt;/code&gt; incorporates changes from the named commits (since the time their histories diverged from the current branch) into the current branch.&lt;br&gt;
&lt;code&gt;git rebase&lt;/code&gt; reapplies commits on top of another base tip.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wAgKfpxb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2A1C7Rysd6vNCq2DGXaR1zuw.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wAgKfpxb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2A1C7Rysd6vNCq2DGXaR1zuw.jpeg" alt="rebase vs merge"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Both of these commands are designed to integrate changes from one branch into another branch, the difference lies in the way they do it. &lt;strong&gt;Rebasing&lt;/strong&gt; is the process of moving or combining a sequence of commits to a new base commit while merging ties the histories of both branches and is always a forward-moving change record, hence, doesn’t change the existing branches in any way.&lt;br&gt;
The major benefit of rebasing is that you get a much cleaner project history as it eliminates the unnecessary merge commits required by git merge.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UdyG4P_R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2As9vhZ0Arc0ViAnl9ksy_Ew.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UdyG4P_R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2As9vhZ0Arc0ViAnl9ksy_Ew.png" alt="rebase vs merge"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Rebasing works by transferring each local commit to the updated master branch one at a time. This means that you catch merge conflicts on a commit-by-commit basis rather than resolving all of them in one massive merge commit.&lt;br&gt;
Moreover, rebasing makes it easier to figure out where bugs were introduced and if necessary to roll back changes with minimal impact on the project.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Use this handy &lt;a href="https://www.atlassian.com/git/tutorials/atlassian-git-cheatsheet"&gt;git cheat sheet&lt;/a&gt; guide to enhance your workflow.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That’s all for this article. I hope that it would have helped you demystify some of the confusing terminologies related to git and GitHub. Please comment with your valuable suggestions and feedback.&lt;br&gt;
In case you want to connect with me, follow the links below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/pragativerma18/"&gt;LinkedIn&lt;/a&gt; | &lt;a href="https://github.com/PragatiVerma18/"&gt;GitHub&lt;/a&gt; | &lt;a href="https://twitter.com/pragati_verma18"&gt;Twitter&lt;/a&gt; | &lt;a href="https://medium.com/@itispragativerma"&gt;Medium&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>github</category>
      <category>codenewbie</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Multiplayer Learning in Public with Roam Research</title>
      <author>Odysseas Lamtzidis</author>
      <pubDate>Sun, 30 May 2021 10:23:35 +0000</pubDate>
      <link>https://dev.to/odyslam/a-system-for-learning-in-public-with-roam-research-62h</link>
      <guid>https://dev.to/odyslam/a-system-for-learning-in-public-with-roam-research-62h</guid>
      <description>&lt;p&gt;I have started an exciting new project, that will go in parallel with &lt;strong&gt;everything&lt;/strong&gt; that I am doing. In short, it's called &lt;strong&gt;Learning in Public&lt;/strong&gt; and I have written about it in this blog post [[Learning in Public intro post]].&lt;/p&gt;

&lt;p&gt;Learning in public serves 3 main functions, which I am refining every day that I use this system.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It forces me to write down and note every &lt;em&gt;single&lt;/em&gt; thing that I write. Although it slows things down, I can later document what I learn.&lt;/li&gt;
&lt;li&gt;It's a call for like-minded people. Learning is simply much more fun when learning with others. Moreover, I find it difficult to participate in 10 different domain-specific communities. &lt;strong&gt;People are multi-faceted, and I want this community to be too.&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It's a great repository to help others get up to speed in the domains that I cover.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Visit the Graph on &lt;a href="https://roamresearch.com/#/app/Symposium/page/t9PFemV3W"&gt;Roam Research&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Read the blog post on &lt;a href="https://roamresearch.com/#/app/Symposium/page/XCjPplbNs"&gt;Roam Research&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#roam-research"&gt;
  &lt;/a&gt;
  Roam Research
&lt;/h2&gt;

&lt;p&gt;As I hinted in the title, I opted to go for Roam Research. The choice was a no-brainer, as it's by far the lowest friction that I had with writing down things. It's snappy, yet powerful. &lt;/p&gt;

&lt;p&gt;With the power of &lt;code&gt;[[pages]]&lt;/code&gt; and &lt;code&gt;((blocks))&lt;/code&gt;, you can do project management and any kind of organization you want. It needs some experimentation and time, but it's possible. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E3ZOwjSF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252FnPwsaE2pqW.png%3Falt%3Dmedia%26token%3D3231c642-772e-42c5-a7f2-7d971dd8dd01" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E3ZOwjSF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252FnPwsaE2pqW.png%3Falt%3Dmedia%26token%3D3231c642-772e-42c5-a7f2-7d971dd8dd01" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For those who don't know Roam, the TL;DR version  is the following. &lt;/p&gt;

&lt;p&gt;In Roam research, every bullet that you see is a block. It has a hierarchal structure. While writing you can either reference entire pages or blocks. When you reference a page, in essence you embed a link to that page, while you create a &lt;code&gt;backlink&lt;/code&gt; in that page towards the page that you made the reference. The same for blocks. &lt;/p&gt;

&lt;p&gt;In essence, you can use &lt;code&gt;[[pages]]&lt;/code&gt; as both a page to write into or a tag to anchor the children. For example, if I have the systems that I use inside a &lt;code&gt;[[project system]]&lt;/code&gt; page, I can go to that page and get an overview of &lt;strong&gt;all the systems&lt;/strong&gt; that I am using. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sm2piru7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252F2ExoLyUEjf.png%3Falt%3Dmedia%26token%3D7354c580-3598-4bab-a970-9f2082ed1345" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sm2piru7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252F2ExoLyUEjf.png%3Falt%3Dmedia%26token%3D7354c580-3598-4bab-a970-9f2082ed1345" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the same reason I use tags as column names for the kanban. I can easily get a view of all the items that are currently in the &lt;code&gt;DOING&lt;/code&gt; column. Moreover, using filters, I can do advanced filtering. For example, all the &lt;em&gt;blocks&lt;/em&gt; that have a &lt;code&gt;project DOING&lt;/code&gt; parent and  &lt;code&gt;Learning in Public&lt;/code&gt;. Of course, this particular example is not very helpful, since I could simply visit the project page for &lt;code&gt;Learning in Public&lt;/code&gt;, but you get the idea.&lt;/p&gt;

&lt;p&gt;At this point it's important to note that a &lt;code&gt;#tag&lt;/code&gt; and a &lt;code&gt;[[page]]&lt;/code&gt; work exactly the same way. The difference is only visual, perhaps to have them implicitly for different uses.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SKlZK-S4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252FPk_IbNkHRU.png%3Falt%3Dmedia%26token%3Db8b638d7-688f-4762-b181-8e870ad84e11" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SKlZK-S4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252FPk_IbNkHRU.png%3Falt%3Dmedia%26token%3Db8b638d7-688f-4762-b181-8e870ad84e11" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With these primitives in mind, let's see the actual system that I am using. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-structure"&gt;
  &lt;/a&gt;
  The structure
&lt;/h2&gt;

&lt;p&gt;The system can be divided into 2 main groups. &lt;/p&gt;

&lt;p&gt;The System: How I use the graph in my every day and how I hope that others will do too&lt;/p&gt;

&lt;p&gt;The Ontology: How knowledge is organized in this repository.&lt;/p&gt;

&lt;p&gt;Let's start with the ontology, which is basically a cool word to signify "structure". We will see what are the building blocks of this repository and why I chose to organize it that way. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ontology"&gt;
  &lt;/a&gt;
  Ontology
&lt;/h2&gt;

&lt;p&gt;The repository uses a set of &lt;strong&gt;tags&lt;/strong&gt; and &lt;strong&gt;pages&lt;/strong&gt; to organize knowledge. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tags"&gt;
  &lt;/a&gt;
  Tags
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;[[fleeting notes]]&lt;/strong&gt;: raw notes about something. They are meant to be converted into notes for longer storage (evergreen). Using queries inside a [[project]], we aggregate all the &lt;em&gt;fleeting notes&lt;/em&gt; for that particular project. They are meant to be discarded once they have been either discarded or converted to evergreen notes.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;[[external resources]]&lt;/strong&gt;: Tags external content for further research. All links should be anchored by this tag so that we can quickly view all the external links for a particular [[Location of Knowledge]].&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;[[open question]]&lt;/strong&gt;: An unanswered question that I save so that we don't forget about it. It is meant to have an inbox for all our open questions about a particular project so that we can quickly address them.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;[[project version]]&lt;/strong&gt; You can define different project versions so that you can group notes that are for current version or the next iteration.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#pages"&gt;
  &lt;/a&gt;
  Pages
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#project"&gt;
  &lt;/a&gt;
  [[project]]
&lt;/h3&gt;

&lt;p&gt;A project page.  Although we don't need to narrowly define a project, let's just say that it's a define set of actions to achieve a particular goal. e.g [[Odysseas learns Solidity]] or [[odyslam.com v3]]&lt;/p&gt;

&lt;p&gt;[[kanban]]: It's the main way to store items that I need to go through for that particular project. &lt;/p&gt;

&lt;p&gt;We have 3 different groups [[project TODO]], [[project DOING]], [[project DONE]]&lt;/p&gt;

&lt;p&gt;Items are divided into &lt;code&gt;IMP:&amp;lt;item_name&amp;gt;&lt;/code&gt; and &lt;code&gt;RE:&amp;lt;item_name&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;IMP&lt;/strong&gt;: implement something. We have already decided to do this. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;RE&lt;/strong&gt;: Research into something. We don't know yet if we will implement it or not. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Every item can have a START DATE and END DATE. This is helpful for us to keep track of when we start/finish our project items&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;[[project system]]&lt;/strong&gt;: We define the system that supports this project. Systems are much more effective than goals because they define habitual behavior. Read more on [[system vs goal]] and this &lt;a href="https://jamesclear.com/goals-systems"&gt;blog post&lt;/a&gt; by [[james clear]]&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;[[project brainstorming]]&lt;/strong&gt;: A general category to write thoughts and ideas for a particular project. After we refine and them, we should transfer them into the #kanban as project items.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;[[project NEXT ITERATION]]&lt;/strong&gt;: A general category for things that we want to do, but not at the current [[project version]]. We write them here so that we keep track of them and not forget them.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;[[project persona]]&lt;/strong&gt;: When doing a project, it is helpful to remember for whom this project is for. We assume that the project has a consumer, a human at the other end who will use the outcome of the project (e.g &lt;em&gt;a tool&lt;/em&gt;). We should always have an end-user at mind and this category is the perfect place to take a few notes about it.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;[[project inbox]]&lt;/strong&gt;:  A query that returns all the fleeting notes about a particular project. This enables the user to keep of a log of all their learning in the same top-level block (e.g a date) and be certain that every fleeting note will end up in the appropriate project.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;[[project open questions]]&lt;/strong&gt;: The same functionality as [[project inbox]], but for &lt;em&gt;open questions&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HbzvH9Ve--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252FDYWk7d1fmL.png%3Falt%3Dmedia%26token%3Dc941f2fa-3578-4286-af1b-ae0f5c77fdfe" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HbzvH9Ve--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252FDYWk7d1fmL.png%3Falt%3Dmedia%26token%3Dc941f2fa-3578-4286-af1b-ae0f5c77fdfe" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#location-of-knowledge"&gt;
  &lt;/a&gt;
  [[Location of Knowledge]]
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;page name:&lt;/strong&gt; "Learn ", where X can be anything&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Type:&lt;/strong&gt; Is it a [[tooling]] or an entire [[domain]]. This is rather ill-defined and we will reassess as more LoCs are created.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Domain&lt;/strong&gt;: Can we group this into a higher order [[domain]] ? e.g [[Learn Solidity]] is in the domain of [[Learn Ethereum]]&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;How to read this category&lt;/strong&gt;: An introduction on how to read a Location of Knowledge. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;[[insights]]&lt;/strong&gt;: This is the primary category. A set of curated insights about this category. Usually, they are complementary to some original [[external resources]].  We don't need to mirror the entire original context, only our "insight" or note that we believe is important. This way, we super-charge our learning by coupling original content and "hints" that might be unintuitive or hard to grasp. It's learning 10x.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;[[external resources]]&lt;/strong&gt;: This group is for external resources that are not tied to a particular insight, but are useful to have around.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;[[capstone project ideas]]&lt;/strong&gt;: A capstone project solidifies the understanding of the subject.  This is a category to add ideas for capstone projects that people can take up on.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I4s8qVvj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252FtxxHhFdaMK.png%3Falt%3Dmedia%26token%3De73043b6-7c87-45b0-a35c-0b7b399001d8" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I4s8qVvj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252FtxxHhFdaMK.png%3Falt%3Dmedia%26token%3De73043b6-7c87-45b0-a35c-0b7b399001d8" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#personal-page"&gt;
  &lt;/a&gt;
  [[personal page]]:
&lt;/h3&gt;

&lt;p&gt;This is the personal space for every user of this repository. It is the &lt;strong&gt;source&lt;/strong&gt; of every page that is created by that user. An anchor for their content.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;meta&lt;/strong&gt;: meta information about the user (e.g twitter account)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;fleeting notes&lt;/strong&gt;: the learning log of that particular user. Only they should be writing in it. It is structured as follows:

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;date&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;A project page

&lt;ul&gt;
&lt;li&gt;raw learnings, ideally with timestamps (to get a view of how much each took)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;example:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[[May 29th, 2021]]&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[[Odysseas learns Solidity]]

&lt;ul&gt;
&lt;li&gt;22:54 Solidity is just a language for writing smart contracts on [[Ethereum]]. Actually, there are alternatives, such as [[Vyper]]&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;learning projects&lt;/strong&gt;: A list of project pages that concern learning. e.g [[Odysseas learns Solidity]]&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;capstone projects&lt;/strong&gt;: A list of capstone projects that the user would like to do. This helps the community to get visibility into what every user is working on. Visibility translates into more shared knowledge and enables collaboration.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NFNJ5Ed3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252FIHSkVFP6rT.png%3Falt%3Dmedia%26token%3Da46ea676-c643-44e4-9110-f87fde769aa3" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NFNJ5Ed3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252FIHSkVFP6rT.png%3Falt%3Dmedia%26token%3Da46ea676-c643-44e4-9110-f87fde769aa3" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The use of pages is supported by a very handy #roamcult add-on, called &lt;a href="https://roamstack.com/workflow-automation-roam42-smartblocks/"&gt;42SmartBlocks&lt;/a&gt;. To install the add-on, you have to copy-paste some Javascript code in your graph, which will run every time you open your Roam Research app. The add-on is very powerful, but for now we use it as a templating engine for our pages. &lt;/p&gt;

&lt;p&gt;Instead of copy-pasting the blocks in every new LoC or project page,  we run the SmartBlock command which auto populates the blocks. Templates are already available to vanilla Roam Research, but SmartBlock makes the templates dynamic. For example, instead of manually adding the date, we can add the SmartBlock code &lt;code&gt;&amp;lt;%DATE:Today%&amp;gt;&lt;/code&gt;. This will be replaced by the page with the date of today. It's like typing &lt;code&gt;/today&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#42SmartBlock project 

Tags: #project

Creation Date: **&amp;lt;%DATE:**Today**%&amp;gt;**

## [[project description]]

### [[project inbox]]

{{[[query]]: {and: [[fleeting notes]] [[&amp;lt;%CURRENTPAGENAME%&amp;gt;]]}}}

### [[project open questions]]

{{[[query]]: {and: [[open question]] [[TODO]] [[&amp;lt;%CURRENTPAGENAME%&amp;gt;]]}}}

### [[project brainstorming]]



### [[project persona]]



### [[project system]]



### [[project NEXT ITERATION]]



#kanban {{[[kanban]]}}

[[project TODO]]

[[project DOING]]

[[project DONE]]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
#42SmartBlock loc

## [[Location of Knowledge]] template

Type: 

Creation Date: **&amp;lt;%DATE:**Today**%&amp;gt;**

Domain: 

## Introduction

## How to read this category 

The insights are not meant to be all-inclusive, but complementary resources. Follow the instructions at the start of the Insights.

Insights are meant to **greatly accelerate** your learning process of the original material that they accompany. 

This should be collaborative. If you have any questions, just jump into **Discord:** https://discord.gg/vJ5FRbQg. 

If you want to enrich the content, let's chat in the **Discord** channel.

If you are unfamiliar with Roam Research, visit [[Learn Roam Research]] to learn more about it.

Think of this as a trunk of a tree. A body of knowledge that branches into different subjects. All subjects (branches) have [[external resources]], so you can research further into the subject.

For example, click on the following image for an example from [[Learn Solidity]], where the insights were generated while following [Crypto Zombies](https://cryptozombies.io/) 

![](https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%2Fapp%2FSymposium%2F4zl4lDkQFV.jpeg?alt=media&amp;amp;token=4c3ef3b3-c08a-46fc-acf3-8c245b0effc4)


## Insights

## [[external resources]]

## [[capstone projects]] ideas

## People who [[&amp;lt;%CURRENTPAGENAME%&amp;gt;]]

{{[[query]]: {and: [[person]] [[&amp;lt;%CURRENTPAGENAME%&amp;gt;]]}}}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#system"&gt;
  &lt;/a&gt;
  System
&lt;/h2&gt;

&lt;p&gt;Creating an ontology is cool. But you know what's cooler? &lt;/p&gt;

&lt;p&gt;Having a system that can support such an ontology, for multiple concurrent users and a considerable amount of time. &lt;/p&gt;

&lt;p&gt;The system is the result of many hours of "doing" &lt;strong&gt;Learning in Public&lt;/strong&gt; and thinking about the best way to keep track of my learnings. It's not perfect, but I feel it's refined enough to consider it an &lt;strong&gt;alpha version&lt;/strong&gt;. I do not have a set of explicitly requirements, but there are some principles that I kept in mind when designing this system:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It should have the minimum possible friction. The user should focus on the note taking itself, rather than the system. The system's success, in a way, is measured by it's transparency. The more transparent it is, the more natural it feels to the user. This is important, as reducing friction is the best way to help yourself develop a habit. &lt;/li&gt;
&lt;li&gt;It should support multiple concurrent users. We need a system where multiple people will use it in parallel and it will not result into a chaotic graph. &lt;/li&gt;
&lt;li&gt;It should be forward facing. We probably use more tags that we currently needs, but that's ok. I am sure that in the future, new use-cases will emerge and the advanced filtering options will be really helpful. It is impossible to foresee all the possibilities, since we are still at the start of the project. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With the in mind, this is how this system should work:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[[Locations of Knowledge]]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;They are the treasure of this graph. Only curated insights and refined blocks should end up. They should be treated as a &lt;strong&gt;book&lt;/strong&gt;, rather than a &lt;strong&gt;notebook&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;They should follow a specific name pattern: , where X is something to be learned. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[[project]]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When you are in doubt, it's a project. A &lt;strong&gt;capstone project&lt;/strong&gt;  is a project. Your &lt;strong&gt;personal&lt;/strong&gt; learning page is a project. &lt;/p&gt;

&lt;p&gt;A project can have any name, except if it about learning a particular Location of Knowledge. In that case, use &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U3NsTWp5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252FWYaIg9GUQM.png%3Falt%3Dmedia%26token%3D61d053b0-eb9a-47ed-af15-9064ff37fa8b" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U3NsTWp5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252FWYaIg9GUQM.png%3Falt%3Dmedia%26token%3D61d053b0-eb9a-47ed-af15-9064ff37fa8b" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-keep-notes"&gt;
  &lt;/a&gt;
  How to keep notes
&lt;/h3&gt;

&lt;p&gt;The core of this graph is the habit of taking notes as we learn something.  The following diagram sums up the process&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_Gvl7mr---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252FbFJXDAK8vt.png%3Falt%3Dmedia%26token%3Df91d354a-4d9a-4260-9757-7ed11a64adba" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Gvl7mr---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252FbFJXDAK8vt.png%3Falt%3Dmedia%26token%3Df91d354a-4d9a-4260-9757-7ed11a64adba" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The process described above, results to the following Personal Page, with one personal learning project named "Odysseas Learns Solidity"&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e7cfwEd7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252FGHYSPQDwSv.png%3Falt%3Dmedia%26token%3Dd8edea1e-7848-4bee-88f7-8db52313bc2c" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e7cfwEd7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252FGHYSPQDwSv.png%3Falt%3Dmedia%26token%3Dd8edea1e-7848-4bee-88f7-8db52313bc2c" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kKmeLVHY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252FnVd0-ahuym.png%3Falt%3Dmedia%26token%3D5cbbd863-48ad-48fe-971e-af82c56f5cfb" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kKmeLVHY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252FnVd0-ahuym.png%3Falt%3Dmedia%26token%3D5cbbd863-48ad-48fe-971e-af82c56f5cfb" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-add-insights-in-a-location-of-knowledge"&gt;
  &lt;/a&gt;
  How to add insights in a Location of Knowledge
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k_9j4-HW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252FU2fWZTcVnL.png%3Falt%3Dmedia%26token%3D38819702-ac1c-4f9e-9e2c-a65522167236" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k_9j4-HW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252FU2fWZTcVnL.png%3Falt%3Dmedia%26token%3D38819702-ac1c-4f9e-9e2c-a65522167236" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Which results to the following Location of Knowledge&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UnwbHu02--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252FzTHNLDWJ4o.png%3Falt%3Dmedia%26token%3Da54dbe52-22e6-4427-8423-bfc36e9f5bcd" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UnwbHu02--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252FzTHNLDWJ4o.png%3Falt%3Dmedia%26token%3Da54dbe52-22e6-4427-8423-bfc36e9f5bcd" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-about-tags-and-pages"&gt;
  &lt;/a&gt;
  What about tags and pages
&lt;/h3&gt;

&lt;p&gt;At this point, I haven't define a specific "rule" around when to define something as a page and when not. It is ad-hoc, based on what I expect to want to refer to in the future. For example, it make sense to group together all the various notes and information that I gather around the Ethereum Virtual Machine. It's a good rule of thumb to be cautious, so that the graph is not riddles with meaningless tags that make it visually impossible to read.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8jvKf-m8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252Fnj7wszuQqx.png%3Falt%3Dmedia%26token%3Dab1ddd57-b7af-4709-b9fc-9dd863ac1fed" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8jvKf-m8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%252Fapp%252FSymposium%252Fnj7wszuQqx.png%3Falt%3Dmedia%26token%3Dab1ddd57-b7af-4709-b9fc-9dd863ac1fed" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#unlinked-references"&gt;
  &lt;/a&gt;
  Unlinked References
&lt;/h3&gt;

&lt;p&gt;Roam Research has a great feature where it will show &lt;strong&gt;unlinked references&lt;/strong&gt; in a page. That means that if I later create a page "EVM", it will tell me about all the occurrences of the word "EVM" in my graph. It assumes that they refer to this page, even though they don't link to it. This is very helpful to be able to backfill links when you add a tag later in the "life" of the graph.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#future"&gt;
  &lt;/a&gt;
  Future
&lt;/h2&gt;

&lt;p&gt;The graph is still very early in its conception, with less than a month of active usage, so I expect this system to be constantly evolved. The more we use the system and structure, the more we will find optimizations to make.  In the future, I hope to have a community of people that all learn in parallel on the same graph.&lt;/p&gt;

&lt;p&gt;I believe that people are multi-faceted, thus we shouldn't necessarily cluster in domain-specific communities. The community of Symposium will be a rich community, where people learn about many different things, in a way that the learnings of one can benefit everyone. A community where people love learning and helping one another like good comrades. What we share is our love of learning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cta"&gt;
  &lt;/a&gt;
  CTA
&lt;/h2&gt;

&lt;p&gt;If you find this interesting, make sure to check out the graph on &lt;a href="https://roamresearch.com/#/app/Symposium/page/t9PFemV3W"&gt;Roam Research&lt;/a&gt; and join the Discord community. If you want to participate send a message and we will talk through it. At the moment, Roam Research demands a high degree of trust, so we will need to work things out first. &lt;/p&gt;

&lt;p&gt;I regularly tweet about technology, communities, learning and decentralisation, so make sure you &lt;a href="https://twitter.com/odysseas_lam"&gt;follow&lt;/a&gt; me for more.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>roamresearch</category>
      <category>learning</category>
      <category>community</category>
    </item>
    <item>
      <title>Daily Share Price Notifications using Python, SQL and Africas Talking - Part Two</title>
      <author>Zoo Codes</author>
      <pubDate>Sun, 30 May 2021 10:17:30 +0000</pubDate>
      <link>https://dev.to/ken_mwaura1/daily-share-price-notifications-using-python-sql-and-africas-talking-part-two-37db</link>
      <guid>https://dev.to/ken_mwaura1/daily-share-price-notifications-using-python-sql-and-africas-talking-part-two-37db</guid>
      <description>&lt;h2&gt;
  &lt;a href="#previously"&gt;
  &lt;/a&gt;
  Previously..
&lt;/h2&gt;

&lt;p&gt;To recap abit, in &lt;a href="https://dev.to/ken_mwaura1/daily-share-price-notifications-using-python-sql-and-africas-talking-part-one-17p"&gt;Part One&lt;/a&gt; of this article: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Created a folder to hold all of our code.&lt;/li&gt;
&lt;li&gt;Used pip to install the required packages including: africastalking,beautifulsoup4, scrapy, psycopg2-binary, sqlachemy, python-dotenv.&lt;/li&gt;
&lt;li&gt;Created our first project and spider using scrapy-cli. &lt;/li&gt;
&lt;li&gt;Scraped the &lt;a href="https://afx.kwayisi.org/nseke/"&gt;afx&lt;/a&gt; website for stock prices.&lt;/li&gt;
&lt;li&gt;We followed that by cleaning the data; removing html tags and unnecessary styling.&lt;/li&gt;
&lt;li&gt;Finally we defined our data pipeline as required by scrapy and database parameters. This was enable data to be insterted and therefore persisted across different sessions.&lt;/li&gt;
&lt;li&gt;We ran our scraper to ensure everything is working as it should. We also saved the scraped data as a JSON file for quick preview. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For this article we will cover creating a SMS notification script once a certain stock reaches a specified price threshold. This will be enabled by Africas Talking SMS api through the python SDK. To wrap up, we'll deploy our project to a heroku server and it have run 24/7. &lt;/p&gt;

&lt;p&gt;The full code for this tutorial is on &lt;a href="https://github.com/KenMwaura1/stock-price-scraper"&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#notifications"&gt;
  &lt;/a&gt;
  Notifications
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dxBxR58Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yqgc4dnzetjsjmhnse43.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dxBxR58Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yqgc4dnzetjsjmhnse43.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this section we'll create a script that queries the database, retrieves a specified stock price,checks against set constraints and if the specified condition is met a notification text is sent.&lt;/p&gt;

&lt;p&gt;Our current file structure is as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;python-projects &lt;span class="nv"&gt;$ &lt;/span&gt;tree nse_scraper
nse_scraper
├── LICENSE
├── nse_scraper
│   ├── __init__.py
│   ├── items.py
│   ├── middlewares.py
│   ├── models.py
│   ├── pipelines.py
│   ├── settings.py
│   ├── spiders
│   │   ├── afx_scraper.py
│   │   └── __init__.py
│   └── test.json
├── README.md
├── requirements.txt
├── scrapy.cfg
└── test.json

2 directories, 14 files
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside the nse_scraper/nse_scraper folder, lets create a &lt;code&gt;stock_notification.py&lt;/code&gt; file. This will hold all of query and notification code. Inside add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# stock_notification.py
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;typing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Any&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;StockData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;db_connect&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sqlalchemy.orm&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sessionmaker&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sqlalchemy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;desc&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;africastalking&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above block code imports our required libraries, ranging from africastalking python sdk to the os package. We also import the required classes: &lt;code&gt;Stockdata&lt;/code&gt; and &lt;code&gt;db_connect&lt;/code&gt; from &lt;code&gt;models.py&lt;/code&gt; file. We also import the List and Any objects fron the typing library.&lt;/p&gt;

&lt;p&gt;For the next part ensure you have an &lt;a href="http://africastalking.com/"&gt;Africas Talking&lt;/a&gt; account and a &lt;a href="https://heroku.com/"&gt;Heroku&lt;/a&gt; account.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# stock_notification.py
&lt;/span&gt;&lt;span class="n"&gt;at_username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"at_username"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at_api_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"at_api_key"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mobile_number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"mobile_number"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# print(at_username, at_api_key)
# Initialize the Africas sdk py passing the api key and username from the .env file
&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;at_username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;at_api_key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sms&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SMS&lt;/span&gt;
&lt;span class="n"&gt;account&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Application&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code retrieves the required credentials from enviroment variables. Usually I prefer to use &lt;code&gt;.env&lt;/code&gt; files however since we are deploying to Heroku. We need to specify environment variables that we will define in Heroku. We the initialize the Africas Talking Sdk using our appropriate credentials. We further assign the SMS class to a variable. We also assign the Application class to a account variable.&lt;/p&gt;

&lt;p&gt;The snippet below assigns &lt;code&gt;engine&lt;/code&gt; variable to the &lt;code&gt;db_connect&lt;/code&gt; function, following it up by binding sessionmaker to the engine variable. This implements a session when doing database operations. We finally define an empty &lt;code&gt;ticker_data&lt;/code&gt; list to hold all of our stock data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# stock_notification.py
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;stock_query&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;sq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StockData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;StockData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stock_ticker&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;StockData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stock_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                       &lt;span class="n"&gt;StockData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stock_price&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nb"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StockData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stock_ticker&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"SCOM"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ticker&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;order_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;desc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StockData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="n"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# print(id, name, ticker, price)
&lt;/span&gt;        &lt;span class="n"&gt;new_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'stock_id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'stock_name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'stock_ticker'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ticker&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'stock_price'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;new_data&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We define a &lt;code&gt;stock_query()&lt;/code&gt; function to query our specific stock data. We then define a query for the database using our pre-defined &lt;code&gt;StockData&lt;/code&gt; class, we are checking specifically checking for the latest &lt;em&gt;Safaricom PLC&lt;/em&gt; stock data. This is however just for demonstration purposes, you are free to choose any other stock or counter. We then unpack the returned data into the &lt;code&gt;new_data&lt;/code&gt; dictionary.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# stock_notification.py
&lt;/span&gt;
&lt;span class="c1"&gt;# Create a function to send a message containing the stock ticker and price
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;stock_notification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stock_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fetch_application_data&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;" Houston we have a problem: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the snippet above we create a &lt;code&gt;stock_notification&lt;/code&gt; function and pass  &lt;code&gt;stock_data&lt;/code&gt; argument specified as a list. We also pass a &lt;code&gt;number&lt;/code&gt; argument of the integer type. As the name suggests, this function will effectively send a text message to the us once a stock reaches a certain criteria. We throw-in a try-catch block, this ensures incase the message fails to send we have a way to catch and debug the error. We also output our account balance inorder to ensure we get a balance check on each run.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# stock_notification.py 
&lt;/span&gt;
&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;stock_query&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s"&gt;"stock_name"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;, is now Kes &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;stock_query&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s"&gt;"stock_price"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; per share'&lt;/span&gt;
&lt;span class="c1"&gt;# check if Safaricom share price is more than Kes 39 and send a notification.
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;stock_query&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"stock_price"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;39&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# Call the function passing the message  and mobile_number as a arguments
&lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;stock_notification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mobile_number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the final block of code above: we define a message variable to hold the data we'll send as a text message. We want to send the stock name and the current stock price. We then define the criteria inorder to send the message, in this case its when the price is above Kes 39. When the criteria is achieved, the &lt;code&gt;stock_notification&lt;/code&gt; function is called. &lt;/p&gt;

&lt;p&gt;To recap your project should now look as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nse_scraper
├── LICENSE
├── nse_scraper
│   ├── __init__.py
│   ├── items.py
│   ├── middlewares.py
│   ├── models.py
│   ├── pipelines.py
│   ├── settings.py
│   ├── spiders
│   │   ├── afx_scraper.py
│   │   └── __init__.py
│   ├── stock_notification.py
│   └── test.json
├── README.md
├── requirements.txt
├── runtime.txt
├── scrapy.cfg
└── test.json

2 directories, 16 files
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#deployment"&gt;
  &lt;/a&gt;
  Deployment
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r3UavW3---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dsg54n1r2qftozrihxg4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r3UavW3---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dsg54n1r2qftozrihxg4.jpg" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Lets now deploy our scraper to Heroku and have it run in one hour intervals. &lt;br&gt;
  &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uxr9Hxkx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jtpyzv3s4xb0pxktpeub.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uxr9Hxkx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jtpyzv3s4xb0pxktpeub.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Heroku account registration&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;First and foremost, you would need to register an account with Heroku, it’s free!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Installing Heroku CLI&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After your account registration, let’s use &lt;a href="https://devcenter.heroku.com/articles/heroku-cli"&gt;Heroku CLI &lt;/a&gt; to create and manage our project. You may check out the installation steps for other OS &lt;a href="https://devcenter.heroku.com/articles/heroku-cli#download-and-install"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# for arch-linux&lt;/span&gt;
&lt;span class="nb"&gt;sudo &lt;/span&gt;pacman &lt;span class="nt"&gt;-S&lt;/span&gt; heroku 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Login&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To log in using Heroku’s CLI, simply cd to your project folder and run &lt;code&gt;heroku login&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;nse_scraper 

&lt;span class="nv"&gt;$ &lt;/span&gt;heroku login 

heroku: Press any key to open up the browser to login or q to &lt;span class="nb"&gt;exit&lt;/span&gt;:
Opening browser to https://cli-auth.heroku.com/auth/cli/browser/xxxx-xxxx-xxxx-xxxx-xxxx?requestor&lt;span class="o"&gt;=&lt;/span&gt;xxxx.xxxx.xxxxLogging &lt;span class="k"&gt;in&lt;/span&gt;... &lt;span class="k"&gt;done
&lt;/span&gt;Logged &lt;span class="k"&gt;in &lt;/span&gt;as &amp;amp;&lt;span class="k"&gt;*&lt;/span&gt;^@gmail.com

...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;At this stage, you should already have set up your project with git init and git commit etc. The next steps are to turn your project into a git repository and push it to Heroku.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# i. To create a Heroku application:&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;heroku apps:create daily-nse-scrape

&lt;span class="c"&gt;# ii. Add a remote to your local repository:&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;heroku git:remote &lt;span class="nt"&gt;-a&lt;/span&gt; daily-nse-scraper

&lt;span class="c"&gt;# iii. Deploy your code&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git push heroku main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once we’re done here, let’s open up our Heroku &lt;a href="https://dashboard.heroku.com/apps"&gt;dashboard&lt;/a&gt; page for your newly created Heroku application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setup-free-tier-managed-postgresql-service-on-heroku"&gt;
  &lt;/a&gt;
  Setup free tier managed PostgreSQL service on Heroku
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Take note that the free tier only has a limit of 10,000 rows at the time of writing this.&lt;/em&gt;     &lt;/p&gt;

&lt;p&gt;This step is fairly simple, simply go to the ‘Resources’ tab on your Heroku dashboard and look for ‘Heroku Postgres’, select the free tier (or whichever you deem fit). &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_pH8J7NK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/txy956w8afjdzyv2ug1w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_pH8J7NK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/txy956w8afjdzyv2ug1w.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;To look for your database credentials, simply click on your ‘Heroku Postgres’ add-on → select ‘Settings’ → ‘View Credentials’&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F0120N3Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19k6eh530m7qj7vecq3l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F0120N3Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19k6eh530m7qj7vecq3l.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Finally, adjust your Scrapy project’s connection to your database accordingly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# settings.py
&lt;/span&gt;
&lt;span class="c1"&gt;# POSTGRES SETTINGS
&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"POSTGRES_HOST"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"POSTGRES_PORT"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"POSTGRES_USER"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"POSTGRES_PASS"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;database&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"POSTGRES_DB"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;drivername&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"postgresql"&lt;/span&gt;
&lt;span class="n"&gt;DATABASE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;drivername&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;://&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;:&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;@&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;:&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;database&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;

&lt;span class="c1"&gt;# Or alternatively:
&lt;/span&gt;&lt;span class="n"&gt;DATABASE_CONNECTION_STRING&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="n"&gt;postgres&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;xxxx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;xxxx&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;ec2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compute&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="n"&gt;amazonaws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5432&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;xxxxxx&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ensure you add your configuration variables in ‘Settings’ → ‘Reveal Config Vars‘. This will allow Heroku to get and set the required environment configuration for our web scraper to run. As shown below&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WLuiN-Si--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cp6sbyyo7e2z87pv27rm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WLuiN-Si--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cp6sbyyo7e2z87pv27rm.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;End Results&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;By the end of this, if you were to visit your Heroku dashboard activity feed, you should see your application there where the latest activity says that your app has been deployed.&lt;br&gt;
If you try to run &lt;code&gt;heroku run scrapy crawl afx_scraper&lt;/code&gt; on your local terminal, you should see that it will attempt to run the crawler on your Heroku server.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CvH9GWz4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zyqp9k39l1z7i9e94l5z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CvH9GWz4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zyqp9k39l1z7i9e94l5z.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If everything ran as expected. You should see output on your terminal. In the database addon we can run a simple query to check our database tables. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aBQCBmAN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qqsjtztfc1o6632anx94.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aBQCBmAN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qqsjtztfc1o6632anx94.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Note: I also added a &lt;code&gt;runtime.txt&lt;/code&gt; file at the root of our project, this tells Heroku what python version to use for our project. By default it uses the latest python version, this may introduce errors during execution thus its better to opt for a fixed version. In this case I specified &lt;code&gt;python-3.9.2&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#heroku-scheduler"&gt;
  &lt;/a&gt;
  Heroku Scheduler
&lt;/h3&gt;

&lt;p&gt;This section of the article shows you how you can run your crawlers/spiders periodically.&lt;br&gt;
Though Heroku offers several different schedulers that could run your application periodically, I personally prefer ‘Heroku Scheduler’ as it has a free tier and it is super simple to use.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IPF145K9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fztjh37dw18ksdisaryu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IPF145K9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fztjh37dw18ksdisaryu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To use the free tier of this add-on, Heroku requires you to add a payment method to your account.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Configuration
Inside your newly added ‘Heroku Scheduler’ add-on, simply select ‘Add Job’ on the top right corner and you should see the screen as shown in the picture beside.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To run the&lt;code&gt;scrapy crawl afx_scraper&lt;/code&gt; command periodically, simply select a time interval and save job.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;How do I schedule a daily job? 
Simply configure our ‘Heroku Scheduler’ to run our python script every day at a specified time. In our case its every hour at 10 minutes. Then it should run our command.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;scrapy&lt;/span&gt; &lt;span class="n"&gt;crawl&lt;/span&gt; &lt;span class="n"&gt;afx_scraper&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#scheduling-text-notifications"&gt;
  &lt;/a&gt;
  Scheduling Text Notifications
&lt;/h3&gt;

&lt;p&gt;Now we need add a scheduler for Heroku to run our notifiction script which will inturn send us texts. Since we already have an instance of Heroku running in our app we need an alternative. Advanced scheduler is a good option as it offers a free trial and if need be a $5 per month for an upgrade. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Setup &lt;br&gt;
Inside our daily-nse-scraper app, search for the advanced scheduler addon. Select the trail-free plan and submit order form. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--89Km8c6Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a78isp7oujzanegy19tg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--89Km8c6Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a78isp7oujzanegy19tg.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Configuration&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Click on the Advanced Scheduler addon. Inside the overview page. Click on Create trigger button. The free trial allows up-to 3 triggers. &lt;br&gt;
We'll set a trigger for 11.00 am each day, specify the command &lt;code&gt;python nse_scraper/stock_notification.py&lt;/code&gt; to run. Remember to select the correct timezone in my case its Africa/Nairobi and save the changes. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5SuNEp_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4833vqsyllt8d4humosk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5SuNEp_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4833vqsyllt8d4humosk.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Testing&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To ensure the scheduler will execute as expected. We can manually run the trigger: on the overview page, click on the more button and select execute trigger. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--InoEFZi0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uby5ur444r3hsuozzn0s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--InoEFZi0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uby5ur444r3hsuozzn0s.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You should now have received a notification text if everything went as expected. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4zO8csIz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3xhb989mxodgeiqqu7ur.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4zO8csIz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3xhb989mxodgeiqqu7ur.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrap-up"&gt;
  &lt;/a&gt;
  Wrap Up
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x28eRViS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/58yx7ekzdc20zq60hkzz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x28eRViS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/58yx7ekzdc20zq60hkzz.jpg" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;To wrap things up, I have found a lot of success in deploying and running my spiders periodically with this method. The only downside here is the free tier version of ‘Heroku Postgres’ which only supports up to 10,000 database rows.&lt;br&gt;
In this case, we can easily opt-in for the paid version of it and scale our database accordingly based on our demand. On a side note, we could also easily swap out our Scrapy project’s database instance to use another cloud RDS solution such as &lt;a href="https://aws.amazon.com/rds/"&gt;Amazon RDS&lt;/a&gt;.&lt;br&gt;
On top of these, you can also easily opt-in for other available Heroku add-ons for logging and monitoring purposes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#another-free-alternative-method"&gt;
  &lt;/a&gt;
  Another Free Alternative Method
&lt;/h3&gt;

&lt;p&gt;While I am aware that we could use &lt;a href="https://github.com/scrapy/scrapyd"&gt;Scrapyd&lt;/a&gt; to host your spiders and actually send requests, alongside with &lt;a href="https://github.com/my8100/scrapydweb/"&gt;ScrapydWeb&lt;/a&gt;, I personally prefer to keep my scraper deployment simple, quick, and free. If you are interested in this alternative instead, check out this &lt;a href="https://towardsdatascience.com/a-minimalist-end-to-end-scrapy-tutorial-part-iv-3290d76a2aef"&gt;post&lt;/a&gt; written by &lt;br&gt;
Harry Wang.&lt;/p&gt;

&lt;p&gt;If you have any question or comments. Let me know in the comments, or on &lt;a href="https://twitter.com/Ken_Mwaura1"&gt;Twitter&lt;/a&gt;.&lt;br&gt;
Happy Coding. &lt;/p&gt;

</description>
      <category>python</category>
      <category>heroku</category>
      <category>tutorial</category>
      <category>postgres</category>
    </item>
    <item>
      <title>Making a custom toggle/switch button with Tailwindcss and Vue.js</title>
      <author>Fayaz Ahmed</author>
      <pubDate>Sun, 30 May 2021 10:00:50 +0000</pubDate>
      <link>https://dev.to/fayaz/making-a-custom-toggle-switch-button-with-tailwindcss-and-vue-js-9cm</link>
      <guid>https://dev.to/fayaz/making-a-custom-toggle-switch-button-with-tailwindcss-and-vue-js-9cm</guid>
      <description>&lt;p&gt;Not sure what you call them, toggles or switches, but here's how you make a toggle button with Tailwindcss and Vue.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://tailwindcss-toggle.vercel.app/"&gt;Here's how it looks and works.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GP6Lg1wS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a1onow0bh9awk08t7u3c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GP6Lg1wS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a1onow0bh9awk08t7u3c.png" alt="UI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's make a new component called &lt;code&gt;toggle.vue&lt;/code&gt; and add the below code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-14 h-8 flex items-center bg-gray-300 rounded-full p-1 duration-300 cursor-pointer"&lt;/span&gt;
    &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"{ 'bg-green-500': value }"&lt;/span&gt;
    &lt;span class="na"&gt;:aria-checked=&lt;/span&gt;&lt;span class="s"&gt;"value.toString()"&lt;/span&gt;
    &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click=&lt;/span&gt;&lt;span class="s"&gt;"$emit('input', !this.value)"&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
      &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bg-white w-6 h-6 rounded-full shadow-md transform duration-300"&lt;/span&gt;
      &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"{ 'translate-x-6': value }"&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Boolean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, use the component in your code, whoever you'd like to.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;toggle&lt;/span&gt; &lt;span class="na"&gt;v-model=&lt;/span&gt;&lt;span class="s"&gt;"toggleValue"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;toggleValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's break down the component and try to understand.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ud7DT4Tl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/PU7H67c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ud7DT4Tl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/PU7H67c.png" alt="Toggle Component"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sorry for the bad image quality, not sure why is dev reducing the quality, even if it's hosted somewhere else, here's the &lt;a href="https://i.imgur.com/PU7H67c.png"&gt;link&lt;/a&gt; to a higher resolution pic&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;An outer which acts as a container for our toggle button, styled with rounded corners, and &lt;code&gt;display: flex&lt;/code&gt; properties.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Here's the thing when we want to add &lt;code&gt;v-model&lt;/code&gt; to custom events, there are two important things involved, a prop named &lt;strong&gt;value&lt;/strong&gt; and a event named &lt;strong&gt;input&lt;/strong&gt; to emit. so technically you custom component should look like this.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;custom-component&lt;/span&gt; &lt;span class="na"&gt;:value=&lt;/span&gt;&lt;span class="s"&gt;"variable"&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;input=&lt;/span&gt;&lt;span class="s"&gt;"doSomething"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The interesting thing is &lt;code&gt;v-model&lt;/code&gt; directive is a shorthand for the above attributes, which would make our component markup like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;custom-component&lt;/span&gt; &lt;span class="na"&gt;v-model=&lt;/span&gt;&lt;span class="s"&gt;"variable"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That is exactly what we're doing here with our toggle component.&lt;/p&gt;

&lt;p&gt;3.. Add a rounded div and bind this class to it &lt;code&gt;translate-x-6&lt;/code&gt; so it is gets slided to the right when &lt;code&gt;value === true&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;:class="{ 'translate-x-6': value }"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;4.. The final thing, just add a receive a prop with name &lt;code&gt;value&lt;/code&gt;, which is very important that it be named &lt;strong&gt;value&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;We now have a working custom toggle component. Just call it wherever you need like below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q53c9-E3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/6czBgGl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q53c9-E3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/6czBgGl.png" alt="Index.vue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's a &lt;a href="https://tailwindcss-toggle.vercel.app/"&gt;demo&lt;/a&gt; if you'd like to test it and here's the &lt;a href="https://github.com/fayazara/tailwindcss-toggle"&gt;source code&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Shameless plug, do follow me on &lt;a href="https://twitter.com/fayazara"&gt;twitter&lt;/a&gt; for more articles and announcements&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>vue</category>
    </item>
    <item>
      <title>How Tailwind Can Help You Code Faster</title>
      <author>Kyle Prinsloo 🚀</author>
      <pubDate>Sun, 30 May 2021 09:09:16 +0000</pubDate>
      <link>https://dev.to/study_web_dev/how-tailwind-can-help-you-code-faster-b93</link>
      <guid>https://dev.to/study_web_dev/how-tailwind-can-help-you-code-faster-b93</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-tailwindcss"&gt;
  &lt;/a&gt;
  What is TailwindCSS?
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://tailwindcss.com/"&gt;TailwindCSS&lt;/a&gt; is a CSS framework used for rapidly building websites without leaving your HTML. It should not be confused with &lt;a href="https://tailwindui.com/"&gt;TailwindUI&lt;/a&gt; which is a set of prebuilt HTML templates (using TailwindCSS) created by the makers of TailwindCSS.&lt;/p&gt;

&lt;p&gt;Tailwind have tailored it to be a "highly customizable, low-level CSS framework". This allows you to be able to build out custom components in a &lt;a href="https://locastic.com/blog/i-was-wrong-about-utility-first-css-and-here-is-why/#:~:text=The%20general%20idea%20behind%20utility%2Dfirst%20CSS&amp;amp;text=Utility%2Dfirst%20flips%20that%20idea,them%20to%20its%20HTML%20element."&gt;utility-first approach&lt;/a&gt; which has saved developers hours of work by improving their workflow.&lt;/p&gt;

&lt;p&gt;TailwindCSS has been compared to Bootstrap but this comparison is flawed for one major reason...&lt;/p&gt;

&lt;p&gt;Bootstrap is a great way for beginners to build out designs quickly because it comes with pre-designed components. It is exactly this "pre-built" nature of Bootstrap though that makes it somewhat inflexible and a hindrance for developers looking to simply extend or modify existing Bootstrap styles.&lt;/p&gt;

&lt;p&gt;I'm not saying it can't be done... because it can.&lt;/p&gt;

&lt;p&gt;But the almost atomic approach to Tailwind is what sets it apart from Bootstrap. Tailwind provides you with the building blocks which you can then use to construct your designs in a manner you see fit without the annoying problem of mistakenly overriding styles or battling with default configurations.&lt;/p&gt;

&lt;p&gt;Tailwind makes your life easier as a developer, whether you're a pro at CSS or not.&lt;/p&gt;

&lt;p&gt;Writing CSS more easily means less frustration and more productivity - important factors for all of us who value our time.&lt;/p&gt;

&lt;p&gt;How can TailwindCSS help you code faster? Let's look into that.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#benefits-of-using-tailwind"&gt;
  &lt;/a&gt;
  Benefits of Using Tailwind
&lt;/h1&gt;

&lt;p&gt;Tailwind not only saves you time as a developer, but also makes the whole process of writing CSS quite enjoyable.&lt;/p&gt;

&lt;p&gt;It's predictable in that it uses meaningful variables and predefined classes while outputting a very small bundle size with PurgeCSS. Custom CSS components are even possible with TailwindCSS thanks to the possibility of composing a parent class with a number of Tailwind utility classes.&lt;/p&gt;

&lt;p&gt;This is just the start of the benefits of Tailwind. Here are a few more:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-easy-onboarding"&gt;
  &lt;/a&gt;
  1. Easy Onboarding
&lt;/h2&gt;

&lt;p&gt;Say you work on a project and a new developer is brought in.&lt;/p&gt;

&lt;p&gt;Getting the new developer up to speed with the codebase can take a significant amount of time due to it being new code.&lt;/p&gt;

&lt;p&gt;This is completely normal. &lt;/p&gt;

&lt;p&gt;Add in the complexity that even well-written CSS brings in and the chances of a quick, seamless under-one-hour onboarding becomes a dream. Fair to say that a project’s CSS code can be a significant hurdle to get over before the developer is able to confidently extend and modify the existing codebase. &lt;/p&gt;

&lt;p&gt;Tailwind comes to the rescue here as it provides all the naming and organization which remains consistent across projects. &lt;/p&gt;

&lt;p&gt;Sure, there are of course means for complexity thanks to Tailwind’s extensibility which allows custom configs to be set up. But, overall, the barrier to entry is several magnitudes lower than when walking into a vanilla CSS or &lt;a href="https://webdesign.tutsplus.com/articles/an-introduction-to-css-in-js-examples-pros-and-cons--cms-33574"&gt;CSS-in-JS&lt;/a&gt; codebase.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-zero-context-switching"&gt;
  &lt;/a&gt;
  2. Zero Context Switching
&lt;/h2&gt;

&lt;p&gt;It is completely possible to style out your entire HTML without physically leaving the HTML code when using Tailwind.&lt;/p&gt;

&lt;p&gt;This is a true time-saver. Just think about the number of times you’ve looked at your HTML, gone into the CSS to make a tweak, and then spent at least a second or two picking up where you left off in the HTML. &lt;/p&gt;

&lt;p&gt;While this may sound trivial at first glance, anyone who has coded for a long time will know how these little context switches can break concentration or, at the very least, waste a lot of time over months and years.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-existing-design-system"&gt;
  &lt;/a&gt;
  3. Existing Design System
&lt;/h2&gt;

&lt;p&gt;Working out font scales, consistent spacing rhythms and color variants can take ages for those who are not designers or developers who have not had a perfectly annotated design handed over to them.&lt;/p&gt;

&lt;p&gt;Unfortunately, this is quite common.&lt;/p&gt;

&lt;p&gt;Fortunately, Tailwind solves this issue by providing the &lt;a href="https://www.invisionapp.com/inside-design/guide-to-design-systems/"&gt;design system&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A design system set in place allows for less mental overhead deciding between two very similar shades of teal or a slightly smaller font size. &lt;/p&gt;

&lt;p&gt;A design system is constraining which is necessary for those that want to build slick and consistent layouts in the shortest possible time frame. This allows for more time focused on writing code that gets the job done without sacrificing design quality. &lt;/p&gt;

&lt;p&gt;Tailwind’s design system is extensible, so the constraints can be overridden. But it is this initial system that saves developers oodles of time when they just want to get up and running as quickly as possible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-logical-utilities"&gt;
  &lt;/a&gt;
  4. Logical Utilities
&lt;/h2&gt;

&lt;p&gt;The days of racking your brain for a new class name that fits in the rest of your CSS code are over, thanks to Tailwind. &lt;/p&gt;

&lt;p&gt;All the classes used are utility classes meaning that they correlate to a very small, modular snippet of CSS code which is often only one line long. What this gives you is atomic control of your layouts without any issues of unintentionally overriding previous styles. &lt;/p&gt;

&lt;p&gt;These utility classes are used directly in the HTML allowing you to easily see where you’ve repeated or overridden yourself. This reduces code duplication and a common source of developer frustration.&lt;/p&gt;

&lt;p&gt;For example, the class “mt-4” can be added as a class directly to an HTML element. This would add a top margin of 1 REM (typically 16px) to the element it has been applied to.&lt;/p&gt;

&lt;p&gt;Should you wish to bundle a few utility classes into one parent class such as “.button”, Tailwind have made it simple by allowing you to use the &lt;a href="https://tailwindcss.com/docs/functions-and-directives#apply"&gt;“@apply” directive&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Adding the “.button”  class to an HTML element will then apply all the utilities defined under the “.button” CSS class. This improves readability and allows for time-saving reusability if you have multiple HTML elements you’d like to use the “.button” class on.&lt;/p&gt;

&lt;p&gt;While the atomic, utility-based Tailwind classes will serve your design needs almost every time, Tailwind has been built in a way that allows you to further customize the system when needed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-responsiveness-is-a-priority"&gt;
  &lt;/a&gt;
  5. Responsiveness is a Priority
&lt;/h2&gt;

&lt;p&gt;Responsive designs are an absolute must with over 50% of web content being viewed on mobile these days. It’s simple, if you’re not building responsive layouts then you’re locking out a certain number of users or giving them an awful experience when interacting with your sites.&lt;/p&gt;

&lt;p&gt;Making your designs responsive could not be any easier or faster with Tailwind thanks to what they’ve termed “variants”.&lt;/p&gt;

&lt;p&gt;All of the Tailwind utilities are generated with &lt;a href="https://tailwindcss.com/docs/responsive-design"&gt;responsive versions&lt;/a&gt;, or variants, allowing you to simply prepend a certain size (“xs:”, “sm:”, “lg:”, “xl:”, etc.) to a utility class for it to only apply at that size. By default, Tailwind classes apply to the smallest screen size so it’s best to use the responsive sizing names as your screen size increases.&lt;/p&gt;

&lt;p&gt;Gone are the days of writing out separate CSS for your various screen breakpoints which can often lead to overriding issues which sap more development time.&lt;/p&gt;

&lt;p&gt;Customization is also possible here.&lt;/p&gt;

&lt;p&gt;If you would like to customize your desired screen sizes then you can redefine what the variant prefixes correspond to, in terms of pixel width, in a special Tailwind config file that is generated when starting a Tailwind project. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-smaller-bundle-size-to-save-your-users-time"&gt;
  &lt;/a&gt;
  6. Smaller Bundle Size to Save Your Users Time
&lt;/h2&gt;

&lt;p&gt;Tailwind doesn’t just save you time as a developer, it also saves your users time. &lt;/p&gt;

&lt;p&gt;You may not think so when you first lay your eyes on the CSS file outputted by Tailwind (around 480kb).&lt;/p&gt;

&lt;p&gt;But…&lt;/p&gt;

&lt;p&gt;Tailwind initially comes packaged with all of the possible utilities you may need. This naturally results in a huge CSS file which you certainly shouldn’t ship to production if you care even the slightest about site load times and user satisfaction.&lt;/p&gt;

&lt;p&gt;What this initial, large CSS file allows for is fast prototyping in the development environment. You’re able to add and remove different utilities in your HTML without having to touch the CSS file. The magic happens when you’re ready to ship your code to production…&lt;/p&gt;

&lt;p&gt;Tailwind is set up to work with PurgCSS and a simple build command will tell PurgeCSS (defined in the tailwind.config.js file) to go through the HTML and find all the Tailwind utilities used.&lt;/p&gt;

&lt;p&gt;PurgeCSS then rakes the development Tailwind CSS file and removes all the utilities not used in the HTML.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tailwindcss.com/docs/optimizing-for-production#purge-css-options"&gt;Setting up PurgeCSS to work with Tailwind&lt;/a&gt; is easy thanks to the fantastic explanation over on the TailwindCSS website.&lt;/p&gt;

&lt;p&gt;In this way, the generated CSS file for production is greatly reduced in size and only includes what is actually used in the HTML. The client now only loads the CSS necessary for the site to work which means no time is spent loading useless code.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#limitations-of-tailwind"&gt;
  &lt;/a&gt;
  Limitations of Tailwind
&lt;/h1&gt;

&lt;p&gt;Nothing is perfect (except for my tennis forehand), not even Tailwind. &lt;/p&gt;

&lt;p&gt;While it has a ton of benefits like improving consistency, performance, and developer time-efficiency, no library is perfect for every developer or team and Tailwind is no different.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-readability"&gt;
  &lt;/a&gt;
  1. Readability
&lt;/h2&gt;

&lt;p&gt;The first glaringly obvious limitation, at least to those who are new to Tailwind, is its readability. Those coming from a BEM-style of writing their CSS may be totally put off by HTML littered with tiny class names which appear to clog what is happening in the code.&lt;/p&gt;

&lt;p&gt;This is actually not a limitation that lasts very long. Most developers who have felt annoyed by this initially learn to get used to the way it reads. In fact, some have done full 180, like Shawn Wang, &lt;a href="https://twitter.com/swyx"&gt;Swyx&lt;/a&gt;, who went from calling it &lt;a href="https://twitter.com/swyx/status/1303769383278268416"&gt;“classname soup” to saying “Tailwind is easier to learn than I thought”&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The “classname soup” can certainly be off-putting but there are component abstractions (remember the “.button” class we spoke of earlier?) that can mitigate this and generally your eyes will learn to get used to and may even learn to love it (if you don’t already).&lt;/p&gt;

&lt;p&gt;With TailwindCSS, what you see is what you get. If you are initially a little put off, give it some time by viewing it as a learning curve. If you still cannot accept all the Tailwind utility names in your HTML, then abstract them to custom CSS names and use them as you normally would use CSS classes.&lt;/p&gt;

&lt;p&gt;You’d still be getting most of the benefits of using Tailwind.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-lack-of-complex-animation-support"&gt;
  &lt;/a&gt;
  2. Lack of Complex Animation Support
&lt;/h2&gt;

&lt;p&gt;Only support for simple animations is included. More can be added through the config file but more difficult animations are tricky if you want to do them strictly with Tailwind. &lt;/p&gt;

&lt;p&gt;If you are after complex animations, then you may be better served by writing vanilla CSS or using an animation library.&lt;/p&gt;

&lt;p&gt;But most cases will be served well by the handy animations that come with Tailwind such as “.animate-pulse”, “.animate-bounce”, and “.animate-ping”.&lt;/p&gt;

&lt;p&gt;I’m sure they will be adding more animations to this in the future though.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Tailwind is a hugely beneficial CSS framework that has several fantastic benefits if you’re a developer looking to build out great-looking designs as quickly as possible.&lt;/p&gt;

&lt;p&gt;Working quickly often involves a trade-off of some kind such as quality, but using Tailwind allows you to save time and improve the quality of your code and layouts.&lt;/p&gt;

&lt;p&gt;It achieves this by providing a design system that is easy to understand and extend.&lt;/p&gt;

&lt;p&gt;While many still prefer to write vanilla CSS or use CSS-in-JS, Tailwind provides us with a way to get sites up quickly without making speed or design sacrifices. It doesn’t have to replace your vanilla CSS but can be used in conjunction with it. &lt;/p&gt;

&lt;p&gt;You could, for example, write out all your base layouts using Tailwind and then use vanilla CSS for custom animations or very specific, repeating components. &lt;/p&gt;

&lt;p&gt;Either way, you should certainly give Tailwind a chance as it has the potential to drastically improve your efficiency as a developer.&lt;/p&gt;

&lt;p&gt;If you’re interested in learning how to use Tailwind, check out &lt;a href="https://tailwindcss.com/docs"&gt;their fantastic docs&lt;/a&gt;. The &lt;a href="https://www.youtube.com/tailwindlabs"&gt;screencasts&lt;/a&gt; are also a great way to see Tailwind in action as the creator, Adam Wathan, shows.&lt;/p&gt;

&lt;p&gt;What do you think of Tailwind?&lt;/p&gt;

&lt;p&gt;I’d also like to thank to &lt;a href="https://twitter.com/ReyTheDev"&gt;Rey&lt;/a&gt; for his great help with this article &amp;lt;3&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Web Design Best Practices</title>
      <author>ALI HYDER</author>
      <pubDate>Sun, 30 May 2021 08:18:35 +0000</pubDate>
      <link>https://dev.to/ali_hyderjatt/web-design-best-practices-gjf</link>
      <guid>https://dev.to/ali_hyderjatt/web-design-best-practices-gjf</guid>
      <description>&lt;p&gt;What are the web design best practices? Which best practices should I implement in my web design?&lt;/p&gt;

&lt;p&gt;These are the questions that are rolling in most of the minds of web designers. So, I am going to have a discussion about some of the web design best practices in this article.&lt;/p&gt;

&lt;p&gt;Nowadays, It only takes few minutes to get your website live on the Internet.&lt;/p&gt;

&lt;p&gt;But making your website live is not enough. The design of your website is also essential.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#importance-of-website-design"&gt;
  &lt;/a&gt;
  Importance of Website Design
&lt;/h2&gt;

&lt;p&gt;The design of a website is a serious matter that should not be taken lightly.&lt;/p&gt;

&lt;p&gt;Because design can make a significant impact on how people interact with your website. It also helps users to navigate your site properly and make a good impression.&lt;/p&gt;

&lt;p&gt;People shape opinions about your website in less than &lt;a href="https://www.sweor.com/firstimpressions"&gt;0.05 seconds&lt;/a&gt;. Are you shocked?.... So was I. The majority of that opinion is based on the design.&lt;/p&gt;

&lt;p&gt;You will make a good impression on future customers with a well-designed website. It can also help you foster guidance and make more conversions.&lt;/p&gt;

&lt;p&gt;So while web design might seem to be a minor factor, it plays an essential part in the success of your business.&lt;br&gt;
But don't worry. That's why I am here writing about web design best practices.&lt;/p&gt;

&lt;p&gt;So, the best way to start is with an understanding of web design in 2021 of the latest best practices. You will still end up with something worth showcasing that will make you larger customers if you stick only to the work that matches them.&lt;/p&gt;

&lt;p&gt;Here are the web design best practices for 2021.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-make-your-website-mobile-friendly"&gt;
  &lt;/a&gt;
  1. Make Your Website Mobile Friendly
&lt;/h2&gt;

&lt;p&gt;Mobile is how the Internet is used by the majority of the world. This means your website won't do well if you're not designed for mobile applications.&lt;/p&gt;

&lt;p&gt;Firstly, any big web design client you want to impress would want a responsive website in your profession. In the multi-screen world of today, responsive sites are always better than static.&lt;/p&gt;

&lt;p&gt;Everybody already knows that they shouldn't judge a book by its cover. Yet, most people don't stop judging a company by its website. Your site design has an important impact on your business, reputation, and the quality of your services.&lt;/p&gt;

&lt;p&gt;This is recognized by search engines and mobile-friendly rewarding sites. &lt;/p&gt;

&lt;p&gt;According to Google, &lt;a href="https://www.searchenginepeople.com/blog/40-unbelievable-seo-statistics-need-know.html"&gt;87 percent of smartphone owners&lt;/a&gt; conduct an Internet search at least once every day.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://hitwise.connexity.com/070116_MobileSearchReport_CD_US.html"&gt;58% of all searches on Google&lt;/a&gt; are made from a mobile device&lt;br&gt;
The result: on mobile devices, &lt;a href="https://getgist.com/mobile-friendly-google/"&gt;70% of Google's first page&lt;/a&gt; results are optimized.&lt;/p&gt;

&lt;p&gt;Mobile's share of total internet time according to &lt;a href="https://wearesocial.com/blog/2020/01/digital-2020-3-8-billion-people-use-social-media"&gt;Hootsuite&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WTw18rDj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wearesocial-net.s3.amazonaws.com/uk/wp-content/uploads/sites/2/2020/01/05-Mobiles-Share-of-Internet-Time-%25E2%2580%2593-DataReportal-Digital-2020-Global-Digital-Overview-Slide-47.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WTw18rDj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wearesocial-net.s3.amazonaws.com/uk/wp-content/uploads/sites/2/2020/01/05-Mobiles-Share-of-Internet-Time-%25E2%2580%2593-DataReportal-Digital-2020-Global-Digital-Overview-Slide-47.png" alt="Mobile' share of total internet"&gt;&lt;/a&gt;&lt;br&gt;
The most vital factor you can do to improve your Google ranking is to focus on mobile SEO.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-reduce-text"&gt;
  &lt;/a&gt;
  2. Reduce Text
&lt;/h2&gt;

&lt;p&gt;Don't add large text blocks to your pages.&lt;/p&gt;

&lt;p&gt;I don't talk of blog entries that need to be detailed occasionally (like this one!). I speak of your web pages (e.g., homepage, landing page). Here, keep the text at least.&lt;/p&gt;

&lt;p&gt;You want all about you, your company, your brand, and your items to inform your visitors to your site. But with only a few phrases or better encore, you must learn how to explain that history.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-use-simple-navigation"&gt;
  &lt;/a&gt;
  3. Use Simple Navigation
&lt;/h2&gt;

&lt;p&gt;Users should be able to find the information they need on your site quickly and easily. They're unlikely to convert if they can't get the information they need to make an informed decision.&lt;/p&gt;

&lt;p&gt;This means that navigation is crucial to your success, and it should be as straightforward and well-organized as possible. In most cases, this entails placing a horizontal navigation bar across the top of the page with simple categories.&lt;/p&gt;

&lt;p&gt;A website visitor should be capable to easily discover what they're looking for on your site.&lt;/p&gt;

&lt;p&gt;Think About how you would think if you were in their shoes. What brings you to this website? What method do you use to complete that task? Perhaps you'd like to buy something, learn more, or see what's available. Regardless of the reason, if visitors can't figure it out quickly, they'll leave.&lt;/p&gt;

&lt;p&gt;There is simply too much competition in the marketplace. There's no reason for users to put up with clumsy website navigation. All they have to do is leave your site and look for what they're looking for elsewhere.&lt;/p&gt;

&lt;p&gt;Do not try a complex design to reinvent the wheel. Stick to the traditional format.&lt;/p&gt;

&lt;p&gt;For instance, most websites horizontally place the navigation menu at the top of each page. It may confuse your visitors if your menu is somewhere else.&lt;/p&gt;

&lt;p&gt;The fewer choices, the better the menu, Otherwise, finding out what people need will be too difficult. This concept is called &lt;a href="https://optinmonster.com/11-web-design-principles-that-will-boost-your-conversion-rate/"&gt;Hick's Law&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--toZ3Pdrm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.optinmonster.com/wp-content/uploads/2016/07/HicksLawgraph.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--toZ3Pdrm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.optinmonster.com/wp-content/uploads/2016/07/HicksLawgraph.png" alt="Hick's Law"&gt;&lt;/a&gt;&lt;br&gt;
The more choices, the longer it takes for somebody to make a decision. That's why complex concepts and navigations crash your rates of conversion.&lt;/p&gt;

&lt;p&gt;Remove unnecessary options from the menu. For instance, use the website logo to link to the home screen instead of having a "home" button.&lt;/p&gt;

&lt;p&gt;Ensure that you organize your categories logically, which determines which information you need easy for users to find. Consider how to look for information about a particular product or service. Think like your audience.&lt;/p&gt;

&lt;p&gt;You can add valuable links to your footer as well. You should be able to consider browsing when people scroll down the page. This prevents them from scrolling up and down to find information.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-make-use-of-visual-elements"&gt;
  &lt;/a&gt;
  4. Make Use of Visual Elements
&lt;/h2&gt;

&lt;p&gt;Visual elements can significantly improve the usability of your website. The attention-grabbing details keep users engaged, and pages with graphics and photos are far more interesting to browse than those with only text.&lt;/p&gt;

&lt;p&gt;Featuring relevant photos and graphics throughout your written content is one of the simplest ways to add visual interest to your site. These immediately catch users' attention and make them more likely to continue scrolling through your pages.&lt;/p&gt;

&lt;p&gt;Visuals can not only help you break up your written content, but they can also help you explain things more thoroughly. Show your people who you are and what you're all about. They'll grasp more information in a shorter period.&lt;/p&gt;

&lt;p&gt;The photos you choose must be relevant to the content and your brand. Stock photos should be avoided if possible, as they can come across as generic. Still, they can help illustrate a point in a pinch.&lt;/p&gt;

&lt;p&gt;Videos are one of the best forms of visual content. Including one on a page can boost conversions by 86%! This makes them an excellent addition for increasing the amount of time potential customers spend with your content, improving the performance of your website, and engaging visitors.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-choose-a-colour-scheme-that-matches-your-brand"&gt;
  &lt;/a&gt;
  5. Choose a Colour Scheme that Matches Your Brand
&lt;/h2&gt;

&lt;p&gt;If you have a well-established brand, it can help build trust with visitors to retain this brand on your site. You would like them to land on your website and think about your business immediately.&lt;/p&gt;

&lt;p&gt;The best choice is often a simple and modern design. Inconvenient designs can distract users from their content and damage their conversion chances.&lt;/p&gt;

&lt;p&gt;Your website's color choices are more important than you may realize.&lt;/p&gt;

&lt;p&gt;In less than 90 seconds, visitors will form an opinion about your website. The majority of this is due to the colors you select.&lt;br&gt;
Branding is the best way to choose a color scheme for your website. Refer to your company's logo. Do the colors on your website correspond to the image you want to project?&lt;/p&gt;

&lt;p&gt;If you have a set of brand colors that go with your logo and other elements of your brand identity, you should use them on your website as well. However, if you're starting from scratch, you can use this research to learn about color associations.&lt;/p&gt;

&lt;p&gt;If you want your brand to be linked with trust, for example, you should use the color blue. Furthermore, suppose you want customers to believe that your company produces high-quality goods. In that case, the color black can help you create that image. Similarly, you can choose your brand colors based on the brand associations you want to create.&lt;/p&gt;

&lt;p&gt;Then you can choose colors, which in people evoke certain emotions or thoughts. For example, the most reliable color is blue, and the quality is black.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-make-your-call-to-action-cta-clear-and-obvious"&gt;
  &lt;/a&gt;
  6. Make your call to action (CTA) clear and obvious.
&lt;/h2&gt;

&lt;p&gt;It is not a good idea to bury CTAs. They must be large, bold, and powerful, and they must clearly stand out as the next step for your visitors.&lt;/p&gt;

&lt;p&gt;However, most websites lack a CTA button that can be identified in under three seconds. There's a good chance you'll be among those who take longer. That is not the group you want to be a part of.&lt;br&gt;
Your call to action or CTAs are the straightforward steps to become customers by visitors.&lt;/p&gt;

&lt;p&gt;When a visitor reaches the end of one of your pages, they will most likely leave no matter how helpful they found it. If there is a clear directive that is in their best interests, this is an exception.&lt;/p&gt;

&lt;p&gt;Without a practical CTA button, you can't drive conversions.&lt;br&gt;
On the inside of a company website, I rarely see a CTA (the pages that describe what your brand does and what you recommend). This is a significant design defect. Visitors to your homepage cannot expect to be converted.&lt;/p&gt;

&lt;p&gt;You may inform visitors about the next step by putting an appropriate CTA on each page. You will send them to a different page, register for an e-mail list, or contact your company. That gives your company the authority to lead you in the right direction.&lt;/p&gt;

&lt;p&gt;The best example is &lt;a href="https://www.tkqlhce.com/click-100415557-11144421"&gt;Grammarly's website&lt;/a&gt;. If you go to their website, you're most probably going to be a customer just because of their clear call to action. BTW, Grammarly is the best grammar software. I personally love it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6a3OTrtx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ue83y3l89ew0kp0rtxc4.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6a3OTrtx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ue83y3l89ew0kp0rtxc4.JPG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-include-social-media-button"&gt;
  &lt;/a&gt;
  7. Include Social Media Button
&lt;/h2&gt;

&lt;p&gt;Adding social media buttons to your design is simple. They can go in your header, footer, navigation, or anyplace else you think they'd be helpful.&lt;/p&gt;

&lt;p&gt;Adding social buttons to your site is a simple approach to gain followers if you use social media as part of your marketing tactic. You may use them for Facebook, Twitter, LinkedIn, Instagram, Pinterest, and other social media platforms.&lt;/p&gt;

&lt;p&gt;Suppose you run a blog or often publish new information. In that case, you should think about including share buttons that allow visitors to easily share your material on their social networks. The simpler it is for them to tweet or post an article, the more probable they will do so.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;So, these were some of the web design best practices you should know. Implement these practices, and you are definitely going to see the change.&lt;/p&gt;

&lt;p&gt;Also read my article on &lt;a href="https://alihyder.hashnode.dev/css-best-practices-you-should-know"&gt;CSS Best Practices&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I have also talk about the &lt;a href="https://codingproton.com/what-is-html-css-and-javascript/"&gt;3 friends HTML, CSS, and JavaScript&lt;/a&gt; you may be interested to read.&lt;/p&gt;

&lt;p&gt;If you liked my article, then give me a thumbs up. Or, if you know any other best practices, then do let me know in the comment section below.&lt;/p&gt;

&lt;p&gt;Thanks. Happy Coding : )&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>html</category>
    </item>
  </channel>
</rss>
