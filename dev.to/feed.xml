<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Choosing Between AWS Lambda and Docker</title>
      <author>Francesco Ciulla</author>
      <pubDate>Thu, 23 Sep 2021 19:10:05 +0000</pubDate>
      <link>https://dev.to/tinystacks/choosing-between-aws-lambda-and-docker-2e6k</link>
      <guid>https://dev.to/tinystacks/choosing-between-aws-lambda-and-docker-2e6k</guid>
      <description>&lt;p&gt;Article by Jay Allen&lt;/p&gt;

&lt;p&gt;One of the great things about AWS is the vast array of features available to software developers. Sadly, one of the most confusing things about AWS is...the vast array of features available to developers!&lt;/p&gt;

&lt;p&gt;AWS provides multiple methods for deploying applications into the cloud. Two of these methods - AWS Lambda and Docker - have grown rapidly in popularity over the past several years. In this article, we compare the benefits of each and discuss when you might want to choose one over the other. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#aws-lambda"&gt;
  &lt;/a&gt;
  AWS Lambda
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/lambda/"&gt;AWS Lambda&lt;/a&gt;  is a "serverless" service that enables running code in the cloud. With Lambda, application developers can package code written &lt;a href="https://aws.amazon.com/lambda/faqs/"&gt;in a variety of programming languages&lt;/a&gt;  - including Java, Go, C#, Python, Powershell, Node.js, and Ruby - into a callable function that complies with their language's Lambda interface. They can then upload these Lambda functions to their AWS accounts, where they can be executed from anywhere over the Internet. &lt;/p&gt;

&lt;p&gt;The word "serverless" is a bit of a misnomer here; obviously, AWS didn't find some magical way to run code without compute capacity! "Serverless" here means that the compute power used to run this code doesn't run in your AWS account. Rather, it's executed on one of a series of computing clusters run by AWS itself. This frees development teams up to focus on the business logic of their application rather than on managing compute capacity. &lt;/p&gt;

&lt;p&gt;Lambda functions  &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-invocation.html"&gt;can be called, or &lt;em&gt;invoked&lt;/em&gt;&lt;/a&gt;, through a variety of methods. One of the most common is by connecting your Lambda functions to AWS API Gateway, which exposes them as REST API calls. Lambda functions can also be used  &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventsourcemapping.html"&gt;to implement customization and back-end processing logic for a large number of AWS services&lt;/a&gt;, including Amazon DynamoDB, Amazon Kinesis, and Amazon Simple Queue Service, among others. Lambda functions may also execute as scheduled tasks, and can even be executed directly from the AWS Command Line Interface (CLI) and the AWS Console. &lt;/p&gt;

&lt;p&gt;AWS Lambda can be thought of as the original serverless technology on AWS. It wasn't the first serverless technology on the block.  &lt;a href="https://dashbird.io/blog/origin-of-serverless/"&gt;That honor may go to Google' App Engine&lt;/a&gt;, which has been doing its thing since 2008. (Lambda, first released in 2015, is comparatively a youngin'.) But it helped inspire a boom in the serverless technology industry that continues to this day. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#docker"&gt;
  &lt;/a&gt;
  Docker
&lt;/h1&gt;

&lt;p&gt;In the bad ol' days of software deployment, developers threw their code onto clusters of production servers that might all have wildly different configurations. A web application might work for one user and then fail for a second user if the server to which the request was routed lacked a certain shared library or configuration setting. &lt;/p&gt;

&lt;p&gt;Docker was created specifically to resolve this nightmare scenario. A Docker container is a unit of software that contains everything - code, dependent libraries, and configuration files - that an application requires to run. The container is then deployed to and run on a virtual machine. &lt;/p&gt;

&lt;p&gt;The utility of Docker containers lies in their "run once, run anywhere" nature. Once you test a Docker container and verify that it functions as expected, that same container will run on any system to which you deploy it. &lt;/p&gt;

&lt;p&gt;Unlike Lambda, Docker isn't inherently "serverless". Docker is best thought of as a packaging and deployment mechanism. There are multiple ways on AWS to run a Docker container, including: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://aws.amazon.com/ecs/"&gt;Elastic Container Service&lt;/a&gt;. ECS is AWS's scalable, enterprise-grade solution for running Docker containers. Containers can be deployed either on an Amazon EC2 cluster hosted in your AWS account or using Fargate, AWS's serverless container deployment solution. (For more, check out my recent article on  &lt;a href="https://blog.tinystacks.com/ecs-serverless-or-not-fargate-vs-ec2-clusters"&gt;using EC2 clusters vs. Fargate for your Docker deployments&lt;/a&gt;.)&lt;/li&gt;
&lt;li&gt; &lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_docker.html"&gt;Elastic Beanstalk&lt;/a&gt;.  AWS's "all-in-one" deployment technology will run your Docker container on a Docker-enabled EC2 instance. &lt;/li&gt;
&lt;li&gt; &lt;a href="https://aws.amazon.com/blogs/aws/new-for-aws-lambda-container-image-support/"&gt;As an AWS Lambda Function&lt;/a&gt; . Here's where things get &lt;em&gt;really&lt;/em&gt; confusing! Yes, you can implement code in a Docker container and expose it via a Lambda function. I'll talk a little about who you might want to do this below. &lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#microservices-served-two-ways"&gt;
  &lt;/a&gt;
  Microservices, Served Two Ways
&lt;/h1&gt;

&lt;p&gt;Both AWS Lambda and Docker containers are solid choices for deploying microservices architectures on AWS: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lambda functions map handily to REST API endpoints. You can use Lambda functions in conjunction with AWS API Gateway to quickly build out a REST API complete with advanced features such as user authentication and API throttling. &lt;/li&gt;
&lt;li&gt;Docker makes it easy to implement REST APIs using your favorite REST API framework - such as Node.js, Flask, Django, and many others. Because a Docker container is a deployable unit, you can easily partition your REST APIs into logical units and manage them through separate CI/CD pipelines.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#lambda-vs-docker-who-wins"&gt;
  &lt;/a&gt;
  Lambda vs. Docker: Who Wins?
&lt;/h1&gt;

&lt;p&gt;But this raises the perennial question: Which one is &lt;em&gt;better&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The first thing to point out is that this isn't necessarily an either/or question.&lt;/strong&gt; Both Lambda and Docker are powerful technologies that development teams may choose to combine within a single project. For example, you may decide to implement your microservice as a series of Docker containers, and then use Amazon Simple Queue Service in conjunction with AWS Lambda functions to implement a loosely coupled communications framework between services. &lt;/p&gt;

&lt;p&gt;But let's set that aside for now and focus on a narrower question: Which technology should you choose &lt;strong&gt;when implementing a microservices architecture&lt;/strong&gt;? &lt;/p&gt;

&lt;p&gt;As with most things in the world of the Cloud, there's no clear-cut answer here. But let's look at a few factors you should consider when making this decision for your own project. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementation-languages"&gt;
  &lt;/a&gt;
  Implementation Languages
&lt;/h2&gt;

&lt;p&gt;When it comes to choice of programming languages and frameworks, Docker is the clear winner. AWS Lambda's support for programming languages is limited to the languages for which it defines an integration API. Docker, meanwhile, can host any language or framework that can run on a Dockerized Linux or Windows operating system. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#portability"&gt;
  &lt;/a&gt;
  Portability
&lt;/h2&gt;

&lt;p&gt;The language and framework issue leads me to another issue: &lt;strong&gt;cloud lock-in&lt;/strong&gt;. AWS Lambda isn't an industry standard - it's AWS's proprietary serverless tech. If you need to move to a new cloud provider (Azure, GCP) for any reason, your code may require significant rework to function on the new provider's equivalent serverless solution.  &lt;/p&gt;

&lt;p&gt;By contrast, Docker is pretty much a &lt;em&gt;de facto&lt;/em&gt; standard. A Docker container that works on AWS's ECS will also run on  &lt;a href="https://azure.microsoft.com/en-us/services/app-service/containers/"&gt;Azure App Service&lt;/a&gt;, &lt;a href="https://cloud.google.com/run"&gt;Google Cloud Run&lt;/a&gt;, and  &lt;a href="https://kubernetes.io/"&gt;Kubernetes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you still want to leverage Lambda but are concerned about portability, I'd recommend  &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/best-practices.html"&gt;following AWS's recommendations around Lambda code design&lt;/a&gt;. You can easily separate your function's execution logic out from the Lambda execution environment. This reduces your dependency on Lambda and makes your code more portable. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scaling"&gt;
  &lt;/a&gt;
  Scaling
&lt;/h2&gt;

&lt;p&gt;If your microservice could potentially be called hundreds of thousands of millions of times a day (or even &lt;em&gt;hour&lt;/em&gt;), you'll want to ensure it can scale automatically to meet user demand. Fortunately, both AWS Lambda and Docker offer plenty of options to create a highly scalable microservice. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-scaling.html"&gt;AWS Lambda creates an instance of your function to serve traffic to users&lt;/a&gt; . As that instance reaches capacity, Lambda will automatically create new instances of your function to meet demand. Lambda can "burst" from between 500 up to 3,000 instances per region to handle sudden traffix influxes, and can then scale up to 500 new instances every minute. &lt;/p&gt;

&lt;p&gt;AWS also provides multiple options for scaling Docker containers. Containers deployed using Fargate, AWS's serverless container deployment solution,  &lt;a href="https://aws.amazon.com/premiumsupport/knowledge-center/ecs-fargate-service-auto-scaling/"&gt;can be configured to scale out based on Amazon CloudWatch alarms&lt;/a&gt;. If you're deploying Docker containers to an EC2 cluster in your AWS account, you can even  &lt;a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-auto-scaling.html"&gt;scale out the size of your cluster&lt;/a&gt; .&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#execution-speeds"&gt;
  &lt;/a&gt;
  Execution Speeds
&lt;/h2&gt;

&lt;p&gt;In general, both AWS Lambda and Docker containers can be configured to provide the performance required by most applications. &lt;/p&gt;

&lt;p&gt;However, I'd be remiss if I didn't note &lt;strong&gt;the infamous Lambda cold start issue&lt;/strong&gt;. Remember above how I said that Lambda will create a new instance of your function when it needs to scale out. This process requires time: the Lambda function code has to be downloaded to an EC2 instance in AWS's Lambda server farm, and the execution environment and its associated dependencies also take time to load and start. This is known as a &lt;strong&gt;cold start&lt;/strong&gt;. It has a particularly hard impact on Java and .NET applications, both of which have weighty runtime environments. &lt;/p&gt;

&lt;p&gt;Fortunately, as Mike Roberts at Symphonia points out,  &lt;a href="https://blog.symphonia.io/posts/2020-06-30_analyzing_cold_start_latency_of_aws_lambda"&gt;cold start isn't an issue for high-demand applications&lt;/a&gt;. It only becomes a factor in low-execution environments - e.g., when using a Lambda function as a callback from another AWS service, such as CodePipeline. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#application-dependencies"&gt;
  &lt;/a&gt;
  Application Dependencies
&lt;/h2&gt;

&lt;p&gt;When it comes to dependency management - libraries that your application depends upon - Docker is king. As I discussed earlier, a Docker container is a self-contained package containing everything your application needs to run. &lt;/p&gt;

&lt;p&gt;It's also possible to ship dependencies with your AWS Lambda functions as part of the function's ZIP file. However, things get complicated when you need to package OS-native dependencies. Furthermore, Lambda packages max out at 250MB, which can be an issue when packaging large dependency frameworks. &lt;/p&gt;

&lt;p&gt;Fortunately, AWS Lambda's support for Docker containers means you can get the best of both worlds. By implementing your functions as Docker containers, you can package any dependency your application requires and ensure it always runs as intended. Docker containers on AWS Lambda can be up to 10GB in size, which is plenty of space for the vast majority of applications. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#longrunning-tasks"&gt;
  &lt;/a&gt;
  Long-Running Tasks
&lt;/h2&gt;

&lt;p&gt;If your code is doing some sort of batch processing - processing DynamoDB events, filtering an Amazon Kinesis stream, generating large images, etc. - you'll need to concern yourself with execution times. Lambda functions can only run for up to 15 minutes before the service will time out. By contrast, Docker containers have no built-in limitations on workload runtimes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deployment-and-management"&gt;
  &lt;/a&gt;
  Deployment and Management
&lt;/h2&gt;

&lt;p&gt;As I mentioned earlier, Docker provides a simple and easy-to-understand deployment model that enables packaging a single microservice into a single Docker container. This is where AWS Lambda has often been at a disadvantage: since Lambda is a function-based service, it's proven more challenging to manage an entire service or application as a collection of interconnected Lambda functions. &lt;/p&gt;

&lt;p&gt;Fortunately, new tools have come out over the past several years to address exactly this problem.  &lt;a href="https://aws.amazon.com/serverless/sam/"&gt;AWS's Serverless Application Model (SAM)&lt;/a&gt;  enables developers to design, develop, and deploy entire serverless apps directly onto AWS using Lambda and CloudFormation. Other tools, such as the open-source project  &lt;a href="https://www.serverless.com/"&gt;Serverless&lt;/a&gt;, aim to create similar zero-infrastructure deployment experiences for serverless applications on AWS and other cloud providers. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cost"&gt;
  &lt;/a&gt;
  Cost
&lt;/h2&gt;

&lt;p&gt;In general, a "serverless" solution is going to cost you more than a non-serverless solution. We at TinyStacks discovered this recently  &lt;a href="https://blog.tinystacks.com/ecs-serverless-or-not-fargate-vs-ec2-clusters"&gt;when we moved all of our container workloads from Fargate to our own ECS EC2 clusters&lt;/a&gt;, resulting in a cost savings of 40%. &lt;/p&gt;

&lt;p&gt;While we haven't done any direct cost comparisons with AWS Lambda, evidence from others suggests that it's one of the least cost-effective solutions going. An analysis this year by Eoin Shanaghy and Steef-Jan Wiggers on InfoQ  &lt;a href="https://www.infoq.com/articles/aws-lambda-price-change/"&gt;found that running a workload on AWS Lambda can cost up to 7.5 times more&lt;/a&gt;  than running the same workload on AWS Fargate with spot capacity. Given that we manage to run our workloads at a 40% discount on EC2 clusters compared to AWS Fargate, this shows you just how pricey Lambda really is.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#our-recommendation"&gt;
  &lt;/a&gt;
  Our Recommendation
&lt;/h1&gt;

&lt;p&gt;For large-scale microservice workloads, we've found that running Docker containers on our own tightly managed EC2 cluster using ECS to be the ideal solution. &lt;/p&gt;

&lt;p&gt;You may get good mileage from using Lambda selectively for smaller-scale workloads. However, we would recommend implementing your code in Docker containers wherever possible - even when Lambda is your preferred deployment mechanism. Docker containers not only port well across cloud providers but can also be used with numerous AWS services. This makes it easy to change your deployment and hosting strategy in response to your company's changing needs. &lt;/p&gt;

</description>
      <category>aws</category>
      <category>docker</category>
      <category>devops</category>
      <category>programming</category>
    </item>
    <item>
      <title>Product developers’ guide to getting started with AI — Part 2: Surfing through dataframes</title>
      <author>Mage</author>
      <pubDate>Thu, 23 Sep 2021 19:05:44 +0000</pubDate>
      <link>https://dev.to/mage_ai/product-developers-guide-to-getting-started-with-ai-part-2-surfing-through-dataframes-c7d</link>
      <guid>https://dev.to/mage_ai/product-developers-guide-to-getting-started-with-ai-part-2-surfing-through-dataframes-c7d</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR
&lt;/h2&gt;

&lt;p&gt;Surfing through data is a quick and simple way to put all relevant information on the top. To go from a searching experience to a surfing experience, all it takes is a strong filtering, sorting, and grouping procedure.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outline"&gt;
  &lt;/a&gt;
  Outline
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;Before we begin&lt;/li&gt;
&lt;li&gt;Filtering dataframes&lt;/li&gt;
&lt;li&gt;Conditions&lt;/li&gt;
&lt;li&gt;Grouping dataframes&lt;/li&gt;
&lt;li&gt;Sorting dataframes&lt;/li&gt;
&lt;li&gt;Conclusion&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In the past, people had to use the &lt;a href="https://www.britannica.com/science/Dewey-Decimal-Classification"&gt;Dewey Decimal System&lt;/a&gt; in order to discover new information to answer questions and perform research. It was a tedious and monotonous process that required you to pick a topic, then look through each in an unchanging order. Following the Dewey Decimal System, the search results for a person looking for answers on “How to cook” is the exact same for another, even when they are looking for a different answer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8eHULzwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/icmz4t94o1hhq31ilcqo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8eHULzwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/icmz4t94o1hhq31ilcqo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;em&gt;(Source: Reddit)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Nowadays, when people have a question or want to learn, they surf the web to find an answer. You found this article and clicked it probably because it has the answers to what you’re looking for. Search engines visit sites that collect tons of data and employ techniques to decide which piece of data goes on top.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G8TtzhHU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ogtwb3vxm8chpnd7mpc2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G8TtzhHU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ogtwb3vxm8chpnd7mpc2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To surf through a dataframe follow these 3 steps: filter, order, and group. This transforms your user experience from searching to surfing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#before-we-begin"&gt;
  &lt;/a&gt;
  Before we begin
&lt;/h2&gt;

&lt;p&gt;In this guide, we’ll be using the &lt;a href="https://github.com/pandas-dev/pandas/tree/master/doc/data/titanic.csv"&gt;Titanic dataset&lt;/a&gt; along with &lt;a href="https://colab.research.google.com/"&gt;Google Collab&lt;/a&gt;. We’ll import the dataset, look at the metadata to find the best filters, then slice groups of data down in order to cleanly surf. If you need a refresher on anything mentioned above, please refer back to &lt;a href="https://m.mage.ai/product-developers-guide-to-getting-started-with-ai-part-1-introduction-to-dataframes-481c305d189"&gt;part 1&lt;/a&gt; to learn how to set up the environment and view metadata.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d8TjOpJ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/44uf05i5ix895qechttv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d8TjOpJ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/44uf05i5ix895qechttv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#filtering-dataframes"&gt;
  &lt;/a&gt;
  Filtering Dataframes
&lt;/h2&gt;

&lt;p&gt;Back on the Titanic, everyone is boarding the ship and you find a ticket on the floor. But it doesn’t say anything else about the name of the person on it. From the writing you can see the 1st 4 digits, 3734, with the remaining being too dirty to figure out. Being the good samaritan that you are, you tell the staff and begin your search for the owner.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EgbTnWja--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x16art4jvcrdqroh8u3m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EgbTnWja--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x16art4jvcrdqroh8u3m.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s examine entries of the dataframe for the ticket and the name.&lt;/p&gt;

&lt;p&gt;To select specifically two columns we can use what we learned in part 1 with loc and iloc, or we may use items. In Pandas, the filter method takes in the items method in order to display columns. For the case of the Ticket, we want to display the ‘Name’ and ‘Ticket’ Column. If you are unfamiliar with this, refer back to &lt;a href="https://m.mage.ai/product-developers-guide-to-getting-started-with-ai-part-1-introduction-to-dataframes-481c305d189"&gt;part 1&lt;/a&gt; and use info to find the metadata.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tCxq_RYP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/488rehh5igyo3dhot3z8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tCxq_RYP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/488rehh5igyo3dhot3z8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When comparing strings a great filter to use is contains. In this case we check if the ticket number contains 3734.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5OHZJvk8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d5akap3vhxbvnuau53gk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5OHZJvk8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d5akap3vhxbvnuau53gk.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We see that the owner is a young man named William Henry Allen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--86NJk5vS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rx927bar6n1rvv7pwd4b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--86NJk5vS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rx927bar6n1rvv7pwd4b.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great job! We found him, but he looks lost. We chat with William, and he has a request for us. He got separated at the checkpoint and needs help locating his business partners. He forgot their names, but recalls that they’re a group of 4 middle-aged men embarking in group Q.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JiWuLz7e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6emml6v6fxy16es7fjqg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JiWuLz7e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6emml6v6fxy16es7fjqg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have a new problem, but unlike the ticket, this time all we know is that we’re searching for middle-aged men in group Q. None of these values are unique so we can’t only filter. We’ll need to start expanding our search repertoire with conditionals.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conditions"&gt;
  &lt;/a&gt;
  Conditions
&lt;/h2&gt;

&lt;p&gt;Similar to other programming languages, Pandas supports filtering with conditional operators. There are 2 types of operators we will be focusing on, relational and logical. In Pandas, to apply a condition to a dataframe, the syntax is df[(“conditions”)].&lt;/p&gt;

&lt;p&gt;The relational operators are &amp;gt; (greater than), &amp;gt;= (greater than or equal to), &amp;lt; (less than), &amp;lt;= (less than or equal to) , == (equals), != (not equals) and are used to search through a dataframe by comparing all values in a column with a fixed value. Then, to compare multiple columns we chain the conditionals of relational operators together with logical operators &amp;amp; (and), | (or) , ~ (not).&lt;/p&gt;

&lt;p&gt;To find all middle-aged men in group Q, let’s break it down into 2 parts. The 1st part is to capture all the people in group Q. We can use a single relational operator on the embarked column, df[‘Embarked] == ‘Q’. For the males, df[‘Sex’] == ‘male’. Alternatively, we can use “not” to invert it as df[‘Sex ~== ‘female’. Finally we chain the conditionals together using &amp;amp; (AND) to get all males in group Q.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ar5MWf4V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uh6vh79s9st193jluhfc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ar5MWf4V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uh6vh79s9st193jluhfc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;em&gt;Additionally, use these (see info) boolean operators to compare dataframes.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#grouping-dataframes"&gt;
  &lt;/a&gt;
  Grouping Dataframes
&lt;/h2&gt;

&lt;p&gt;The data is reduced. We begin analysis on how many are in our search space that match what we’re looking for. In this case we’re searching for the right age range.&lt;/p&gt;

&lt;p&gt;Groupby is useful to get the count of how many values match, and from there we can begin slicing the data with head. Start by breaking down the ages into 3 groups, adolescent to adulthood, middle-aged, and senior. Then define rules for the 3 groups. The ranges will be 0–31, 32–55, and 56+ respectively. We know that age must be defined, so we clear up all empty age values. The ‘[‘ is inclusive and ‘(‘ is exclusive.&lt;/p&gt;

&lt;p&gt;Create a range of bins and pass it as a parameter for groupby. Use groupby to find the rows of middle-aged and extract.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6BZIGTns--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lhwot9csocq5jpqwoht0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6BZIGTns--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lhwot9csocq5jpqwoht0.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;em&gt;Cut down the data into chunks of 0–31, 32–55, and 56+&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sorting-dataframes"&gt;
  &lt;/a&gt;
  Sorting Dataframes
&lt;/h2&gt;

&lt;p&gt;The 4 fellows we are looking for are in the middle of the dataframe. We sort it in order and slice specifically starting from 9 to 13 (9+4) to find only the middle-aged men in group Q.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BWX7Tqw9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j4o4m2ky9gtzit7iwj1h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BWX7Tqw9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j4o4m2ky9gtzit7iwj1h.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There we have it! We’ve reduced the search space from 891 passengers aboard the ship all the way down to 4. Inspecting the dataframe, we see that there are 4 possible people.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P5sSh6EX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g7a565f7jcvvwh9eljfl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P5sSh6EX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g7a565f7jcvvwh9eljfl.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;em&gt;Mr. Patrick Dooley, Mr. John Bourke, Mr. James Farrell, and Dr. William Edward Minahan&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;William should be able to reunite with his partners now. Just in time as the foghorn blows and the ship begins to sail off. Stay tuned for what happens to the Titanic as it embarks across the sea. We’ll take a deeper look, in part 3, “Terraforming Dataframes”.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VrDwDryL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9fm286y69x9url19l7ls.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VrDwDryL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9fm286y69x9url19l7ls.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;em&gt;(Source: dearworldlovehistory.com)&lt;/em&gt;&lt;/p&gt;

</description>
      <category>ai</category>
      <category>artificialintelligence</category>
      <category>dataframes</category>
      <category>deved</category>
    </item>
    <item>
      <title>Advantages of Learning Web Development💡</title>
      <author>Ujjwal (UG THE SEP)</author>
      <pubDate>Thu, 23 Sep 2021 18:20:48 +0000</pubDate>
      <link>https://dev.to/ug/advantages-of-learning-web-development-467p</link>
      <guid>https://dev.to/ug/advantages-of-learning-web-development-467p</guid>
      <description>&lt;p&gt;So the first question which comes before learning Web development for beginners it that &lt;strong&gt;Why should I learn Web development&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We will know about advantages of learning Web Development in 2021&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TgMEGoZ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wbsfskyk9smg7zj08jzz.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TgMEGoZ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wbsfskyk9smg7zj08jzz.jpeg" alt="Creativity"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-to-light-up-your-creativity"&gt;
  &lt;/a&gt;
  1. To Light up your creativity💡
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Website Development let your mind &lt;strong&gt;free&lt;/strong&gt; to think and apply whatever you want. &lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can merge color and form any design&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can create an illusion using &lt;strong&gt;div&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can present your own animation and it is the most important thing that we open our mind to think out of the box.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: It will help you to enhance your presentation skill. You can express your thought by creating Websites.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#2-to-enhance-your-designing-skills"&gt;
  &lt;/a&gt;
  2. To Enhance Your Designing Skills🎨
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YfYM4snM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9yfb0dme60sa4l0qipsn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YfYM4snM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9yfb0dme60sa4l0qipsn.png" alt="Design"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Designing is a part of creating your website or presenting your website in front of your customers.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bootstrap is a nice framework to create design. Designing also affects your mind to think out of the box.&lt;/li&gt;
&lt;li&gt;Best design is that which have proper spacing, navigation, alignment, proper use of color and font, clarity and topography. &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: It will take you to become a good designer but consistency is the key to success always play with color font to understand their chemistry.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#3-to-enhance-problem-solving-ability"&gt;
  &lt;/a&gt;
  3. To Enhance Problem solving ability💎
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rihUR0Q0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5kn6ddszhccmoohlfokz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rihUR0Q0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5kn6ddszhccmoohlfokz.jpg" alt="Problem-Solving Ability"&gt;&lt;/a&gt;&lt;br&gt;
You may face many minor bugs while creating Websites which were not noticed by you and create a major problem in future&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Also think that what can be the disadvantage of using any particular tag&lt;/li&gt;
&lt;li&gt;If something is not working properly then check whether you didn't miss any tag to close&lt;/li&gt;
&lt;li&gt;The most useful is dry run your code&lt;/li&gt;
&lt;li&gt;Cross-Browser testing&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: The major problem is to keep secure your websites from hacker or viruses. Always upgrade your security&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#4-high-chance-to-get-job"&gt;
  &lt;/a&gt;
  4. High chance to get Job🤑
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B9itjVRL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/60zh2ceqpl49qaqz4yqo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B9itjVRL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/60zh2ceqpl49qaqz4yqo.jpg" alt="Money"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a Full-Stack Developer there is high chance to get job because there is a large demand in market for Full-Stack Developer. So you can apply for it if you are a Full-Stack Developer. &lt;br&gt;
There is a 20% growth in demand for Full-stack developer compared to the last couple of years with approximately 12,996 open positions for this role in the US alone.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can even start freelancing &lt;/li&gt;
&lt;li&gt;You can create website for your neighbourhood as if they have a shop&lt;/li&gt;
&lt;li&gt;You have a wonder life&lt;/li&gt;
&lt;li&gt;No issue of capital&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Add on some more advantages in the comment section👇&lt;/p&gt;

&lt;p&gt;Start Learning Web Development for free &lt;br&gt;
&lt;a href="https://www.coursera.org/courses?query=web%20development"&gt;Coursera free Web development course&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow me for more such blogs😊&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__user ltag__user__id__648350"&gt;
  
    .ltag__user__id__648350 .follow-action-button {
      background-color: #fad20a !important;
      color: #fb9660 !important;
      border-color: #fad20a !important;
    }
  
    &lt;a href="/ug" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q6JMttXe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--hoYHdU6J--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/648350/1f25f109-0b5a-4248-8308-8950d68f9638.jpeg" alt="ug image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/ug"&gt;Ujjwal (UG THE SEP)&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/ug"&gt;I am a desktop developer from India currently learning python. Exploring the world of programming&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#readmore"&gt;
  &lt;/a&gt;
  Readmore
&lt;/h2&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/ug" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q6JMttXe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--hoYHdU6J--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/648350/1f25f109-0b5a-4248-8308-8950d68f9638.jpeg" alt="ug"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ug/top-5-website-to-learn-web-development-2k4h" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Top 5 Websites to Learn Web Development &lt;/h2&gt;
      &lt;h3&gt;Ujjwal (UG THE SEP) ・ Sep 3 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/ug" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q6JMttXe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--hoYHdU6J--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/648350/1f25f109-0b5a-4248-8308-8950d68f9638.jpeg" alt="ug"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ug/top-5-ide-for-web-development-4df8" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Top 5 IDE for Web Development🤩&lt;/h2&gt;
      &lt;h3&gt;Ujjwal (UG THE SEP) ・ Sep 12 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
      <category>beginners</category>
    </item>
    <item>
      <title>11 Best No-Code and Low-Code Back-Ends for 2021
</title>
      <author>Aman Mittal</author>
      <pubDate>Thu, 23 Sep 2021 18:10:16 +0000</pubDate>
      <link>https://dev.to/amanhimself/11-best-no-code-and-low-code-back-ends-for-2021-4i7</link>
      <guid>https://dev.to/amanhimself/11-best-no-code-and-low-code-back-ends-for-2021-4i7</guid>
      <description>&lt;p&gt;No-code and Low-code development platforms let people worldwide build their businesses and applications to serve them without writing code. According &lt;a href="https://go.forrester.com/blogs/predictions-2020-software-development/"&gt;Forrester&lt;/a&gt;, the no-code/low-code category will grow to $21.2 billion by 2021.&lt;/p&gt;

&lt;p&gt;Before these platforms, building an application for a business would require hiring experienced software developers. But that's not the case anymore. Today, many no-code/low-code platforms make it possible for independent creators, artists, and entrepreneurs alike to build applications on their own.&lt;/p&gt;

&lt;p&gt;Even though there seems to be a paradigm shift from writing code to using visual development tools, the fundamental concepts of having a back-end and front-end remain the same. To build an application for your business, you will require a way to connect your back-end and front-end. A communication channel called Application Programming Interface (API) is used to request information from one computer system to another. When developing an application, you typically call APIs back and forth between a back-end and a front-end.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://draftbit.com/"&gt;Draftbit&lt;/a&gt; is a visual development platform to build native mobile applications. It is back-end agnostic. Mobile apps built with Draftbit can be connected to virtually any back-end-as-a-service (BaaS) platform via REST API. Our vast user base uses different back-end services to connect their applications with a database. This allowed us to look at the most popular back-ends being integrated inside Draftbit. For example, Xano, Supabase, Firestore, Airtable, and more that aim to provide a better user experience overall. We are also &lt;a href="https://draftbit.com/experts"&gt;app development experts&lt;/a&gt; and can guide you towards the right back-end and what to look for.&lt;/p&gt;

&lt;p&gt;This article aims to highlight some of the best no-code/low-code back-end platforms for you to use in 2021. We highlight their unique features, if the tool offers scalability, and if it is flexible enough or not. Lastly, for each tool, there is a sneak peek into their pricing plans. Many of the back-end tools listed below provide an API gateway to connect the front-end from a hosted back-end offered by the platform.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#airtable"&gt;
  &lt;/a&gt;
  Airtable
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wyi23YtZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7a2xv7oufh9vs4xv9uox.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wyi23YtZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7a2xv7oufh9vs4xv9uox.png" alt="Airtable logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best for Beginners who want a visual, flexible back-end and are just getting started with understanding APIs.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://airtable.com/"&gt;Airtable&lt;/a&gt; is an enhanced version of Google Sheets or a typical spreadsheet. However, it offers more than that. Simple to get started, it has rich API support. It allows creating a spreadsheet-based database without the hassle of writing code. In addition, it is a fast and flexible way to organize data tables (known as &lt;em&gt;Bases&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;It contains features such as computed fields. They are special field types where Airtable handles the computation of values. Automating repetitive tasks saves a ton of time and reduces the margin of error. Building automated workflows in an Airtable base is done by using a custom action to trigger an event. Eventually, the action integrates inside an Airtable Base.&lt;/p&gt;

&lt;p&gt;Airtable also generates a REST API for each base. A front-end development tool can consume the API directly. Various operations are performed using different endpoints generated by Airtable. Operations such as reading, writing, updating, sorting and filtering data, and more, are all available.&lt;/p&gt;

&lt;p&gt;While Airtable might not be a traditional back-end, it gives both teams and individuals the freedom to organize tasks. In addition, it offers 50+ built-in applications to easily integrate with a wide array of other apps like G Suite, Outlook, Sendgrid, Slack, Jira, and more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free: unlimited bases with each base limited to 1200 records and 2 GB of attachments per base.&lt;/li&gt;
&lt;li&gt;Plus: costs $12 per month with 5000 records per base, snapshot history, and 5 GB of attachments per base.&lt;/li&gt;
&lt;li&gt;Pro: costs $24 per month with unlimited apps, 50000 records per base, and 20 GB of attachments per base.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#supabase"&gt;
  &lt;/a&gt;
  Supabase
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pcGOG_PE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kmm7jkj8z3z28nz6z6sg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pcGOG_PE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kmm7jkj8z3z28nz6z6sg.png" alt="Supabase logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best for Experts who are building production-grade applications, are familiar with SQL queries, value open-source, and want a scalable solution from the start.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://supabase.io/"&gt;Supabase&lt;/a&gt; is an open-source Firebase alternative back-end. It provides a dedicated database based on Postgres. It supports importing existing databases as well. Besides, there is built-in support for making authenticated API requests with integrated JWT authentication. This allows you to control what your app users can access. It exposes a WebSocket endpoint that enables any front-end apps to communicate in real-time. The advantage of using a relational database is that it helps you be consistent all the time. &lt;/p&gt;

&lt;p&gt;Relational or SQL databases are table-based databases. They have pre-defined schema and use Structured Query Language (&lt;em&gt;SQL&lt;/em&gt;) for defining and manipulating data. Non-relational or NoSQL databases have dynamic schema. They store data in the form of a collection or multiple collections of documents.&lt;/p&gt;

&lt;p&gt;When using Supabase, you will spend most of the time inside its Graphical User Interface (&lt;em&gt;GUI&lt;/em&gt;). It also provides an SQL editor, which you can use to write custom SQL queries to manipulate data inside a table.&lt;/p&gt;

&lt;p&gt;One of the most likable features is that it provides a ready-to-use REST API as soon as a database is created. It is front-end agnostic and can be used with any front-end tool building application. It gives you the choice of either self-hosting a Supabase or using their cloud service to host one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free: $0 per month with unlimited API requests, real-time functionality, and database space up to 500 MB.&lt;/li&gt;
&lt;li&gt;Pro: $25 per month unlimited API requests, real-time functionality, database space up to 8 GB, supports automatic backup and log retention for up to 7 days.&lt;/li&gt;
&lt;li&gt;Pay as you go: Starts at $25 per month plus the usage of services like database space, storage, and transfer limits.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#firebase-firestore"&gt;
  &lt;/a&gt;
  Firebase Firestore
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PtX4zxXP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nhnm15u5zck2mi858k2j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PtX4zxXP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nhnm15u5zck2mi858k2j.png" alt="Cloud Firestore logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best for Intermediates who are looking to build fast, want to delegate security and user management to the backend service, and can cope with some learning curve.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://firebase.google.com/docs/firestore"&gt;Firebase Firestore&lt;/a&gt; is a database service from Google. It has a colossal community even though Firestore came out of beta only two years back. It is a managed database designed to embrace serverless application development. With an Opinionated set of features, it provides and is based on NoSQL.&lt;/p&gt;

&lt;p&gt;The NoSQL paradigm lets you store data in the form of collections and documents. Each document contains fields. Every field has its unique data type. The advantage of such a database type is that it helps you move fast when building applications.&lt;/p&gt;

&lt;p&gt;Firestore has its own built-in security system. It helps you to define rules to allow app users to access data based on their authenticated state. It supports traditional sign providers using email/password. Social providers such as Google, Facebook, Apple, Twitter, and more.&lt;/p&gt;

&lt;p&gt;Integrating Firebase with a front-end development platform is a bit opinionated. It usually means that a no-code or a low-code platform has to provide an out-of-the-box integration for Firebase to use within their platform.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Spark Plan(free): 1 GiB total stored data in Firestore&lt;/li&gt;
&lt;li&gt;Blaze plan (pay as you go): 1 GiB total plus $0.108 per more GiB stored data in Firestore&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#xano"&gt;
  &lt;/a&gt;
  Xano
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eBVNRCkh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hu33u3e0btqa1brn41cl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eBVNRCkh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hu33u3e0btqa1brn41cl.png" alt="Xano logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best for Low-Coders who want to move fast, and need a scalable database with a built-in API gateway.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.xano.com/"&gt;Xano&lt;/a&gt; is a scalable back-end that is front-end agnostic. It provides a hosted and flexible database based on Postgres. It supports the REST API paradigm to consume data to a front-end tool. It automatically generates ready-to-use REST API endpoints for each data table based on the schema created. Each endpoint generated by Xano can be customized using its No code API Builder.&lt;/p&gt;

&lt;p&gt;Getting started with Xano is easy. There aren't many configurations required once you log in. It abstracts the back-end away to a large extent. However, the abstraction doesn't cost the performance and the power of a database. Another feature included with Xano is that it supports authenticated API requests. It also provides the ability to create custom functions to query databases without writing a line of code. The flexibility and scalability of such a platform make it one of the most simple back-end to get started.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free: limited to one workspace with 1000 total records and a rate-limited API.&lt;/li&gt;
&lt;li&gt;Launch: costs $67 per month, includes five workspaces with 100,000 total records per workspace, and no rate limitation on the API.&lt;/li&gt;
&lt;li&gt;Scale: costs $225 per month, includes 10 workspaces, storage with 1,000,000 total records.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#bubble-cms"&gt;
  &lt;/a&gt;
  Bubble CMS
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_i4DSxOm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6yn3s199k62z7f6ovxyr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_i4DSxOm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6yn3s199k62z7f6ovxyr.png" alt="Bubble CMS logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best for No-Coders who already have their web application built and database hosted with Bubble.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bubble.io/"&gt;Bubble&lt;/a&gt; is a hosted web application “all in one” builder that gives complete design freedom to its users with no-code. It allows you to create web application layouts without having any knowledge of CSS or HTML. Traditional web apps require you to manage the code and set up a deployment process to a web server. The platform manages the deployment process and web hosting for you.&lt;/p&gt;

&lt;p&gt;Despite Bubble being an all-in-one tool, their powerful Bubble CMS is also easy to connect to any other front-end development tool. Thus, you can consume the same data tables created inside the Bubble CMS to connect it with any other front-end tool, for example, to develop native applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free: no access to API&lt;/li&gt;
&lt;li&gt;Personal: costs $29 per month with access to API&lt;/li&gt;
&lt;li&gt;Professional: costs $129 per month&lt;/li&gt;
&lt;li&gt;Production: costs $529 per month&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#backendless"&gt;
  &lt;/a&gt;
  Backendless
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j8feiFSV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z32s28jc1uk873uu8zql.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j8feiFSV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z32s28jc1uk873uu8zql.jpeg" alt="Backendless logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best for Low-coders looking for a solution to host their database in the cloud and looking for integrated services such as file storage.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://backendless.com/"&gt;Backendless&lt;/a&gt; is a cloud back-end platform to create apps without writing any server-side code. It provides programmable services that supply standard server functions. In addition, it supports authenticated user management, authenticated API requests, relational data, push notifications, publish/subscribe messaging, geolocation, video/audio recording, live streaming on the server, file service, and more.&lt;/p&gt;

&lt;p&gt;Backendless makes these services available through the implementation of REST API. It provides access to a REST API that can be used with any front-end tool. Apart from its REST API support, it also supports native SDKs for iOS, Android, JavaScript applications, and more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Springboard: costs $0 per month with unlimited API calls per month&lt;/li&gt;
&lt;li&gt;Cloud9: costs $35 per month with 10,000,000 API calls per month&lt;/li&gt;
&lt;li&gt;Free: costs $149 per month with 40,000,00 API calls per month&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#contentful"&gt;
  &lt;/a&gt;
  Contentful
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VmwEBOe5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25bm9rjrxgh4scmea7uo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VmwEBOe5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25bm9rjrxgh4scmea7uo.png" alt="Contentful logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best for Intermediates who are looking for a Content Management platform that provides an API gateway to create media-intensive applications.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.contentful.com/"&gt;Contentful&lt;/a&gt; is an API-first content management platform to create, manage and publish content to any digital channel. It is a modern Content Management System (CMS) where a content model is created independently from any presentation layer. It organizes content into spaces that allow you to group all the related resources for a project together, including content entries, media assets, and settings for localizing content into different languages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Community: costs $0 with full-featured headless CMS&lt;/li&gt;
&lt;li&gt;Team: costs US$489 per month, ideal for a team working on or more digital products&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#hasura"&gt;
  &lt;/a&gt;
  Hasura
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dycgdf9p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hn3eet4giwd694uze3z2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dycgdf9p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hn3eet4giwd694uze3z2.png" alt="Hasura logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best for Experts who are looking for a fast GraphQL based solution and want backward compatibility with REST.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://hasura.io/"&gt;Hasura&lt;/a&gt; is an instant real-time GraphQL APIs engine. It makes your data instantly accessible through a GraphQL API or a REST API. This helps you to focus on the build and ship applications much faster.&lt;/p&gt;

&lt;p&gt;Hasura connects to a database using a Postgres connection. It can scale horizontally and hold state for caching queries. Authentication based on JSON Web Tokens (JWT) is available to add permission or a role-based system.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free: costs $0 and includes 1 GB data pass-through&lt;/li&gt;
&lt;li&gt;Standard: costs $99 per month and includes 20 GB data pass-through&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#fauna"&gt;
  &lt;/a&gt;
  Fauna
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uQ6rRF3M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vuieb0rnjdnyff081znx.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uQ6rRF3M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vuieb0rnjdnyff081znx.jpeg" alt="Fauna logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best for Experts who can deal with a little bit of learning curve and are looking for a transactional, serverless database.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://fauna.com/"&gt;Fauna&lt;/a&gt; is a database as a service that works well with serverless applications. It is not a traditional database. It has its own query language called FQL. It provides flexible data modeling and supports ACID transactions that eliminate data anomalies.&lt;/p&gt;

&lt;p&gt;While Fauna is more of a complete database solution, usually to generate an API, you will have to use a tool like &lt;a href="https://nocodeapi.com/"&gt;NoCodeApi.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Individual: costs $25 per month&lt;/li&gt;
&lt;li&gt;Team: $150 per month&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#directual"&gt;
  &lt;/a&gt;
  Directual
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ns2vOwuz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qlhx2381gszq4ywnlk3s.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ns2vOwuz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qlhx2381gszq4ywnlk3s.jpeg" alt="Directual logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best for Low-coders who are looking for a scalable NoSQL database that supports advance API configurations such as authentication.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.directual.com/"&gt;Directual&lt;/a&gt; provides a cloud-hosted scalable NoSQL database. It provides tools to configure a database with the support of data structures and object fields. It also supports the vast majority of data types such as string, number, file, and more.&lt;/p&gt;

&lt;p&gt;It has an in-built web page builder interface and is free to connect to any other low-code or no-code tool. In addition, you can create web or mobile interfaces using its RESTful API feature using any front-end platform.&lt;/p&gt;

&lt;p&gt;It offers an API builder that supports configuring advanced API settings to make authenticated API requests, user management, and event processing without setting up the infrastructure. It also includes filtering, validation, sorting, and custom query params processing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free: includes one developer seat with 3k operations.&lt;/li&gt;
&lt;li&gt;Startup: costs $39 per month with three developer seats and 30k operations.&lt;/li&gt;
&lt;li&gt;Pro: costs $129 per month with five developer seats and 500k operations.&lt;/li&gt;
&lt;li&gt;Business: costs $439 per month with 10 develop seats and 2M operations.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#back4app"&gt;
  &lt;/a&gt;
  Back4App
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aWuVJwE5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9fypj99bvna4u98rsf1s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aWuVJwE5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9fypj99bvna4u98rsf1s.png" alt="Back4App logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best for Experts who want an advanced solution that supports authentication, file storage, supports REST, and GraphQL, and who value open-source.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.back4app.com/"&gt;Back4App&lt;/a&gt; is an open-source low-code platform to develop modern applications. It supports creating a spreadsheet-like database. It includes data storage, RESTful and GraphQL APIs, file storage, authentication, and push notifications.&lt;/p&gt;

&lt;p&gt;It offers a solution to integrate GDPR compliance into your application. It also offers two hosting options. You can either choose shared if you are looking for a cost-effective solution or dedicated to scaling and large applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Back4app has the most &lt;a href="https://www.back4app.com/parse-pricing"&gt;vibrant and vast pricing options&lt;/a&gt; than any other back-end platform on this list.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free: up to 10k requests per month&lt;/li&gt;
&lt;li&gt;Solo: starts at $5 for 50k requests per month&lt;/li&gt;
&lt;li&gt;Basic: starts at $25 for 500k requests per month&lt;/li&gt;
&lt;li&gt;Standard: starts at $50 for 2M requests per month&lt;/li&gt;
&lt;li&gt;Silver: starts at $200 with unlimited requests per month&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Given the demand for no-code and low-code applications in recent times, it is not a surprise that there are various options for creating the back-end for your application.&lt;/p&gt;

&lt;p&gt;Depending on your requirements, any one of these tools will help you kickstart low-code app development. However, each back-end platform described in this list has its advantages and limitations. Therefore, it is crucial to consider which suits your needs the best.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps
&lt;/h2&gt;

&lt;p&gt;If you are interested in learning more about No-code/Low-code development or building native mobile apps visually, check out the following resources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Draftbit on Twitter — &lt;a href="https://twitter.com/draftbit"&gt;@draftbit&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.draftbit.com/docs/rest-api-integrations"&gt;Guides on using above mentioned back-ends with Draftbit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Me on Twitter — &lt;a href="https://twitter.com/amanhimself"&gt;@amanhimself&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And if you need help or have questions, visit the &lt;a href="https://community.draftbit.com/"&gt;Draftbit Community&lt;/a&gt; forums.&lt;/p&gt;

</description>
      <category>lowcode</category>
      <category>webdev</category>
      <category>serverless</category>
      <category>api</category>
    </item>
    <item>
      <title>What is Hacktoberfest? Best opensource program for beginners!</title>
      <author>Rishabh Dwivedi</author>
      <pubDate>Thu, 23 Sep 2021 18:04:20 +0000</pubDate>
      <link>https://dev.to/rishabh062/what-is-hacktoberfest-best-opensource-program-for-beginners-32ff</link>
      <guid>https://dev.to/rishabh062/what-is-hacktoberfest-best-opensource-program-for-beginners-32ff</guid>
      <description>&lt;p&gt;&lt;em&gt;"Hacktoberfest is a month-long celebration of open source software." - DigitalOcean&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open source is changing the world – one contribution at a time.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With this very wonderful lines , let's start our blog on this very interesting opensource journey.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-is-hacktoberfest-2021-"&gt;
  &lt;/a&gt;
  What is hacktoberfest 2021 ?
&lt;/h4&gt;

&lt;p&gt;This event is hosted by &lt;em&gt;Digitalocean&lt;/em&gt; from around 8 years , hacktoberfest encourages participants for contributing to various opensource project by creating at least 4 valid pull requests.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best part about it:&lt;/strong&gt; All backgrounds and skills levels are encouraged to complete the challenge.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To sum up everything in simple terms&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You need to create 4 valid pull request (with given conditions) in a month of october so that you can get swags(&lt;strong&gt;T-shirt and cool stickers&lt;/strong&gt;) delivered to your home.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#if-you-are-a-beginners-then-this-event-is-best-for-you-to-get-into-opensource"&gt;
  &lt;/a&gt;
  If you are a beginners, then this event is best for you to get into opensource.
&lt;/h3&gt;

&lt;p&gt;Follow me here for more updates.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.linkedin.com/in/rishabh-dwivedi-28737b1a0"&gt;Linkedln&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://twitter.com/Rishabh07147212"&gt;Twitter&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>watercooler</category>
      <category>webdev</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Simple Logo Creator Bot</title>
      <author>Lucifer25x</author>
      <pubDate>Thu, 23 Sep 2021 17:45:24 +0000</pubDate>
      <link>https://dev.to/lucifer25x/simple-logo-creator-bot-3989</link>
      <guid>https://dev.to/lucifer25x/simple-logo-creator-bot-3989</guid>
      <description>&lt;h2&gt;
  &lt;a href="#github-repo"&gt;
  &lt;/a&gt;
  Github repo:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/Lucifer25x/simple-logo-bot"&gt;https://github.com/Lucifer25x/simple-logo-bot&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bot-commands"&gt;
  &lt;/a&gt;
  Bot commands:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;/get {name} - Sends logo with name&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#used-dependencies"&gt;
  &lt;/a&gt;
  Used Dependencies:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#nodejs"&gt;
  &lt;/a&gt;
  Node.js:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;telegraf&lt;/li&gt;
&lt;li&gt;nodemon&lt;/li&gt;
&lt;li&gt;dotenv&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#python"&gt;
  &lt;/a&gt;
  Python
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Pillow&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#create-your-own-logo-creator-bot"&gt;
  &lt;/a&gt;
  Create your own Logo Creator bot:
&lt;/h2&gt;

&lt;p&gt;Clone repository:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone https://github.com/Lucifer25x/simple-logo-bot.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create .env file and type your bot token:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;TOKEN=your_bot_token
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install npm dependencies:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install Pillow:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;Pillow
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Start project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
    </item>
    <item>
      <title>Three instructors that helped me learn web development</title>
      <author>Darshan Damre</author>
      <pubDate>Thu, 23 Sep 2021 17:20:36 +0000</pubDate>
      <link>https://dev.to/darshandamre/three-instructors-that-helped-me-learn-web-development-47dj</link>
      <guid>https://dev.to/darshandamre/three-instructors-that-helped-me-learn-web-development-47dj</guid>
      <description>&lt;p&gt;I decided to learn web development earlier this year. I knew some HTML, had no idea about CSS and JavaScript.&lt;/p&gt;

&lt;p&gt;I started learning javascript by following Hitesh Choudhary's JavaScript playlist on YouTube. I love the way Hitesh teaches, simplifying all the jargon that programmers use so that anyone can understand. I still go back to those videos to revise some key concepts. What I love about his videos is that he also teaches to go through the documentation. Every programmer knows the importance of reading documentation and difficulties while reading it. Thanks to Hitesh for making me understand the importance of reading documentation in my initial days of learning. As a result, I don't hate going through the docs.&lt;/p&gt;

&lt;p&gt;You can check out his free &lt;a href="https://youtube.com/playlist?list=PLRAV69dS1uWSxUIk5o3vQY2-_VKsOpXLD"&gt;JavaScript course on YouTube&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then it was time to learn CSS.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ynNDnoNb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kpf0j90s6898h1fvjqy9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ynNDnoNb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kpf0j90s6898h1fvjqy9.jpg" alt="css-is-awesome"&gt;&lt;/a&gt;&lt;br&gt;
I started learning CSS through online videos and then realized that I didn't understand anything. Later, I came across Kevin Powell's YouTube channel and took his free CSS flexbox course - &lt;a href="https://courses.kevinpowell.co/conquering-responsive-layouts"&gt;Conquering Responsive Layouts&lt;/a&gt;. I'm so glad I took that course. It made writing CSS so simple and made me understand flexbox. I love the way this course was structured. It is a 21-day course and also includes challenges which makes the course very much interactive. When you sign up for the course, you do not get access to all the course content. Some videos and challenges get unlocked every day. It helps in being consistent and practicing some CSS every day. I remember flexbox used to make me so nervous, and now it is so easy to work with. I am currently learning CSS grid through his YouTube videos.&lt;/p&gt;

&lt;p&gt;Making projects is one of the most important parts of learning programming. This is where Tanay Pratap helped me make projects, and the community he has built on his discord server helped me whenever I got stuck in the projects. Now, having some skills in web development, I also help absolute beginners solve their errors on his discord server.&lt;/p&gt;

&lt;p&gt;You can check out &lt;a href="https://www.youtube.com/c/TanayPratap"&gt;Tanay Pratap's YouTube channel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thanks for reading.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>css</category>
    </item>
    <item>
      <title>Serverless básico</title>
      <author>Lucas Ferreira</author>
      <pubDate>Thu, 23 Sep 2021 16:59:24 +0000</pubDate>
      <link>https://dev.to/biglucas/serverless-basico-51m7</link>
      <guid>https://dev.to/biglucas/serverless-basico-51m7</guid>
      <description>&lt;p&gt;Serverless é uma arquitetura baseada em funções como um serviço (FaaS - &lt;em&gt;Function as a Service&lt;/em&gt;), o principal objetivo é que o desenvolvedor se preocupe apenas com o código da função (lógica do negócio) e a responsabilidade pela configuração do ambiente/máquina que vai rodar o código fique por conta do provedor de cloud.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#caracter%C3%ADsticas"&gt;
  &lt;/a&gt;
  Características
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Ambiente sem estado para rodar o código&lt;/strong&gt;, cada evento que aciona a função &lt;strong&gt;PODE&lt;/strong&gt; ser processado em um ambiente completamente novo, isso limita por exemplo a utilização do sistema de arquivos do ambiente onde o código está rodando e um novo processamento está desacoplado dos processamentos anteriores.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Tempo de execução limitado&lt;/strong&gt;, o processamento deve ocorrer dentro de um período de tempo, se a execução não estiver completa o ambiente onde o código está rodando simplesmente morre.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Orientado a eventos&lt;/strong&gt;, cada função de uma aplicação serverless tem um ou mais gatilhos que acionam a execução do código.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#c%C3%B3digo-b%C3%A1sico-com-o-framework-serverless"&gt;
  &lt;/a&gt;
  Código básico com o framework Serverless
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# serverless.yml&lt;/span&gt;
&lt;span class="na"&gt;provider&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;aws&lt;/span&gt;
  &lt;span class="na"&gt;runtime&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nodejs14.x&lt;/span&gt;
  &lt;span class="na"&gt;memorySize&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;512&lt;/span&gt;
  &lt;span class="na"&gt;timeout&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;

&lt;span class="na"&gt;functions&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;users&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;handler&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;./UserHandler.handler&lt;/span&gt;
    &lt;span class="na"&gt;events&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;http&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;GET&lt;/span&gt;
          &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;users&lt;/span&gt;
          &lt;span class="na"&gt;cors&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// UserHandler.js&lt;/span&gt;
&lt;span class="c1"&gt;// aws sample&lt;/span&gt;
&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;_context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;service&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;UserService&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;service&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findAll&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Com o comando abaixo é possível realizar a implantação da função no provedor de cloud.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx serverless deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Quando uma requisição chegar na rota registrada no API Gateway um novo evento será disparado e este evento pode ser processado por uma função nova (&lt;em&gt;cold&lt;/em&gt;) ou por uma função ativa (&lt;em&gt;warm&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HyPphy6M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fj4vtqmoohx8k2bbn7fa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HyPphy6M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fj4vtqmoohx8k2bbn7fa.png" alt="serverless_article"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#diferen%C3%A7as-entre-serverless-e-uma-arquitetura-cloud-com-cont%C3%AAineres"&gt;
  &lt;/a&gt;
  Diferenças entre serverless e uma arquitetura cloud com contêineres
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Uma grande diferença é que o serverless te força a quebrar suas operações e definir muito bem qual a responsabilidade da função. Isso é imposto basicamente pelo tempo limite de execução e pelos valores maiores cobrados para execuções com tempo maior ou com consumo de memória maior.&lt;/li&gt;
&lt;li&gt;As funções serverless ficam desativadas quando não existem eventos para processar, diferentemente de um contêiner rodando uma aplicação que fica 100% do tempo rodando mesmo sem requisições.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#principais-ferramentas"&gt;
  &lt;/a&gt;
  Principais ferramentas
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Serverless framework.&lt;/li&gt;
&lt;li&gt;AWS Lambda.&lt;/li&gt;
&lt;li&gt;Azure Functions.&lt;/li&gt;
&lt;li&gt;Google Cloud Functions.&lt;/li&gt;
&lt;li&gt;Infraestrutura como código.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#referencias"&gt;
  &lt;/a&gt;
  Referencias
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.redhat.com/pt-br/topics/cloud-native-apps/what-is-serverless"&gt;Artigo da Red Hat sobre Serverless&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.aws.amazon.com/whitepapers/latest/serverless-architectures-lambda/serverless-architectures-lambda.pdf#welcome"&gt;Artigo da AWS sobre Lambda&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/nodejs-handler.html"&gt;Exemplo de código com AWS Lambda&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/pt-br/azure/developer/javascript/how-to/develop-serverless-apps"&gt;Exemplo de código com Azure Functions&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cloud.google.com/functions/docs/quickstart-nodejs"&gt;Exemplo de código com Google Cloud Functions&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.serverless.com/framework/docs/providers/aws/examples/hello-world/node/"&gt;Exemplo "hello world" com o Framework Serverless&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Rodolfobm/serverless-boilerplate"&gt;Modelo de projeto com o framework Serverless&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.serverless.com/blog/serverless-faas-vs-containers/"&gt;Serverless (FaaS) vs. Contêineres&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>serverless</category>
      <category>faas</category>
      <category>node</category>
      <category>ptbr</category>
    </item>
    <item>
      <title>next.js: i18n with static sites</title>
      <author>martin krause</author>
      <pubDate>Thu, 23 Sep 2021 16:54:54 +0000</pubDate>
      <link>https://dev.to/martinkr/next-js-i18n-with-static-sites-2644</link>
      <guid>https://dev.to/martinkr/next-js-i18n-with-static-sites-2644</guid>
      <description>&lt;p&gt;Recently I had a client who wanted a fast single-page-application (SPA) with an outstanding lighthouse score and multiple languages hosted on a cheap shared hosting solution only accessible by FTP ... and of course they wanted it to be build with &lt;code&gt;react.js&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;From the initial requirements and the following discussion we decided to have a local build step which would generate static files and transfer them to the web server.&lt;/p&gt;

&lt;p&gt;Given their limited expertise and the specific requirements I was suggesting a static-site-generator  with a custom headless setup for their content. The client was happy with the proposed architecture. I was looking into the possibility of using &lt;code&gt;next.js&lt;/code&gt; and the two major requirements: a static page served by apache and internationalization (i18n).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#true-static-files"&gt;
  &lt;/a&gt;
  True static files
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Next.js&lt;/code&gt; provides a true out-of-the-box static sites generator. The &lt;code&gt;next export&lt;/code&gt; command generates a set of fully optimized static HTML files. This export can thus be served without any dependencies by any web-server. No need to run &lt;code&gt;node.js&lt;/code&gt; etc - a regular nginx or apache installation is completely sufficient.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#internationalization-i18n"&gt;
  &lt;/a&gt;
  internationalization (i18n)
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Next.js&lt;/code&gt; also provides an amazing out-of-the-box support for internationalized (i18n) routing and a decent ecosystem for i18n-solutions&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The i18n routing support is currently meant to complement existing i18n library solutions like react-intl, react-i18next, lingui, rosetta, next-intl and others by streamlining the routes and locale parsing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sounds nice and being a fan of &lt;code&gt;react-i18next&lt;/code&gt; I looked into &lt;code&gt;next-i18next&lt;/code&gt; and was quite happy to see that they support Static Generation (SSG).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To complement this, next-i18next (....) fully supporting SSG/SSR, multiple namespaces, codesplitting, etc.&lt;br&gt;
Production ready: next-i18next supports passing translations and configuration options into pages as props with SSG/SSR support.&lt;br&gt;
&lt;a href="https://github.com/isaachinman/next-i18next/"&gt;https://github.com/isaachinman/next-i18next/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Upon closer inspection, I figured: they're only supporting Static Generation (SSG) with &lt;code&gt;next start&lt;/code&gt; not &lt;code&gt;next export&lt;/code&gt;. (About the differences, read my article &lt;a href="https://dev.to/martinkr/the-two-and-a-half-one-flavors-of-next-js-s-pre-rendering-44o"&gt;The two and a half + one flavors of next.js's pre-rendering&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;next start&lt;/code&gt; spins up the &lt;code&gt;next.js&lt;/code&gt; web-server and requires &lt;code&gt;node.js&lt;/code&gt; - which was a problem for the hosting solutions. &lt;/p&gt;

&lt;p&gt;I needed an export which would run on a basic nginx. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;From the next.js documentation:&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note that Internationalized Routing does not integrate with next export as next export does not leverage the Next.js routing layer. Hybrid Next.js applications that do not use next export are fully supported.&lt;br&gt;
&lt;a href="https://nextjs.org/docs/advanced-features/i18n-routing#how-does-this-work-with-static-generation"&gt;https://nextjs.org/docs/advanced-features/i18n-routing#how-does-this-work-with-static-generation&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-custom-i18n-solution-for-true-ssg-support"&gt;
  &lt;/a&gt;
  Creating a custom i18n solution for true SSG support
&lt;/h2&gt;

&lt;p&gt;Well, we're just going to create our own custom i18n solution&lt;/p&gt;

&lt;p&gt;Let's collect the requirements:&lt;/p&gt;

&lt;p&gt;The custom solution must:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;have full support for &lt;code&gt;next export&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The custom solution should:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;load the translations files from a folder with minimal configuration&lt;/li&gt;
&lt;li&gt;provide a hook with the same interface as &lt;code&gt;react-i18next&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;provide a stateful-hook for the current language&lt;/li&gt;
&lt;li&gt;set / retrieve the selected language to / from the GET-parameters&lt;/li&gt;
&lt;li&gt;fallback to the default language if no GET-parameter is present&lt;/li&gt;
&lt;li&gt;set the GET-parameter on internal links and preserve existing GET-parameters &lt;/li&gt;
&lt;li&gt;provide a sample component for selecting the language&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#-raw-nextexporti18n-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;next-export-i18n&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Let me introduce the &lt;a href="https://next-export-i18n-example.vercel.app"&gt;final static solution&lt;/a&gt; and feel free to take a look at the &lt;a href="https://github.com/martinkr/next-export-i18n-example"&gt;source code&lt;/a&gt; which meets all the requirements.&lt;/p&gt;

&lt;p&gt;So, if you need an i18n solution which has full support for &lt;code&gt;next export&lt;/code&gt; and minimal configuration effort use the &lt;a href="https://www.npmjs.com/package/next-export-i18n"&gt;next-export-i18n npm-module&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Example implementation: &lt;a href="https://next-export-i18n-example.vercel.app"&gt;https://next-export-i18n-example.vercel.app&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Github for the npm-module: &lt;a href="https://github.com/martinkr/next-export-i18n"&gt;https://github.com/martinkr/next-export-i18n&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Github for the example: &lt;a href="https://github.com/martinkr/next-export-i18n-example"&gt;https://github.com/martinkr/next-export-i18n-example&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;I hope you enjoyed the post. If you buy me a coffee I can stay awake and write another one ;)&lt;br&gt;
Have fun and if you &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>nextjs</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Futuristic Infinite Scrolling in React and JavaScript</title>
      <author>Dhairya Nadapara</author>
      <pubDate>Thu, 23 Sep 2021 16:51:01 +0000</pubDate>
      <link>https://dev.to/dhairyanadapara/infinite-scrolling-react-45pg</link>
      <guid>https://dev.to/dhairyanadapara/infinite-scrolling-react-45pg</guid>
      <description>&lt;p&gt;There are multiple use cases in the modern UX when we are required to use infinite scrolling. Previously, devs are using the height of the viewport and element to find out the intersection of the element is in the viewport. The main issue in the same is that the function that calculations will be executed on the main queue so it makes your app a bit slow and it was bit unreliable. A few days ago I came across the Intersection Observer API. Which can be used in the following applications:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Lazy-loading of images or other content as a page is scrolled.&lt;/li&gt;
&lt;li&gt;  Implementing "infinite scrolling" websites, where more and more content is loaded and rendered as you scroll so that the user doesn't have to flip through pages.&lt;/li&gt;
&lt;li&gt;  Reporting of visibility of advertisements to calculate ad revenues.&lt;/li&gt;
&lt;li&gt;  Deciding whether or not to perform tasks or animation processes based on whether or not the user will see the result.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Intersection Observer API provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document's viewport.&lt;/p&gt;

&lt;p&gt;Source code is available at &lt;a href="https://github.com/dhairyanadapara/infinite-scoller-example"&gt;https://github.com/dhairyanadapara/infinite-scoller-example&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Demo link: &lt;a href="https://dhairyanadapara.github.io/infinite-scoller-example/"&gt;https://dhairyanadapara.github.io/infinite-scoller-example/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's start with the solution.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;componentDidMount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createObserver&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;createObserver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;rootMargin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; 40px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;threshold&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;boxElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;loading&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;observer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;IntersectionObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleIntersect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;options&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;observer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;boxElement&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="nx"&gt;handleIntersect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;observer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;intersectionRatio&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;intersectionRatio&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                    &lt;span class="na"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
                        &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="p"&gt;]),&lt;/span&gt;
                &lt;span class="p"&gt;});&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;infinite-container&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cards-list&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;card-list&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;card 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;card_image&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                                    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://i.redd.it/b3esnz5ra34y.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
                                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;card_title title-white&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Card&lt;/span&gt; &lt;span class="nx"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                        &lt;span class="p"&gt;))}&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;loading&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nx"&gt;Loading&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see we have used the react class component so it will be easy to understand. You can use functional components also.&lt;/p&gt;

&lt;p&gt;Let's start with understanding the observer initialization.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;createObserver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;rootMargin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; 40px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;threshold&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;boxElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;loading&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;observer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;IntersectionObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleIntersect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;observer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;boxElement&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;IntersectionObserver&lt;/code&gt; takes 2 arguments.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;options&lt;/strong&gt;&lt;br&gt;
options are the configuration for Intersection Observer. It has 3 properties:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;root:&lt;/strong&gt;
The element which you want to use as the viewport. If you want to use the browser's viewport pass &lt;code&gt;null&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;rootMargin :&lt;/strong&gt;
Offset is added to the target rectangle while calculating intersections&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;threshold:&lt;/strong&gt;
A list of thresholds, sorted in increasing numeric order. The callback will be called when &lt;code&gt;intersectionRatio&lt;/code&gt; passes the threshold&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;strong&gt;callback&lt;/strong&gt;&lt;br&gt;
callback has 2 argument:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;entries&lt;/strong&gt;
list of IntersectionObserverEntry, which describes the intersection between target and root element&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;observer&lt;/strong&gt;
IntersectionObserver object same we have created in createObserver&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here we are observing the loading element which will be at bottom of the card list. In our case, we have only 1 target element in the observer so we will get only 1 object in entries. If you have multiple target elements targets to the same observers you will get more entries.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;handleIntersect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;observer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;intersectionRatio&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                &lt;span class="na"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
                    &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;]),&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;IntersectionObserverEntry object have multiple attributes like &lt;code&gt;boundingClientRect&lt;/code&gt;,&lt;code&gt;intersectionRatio&lt;/code&gt;,&lt;code&gt;intersectionRect&lt;/code&gt;,&lt;code&gt;isIntersecting&lt;/code&gt;,&lt;code&gt;rootBounds&lt;/code&gt;,&lt;code&gt;target&lt;/code&gt;,&lt;br&gt;
&lt;code&gt;time&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The main attributes are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;intersectionRatio:&lt;/strong&gt; returns the percentage of intersectionRect to the boundingClientRect&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;isIntersecting:&lt;/strong&gt; return if target and root are intersecting or not.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;target:&lt;/strong&gt; this is an important attribute when we have multiple targets attached to the same observer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the above function we have iterated over the entries and checked if the intersection ratio is more than 0 is not means the target element has an intersection with root or viewport is happened or not. As you can see we are observing the element with id &lt;code&gt;loading&lt;/code&gt; which is placed at bottom of the card-list element. So what will happen when we scroll down and reach the loading element it intersection will happen and the state will be updated accordingly.&lt;/p&gt;

&lt;p&gt;In this case, we are not doing any API calls so data is getting updated quickly. In case of fetch request, it would be better to use the &lt;code&gt;rootMargin&lt;/code&gt;. You can also update the threshold based on requirements.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>intersection</category>
      <category>infinite</category>
    </item>
    <item>
      <title>Writing a Visual Studio Code Completion Provider</title>
      <author>Kevin Lin</author>
      <pubDate>Thu, 23 Sep 2021 16:43:43 +0000</pubDate>
      <link>https://dev.to/dendron/writing-a-visual-studio-code-completion-provider-198f</link>
      <guid>https://dev.to/dendron/writing-a-visual-studio-code-completion-provider-198f</guid>
      <description>&lt;p&gt;Visual Studio Code (VSCode) provides many powerful features for extension developers. Autocomplete, warnings, tasks, and many more features are included out-of-the-box and are available for extension developers to take advantage of. However, figuring out how you can take advantage of these features as an extension developer can require digging through API documentation to learn the exact behavior. Using the API incorrectly can lead to issues that are hard to debug, as I learned working on the block autocomplete feature for Dendron.&lt;/p&gt;

&lt;p&gt;This post is an overview of VSCode autocomplete —also called intellisense— feature from the viewpoint of an extension developer. I especially want to highlight a few pitfalls: VSCode provides defaults for many of the options around autocomplete, but the behavior of these defaults can be confusing if you don't know what they are.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#entry-point"&gt;
  &lt;/a&gt;
  Entry point
&lt;/h3&gt;

&lt;p&gt;Your entry point into adding an autocomplete feature is &lt;code&gt;languages.registerCompletionItemProvider&lt;/code&gt;. This allows you to attach a function that will generate the options when requested.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;languages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;registerCompletionItemProvider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;markdown&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;provideCompletionItems&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;provideBlockCompletionItems&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;^&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above is how Dendron attaches the completion provider for blocks. This part is straightforward, although note the symbols at the end. These are the symbols that when written will trigger your completion provider automatically. While you can define multiple symbols, each symbol has to be a single character. If An overview &amp;amp; tutorial of writing VSCode completion providers (intellisense) as an extension developer&lt;/p&gt;

&lt;p&gt;Next, let's take a look at the completion function. Here is the function signature for Dendron:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;provideBlockCompletionItems&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;TextDocument&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;CancellationToken&lt;/span&gt;
&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;CompletionItem&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;document&lt;/code&gt; and &lt;code&gt;position&lt;/code&gt; are straightforward. &lt;code&gt;token&lt;/code&gt; is used to cancel completions, for example if the user hits cancel while waiting for the completions. Key thing about the token is to remember that javascript is single-threaded: the token won't suddenly get cancelled in the middle of your function. The only point where it can become cancelled is if you &lt;code&gt;await&lt;/code&gt; for something and yield the execution. This means you don't have to check if the token is cancelled everywhere in your code, just check after any &lt;code&gt;await&lt;/code&gt;ed operation that might take a significant amount of time. Checking the token is easy, &lt;code&gt;if (token?.isCancellationRequested) return;&lt;/code&gt; is enough.&lt;/p&gt;

&lt;p&gt;The more important thing here is how the function gets called. One way the function will get called is if the user types one of the trigger symbols you registered. Another way is if the user hits the key for "Trigger Suggest" (&lt;code&gt;Ctrl+Space&lt;/code&gt; by default), &lt;em&gt;all&lt;/em&gt; registered completion providers for this language will run. Crucially, this means your completion provider may be activated at any point in the document, with or without your trigger key.&lt;br&gt;
It's up to your implementation to check if the current &lt;code&gt;position&lt;/code&gt; is somewhere that this completion is appropriate for, and &lt;code&gt;return;&lt;/code&gt; if not. Let's look at a simplified version of how Dendron handles this for the autocomplete:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;found&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;RegExpMatchArray&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// There may be multiple links within this line&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;matches&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;line&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matchAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;LINK_WITH_BLOCK_REGEX&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;match&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isUndefined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isUndefined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;entireLink&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// If the current position is within this link, then we are trying to complete it&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;character&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
      &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;character&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;entireLink&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;found&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isUndefined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;found&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The gist of it is that we get the text for the current line, and check if the current position is inside a link with a block that we can complete.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-completionitem-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;CompletionItem&lt;/code&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#-raw-label-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;label&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;A key part of the completion item is the label. The label is not only displayed for the completion items, but it's also used as a default for many of the options in a &lt;code&gt;CompletionItem&lt;/code&gt;. The text that gets inserted when the user selects something, deciding the order in which these items are displayed, and how these options are narrowed when the user types are all based on the label by default.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KL8cyRWm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Qu2LPJR.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KL8cyRWm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Qu2LPJR.png" alt='A screen shot displaying several completion items. "journal.2021.06" is written within brackets, which is also highlighted in all completion items.'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-raw-range-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;range&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;The range is the most confusing part of the &lt;code&gt;CompletionItem&lt;/code&gt; in my opinion. The range determines 2 things: where the selected item will be inserted, and also what counts as "stuff that the user typed to narrow the items".&lt;/p&gt;

&lt;p&gt;For the first use of range, whatever range you provide will be replaced with the &lt;code&gt;insertText&lt;/code&gt; (or missing that, &lt;code&gt;label&lt;/code&gt;) of the completion item. If you have nothing to replace, the range can have &lt;code&gt;start === end&lt;/code&gt; in which case the text is just inserted at that point.&lt;/p&gt;

&lt;p&gt;The second use of range makes things a bit more tricky. Because the range determines what counts as "stuff the user typed", you have to be careful about what you include in the range. For example, Dendron's autocomplete allows users to type &lt;code&gt;[[^&lt;/code&gt; to get all blocks within a text as autocomplete options.&lt;/p&gt;

&lt;p&gt;The problem? The user needs to type &lt;code&gt;^&lt;/code&gt; to activate the completion, but &lt;code&gt;^&lt;/code&gt; is not part of any completion item, and also &lt;code&gt;^&lt;/code&gt; needs to be removed once an item is selected because the text is supposed to look like &lt;code&gt;[[#^something]]&lt;/code&gt; after the completion. &lt;/p&gt;

&lt;p&gt;While it would be convenient to just set the range to anything within the brackets, this will result in all completion items being narrowed out because &lt;code&gt;^&lt;/code&gt; will also count as "stuff the user typed to narrow the items".&lt;/p&gt;

&lt;p&gt;Something important to bring up here is the default for &lt;code&gt;range&lt;/code&gt;. If you look&lt;br&gt;
into the docs, you'll see that the default is the "range of the current word",&lt;br&gt;
effectively the output of &lt;code&gt;TextDocument.getWordRangeAtPosition&lt;/code&gt; function.&lt;br&gt;
&lt;code&gt;getWordRangeAtPosition&lt;/code&gt; allows you to set a custom regex to select what&lt;br&gt;
"current word" means, so this might sound like a good way to calculate the&lt;br&gt;
range. While this would work in some cases, I found that&lt;br&gt;
&lt;code&gt;getWordRangeAtPosition&lt;/code&gt; is extremely inefficient if your regex is more complex&lt;br&gt;
than &lt;code&gt;[...]+&lt;/code&gt;. Especially using lookaheads or lookbehinds causes VSCode to&lt;br&gt;
completely hang. I'd recommend avoiding this function unless the default mostly&lt;br&gt;
works for you.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#-raw-sorttext-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;sortText&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;This field is used to determine in what order the completion items are &lt;em&gt;initially&lt;/em&gt; ordered. Initially is important here, as VSCode may move the items around once the user starts typing if it decides some items match the text better.&lt;/p&gt;

&lt;p&gt;The annoying part about &lt;code&gt;sortText&lt;/code&gt;: it simply sorts the items using basic string sorting. Issue here being that if you have a loop to generate your completion items, you can't just use the index to sort the items.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;blocks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;block&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// These won't sort right, because "11" &amp;lt; "9" in string sort&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;block&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;sortText&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The fix is to pad your &lt;code&gt;sortText&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;sortText&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;padStart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is not a perfect fix of course, but it's unlikely that you'll have over 99999 completion items.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-raw-inserttext-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;insertText&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;This is the text to be inserted when the user selects a completion. By default&lt;br&gt;
it's set to the label, but you'll want to set this if you are using the label to&lt;br&gt;
display something more informative to the user. For example, when completing&lt;br&gt;
blocks, Dendron uses the label to display the actual line the user is selecting.&lt;br&gt;
But the text we need to insert into the wikilink is not the same as the line&lt;br&gt;
itself, so we set this to get it to link to the right place.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;insertText&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`#&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;AnchorUtils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;anchor2string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;anchor&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#-raw-additionaltextedits-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;additionalTextEdits&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;insertText&lt;/code&gt; replaces the part of the text that is selected by the &lt;code&gt;range&lt;/code&gt;. This&lt;br&gt;
is actually quite limiting: As I mentioned before, &lt;code&gt;range&lt;/code&gt; not only selects the&lt;br&gt;
what will be replaced but also what VSCode considers "typed by the user to&lt;br&gt;
narrow options". What if you want something to be replaced along with what the&lt;br&gt;
user typed, but you don't want it to be used in narrowing?&lt;/p&gt;

&lt;p&gt;For example, when autocompleting for blocks in Dendron the user might type&lt;br&gt;
&lt;code&gt;[[^some-header&lt;/code&gt;, but the resulting link will look like&lt;br&gt;
&lt;code&gt;[[#some-header-text-here]]&lt;/code&gt;. We need to remove &lt;code&gt;^&lt;/code&gt; along with whatever the user&lt;br&gt;
typed, but if we set the &lt;code&gt;range&lt;/code&gt; to include it then the narrowing would be&lt;br&gt;
thrown off because it would look for options where the label includes &lt;code&gt;^&lt;/code&gt;.&lt;br&gt;
To get around this, we use the &lt;code&gt;additionalTextEdits&lt;/code&gt; to automatically remove the&lt;br&gt;
&lt;code&gt;^&lt;/code&gt; part.&lt;/p&gt;

&lt;p&gt;Another use for &lt;code&gt;additionalTextEdits&lt;/code&gt; is to insert text somewhere completely&lt;br&gt;
different in the document. Think of auto-imports for some languages, where you&lt;br&gt;
type something and the language automatically adds &lt;code&gt;import ...&lt;/code&gt;. Or in Dendron,&lt;br&gt;
if the user selects a block that doesn't already have a block anchor when&lt;br&gt;
completing blocks, we need to insert a block anchor there. &lt;code&gt;additionalTextEdits&lt;/code&gt;&lt;br&gt;
have no limits to where they can put the text, as long as it's within the same&lt;br&gt;
document. In any case, let's see what this code looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;edits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;TextEdit&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trigger&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;edits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;TextEdit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trigger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="dl"&gt;""&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isUndefined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;anchor&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;anchor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;block&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;genUUIDInsecure&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blockPosition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;VSCodeUtils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;point2VSCodePosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;block&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;edits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;TextEdit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;blockPosition&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;blockPosition&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="s2"&gt;` &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;AnchorUtils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;anchor2string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;anchor&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first part adds a text edit to remove the &lt;code&gt;^&lt;/code&gt; part the user typed by&lt;br&gt;
calculating the range from a regex match, then replacing it with &lt;code&gt;""&lt;/code&gt;. The&lt;br&gt;
second part adds the &lt;code&gt;^...&lt;/code&gt; part to a block by calculating the range from the&lt;br&gt;
parsed document.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Autocomplete is a ubiquitous feature in text editing today, both for writing&lt;br&gt;
natural languages and coding. It is an incredibly easy-to-use yet powerful&lt;br&gt;
feature for your users, and it enables unmatched user experiences when done&lt;br&gt;
right. But when done wrong, it can cause a disconnect and confusion around your&lt;br&gt;
product. At Dendron, we strive for the former and hope that the learnings from&lt;br&gt;
our experience will help you do the same.&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>typescript</category>
      <category>tooling</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>MERN Stack Full Course (free) 🔥</title>
      <author>Chaoo Charles</author>
      <pubDate>Thu, 23 Sep 2021 16:26:37 +0000</pubDate>
      <link>https://dev.to/chaoocharles/mern-stack-full-course-free-3fab</link>
      <guid>https://dev.to/chaoocharles/mern-stack-full-course-free-3fab</guid>
      <description>&lt;p&gt;This is a complete MERN Stack course for free in 10hours on my YouTube Channel. After completing this course you will be well equipped to take MERN Stack projects on your own. We will cover creating CRUD Operations and Auth APIs using Node.js, Express, and MongoDB. We will then consume these APIs on the frontend using React and Redux. Enjoy 💙&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#watch-the-course-below"&gt;
  &lt;/a&gt;
  Watch the Course Below 👇
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/KNZZZ3pbqco"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>react</category>
      <category>node</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
  </channel>
</rss>
