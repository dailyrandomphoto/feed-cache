<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>[FREE COURSE] Build A Serverless JAMStack Micro-Blogging App Using Next.Js, Tailwind CSS, And FaunaDB</title>
      <author>Gr√©gory D'Angelo</author>
      <pubDate>Wed, 02 Jun 2021 09:18:05 +0000</pubDate>
      <link>https://dev.to/alterclass/free-course-build-a-serverless-jamstack-micro-blogging-app-using-next-js-tailwind-css-and-faunadb-4g3l</link>
      <guid>https://dev.to/alterclass/free-course-build-a-serverless-jamstack-micro-blogging-app-using-next-js-tailwind-css-and-faunadb-4g3l</guid>
      <description>&lt;p&gt;&lt;strong&gt;BIG NEWS: I just launched a new (FREE!) course on my new screencasts platform. ü•≥&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‚Üí Learn how to &lt;a href="https://screencasts.alterclass.io/courses/build-a-serverless-jamstack-micro-blogging-app-using-nextjs-tailwind-css-and-faunadb"&gt;build a Serverless JAMStack Micro-Blogging App using Next.js, Tailwind CSS, and FaunaDB&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It is LIVE now and available to anyone. So feel free to &lt;a href="https://twitter.com/intent/tweet?url=https%3A%2F%2Fscreencasts.alterclass.io%2Fcourses%2Fbuild-a-serverless-jamstack-micro-blogging-app-using-nextjs-tailwind-css-and-faunadb&amp;amp;via=AlterClassIO&amp;amp;text=Learn%20How%20to%20Build%20a%20Serverless%20JAMStack%20Micro-Blogging%20App%20Using%20Next.js%2C%20Tailwind%20CSS%2C%20and%20FaunaDB"&gt;share it with your friends&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;This course is pretty different from my &lt;a href="https://alterclass.io/courses/react"&gt;ReactJS program&lt;/a&gt; as it is a project-based screencast series. In other words, you'll learn with me step-by-step how to build a JAMStack application using the best modern tools and technologies available.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;React&lt;/strong&gt;: a JavaScript library that enables developers to quickly and efficiently build interactive and dynamic user interfaces. Working with React makes the developer's life a breeze, thanks to its simplicity and modular infrastructure&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Next.js&lt;/strong&gt;: a React-based web framework with a bunch of features out-of-the-box such as hybrid static and server rendering, file-system routing, API routes, TypeScript support, and so much more. It makes your React applications more powerful and faster to build and maintain&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tailwind CSS&lt;/strong&gt;: a rapidly growing utility-first CSS framework that makes styling websites and web applications fast and flexible&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Fauna DB&lt;/strong&gt;: a flexible, developer-friendly, transactional database&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In a nutshell, here's what this FREE course has to offer:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Almost &lt;strong&gt;2 hours of pure coding&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;19 step-by-step screencast videos&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;4 modern technologies&lt;/strong&gt; to add to your resume&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;An awesome application&lt;/strong&gt; to add to your portfolio&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What are you waiting for? üëâ &lt;a href="https://screencasts.alterclass.io/courses/build-a-serverless-jamstack-micro-blogging-app-using-nextjs-tailwind-css-and-faunadb"&gt;Click here to start learning&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>react</category>
      <category>javascript</category>
      <category>tailwindcss</category>
    </item>
    <item>
      <title>Top Best Online Coding üë®‚ÄçüíªPlatform - Learn and Code!</title>
      <author>Mayank Pathak</author>
      <pubDate>Wed, 02 Jun 2021 09:16:56 +0000</pubDate>
      <link>https://dev.to/mayankpathak/top-best-online-coding-platform-learn-and-code-dik</link>
      <guid>https://dev.to/mayankpathak/top-best-online-coding-platform-learn-and-code-dik</guid>
      <description>&lt;p&gt;Helloüëã Guys, you might be searchingüîç and surfing here and there, may be visisted a lot of portals ü§≠ to find where you can learn, code and master the programming languages and the new technologies as per the current environment.&lt;/p&gt;

&lt;p&gt;Not to worryüòß now as I listed a few of the best online coding and learning platformsü§ó where you can master any of your preferred coding language and the newest technologies.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#let-us-first-know-something-about-the-programming"&gt;
  &lt;/a&gt;
  Let us first know something about the üë®‚Äçüíª programming
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#what-programming-means"&gt;
  &lt;/a&gt;
  What Programming Means ‚ùì
&lt;/h4&gt;

&lt;p&gt;Programming brings up a combination of logical-thinking, mathematics, data-structures, algorithms and the main part is the deciding language to code. The code must be written under some restrictions like execution time, memory limit, complexity, space, limit of coding etc.&lt;/p&gt;

&lt;p&gt;It adds so much of benefits into the thinking of an individual, helps to sharpen the mind and skillsets, takes you to a next level of logical and analytical skills.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#benefits-of-programming-"&gt;
  &lt;/a&gt;
  Benefits of Programming ü§ì:
&lt;/h4&gt;

&lt;ol&gt;
 &lt;li&gt;Improve ones algorithmic knowledge.&lt;/li&gt;
 &lt;li&gt;Improve ones data-structures gain and master them to next-level.&lt;/li&gt;
&lt;li&gt; Brings a lot to your analytical and logical skill-set.&lt;/li&gt;
&lt;li&gt;Helps to strengthen your resume and CV.&lt;/li&gt;
&lt;li&gt;Increase the friend circle over the network.&lt;/li&gt;
&lt;li&gt;Continuous involvement over the forum for discussion and doubt clearance.&lt;/li&gt;
&lt;li&gt;Helps to identify some of the tech giants like Google, Amazon, Facebook etc.&lt;/li&gt;
&lt;li&gt;Got to know some of the working basic principles behind these tech-giants.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now check out this list of the best learning, coding and practicing platforms. This list contains only the introductive parts of these platforms.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note : Below listed Coding Platforms are a great source for the begginers and mid-level programmers. You can find a wide variety of problems to solve at an easy, medium and hard level.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#top-programming-platforms-to-code-"&gt;
  &lt;/a&gt;
  üîùTop Programming Platforms to Codeüë®‚Äçüíª :
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#1-hackerrank-"&gt;
  &lt;/a&gt;
  1. HackerRank :
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QzxhAGLz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nouxdnucybctslxt8eka.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QzxhAGLz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nouxdnucybctslxt8eka.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
HackerRank is the market-leading technical assistant and remote interview solution for hiring and job profile developers. It provides you with topic wise as well as language based proficiency to master with their learning and practicing curve.&lt;/p&gt;

&lt;p&gt;Visit to view more : &lt;a href="https://www.hackerrank.com/"&gt;hackerrank.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-hackerearth-"&gt;
  &lt;/a&gt;
  2. HackerEarth :
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EsSbcn6c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kc4t2zm79dkt1z63re3e.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EsSbcn6c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kc4t2zm79dkt1z63re3e.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
HackerEarth provides enterprise software that helps organizations with their technical hiring needs. HackerEarth is used by organizations for technical skill assessment and remote video interviewing. In addition to that HackerEarth also has a community and since inception built a base over 4M+ developers.&lt;/p&gt;

&lt;p&gt;Visit to view more : &lt;a href="https://www.hackerearth.com/"&gt;hackerearth.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-codewars-"&gt;
  &lt;/a&gt;
  3. Codewars :
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tutgNNoK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f1dlgetb4fejxi3569n4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tutgNNoK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f1dlgetb4fejxi3569n4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Codewars is an educational community for computer programming. On the platform, Software developers train on programming challenges known as kata. These discrete programming exercises train a range of skills in a variety of programming languages, and are completed within an online IDE.&lt;/p&gt;

&lt;p&gt;Visit to view more : &lt;a href="https://www.codewars.com/"&gt;codewars.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-codechef-"&gt;
  &lt;/a&gt;
  4. Codechef :
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T3YDTYwB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cpldv4nev06oj4elqg6n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T3YDTYwB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cpldv4nev06oj4elqg6n.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
CodeChef offers thousands of the competitive programming challenges. Basically it is an Indian Software company which has the community of developers across the globe. It allows you to write code in their online editor and view a collection of challenges. The coding problems are separated into different categories based on your skill level.&lt;/p&gt;

&lt;p&gt;Visit to view more : &lt;a href="https://www.codechef.com/"&gt;codechef.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-coderbyte-"&gt;
  &lt;/a&gt;
  5. Coderbyte :
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YpO0I1i3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zegs8u25oqnyuystq97v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YpO0I1i3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zegs8u25oqnyuystq97v.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Coderbyte offers more than 200 various types of coding challenges which you can solve in an online editor using 10 different programming languages. It provides official solutions and more than 800,000 user created solutions.&lt;/p&gt;

&lt;p&gt;Visit to view more : &lt;a href="https://coderbyte.com/"&gt;coderbyte.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-topcoder-"&gt;
  &lt;/a&gt;
  6. Topcoder :
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S-7_iM4x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x8z37njc83yjid74b3wc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S-7_iM4x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x8z37njc83yjid74b3wc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Topcoder is a crowdsourcing company with an open global community of designers, developers, data scientists, and competitive programmers. Topcoder pays community members for their work on the projects and sells community services to corporate, mid-size, and small-business clients.&lt;/p&gt;

&lt;p&gt;Visit to view more : &lt;a href="https://www.topcoder.com/"&gt;topcoder.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-codeforce-"&gt;
  &lt;/a&gt;
  7. Codeforce :
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vj5FBR-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rdjo1hh0fv7m5cpnrxhf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vj5FBR-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rdjo1hh0fv7m5cpnrxhf.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Codeforces is a website that hosts competitive programming contests. It is maintained by a group of competitive programmers from ITMO University led by Mikhail Mirzayanov. Since 2013, Codeforces claims to surpass Topcoder in terms of active contestants. As of 2018, it has over 600,000 registered users.&lt;/p&gt;

&lt;p&gt;Visit to view more : &lt;a href="https://codeforces.com/"&gt;codeforces.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-guvi-"&gt;
  &lt;/a&gt;
  8. Guvi :
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ozIYS7q6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8grpkilydxaq4t9ndxr8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ozIYS7q6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8grpkilydxaq4t9ndxr8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
GUVI is an online platform to learn computer programming based in India. It offers free and paid coding courses to students and working professionals in Indian languages such as Hindi, Telugu, Kannada, Bengali, Tamil, and in English.&lt;/p&gt;

&lt;p&gt;Visit to view more : &lt;a href="https://www.guvi.in/"&gt;guvi.in&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-codeabbey-"&gt;
  &lt;/a&gt;
  9. Codeabbey :
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B8M4jv_K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2v5w3n52oegc3kr1j06s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B8M4jv_K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2v5w3n52oegc3kr1j06s.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Codeabbey is a simple problem practicing platform designed to compete with all the community of developers out there. Its provide a list of questions to get dirty your hands and show case what you have in your pocket. Its a platform developed by some developers purposely for coding only.&lt;/p&gt;

&lt;p&gt;Visit to view more : &lt;a href="https://www.codeabbey.com/"&gt;codeabbey.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-geeksforgeek-"&gt;
  &lt;/a&gt;
  10. Geeksforgeek :
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xKiErV2d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x6s2j0a3lsbllhze4eob.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xKiErV2d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x6s2j0a3lsbllhze4eob.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Geeksforgeek is an Indian software company which provides the courses on vast computer science topics. It has its own compiler to run the codes and also have a series of question to solve and practice. Its a fully end to end a computer geek portal mainly made for the students of CS major.&lt;/p&gt;

&lt;p&gt;Visit to view more : &lt;a href="https://www.geeksforgeeks.org/"&gt;geeksforgeeks.org&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;These all are excellent platforms for a &lt;strong&gt;beginner&lt;/strong&gt; and &lt;strong&gt;intermediate&lt;/strong&gt; in the Programming. You will get a variety of problems to try out and ecah concept to cover in the programming.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hope this help you all those who are trying to get a great platform to practice their coding knowledge. One thing that I would try to suggest is to go with any one platform and try to capitalize your work on it and do as many as problem you can. This will help to track your work and performance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thanks for Reading , I would love üß° to connect with you at &lt;a href="https://twitter.com/mayankp4513"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/mayank-pathak4513/"&gt;LinkedIn&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Thanks form my side, this is Mayank, keep learning and exploring and stay safe !!&lt;/p&gt;

&lt;p&gt;If you liked the article and find it useful the pleaseüôè consider &lt;a href="https://www.buymeacoffee.com/mayankpathak"&gt;Buy me a coffee&lt;/a&gt; to show your love üß° and interest.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/mayankpathak"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Meet you in the next article.&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>computerscience</category>
      <category>programming</category>
    </item>
    <item>
      <title>Create your own Text Editor, but should you?</title>
      <author>Aditya</author>
      <pubDate>Wed, 02 Jun 2021 08:34:33 +0000</pubDate>
      <link>https://dev.to/adityavinodh/create-your-own-text-editor-but-should-you-2ole</link>
      <guid>https://dev.to/adityavinodh/create-your-own-text-editor-but-should-you-2ole</guid>
      <description>&lt;h1&gt;
  &lt;a href="#when-do-you-need-an-editor"&gt;
  &lt;/a&gt;
  When do you need an editor?
&lt;/h1&gt;

&lt;p&gt;Nowadays, the trend seems to be leaning towards web development and web apps rather than native alternatives. Along with this trend, even simple applications require more complex feature sets and are built with a mobile-first design in mind, as well as a dynamic/responsive site. Any application that requires user input as text, images, or other multimedia content, will require some sort of an editor to implement. Even a simple website where you display articles or blogs, might require users to submit comments. But users are rarely satisfied with simple text and emojis. They might prefer to add an image, make the text bold or italic, embed a YouTube video, etc. These features require developers to implement an editor of some sort into their web apps.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-get-started"&gt;
  &lt;/a&gt;
  How to get Started
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#dropin-solution"&gt;
  &lt;/a&gt;
  Drop-in solution
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ObVOmI1L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://yo.adityaone.com/quill-screenshot.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ObVOmI1L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://yo.adityaone.com/quill-screenshot.png" alt="Quill Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are quite a few options available to consider when implementing a text editor in your website. The first and most straight forward option is to use something like &lt;a href="https://quilljs.com/"&gt;Quill&lt;/a&gt;. This allows you to drop in the editor into your existing website with minor configuration and modification. You can pick a design or layout from one of the few existing options, and apply it to the website. This works for most web apps, with minor additional work arounds for frameworks like React. The video below shows an implementation to create a Google Docs clone.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=iRaelG7v0OU"&gt;Video by Web Dev Simplified - Google Docs Clone&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-your-own"&gt;
  &lt;/a&gt;
  Create your own
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Tp1cHHn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://yo.adityaone.com/sidetracked-editor-screenshot.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Tp1cHHn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://yo.adityaone.com/sidetracked-editor-screenshot.png" alt="SideTracked Editor Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is something that I do not recommend, unless you think you want to completely customize the behaviour. In my case, I wanted to explore and try it out, so I decided to make it as portable as possible, and prioritize features that are important to my app.&lt;/p&gt;

&lt;p&gt;Decide the features that are most important. In the case of a blogging or article publishing site, there are not going to be too much of formatting required. Blocks of text or media that follow a consistent style or format has been the trend, and is also visually more pleasing. So, you can set the style before hand, and then allow users to add sections of text or media from a list of options that you provide. You can allow a title, a subtitle, a smaller heading, a standard paragraph, a quote, an image, a video (maybe a YouTube embed), etc. You can style and theme the page appropriately for these formats. Make sure you can export the content with the actual data (links in the case of images, or actual links) and the meta data to style it. JSON is a good idea. The issue that you might run into is to make certain parts of a section, like certain words, italics, bold, or underlined. This is not too important, but might be something to consider.&lt;/p&gt;

&lt;p&gt;This data can now be converted and stored in any database.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#bonus-community-comments"&gt;
  &lt;/a&gt;
  Bonus (Community Comments)
&lt;/h1&gt;

&lt;p&gt;If you just want to implement a comment section for your website, you can use a service like &lt;a href="https://disqus.com/"&gt;Disqus&lt;/a&gt;. This is used on my blog that you are reading right now. You can check it out at the bottom of the blog. (No affiliation with Disqus)&lt;/p&gt;

&lt;p&gt;These features can get quite advanced and distracts you from the main focus of your app. Disqus makes it dead-simple to drop it in to your app, with their simple editor for users to submit comments, reply to other comments, and react to your posts. It even includes moderation.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>html</category>
    </item>
    <item>
      <title>Top three React &amp; TypeScript pitfalls</title>
      <author>Wojciech Matuszewski</author>
      <pubDate>Wed, 02 Jun 2021 08:29:47 +0000</pubDate>
      <link>https://dev.to/wojciechmatuszewski/top-three-react-typescript-pitfalls-50l8</link>
      <guid>https://dev.to/wojciechmatuszewski/top-three-react-typescript-pitfalls-50l8</guid>
      <description>&lt;p&gt;The usage of React &amp;amp; TypeScript exploded in recent years. This should not come as a surprise to anyone at this point. Both tools proven to be viable working on web application large and small allowing developers to satisfy various business needs.&lt;/p&gt;

&lt;p&gt;With the explosion of popularity comes also the explosion of mistakes that engineers can make while working with this stack in their day-to-day jobs. This blog aims to shed a light on my top three React &amp;amp; TypeScript pitfalls I‚Äôve seen developers fall into and how they could be avoided.&lt;/p&gt;

&lt;p&gt;Let us start with the most important one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-raw-reactfunctioncomponent-endraw-or-raw-reactfc-endraw-"&gt;
  &lt;/a&gt;
  Using &lt;code&gt;React.FunctionComponent&lt;/code&gt; or &lt;code&gt;React.FC&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;I often see components being annotated as such:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Props&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;FirstComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FC&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Props&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;SecondComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FunctionComponent&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Props&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At first glance, it might seem like a good idea to type your components using these &lt;em&gt;type abstractions&lt;/em&gt;. The ergonomics of &lt;code&gt;React.FC&lt;/code&gt; and &lt;code&gt;React.FunctionComponent&lt;/code&gt; might undoubtedly be tempting. By default, they provide you with typings for the &lt;code&gt;children&lt;/code&gt; prop, the &lt;code&gt;defaultProps&lt;/code&gt;, &lt;code&gt;propTypes&lt;/code&gt;, and many other component properties.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can read more about the React.FC and React.FunctionComponent &lt;a href="https://react-typescript-cheatsheet.netlify.app/docs/basic/getting-started/function_components"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With all that being said, I believe that they introduce unnecessary complexity and are too permissive in terms of types.&lt;/p&gt;

&lt;p&gt;Let us start with the most critical issue using either &lt;code&gt;React.FC&lt;/code&gt; or &lt;code&gt;React.FunctionComponent&lt;/code&gt;. I‚Äôm talking about the unnecessary complexity they introduce. Here is a simple question: which type of annotation feels more straightforward and easier to digest to you?&lt;/p&gt;

&lt;p&gt;The one that where we explicitly annotate components arguments:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Props&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or maybe the one where we use &lt;code&gt;React.FC&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Props&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FC&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Props&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you are familiar with &lt;code&gt;React.FC&lt;/code&gt;, you might shrug your shoulders and say that both of them are completely valid options. And this is where the problem lies, mainly in the concept of &lt;em&gt;familiarly&lt;/em&gt; or lack thereof.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;React.FC&lt;/code&gt; interface is shallow. In most cases, it can be replaced by annotating props explicitly. Now, imagine being new to a codebase, where &lt;code&gt;React.FC&lt;/code&gt; is used extensively, but you have no idea what it means and what it does. You would most likely not be comfortable amending the &lt;code&gt;Props&lt;/code&gt; type definitions within that codebase on your first day.&lt;/p&gt;

&lt;p&gt;Another problem these typings introduce is the implicit composability by augmenting the &lt;code&gt;Props&lt;/code&gt; definition with the &lt;code&gt;children&lt;/code&gt; property.&lt;/p&gt;

&lt;p&gt;I love how composable React components can be. Without the &lt;code&gt;children&lt;/code&gt; property, it would be pretty hard to achieve one of my favorite patterns in React, the &lt;em&gt;&lt;a href="https://kentcdodds.com/blog/compound-components-with-react-hooks"&gt;compound components pattern&lt;/a&gt;&lt;/em&gt;. With that in mind, I believe that we introduce misdirection to their APIs by making the composition of components implicit.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MarketingButton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FC&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Notice that I'm not using `props.children`&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Our product is the best!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// In a completely separate part of the codebase, some engineer tries to use the `MarketingButton`.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;MarketingButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;HELLO!??&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;MarketingButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The engineer consuming the API would most likely be confused because, despite being able to pass the &lt;em&gt;children&lt;/em&gt; in the form of a simple string, the change is not reflected in the UI. To understand what is going on, they would have to read the definition of the &lt;code&gt;MarketingButton&lt;/code&gt; component - this is very unfortunate. It might seem like a contrived example, but imagine all the seconds lost by thousands of engineers each day going through what I‚Äôve just described. This number adds up!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#typing-the-children-property-wrong"&gt;
  &lt;/a&gt;
  Typing the children property wrong
&lt;/h2&gt;

&lt;p&gt;In the last section, I touched on how important the &lt;code&gt;children&lt;/code&gt; prop is. It is then crucial to correctly annotate this property to make other developer‚Äôs work with life easier.&lt;/p&gt;

&lt;p&gt;I personally have a simple rule that I follow that works for me:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Use React.ReactNode by default. Change if necessary&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is an example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Props&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;children&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ReactNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MarketingButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I find myself opting out of &lt;code&gt;React.ReactNode&lt;/code&gt; very rarely, primarily to further constrain the values of the &lt;code&gt;children&lt;/code&gt; prop. You can find a great resource to help you pick what type of the &lt;code&gt;children&lt;/code&gt; prop you should use &lt;a href="https://react-typescript-cheatsheet.netlify.app/docs/basic/getting-started/basic_type_example#useful-react-prop-type-examples"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#leaking-component-types"&gt;
  &lt;/a&gt;
  Leaking component types
&lt;/h2&gt;

&lt;p&gt;How often do you encounter a component written in a following way:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;MyComponentProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;MyComponentProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Some other part of the codebase, possibly a test file.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;MyComponentProps&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../MyComponent&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Exporting the &lt;code&gt;MyComponentProps&lt;/code&gt; creates two problems.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You have to come up with a name for the type. Otherwise, you will end up with a bunch of exported symbols that all have the same name. Operating in such a codebase is cumbersome because you have to actively pay attention to where the auto-completion imports the symbols from.&lt;/li&gt;
&lt;li&gt;It might create implicit dependencies that other engineers on your team might not be aware of.

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Can I change the name of the type?&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Is &lt;code&gt;MyComponentProps&lt;/code&gt; type used somewhere else?&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Whenever you keep the type of the props &lt;em&gt;un-exported&lt;/em&gt;, you avoid those issues.&lt;/p&gt;

&lt;p&gt;There exists a mechanism that allows you to extract the type of props for a given component without you having to use the &lt;code&gt;export&lt;/code&gt; keyword. I‚Äôm referring to &lt;code&gt;React.ComponentProps&lt;/code&gt; generic type. The usage is as follows.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Props&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// In another file.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../MyComponent&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;MyComponentProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ComponentProps&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I‚Äôve been using this technique for the past two years that I‚Äôve been writing React &amp;amp; TypeScript code, and I have never looked back. You can read more about how useful this generic type is in the context of writing component tests in &lt;a href="https://dev.to/wojciechmatuszewski/writing-unit-tests-with-react-typescript-and-react-testing-library-1nmg"&gt;one of my other blog posts&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;These were the top three pitfalls I‚Äôve most commonly seen in the wild. I hope that you found my ramblings helpful.&lt;/p&gt;

&lt;p&gt;If you noticed that something I‚Äôve written is incorrect or would like to clarify a part of the article, please reach out! &lt;/p&gt;

&lt;p&gt;You can find me on twitter - &lt;a href="https://twitter.com/wm_matuszewski"&gt;@wm_matuszewski&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you for your time.&lt;/p&gt;

</description>
      <category>react</category>
      <category>typescript</category>
      <category>javascript</category>
      <category>ts</category>
    </item>
    <item>
      <title>Why local development for serverless is an anti-pattern</title>
      <author>Gareth McCumskey</author>
      <pubDate>Wed, 02 Jun 2021 07:56:03 +0000</pubDate>
      <link>https://dev.to/garethmcc/why-local-development-for-serverless-is-an-anti-pattern-1d9b</link>
      <guid>https://dev.to/garethmcc/why-local-development-for-serverless-is-an-anti-pattern-1d9b</guid>
      <description>&lt;p&gt;In the serverless community, individuals and teams spend a lot of time and effort attempting to build an environment that is a replica of the cloud. Why? Because this is what we have always done. When you start your career building applications for the web, we were told you need to have a local development environment on your own machine and you do your work against that environment before pushing to a your code repository. &lt;/p&gt;

&lt;p&gt;But I am going to argue that this absolute requirement to get up and running when building applications is not only unnecessary in the serverless world but actually harmful.&lt;/p&gt;

&lt;p&gt;Lets start considering the whys. Why do we create local development environments in the first place? What purpose do they actually serve?&lt;/p&gt;

&lt;p&gt;If you look back at where we have come from building for the web, we used to exist in a world where our code and scripts were exceedingly minimal and work was essentially done directly on the machines that served our application to the web. Why? Because these machines were often very specialised ones that were impossible to replicate without great expense and aiming for 100% uptime was not necessarily the biggest goal at that stage so why not? Its easy to just edit files directly on that remote machine.&lt;/p&gt;

&lt;p&gt;Push things a few years later down the line and we are now in a position where we need to make changes multiple times a day to an application that must not go down if we can avoid it. Editing directly on production becomes scary because we would like to test this application first if we could. &lt;/p&gt;

&lt;p&gt;Luckily, at this stage, a lot of the infrastructure for the web has gotten commoditised; we can use a regular consumer computer and install the same (or similar applications) to it to simulate the remote environment and test our application before pushing to the production server.&lt;/p&gt;

&lt;p&gt;However, things couldn't stay this way. Traffic increased, and single machines soon no longer became enough to handle the load the growth of the Internet created. Clusters of machines were needed with comparatively complex architectures to both increase request throughput and resiliency to failure as downtime became more and more costly. No longer was the replicated development environment on a developers machine a pretty-close replica. &lt;/p&gt;

&lt;p&gt;This is where a lot of the staging or development environments begin to come from. The thinking is, let developers develop on their local machines as they have done because that's what they are used to, and we will spin up as close to a replica of production we can in order to test against to make sure it wont break anything,even if its costly to the business, because that's better than down time.&lt;/p&gt;

&lt;p&gt;The cloud certainly helped a lot in this as well; if you can create staging environments on command and only put them up when needed, its not quite as expensive as keeping a development cluster in parallel in a server rack.&lt;/p&gt;

&lt;p&gt;However, the issue is that our local machines were, at best, only occasionally accurate to the production cluster, and usually required developers to be constantly pushing code to the shared staging server for testing purposes as the architectures were just too complex to ever hope to replicate locally and made any kind of local testing redundant. Not to mention, in teams, this resulted in a lot of stepping on toes and waiting for your turn to test your changes!&lt;/p&gt;

&lt;p&gt;What was really needed was a replica of production for every developer in the team. But with production clusters running multiple virtual machines, load balancers, relational databases, caches, etc, this is cost prohibitive.&lt;/p&gt;

&lt;p&gt;Then containers arrived. Finally! Now we can package up the complexity of our production systems into neat little blocks that don't interfere with each other and we can get closer to production by running them on our own development machines.&lt;/p&gt;

&lt;p&gt;Except, they do interfere with each other, and added huge amounts of complexity for developers to have to handle and worry about. Expensive engineers should be building features and generating revenue instead of managing their development environment and it STILL wasn't as accurate a representation of the production environment it should be!&lt;/p&gt;

&lt;p&gt;At one point, I was an engineer for an e-commerce organisation and they siloed a single developer off for two months to replicate production as a collection of docker containers we could just install on our machines. The end result was a process that took 30 minutes just to install and required the entire development team to have their hardware upgraded to at least 16 GB of RAM. Running Nginx, ElasticSearch, Redis and MySQL on a single machine apparently uses a lot of memory; who would have thought. And we STILL had constant issues when we thought our code was ready to be tested against the staging environment and it just wasn't.&lt;/p&gt;

&lt;p&gt;This is just one example of many I have to share.&lt;/p&gt;

&lt;p&gt;The TL;DR of the above? We used local testing because testing against production became too dangerous,tried to replicate production locally and failed miserably to today where we are, essentially, &lt;a href="https://www.honeycomb.io/blog/yes-i-test-in-production-and-so-do-you/"&gt;still testing against production&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And now, in the world of serverless development, here we are once again, trying to make things run locally that really shouldn't. And this isn't a collection of virtual machines or docker containers we can kinda of get to run locally to some semblance of accuracy. These are cloud services for which most have no official way to run locally and probably never will. The existing emulation techniques used in tools like Localstack are impressive but not an exact replica of the cloud; they are the best effort someone has made to allow us to kind of sort of test these services locally with something resembling the cloud version. Not to mention all the aspects of the cloud (and distributed application architectures) that can throw a spanner in the works. How do you replicate intra-service latencies, IAM, service limits and so many other aspects of the cloud that &lt;strong&gt;aren't&lt;/strong&gt; related to a specific service&lt;/p&gt;

&lt;p&gt;We also don't even need to! With tools like the Serverless Framework (I know there are others I have just not used them to the same level of familiarity as the Serverless Framework) that gives you the ability to deploy the &lt;strong&gt;exact same&lt;/strong&gt; configuration of resources we deploy into production in &lt;strong&gt;any other environment&lt;/strong&gt; we choose. Want a shared environment for the developers of the team to test against? Just run the deploy command! Want your own "local" environment to test against? Just run the deploy command!&lt;/p&gt;

&lt;p&gt;Finally! We are in a position where we can 100% replicate the infrastructure in production and, because of serverless application's propensity to bill for usage, it costs you nothing to deploy them and pennies if you do testing against them!&lt;/p&gt;

&lt;p&gt;So why are we still fighting so hard to maintain the local environment? Probably because of the feared lack of productivity. To answer this, I am going to point to a recently published post by a compatriot of mine at Serverless, Inc, who wrote up a great way to look at "local" development for serverless and the very few tools you need to accomplish this. &lt;a href="https://dev.to/aws-builders/developing-against-the-cloud-55o4"&gt;Check it out here&lt;/a&gt;. The amount of time spent managing a local development environment, updating it, making sure it keeps running, is costly in itself. But there is another good reason to not consider it!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Its actually bad for your application!&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Consider a group of developers using an emulation tool like Localhost. It does an ok job at allowing the developers of the team to build and test their serverless applications locally. However, one of the members on the team spots a really useful cloud service that could be used to build the best possible solution to a problem they are trying to solve. It can improve the reliability of the application as a whole, decreases costs and time to production. However, this service is not (yet) provided by the local emulation tool.&lt;/p&gt;

&lt;p&gt;They now have three choices. Use the service anyways, meaning that testing in the cloud is now an absolute requirement but the application is now better for it. However this kind of makes the local testing environment entirely irrelevant. Or, don't use the service and essentially hamstring the efficacy of your application because the local testing environment is sacrosanct. Or lastly, spend days or maybe even weeks trying to find a way to replicate this service locally, delaying deployment of this feature and _&lt;em&gt;still&lt;/em&gt; having a sub standard replica of a cloud service to test against, assuming you find a workable solution to begin with.&lt;/p&gt;

&lt;p&gt;What about tools like serverless-offline? Nice and simple and lets you just easily test against your HTTP endpoints? Right?&lt;/p&gt;

&lt;p&gt;Well, besides the fact that, yet again, this is not an accurate representation of the cloud and completely ignores the oddities of services such as API Gateway, IAM, etc, it is also &lt;strong&gt;only good for http events&lt;/strong&gt;. More and more we see serverless applications doing more than just be glorified REST API's. You cannot test all the other events that can trigger your Lambda functions.&lt;/p&gt;

&lt;p&gt;Local development seems, at face value, to be efficient and simple. It is a necessary evil in the traditional web development world because traditional architectures are too costly and unwieldy to replicate exactly for every developer of a team. But serverless architectures cost nothing to deploy and minimal (or often free) to run tests against, and can be exact replicas of production when deployed into the cloud.&lt;/p&gt;

&lt;p&gt;Just because it is familiar doesn't mean its a good idea. With tools like the Serverless Framework and others out there offering the ability to &lt;a href="https://www.serverless.com/framework/docs/providers/aws/cli-reference/deploy-function/"&gt;deploy only code in mere seconds&lt;/a&gt;, &lt;a href="https://www.serverless.com/framework/docs/providers/aws/cli-reference/invoke/"&gt;invoke functions&lt;/a&gt; directly from your local machine to the remote Lambda and even &lt;a href="https://www.serverless.com/framework/docs/providers/aws/cli-reference/logs/"&gt;tail the logs in your terminal&lt;/a&gt; to get instant feedback on errors, you do not need to lose productivity but can drastically decrease complexity and accuracy to production.&lt;/p&gt;

&lt;p&gt;If anyone has any questions sound out in the comments or even hit me up on &lt;a href="https://twitter.com/garethmcc"&gt;Twitter&lt;/a&gt;. My DM's are open and I love discussing serverless topics!!&lt;/p&gt;

</description>
      <category>serverless</category>
      <category>aws</category>
      <category>testing</category>
    </item>
    <item>
      <title>Top Mistakes I made as a JavaScript Developer.</title>
      <author>Ankur Tyagi</author>
      <pubDate>Wed, 02 Jun 2021 07:54:56 +0000</pubDate>
      <link>https://dev.to/tyaga001/top-mistakes-i-made-as-a-javascript-developer-54bb</link>
      <guid>https://dev.to/tyaga001/top-mistakes-i-made-as-a-javascript-developer-54bb</guid>
      <description>&lt;h2&gt;
  &lt;a href="#top-mistakes-i-made-as-a-javascript-developer"&gt;
  &lt;/a&gt;
  Top Mistakes I made as a JavaScript Developer...
&lt;/h2&gt;


&lt;blockquote&gt;
&lt;p&gt;Top Mistakes I made as a JavaScript Developer...&lt;br&gt;&lt;br&gt;A Thread... &lt;a href="https://t.co/3gejhKTv3T"&gt;pic.twitter.com/3gejhKTv3T&lt;/a&gt;&lt;/p&gt;‚Äî Ankurüíªüéßüí™ (@TheAnkurTyagi) &lt;a href="https://twitter.com/TheAnkurTyagi/status/1399987615001026563?ref_src=twsrc%5Etfw"&gt;June 2, 2021&lt;/a&gt;
&lt;/blockquote&gt;  

&lt;blockquote&gt;
&lt;p&gt;Today, JavaScript is at the core of virtually all modern web applications.&lt;/p&gt;


&lt;/blockquote&gt;

&lt;p&gt;Let me show you some typical mistakes that almost every JS programmer has made during their career.&lt;/p&gt;

&lt;p&gt;I've been a JS dev since 2014 &amp;amp; I still make some of these mistakes, especially when coding in a hurry.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E2%96%AB-do-you-remember-the-difference-between-and-"&gt;
  &lt;/a&gt;
  ‚ñ´ Do you remember the difference between ¬´=¬ª, ¬´==¬ª  and ¬´===¬ª?
&lt;/h2&gt;

&lt;p&gt;You might encounter a problem with code Down pointing backhand index &lt;/p&gt;

&lt;p&gt;You'll get ‚ÄúHello‚Äù! Why?&lt;/p&gt;

&lt;p&gt;Because you don‚Äôt understand the difference between the 3 operators mentioned above.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gy3uw7Km--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622619792149/zHRG46NF0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gy3uw7Km--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622619792149/zHRG46NF0.png" alt="carbon(59).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Let‚Äôs get this thing over with and go further: *&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚Äú=‚Äù is the equal operator, so it‚Äôs used for assignment. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In our example, we assign seven to ‚Äúx‚Äù in the condition and get words of welcome ‚ÄúHello‚Äù. &lt;/p&gt;

&lt;p&gt;The correct code looks like this:&lt;/p&gt;

&lt;p&gt;We get ‚ÄúNope‚Äù.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DybTGaxw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622619843215/ExN0L2tZz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DybTGaxw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622619843215/ExN0L2tZz.png" alt="carbon(60).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚Äú==‚Äù is the loose equality comparison operator.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Why loose? Because it allows converting values from one type to another to compare them&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚Äú===‚Äù is the strict equality comparison operator. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If this operator returns ‚Äútrue‚Äù it means that our values are identical both in value &amp;amp; type.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E2%96%AB-inefficient-dom-manipulation"&gt;
  &lt;/a&gt;
  ‚ñ´ Inefficient DOM manipulation
&lt;/h2&gt;

&lt;p&gt;JavaScript makes it relatively easy to manipulate the DOM (i.e., add, modify, and remove elements).&lt;/p&gt;

&lt;p&gt;A common example is a code that adds a series of DOM Elements one at a time. &lt;/p&gt;

&lt;p&gt;Adding a DOM element is an expensive operation.&lt;/p&gt;

&lt;p&gt;One effective alternative when multiple DOM elements need to be added is to use document fragments instead, thereby improving both efficiency and performance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ScdR9xPs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622619910200/5Qugd2cEV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ScdR9xPs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622619910200/5Qugd2cEV.png" alt="carbon(61).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E2%96%AB-used-amp-when-i-mean-to-use-ampamp"&gt;
  &lt;/a&gt;
  ‚ñ´ Used '&amp;amp;' when I mean to use '&amp;amp;&amp;amp;'
&lt;/h2&gt;

&lt;p&gt;The 'bitwise' &amp;amp; is used to compare Integers, and if the values being compared are not Integers, they are coerced into Integers. &lt;/p&gt;

&lt;p&gt;The standard &amp;amp;&amp;amp; is used to compare the truthiness of the operands.&lt;/p&gt;

&lt;p&gt;So 123 &amp;amp; false === 0 (because the false becomes a 0) &lt;/p&gt;

&lt;p&gt;but 123 &amp;amp;&amp;amp; false === false 9 &amp;amp; 5 === 1 but 9 &amp;amp;&amp;amp; 5 === 5.&lt;/p&gt;

&lt;p&gt;But why does 9 &amp;amp;&amp;amp; 5 === 5 and not equal true?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#can-you-tell-me-why-try-yourself"&gt;
  &lt;/a&gt;
  Can you tell me why? Try yourself...
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#%E2%96%AB-misunderstand-the-difference-between-let-const-and-var"&gt;
  &lt;/a&gt;
  ‚ñ´ Misunderstand the difference between ‚Äúlet‚Äù, ‚Äúconst‚Äù  and ‚Äúvar‚Äù
&lt;/h2&gt;

&lt;p&gt;Let‚Äôs first look at the code below:&lt;/p&gt;

&lt;p&gt;The code is logical as the output, no questions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xMlrf6GV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622619993901/Sgd6X-IzU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMlrf6GV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622619993901/Sgd6X-IzU.png" alt="carbon(62).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Another example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The reason is that var is function scoped and let is block scoped. &lt;/p&gt;

&lt;p&gt;When you declare a variable with a let keyword, they are moved to the beginning of the block. &lt;/p&gt;

&lt;p&gt;This may lead to a reference error when you try to access the variable before the initialization.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zMitjspt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622620052552/o-zaR3zN3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zMitjspt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622620052552/o-zaR3zN3.png" alt="carbon(63).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-incorrect-use-of-function-definitions-inside-for-loops"&gt;
  &lt;/a&gt;
  - Incorrect use of function definitions inside for loops
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#-fail-to-notice-that-this-is-not-always-this"&gt;
  &lt;/a&gt;
  - Fail to notice that 'this' is not always 'this'
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#-incorrect-references-to-instance-methods"&gt;
  &lt;/a&gt;
  - Incorrect references to instance methods
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#-thinking-that-variables-can-be-scoped-to-their-blocks"&gt;
  &lt;/a&gt;
  - Thinking that variables can be scoped to their blocks
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#%E2%96%AB-fail-to-use-strict-mode"&gt;
  &lt;/a&gt;
  ‚ñ´ Fail to use ‚Äústrict mode
&lt;/h2&gt;

&lt;p&gt;‚Äústrict mode‚Äù (i.e., including 'use strict'; at the beginning of your JavaScript source files) is a way to voluntarily enforce stricter parsing and error handling on your JavaScript code at runtime, as well as making it more secure.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#some-key-benefits-of-strict-mode"&gt;
  &lt;/a&gt;
  Some key benefits of strict mode:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Makes debugging easier.&lt;/li&gt;
&lt;li&gt;Prevents accidental globals.&lt;/li&gt;
&lt;li&gt;Eliminates this coercion.&lt;/li&gt;
&lt;li&gt;Makes eval() safer. &lt;/li&gt;
&lt;li&gt;Throws error on invalid usage of delete.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the end, &lt;/p&gt;

&lt;p&gt;I would say the better you understand why and how JavaScript works and doesn‚Äôt work.&lt;/p&gt;

&lt;p&gt;The more solid your code will be...&lt;br&gt;
The more you‚Äôll be able to effectively harness the true power of the language...&lt;/p&gt;

&lt;p&gt;Happy coding...&lt;/p&gt;

&lt;p&gt;If you‚Äôre a beginner at JavaScript and want to learn JavaScript e2e concepts, here‚Äôs a great course by WellPaidGeek who is coding for 20+ years?&lt;/p&gt;

&lt;p&gt;I highly recommend buying this course.&lt;/p&gt;

&lt;p&gt;link if someone is interested.  &lt;a href="https://wellpaidgeek.teachable.com/p/beginners-javascript/?affcode=391490_mb0iiogk"&gt;JavaScript&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Use  coupon_code=70KSPECIAL&lt;/p&gt;

&lt;p&gt;Thanks for reading. If you like this might be you are interested in my eBook as well.&lt;/p&gt;

&lt;p&gt;I have recently written a book for developer growth &amp;amp; shared my 11+ years of experience.&lt;/p&gt;

&lt;p&gt;Grab the book now at a discounted price... &lt;a href="https://gumroad.com/l/nextgendev/grow"&gt;ThePrimeGuide&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;I'm writing threads to help you to become a better software engineer (developer)...&lt;/p&gt;

&lt;p&gt;"Don't miss out" Follow your mentor  on Twitter üëâ &lt;a href="https://twitter.com/TheAnkurTyagi"&gt;TheAnkurTyagi&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;For more on my latest blogs: &lt;br&gt;
Checkout --&amp;gt;  &lt;a href="https://theankurtyagi.com/"&gt;THEANKURTYAGI.COM&lt;/a&gt; &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>career</category>
    </item>
    <item>
      <title>A Simple CSS Trick to Instantly Make a Site Responsive Without Having a Ton of Code in Your Media Queries</title>
      <author>Josh Lee</author>
      <pubDate>Wed, 02 Jun 2021 07:47:33 +0000</pubDate>
      <link>https://dev.to/jleewebdev/a-simple-css-trick-to-instantly-make-a-site-responsive-without-having-a-ton-of-code-in-your-media-queries-1dj0</link>
      <guid>https://dev.to/jleewebdev/a-simple-css-trick-to-instantly-make-a-site-responsive-without-having-a-ton-of-code-in-your-media-queries-1dj0</guid>
      <description>&lt;p&gt;Hey, Josh here again. Lately, I‚Äôve been showing you how to build projects with Ruby on Rails and React.js. Today, I‚Äôm going to show you something a little bit different ‚Äì how to easily make your website responsive.&lt;/p&gt;

&lt;p&gt;If you‚Äôve written any CSS for responsive websites, then you know how much of a pain it can be to write media queries. This responsive technique involves only changing your font-size for each media query.&lt;/p&gt;

&lt;p&gt;It‚Äôs all about using the ‚Äòrem‚Äô unit instead of using pixels. You might be used to writing something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.my-class&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead of using the ‚Äòpx‚Äô unit, you should be using the ‚Äòrem‚Äô unit. But how does the ‚Äòrem‚Äô unit work?&lt;/p&gt;

&lt;p&gt;‚ÄòRem‚Äô stands for root em and it‚Äôs a dynamic value based on the root font-size. The browser default font-size is 16px. That means 1 rem == 16px. In our above example, we can use the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.my-class&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But that doesn‚Äôt really change anything right now. We have the same margin at the top of our class. So why did we do this?&lt;/p&gt;

&lt;p&gt;Easy, now, in your media queries, you can change your font-size and this will change everything that uses the ‚Äòrem‚Äô unit.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;only&lt;/span&gt; &lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;html&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This makes your font 80% of the root em, currently at 16px. That means on this media query, your font-size becomes 12.8px. And all of the other CSS you‚Äôve written will now be based on this 12.8px value.&lt;/p&gt;

&lt;p&gt;By making this one change ‚Äì the font-size of the HTML file ‚Äì you change everything else that uses the rem units.&lt;/p&gt;

&lt;p&gt;You should immediately see how powerful this is. Instead of writing a ton of CSS in your media queries, all you have to do is adjust your font-size. Sure, you might have to add some more CSS, but this does most of the heavy lifting.&lt;/p&gt;

&lt;p&gt;I should also note, instead of basing everything off the 16px value (the browser's default), you can just set your font-size in your html element without the media queries.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;html&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;62.5%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>css</category>
    </item>
    <item>
      <title>Instagram Login page UI clone. Can you tell which one is original?</title>
      <author>Swastik Yadav</author>
      <pubDate>Wed, 02 Jun 2021 07:46:10 +0000</pubDate>
      <link>https://dev.to/swastikyadav/instagram-login-page-ui-clone-2io8</link>
      <guid>https://dev.to/swastikyadav/instagram-login-page-ui-clone-2io8</guid>
      <description>&lt;p&gt;Hey Everyone, üëã&lt;/p&gt;

&lt;p&gt;The best way to learn to design webpages with CSS is to clone existing websites UI.&lt;/p&gt;

&lt;p&gt;I have tried to clone the UI of the instagram login page.&lt;/p&gt;

&lt;p&gt;Can you tell which one is original?&lt;/p&gt;

&lt;p&gt;Image 1&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oZFdz0At--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dyy5jofc5c37eussw417.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oZFdz0At--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dyy5jofc5c37eussw417.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Image 2&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--91kQCFrw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ch1b1a5zztq6q8by4tcx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--91kQCFrw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ch1b1a5zztq6q8by4tcx.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I really enjoyed cloning the Instagram login page and learned a lot.&lt;/p&gt;

&lt;p&gt;SO, tell me which one is the original image. And if you would like to see the codebase of my clone, let me know in the comments.&lt;/p&gt;




&lt;p&gt;Thank You!&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>ux</category>
      <category>frontend</category>
    </item>
    <item>
      <title>10 Platforms to Help Level Up Your Frontend Development Skills</title>
      <author>Goodness Chris-Ugari</author>
      <pubDate>Wed, 02 Jun 2021 07:34:27 +0000</pubDate>
      <link>https://dev.to/goodiec/10-platforms-to-help-level-up-your-frontend-development-skills-455p</link>
      <guid>https://dev.to/goodiec/10-platforms-to-help-level-up-your-frontend-development-skills-455p</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;You will agree with me that getting out of tutorial hell can be difficult especially when you are learning on your own. Trying to apply the knowledge gained will increase the rate at which you learn and retain the knowledge. In this article, I will talk about a few resources or platforms that can help you start practicing and improving your frontend skills by working on projects. These resources will help reinforce what you've been learning from tutorials and help you level up as a frontend developer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-frontend-mentor"&gt;
  &lt;/a&gt;
  1.  &lt;a href="https://www.frontendmentor.io"&gt;Frontend mentor&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;One great thing about this platform is that it provides you with the design and resources you need to build out a project saving you the stress of having to come up with designs and resources on your own so you can just focus on just implementing the design. Another great thing about this platform is that the challenges are organized or grouped by difficulty level so you can start from the &lt;strong&gt;newbie&lt;/strong&gt; challenges and go up to the &lt;strong&gt;guru&lt;/strong&gt; challenges. So this platform is not just for beginners as you can keep coming back here to practice and reinforce your learning as you learn new things. You get to use HTML, CSS, JavaScript, frameworks(such as React, Vue, etc), interact with APIs, and much more. New challenges get added frequently so you can also find something to work on this platform, share your solution and get feedback from others. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; - There are premium and free challenges but the free challenges are still really good so you don't have to purchase the premium service to get the most of this platform.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yLcdDSnH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bxl4rod6u49u0ajvtaqz.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yLcdDSnH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bxl4rod6u49u0ajvtaqz.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-frontend-practice"&gt;
  &lt;/a&gt;
  2.  &lt;a href="https://www.frontendpractice.com"&gt;Frontend Practice&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is a really good platform where instead of taking up these fictional projects and try to build them up like frontend mentors where you are building projects from scratch. With this, you get a list of websites that look really nice and you are encouraged to clone them. The focus is not on the entire project but some of the pages of the sites are focused on and the features on these pages are also highlighted and you are also encouraged to work on these to improve your skills. Cloning sites is a great way to learn because you learn a lot by trying to do something that someone else has already done. Another advantage of working with an actual site is that you can experience all the little interactions and there's no guessing and you try to make sure that your implementation matches it as much as possible. You can take all the skills you have been acquiring over time and put them to use and this way you will learn a lot and reinforce these skills.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tBVDustq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/icr9grpf7ynpwfa4z25f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tBVDustq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/icr9grpf7ynpwfa4z25f.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-css-battle"&gt;
  &lt;/a&gt;
  3.  &lt;a href="https://cssbattle.dev"&gt;CSS Battle&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This doesn't involve building actual projects but is mainly focused on helping you improve your CSS skills by working on challenges. You will be building unrealistic things or doing things that are out of the ordinary. You would be surprised how doing these things could help you fix or do something in a real-world situation. On this platform, you will have to replicate a given target in the least code possible. The lesser the amount of code used the higher your score. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xTyv3_yE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9yp8mvcs59n6su4sw5v9.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xTyv3_yE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9yp8mvcs59n6su4sw5v9.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-style-stage"&gt;
  &lt;/a&gt;
  4.  &lt;a href="https://stylestage.dev"&gt;Style Stage&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;On this platform, a base HTML file is provided for you to restyle and submit a different stylesheet for it. &lt;br&gt;
With the guidelines requiring you to follow accessibility rules, you will not just be creating a project that looks good but one that is accessible also. You submit this via a pull request and you will be told if changes need to be made to your submission and you keep doing this until your submission passes the requirements and then your project can go live. This platform is mainly for developing your CSS skill as you would just be working on the CSS files.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2PKePp84--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4sfjpja36dfjb15a9ye.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2PKePp84--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4sfjpja36dfjb15a9ye.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-codewars"&gt;
  &lt;/a&gt;
  5.  &lt;a href="https://www.codewars.com"&gt;Codewars&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Unlike CSS battles, this platform provides challenges in a variety of languages. This platform is not mainly focused on visual challenges but coding challenges. You can take advantage of this platform to build up and sharpen your skills to actually building a project. A good platform that can help you to practice your problem-solving skills. CodeWars is a good platform to practice your JavaScript skills as a front-end developer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3cU2F08v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r5svumr5yqhxahis8vfc.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3cU2F08v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r5svumr5yqhxahis8vfc.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-dev-challenges"&gt;
  &lt;/a&gt;
  6.  &lt;a href="https://devchallenges.io"&gt;Dev challenges&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This platform is similar to frontend mentors as you get different challenges grouped by their level of difficulty and the challenges are further grouped into three paths, Responsive web developer, front-end developer, and full-stack developer paths. So as a frontend developer, you can focus on the first two paths and build out the projects in those categories. They have eight(8) projects in each category. You get to use Github for the submission and you can give feedback on other people's submissions also. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lRCJGFoQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/arko59u6zpfwfs16jogo.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lRCJGFoQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/arko59u6zpfwfs16jogo.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-codewell"&gt;
  &lt;/a&gt;
  7.  &lt;a href="https://www.codewell.cc"&gt;Codewell&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Improve your HTML and CSS skills by implementing real design templates on this platform. On this platform, you don't get access to the Figma file with a free account but you get access to the project assets so you can still take advantage of this platform with a free account. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yuP57QAC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ujnuqn4gdwp813blcbp.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yuP57QAC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ujnuqn4gdwp813blcbp.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-frontloops"&gt;
  &lt;/a&gt;
  8.  &lt;a href="https://frontloops.io"&gt;Frontloops&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This is a paid platform, so to get access to the challenges. The challenges on this platform are categorized into two, Markup which is to improve your HTML and CSS skills, and Elements which is to improve your JavaScript skill. With this platform, you get 30 challenges with their assets for practicing, 30 code solutions(1st solution free), technical hints, and advice. You have to pay a one-time fee of about $19 to get lifetime access to the challenges and their resources for any of the categories you want.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KLEvpdUc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uqaj9kz0xlewzcfpamkl.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KLEvpdUc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uqaj9kz0xlewzcfpamkl.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-daily-ui"&gt;
  &lt;/a&gt;
  9.  &lt;a href="https://www.dailyui.co"&gt;Daily UI&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This platform is mainly for UI(User Interface) and UX(User Experience) designers but frontend developers can take advantage of this resource by signing up to receive daily emails of different designs for 100 days but instead of creating the design using a design tool like a designer would, a frontend developer can implement the design using code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ilwk8RCn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ln7x5z98m4um1chmr5qp.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ilwk8RCn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ln7x5z98m4um1chmr5qp.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-ace-front-end"&gt;
  &lt;/a&gt;
  10.  &lt;a href="https://www.acefrontend.com"&gt;Ace Front End&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This platform offers you access to a few practical coding challenges. It is a great platform for preparing for frontend interviews as it contains a detailed walk-through of an interview solution. You can still use this platform even though you are not preparing for an interview.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zWS5mchC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1nmfo2c7myl9a7npxs6u.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zWS5mchC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1nmfo2c7myl9a7npxs6u.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;A proven way to get better at coding is by doing and these resources can help you do just that. Do not try to use them all at the same time, you can just start with one or two that best suit you, the level you are in your coding journey, and what you are trying to accomplish and try to be consistent at it by sharing your work or learning in public.&lt;/p&gt;

</description>
      <category>frontend</category>
      <category>css</category>
      <category>resources</category>
      <category>beginnner</category>
    </item>
    <item>
      <title>[Step By Step Guide] How to set up visual studio code for C and C++ programming 2021.  </title>
      <author>Narottam04</author>
      <pubDate>Wed, 02 Jun 2021 07:13:16 +0000</pubDate>
      <link>https://dev.to/narottam04/step-by-step-guide-how-to-set-up-visual-studio-code-for-c-and-c-programming-2021-1f0i</link>
      <guid>https://dev.to/narottam04/step-by-step-guide-how-to-set-up-visual-studio-code-for-c-and-c-programming-2021-1f0i</guid>
      <description>&lt;h2&gt;
  &lt;a href="#why-should-you-use-visual-studio-code-"&gt;
  &lt;/a&gt;
  Why should you use visual studio code ?
&lt;/h2&gt;



&lt;p&gt;Visual Studio Code is a free source-code editor made by Microsoft for Windows, Linux and macOS. Features include support for debugging, syntax highlighting, intelligent code completion, snippets, code refactoring, and embedded Git.&lt;/p&gt;

&lt;p&gt;It currently supports hundreds of programming languages and file formats. Several common languages come supported by default (JavaScript, HTML, CSS, etc), and others gain support by adding integrated extensions. If you find a language that isn't supported by an existing extension, the open nature of the extensions system means you can build one.&lt;/p&gt;



&lt;p&gt;In this blog post you will learn how to set up visual studio code on your local environment for C and C++, this can get tricky but if you follow step by step you can set it up easily.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#step-1-download-visual-studio-code"&gt;
  &lt;/a&gt;
  Step 1: Download Visual studio code.
&lt;/h2&gt;



&lt;p&gt;Type vscode on your browser and click on the first link of the page, or just &lt;a href="https://code.visualstudio.com/download"&gt;click here&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7ZZveFV1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1L-f2VD45-Av5UW3162EesA2sALbxDZl8" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7ZZveFV1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1L-f2VD45-Av5UW3162EesA2sALbxDZl8" alt="install vscode" title="install vscode"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YWWav1xk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1kFW7HBLYKxLfIK52G153YK8-wHu77z0F" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YWWav1xk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1kFW7HBLYKxLfIK52G153YK8-wHu77z0F" alt="vscode" title="vscode"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Now download the installer according to your operating system.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#step-2-install-vscode"&gt;
  &lt;/a&gt;
  Step 2: Install vscode
&lt;/h2&gt;



&lt;p&gt;This step is easy, accept the agreement and click next.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5vcE_F5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1HDjUBHvpFeHs7C-xmhigulJXRq3Fvwtt" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5vcE_F5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1HDjUBHvpFeHs7C-xmhigulJXRq3Fvwtt" alt="install " title="install"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Check the following options as shown in above image and click next and install.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#step-3-download-extensions-for-visual-studio-code"&gt;
  &lt;/a&gt;
  Step 3: Download extensions for visual studio code.
&lt;/h2&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PtIuR5c4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1QNyzG3PTtSlp8pkLzSvWk6xknje2IvtA" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PtIuR5c4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1QNyzG3PTtSlp8pkLzSvWk6xknje2IvtA" alt="vscode editor" title="vscode editor"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Once you have installed visual studio code, now its time to install some extensions. Click on the button where red arrow is pointing in above image.&lt;/p&gt;



&lt;p&gt;Now click on C/C++ extension from Microsoft as shown in the below image. If you don't see the extension search C/C++ and you will find it.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gTiylGnm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1H71XGWoFeIDHARkEkTivxlyrctP6rs-l" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gTiylGnm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1H71XGWoFeIDHARkEkTivxlyrctP6rs-l" alt="extension" title="extension"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Install the extension.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wEV9PzI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1K1-8cm3bWnlf08sDt_B6hvLdnrqJ_yv9" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wEV9PzI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1K1-8cm3bWnlf08sDt_B6hvLdnrqJ_yv9" alt="c" title="c"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Now we have to install another extension called Code Runner.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uMINTv5v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1qrf82WbMV2_fw36kBtVKLsljmLbz51k_" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uMINTv5v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1qrf82WbMV2_fw36kBtVKLsljmLbz51k_" alt="code runner" title="code runner"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Now we have successfully installed code editor but we need a compiler to compile and output our code, for that we will be installing MinGW.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#step-4-download-mingw"&gt;
  &lt;/a&gt;
  Step 4: Download MinGW
&lt;/h2&gt;



&lt;p&gt;Type mingw  on google and choose following first link as shown in the image below or &lt;a href="https://sourceforge.net/projects/mingw/"&gt;Click Here&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LAeP1oRk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1zZl3khQIfqj5bYIBtS1U1zzz4vBJfuNi" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LAeP1oRk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1zZl3khQIfqj5bYIBtS1U1zzz4vBJfuNi" alt="mingw" title="mingw"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Now click download.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HS849_WD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1lZvHP2iKch1pIDzAnPrMzFCfKcpx5EAA" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HS849_WD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1lZvHP2iKch1pIDzAnPrMzFCfKcpx5EAA" alt="download" title="download"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#step-5-install-mingw"&gt;
  &lt;/a&gt;
  Step 5: Install MinGW
&lt;/h2&gt;



&lt;p&gt;Open the installer, you should see something like the below image. Click on install and choose your directory where the software should be installed and click continue.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S4TNqx0a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1_8waY_FBb0gmJyetYsHjjdoy16IWIezL" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S4TNqx0a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1_8waY_FBb0gmJyetYsHjjdoy16IWIezL" alt="mingw" title="mingw "&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zn8p9anj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1OnRnb_MI9DKKFhiiw09sRhTBb9U1t0vg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zn8p9anj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1OnRnb_MI9DKKFhiiw09sRhTBb9U1t0vg" alt="mingw install" title="mingw"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;After installing, click on continue and right click on every checkbox and choose mark for installation.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VCU_bfn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1yW512J92eHkBNFg59yAJ63V0wfaOXIbu" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VCU_bfn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1yW512J92eHkBNFg59yAJ63V0wfaOXIbu" alt="install" title="install"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;After checking all checkboxes you should see something like image below.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--04cXthd1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1Hkop1Av7Iv1RwzUc54A11Dh3LboxPihj" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--04cXthd1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1Hkop1Av7Iv1RwzUc54A11Dh3LboxPihj" alt="install" title="install"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Now click Installation on top left corner and then choose Apply Changes. You should see something like shown in the image below.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wOfHarrg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1fsfS6zP8wRTcForq88q6FkRgeK_6fTfJ" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wOfHarrg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1fsfS6zP8wRTcForq88q6FkRgeK_6fTfJ" alt="install" title="install"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;And then click on Apply.&lt;/p&gt;



&lt;p&gt;Once you complete the installation, you should see something like the image below.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--09tatEby--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1r43biwjVFQ3PTt8kR6shbzFnMhukFtzx" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--09tatEby--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1r43biwjVFQ3PTt8kR6shbzFnMhukFtzx" alt="install" title="install"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Click close and close the installer.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#step-6-copy-bin-path"&gt;
  &lt;/a&gt;
  Step 6: Copy Bin Path
&lt;/h2&gt;



&lt;p&gt;Now open 'This PC' and open 'local Disk C' you should see mingw file and click on bin folder.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xOMy8T5t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1ybUfwYJGiubNQK1w50j20EnuajsTkJ8j" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xOMy8T5t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1ybUfwYJGiubNQK1w50j20EnuajsTkJ8j" alt="bin path" title="bin path"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Now you have to copy the folder destination which is above the page as shown below.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3xEsh_dB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1OrjYYBKrm-lkdHNx_vAKwulX3jsJnKEu" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3xEsh_dB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1OrjYYBKrm-lkdHNx_vAKwulX3jsJnKEu" alt="bin path " title="bin path"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Now right click and copy or just press 'Ctrl + C' on your keyboard.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#step-7-environment-variables"&gt;
  &lt;/a&gt;
  Step 7: Environment Variables
&lt;/h2&gt;



&lt;p&gt;Open 'Control Panel' from your start menu and click on System. If you don't find system on your control panel just type 'system' on the search bar which you can find in top right corner of the control panel.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8IX9w-lt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D19x2SwymD48LEWppY__uDNOiTFdohK50D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8IX9w-lt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D19x2SwymD48LEWppY__uDNOiTFdohK50D" alt="variable" title="variable"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Click on Advanced system setting on right side you should see system properties as shown in the image below.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PE_5kssz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1bTzccMlsLHb6XrIhxm360eHgbAS3FQmx" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PE_5kssz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1bTzccMlsLHb6XrIhxm360eHgbAS3FQmx" alt="variable" title="variable"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Now click on Environment Variables you should see something as shown in the image below.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PIVCQ4C0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1EphBQN4c_t-Gv-8hZm_No68XRHwCHLg6" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PIVCQ4C0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1EphBQN4c_t-Gv-8hZm_No68XRHwCHLg6" alt="variable " title="variable"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Now click on the path in system variable and click on edit as shown in the image below.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UDO_ezMP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1qNo7ATQUmz09HKPlUhYlYODM0BmRyH5z" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UDO_ezMP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1qNo7ATQUmz09HKPlUhYlYODM0BmRyH5z" alt="variable " title="variable"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Now click on new and paste the bin path that we have copied in the previous step and then click Ok.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Iyi2O_eU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1mTcrQyWxSCp7edJxH9t6hpgoH36mZiiG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Iyi2O_eU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1mTcrQyWxSCp7edJxH9t6hpgoH36mZiiG" alt="variable " title="variable"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Now click ok till there are no pop ups left.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#step-8-lets-check-if-mingw-has-been-successfully-installed-or-not"&gt;
  &lt;/a&gt;
  Step 8: Let's check if MinGW has been successfully installed or not.
&lt;/h2&gt;



&lt;p&gt;Click on search button near the bottom left of windows and search for command prompt.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--deyCLIN9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D13JdX4V36SzyIm29vlnt7XZcGqiayxJXA" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--deyCLIN9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D13JdX4V36SzyIm29vlnt7XZcGqiayxJXA" alt="cmd" title="cmd"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--version&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ibvHwx10--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1wUGldkS198DIDdcIMx1rX0qTg8oaz-q5" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ibvHwx10--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1wUGldkS198DIDdcIMx1rX0qTg8oaz-q5" alt="cmd" title="cmd"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;And if you see something like the image above, voila! we did it.&lt;/p&gt;



&lt;p&gt;üõë üõë If you get some error don't worry just reinstall mingw as shown in the step 4 and step 5 and it should solve the problem.üõëüõë&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#step-8-lets-write-our-first-program-in-c"&gt;
  &lt;/a&gt;
  Step 8: Let's write our first program in C++
&lt;/h2&gt;



&lt;p&gt;Hurray! we have successfully set up vscode for C and C++ now lets test it by writing our first program in vscode.&lt;/p&gt;



&lt;p&gt;Open vscode.&lt;/p&gt;



&lt;p&gt;Click on 'File' in upper left section and choose 'Open Folder'.&lt;/p&gt;



&lt;p&gt;Lets make a new folder in dekstop and select the folder.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oyFIAbvs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1-poPFVl2ME8rAhE2V-1H9ADMaKBy9fCI" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oyFIAbvs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1-poPFVl2ME8rAhE2V-1H9ADMaKBy9fCI" alt="vscode" title="vscode"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Now click on the document symbol in the side bar. If you dont see a sidebar just press Ctrl + B on keyboard.&lt;/p&gt;



&lt;p&gt;Now make a file with a extension of .cpp as shown in the image below&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qgUDML4x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1V6n9hOea8PG2XbT0KYRYLPplYSf5czh7" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qgUDML4x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1V6n9hOea8PG2XbT0KYRYLPplYSf5czh7" alt="vscode" title="vscode"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Now lets type our first code. You can copy and paste the code that I have provided below.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0SL4Tn10--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1A_AoHzypt3SJyqbwpCPVU0VUvPH4oFfV" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0SL4Tn10--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1A_AoHzypt3SJyqbwpCPVU0VUvPH4oFfV" alt="hello world" title="hello world"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&amp;lt;iostream&amp;gt;
&lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s"&gt;"hello world"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#step-9-run-the-code"&gt;
  &lt;/a&gt;
  Step 9: Run the code.
&lt;/h2&gt;



&lt;p&gt;Right click and click on run or press keyboard shortcut 'Ctrl+Alt+N'.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jde2U_RH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1YwHoSHS9DYWlbLbXsKSDeF4P5WXcMkZQ" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jde2U_RH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1YwHoSHS9DYWlbLbXsKSDeF4P5WXcMkZQ" alt="terminal" title="terminal"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;And there you go you have written your first program in C++, I hope this tutorial was helpful if you are facing any problem while installing let me know in the comment section or email me at blog.webdrip.in.&lt;/p&gt;



&lt;p&gt;Get more insights like this on my blog, &lt;a href="https://blog.webdrip.in"&gt;https://blog.webdrip.in&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>cpp</category>
      <category>programming</category>
      <category>vscode</category>
      <category>cprogramming</category>
    </item>
    <item>
      <title>Summary of Dart &amp; Flutter</title>
      <author>Abdi Adan</author>
      <pubDate>Wed, 02 Jun 2021 07:12:49 +0000</pubDate>
      <link>https://dev.to/abdiadan/summary-of-dart-flutter-4e9k</link>
      <guid>https://dev.to/abdiadan/summary-of-dart-flutter-4e9k</guid>
      <description>&lt;h1&gt;
  &lt;a href="#dart"&gt;
  &lt;/a&gt;
  Dart
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#what-is-dart"&gt;
  &lt;/a&gt;
  What is Dart?
&lt;/h2&gt;

&lt;p&gt;Dart is a&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Client-optimized&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It is optimized for use in applications that are client-oriented&lt;/li&gt;
&lt;li&gt;Use of Dart Virtual machine that helps to optimize the code and compile Just In Time (super fast development) and render or re-render UI very easily&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Garbage-collected &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A form of automatic memory management&lt;/li&gt;
&lt;li&gt;This relieves the engineer from performing manual memory management where the programmer specifies what objects to deallocate and return to the memory system and when to do so&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;OOP language for creating fast apps&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;that can run multiple platforms &amp;amp; form factors.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-can-you-do-with-dart"&gt;
  &lt;/a&gt;
  What can you do with Dart?
&lt;/h2&gt;

&lt;p&gt;Dart is a very flexible language thanks to the environment in which it lives. Once the source code has been written (and tested) it can be deployed in many different ways:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#in-deployment-and-production-ready-software"&gt;
  &lt;/a&gt;
  In Deployment and production ready software:
&lt;/h3&gt;

&lt;p&gt;(AOT + Runtime on Desktop &amp;amp; Mobile, dart2js on Web)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Stand-alone &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In the same way as a Java program can‚Äôt be run without the Java Virtual Machine (JVM), a stand-alone Dart program can‚Äôt be executed without the Dart Virtual Machine (DVM). &lt;/li&gt;
&lt;li&gt;There‚Äôs the need to download and install the DVM which executes Dart in a command-line environment. &lt;/li&gt;
&lt;li&gt;The SDK, other than the compiler and the libraries, also offers a series of other tools:
    - The pub package manager (more on pub.dev)
    - Dart2js, which compiles Dart code to deployable JavaScript;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;AOT compiled &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Ahead Of Time compilation is the act of translating a high-level programming language, like Dart, into native machine code. &lt;/li&gt;
&lt;li&gt;Basically, starting from the Dart source code you can obtain a single binary file that can execute natively on a certain operating system. AOT is really what makes Flutter fast and portable.&lt;/li&gt;
&lt;li&gt;With AOT there is NO need to have the DVM installed because at the end you get a single binary file (an .apk or .aab for Android, an .ipa for iOS, an .exe for Windows...) that can be executed on mobile, web &amp;amp; desktop&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Web. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Thanks to the dart2js tool, your Dart project can be "transpiled" into fast and compact JavaScript code. By consequence Flutter can be run, for example, on Firefox or Chrome and the UI will be identical to the other platforms.&lt;/li&gt;
&lt;li&gt;AngularDart is a performant web app framework used by Google to build some famous websites, such as "AdSense" and "AdWords". Of course it‚Äôs powered by Dart!&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#in-debugging-and-developing"&gt;
  &lt;/a&gt;
  In debugging and developing:
&lt;/h3&gt;

&lt;p&gt;(JIT + DVM in Mobile &amp;amp; desktop, dartdevc in web)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Desktop/mobile. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Just In Time (JIT) technique can be seen as a "real time translation" because the compilation happens while the program is executing. It‚Äôs a sort of "dynamic compilation" which happens while the program is being used.&lt;/li&gt;
&lt;li&gt;JIT compilation, combined with the DVM (JIT + VM in the picture), allows the dispatch of the code dynamically without considering the user‚Äôs machine architecture. &lt;/li&gt;
&lt;li&gt;In this way it‚Äôs possible to smoothly run and debug the code everywhere without having to mess up with the underlying architecture&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Web&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Dart development compiler, abbreviated with dartdevc, allows you to run and debug Dart web apps on Google Chrome. ( Note that dartdevc is for development only: for deployment, you should use dart2js. )&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#here-are-a-few-key-points-to-note-when-working-with-dart"&gt;
  &lt;/a&gt;
  Here are a few Key Points to note when working with Dart:
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#the-dart-type-system"&gt;
  &lt;/a&gt;
  The Dart type system
&lt;/h4&gt;

&lt;p&gt;~ "The Dart language is type safe"&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It uses a combination of static type checking and runtime checks to ensure that a variable‚Äôs value always matches the variable‚Äôs static type, sometimes referred to as sound typing. &lt;/li&gt;
&lt;li&gt;Although types are mandatory, type annotations are optional because of type inference.&lt;/li&gt;
&lt;li&gt;There are a myriad of benefits provided by the dart type system including the ability to find bugs at compile time using Dart‚Äôs static analyzer ( Static analysis allows you to find problems before executing a single line of code. It‚Äôs a powerful tool used to prevent bugs and ensure that code conforms to style guidelines.) &lt;/li&gt;
&lt;li&gt;&lt;p&gt;The analyzer can be extended and customized to fit a project‚Äôs unique code guidelines. You can also configure the linter, one of the analyzer‚Äôs plugins, to ensure that your code complies with the Dart Style Guide and other suggested guidelines in Effective Dart.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For more info on The dart type system check out &lt;a href="https://dart.dev/guides/language/type-system"&gt;https://dart.dev/guides/language/type-system&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#soundnull-safety"&gt;
  &lt;/a&gt;
  Sound-Null Safety
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Types in your code are non-nullable by default, meaning that variables can‚Äôt contain null unless you say they can.&lt;/li&gt;
&lt;li&gt;Dart null safety support is based on the following three core design principles:

&lt;ul&gt;
&lt;li&gt;Non-nullable by default (nnbd):

&lt;ul&gt;
&lt;li&gt;Unless you explicitly tell Dart that a variable can be null, it‚Äôs considered non-nullable. &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Incrementally adoptable

&lt;ul&gt;
&lt;li&gt;You choose what to migrate to null safety, and when. You can migrate incrementally, mixing null-safe and non-null-safe code in the same project.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Fully sound

&lt;ul&gt;
&lt;li&gt;Dart‚Äôs null safety is sound, which enables compiler optimizations. If the type system determines that something isn‚Äôt null, then that thing can never be null. Once you migrate your whole project and its dependencies to null safety, you reap the full benefits of soundness ‚Äî not only fewer bugs, but smaller binaries and faster execution&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For more details on Null Safety check out: &lt;a href="https://dart.dev/null-safety"&gt;&lt;/a&gt;&lt;a href="https://dart.dev/null-safety"&gt;https://dart.dev/null-safety&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;N/B: Soundness means that you can trust the type system when it determines that something isn‚Äôt null because it can never make a mistake. You can achieve soundness only if all libraries you use in the project have null-safe code.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#effective-dart"&gt;
  &lt;/a&gt;
  Effective Dart
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;A surprisingly important part of good code is good style. Consistent naming, ordering, and formatting helps code that is the same look the same.&lt;/li&gt;
&lt;li&gt;If we use a consistent style across the entire Dart ecosystem, it makes it easier for all of us to learn from and contribute to each others‚Äô code.&lt;/li&gt;
&lt;li&gt;An Example of these rules and guidelines is; &lt;code&gt;DO name types using UpperCamelCase&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Having said that, it is vital to acquaint yourself with the rules and guidelines that are proposed in the Effective dart guide. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For more details check out &lt;a href="https://dart.dev/guides/language/effective-dart"&gt;https://dart.dev/guides/language/effective-dart&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more info on dart head on over to &lt;a href="https://dart.dev/"&gt;https://dart.dev/&lt;/a&gt; &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#flutter"&gt;
  &lt;/a&gt;
  Flutter
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#what-is-flutter"&gt;
  &lt;/a&gt;
  What is Flutter?
&lt;/h2&gt;

&lt;p&gt;Flutter is Google's UI toolkit for building beautiful, natively compiled applications for mobile, web, desktop, and embedded devices from a single codebase.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-flutter"&gt;
  &lt;/a&gt;
  Why Flutter?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#fast-development"&gt;
  &lt;/a&gt;
  Fast Development
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Cuts development time by a huge margin considering that you no longer need to write multiple codebases for different platforms &amp;amp; form factors&lt;/li&gt;
&lt;li&gt;Flutter allows you to Paint your app to life in milliseconds with Stateful Hot Reload. Use a rich set of fully-customizable widgets to build native interfaces in minutes.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#expressive-and-flexible-ui"&gt;
  &lt;/a&gt;
  Expressive and Flexible UI
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Quickly ship features with a focus on native end-user experiences. Layered architecture allows for full customization, which results in incredibly fast rendering and expressive and flexible designs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#native-performance"&gt;
  &lt;/a&gt;
  Native Performance
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Flutter‚Äôs widgets incorporate all critical platform differences such as scrolling, navigation, icons and fonts, and your Flutter code is compiled to native ARM machine code using Dart's native compilers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#why-does-flutter-use-dart-"&gt;
  &lt;/a&gt;
  Why Does Flutter Use Dart ?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;OOP Style&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dart is easy to learn as it adopts most of the common OOP patterns that developers are familiar with.
Performances&lt;/li&gt;
&lt;li&gt;In order to guarantee high performances and avoid frame dropping during the execution of the app, there‚Äôs the need for a high performance and predictable language. Dart can guarantee to be very efficient and it provides a powerful memory allocator that handles small, short-lived allocations. This is perfect for Flutter‚Äôs functional-style flow&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Productivity&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Flutter allows developers to write Android, iOS, web and desktop apps with a single codebase keeping the same performance, aspect and feeling in each platform. A highly productive language like Dart accelerates the coding process and makes the framework more attractive&lt;/li&gt;
&lt;li&gt;Both Flutter and Dart are developed by Google which can freely decide what to do with Them listening to the community as well. If Dart was developed by another company, Google probably wouldn‚Äôt have the same freedom of choice in implementing new features and and the language couldn‚Äôt evolve at the desired pace&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#here-are-a-few-key-points-to-note-when-working-with-flutter"&gt;
  &lt;/a&gt;
  Here are a few Key Points to note when working with Flutter:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Documentation&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Inclues an in-depth guide on dart classes and flutter implimentation details. Below are few examples to check out:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Stateful Widget

&lt;ul&gt;
&lt;li&gt;Everything on the UI in flutter is a widget.&lt;/li&gt;
&lt;li&gt;A stateful widget is a one that has a mutable state.&lt;/li&gt;
&lt;li&gt;State is information that can be read synchronously when the widget is built and might change during the lifetime of the widget. In simpler terms it basically is ‚Äúwhatever data you need in order to rebuild your UI at any moment in time‚Äù.&lt;/li&gt;
&lt;li&gt;It is the responsibility of the widget implementer to ensure that the State is promptly notified when such state changes, using State.setState.&lt;/li&gt;
&lt;li&gt;A stateful widget is a widget that describes part of the user interface by building a constellation of other widgets that describe the user interface more concretely.&lt;/li&gt;
&lt;li&gt;The building process continues recursively until the description of the user interface is fully concrete (e.g., consists entirely of concrete RenderObjects(An object in the render tree) ).&lt;/li&gt;
&lt;li&gt;For more on stateful widgets see &lt;a href="https://api.flutter.dev/flutter/widgets/StatefulWidget-class.html"&gt;https://api.flutter.dev/flutter/widgets/StatefulWidget-class.html&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;BuildContext&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A handle to the location of a widget in the widget tree&lt;/li&gt;
&lt;li&gt;It is used in Widget‚Äôs build method, Navigator, MediaQuery, and various builders to name a few.&lt;/li&gt;
&lt;li&gt;Since Widgets appear in a tree alongside other widgets on a user‚Äôs device screen, the BuildContext class keeps information about where a concrete instance of a widget is in the tree, and therefore what its size, parents &amp;amp; children are.&lt;/li&gt;
&lt;li&gt;It is basically a class that gives context(more info) to a widget, specifically regarding its location, size, parents &amp;amp; children.&lt;/li&gt;
&lt;li&gt;A good explanation video on what BuilContext is &lt;a href="https://www.youtube.com/watch?v=MFNe7hdOCVs"&gt;https://www.youtube.com/watch?v=MFNe7hdOCVs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#links-and-resources"&gt;
  &lt;/a&gt;
  Links And Resources
&lt;/h3&gt;

&lt;p&gt;For a more in depth dive on flutter and some of it inner workings go to: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://flutter.dev/docs"&gt;https://flutter.dev/docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://flutter.dev/docs/resources/architectural-overview"&gt;https://flutter.dev/docs/resources/architectural-overview&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more info on dart head on over to &lt;a href="https://dart.dev/"&gt;https://dart.dev/&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;For a guided walkthrough on Dart &amp;amp; Flutter ensure you read the book on; &lt;a href="https://fluttercompletereference.com/"&gt;https://fluttercompletereference.com/&lt;/a&gt;&lt;br&gt;
You can also ask for a softcopy version of the book from me.&lt;/p&gt;

&lt;p&gt;For more details &amp;amp; discussions on this and other related content, check out &lt;a href="https://github.com/Abdi-Adan/Notes"&gt;https://github.com/Abdi-Adan/Notes&lt;/a&gt; &lt;/p&gt;

</description>
      <category>flutter</category>
      <category>android</category>
      <category>dart</category>
      <category>programming</category>
    </item>
    <item>
      <title>Questions YOU can ask during interviews</title>
      <author>Jordi Enric</author>
      <pubDate>Wed, 02 Jun 2021 07:07:04 +0000</pubDate>
      <link>https://dev.to/jordienr/questions-you-can-ask-during-interviews-4kl9</link>
      <guid>https://dev.to/jordienr/questions-you-can-ask-during-interviews-4kl9</guid>
      <description>&lt;p&gt;Here are some of the questions I like to ask in interviews.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What stack would I be working on?&lt;/li&gt;
&lt;li&gt;What stack is the backend written on? (I'm front)&lt;/li&gt;
&lt;li&gt;How is the relationship with the backend teams or design teams?&lt;/li&gt;
&lt;li&gt;Would I be able to participate in design decisions?&lt;/li&gt;
&lt;li&gt;What is the design / frontend development process like?&lt;/li&gt;
&lt;li&gt;How do you measure developers performance?&lt;/li&gt;
&lt;li&gt;What is the best and worst part of working there?&lt;/li&gt;
&lt;li&gt;What are the biggest challenges in this project?&lt;/li&gt;
&lt;li&gt;What can you tell me about the project?&lt;/li&gt;
&lt;li&gt;What would you expect from me in X time?&lt;/li&gt;
&lt;li&gt;Do you give access to education tools / platforms (Egghead, - Pluralsight, Frontend Masters)?&lt;/li&gt;
&lt;li&gt;Why are you looking for more people, are you understaffed or want to start new projects?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you can come up with more, please share them in the comments!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#find-me-on-twitter"&gt;
  &lt;/a&gt;
  Find me on &lt;a href="https://twitter.com/jordienr"&gt;Twitter&lt;/a&gt;
&lt;/h3&gt;

</description>
      <category>career</category>
      <category>codenewbie</category>
      <category>javascript</category>
      <category>html</category>
    </item>
  </channel>
</rss>
