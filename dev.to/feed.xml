<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Bootstrap 5 Lightbox</title>
      <author>MD Bootstrap</author>
      <pubDate>Wed, 30 Jun 2021 13:21:08 +0000</pubDate>
      <link>https://dev.to/mdbootstrap/bootstrap-5-lightbox-3agb</link>
      <guid>https://dev.to/mdbootstrap/bootstrap-5-lightbox-3agb</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-bootstrap-lightbox"&gt;
  &lt;/a&gt;
  What is Bootstrap Lightbox?
&lt;/h2&gt;

&lt;p&gt;Lightbox is a responsive gallery with the option to enlarge selected photos.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#manual-installation-zip-package"&gt;
  &lt;/a&gt;
  Manual installation (zip package)
&lt;/h4&gt;

&lt;p&gt;To take advantage of  our Bootstrap images component and use them in your project, you first need to install the &lt;a href="https://mdbootstrap.com/docs/standard/getting-started/installation/#section-manual-installation"&gt;MDB 5 Free package&lt;/a&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#mdb-cli"&gt;
  &lt;/a&gt;
  MDB CLI
&lt;/h4&gt;

&lt;p&gt;Watch our &lt;a href="https://mdbootstrap.com/docs/standard/getting-started/quick-start/"&gt;&lt;strong&gt;Quick Start Tutorial&lt;/strong&gt;&lt;/a&gt; to discover and use the full potential of MDB 5 and MDB CLI&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#npm"&gt;
  &lt;/a&gt;
  NPM
&lt;/h4&gt;

&lt;h6&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h6&gt;

&lt;p&gt;Before starting the project make sure to install &lt;a href="https://nodejs.org/en/"&gt;Node LTS (12.x.x recommended)&lt;/a&gt;.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h6&gt;

&lt;p&gt;To install MDB UI KIT in your project easily type the following command in the terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;npm i mdb-ui-kit 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#importing-js-modules"&gt;
  &lt;/a&gt;
  Importing JS modules
&lt;/h6&gt;

&lt;p&gt;You can import the entire library or just individual modules:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="gp"&gt;import * as mdb from 'mdb-ui-kit';&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;// lib
&lt;span class="gp"&gt;import { Input } from 'mdb-ui-kit';&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;// module 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#importing-css-file"&gt;
  &lt;/a&gt;
  Importing CSS file
&lt;/h6&gt;

&lt;p&gt;To import MDB stylesheet please use the following syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="gp"&gt;@import '~mdb-ui-kit/css/mdb.min.css';&lt;/span&gt;&lt;span class="w"&gt; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#importing-scss-modules"&gt;
  &lt;/a&gt;
  Importing SCSS modules
&lt;/h6&gt;

&lt;p&gt;You can also import individual SCSS modules. To do it properly, we recommend to copy them from the node_modules/mdb-ui-kit/src/scss location directly to your project and import in the same way as CSS files.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#webpack-integration"&gt;
  &lt;/a&gt;
  Webpack integration
&lt;/h6&gt;

&lt;p&gt;You can significantly speed up the process of creating a new project based on Webpack using our &lt;a href="https://github.com/mdbootstrap/mdb-webpack-starter"&gt;Starter&lt;/a&gt;.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#cdn"&gt;
  &lt;/a&gt;
  CDN
&lt;/h4&gt;

&lt;p&gt;Installation via CDN is one of the easiest methods of integrating MDB UI KIT with your project. Just copy the latest compiled JS script tag and CSS link tag from &lt;a href="https://cdnjs.com/libraries/mdb-ui-kit"&gt;cdnjs&lt;/a&gt; to the application.&lt;/p&gt;

&lt;p&gt;Don't forget to add also Font Awesome and Roboto font if you need. Here's an example code:&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;!&lt;/span&gt;&lt;span class="nt"&gt;--&lt;/span&gt; &lt;span class="nt"&gt;Font&lt;/span&gt; &lt;span class="nt"&gt;Awesome&lt;/span&gt; &lt;span class="nt"&gt;--&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt;
  &lt;span class="nt"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css"&lt;/span&gt;
  &lt;span class="nt"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"stylesheet"&lt;/span&gt;
&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;!&lt;/span&gt;&lt;span class="nt"&gt;--&lt;/span&gt; &lt;span class="nt"&gt;Google&lt;/span&gt; &lt;span class="nt"&gt;Fonts&lt;/span&gt; &lt;span class="nt"&gt;--&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt;
  &lt;span class="nt"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&amp;amp;display=swap"&lt;/span&gt;
  &lt;span class="nt"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"stylesheet"&lt;/span&gt;
&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;!&lt;/span&gt;&lt;span class="nt"&gt;--&lt;/span&gt; &lt;span class="nt"&gt;MDB&lt;/span&gt; &lt;span class="nt"&gt;--&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt;
  &lt;span class="nt"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/3.3.0/mdb.min.css"&lt;/span&gt;
  &lt;span class="nt"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"stylesheet"&lt;/span&gt;
&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#js"&gt;
  &lt;/a&gt;
  JS
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="nx"&gt;MDB&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;
  &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text/javascript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/3.3.0/mdb.min.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#customization"&gt;
  &lt;/a&gt;
  Customization
&lt;/h2&gt;

&lt;h5&gt;
  &lt;a href="#basic-example"&gt;
  &lt;/a&gt;
  Basic example
&lt;/h5&gt;

&lt;p&gt;A basic example of a lightbox with the most common use case with the bootstrap grid.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"lightbox"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"row"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"col-lg-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
        &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://mdbootstrap.com/img/Photos/Thumbnails/Slides/1.jpg"&lt;/span&gt;
        &lt;span class="na"&gt;data-mdb-img=&lt;/span&gt;&lt;span class="s"&gt;"https://mdbootstrap.com/img/Photos/Slides/1.jpg"&lt;/span&gt;
        &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Lightbox image 1"&lt;/span&gt;
        &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-100"&lt;/span&gt;
      &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"col-lg-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
        &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://mdbootstrap.com/img/Photos/Thumbnails/Slides/2.jpg"&lt;/span&gt;
        &lt;span class="na"&gt;data-mdb-img=&lt;/span&gt;&lt;span class="s"&gt;"https://mdbootstrap.com/img/Photos/Slides/2.jpg"&lt;/span&gt;
        &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Lightbox image 2"&lt;/span&gt;
        &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-100"&lt;/span&gt;
      &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"col-lg-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
        &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://mdbootstrap.com/img/Photos/Thumbnails/Slides/3.jpg"&lt;/span&gt;
        &lt;span class="na"&gt;data-mdb-img=&lt;/span&gt;&lt;span class="s"&gt;"https://mdbootstrap.com/img/Photos/Slides/3.jpg"&lt;/span&gt;
        &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Lightbox image 3"&lt;/span&gt;
        &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-100"&lt;/span&gt;
      &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#image-optimization"&gt;
  &lt;/a&gt;
  Image optimization
&lt;/h5&gt;

&lt;p&gt;To ensure the proper performance of the page, it is recommended to include thumbnails of images in the src attribute. Then in the &lt;code&gt;data-mdb-img&lt;/code&gt; attribute add the path to the image with higher resolution. If the &lt;code&gt;data-mdb-img&lt;/code&gt; attribute is omitted, the lightbox will display the same image as in the reduced size.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://mdbootstrap.com/img/Photos/Thumbnails/Slides/1.jpg"&lt;/span&gt;
  &lt;span class="na"&gt;data-mdb-img=&lt;/span&gt;&lt;span class="s"&gt;"https://mdbootstrap.com/img/Photos/Slides/1.jpg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Lightbox image 1"&lt;/span&gt;
  &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-100"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#you-can-see-more-customization-examples-on-the-lightbox-documentation-page"&gt;
  &lt;/a&gt;
  You can see more customization examples on the &lt;a href="https://mdbootstrap.com/docs/standard/components/lightbox/"&gt;📄 Lightbox documentation page&lt;/a&gt;
&lt;/h4&gt;




&lt;h2&gt;
  &lt;a href="#crucial-resources"&gt;
  &lt;/a&gt;
  Crucial Resources
&lt;/h2&gt;

&lt;p&gt;Here are the resources that we have prepared to help you work with this component:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Read &lt;a href="https://mdbootstrap.com/docs/standard/components/lightbox/"&gt;📄 Lightbox documentation page&lt;/a&gt; &amp;lt;-- start here&lt;/li&gt;
&lt;li&gt;In to get the most out of your project, you should also get acquainted with other Components options related to Lightbox. See the section below to find the list of them.&lt;/li&gt;
&lt;li&gt;You can use predesigned Components elements in &lt;a href="https://mdbootstrap.com/freebies/"&gt;📥 Starter Bootstrap 5 templates&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Templates are a part of &lt;a href="https://mdbootstrap.com/docs/standard/"&gt;📦 Free UI Kit for Bootstrap 5&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;After finishing the project you can publish it with CLI in order to receive &lt;a href="https://mdbootstrap.com/docs/standard/cli/"&gt;💽 Free hosting (beta)&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;




&lt;h2&gt;
  &lt;a href="#related-content-and-styles-options-amp-features"&gt;
  &lt;/a&gt;
  Related Content and Styles options &amp;amp; features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/components/accordion/"&gt;Accordion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/components/alerts/"&gt;Alerts &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/components/buttons/"&gt;Buttons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/components/badges/"&gt;Badges&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/components/cards/"&gt;Cards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/components/button-group/"&gt;Button Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/components/carousel/"&gt;Carousel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/components/chips/"&gt;Chips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/components/collapse/"&gt;Collapse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/components/dropdowns/"&gt;Dropdowns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/components/list-group/"&gt;List Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/components/modal/"&gt;Modal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/components/popconfirm/"&gt;Popconfirm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/components/popovers/"&gt;Popovers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/components/progress/"&gt;Progress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/components/rating/"&gt;Rating&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/components/spinners/"&gt;Spinners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/components/stepper/"&gt;Stepper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/components/toasts/"&gt;Toasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdbootstrap.com/docs/standard/components/tooltips/"&gt;Tooltips&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#learn-bootstrap-5-in-15h"&gt;
  &lt;/a&gt;
  Learn Bootstrap 5 in 1.5H
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/c9B4TPnak1A"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#additional-resources"&gt;
  &lt;/a&gt;
  Additional resources
&lt;/h2&gt;

&lt;p&gt;Learn web development with our &lt;strong&gt;learning roadmap&lt;/strong&gt;:&lt;br&gt;
&lt;strong&gt;&lt;a href="https://mdbootstrap.com/docs/standard/getting-started/"&gt;🎓 Start Learning&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Join our mailing list &amp;amp; receive &lt;strong&gt;exclusive resources&lt;/strong&gt; for developers&lt;br&gt;
&lt;strong&gt;&lt;a href="https://mdbootstrap.com/newsletter/"&gt;🎁 Get gifts&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Join our private FB group for &lt;strong&gt;inspiration &amp;amp; community experience&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;&lt;a href="https://www.facebook.com/groups/682245759188413"&gt;👨‍👩‍👧‍👦 Ask to join&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support creation of open-source packages&lt;/strong&gt; with a STAR on GitHub&lt;br&gt;
&lt;a href="https://github.com/mdbootstrap/mdb-ui-kit/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KKY5TtAR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/github/stars/mdbootstrap/mdb-ui-kit%3Flabel%3DStar%2520now%26style%3Dsocial" alt="GitHub Stars"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>bootstrap</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>Firebase: Start up your base or fire up your own servers?</title>
      <author>Anurag Jayaraman</author>
      <pubDate>Wed, 30 Jun 2021 13:17:54 +0000</pubDate>
      <link>https://dev.to/anuragjwrites/firebase-start-up-your-base-or-fire-up-your-own-servers-i2n</link>
      <guid>https://dev.to/anuragjwrites/firebase-start-up-your-base-or-fire-up-your-own-servers-i2n</guid>
      <description>&lt;p&gt;If you clicked this article because of the word "Firebase", you have probably been a part of a mobile application development lifecycle at some point in your life. Some of the services offered by Firebase like &lt;a rel="noreferrer noopener" href="https://firebase.google.com/docs/cloud-messaging"&gt;Firebase Cloud Messaging (FCM)&lt;/a&gt;, &lt;a rel="noreferrer noopener" href="https://firebase.google.com/docs/dynamic-links/"&gt;Firebase Dynamic Links&lt;/a&gt;, &lt;a rel="noreferrer noopener" href="https://firebase.google.com/docs/remote-config/"&gt;Firebase Remote Config&lt;/a&gt; have become synonymous with the features they implement in your applications. At my current organization, &lt;a href="https://www.applozic.com"&gt;Applozic&lt;/a&gt;, FCM is used for &lt;a href="https://dev.to/applozic/applozic-android-sdk-tutorial-4-push-notifications-4a2h"&gt;push notifications for Android applications&lt;/a&gt; built on our platform. At a global level, Firebase is currently among one of the top app development platforms relied upon by developers across the globe.&lt;/p&gt;

&lt;p&gt;That said, Firebase's offerings in the Backend-as-a-Service(BaaS) space are not the be all, end all in terms of application development. In this article, I would like to explore some of the shortcomings other application developers have encountered with Firebase, and why your application might be better suited with your own backend solution.&lt;/p&gt;

&lt;h2&gt;What is Firebase?&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Firebase helps you develop high-quality apps, grow your user base, and earn more money. Each feature works independently, and they work even better together.&lt;/p&gt;
&lt;cite&gt;https://firebase.google.com/use-cases&lt;/cite&gt;
&lt;/blockquote&gt;

&lt;p&gt;Firebase is a mobile application development platform from Google with powerful features for developing, handling, and enhancing highly functional and versatile web, Android, and iOS platform applications. &lt;/p&gt;

&lt;p&gt;Firebase categorizes its services and by creating solutions of these three main problems for developers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a rel="noreferrer noopener" href="https://firebase.google.com/products-build"&gt;Build&lt;/a&gt; : Accelerate and scale app development without managing infrastructure&lt;/li&gt;
&lt;li&gt;
&lt;a rel="noreferrer noopener" href="https://firebase.google.com/products-release"&gt;Release &amp;amp; Monitor&lt;/a&gt; : Release applications with confidence and monitor their performance and stability in realtime. &lt;/li&gt;
&lt;li&gt;
&lt;a rel="noreferrer noopener" href="https://firebase.google.com/products-engage"&gt;Engage&lt;/a&gt; : Boost engagement with rich analytics, A/B testing, and messaging campaigns&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Firebase's ideal customer&lt;/h2&gt;

&lt;p&gt;Firebase Use Cases page has some interesting application use-cases which cover some of their more popular offerings and how these services solved &lt;a rel="noreferrer noopener" href="https://firebase.google.com/use-cases/onefootball"&gt;a business problem&lt;/a&gt; or &lt;a rel="noreferrer noopener" href="https://firebase.google.com/use-cases/fabulous"&gt;boosted the customer retention after onboarding&lt;/a&gt;. Of course, these are the high visibility success stories where businesses were profitable and Firebase helped them take the next step in their development journey. You can find their showcase &lt;a rel="noreferrer noopener" href="https://firebase.google.com/use-cases"&gt;use cases here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To understand what type of customer would benefit the most from Firebase services, let's take a look at their &lt;a rel="noreferrer noopener" href="https://firebase.google.com/pricing"&gt;current pricing plan&lt;/a&gt;, and see how &lt;strong&gt;George &lt;/strong&gt;(a fictional character) created an application using Firebase. &lt;/p&gt;

&lt;h2&gt;Building the basics for your app&lt;/h2&gt;

&lt;p&gt;George woke up from bed with a great idea for an app and wanted to implement the minimum viable product to make sure the idea gets implemented. Firebase offered George unique services with dedicated APIs that helped with the initial setup of creating a database, managing authentication, storage, messaging, testing, etc., without ever having to understand what is going on in the backend. &lt;/p&gt;

&lt;p&gt;The phrase "pace over perfection" is best suited for use cases like this, where the priority is to get a feature implemented over worrying about the nitty-gritty of implementation and since George used only the Free plan, he was able to get an application shipped in minimum possible time. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vEdleSCB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.applozic.com/blog/wp-content/uploads/2021/04/firebase-plans.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vEdleSCB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.applozic.com/blog/wp-content/uploads/2021/04/firebase-plans.png" alt="firebase pricing plans comparison"&gt;&lt;/a&gt;Firebase pricing plans comparison&lt;/p&gt;

&lt;p&gt;A month has passed since George released his app, and he is happy with its success. The app has over 10,000 downloads on mobile and people are using and re-using the app at a moderate level. Everything is great on the public side of the picture. &lt;/p&gt;

&lt;h3&gt;Storage Constraints&lt;/h3&gt;

&lt;p&gt;Behind the scenes though, the application is reaching its quotas on most of the services. George's app has a lot of inbuilt messaging capabilities and users are sending rich messages (GIFs, emoticons, and animated features) and attaching files in one to one conversations and that is fulfilling his Cloud Storage quota rapidly. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S58-xXui--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.applozic.com/blog/wp-content/uploads/2021/04/image-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S58-xXui--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.applozic.com/blog/wp-content/uploads/2021/04/image-2.png" alt=""&gt;&lt;/a&gt;Free plan vs Paid plan for Firebase Cloud Storage&lt;/p&gt;

&lt;p&gt;George considers moving his storage solution to a more cost efficient service like AWS S3, but finds out that due to a &lt;a rel="noreferrer noopener" href="https://en.wikipedia.org/wiki/Vendor_lock-in"&gt;Vendor lock-in&lt;/a&gt;, he cannot simply migrate from Google Cloud Storage without having to completely rebuild how the app functions. &lt;/p&gt;

&lt;h3&gt;Security Constraints&lt;/h3&gt;

&lt;p&gt;As the number of users increase, George wants to implement phone authentication as a security measure but finds that the quota for Firebase authentication has already reached its limit, and he needs to either scale up to the paid plan or not implement this feature. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iaicw9Kw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.applozic.com/blog/wp-content/uploads/2021/04/image-3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iaicw9Kw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.applozic.com/blog/wp-content/uploads/2021/04/image-3.png" alt=""&gt;&lt;/a&gt;Free plan vs Paid plan for Firebase Authentication&lt;/p&gt;

&lt;h3&gt;Customization Constraints&lt;/h3&gt;

&lt;p&gt;Seeing the increasing challenges in maintaining his app in a free to download version, George wants to implement a few exclusive features which then he can ship as a paid app for regular users. He wants to implement customized API calls that will utilize the Realtime Database(RTDB) to provide the users with accurate data. However, Firebase APIs are non-customizable and the quotas for the RTDBs are constraining the ability to onboard new users or implement new features. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8vvZUPTp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.applozic.com/blog/wp-content/uploads/2021/04/image-4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8vvZUPTp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.applozic.com/blog/wp-content/uploads/2021/04/image-4.png" alt=""&gt;&lt;/a&gt;Free plan vs Paid plan for Firebase RTDB&lt;/p&gt;

&lt;h3&gt;Point of no return&lt;/h3&gt;

&lt;p&gt;The time has arrived for George to make a decision regarding the app's future. To ensure his app keeps functioning, he has to take one of the following decisions:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Move to the paid plan by sourcing investment and giving up partial/full control over his app. &lt;/li&gt;
&lt;li&gt;Move to the paid plan by monetizing his app and asking users to pay to use the service.&lt;/li&gt;
&lt;li&gt;Move away from Firebase services and create a robust backend and storage solution that can withstand scalability without causing disastrous financial repercussions. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Solution 1 and 2 might be good for the short term if the practicality of cost can be solved by George. However, unless George is able to scale up his development efforts and gain a lot more users for his app, these solutions are not going to help in the long term.  &lt;/p&gt;

&lt;p&gt;Solution 3, while being the most suitable for the long term, is not viable from the perspective of development or immediate implementation. &lt;/p&gt;

&lt;h2&gt;So who exactly is the ideal customer for Firebase?&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;If you are just starting your app development journey, Firebase and its services are a great place to start implementing a minimum viable product. &lt;/li&gt;
&lt;li&gt;If you are an Enterprise with oodles of funding and already use the Google Cloud platform, Firebase complements your application with robust APIs and services.&lt;/li&gt;
&lt;li&gt;If you are somewhere in between, Firebase might not be the correct solution for you!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;What developers say &lt;/h2&gt;

&lt;p&gt;Multiple articles on blogs and users across social media sites like Reddit, Twitter have opined their  views on Firebase, and I have tried my best to summarize them here.&lt;/p&gt;

&lt;h3&gt;Costs increase exponentially based on data usage&lt;/h3&gt;

&lt;p&gt;As we saw in George's case, Firebase's current pricing plans are suitable for the initial development of an app (free plan using less data) or enterprise level customers (high cost high value). While Firebase does offer a free plan, but that comes with hard quotas and restrictions that might hinder your application's usage.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Works only with NoSQL Databases&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Firebase offers two database options - Firestore and Firebase Realtime Database. Both of these have a NoSQL structure, and there is no option to use a relational database. &lt;/p&gt;

&lt;p&gt;This becomes a big problem when a developer wants to migrate some or all of their services to other providers and since Firebase uses JSON to store data, there is almost no easy way to be able to migrate from the existing database. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4kMSsDWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://eww-wp.s3.ap-south-1.amazonaws.com/wp-content/uploads/2019/06/11062817/MySQL-vs-NoSQL.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4kMSsDWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://eww-wp.s3.ap-south-1.amazonaws.com/wp-content/uploads/2019/06/11062817/MySQL-vs-NoSQL.jpg" alt=""&gt;&lt;/a&gt;Comparison between SQL and NoSQL&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Firebase can be geo restricted&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Firebase is a subdomain of Google, and their official website is https://firebase.google.com, the services can be blocked in any country by a domain ban. This means that if George wanted to publish his app in a country where Google cannot be accessed, he will have to rebuild his core infrastructure to something that is available in that country. &lt;/p&gt;

&lt;p&gt;You can find the list of &lt;a rel="noreferrer noopener" href="https://transparencyreport.google.com/traffic/overview"&gt;active disruptions to Google on this page.&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;Vendor Lock In&lt;/h3&gt;

&lt;p&gt;Developing an application using a non open source tool set can be frustrating when you want to add a certain feature or migrate to another service, but due to incompatibility, you are forced to stay with the same service, sometimes at a higher price or lower quality of service. This is called "Vendor Lock In", and it is a prominent detriment in complex applications which use multiple services. &lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;If you are in the beginning stages of your app development journey, and your app can be considered "small" - it doesn’t require complex data queries and relies on real-time updates, Firebase is one of the most robust and cost efficient BaaS that you can utilize. &lt;/p&gt;

&lt;p&gt;However, as the complexity of your app grows and there is an acute need for customization, high volume data transfers, better data structuring for analysis and querying, Firebase loses its sheen. As a developer, it would be more efficient to create your own backend or build upon existing &lt;a href="https://en.wikipedia.org/wiki/Infrastructure_as_a_service" rel="noreferrer noopener"&gt;IaaS&lt;/a&gt; platforms. &lt;/p&gt;

&lt;p&gt;Have you used Firebase services and what prompted you to use/leave Firebase in search of a solution? If you have ever developed using Firebase, do share your experience as a comment below!&lt;/p&gt;

&lt;p&gt;Learn how to set up your Android application with Firebase in 4 easy steps! &lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/applozic" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mOxz0ifG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--CjW7Jl5P--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/4160/2cf95956-1adc-4cce-b895-d3bd1937450a.png" alt="Applozic Inc"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OW7pBmt7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--UpfxykjL--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/636651/2b86e844-30eb-498b-a87f-956bf671e80b.jpg" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/applozic/applozic-android-sdk-tutorial-4-push-notifications-4a2h" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Applozic Android SDK Tutorial 4 – Push Notifications using Firebase&lt;/h2&gt;
      &lt;h3&gt;Anurag Jayaraman for Applozic Inc ・ Jun 30 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#android&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#firebase&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#applozic&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>firebase</category>
      <category>opinion</category>
      <category>startup</category>
      <category>technology</category>
    </item>
    <item>
      <title>Show dev: glassmorphism CSS generator</title>
      <author>Zoltán Szőgyényi</author>
      <pubDate>Wed, 30 Jun 2021 13:06:48 +0000</pubDate>
      <link>https://dev.to/themesberg/show-dev-glassmorphism-css-generator-39hb</link>
      <guid>https://dev.to/themesberg/show-dev-glassmorphism-css-generator-39hb</guid>
      <description>&lt;p&gt;Hello devs 👋&lt;/p&gt;

&lt;p&gt;Me and my friend decided to built a &lt;a href="https://ui.glass/generator/"&gt;glassmorphism css generator&lt;/a&gt; based on an upcoming CSS library called Glass UI.&lt;/p&gt;

&lt;p&gt;What you can do with this tool is that you can generate the CSS that you need to get the glassmorphism effect.&lt;/p&gt;

&lt;p&gt;Some of the features include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;multiple background types (gradient &amp;amp; solid)&lt;/li&gt;
&lt;li&gt;change the background color&lt;/li&gt;
&lt;li&gt;glassmorphism properties (blur, transparency)&lt;/li&gt;
&lt;li&gt;component border radius&lt;/li&gt;
&lt;li&gt;dark/light mode&lt;/li&gt;
&lt;li&gt;card color&lt;/li&gt;
&lt;li&gt;get the HTML code for the component (coming soon)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's a preview of the tool in both dark and light mode:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pbb-JSku--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oyiknjbti8u7iss0jha0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pbb-JSku--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oyiknjbti8u7iss0jha0.png" alt="Glassmorphism CSS Generator in dark mode"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9vwXOax---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/upuciwcwouwkbsqafuye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9vwXOax---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/upuciwcwouwkbsqafuye.png" alt="Glassmorphism CSS Generator in light mode"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The tool is free to use and to play with. Let us know in the comments section what you think about it, what would you do differently, or how we can improve it. Thank you! ❤️&lt;/p&gt;

&lt;p&gt;Check it out: &lt;a href="https://ui.glass/generator"&gt;https://ui.glass/generator&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>showdev</category>
    </item>
    <item>
      <title>How to Help Developers Work in The Flow</title>
      <author>Anastasia 🏄🏻‍♀️</author>
      <pubDate>Wed, 30 Jun 2021 12:39:36 +0000</pubDate>
      <link>https://dev.to/coffeestasia/how-to-help-developers-work-in-the-flow-2f1b</link>
      <guid>https://dev.to/coffeestasia/how-to-help-developers-work-in-the-flow-2f1b</guid>
      <description>&lt;p&gt;Developer’s job is one of the most mentally demanding jobs. Developers work with complex algorithms, juggle multiple things in their short-term memory and do many other mental operations to write code, and any interruption can cause these details to come crashing down. To operate effectively, they need to be focused and concentrated every second or, if lucky enough, work in the state of flow.&lt;/p&gt;

&lt;p&gt;Also known as “the zone,” flow is a mental state in which a person is fully immersed into the activity at hand while experiencing a feeling of energized focus and enjoyment. It’s a magical feeling when your knowledge, motivation and concentration align to produce maximum performance. If your developer team hardly if ever works in the state of flow, it means that you need to review your workplace policies and management approaches.&lt;/p&gt;

&lt;p&gt;In this article, we’ll dwell on the flow state phenomenon, review workplace trends that prevent your team members from working in the flow and provide a list of advice on how to help developers deliver maximum results.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;p&gt;&lt;a href="#State"&gt;The Psychology of Flow State&lt;/a&gt; &lt;br&gt;
&lt;a href="#Interruptions"&gt;Depressing State of Workplace Interruptions&lt;/a&gt; &lt;br&gt;
&lt;a href="#Killers"&gt;Flow State Killers&lt;/a&gt; &lt;br&gt;
&lt;a href="#Flow"&gt;How to Help Developers Work in The Flow&lt;/a&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#Clarity"&gt;How to Improve Clarity&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="#Focus"&gt;How to Enhance Focus&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="#Energy"&gt;How to Increase Energy&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#How"&gt;How to Manage Teams Without Interrupting Their Flow?&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-psychology-of-flow-state"&gt;
  &lt;/a&gt;
  The Psychology of Flow State &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The flow state was introduced and popularized by Mihaly Csikszentmihalyi – a positive psychologist and author of the landmark &lt;a href="https://www.amazon.com/Flow-Psychology-Experience-Perennial-Classics-ebook/dp/B000W94FE6/ref=sr_1_2?dchild=1&amp;amp;keywords=Finding+Flow&amp;amp;qid=1624114846&amp;amp;s=digital-text&amp;amp;sr=1-2"&gt;Flow: The Psychology of Optimal Experience&lt;/a&gt;. He defines flow as an “optimal state of consciousness where we feel our best and perform our best.” It is characterized by the state of deep focus where you lose track of time and make the best of your skills with little to no effort. People who have experienced flow &lt;a href="https://www.ted.com/talks/mihaly_csikszentmihalyi_flow_the_secret_to_happiness#t-883527"&gt;describe&lt;/a&gt; the following feelings:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Focused and concentrated involvement in the activity&lt;/li&gt;
&lt;li&gt;Ecstatic feeling of being outside everyday reality&lt;/li&gt;
&lt;li&gt;Clarity about what to do and how to do it&lt;/li&gt;
&lt;li&gt;Confidence in your skills&lt;/li&gt;
&lt;li&gt;A sense of serenity&lt;/li&gt;
&lt;li&gt;Time flies by very quickly&lt;/li&gt;
&lt;li&gt;Inner motivation to deliver results.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks to modern neuroscience, we know that during the flow state, the human brain &lt;a href="https://www.psychologytoday.com/us/blog/the-playing-field/201402/flow-states-and-creativity"&gt;produces&lt;/a&gt; pleasure-inducing and performance-enhancing chemicals that enable us to better process information and enjoy the activity. According to &lt;a href="https://bigthink.com/videos/the-neurochemistry-of-flow-states-with-steven-kotler"&gt;Steven Kotler&lt;/a&gt;, executive director of Flow Research Collective, a study done by the Flow Genome Project revealed that flow state increases creativity by 500–700%.&lt;/p&gt;

&lt;p&gt;Benefits of the flow state can be summarized as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Improved learning and skill development.&lt;/strong&gt; The flow state is attainable only if activity requires better skills, posing positive challenges and providing opportunities for growth.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Enhanced performance.&lt;/strong&gt; A 10-year &lt;a href="https://scholar.google.com/scholar_lookup?journal=McKinsey+Q.&amp;amp;title=Increasing+the+meaning+quotient+of+work&amp;amp;author=S.+Cranston&amp;amp;author=S.+Keller&amp;amp;volume=1&amp;amp;publication_year=2013&amp;amp;pages=48-59&amp;amp;"&gt;study&lt;/a&gt; showed that people in the flow state were 500% more productive.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;More creativity.&lt;/strong&gt; According to a study conducted at the University of Sydney, the state of flow &lt;a href="https://www.mybrainfirst.com/blog/the-neuroscience-of-flow-and-creativity"&gt;increases&lt;/a&gt; creative problem solving.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Increased engagement&lt;/strong&gt; because people in the flow state are &lt;a href="https://www.scielo.br/j/pusf/a/dVCtFXSMRPSfFmjNpxTZxMF/?lang=en"&gt;more immersed&lt;/a&gt; into their activities.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Greater enjoyment and fulfillment.&lt;/strong&gt; Working in the flow state feels effortless and rewarding, which increases satisfaction.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Enhanced intrinsic motivation.&lt;/strong&gt; Enjoyment brings intrinsic motivation to do things for internal rewards.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now imagine if you could achieve all these benefits with your team: it would improve employee satisfaction and increase productivity several times! But in reality, modern workplaces and management approaches pose multiple obstacles preventing teams from working in the flow.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#depressing-state-of-workplace-interruptions"&gt;
  &lt;/a&gt;
  Depressing State of Workplace Interruptions &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Workplace is the biggest flow killer. &lt;a href="https://www.sciencedirect.com/science/article/pii/S0747563213000435"&gt;Studies&lt;/a&gt; show that an average employee experiences about 87 interruptions per day or spends only 3 minutes on a task before being interrupted. Another &lt;a href="https://www.ics.uci.edu/~gmark/chi08-mark.pdf"&gt;study&lt;/a&gt; conducted at the Georgia Institute of Technology revealed that it takes an average of about 25 minutes to return to the original task after an interruption. If we put this data together, we’ll get the following graph illustrating concentration trends of an average worker.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5dBUv73G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/06/Peak-Productivity-min.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5dBUv73G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/06/Peak-Productivity-min.png" alt="Concentration trends of an average worker"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you ask developers, one of the &lt;a href="https://dev.to/actitime/what-are-the-worst-nightmares-for-devs-56m2"&gt;most annoying things&lt;/a&gt; for them is getting interrupted in the middle of a difficult task. A famous &lt;a href="https://heeris.id.au/2013/this-is-why-you-shouldnt-interrupt-a-programmer/"&gt;cartoon strip&lt;/a&gt; by Jason Heeris illustrates what happens inside the mind of a developer who has been distracted.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S3ETamI---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/06/Interrupted-programmer.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S3ETamI---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/06/Interrupted-programmer.png" alt="What happens inside the mind of a developer who has been distracted"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Joel Spolsky, a co-founder of Stack Overflow, &lt;a href="https://www.joelonsoftware.com/2000/04/19/where-do-these-people-get-their-unoriginal-ideas/"&gt;once said&lt;/a&gt;: “Productivity depends on being able to juggle a lot of little details in short-term memory all at once. Any interruption can cause these details to come crashing down. When you resume work, you can’t remember any of the details (like local variable names you were using, or where you were up to in implementing that search algorithm) and you have to keep looking these things up, which slows you down a lot until you get back up to speed.”&lt;/p&gt;

&lt;p&gt;The number two reason why developers don’t achieve the flow state is that they interrupt themselves. Some &lt;a href="https://arxiv.org/pdf/1805.05508.pdf"&gt;studies&lt;/a&gt; suggest that self-interruptions like task-switching are more disruptive than external interruptions. Some &lt;a href="https://www.gamasutra.com/view/feature/190891/programmer_interrupted.php"&gt;sources&lt;/a&gt;, along with Joel Spolsky, claim that programmers get just one uninterrupted 2-hour session in a day.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I feel a little bit guilty when I see how hard everybody else seems to be working, and I get about two or three quality hours in a day, and still I’ve always been one of the most productive members of the team. – &lt;a href="https://www.joelonsoftware.com/2002/01/06/fire-and-motion/"&gt;Joel Spolsky&lt;/a&gt;, co-founder of Stack Overflow&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And number three reason that gets in the developers’ way of achieving the flow state are managers and their management approaches. But before we dwell on practical advice for managers, let’s see what things prevent people from getting into the flow state.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flow-state-killers"&gt;
  &lt;/a&gt;
  Flow State Killers &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Flow is a state of consciousness on the verge of mental arousal and control. It takes about 15-25 minutes of undivided attention to reach it, but it doesn’t happen every time and if it does, distractions break it in seconds. Many developers hardly ever reach the state of flow if they are distracted by the following anti-flow emotions: anxiety, worry, anger, apathy, boredom, relaxation. Let’s see some examples of events and circumstances that cause these emotions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Worry and anxiety caused by unrealistic task estimates and deadlines.&lt;/li&gt;
&lt;li&gt;Being upset by personal or professional issues. For example, working in a company that doesn’t provide fair rewards and doesn’t understand the needs of the employee.&lt;/li&gt;
&lt;li&gt;Not being interested in a task or a project because it’s not challenging enough.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These unbalanced circumstances can take away energy (This work is so repetitive, I don’t feel like learning anything new at all. I don’t know how to do it.), focus (I can’t concentrate with that chit-chat in the background. I can’t stop thinking about that nasty comment of my colleague’s) or clarity (What do I want this to look like? It’s more complicated than it looks, can I actually get it done?). So, they can be summarized as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Clarity killers:&lt;/strong&gt; fuzzy goals, unclear expectations, sketchy plans, feeble time planning.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Focus killers:&lt;/strong&gt; overwhelm, inner and environmental distractions, interruptions.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Energy killers:&lt;/strong&gt; boredom, anxiety, impatience, exhaustion.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To identify issues preventing your team from working in the flow, you can refer to the following flow model. According to Mihaly Csikszentmihalyi, if the challenge of a task is roughly equal to the skill level of the person executing it, it creates the best circumstance to achieve maximum productivity and get the most enjoyment and satisfaction from the job.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tb9Qs84M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/06/flow-channel.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tb9Qs84M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/06/flow-channel.png" alt="The best circumstance to achieve maximum productivity"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ask your team of developers to identify the point on the graph that most resonates with how they feel about their work. If they put their point in the top left corner, it means that they are anxious or stressed, so they need to improve their skills to get back to the Flow Channel. If their point is in the bottom-right corner, you need to assign them more difficult and responsible tasks so that they could work to their potential and grow.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Usually people will fall into boredom because their skillset has increased. They’ve taken a leap forward, they’ve learned a lot. Maybe they just shipped something or conquered an obstacle, and now they don’t feel like they’re being challenged,” – &lt;a href="https://review.firstround.com/track-and-facilitate-your-engineers-flow-states-in-this-simple-way"&gt;Dr. Cynthia Maxwell&lt;/a&gt;, Engineer at Netflix.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hold one-on-one meetings with each team member to discuss their flow chart results and work out individual and major improvements in workload distribution, workplace policies, time and project management of your team. Hold these interviews regularly, let’s say every three months, to review the trends and review the performance of introduced improvements.&lt;/p&gt;

&lt;p&gt;Let’s see what you can do as a manager to help developers work in the flow state more often.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-help-developers-work-in-the-flow"&gt;
  &lt;/a&gt;
  How to Help Developers Work in The Flow &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Many managers make the same mistake: they push their team to perform better instead of creating conditions and environments necessary for employees to perform at their best. Instead of putting figures and performance metrics first, you need to prioritize employees’ needs and quality performance will follow. High productivity is not a goal but a consequence of a wise management strategy that meets the interests of both parties.&lt;/p&gt;

&lt;p&gt;“The question is: how to get your team more into their work, not get more work out of them” – &lt;a href="https://review.firstround.com/track-and-facilitate-your-engineers-flow-states-in-this-simple-way"&gt;Dr. Cynthia Maxwell&lt;/a&gt;, Engineer at Netflix&lt;/p&gt;

&lt;p&gt;Since we put all the flow killers into three groups, it means that we’ve identified the three essential components of the flow state. Let’s see what managers can do to prevent flow state killers and provide developer teams with maximum energy, focus and clarity.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#how-to-improve-clarity"&gt;
  &lt;/a&gt;
  How to Improve Clarity &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Clarify priorities.&lt;/strong&gt; Update your team on the project progress and priorities regularly. Emphasize how individual developers contribute to the project development and what their priorities are inside their work scopes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Set realistic goals.&lt;/strong&gt; Managers are not business speakers: your task is not to give inspiring speeches but to set realistic expectations for your team. &lt;a href="https://www.actitime.com/productivity/productivity-measurement"&gt;Use previous performance data&lt;/a&gt; to plan their workload more accurately.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;“People want to work for a cause not for a living.” – &lt;a href="https://positivepsychology.com/flow-at-work/"&gt;Cal Newport&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ensure visibility and transparency.&lt;/strong&gt; Foster close collaboration and boundless knowledge-sharing to avoid silos, roadblocks and project delays. Implement &lt;a href="https://www.actitime.com/"&gt;time and project management systems&lt;/a&gt; where each member of your team can review project progress and collaborate.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Match challenges with adequate personal skills.&lt;/strong&gt; According to the Flow theory, if the gap between the challenge and ability is too broad, people get anxious and stressed. If stressed for an extended period of time, employees tend to &lt;a href="https://www.actitime.com/productivity/how-to-prevent-burnout"&gt;burn out&lt;/a&gt;. So, assign challenging tasks to those developers whose skills match the complexity of the challenge or a little bit lower than required.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Create &lt;a href="https://www.monterail.com/blog/knowledge-sharing-software-development-company"&gt;knowledge-sharing repositories&lt;/a&gt;.&lt;/strong&gt; Start a community-based repository where developers can share their knowledge and answer FAQs. This will reduce the number of workplace distractions and provide a means to get information without interrupting the flow.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Break work into smaller chunks.&lt;/strong&gt; Too big tasks that last week after week may feel overwhelming to your team members as they don’t feel like they make any progress. Instead, break them into manageable sub-tasks.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#how-to-enhance-focus"&gt;
  &lt;/a&gt;
  How to Enhance Focus &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Consider Scrum methodology.&lt;/strong&gt; Scrum has several &lt;a href="https://www.guru99.com/agile-vs-scrum.html"&gt;advantages&lt;/a&gt; over Agile development in terms of achieving the flow state. It fosters self-organizing teams and immediate feedback through daily stand-up meetings.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Hold daily stand-up meetings.&lt;/strong&gt; Stand-up meetings provide transparency and involve social risk, which is a positive stressor pushing the performance limits of individual developers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Build collaboration.&lt;/strong&gt; Allow developers to share problems that are upsetting or causing anxiety. Encourage collaboration and knowledge sharing to eliminate knowledge gaps and foster communication.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Introduce &lt;a href="https://positivepsychology.com/what-is-eustress/"&gt;positive stress&lt;/a&gt;&lt;/strong&gt; – situations that feel stressful in a positive manner: developers feel like they can handle it, despite feeling challenged. These stressors should be short-term, energizing and lie within our coping ability. For example, social stress at daily stand-up meetings: providing no task updates a few meetings in a row feels bad but motivates to achieve results.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ri4m_dR0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/06/Yerkes-Dodson-min.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ri4m_dR0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/06/Yerkes-Dodson-min.png" alt="The Yerkes-Dodson law graph"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The Yerkes-Dodson law graph illustrating the relationship between the optimal state of arousal and optimal performance&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Don’t use KPIs.&lt;/strong&gt; KPIs are one of the &lt;a href="https://twitter.com/coffeestasia/status/1406247122664628231"&gt;most annoying things for developers&lt;/a&gt;. And it’s not surprising because KPIs cause long-term stress that causes negative stress and negatively affects performance.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Have no meeting days.&lt;/strong&gt; Set a day a week without meetings to guarantee developers uninterrupted time to focus.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Support group diversity.&lt;/strong&gt; Different-minded teams pose positive challenges generating a wider variety of approaches to problem-solving and fostering innovative thinking.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Design a better working environment.&lt;/strong&gt; Establish guidelines that regulate distractions and distraction-proof time in the office.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Encourage developers to record their trains of thought&lt;/strong&gt; or document their code after they get interrupted.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Take care of developers who feel unsafe or judged.&lt;/strong&gt; Members of minority groups who feel unwelcome or unappreciated will struggle to concentrate and won’t be able to reach a state of flow.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Offer flexibility but set boundaries.&lt;/strong&gt; Respect the individual rhythms of your employees by encouraging them to control their time and manage their energy. Offer flexible working hours, personalized working spaces and more but set boundaries.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#how-to-increase-energy"&gt;
  &lt;/a&gt;
  How to Increase Energy &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Reduce micromanagement.&lt;/strong&gt; Micromanagement breaks the morale, introduces unnecessary interruptions and kills proactive attitude. Instead, give developers space to manage their resources and show their skills.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Encourage self-leadership.&lt;/strong&gt; Create an environment where everyone is allowed to contribute their expertise at any given time to encourage group flow.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The greater the decision-making power of an employee is, the greater his commitment to his role will be. This will translate into increased levels of performance and job satisfaction&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Incorporate immediate feedback.&lt;/strong&gt; Constant feedback assures that developers are on the right track and gives them specific ways to stretch their limits — just the kind of balance that can produce a flow state.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Provide meaningful and personalized recognition.&lt;/strong&gt; Write personal notes, express verbal recognition, motivate developers with financial incentives.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Allow employees to innovate and to explore without fear of making mistakes.&lt;/strong&gt; Mistakes are not failures but opportunities to learn and innovate. Allow this kind of risk where possible.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Encourage equal participation.&lt;/strong&gt; Group flow is more likely to occur when team members play an equal role and have comparable skill levels. If one of the team members shows dominance or arrogance, group flow is blocked.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-manage-teams-without-interrupting-their-flow"&gt;
  &lt;/a&gt;
  How to Manage Teams Without Interrupting Their Flow? &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;To summarize, effective project management that encourages individual and team flow involves trust and encourages developers to be proactive, take the initiative and offer solutions. It includes knowledge sharing, feedback, collaboration and rules out ego, dominance, arrogance, micromanagement and KPI. Effective project manager creates an environment where goals and needs of developers and stakeholders are met in a balanced manner and uses tools to keep track of what’s going on in their team.&lt;/p&gt;

&lt;p&gt;If you are looking for a flow-friendly time management solution, consider &lt;a href="https://www.actitime.com/"&gt;actiTIME&lt;/a&gt; – software that makes productivity tracking effortless and stress-free. actiTIME won’t bother you with pop-ups or annoying notifications and provide you with three different modes of recording working hours: web interface, browser extension and mobile app. In actiTIME, managers can build custom workflows and complex projects, calculate payrolls and project costs, manage remote worker and employee absences. Explore the whole set of features with a &lt;a href="https://www.actitime.com/free-online-trial"&gt;free 30-day trial&lt;/a&gt; or request a &lt;a href="https://www.actitime.com/demo-request"&gt;product demo&lt;/a&gt; to get a product tour and find out if it’s a good fit for your needs.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>career</category>
      <category>webdev</category>
      <category>devops</category>
    </item>
    <item>
      <title>Package.json File explained!!!</title>
      <author>Naveenchandar</author>
      <pubDate>Wed, 30 Jun 2021 12:32:06 +0000</pubDate>
      <link>https://dev.to/naveenchandar/package-json-file-explained-b94</link>
      <guid>https://dev.to/naveenchandar/package-json-file-explained-b94</guid>
      <description>&lt;p&gt;If you've been working on javascript or related framework projects then definitely you came across the file named package.json and we might be curious why this file is included in our projects and why its needed 🤔.&lt;/p&gt;

&lt;p&gt;The main purpose of this file is to hold various metadata releted to the project and it is used to give information to npm that allows to identify the project and its dependencies.&lt;/p&gt;

&lt;p&gt;To create a package.json file manually you need to run a command &lt;code&gt;npm init&lt;/code&gt; which will ask you a bunch of questions that is not compulsory. Just hit enter to complete those.You can change it later.&lt;br&gt;
If you do want to answer these questions then you can run a command &lt;code&gt;npm init -y&lt;/code&gt; which will create a file named package.json with the defaults.&lt;/p&gt;

&lt;p&gt;Let's see the list of available options which npm has given us to make in this file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;name&lt;/strong&gt;&lt;br&gt;
If you've been working on some projects in local and if planning to publish it. &lt;br&gt;
Two important things are name and versions. Both are required and it should be unique.&lt;br&gt;
Name represents the name of your project.&lt;br&gt;
There are some rules for defining names.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Must be less than or equal to 214 characters&lt;/li&gt;
&lt;li&gt;should not begin with dot (.) or underscore(_).&lt;/li&gt;
&lt;li&gt;should not have an uppercase letter in the name. &lt;/li&gt;
&lt;li&gt;package name must not contain any non-url-safe characters (since name ends up being part of a URL)
Please go through this &lt;a href="https://www.ietf.org/rfc/rfc2396.txt"&gt;link&lt;/a&gt; to find unsafe characters.&lt;/li&gt;
&lt;li&gt;If needed you can check the npm registry whether the name is available or not.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;version&lt;/strong&gt;&lt;br&gt;
This property defines the version of your project and it should follow &lt;a href="https://docs.npmjs.com/about-semantic-versioning"&gt;semantic versioning guidelines&lt;/a&gt;.&lt;br&gt;
Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"version": "1.0.0"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;description&lt;/strong&gt;&lt;br&gt;
This property is used to provide more information about the project and it helps people to discover your package as its listed in npm's search.&lt;br&gt;
Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"description": "A package to work with strings"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;keywords&lt;/strong&gt;&lt;br&gt;
It's an array of strings.Keywords related to your project. This helps people discover your package based on the keyword search.&lt;br&gt;
Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"keywords": [
  "react",
  "Javascript"
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;homepage&lt;/strong&gt;&lt;br&gt;
This property is used to provide landing page url of your project.&lt;br&gt;
Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"homepage": "https://github.com/owner/project#readme"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;license&lt;/strong&gt;&lt;br&gt;
This property denotes the type of license in your project, whether this package can be used by others without any restrictions.To know more about &lt;a href="https://spdx.org/licenses/"&gt;license&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;bugs&lt;/strong&gt;&lt;br&gt;
This property is used to specify the project issue tracker and / or the email address to which issues should be reported. These will be helpful for people who encounter issues while using your package.&lt;br&gt;
Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"bugs":{
  "url" : "https://github.com/owner/project/issues",
  "email" : "project@hostname.com"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;people fields: author, contributors&lt;/strong&gt;&lt;br&gt;
This property specifies the number of contributors involved in developing this project.&lt;br&gt;
Author is for single person and contributors is array of people.&lt;br&gt;
Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"author": "abc@example.com https://www.abc.com/",
"contributors": [{
    "name": "example",
    "email": "example@example.com",
    "url": "https://www.example.com/#team"
}]
(email and url are optional).
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;scripts&lt;/strong&gt;&lt;br&gt;
This property contains commands that run at various times in the lifecycle of your package. It takes object with key being scripts we can with (npm run ) with the various command we give in the values.The key is the lifecycle event, and the value is the command to run at that point.&lt;br&gt;
Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"scripts":{
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "lint": "eslint ./"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are mostly terminal commands which helps us to execute specific task used during development. Learn more about &lt;a href="https://docs.npmjs.com/cli/v7/using-npm/scripts"&gt;npm scripts&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;dependencies&lt;/strong&gt;&lt;br&gt;
This is one of the most important key in your file and the entire reason to use this file. All your dependencies used in this project(various npm libraries installed via CLI) are listed here. when package is installed as npm install , after installation it will automatically added under the dependencies key.&lt;br&gt;
Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"dependencies": {
 "react": "^17.0.1",
 "react-router-dom": "^5.2.0",
 "compression": "~1.7.4"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note:&lt;br&gt;
~ and ^ you see in the dependency versions are notations for version ranges defined in &lt;a href="https://github.com/npm/node-semver"&gt;semver&lt;/a&gt; as it follows semantic versioning.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;devDependencies&lt;/strong&gt;&lt;br&gt;
some packages are needed only for development and doesn't need for production. Those packages can be listed in this. An example would be eslint or nodemon. These are the packages we will be using while development.&lt;br&gt;
To install a package as devDependency run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save-dev &amp;lt;packagename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;private&lt;/strong&gt;&lt;br&gt;
This property is either true or false. If you set it to true, then npm will refuse to publish it.&lt;br&gt;
Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"private": true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;engines&lt;/strong&gt;&lt;br&gt;
This property sets which versions of Node and other commands this project should work on.&lt;br&gt;
Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"engines": {
  "node": "&amp;gt;= 6.0.0",
  "npm": "&amp;gt;= 3.0.0",
  "yarn": "^0.13.0"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;browserslist&lt;/strong&gt;&lt;br&gt;
This property specifies which browser (along with versions) you want to support your project. If you are using latest ES features we need make sure all browsers supports it or if not then fallback/polyfills is needed. It's referenced by Babel, Autoprefixer, and other tools. To add the polyfills and fallbacks needed to the browsers you target.&lt;br&gt;
You can check &lt;a href="https://caniuse.com/"&gt;here&lt;/a&gt; whether the latest features has been supported by browser or not.&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"browserslist": {
    "production": [
      "&amp;gt;0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note:&lt;br&gt;
0.2% specifies that you want to support the browsers with at least 0.2% of global usage.&lt;br&gt;
not dead means exclude browsers without official support in the last 24 months.&lt;br&gt;
You can learn more about browserslist &lt;a href="https://github.com/browserslist/browserslist"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;main&lt;/strong&gt;&lt;br&gt;
This property specifies the entry point in your project. If someone installs your project and then uses &lt;code&gt;import something from 'something'&lt;/code&gt;, the file you named in this key will be the one gets imported.&lt;br&gt;
If nothing is specified, it will be set to index.js by default.&lt;br&gt;
Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"main": "src/main.js"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This package.json file will be the heart of any javascript/node project.Not all properties will be applicable to your project but we can make use of these properties to achieve some powerful benefits. Understanding the role of package.json file is important part of javascript ecosystem and it will make you more insightful!!🙂.&lt;/p&gt;

&lt;p&gt;Thanks for reading this and have a great day 😃. &lt;br&gt;
Lets meet in the next post 😉.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>node</category>
      <category>angular</category>
    </item>
    <item>
      <title>Introduction to AWS Cloudformation</title>
      <author>Adit Modi</author>
      <pubDate>Wed, 30 Jun 2021 12:24:53 +0000</pubDate>
      <link>https://dev.to/aws-builders/introduction-to-aws-cloudformation-2a8g</link>
      <guid>https://dev.to/aws-builders/introduction-to-aws-cloudformation-2a8g</guid>
      <description>&lt;p&gt;What if I told you that a text file could help you tackle the normally tedious and time-consuming task of setting up and managing your AWS infrastructure? Good news. It’s actually easy to do with an &lt;strong&gt;AWS CloudFormation template&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A typical AWS infrastructure can consist of numerous resources that might need to be managed across different accounts and regions. Setup is often a manual process that can be overwhelming to maintain. This is especially true if your &lt;strong&gt;AWS infrastructure&lt;/strong&gt; continues to grow and you have to start from scratch each time you need to add new resources or services. The one-off, ad hoc nature of provisioning resources via the CLI or management console also leaves too much room for error.&lt;/p&gt;

&lt;p&gt;Luckily, AWS CloudFormation was built to solve these issues. It simplifies the management of your AWS infrastructure, by allowing you to create text-file templates that provision and update resources in an organized and predictable way. CloudFormation is well-established, with more than 10 years since launch, and has the support of a large community.&lt;/p&gt;

&lt;p&gt;In this article, we’ll cover the benefits and potential drawbacks of CloudFormation and how to &lt;strong&gt;setup&lt;/strong&gt; and &lt;strong&gt;modify&lt;/strong&gt; your &lt;strong&gt;architecture with templates&lt;/strong&gt;. We’ll also share CloudFormation template examples that can make things even easier. By adopting AWS CloudFormation, you and your team will spend far less time building and managing your infrastructure, so you can stay focused on development.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u-9tBpnz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qs17w3187jhp1g5mpnhf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u-9tBpnz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qs17w3187jhp1g5mpnhf.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My Background: Cloud Engineer | AWS Community Builder | AWS Educate Cloud Ambassador | 4x AWS Certified | 3x OCI Certified | 3x Azure Certified.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Introduction to AWS Services&lt;/strong&gt; is a mini Series containing different articles that provide a basic introduction to different aws services. Each article covers the detailed guide on how to Use the AWS Service. This series aims at providing "A Getting Started Guide on Different AWS Services."&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS CloudFormation&lt;/strong&gt; performs the crazy party trick of enabling you to manage your complete AWS infrastructure and resources from a text file. The formatted YAML or JSON code you write in the AWS CloudFormation template describes your AWS infrastructure and the resources you need. CloudFormation does the rest, provisioning, configuring and deploying everything for you. It also handles dependencies between resources, removing another piece of complexity from the puzzle.&lt;/p&gt;

&lt;p&gt;Without a template, you would have to set everything up manually using the AWS management console or CLI. You would also have to make note of all the resources involved, especially if you wanted to replicate your work for another environment. On the other hand, templates can be used on an ongoing basis, moving you away from the tedium of manually executing multiple steps every time you need to make a change. For example, extending your environment by adding a few more functions is easy with a template.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#understanding-cloudformation-stacks"&gt;
  &lt;/a&gt;
  Understanding CloudFormation Stacks
&lt;/h1&gt;

&lt;p&gt;The collection of AWS resources created when CloudFormation runs a template is called a stack. The resources that make up a stack are provisioned to work together to build your application or solution. You can create, modify, delete or replicate resources at the stack level, making management easier and more organized.&lt;/p&gt;

&lt;p&gt;Here are a few of the many advantages that come with defining your resources with AWS CloudFormation templates and managing them as stacks:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-existing-cloudformation-templates-so-you-dont-have-to-start-from-scratch"&gt;
  &lt;/a&gt;
  Use existing CloudFormation templates so you don’t have to start from scratch
&lt;/h2&gt;

&lt;p&gt;Chances are you’ll need similar sets of resources for several different environments. With AWS CloudFormation templates, the days of having to start from scratch each time are over. Instead, lean on an existing template to replicate the infrastructure you need. You can then customize your setup using CloudFormation template parameters and conditions (more on that later). In this way, you can quickly set up resources in multiple environments and in different regions around the world. The portable nature of templates also allows you to share them, say with other teams in your organization, when it makes sense.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stacks-are-easier-to-qa"&gt;
  &lt;/a&gt;
  Stacks are easier to QA
&lt;/h2&gt;

&lt;p&gt;With your infrastructure declared by the code in your templates, you can now add reviews to your process to ensure no mistakes are made during deployment. You can also use a change management process to verify any changes to your infrastructure, instead of risking mistakes by making changes directly in the console or via CLI.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cloudformation-is-the-largest-resource-provider"&gt;
  &lt;/a&gt;
  CloudFormation is the largest resource provider
&lt;/h2&gt;

&lt;p&gt;CloudFormation has many more features you can explore, including built-in identity and access management (IAM), automated rollback and error-checking. And after lagging in resource coverage in the past, CloudFormation now covers more AWS resources than any other Infrastructure-as-Code framework, including Terraform, and almost all new AWS releases now have CloudFormation coverage at launch.&lt;/p&gt;

&lt;p&gt;Of course, nothing is perfect and AWS CloudFormation does have some drawbacks. Here are a couple to keep in mind:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Steep learning curve:&lt;/strong&gt; While working with templates creates more predictable results than working directly with the console, CloudFormation has many concepts to learn, and, until you get a firm handle on them, things can easily go wrong. For example, if you change the logical ID of a resource, CloudFormation will delete it and create a new one. And, when it deletes that resource, it also trashes its data. Similarly, a resource and all its content are often automatically deleted when the stack is deleted, unless you specify otherwise using the DeletionPolicy attribute in your template. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Beware of drift:&lt;/strong&gt; CloudFormation keeps a snapshot of the current state of your AWS infrastructure. If you then make a change directly through your AWS console or your AWS CLI, your resources will be out of sync with the snapshot. This discrepancy is called drift and it can cause your deployments to fail. &lt;br&gt;
So, once you start using CloudFormation, you should stop making manual updates to your account, through the console or CLI, to avoid this issue.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-basic-cloudformation-template-sections"&gt;
  &lt;/a&gt;
  What Are the Basic CloudFormation Template Sections?
&lt;/h2&gt;

&lt;p&gt;As mentioned earlier, an AWS CloudFormation template is simply a formatted YAML or JSON text file. Next, we’ll cover the 9 main sections used in a template to define and modify the resources you need.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#format-version"&gt;
  &lt;/a&gt;
  Format version
&lt;/h2&gt;

&lt;p&gt;This is where you specify the template format version. The capabilities of the template can vary depending on which one you choose. If you don’t pick one, CloudFormation defaults to the latest version. As an aside, CloudFormation has yet to make a backwards-incompatible change, so don’t worry too much about versions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  Description
&lt;/h2&gt;

&lt;p&gt;Use the description area to add comments about your template, such as its purpose.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#metadata"&gt;
  &lt;/a&gt;
  Metadata
&lt;/h2&gt;

&lt;p&gt;Use JSON or YAML objects in this section to provide further details about the resources in your template.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h2&gt;

&lt;p&gt;In this section, you declare parameters that are passed to the template when a stack is created or updated. In this way, you can specify unique values for use in the properties of your stack’s resources and effectively customize a template each time it’s used. It also allows you to use a single template across multiple accounts and regions, or to specify information unique to the application or configuration being deployed. A best practice is to store parameters in AWS Systems Manager Parameter Store for each environment and then reference the parameters instead of passing in literal values to CloudFormation directly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mappings"&gt;
  &lt;/a&gt;
  Mappings
&lt;/h2&gt;

&lt;p&gt;There may be cases where you’ll want to add logic to your template. With Mappings, you can use an input value as a condition that determines another value.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conditions"&gt;
  &lt;/a&gt;
  Conditions
&lt;/h2&gt;

&lt;p&gt;Conditions are statements that determine whether or not a resource is created or a property is assigned to a value when a stack is created or updated. For example, a condition could check to see if one value is greater or less than another value and, based on the result, conditionally create a resource. This gives the same template the flexibility to be used across different environments.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#transform"&gt;
  &lt;/a&gt;
  Transform
&lt;/h2&gt;

&lt;p&gt;You can specify one or more macros that enable the reuse of template components. They are often used to condense or simplify your code. This is where you enable AWS SAM, which is used to simplify the development of serverless stacks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;p&gt;This is where you list the resources that will be created by the template. It’s also where you specify the necessary properties to create each resource.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h2&gt;

&lt;p&gt;In this section, you can specify the values you want to have returned to you and available after the stack is created. For example, there could be output values you might need to have handy to import into other stacks or you might want easy access to a particular output, like a URL created in the template.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To see examples of these template sections in actual code, take a look at the CloudFormation Sample Templates part of the article.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#best-practices-when-creating-cloudformation-templates"&gt;
  &lt;/a&gt;
  Best Practices when Creating CloudFormation Templates
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Leave credentials out of your templates:&lt;/strong&gt; It’s not a smart move to store credentials or other sensitive information in your AWS CloudFormation templates. Instead, use dynamic references to specify and retrieve information managed in other services, like AWS Secrets Manager, without CloudFormation ever storing the actual reference value.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reference non-confidential parameters:&lt;/strong&gt; It’s a good idea to store non-confidential parameters (like the memory size of a Lambda Function) in AWS Systems Manager Parameter Store and reference them, instead of passing literal values to CloudFormation directly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Make your code more readable:&lt;/strong&gt; If you’re writing your AWS CloudFormation template in YAML, use CFN-specific tags (e.g. !GetAtt instead of the full Fn::GetAtt syntax) to make your code more readable. You’ll thank yourself later when you revisit your code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Add comments and background information:&lt;/strong&gt; With a top-level Metadata section and the ability to add Metadata sections to every resource, you have plenty of opportunities to provide details that could be helpful later. And don’t worry, these comments won't be lost when you use tools to edit your templates.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Check your code:&lt;/strong&gt; Validate your template with AWS CloudFormation, before creating or updating a stack, to ensure it consists of valid JSON or YAML without syntax or semantic errors. Also make sure to use tools like AWS CloudFormation Guard (cfn-guard) and cfn-nag to check your template for policy compliance issues or security vulnerabilities, respectively.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#cloudformation-sample-templates"&gt;
  &lt;/a&gt;
  CloudFormation Sample Templates
&lt;/h1&gt;

&lt;p&gt;Take a look at these AWS CloudFormation template examples to get a feel for what they’re like.&lt;/p&gt;

&lt;p&gt;Services templates:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/sample-templates-services-us-west-2.html#w2ab1c35c58c13b7"&gt;Auto Scaling template&lt;/a&gt;&lt;br&gt;
&lt;a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/sample-templates-services-us-west-2.html#w2ab1c35c58c13c17"&gt;Amazon EC2 template&lt;/a&gt;&lt;br&gt;
&lt;a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/sample-templates-services-us-west-2.html#w2ab1c35c58c13c23"&gt;Elastic Load Balancing template&lt;/a&gt;&lt;br&gt;
&lt;a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/sample-templates-services-us-west-2.html"&gt;Explore more AWS services templates.&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#application-framework-templates"&gt;
  &lt;/a&gt;
  Application framework templates:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://s3.us-west-2.amazonaws.com/cloudformation-templates-us-west-2/LAMP_Single_Instance.template"&gt;Basic LAMP stack template&lt;/a&gt;&lt;br&gt;
&lt;a href="https://s3.us-west-2.amazonaws.com/cloudformation-templates-us-west-2/Rails_Single_Instance.template"&gt;Basic Ruby on Rails template&lt;/a&gt;&lt;br&gt;
&lt;a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/sample-templates-appframeworks-us-west-2.html"&gt;Check out more application framework templates.&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#template-snippets"&gt;
  &lt;/a&gt;
  Template snippets:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/CHAP_TemplateQuickRef.html"&gt;These template snippets can help you learn.&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#more-aws-templates-and-resources"&gt;
  &lt;/a&gt;
  More AWS templates and resources:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/cloudformation/resources/templates/"&gt;Take a look at the AWS CloudFormation templates page for more samples and resources.&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;AWS CloudFormation gives you an easy way to model a collection of related AWS and third-party resources, provision them quickly and consistently, and manage them throughout their lifecycles, by treating infrastructure as code. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LDuQojBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rrkgdjdxha4xvqa5aucx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LDuQojBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rrkgdjdxha4xvqa5aucx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope this guide helps you understand on How to Get Started With AWS Cloudformation, feel free to connect with me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn&lt;/a&gt;|&lt;a href="https://twitter.com/adi_12_modi"&gt;Twitter&lt;/a&gt;.&lt;br&gt;
If you are interested in learning more about AWS Services then follow me on &lt;a href="https://github.com/AditModi"&gt;github.&lt;/a&gt;&lt;br&gt;
If you liked this content then do clap and share it . Thank You .&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>beginners</category>
    </item>
    <item>
      <title>🚀 The React Router Module Is Now Available!</title>
      <author>Grégory D'Angelo</author>
      <pubDate>Wed, 30 Jun 2021 12:22:27 +0000</pubDate>
      <link>https://dev.to/alterclass/the-react-router-module-is-now-available-olm</link>
      <guid>https://dev.to/alterclass/the-react-router-module-is-now-available-olm</guid>
      <description>&lt;p&gt;&lt;strong&gt;I'm excited to announce that the React Router module of my &lt;a href="https://alterclass.io/courses/react"&gt;React JS program&lt;/a&gt; is now available in your classroom.&lt;/strong&gt; 🥳&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;👉 For those who have not enrolled yet, you can still benefit from the &lt;a href="https://alterclass.io/special-offer"&gt;76% limited-time discount&lt;/a&gt;. It is expiring soon, though.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, in this module, you'll learn to use the popular React Router library to &lt;strong&gt;route users to different views&lt;/strong&gt; in your single-page application, &lt;strong&gt;build navigation links&lt;/strong&gt;, use URL parameters to &lt;strong&gt;build dynamic pages&lt;/strong&gt;, &lt;strong&gt;code-split your app&lt;/strong&gt; using &lt;code&gt;React.lazy&lt;/code&gt;, and more.&lt;/p&gt;

&lt;p&gt;If you don't have time to read this post, here's a quick summary of what this module has to offer in a few numbers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;12 topics&lt;/strong&gt; from &lt;strong&gt;basic routing&lt;/strong&gt; to &lt;strong&gt;route-based code-splitting&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;13 quizzes&lt;/strong&gt; to test your knowledge&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;2 projects&lt;/strong&gt; to build your portfolio&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1 cheatsheet&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, let's dive into the details.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-whats-included"&gt;
  &lt;/a&gt;
  So, what's included?
&lt;/h2&gt;

&lt;p&gt;This module has one large section to teach you everything you should know &lt;strong&gt;to enable client-side routing in your React application and organize it into different views, using the very famous React Router library&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;It is composed of the following concepts:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Introduction - What is Routing and Server-side vs. Client-side Routing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this lesson, you'll learn about the concept of routing in a web application, understand server-side routing, its pros, and cons, and learn about the differences between server-side and client-side routing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Create Basic Routes With BrowserRouter&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Next, you'll learn how to enable routing in your app using the &lt;code&gt;&amp;lt;BrowserRouter /&amp;gt;&lt;/code&gt; component from React Router, and create the routes and render the different views of your app using the &lt;code&gt;&amp;lt;Route /&amp;gt;&lt;/code&gt; component.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Use The Link Component To Navigate Between Routes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Then, you'll learn how to use the &lt;code&gt;&amp;lt;Link /&amp;gt;&lt;/code&gt; component from React Router to allow your users to navigate around your application in a declarative and accessible way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Style A Link That Is Active With NavLink&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this lesson, you'll learn to build navigation links using &lt;code&gt;&amp;lt;NavLink /&amp;gt;&lt;/code&gt;,  which is a special version of the &lt;code&gt;&amp;lt;Link /&amp;gt;&lt;/code&gt; component that gets an active state when the current URL matches its location.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Use URL Parameters With React Router&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;URL parameters are a fundamental concept of building web applications. In this lesson, you'll learn how to effectively leverage URL parameters in your React app using the useParams hook to create dynamic pages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Use Regular Expressions With Routes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The path property of the &lt;code&gt;&amp;lt;Route /&amp;gt;&lt;/code&gt; component can accept a string, an array of strings, or even regular expressions. So, in this lesson, you'll break down this prop and see how to create powerful rules to define the paths of your routes using regex. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Parse Query Strings In React Router&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Next, you'll learn how to retrieve and parse the query strings from the current URL using the useLocation hook from React Router and the browser's built-in URLSearchParams API to use them in your React components.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. Handle 404 Pages (Catch-All Routes) With React Router&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this lesson, you'll learn how to implement a catch-all route for handling 404 pages in a React app with React Router.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. Redirect To Another Page With React Router&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this lesson, you'll learn how to use the &lt;code&gt;&amp;lt;Redirect /&amp;gt;&lt;/code&gt; component from React Router to create a redirect rule from one route to another. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10. Protected Routes And Authentication With React Router&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You'll often need to protect some pages of your application and display them only if the user is authenticated. So, in this lesson, you'll learn how to create a custom and reusable &lt;code&gt;&amp;lt;ProtectedRoute /&amp;gt;&lt;/code&gt; component to protect your routes using React Router.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;11. Programmatically Navigate Using React Router&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sometimes, you need to navigate the user to a new location without clicking on an actual link, but when he has performed a specific action in your app. That's when programmatic navigation is necessary. S, in this lesson, you'll learn how to navigate programmatically using React Router.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;12. Code-Splitting With React, React.Lazy, And React Router&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Finally, we'll look at what code-splitting is and how to do it, and how to implement it with React Router to split your app into separate bundles your users can progressively load when needed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8sT8n2sJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.s3.eu-west-3.amazonaws.com/react-router-classroom.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8sT8n2sJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.s3.eu-west-3.amazonaws.com/react-router-classroom.png" alt="The React Router v5 lesson in the classroom"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-will-you-build"&gt;
  &lt;/a&gt;
  What will you build?
&lt;/h2&gt;

&lt;p&gt;In this module, you'll not build only one but &lt;strong&gt;two projects&lt;/strong&gt;. 🔥&lt;/p&gt;

&lt;p&gt;As usual, I tried to design very nice projects you will proudly add to your portfolio and showcase to your friends and future employers.&lt;/p&gt;

&lt;p&gt;So, for each project, you will use everything you've learned in the React Router module to &lt;strong&gt;build the corresponding application&lt;/strong&gt; (see the screenshots below) using the provided components and pages, &lt;strong&gt;enable routing&lt;/strong&gt;, &lt;strong&gt;create all the different routes and links&lt;/strong&gt; with React Router, and &lt;strong&gt;set up route-based code-splitting&lt;/strong&gt; using &lt;code&gt;React.lazy&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Routing is an important piece of any client-side application, and therefore it is a necessary skill to have in your tool-belt as a React developer. So I hope you'll enjoy working on those projects as much as we'd enjoyed building them for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://react-flix.netlify.app/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kp6Rsi_d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.s3.eu-west-3.amazonaws.com/react-flix-1.png" alt="The ReactFlix application"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://react-crypto-listing.netlify.app/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EBW86Cmq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.s3.eu-west-3.amazonaws.com/react-crypto.png" alt="The Crypto Price-Tracking application"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once again, thank you for being part of the AlterClass community, and I hope you'll enjoy learning about React Router with me. Feel free to ask any questions or send any feedback you have by &lt;a href="//mailto:contact@alterclass.io?subject=The%20React%20Router%20module"&gt;email&lt;/a&gt; or from our &lt;a href="http://discord.gg/HTQvwxA"&gt;Discord server&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;And for those of you who haven't enrolled yet, hurry up and take advantage of the &lt;a href="https://alterclass.io/special-offer"&gt;76% discount&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Happy coding, and see you in the classroom. 😎&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Best Crypto Payment Gateways to Accept Bitcoin</title>
      <author>Manbir Singh Marwah</author>
      <pubDate>Wed, 30 Jun 2021 12:20:48 +0000</pubDate>
      <link>https://dev.to/manbir/best-crypto-payment-gateways-to-accept-bitcoin-24np</link>
      <guid>https://dev.to/manbir/best-crypto-payment-gateways-to-accept-bitcoin-24np</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-is-a-payment-gateway-and-why-do-businesses-need-them"&gt;
  &lt;/a&gt;
  What is a payment gateway and why do businesses need them?
&lt;/h3&gt;

&lt;p&gt;A crypto payment gateway is used to accept payments in Bitcoin and other cryptocurrencies such as Ethereum, Litecoin, Ripple etc. The rapid growth in the e-commerce space is also pushing the businesses to scale up their payment options and look into new alternatives such as accepting payments in cryptocurrencies. &lt;/p&gt;

&lt;p&gt;Since most of the cryptocurrencies are highly volatile, enterprise businesses need to make sure that the transactions are settled seamlessly between the business and buyers. Payment gateways make this possible enabling the merchant to also keep a track of transaction history and reports. The efficiency also helps businesses increase their growth and turnover.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-are-we-seeing-a-rapid-growth-in-the-crypto-adoption-among-businesses"&gt;
  &lt;/a&gt;
  Why are we seeing a rapid growth in the crypto adoption among businesses?
&lt;/h3&gt;

&lt;p&gt;There are &lt;em&gt;endless&lt;/em&gt; reasons for why this is happening, but some of the major ones are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A direct and secure way of processing transactions&lt;/li&gt;
&lt;li&gt;Faster settlement than conventional systems such as bank transfers, credit and debit cards&lt;/li&gt;
&lt;li&gt;Each transaction is registered on blockchain making them irreversible and immutable &lt;/li&gt;
&lt;li&gt;Free from any third party such as banking institutions and intermediaries&lt;/li&gt;
&lt;li&gt;Increased protection from identity thefts while keeping the transaction information accessible&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#comparison-of-various-payment-gateways"&gt;
  &lt;/a&gt;
  Comparison of various payment gateways
&lt;/h3&gt;

&lt;p&gt;There are multiple payment gateways available in the market. Let's discuss some of them in this blog.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-hashbon"&gt;
  &lt;/a&gt;
  - Hashbon
&lt;/h4&gt;

&lt;p&gt;Hashbon is a Czech Republic based B2B and B2C focused crypto solutions platform for paying in cryptocurrencies seamlessly. Hashbon has provided a multilingual platform and an avenue for new users to test its APIs and features. &lt;/p&gt;

&lt;p&gt;Hashbon takes care of the KYC and AML requirements. In under 5 minutes, buyers/consumers can scale the identity verification process and become eligible to buy products or pay for services with cryptocurrencies. The 0% commission applies to all received transactions and all withdrawals processed via cryptocurrencies. Currently, Hashbon supports 30 cryptocurrencies including Bitcoin, Ethereum, and Litecoin and offers fast and convenient integration within a day.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-bitpay"&gt;
  &lt;/a&gt;
  - Bitpay
&lt;/h4&gt;

&lt;p&gt;BitPay is a bitcoin payment service provider headquartered in Atlanta, Georgia, United States. It was founded in May 2011 by Tony Gallippi and Stephen Pair. BitPay provides Bitcoin and Bitcoin Cash processing services for merchants&lt;/p&gt;

&lt;p&gt;BitPay was founded to provide mobile checkout services to companies that wanted to accept bitcoins. By October 2012, BitPay had grown to having 1,100 active merchants, including being WordPress's bitcoin merchant. In 2017, BitPay launched another round B funding campaign. Later that year, they raised the minimum payment on the platform to $100 USD from its previous $5 USD; the change was reversed only a few days later.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-coinpayments"&gt;
  &lt;/a&gt;
  - Coinpayments
&lt;/h4&gt;

&lt;p&gt;CoinPayments is a payment processor that allows merchants to accept Bitcoin and hundreds of altcoins in their store through easy to use plugins, APIs and POS interfaces. With over 2.2 million users across 182 countries around the world, CoinPayments.net is one of the most comprehensive multi-cryptocurrency platform available online.&lt;/p&gt;

&lt;p&gt;CoinPayments got its start back in 2013, when it became the first payment processor to support altcoins. At that time no one else in the industry was offering support for cryptocurrencies outside of Bitcoin, so CoinPayments seized the opportunity to create a multi-currency wallet and crypto processing solution.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Hashbon&lt;/th&gt;
&lt;th&gt;Bitpay&lt;/th&gt;
&lt;th&gt;Coinpayments&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;th&gt;Transaction Commission&lt;/th&gt;
&lt;th&gt;0%&lt;/th&gt;
&lt;th&gt;1%&lt;/th&gt;
&lt;th&gt;0.5%&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;th&gt;Conversion Commission&lt;/th&gt;
&lt;th&gt;1%&lt;/th&gt;
&lt;th&gt;0%&lt;/th&gt;
&lt;th&gt;Coin TX fee + third party’s conversion fees&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;th&gt;Direct Bank Settlement&lt;/th&gt;
&lt;th&gt;To bank account (SEPA), 1%&lt;/th&gt;
&lt;th&gt;To bank account (SEPA, ACH, FPS), 0%&lt;/th&gt;
&lt;th&gt;No&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;th&gt;Volatility Risk&lt;/th&gt;
&lt;th&gt;No&lt;/th&gt;
&lt;th&gt;No&lt;/th&gt;
&lt;th&gt;Yes&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;th&gt;Supported Coins&lt;/th&gt;
&lt;th&gt;30+&lt;/th&gt;
&lt;th&gt;10&lt;/th&gt;
&lt;th&gt;2000+&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;th&gt;Auto Conversion&lt;/th&gt;
&lt;th&gt;+&lt;/th&gt;
&lt;th&gt;+&lt;/th&gt;
&lt;th&gt;+&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;th&gt;Massive Payouts&lt;/th&gt;
&lt;th&gt;+&lt;/th&gt;
&lt;th&gt;+&lt;/th&gt;
&lt;th&gt;+&lt;/th&gt;
&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Some important points to note:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;BitPay charges a processing fee to its merchants. Merchants may choose to pass this fee on to the buyer.&lt;/li&gt;
&lt;li&gt;Hashbon charges a conversion and fiat settlement fees and the merchants may choose to pass this fees on to the buyer.&lt;/li&gt;
&lt;li&gt;Coinpayments can provide settlements in fiat only through the third parties for an extra fee.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Additionally, Hashbon offers to its merchants the possibility to set up the fee amount and/or discount amount, which is included in all the invoices. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.entrepreneur.com/article/371619"&gt;Here's&lt;/a&gt; a research by &lt;em&gt;Entrepreneur&lt;/em&gt; sharing their views on crypto payment gateways.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Hashbon and Bitpay offer more profitable financial conditions for the Merchants. But an easy verification and integration process that has &lt;a href="https://hashbon.com"&gt;Hashbon&lt;/a&gt; can be more suitable/attractive for the representatives of small and medium businesses based in Europe. &lt;/p&gt;

</description>
      <category>blockchain</category>
    </item>
    <item>
      <title>Screen readers: hearing the unseen</title>
      <author>Oliwia Połeć</author>
      <pubDate>Wed, 30 Jun 2021 12:20:14 +0000</pubDate>
      <link>https://dev.to/livechat/screen-readers-hearing-the-unseen-55nb</link>
      <guid>https://dev.to/livechat/screen-readers-hearing-the-unseen-55nb</guid>
      <description>&lt;p&gt;A screen reader is software which forms part of a group of Assistive Technologies and renders graphical user interface content in the form of speech or braille output. This kind of software is essential for people that are blind or have any visual impairments as it allows them to interact with a computer or mobile devices in much the same way as the screen allows it for sighted people. In order to properly describe the particular parts of the user interface, the software needs the context and/or additional metadata provided by the application developer in order to properly present the content using a text description.&lt;/p&gt;

&lt;p&gt;There is a variety of screen reader software to choose from, and there are multiple ways of feeding them with data used for content descriptions. In this article, we will dive into this topic and show how this &lt;strong&gt;remarkable software makes it possible to use a computer or mobile devices without the need for visual references.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#examples-of-available-screen-readers"&gt;
  &lt;/a&gt;
  Examples of available screen readers
&lt;/h2&gt;

&lt;p&gt;There are quite a lot of different screen reader applications to choose from. They can be implemented in the form of native operating system support, like VoiceOver by Apple Inc. They can also be implemented as downloadable third-party software, like JAWS, which requires a paid license, or NVDA, which is built as an open-source solution and is free to use. Screen readers can even be found in the form of add-ons to software already being used by the user. For example, ChromeVox, which is available as a web browser add-on for Google Chrome. Despite their abundance, they all share the same purpose and basic functionality, but there are many differences in the way they handle their features. Some of them are more obvious, like ones in the customization interface or available options.&lt;/p&gt;

&lt;p&gt;There are also differences in the keyboard shortcuts, which adds a barrier for the user if he/she ever wants to change their screen reader of choice. It is also good to keep in mind that screen readers can differ in the way they recognize application content, so it is also good to verify your application on more than one of them, just as you would when testing on different devices or web browsers. Analyzing all available solutions on the market would definitely require a separate article, but we can briefly check the most commonly used options, which according to &lt;a href="https://webaim.org/projects/screenreadersurvey8/#used" rel="noopener noreferrer"&gt;the screen reader survey&lt;/a&gt;, are NVDA (72.4%), JAWS (61.7%), and VoiceOver (47.1%).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cvajunHQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nbkz7ynv3kfe7jygmvwc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cvajunHQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nbkz7ynv3kfe7jygmvwc.png" alt="LiveChat screen readers graph"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;NVDA, which stands for NonVisual Desktop Access, is free, open-source screen reader software which works on the Microsoft Windows operating system. It was released in 2006 and is available in 48 languages. It also supports braille displays.&lt;/p&gt;

&lt;p&gt;JAWS, which stands for Job Access With Speech, is paid screen reader software which works on the Microsoft Windows operating system. It was released in 1995 and was originally created for the MS-DOS operating system, and a fun fact is that this version is still available as JDOS and is free to use. It supports 10 languages. Its unique feature is the JAWS Scripting Language, which allows the user to add an accessibility layer for programs that were not designed with accessibility in mind.&lt;/p&gt;

&lt;p&gt;VoiceOver is free-to-use screen reader software built into the operating systems created by Apple Inc. As it is available both on the desktop and mobile operating systems, it supports touch and keyboard navigation. It was released in 2005 together with Mac OS X 10.4. Its main strong point is its native support for the operating systems as they were both built by the same company. A unique feature is its support for multitouch gestures, not only on mobile devices but also on desktop trackpads utilizing the rich trackpad support in Mac OS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#screen-reader-customization"&gt;
  &lt;/a&gt;
  Screen reader customization
&lt;/h2&gt;

&lt;p&gt;Most screen readers allow the user to customize their experience of using this software. The precise set of available options differs among the various types of screen readers, but there are a couple of features that are most commonly used and supported.&lt;/p&gt;

&lt;p&gt;First of all, the user can specify the language in which the content should be read. Most screen readers support more than one language depending on the support of a particular program.&lt;/p&gt;

&lt;p&gt;Another common setting is the level of verbosity. This allows the user to specify how much speech feedback is needed. It depends mainly on the level of visual impairment and so, for example, users who have partial vision can use less verbose speech and focus mainly on the content itself and not the metadata. On the other hand, blind users could need the full verbosity level, including all additional descriptions of content and placement of, for example, current interactive elements in the scope of the application. This is one of the reasons why the developer must provide all available content metadata as it is the user who should decide which of them is needed for uninterrupted usage of the application.&lt;/p&gt;

&lt;p&gt;One more popular setting for screen readers is the reading speed. This is pretty self-explanatory — it specifies how fast the lector should read the text. It is usually specified in a words-per-minute unit. In English, the typical read speed ranges between 120 to 150 words per minute, where advanced and fast screen reader users can understand content being read at a speed of even &lt;a href="https://www.vincit.fi/en/software-development-450-words-per-minute/" rel="noopener noreferrer"&gt;450 words per minute&lt;/a&gt;. Even if most screen reader users don't require such high speed, it is still common for them to use higher rates than that of typical spoken language. It is important to keep in mind that the first impression that long-to-read content slows down the user can be deceptive as when set at high reading speed rates, it is being read blazingly fast. Remember, don't worry too much about long descriptions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#screen-reader-usage-and-the-web"&gt;
  &lt;/a&gt;
  Screen reader usage and the Web
&lt;/h2&gt;

&lt;p&gt;Each HTML document begins with an &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; tag, and this is the first place for an appropriate accessibility setting. Using the &lt;code&gt;lang&lt;/code&gt; attribute, it is possible to specify the language for the whole document, which the screen reader will use in order to determine which language to use for speech. The second element close to the beginning of the HTML document is the &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; tag, which contains the title of the current document. It is read by the screen reader when first loading the webpage.&lt;/p&gt;

&lt;p&gt;Web document content is always presented in a linear way when using a screen reader. This is a totally different approach for content layout than typical graphical user interfaces, which are commonly multidimensional. One of the best representations of these differences in perception of the layout is the automated telephone menu system. The webpage content is being unveiled to the screen reader user one step at a time. This implies that the structure of user interfaces needs to take into account the complexity and also the order of the interactive elements and main page content. One common issue associated with this perception difference is the top navigation menu. In most cases, it is the first set of interactive elements in the navigation order. The screen reader needs to go through all of them in order to access the main page content, which is not the case for graphical interface users. As a solution to this problem there is the common technique of implementing a “skip to main content” button, being the first interactive element on the page, and it allows for quick access to the main page content.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XDRSmA02--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tpv3fmxo5thbbyc0p2tw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XDRSmA02--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tpv3fmxo5thbbyc0p2tw.gif" alt="LiveChat accessibility screen reader navigation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Navigation through webpages using screen readers is possible in various ways. Some of them provide users with an option to navigate content quickly, despite the linear nature of audio interfaces. The most basic navigation consists of moving one step forward by pressing the &lt;code&gt;[Tab]&lt;/code&gt; key or one step backward by pressing the &lt;code&gt;[Shift+Tab]&lt;/code&gt; key combination. Each step made like this will focus on the next or previous interactive element, like links, buttons, form controls, etc. The screen reader will then announce the currently focused element using its node type and additional metadata.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z-p2Pch0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mfo16pxdue4j9xslfhqb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z-p2Pch0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mfo16pxdue4j9xslfhqb.png" alt="LiveChat accessibility headings navigation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The second type of navigation available in screen readers is heading navigation. The screen reader, via a dedicated shortcut, allows the user to present a webpage map of available headings (in the form of a list), which he/she can then use to navigate directly between. This is a very commonly used technique as it allows quick access to the interesting parts of the document and makes it easy to skip those parts that are not of interest to the user. Because of this technique, it is very important to maintain a logical order in heading structure. For example, nesting an H2 element inside an H5 element should be avoided.&lt;/p&gt;

&lt;p&gt;The third common type of navigation using screen readers is ARIA landmark navigation. It is similar to headings navigation, but instead of presenting a map of the heading elements, it allows navigation through the meta structure of the webpage using HTML5 semantic elements like &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt;. And also, as with heading navigation, this technique allows quicker access to the desired parts of the page while also allowing quick skipping of unwanted content. With this type of navigation, it is important to utilize the available native HTML5 elements with their semantic meaning while structuring the document instead of using &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; elements everywhere.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DcUP3FxX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/za0zp4ko2nnxzqk05i4o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DcUP3FxX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/za0zp4ko2nnxzqk05i4o.png" alt="LiveChat accessibility landmark navigation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Regarding the chosen navigation technique, the screen reader user will rely on the information being provided by the content of the webpage to understand and use this content. Apart from the previously mentioned possibilities to provide understandable document structure, there are other smaller things that can be done to increase the accessibility of the content. For example, because screen reader users will go through each paragraph one after another and can skip one, it is good to place distinguished information of a paragraph in the first sentence. Additionally, screen reader users can also navigate by tables, lists, forms, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZO0LLn8x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2nicrhc2gufup1qyoywj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZO0LLn8x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2nicrhc2gufup1qyoywj.png" alt="LiveChat accessibility form graph"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Last but not least, the webpage developer can (and should) use ARIA attributes to attach additional metadata for various elements on the page. There are quite a lot of them, and they serve different purposes. The most common is &lt;code&gt;aria-label&lt;/code&gt;, which directly attaches the text content to the element that should be used for this element description. For example, when you have an icon button (hamburger menu) it will not have natural text content available.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zq7M_heg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hkun7kdeu2b52r9ynq81.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zq7M_heg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hkun7kdeu2b52r9ynq81.png" alt="LiveChat accessibility aria label"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The second most often used attributes are combinations of &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;aria-describedby&lt;/code&gt;, which together creates a relation where one element's content describes the other element. Another commonly used attribute, &lt;code&gt;role&lt;/code&gt;, makes it possible to specify for the screen reader the functional purpose of that element. There is also one common but yet special attribute, &lt;code&gt;aria-hidden&lt;/code&gt;, which instead of adding information to the screen reader, removes it and all its children in the HTML tree. This serves the purpose of hiding elements that do not provide valuable information.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#testing-accessibility-support-using-a-screen-reader"&gt;
  &lt;/a&gt;
  Testing accessibility support using a screen reader
&lt;/h2&gt;

&lt;p&gt;There is a lot of knowledge to be learned when it comes to building accessible applications and webpages. There is also a ton of experience to be gained just trying to do everything right. To help yourself with making sure that your webpage or application is properly accessible, it is really useful to utilize the screen reader in the workflow. The same way as we test our code locally on different devices and web browsers in order to verify if the content is laid out properly and if it works functionally, we could and should verify if it is accessible.&lt;/p&gt;

&lt;p&gt;Of course, screen readers are not automated tools for detecting accessibility issues, but by learning how to use them, especially with the application you’re working on, it is an insightful experience. This experience allows us to interact with created applications or documents in different, but very important ways, by listening to the content being read. And because we’re listening to the content, it is easier to catch potential issues with navigation order, meaningful descriptions of images, verbosity level of the interface, and more. Thanks to free-to-use solutions like open-sourced NVDA for Microsoft Windows and the natively supported VoiceOver for macOS, it is possible to just start using it without the need for any investments.&lt;/p&gt;

&lt;p&gt;An interesting outcome of testing applications with screen readers is that they can provide feedback as to the overall application design, which can improve the accessibility of the page for all kinds of visual disabilities or even increase the ease of use for sighted users.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapup"&gt;
  &lt;/a&gt;
  Wrap-up
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JTdNFsrG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/30mo2ytmp3dyzodmr4p6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JTdNFsrG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/30mo2ytmp3dyzodmr4p6.gif" alt="LiveChat accessibility screen readers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One part of making applications accessible is allowing the users to interact with them easily through screen reader software. This software is a fundamental player when it comes to possible user inputs and should be treated on a par with pointer or touch interactions. &lt;strong&gt;We, as responsible developers, need to treat the accessibility of our applications the same way we treat the visual attractiveness and usefulness of the graphical user interfaces we build.&lt;/strong&gt; The amount of possibilities in terms of different navigation techniques in screen readers can be intimidating, but it is only a matter of practice to feel more comfortable using it. If you ever feel lost you can easily check the guidelines, like the ones for &lt;a href="https://dequeuniversity.com/screenreaders/nvda-keyboard-shortcuts" rel="noopener noreferrer"&gt;NVDA&lt;/a&gt; or &lt;a href="https://dequeuniversity.com/screenreaders/voiceover-keyboard-shortcuts" rel="noopener noreferrer"&gt;VoiceOver&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>showdev</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Setup travis CI builds directly from the API</title>
      <author>Kartik Grewal</author>
      <pubDate>Wed, 30 Jun 2021 12:14:14 +0000</pubDate>
      <link>https://dev.to/kartik0709/lets-23jp</link>
      <guid>https://dev.to/kartik0709/lets-23jp</guid>
      <description>&lt;p&gt;Executing a CI Build using an API built with no-code backend platform! These truly are craziest of times. The need for APIs triggering Builds actually eliminates a lot of hassle that often come with using tools like jenkins or travis. They offer a lot more CI features but are often difficult to setup &amp;amp; maintain for smaller projects.&lt;/p&gt;

&lt;p&gt;If you have a SPA website hosted that depends on the content of your backend, well, you're in luck because you can attach a webhook to your API endpoint, which will trigger a build everytime the API is called.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Creating project on low-code tool&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;We head over to &lt;a href="https://canonic.dev"&gt;Canonic&lt;/a&gt; and sign in using our social accounts. Next, we click on &lt;strong&gt;Create New&lt;/strong&gt; to create a project for our application. Click on next, then click on create to complete the process.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uRL9KDEv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/travis-ss1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uRL9KDEv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/travis-ss1.png" alt="https://canonic.s3.amazonaws.com/public/devto/travis-ss1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create new project screen&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A popup asking your first table name will appear. If not, you can click on the &lt;strong&gt;+&lt;/strong&gt; icon in the header to create a new table. Let's name our first &amp;amp; only table for this project - &lt;strong&gt;RepoBuilds.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SNLW_60Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/travis-ss2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SNLW_60Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/travis-ss2.png" alt="https://canonic.s3.amazonaws.com/public/devto/travis-ss2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We create a text field named "Repo Branch" as we need the branch name against which we want to trigger the build.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YUKMRbRb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/travis-ss3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YUKMRbRb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/travis-ss3.png" alt="https://canonic.s3.amazonaws.com/public/devto/travis-ss3.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We hit deploy on the top right, and we'll be provided with a hosted backend. a database &amp;amp; basic CRUD endpoints per table.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on the &lt;strong&gt;API&lt;/strong&gt; tab on the left to start adding the Travis CI webhook. We select &lt;strong&gt;+&lt;/strong&gt; button that's attached to the &lt;strong&gt;createRepoBuilds&lt;/strong&gt; block in mutations. It'll open up a new webhook settings on the right hand side.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i0VmRMqS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/travis-ss4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i0VmRMqS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/travis-ss4.png" alt="https://canonic.s3.amazonaws.com/public/devto/travis-ss4.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select &lt;strong&gt;Build&lt;/strong&gt; type → Choose &lt;strong&gt;Travis CI&lt;/strong&gt; from the list of providers &amp;amp; you'll be provided with fields for settings. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;API Key → This is the API key of Travis account.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Repo Url → Git URL for the Repo we want to trigger the build&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Repo Branch → Branch to be selected for building&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7-VakFsI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/travis-ss5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7-VakFsI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/travis-ss5.png" alt="https://canonic.s3.amazonaws.com/public/devto/travis-ss5.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;For Repo Branch →&lt;/strong&gt; We want to trigger the build against the text found in the &lt;strong&gt;repo branch field&lt;/strong&gt; of the API payload. So we can make use of Handlebars templates &amp;amp; simply write &lt;code&gt;{{repoBranch}}&lt;/code&gt; in that field. This will extract the repoBranch field from the API payload and forward it to Travis.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And we're ready with our API to start triggering builds. Managing an API access is easier than managing CI access, so you can directly start consuming this API both by yourself &amp;amp; teammates.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Integrating our existing app with this API:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This will require a combination of things that we need for securely connecting our application with this API.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Access token for our API&lt;/li&gt;
&lt;li&gt;Documentation for the API&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Access Tokens&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Click on &lt;strong&gt;Settings&lt;/strong&gt; using left side menu. Go to &lt;strong&gt;Access&lt;/strong&gt; tokens tab.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hBIanpwt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/travis-ss6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hBIanpwt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/travis-ss6.png" alt="https://canonic.s3.amazonaws.com/public/devto/travis-ss6.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on &lt;strong&gt;Create a new token,&lt;/strong&gt; and provide it a suitable name and permissions. Click on &lt;strong&gt;Create.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZtDgbCef--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/travis-ss7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZtDgbCef--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/travis-ss7.png" alt="https://canonic.s3.amazonaws.com/public/devto/travis-ss7.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You've successfully generated an access token for your API. Copy it &amp;amp; save it some place safe as &lt;strong&gt;you won't be able to see it again&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S0-26PLW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/travis-ss8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S0-26PLW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/travis-ss8.png" alt="https://canonic.s3.amazonaws.com/public/devto/travis-ss8.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Head over to the docs tab using the left-hand side, and you'll find documentation for &lt;strong&gt;createRepoBuilds&lt;/strong&gt; API (the API block where we added our Travis webhook).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Testing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After completing all the necessary steps, we're finally ready to deliver our first SMS using our Travis-connected API.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Let's copy the &lt;strong&gt;CURL&lt;/strong&gt; command that was mentioned in the documentation. Fill in your access token and paste it into the terminal.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Our curl command will look something like this.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;➜  ~ curl 'https://xxxx.hem.canonic.dev/api/repoBuilds' \
  --request POST \
  --header "Content-type: application/json" \
  --header "Authorization: xxxxxx-xxxxx-xxxx" \
  --data '{
    "input": {
      "repoBranch": "newFixes",
    }
  }'
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;A successful response will look like this:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{"data":{"repoBranch":"newFixes","_id":"60bf30ee2529700009fd2a4a","createdAt":"2021-06-08T08:57:18.316Z","updatedAt":"2021-06-08T08:57:18.316Z","__v":0,"id":"60bf30ee2529700009fd2a4a"},"error":null,"success":true}%
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You should check on Travis, and you'll find the latest build in progress. Having an API saves a lot of trouble of maintenance and boilerplate setup while leaving plenty of room for rapid innovation. Find more information about this feature here - &lt;a href="https://docs.canonic.dev/concepts/webhook-providers/travis-ci"&gt;https://docs.canonic.dev/concepts/webhook-providers/travis-ci&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You also add other integrations depending on your business needs like sending a message on slack, etc. Check out the slack guide &lt;a href="https://dev.to/kartik0709/build-api-to-deliver-slack-messages-with-no-code-54hb"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>productivity</category>
      <category>backend</category>
      <category>travisci</category>
    </item>
    <item>
      <title>Every Python Dictionary Method Explained Simply</title>
      <author>Aphinya Dechalert</author>
      <pubDate>Wed, 30 Jun 2021 12:03:12 +0000</pubDate>
      <link>https://dev.to/dottedsquirrel/every-python-dictionary-method-explained-simply-4ah4</link>
      <guid>https://dev.to/dottedsquirrel/every-python-dictionary-method-explained-simply-4ah4</guid>
      <description>&lt;p&gt;Here is a quick recap of how dictionaries work.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;written with &lt;code&gt;{}&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;changeable, &lt;strong&gt;unordered&lt;/strong&gt;, indexed&lt;/li&gt;
&lt;li&gt;comes with key-pair values &amp;amp; &lt;strong&gt;no duplicates&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;looks something like this:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;pythondictionary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'python'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'data science'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'third'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'JavaScript'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is every Python Dictionary method available.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#combining-dictionaries"&gt;
  &lt;/a&gt;
  Combining dictionaries
&lt;/h2&gt;

&lt;p&gt;To combine two dictionaries, use a leading &lt;code&gt;**&lt;/code&gt; and then add them to a dictionary. Here is an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'b'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# this will return:
# {'a': 1, 'b': 2}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#dictclear"&gt;
  &lt;/a&gt;
  dict.clear()
&lt;/h2&gt;

&lt;p&gt;To remove all items inside a Python dictionary, use &lt;code&gt;clear()&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;pythondictionary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"b"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"c"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pythondictionary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="c1"&gt;# this will return:
# None
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#dictcopy"&gt;
  &lt;/a&gt;
  dict.copy()
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;copy()&lt;/code&gt; will create a shallow copy of the original dictionary.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;pythondictionary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"b"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"c"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pythondictionary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# this will return: 
# { "a":1, "b":2, "c":3 }
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#dictfromkeys"&gt;
  &lt;/a&gt;
  dict.fromkeys()
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;fromkeys()&lt;/code&gt; lets you create a dictionary from a set of keys stored in a list or tuple. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;keys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"c"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromkeys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# this will return:
# {'a': [1, 2, 3], 'b': [1, 2, 3], 'c': [1, 2, 3]}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#dictget"&gt;
  &lt;/a&gt;
  dict.get()
&lt;/h2&gt;

&lt;p&gt;You can access dictionary attributes with &lt;code&gt;[]&lt;/code&gt; like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"b"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"c"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;# this will return:
# 1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, the safest way to access attributes in a Python dictionary is through using the &lt;code&gt;get()&lt;/code&gt; function. This makes the action explicit. If the attribute doesn’t exist, it will return &lt;code&gt;None&lt;/code&gt;. If you used &lt;code&gt;[]&lt;/code&gt; instead of &lt;code&gt;get()&lt;/code&gt; and the value doesn’t exist, you will get a &lt;code&gt;KeyError&lt;/code&gt; instead.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"b"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"c"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# this will return:
# 1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to get an attribute but not sure if it exists or not, you can also assign your own error value to something like &lt;code&gt;undefined&lt;/code&gt; with &lt;code&gt;get()&lt;/code&gt;. Here is an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"b"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"c"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"f"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"undefined))

# this will return:
# undefined
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#dictitems"&gt;
  &lt;/a&gt;
  dict.items()
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;item()&lt;/code&gt; will return a dictionary’s key and value pairs as a list of tuples. Here is an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
  &lt;span class="s"&gt;"make"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"Mitsubishi"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   
  &lt;span class="s"&gt;"model"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"Lancer"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   
  &lt;span class="s"&gt;"year"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2007&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   
  &lt;span class="s"&gt;"color"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"silver"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;car&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# this will return:
# dict_items([('make', 'Mitsubishi'), ('model', 'Lancer'), ('year', 2007), ('color', 'silver')])
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can iterate over the results with a loop like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# this will return:
# ('make', 'Mitsubishi')
# ('model', 'Lancer')
# ('year', 2007)
# ('color', 'silver')
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#dictkeys"&gt;
  &lt;/a&gt;
  dict.keys()
&lt;/h2&gt;

&lt;p&gt;Use &lt;code&gt;keys()&lt;/code&gt; if you only need the keys inside a dictionary. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
   &lt;span class="s"&gt;"make"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"Mitsubishi"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   
   &lt;span class="s"&gt;"model"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"Lancer"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   
   &lt;span class="s"&gt;"year"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2007&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   
   &lt;span class="s"&gt;"color"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"silver"&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;car&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;   
   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# this will return:
# make
# model
# year
# color
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#dictvalues"&gt;
  &lt;/a&gt;
  dict.values()
&lt;/h2&gt;

&lt;p&gt;To only access the values inside a dictionary, use &lt;code&gt;values()&lt;/code&gt;. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
   &lt;span class="s"&gt;"make"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"Mitsubishi"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   
   &lt;span class="s"&gt;"model"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"Lancer"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   
   &lt;span class="s"&gt;"year"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2007&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   
   &lt;span class="s"&gt;"color"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"silver"&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;car&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;   
   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# this will return:
# Mitsubishi
# Lancer
# 2007
# silver
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#dictpop"&gt;
  &lt;/a&gt;
  dict.pop()
&lt;/h2&gt;

&lt;p&gt;If you want to remove a specific item from a dictionary based on key name, you can use &lt;code&gt;pop()&lt;/code&gt;. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
   &lt;span class="s"&gt;"make"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"Mitsubishi"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   
   &lt;span class="s"&gt;"model"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"Lancer"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   
   &lt;span class="s"&gt;"year"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2007&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   
   &lt;span class="s"&gt;"color"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"silver"&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;car&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"year"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;car&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# this will return:
# {'make': 'Mitsubishi', 'model': 'Lancer', 'color': 'silver'}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#dictpopitem"&gt;
  &lt;/a&gt;
  dict.popitem()
&lt;/h2&gt;

&lt;p&gt;To remove the last item in the dictionary, use &lt;code&gt;popitem()&lt;/code&gt;. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
   &lt;span class="s"&gt;"make"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"Mitsubishi"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   
   &lt;span class="s"&gt;"model"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"Lancer"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   
   &lt;span class="s"&gt;"year"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2007&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   
   &lt;span class="s"&gt;"color"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"silver"&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;car&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;popitem&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# this will return:
# ('color', 'silver')
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;car&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# this will return:
# {'make': 'Mitsubishi', 'model': 'Lancer', 'year': 2007}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#dictsetdefault"&gt;
  &lt;/a&gt;
  dict.setdefault()
&lt;/h2&gt;

&lt;p&gt;If a key doesn’t exist, it returns &lt;code&gt;None&lt;/code&gt; by default. However, you can set the return value through &lt;code&gt;setdefault()&lt;/code&gt;. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
   &lt;span class="s"&gt;"make"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"Mitsubishi"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   
   &lt;span class="s"&gt;"model"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"Lancer"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   
   &lt;span class="s"&gt;"year"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2007&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   
   &lt;span class="s"&gt;"color"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"silver"&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;car&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setdefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"origin"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"undefined"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;car&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setdefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"model"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"undefined"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# this will return:
# undefined
# followed by (because the key exists):
# Lancer
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#dictupdate"&gt;
  &lt;/a&gt;
  dict.update()
&lt;/h2&gt;

&lt;p&gt;To insert an item into a dictionary, use &lt;code&gt;update()&lt;/code&gt;. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
   &lt;span class="s"&gt;"make"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"Mitsubishi"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   
   &lt;span class="s"&gt;"model"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"Lancer"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   
   &lt;span class="s"&gt;"year"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2007&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   
   &lt;span class="s"&gt;"color"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"silver"&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;car&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;"origin"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"Japan"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;car&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# this will return:
# {'make': 'Mitsubishi', 'model': 'Lancer', 'year': 2007, 'origin': 'Japan'}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's basically it. &lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>learning</category>
    </item>
    <item>
      <title>Learning Python-Basic course: Day 7, Exercises and coding challenges⚔️</title>
      <author>Aatmaj</author>
      <pubDate>Wed, 30 Jun 2021 12:02:33 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-basic-course-day-7-exercises-and-coding-challenges-2l2b</link>
      <guid>https://dev.to/aatmaj/learning-python-basic-course-day-7-exercises-and-coding-challenges-2l2b</guid>
      <description>&lt;h2&gt;
  &lt;a href="#welcome-todays-agenda-is-solving-more-interesting-questions-intricate-patterns-and-mindblowing-sequences"&gt;
  &lt;/a&gt;
  Welcome 🖐️ Today's agenda is solving more interesting questions! ❤️ intricate patterns and mind-blowing sequences ✨
&lt;/h2&gt;




&lt;p&gt;Let us now today solve some more questions 😀 on while loops and for loops. 😁 We will look at 2-3 sample questions followed by exercises and a coding challenge ⚔️.&lt;/p&gt;

&lt;p&gt;Sample questions-&lt;/p&gt;

&lt;p&gt;1) Write a program to print Fibonacci numbers.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'0,1,'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;
   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;","&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Simultaneous assignment of values&lt;/strong&gt;&lt;br&gt;
Note the second last line. This is the Python syntax for simultaneous assignment. This is equivalent to using a temp variable like-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This python shortcut comes very very handy while swapping two numbers to&lt;/p&gt;

&lt;p&gt;2) Write a program to display times table from 1-10&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"="&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OUTPUT-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1 * 1 = 1
1 * 2 = 2
1 * 3 = 3
1 * 4 = 4
1 * 5 = 5
1 * 6 = 6
1 * 7 = 7
1 * 8 = 8
1 * 9 = 9
1 * 10 = 10

2 * 1 = 2
2 * 2 = 4
2 * 3 = 6
2 * 4 = 8
2 * 5 = 10
2 * 6 = 12
2 * 7 = 14
2 * 8 = 16
2 * 9 = 18
2 * 10 = 20
.
.
.
. for numbers upto 10
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What such a small amount of code can do in seconds took us years to learn...🤩&lt;/p&gt;

&lt;p&gt;Exercises-&lt;/p&gt;

&lt;p&gt;1)- Modify the factorial program we did in day 4 to error check for zero and negative numbers.(using if-else) &lt;a href="https://github.com/Aatmaj-Zephyr/Learning-Python/blob/15c67abac0cfe0a98dca8aca04feff544f2cc379/Basic/Day%207/Exercise%20solutions/Exercise%201.py"&gt;Answer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2)Write a program to give the following output&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1
121
12321
1234321
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3) Write a program to display &lt;a href="https://www.britannica.com/science/perfect-number#:~:text=Perfect%20number%2C%20a%20positive%20integer,28%2C%20496%2C%20and%208%2C128."&gt;perfect numbers&lt;/a&gt; from a range entered by a user (include 0).&lt;/p&gt;

&lt;p&gt;Coding challenges-⚔️&lt;br&gt;
1) Write a program to display terms of this infinite pattern until 50.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1, 2,2,3,3, 4,4,4,5,5,5,6,6,6, 7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,.....
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Comment your answers below. Let's see who can solve tis one. 🗡️🛡️ Beware, it is harder than it seems....😉&lt;/p&gt;

&lt;p&gt;Answer to this question will be given in tomorrow's session. 🤞 So stay tuned by following me for updates 👍. Please like and comment below 😊&lt;/p&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
