<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Dijkstra's shortest path algorithm</title>
      <author>Aya Bouchiha</author>
      <pubDate>Sun, 11 Jul 2021 19:39:34 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/dijkstra-s-shortest-path-algorithm-2ek0</link>
      <guid>https://dev.to/ayabouchiha/dijkstra-s-shortest-path-algorithm-2ek0</guid>
      <description>&lt;p&gt;Hello, this is #day_29, I'm going to talk about Dijkstra's shortest path algorithm&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#definition-of-dijkstras-shortest-path-algorithm"&gt;
  &lt;/a&gt;
  Definition of Dijkstra's shortest path algorithm
&lt;/h2&gt;

&lt;p&gt;dijkstra's shortest path is an algorithm created by &lt;strong&gt;Dr. Edsger Dijkstra&lt;/strong&gt; for calculating the shortest path between vertices in a weighted graph (&lt;a href="https://dev.to/ayabouchiha/types-of-graph-14ei"&gt;&lt;em&gt;types of graph&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example-of-a-weighted-graph"&gt;
  &lt;/a&gt;
  Example of a weighted graph
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--INUYuIGs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7Q6Op3bB--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k1p94w58z82ji8ynl5d2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--INUYuIGs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7Q6Op3bB--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k1p94w58z82ji8ynl5d2.jpg" alt="weighted graph aya bouchiha"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dijkstras-shortest-path-applications"&gt;
  &lt;/a&gt;
  Dijkstra's shortest path applications
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Road networks&lt;/li&gt;
&lt;li&gt;Electricity lines&lt;/li&gt;
&lt;li&gt;Google maps&lt;/li&gt;
&lt;li&gt;Social networking apps&lt;/li&gt;
&lt;li&gt;Flighting agenda&lt;/li&gt;
&lt;li&gt;Ip routing
&lt;a href="https://www.geeksforgeeks.org/applications-of-dijkstras-shortest-path-algorithm/"&gt;more details&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#dijkstras-shortest-path-implementation-in-python"&gt;
  &lt;/a&gt;
  Dijkstra's shortest path implementation in python
&lt;/h2&gt;

&lt;p&gt;If you are not familiar with Python check this &lt;a href="https://dev.to/aatmaj/launching-the-learning-python-course-5f31"&gt;series&lt;/a&gt; by &lt;a class="mentioned-user" href="https://dev.to/aatmaj"&gt;@aatmaj&lt;/a&gt;
&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dijkstraShortestPathAlgo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nodes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;edges&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;source_indedx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="s"&gt;"""
        code from 
        =&amp;gt; [https://www.youtube.com/watch?v=VnTlW572Sc4]
    """&lt;/span&gt;
    &lt;span class="n"&gt;path_lengths&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'inf'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;nodes&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;path_lengths&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;source_index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;adjacent_nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;:{}&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;nodes&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;w_uv&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;edges&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="n"&gt;adjacent_nodes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;w_uv&lt;/span&gt;
        &lt;span class="n"&gt;adjacent_nodes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;w_uv&lt;/span&gt;
    &lt;span class="n"&gt;temporary_nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;nodes&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;temporary_nodes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;upper_bounds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;path_lengths&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;temporary_nodes&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;upper_bounds&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;upper_bounds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;temporary_nodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;w_uv&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;adjacent_nodes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="n"&gt;path_lengths&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path_lengths&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;path_lengths&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;w_uv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;path_lengths&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=VnTlW572Sc4"&gt;more details...&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references-amp-useful-resources"&gt;
  &lt;/a&gt;
  References &amp;amp; useful resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/dijkstras-shortest-path-algorithm-greedy-algo-7/"&gt;https://www.geeksforgeeks.org/dijkstras-shortest-path-algorithm-greedy-algo-7/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm"&gt;https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/dijkstras-shortest-path-algorithm-visual-introduction/"&gt;https://www.freecodecamp.org/news/dijkstras-shortest-path-algorithm-visual-introduction/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=smHnz2RHJBY"&gt;https://www.youtube.com/watch?v=smHnz2RHJBY&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy coding!!&lt;/p&gt;

</description>
      <category>algorithms</category>
      <category>computerscience</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Getting Started with Express</title>
      <author>Ameni Ben Saada</author>
      <pubDate>Sun, 11 Jul 2021 19:16:10 +0000</pubDate>
      <link>https://dev.to/amenibensaada/getting-started-with-exrpess-4plg</link>
      <guid>https://dev.to/amenibensaada/getting-started-with-exrpess-4plg</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IPzid5aB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvfxmq90jmrfcgxujh00.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IPzid5aB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvfxmq90jmrfcgxujh00.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Node.js is an open-source and cross-platform runtime environment, that allows you to write JavaScript on the server which is on of the most helpful advantages of Node.js since the same programming language can be used for server-side and client-side applications. It also runs on V8 JavaScript engine which makes it highly performant.&lt;/p&gt;

&lt;p&gt;And one of the most popular frameworks for NodeJs is our subject today in this blog: &lt;strong&gt;Express&lt;/strong&gt; Express is written on top of node.js to make writing server-side javascript easier.&lt;/p&gt;

&lt;p&gt;So what we are going to do today is building a very basic REST API. &lt;/p&gt;

&lt;p&gt;Before we start, make sure that you have these if you don't please install them.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Node.js installed. You can install it from &lt;a href="https://nodejs.org/en/"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;An editor that you like working in. I use VS Code, you can install it from &lt;a href="https://code.visualstudio.com/download"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Postman installed. Install it from &lt;a href="https://www.postman.com/"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;First of all, we are going to prepare our work environment.Let's start by creating our folder&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;ameni&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;mkdir&lt;/span&gt; &lt;span class="nx"&gt;our_project&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;ameni&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;our_project&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now use this command to create a new node.js project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;ameni&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;our_project&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All we have to do now is opening our folder in the editor. For VS Code you can use this command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;ameni&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;our_project&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your terminal now should look like this &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xTh2guB9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/knyxsvc2bjxcgmxr8mjn.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xTh2guB9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/knyxsvc2bjxcgmxr8mjn.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Let's start now by installing our Express framework&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;open the terminal and run this command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Now we are going to create a file named &lt;strong&gt;index.js&lt;/strong&gt; and starting our code.So we are going to import express and use express.json and send a Hello world text and finally we exported it!
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello world!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Now we are going to create another file,to keep our code clean, named &lt;strong&gt;server.js .&lt;/strong&gt; We are going to import our app module and created the port which the application will work on and we started or app.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./index&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`App running on &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;...`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's run our server&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In &lt;a href="http://localhost:8000/"&gt;http://localhost:8000/&lt;/a&gt; you will see Hello World &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KdedsUbl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2fv5r5wpw49jokkmag4i.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KdedsUbl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2fv5r5wpw49jokkmag4i.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now what we are going to do is create something more interesting by building a simple application to create, read, update, and delete Person's information.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To do that we are going to use &lt;strong&gt;Post&lt;/strong&gt;, &lt;strong&gt;Get&lt;/strong&gt;, &lt;strong&gt;Patch&lt;/strong&gt;, and &lt;strong&gt;Delete&lt;/strong&gt; methods.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;So, We will create a variable named person Which contains an array of persons&lt;/li&gt;
&lt;li&gt;With the get request, we will retrieve all the persons and send them as a response&lt;/li&gt;
&lt;li&gt;We will use the post request to push a new person to the person array&lt;/li&gt;
&lt;li&gt;The delete Method to delete a person by filtering the person array by person id&lt;/li&gt;
&lt;li&gt;And finally, we will update a person by using the patch request and the person  id
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/person&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/person&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/person/:id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;filtredPerson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;filtredPerson&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;filtredPerson&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;patch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/person/:id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Now to test our code we are going to use Postman&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K0j6hyKv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ahz8w1n8i7cw8xbq3qac.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K0j6hyKv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ahz8w1n8i7cw8xbq3qac.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To add a person we send this post request . &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--urxVZN9T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wp7mqrfuc777lqaum3h1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--urxVZN9T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wp7mqrfuc777lqaum3h1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To get the data we have we sent this request.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kR_RYjpt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e5pkmoolxrugs72xcykw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kR_RYjpt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e5pkmoolxrugs72xcykw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To update the age of this person we sent a patch request.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wDEmZVgN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4kifw9aiivpgxuc1ter.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wDEmZVgN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4kifw9aiivpgxuc1ter.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And finally to delete the data we sent a delete request . &lt;/p&gt;

&lt;p&gt;In all the above, we sent our request in the body now what if we want to use query ?  &lt;/p&gt;

&lt;p&gt;All we have to do is this : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In the code
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/person&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;personId&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;personId&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;In the Postman
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BdL1cAhm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9jdp1njo2jv7ja7ohq0z.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So here we got our data using req.query instead of sending the request in the body.&lt;/p&gt;

&lt;p&gt;And that's it for this blog. I hope you did learn a thing or two from reading and practicing this.&lt;br&gt;
If there's anything wrong with this article, please let me know.I would love to correct and improve it.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>5 Visual Studio Code Hacks That You Will Thank Me For (And They're Not Common Points Like "Install Prettier Extension")</title>
      <author>Mohmed Ishak</author>
      <pubDate>Sun, 11 Jul 2021 18:56:44 +0000</pubDate>
      <link>https://dev.to/ishakmohmed/5-visual-studio-code-hacks-that-you-will-thank-me-for-and-they-re-not-common-points-like-install-prettier-extension-16oa</link>
      <guid>https://dev.to/ishakmohmed/5-visual-studio-code-hacks-that-you-will-thank-me-for-and-they-re-not-common-points-like-install-prettier-extension-16oa</guid>
      <description>&lt;p&gt;Hello coders! You've always heard the same VS Code hacks over and over again like "install Prettier extension to format your code", "press alt + shift + down key to duplicate code", etc. In this article, I'll share some VS Code hacks which I don't usually see being shared around. You owe me a like if this article helps you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-open-files-automatically-in-a-new-tab"&gt;
  &lt;/a&gt;
  [1] Open Files Automatically In A New Tab
&lt;/h3&gt;

&lt;p&gt;Isn't it annoying when you've got file A opened and you want to open file B but when you click file B, file B does open but file A closes? You might double click file B to open in a new tab but does it disappoint you sometimes like it did to me? To overcome this problem, search for "workbench.editor.enablePreview" in your settings and uncheck the option. From now onwards, VS Code will always open files in a new tab.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-change-color-of-comments"&gt;
  &lt;/a&gt;
  [2] Change Color of Comments
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kcn_EhVk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ac5pqbvrs9b1ycf62quc.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kcn_EhVk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ac5pqbvrs9b1ycf62quc.PNG" alt="Mohmed Ishak"&gt;&lt;/a&gt;&lt;br&gt;
Not forcing you, but some colors for comments just hit different. As for me, I prefer this exact green for my comments because it's easier to locate my comments in the codebase. To do this, in your settings.json file, add the following code, or if already exists, delete it and replace with this code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;editor.tokenColorCustomizations&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;comments&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#229977&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="c1"&gt;// change to any color you like&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-more-real-estate"&gt;
  &lt;/a&gt;
  [3] More Real Estate
&lt;/h3&gt;

&lt;p&gt;Sometimes all you want is a larger view of the files, folders, and code. So you might consider zooming out by pressing ctrl + '-'. To zoom in press ctrl + '+'. Plus, press F11 which would hide the taskbar and header of VS Code, giving you more view of VS Code, hence more focus.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-generate-custom-snippet"&gt;
  &lt;/a&gt;
  [4] Generate Custom Snippet
&lt;/h3&gt;

&lt;p&gt;A custom snippet (if you don't know) is a template for code where you would type a few letters on your keyboard and the template/boilerplate code would be displayed which you can work on. If you still don't get it, it's the same thing as typing "rsf" in a React file which would generate a functional component (provided that you have installed the right extension). To make a custom snippet, just head over to this site &lt;a href="https://snippet-generator.app/"&gt;https://snippet-generator.app/&lt;/a&gt; and type your snippet. Be sure to fill up the tab trigger which are the keys that would trigger your snippet. Then copy the snippet it gives you. Come back to VS Code, go to File &amp;gt; Preferences &amp;gt; User Snippets &amp;gt; New Global Snippets (it might be different to navigate to this on a Mac, so Google it if you couldn't locate it). Paste the copied code. That's it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-change-theme-in-vs-code"&gt;
  &lt;/a&gt;
  [5] Change Theme in VS Code
&lt;/h3&gt;

&lt;p&gt;Okay this is an obvious one, but head over to &lt;a href="https://vscodethemes.com/"&gt;https://vscodethemes.com/&lt;/a&gt; and grab a new theme today. They've got a large collection of themes which can be previewed through an eagle's view.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tbRw53Sa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ze36f6et1le4veg2nj6p.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tbRw53Sa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ze36f6et1le4veg2nj6p.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Awesome Solution: Installing packages without root privileges. </title>
      <author>manish srivastava</author>
      <pubDate>Sun, 11 Jul 2021 18:54:49 +0000</pubDate>
      <link>https://dev.to/manishfoodtechs/awesome-solution-installing-packages-without-root-privileges-bl4</link>
      <guid>https://dev.to/manishfoodtechs/awesome-solution-installing-packages-without-root-privileges-bl4</guid>
      <description>&lt;p&gt;Pkget used for installing packages when you dont have root and/or sudo it's as simple as that really...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;wget https://raw.githubusercontent.com/0x00009b/pkget/master/pget &amp;amp;&amp;amp; chmod +x pget
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then simply&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;./pget &amp;lt;package_name&amp;gt;
#example: ./pget nmap
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Works with:&lt;br&gt;
This tool is only for debian based systems and will only work with apt for you linux n00bs here is a list of some common debian based distos&lt;br&gt;
Debian&lt;br&gt;
Ubuntu&lt;br&gt;
Parrot OS&lt;br&gt;
Kali linux&lt;br&gt;
Linux Lite&lt;/p&gt;

&lt;p&gt;Thanks for this &lt;a href="https://github.com/0x00009b"&gt;https://github.com/0x00009b&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;👍🙏&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#click-here-for-joining-my-team"&gt;
  &lt;/a&gt;
  &lt;a href="https://forms.gle/pSCALuEWHus3pg9F6"&gt;Click here for joining my team&lt;/a&gt;
&lt;/h2&gt;

</description>
      <category>devops</category>
      <category>linux</category>
      <category>ubuntu</category>
      <category>llinux</category>
    </item>
    <item>
      <title>7 subjects (and GitHub repositories) to become a better Go Developer</title>
      <author>Avelino</author>
      <pubDate>Sun, 11 Jul 2021 18:43:05 +0000</pubDate>
      <link>https://dev.to/avelino/7-subjects-and-github-repositories-to-become-a-better-go-developer-3kb3</link>
      <guid>https://dev.to/avelino/7-subjects-and-github-repositories-to-become-a-better-go-developer-3kb3</guid>
      <description>&lt;p&gt;With the high adoption of the Go language by developers and large companies, this has led companies to search for engineers with experience in Go.&lt;/p&gt;

&lt;p&gt;This can create a lot of pressure of what to study to become a better engineer, this is very personal, it requires planning of what and when to study other subjects (even outside the engineering area).&lt;/p&gt;

&lt;p&gt;In this blogpost some topics (with repositories and links) that I think are important to know in order to become an engineer person with even better Go knowledge, follow good practices for writing code, concepts of code structure (usually using design pattern), scalable code and clean code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#style-guide"&gt;
  &lt;/a&gt;
  Style guide
&lt;/h2&gt;

&lt;p&gt;I can't list only one link (repository) for this topic, I would recommend you to read for these 3 links and bring to your team's day to day life what best fits their reality — remember to use as base the official language documentation and add what makes sense from the other links&lt;/p&gt;

&lt;p&gt;&lt;a href="https://golang.org/doc/effective_go"&gt;Effective Go&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/uber-go"&gt;
        uber-go
      &lt;/a&gt; / &lt;a href="https://github.com/uber-go/guide"&gt;
        guide
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The Uber Go Style Guide.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;This repository holds the &lt;a href="https://raw.githubusercontent.com/uber-go/guide/master/style.md"&gt;Uber Go Style Guide&lt;/a&gt;, which documents
patterns and conventions used in Go code at Uber.&lt;/p&gt;
&lt;h2&gt;
Style Guide&lt;/h2&gt;
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/uber-go/guide/master/style.md"&gt;Uber Go Style Guide&lt;/a&gt; for the style guide.&lt;/p&gt;
&lt;h2&gt;
Translations&lt;/h2&gt;
&lt;p&gt;We are aware of the following translations of this guide by the Go community.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;中文翻译&lt;/strong&gt; (Chinese): &lt;a href="https://github.com/xxjwxc/uber_go_guide_cn"&gt;xxjwxc/uber_go_guide_cn&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;한국어 번역&lt;/strong&gt; (Korean): &lt;a href="https://github.com/TangoEnSkai/uber-go-style-guide-kr"&gt;TangoEnSkai/uber-go-style-guide-kr&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;日本語訳&lt;/strong&gt; (Japanese): &lt;a href="https://github.com/knsh14/uber-style-guide-ja"&gt;knsh14/uber-style-guide-ja&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Traducción al Español&lt;/strong&gt; (Spanish): &lt;a href="https://github.com/friendsofgo/uber-go-guide-es"&gt;friendsofgo/uber-go-guide-es&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;แปลภาษาไทย&lt;/strong&gt; (Thai): &lt;a href="https://github.com/pallat/uber-go-style-guide-th"&gt;pallat/uber-go-style-guide-th&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Tradução em português&lt;/strong&gt; (Portuguese): &lt;a href="https://github.com/lucassscaravelli/uber-go-guide-pt"&gt;lucassscaravelli/uber-go-guide-pt&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Tłumaczenie polskie&lt;/strong&gt; (Polish): &lt;a href="https://github.com/DamianSkrzypczak/uber-go-guide-pl"&gt;DamianSkrzypczak/uber-go-guide-pl&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Русский перевод&lt;/strong&gt; (Russian): &lt;a href="https://github.com/sau00/uber-go-guide-ru"&gt;sau00/uber-go-guide-ru&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you have a translation, feel free to submit a PR adding it to the list.&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/uber-go/guide"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;&lt;a href="https://google.github.io/styleguide/"&gt;Google Style Guides&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.gitlab.com/ee/development/go_guide/"&gt;Go standards and style guidelines | GitLab&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#best-practices"&gt;
  &lt;/a&gt;
  Best Practices
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://twitter.com/francesc"&gt;Francesc Campoy&lt;/a&gt; deu uma excelente palestra no OSCON de 2015 sobre esse assunto, onde abordou as melhores práticas para se desenvolver software usando a linguagem Go.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/8D3Vmm1BGoY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://talks.golang.org/2013/bestpractices.slide#1"&gt;Twelve Go Best Practices&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#algorithms-implemented"&gt;
  &lt;/a&gt;
  Algorithms Implemented
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/TheAlgorithms"&gt;
        TheAlgorithms
      &lt;/a&gt; / &lt;a href="https://github.com/TheAlgorithms/Go"&gt;
        Go
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Algorithms Implemented in GoLang
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
The Algorithms - Go&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitpod.io/#https://github.com/TheAlgorithms/Go" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5a5932d597950fc5cf0b9b9977274c3fba64bedc8a46431e0ce34d244a27326b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f476974706f642d52656164792d2d746f2d2d436f64652d626c75653f6c6f676f3d676974706f64267374796c653d666c61742d737175617265" alt="Gitpod Ready-to-Code"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://github.com/TheAlgorithms/Go/workflows/golangci-lint/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W9o-qlTo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/TheAlgorithms/Go/workflows/golangci-lint/badge.svg" alt="golangci-lint"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/cf841c645af68fee55883d7c96217a577272406c8a61e37ff977e1144775b624/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f546865416c676f726974686d732f476f2e7376673f6c6162656c3d5265706f25323073697a65267374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/cf841c645af68fee55883d7c96217a577272406c8a61e37ff977e1144775b624/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f546865416c676f726974686d732f476f2e7376673f6c6162656c3d5265706f25323073697a65267374796c653d666c61742d737175617265" alt=""&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://github.com/TheAlgorithms/Go/workflows/update_directory_md/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uk0yUA5Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/TheAlgorithms/Go/workflows/update_directory_md/badge.svg" alt="update_directory_md"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/c7MnfGFGa6" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1de46c8a86db708e5b8709e4c0f6c38f82e38e3bb26e94e256a1c8a123eee549/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3830383034353932353535363638323738322e7376673f6c6f676f3d646973636f726426636f6c6f72423d373238394441267374796c653d666c61742d737175617265" alt="Discord chat"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h3&gt;
Algorithms implemented in Go (for education)&lt;/h3&gt;
&lt;p&gt;The repository is a collection of open-source implementation of a variety of algorithms implemented in Go and licensed under &lt;a href="https://raw.githubusercontent.com/TheAlgorithms/Go/master/LICENSE"&gt;MIT License&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Read our &lt;a href="https://raw.githubusercontent.com/TheAlgorithms/Go/master/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; before you contribute.&lt;/p&gt;
&lt;h2&gt;
List of Algorithms&lt;/h2&gt;
&lt;p&gt;See our &lt;a href="https://raw.githubusercontent.com/TheAlgorithms/Go/master/DIRECTORY.md"&gt;directory&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/TheAlgorithms/Go"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;This repository contains Go based examples of many popular algorithms and data structures.&lt;/p&gt;

&lt;p&gt;Each algorithm and data structure has its own separate README with related explanations and links for further reading.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#clean-code"&gt;
  &lt;/a&gt;
  Clean Code
&lt;/h2&gt;

&lt;p&gt;A reference for the Go community that covers the fundamentals of writing clean code and discusses concrete refactoring examples specific to Go.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Pungyeon"&gt;
        Pungyeon
      &lt;/a&gt; / &lt;a href="https://github.com/Pungyeon/clean-go-article"&gt;
        clean-go-article
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A reference for the Go community that covers the fundamentals of writing clean code and discusses concrete refactoring examples specific to Go.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Clean Go Code&lt;/h1&gt;
&lt;h2&gt;
Preface: Why Write Clean Code?&lt;/h2&gt;
&lt;p&gt;This document is a reference for the Go community that aims to help developers write cleaner code. Whether you're working on a personal project or as part of a larger team, writing clean code is an important skill to have. Establishing good paradigms and consistent, accessible standards for writing clean code can help prevent developers from wasting many meaningless hours on trying to understand their own (or others') work.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;We don’t read code, we &lt;b&gt;decode&lt;/b&gt; it – Peter Seibel&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As developers, we're sometimes tempted to write code in a way that's convenient for the time being without regard for best practices; this makes code reviews and testing more difficult. In a sense, we're &lt;em&gt;encoding&lt;/em&gt;—and, in doing so, making it more difficult for others to decode our work. But we want our code to be usable, readable, and maintainable. And that requires…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Pungyeon/clean-go-article"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#clean-architecture"&gt;
  &lt;/a&gt;
  Clean Architecture
&lt;/h2&gt;

&lt;p&gt;In his book “Clean Architecture: A Craftsman’s Guide to Software Structure and Design” famous author Robert “Uncle Bob” Martin presents an architecture with some important points like testability and independence of frameworks, databases and interfaces.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/bxcodec"&gt;
        bxcodec
      &lt;/a&gt; / &lt;a href="https://github.com/bxcodec/go-clean-arch"&gt;
        go-clean-arch
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Go (Golang) Clean Architecture based on Reading Uncle Bob's Clean Architecture
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
go-clean-arch&lt;/h1&gt;
&lt;h2&gt;
Changelog&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;v1&lt;/strong&gt;: checkout to the &lt;a href="https://github.com/bxcodec/go-clean-arch/tree/v1"&gt;v1 branch&lt;/a&gt; &lt;br&gt;
Proposed on 2017, archived to v1 branch on 2018 &lt;br&gt;
Desc: Initial proposal by me. The story can be read here: &lt;a href="https://medium.com/@imantumorang/golang-clean-archithecture-efd6d7c43047" rel="nofollow"&gt;https://medium.com/@imantumorang/golang-clean-archithecture-efd6d7c43047&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;v2&lt;/strong&gt;: checkout to the &lt;a href="https://github.com/bxcodec/go-clean-arch/tree/v2"&gt;v2 branch&lt;/a&gt; &lt;br&gt;
Proposed on 2018, archived to v2 branch on 2020 &lt;br&gt;
Desc: Improvement from v1. The story can be read here: &lt;a href="https://medium.com/@imantumorang/trying-clean-architecture-on-golang-2-44d615bf8fdf" rel="nofollow"&gt;https://medium.com/@imantumorang/trying-clean-architecture-on-golang-2-44d615bf8fdf&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;v3&lt;/strong&gt;: master branch &lt;br&gt;
Proposed on 2019, merged to master on 2020. &lt;br&gt;
Desc: Introducing Domain package, the details can be seen on this PR &lt;a href="https://github.com/bxcodec/go-clean-arch/pull/21"&gt;#21&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Description&lt;/h2&gt;
&lt;p&gt;This is an example of implementation of Clean Architecture in Go (Golang) projects.&lt;/p&gt;
&lt;p&gt;Rule of Clean Architecture by Uncle Bob&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Independent of Frameworks. The architecture does not depend on the existence of some library of feature laden software. This allows you to use such frameworks as tools, rather than having to cram your system into their limited constraints.&lt;/li&gt;
&lt;li&gt;Testable. The business rules can be tested without the…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/bxcodec/go-clean-arch"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://twitter.com/eminetto"&gt;Elton Minetto&lt;/a&gt; has written two excellent blogposts on the subject:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://eminetto.medium.com/clean-architecture-using-golang-b63587aa5e3f"&gt;Clean Architecture using Golang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://eltonminetto.dev/en/post/2020-07-06-clean-architecture-2years-later/"&gt;Clean Architecture, 2 years later&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#awesome-go"&gt;
  &lt;/a&gt;
  Awesome Go
&lt;/h2&gt;

&lt;p&gt;I couldn't leave out the awesome-go project (which I started in 2014 and today many contributors help me maintain)&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/avelino"&gt;
        avelino
      &lt;/a&gt; / &lt;a href="https://github.com/avelino/awesome-go"&gt;
        awesome-go
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A curated list of awesome Go frameworks, libraries and software
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/avelino/awesome-go/raw/master/tmpl/assets/logo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sDprQZtq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/avelino/awesome-go/raw/master/tmpl/assets/logo.png" alt="awesome-go" title="awesome-go"&gt;&lt;/a&gt; Awesome Go&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.com/avelino/awesome-go" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5e9e9b3df118887a7c39908d4bf4b2034694d111f0be12d90e3415d7f4e882b2/68747470733a2f2f7472617669732d63692e636f6d2f6176656c696e6f2f617765736f6d652d676f2e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;&lt;img src="https://camo.githubusercontent.com/abb97269de2982c379cbc128bba93ba724d8822bfbe082737772bd4feb59cb54/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f617765736f6d652f643733303566333864323966656437386661383536353265336136336531353464643865383832392f6d656469612f62616467652e737667" alt="Awesome"&gt;&lt;/a&gt;
&lt;a href="http://gophers.slack.com/messages/awesome" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b6f0a177b8a98ed13425a0b9dd119f24983c735e5d5c5b5ef6dbefacf16b6b84/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6a6f696e2d75732532306f6e253230736c61636b2d677261792e7376673f6c6f6e6743616368653d74727565266c6f676f3d736c61636b26636f6c6f72423d726564" alt="Slack Widget"&gt;&lt;/a&gt;
&lt;a href="https://app.netlify.com/sites/awesome-go/deploys" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9550a643d86ace967dba246113078ec50ffdbf03ac16d71684786ef81d9e5225/68747470733a2f2f6170692e6e65746c6966792e636f6d2f6170692f76312f6261646765732f38336136646362652d306461362d343333652d623538362d6636383130393238366264352f6465706c6f792d737461747573" alt="Netlify Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.producthunt.com/posts/awesome-go?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-awesome-go" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ecd51497915779e2875cd5267606b26f5acbfc07154cd536c8735babdbeb581b/68747470733a2f2f6170692e70726f6475637468756e742e636f6d2f776964676574732f656d6265642d696d6167652f76312f66656174757265642e7376673f706f73745f69643d323931353335267468656d653d6c69676874" alt="awesome-go - Curated list awesome Go frameworks, libraries and software | Product Hunt" width="250" height="54"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Sponsorships&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://m.do.co/c/bd3b723c0a36?utm_medium=opensource&amp;amp;utm_source=awesome-go" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8b91494fce850c947b7c122a0b1211283e48b787c94ec3d19479673544d5dfb7/68747470733a2f2f6176656c696e6f2e72756e2f73706f6e736f72732f646f5f6c6f676f5f686f72697a6f6e74616c5f626c75652d3231302e706e67" alt="Digital Ocean"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;We have no monthly cost&lt;/strong&gt;&lt;em&gt;, but we have employees &lt;strong&gt;working hard&lt;/strong&gt; to maintain the Awesome Go, with money raised we can repay the effort of each person involved! All billing and distribution will be open to the entire community.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A curated list of awesome Go frameworks, libraries and software. Inspired by &lt;a href="https://github.com/vinta/awesome-python"&gt;awesome-python&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;
Contributing&lt;/h3&gt;
&lt;p&gt;Please take a quick gander at the &lt;a href="https://github.com/avelino/awesome-go/blob/master/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt; first. Thanks to all &lt;a href="https://github.com/avelino/awesome-go/graphs/contributors"&gt;contributors&lt;/a&gt;; you rock!&lt;/p&gt;
&lt;h4&gt;
&lt;em&gt;If you see a package or project here that is no longer maintained or is not a good fit, please submit a pull request to improve this file. Thank you!&lt;/em&gt;
&lt;/h4&gt;
&lt;h3&gt;
Contents&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#awesome-go"&gt;Awesome Go&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#audio-and-music"&gt;Audio and Music&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#authentication-and-oauth"&gt;Authentication and OAuth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#bot-building"&gt;Bot Building&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#build-automation"&gt;Build Automation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#command-line"&gt;Command Line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#continuous-integration"&gt;Continuous Integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#css-preprocessors"&gt;CSS Preprocessors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#data-structures"&gt;Data Structures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#database"&gt;Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#database-drivers"&gt;Database Drivers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#date-and-time"&gt;Date and Time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#distributed-systems"&gt;Distributed Systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#dynamic-dns"&gt;Dynamic DNS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#email"&gt;Email&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#embeddable-scripting-languages"&gt;Embeddable Scripting Languages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#error-handling"&gt;Error Handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#file-handling"&gt;File Handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#financial"&gt;Financial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#forms"&gt;Forms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#functional"&gt;Functional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#game-development"&gt;Game Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/avelino/awesome-go"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;A collection of awesome Go libraries and resources. This repository contains a list of variety of frameworks, template engines, articles and post, documentations, reactive and functional programming and much more which will increase your resourcefulness and might also help you to choose the tech stack for your next projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-guideline"&gt;
  &lt;/a&gt;
  Project Guideline
&lt;/h2&gt;

&lt;p&gt;This is a complicated subject, there is no standard that will work perfectly for what you are developing, I recommend understanding the concept of project architecture (not only Go) and together with your team understand what works for you, even though there are thousands of books to give you knowledge about the subject I recommend putting your hands in the code and allow you to make mistakes, it is the best way to evolve.&lt;/p&gt;

&lt;p&gt;Read this content before any other&lt;/p&gt;

&lt;p&gt;&lt;a href="https://golang.org/doc/code"&gt;How to Write Go Code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that you have read the previous link I will recommend a controversial repository by its name, it is not "Golang standards project layout", but there is a project structure that can help in the development of a new project - understand what makes sense for you (and your team), what doesn't, just ignore it.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/golang-standards"&gt;
        golang-standards
      &lt;/a&gt; / &lt;a href="https://github.com/golang-standards/project-layout"&gt;
        project-layout
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Standard Go Project Layout
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Standard Go Project Layout&lt;/h1&gt;
&lt;p&gt;Translations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-standards/project-layout/master/README_ko.md"&gt;한국어 문서&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-standards/project-layout/master/README_zh.md"&gt;简体中文&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-standards/project-layout/master/README_zh-TW.md"&gt;正體中文&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/golang-standards/project-layout/master/README_zh-CN.md"&gt;简体中文&lt;/a&gt; - ???&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-standards/project-layout/master/README_fr.md"&gt;Français&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-standards/project-layout/master/README_ja.md"&gt;日本語&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-standards/project-layout/master/README_ptBR.md"&gt;Portuguese&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-standards/project-layout/master/README_es.md"&gt;Español&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-standards/project-layout/master/README_ro.md"&gt;Română&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-standards/project-layout/master/README_ru.md"&gt;Русский&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-standards/project-layout/master/README_tr.md"&gt;Türkçe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Overview&lt;/h2&gt;
&lt;p&gt;This is a basic layout for Go application projects. It's &lt;strong&gt;&lt;code&gt;not an official standard defined by the core Go dev team&lt;/code&gt;&lt;/strong&gt;; however, it is a set of common historical and emerging project layout patterns in the Go ecosystem. Some of these patterns are more popular than others. It also has a number of small enhancements along with several supporting directories common to any large enough real world application.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;If you are trying to learn Go or if you are building a PoC or a simple project for yourself this project layout is an overkill. Start with something really simple instead (a single &lt;/code&gt;main.go&lt;code&gt;file and&lt;/code&gt;go.mod&lt;code&gt; is more than enough).&lt;/code&gt;&lt;/strong&gt; As your project grows keep in mind that it'll be important to make sure your code is well structured…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/golang-standards/project-layout"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/golang-standards/project-layout/issues/117"&gt;Read why I said this project is controversial&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;strong&gt;Vote Of Thanks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Thank you so much for reading this post and I hope you find these repositories as useful as I do and will help you to become better go developer. Feel Free to give any suggestions and if you like my work you can follow me on &lt;a href="https://twitter.com/avelinorun"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>beginners</category>
      <category>go</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Spaceduck For vscode - An intergalactic space theme</title>
      <author>Youssef Bouzekri</author>
      <pubDate>Sun, 11 Jul 2021 18:18:40 +0000</pubDate>
      <link>https://dev.to/yusefbouzekri/spaceduck-for-vscode-an-intergalactic-space-theme-5dc1</link>
      <guid>https://dev.to/yusefbouzekri/spaceduck-for-vscode-an-intergalactic-space-theme-5dc1</guid>
      <description>&lt;p&gt;I am very exited to share the vscode theme I have been working on for a while - &lt;em&gt;Spaceduck for VScode&lt;/em&gt; 🎉 ! if you want to feel like you are in space when starring at a computer then this is the theme for you ! if you are interested in using this theme, you can find it in the &lt;a href="https://marketplace.visualstudio.com/items?itemName=YoussefBouzekri.spaceduck"&gt;vscode marketplace&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#screenshots"&gt;
  &lt;/a&gt;
  Screenshots
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3JyuPCnn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rcnpyda8vggt6scj9t17.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3JyuPCnn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rcnpyda8vggt6scj9t17.png" alt="HTML screenshot"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ons92L2K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pyncyd1qc82t92dbk0o7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ons92L2K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pyncyd1qc82t92dbk0o7.png" alt="image"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OXjPRLaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iiueb1riyg7wthwvo78s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OXjPRLaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iiueb1riyg7wthwvo78s.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#want-to-use-spaceduck-elsewhere-"&gt;
  &lt;/a&gt;
  Want to use spaceduck elsewhere ?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/pineapplegiant/spaceduck"&gt;Vim&lt;/a&gt; (Maintained by Guillermo Rodriguez)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bigpick/spaceduck-atom-ui"&gt;Atom&lt;/a&gt; (Maintained by George Pickering)&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>vscode</category>
      <category>showdev</category>
      <category>code</category>
      <category>spaceduck</category>
    </item>
    <item>
      <title>Lessons When Scaling From 0 - 130 Devs w/ Kirby Frugia of MURAL</title>
      <author>Conor Bronsdon</author>
      <pubDate>Sun, 11 Jul 2021 18:18:26 +0000</pubDate>
      <link>https://dev.to/linearb/lessons-when-scaling-from-0-130-devs-w-kirby-frugia-of-mural-22e4</link>
      <guid>https://dev.to/linearb/lessons-when-scaling-from-0-130-devs-w-kirby-frugia-of-mural-22e4</guid>
      <description>&lt;p&gt;MURAL has gone through &lt;strong&gt;enormous&lt;/strong&gt; growth in the past two years and Kirby Frugia, VP of Engineering, joins the &lt;a href="https://devinterrupted.com/podcast/lessons-when-scaling-from-0-130-devs/"&gt;Dev Interrupted&lt;/a&gt; podcast to discuss the ins and outs of rapidly scaling engineering organizations. We go through the entire 0 to 100+ developer scale-up journey, dig into how he keeps the flow of information stable across teams, as well as the open source methods he uses to help onboard new employees.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#listen-to-the-full-episode"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Listen to the full episode&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/7tOPSSva5QsFrHqXTj34zC"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#episode-highlights-include"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Episode Highlights include:&lt;/strong&gt;
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;How an engineering organization changes after its first funding round&lt;/li&gt;
&lt;li&gt;What it means to go from 0 to 130 devs and how to lead this change successfully&lt;/li&gt;
&lt;li&gt;The open source methods Kirby uses at MURAL to onboard new team members&lt;/li&gt;
&lt;li&gt;Pitfalls to avoid when scaling up an engineering organization&lt;/li&gt;
&lt;li&gt;How to think about visibility and metrics as you scale&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/gZgqxTQkrBM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#join-the-dev-interrupted-discord-server"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Join the Dev Interrupted Discord Server&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;With over 1200 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No sales people allowed. &lt;a href="https://discord.gg/tpkmwM6c3g"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" alt="Join the Dev Interrupted Discord Community!"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>scaling</category>
      <category>leadership</category>
      <category>opensource</category>
      <category>growth</category>
    </item>
    <item>
      <title>6 practical ways to keep procrastination at bay</title>
      <author>Akshaya Venkatesh</author>
      <pubDate>Sun, 11 Jul 2021 18:15:58 +0000</pubDate>
      <link>https://dev.to/venkyakshaya/6-practical-ways-to-keep-procrastination-at-bay-284n</link>
      <guid>https://dev.to/venkyakshaya/6-practical-ways-to-keep-procrastination-at-bay-284n</guid>
      <description>&lt;p&gt;This blog talks about 6 simple yet effective way to minimise procrastination. &lt;/p&gt;

&lt;p&gt;Procrastinating simply put, means that you're putting off something important in order to do something fun. It does not apply just to work such as academics. You could be "procrastinating" anything -  from simple things like catching up with friends or cleaning your room  -  to much more serious things like applying for a new job or doing a project that will really help your career. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZvmGz9UI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hq7gabnff3tza7fpli4f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZvmGz9UI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hq7gabnff3tza7fpli4f.png" alt="Procrastination cycle"&gt;&lt;/a&gt;&lt;br&gt;
I found myself doing this a lot and sought to understand the decisions that revolve around procrastination. This led me to find the &lt;strong&gt;video that changed my life&lt;/strong&gt; -  &lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=arj7oStGLkU&amp;amp;t=3s"&gt;Inside the mind of a master procrastinator by Tim Urban.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I strongly recommend this video to anyone who is reading this. It will help you understand why you do things or take decisions a certain way. After understanding what I was doing wrong I decided to make some changes to my approach to getting work done. I've listed them below hoping it will be of help.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-dont-have-a-plan-b"&gt;
  &lt;/a&gt;
  1. Don't have a "Plan B"
&lt;/h3&gt;

&lt;p&gt;Having a plan B is built-in when you're a procrastinator. Whenever you make plans you keep in mind, there is an easier and less effective alternative in case you fail or not do it at all. So lose your plan B. &lt;strong&gt;You will not procrastinate if there is no backup plan.&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QLPw2N2_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky812082eq2quse3z9jc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QLPw2N2_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky812082eq2quse3z9jc.gif" alt="President Obama saying No plan B"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-dont-wait-for-the-perfect-moment"&gt;
  &lt;/a&gt;
  2. Don't wait for the perfect moment
&lt;/h3&gt;

&lt;p&gt;Have you done this? 👉 "Its 9:45 now, hmm... let me start at 10:00" (Why? simply because 10:00 is a round figure - THIS IS AN EXCUSE!!) This dangerous thought process has been my biggest enemy and every procrastinator is guilty of doing it on a daily basis. &lt;strong&gt;Waiting for the right moment is basically giving an excuse&lt;/strong&gt; for not starting something. Avoid this thought(not easy but surely possible). Start then and there.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AdMy3xyU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jke6oq535dkvtm37mkzf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AdMy3xyU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jke6oq535dkvtm37mkzf.gif" alt="Do not wait - Just Do gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-pixellate-the-big-picture-and-reward-yourself"&gt;
  &lt;/a&gt;
  3. Pixellate the big picture and reward yourself
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Split the big picture into tiny pieces.&lt;/strong&gt; When you are trying to get a big task done - you don't know where to start, you have a lot of questions or you simply feel nervous about the outcomes, then re-watching a Netflix show may seem like a better option. However, breaking it down and finishing of one piece at a time will get rid of the feeling of overwhelm.&lt;br&gt;
 &lt;strong&gt;Put down a checklist( - use an app or pen and paper to actually jot it down) the multiple small piece.&lt;/strong&gt; Every time you complete a tiny task, scored it off of the list. This will give you a sense of accomplishment that'll drive you to the finish.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LvLBkV6D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t11jfv1t135goknz93kd.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LvLBkV6D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t11jfv1t135goknz93kd.gif" alt="Person checking off a todo list"&gt;&lt;/a&gt;&lt;br&gt;
It can get tedious and boring when you need to finish work that's gonna take multiple hours straight. In such cases, use the split-up technique and &lt;strong&gt;reward yourself each time you finish&lt;/strong&gt; a couple of subtasks or a target you've set for yourself.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AFReKz2k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8nvwuimxis6yakgppmfh.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AFReKz2k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8nvwuimxis6yakgppmfh.gif" alt="Treat yourself gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-tell-some-one-about-your-plans"&gt;
  &lt;/a&gt;
  4. Tell some one about your plans
&lt;/h3&gt;

&lt;p&gt;This technique may sound unconventional but it is my personal favourite because it works especially &lt;strong&gt;when there's something new you want to try&lt;/strong&gt; but just can't find the motivation to do or tend to forget about it. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tell someone about what you're gonna do, every time &lt;em&gt;they follow up&lt;/em&gt; you will be reminded and you will actually end up doing it.&lt;/li&gt;
&lt;li&gt;Talk to or read about &lt;em&gt;someone who has already done&lt;/em&gt; what you are about to try - their journey will inspire you to do it.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2-hpB_O0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ltpfhdwqb5uitdgljjl1.gif" alt="Person motivating kid and telling them you can do it"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#5-imagine-the-right-outcome"&gt;
  &lt;/a&gt;
  5. Imagine the right outcome
&lt;/h3&gt;

&lt;p&gt;Sometimes, the outcome of your work or task may make you nervous enough to stop you from trying it. This technique comes in handy for such cases. Take the time to imagine that you have done it, you have accomplished your goal. Tell the right outcome to yourself - "I wrote a blog on my new app and it was very well received." instead of "What if no one reads my blog?" because one mediocre blog is better than no blog at all.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TU0eEKpx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fcypl4zqzt1wahszux35.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TU0eEKpx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fcypl4zqzt1wahszux35.gif" alt="Person celebrating a win"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-change-your-environment"&gt;
  &lt;/a&gt;
  6. Change your environment
&lt;/h3&gt;

&lt;p&gt;Sometimes simply &lt;strong&gt;moving to a different environment can make you more productive&lt;/strong&gt; and help you get work done. As someone who is used to sitting at a work desk, I find that sitting outside my house with fresh air helps me finish work faster.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IHLdjIc8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z7gwz2as57c3hy1bgz2p.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IHLdjIc8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z7gwz2as57c3hy1bgz2p.gif" alt="Person working near a pool"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This concludes my take on keeping procrastination at bay. Please do share your thoughts and any ideas that have helped you minimise procrastination (I would love to try them out) or leave feedback in the comments section. You can also find me on &lt;a href="https://twitter.com/venkyakshaya"&gt;Twitter&lt;/a&gt;. Thanks for reading!&lt;/p&gt;

</description>
      <category>devjournal</category>
      <category>productivity</category>
      <category>discuss</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Make a Discord bot in just 30 lines of code. </title>
      <author>Shreyas Pahune</author>
      <pubDate>Sun, 11 Jul 2021 18:02:51 +0000</pubDate>
      <link>https://dev.to/shreyazz/make-a-discord-bot-in-just-30-lines-of-code-44el</link>
      <guid>https://dev.to/shreyazz/make-a-discord-bot-in-just-30-lines-of-code-44el</guid>
      <description>&lt;p&gt;Hey everyone 👋🏻, today we are going to make a discord bot 🤖 which will send gifs according to the user &lt;strong&gt;in just 30 lines of code!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The way this bot will work is, if you write &lt;code&gt;.gif happy&lt;/code&gt; then the bot will send a random happy gif.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are we going to use to build this mini-project:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JavaScript&lt;/li&gt;
&lt;li&gt;NPM Packages:

&lt;ul&gt;
&lt;li&gt;Discord.js&lt;/li&gt;
&lt;li&gt;DOTENV&lt;/li&gt;
&lt;li&gt;node-fetch&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Okay so let's get started 🎉!!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#steps-"&gt;
  &lt;/a&gt;
  Steps :
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;We have to go to the &lt;a href="https://discord.com/developers/applications"&gt;discord developer portal&lt;/a&gt; and create a new application.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R9pYT03b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d7zg9nzgm77funm73znr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R9pYT03b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d7zg9nzgm77funm73znr.png" alt="portal"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Then you have to create a new application ☝🏻. &lt;code&gt;(the blue button on top-right corner)&lt;/code&gt; .&lt;/li&gt;
&lt;li&gt;Give a name to your application.&lt;/li&gt;
&lt;li&gt;Then on the left hand side, click on bot👇🏻 .&lt;/li&gt;
&lt;li&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OWydSSKY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/erzhg0zi8ykpiewhbd5g.PNG" alt="second"&gt;&lt;/li&gt;
&lt;li&gt;After clicking on bot, now click on &lt;code&gt;Add Bot&lt;/code&gt; on the right hand side, and after this step you will have a screen like this 👇🏻.&lt;/li&gt;
&lt;li&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1N4yaK4T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w1ryr6lckw6gvtg7kqny.PNG" alt="third"&gt;&lt;/li&gt;
&lt;li&gt;Now the Token is something which you have to keep a secret and not reveal anywhere or to anyone.&lt;/li&gt;
&lt;li&gt;If you reveal it by mistake, no worries just regenerate it, but make sure you don't or else someone can take over your bot.&lt;/li&gt;
&lt;li&gt;Now we have to decide what permissions does our bot need, and after deciding this, just head to OAuth2 section on the right hand side of your screen.&lt;/li&gt;
&lt;li&gt;You will have a screen when many check boxes, and you have to click on the checkbox which says &lt;code&gt;bot&lt;/code&gt; 👇🏻.&lt;/li&gt;
&lt;li&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mzJm8_D_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lijrp59d102ui3r06idc.PNG" alt="four"&gt;&lt;/li&gt;
&lt;li&gt;Then click on the permission you have to give to the bot.&lt;/li&gt;
&lt;li&gt;After that click on the link and copy it, after that paste it into a new tab and authorize it to add it to a new server.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now we just have to code it!&lt;/p&gt;

&lt;p&gt;Before explaining the code, let me explain you the folder structure 👇🏻. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4Lhde7OA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q82kix2zwih2msu2qp5w.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4Lhde7OA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q82kix2zwih2msu2qp5w.PNG" alt="folder"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;There is a folder called &lt;code&gt;src&lt;/code&gt; in which we have a main file called &lt;code&gt;bot.js&lt;/code&gt; in which we are going to code our bot.&lt;/li&gt;
&lt;li&gt;Okay so you can see that there are two files and a folder, named as &lt;code&gt;package-lock.json&lt;/code&gt;, &lt;code&gt;package.json&lt;/code&gt; and &lt;code&gt;node_modules&lt;/code&gt; respectively, they are basically of node packages and their information.&lt;/li&gt;
&lt;li&gt;There is also a &lt;code&gt;.env&lt;/code&gt; file but we will discuss about it later in this blog.&lt;/li&gt;
&lt;li&gt;Okay so we have to use 3 packages to make a discord bot, they are as follows:

&lt;ol&gt;
&lt;li&gt;discord.js (&lt;code&gt;npm i discord.js&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;dotenv (&lt;code&gt;npm i dotenv&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;node-fetch (&lt;code&gt;npm i node-fetch&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;Now using this image as my reference, I am going to explain the code.&lt;/li&gt;
&lt;li&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z26av6Y9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4t8atty7rujrytdy4wyv.png" alt="code"&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As you can see ☝🏻, there are only 30 lines of code! How amazing it that?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Your own discord bot 🤖 in just 30 lines of code!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Okay so the first and the third line of code are the import  statements which can also be written as :&lt;/p&gt;

&lt;p&gt;&lt;code&gt;import discord from 'discord.js;'&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The second line of code is basically us initializing the client/user, which in this case will be our bot and the users themselves .&lt;/p&gt;

&lt;p&gt;and the fourth line is importing the env package and configuring it, so basically &lt;code&gt;.env&lt;/code&gt; &lt;strong&gt;files stores all your secrets, like your discord bot's token or your API Key, these things will not be uploaded on GitHub using the git ignore file.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Okay so in JavaScript there is this thing called &lt;code&gt;addEventListner&lt;/code&gt; which helps us to react to certain events, like if a user clicks on something or double-tap on something a particular function should run.&lt;/p&gt;

&lt;p&gt;In the same way here in discord.js &lt;code&gt;addEventListner&lt;/code&gt; is more or less replaced by &lt;code&gt;.on&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;All of the &lt;code&gt;.on&lt;/code&gt; functions are called in regards to the &lt;code&gt;client&lt;/code&gt; so we have to write &lt;code&gt;client.on('event', callBackFunction)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;On line number 6 you can see that I have written a function which is &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2Zl4j19W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1fi5gxnbad65u50jv6jw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2Zl4j19W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1fi5gxnbad65u50jv6jw.png" alt="ready"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This basically means that, whenever the user is ready and logged in the console should log &lt;code&gt;&amp;lt;Name of the Bot&amp;gt; is up and ready!&lt;/code&gt; and name of the bot is fetched by this inbuilt property known as &lt;code&gt;.user.tag&lt;/code&gt; , which is to be called in regards to the &lt;code&gt;client&lt;/code&gt; .&lt;/p&gt;

&lt;p&gt;Now we have to make our bot login to the server. And  for that we have another inbuilt method/function called &lt;code&gt;.login&lt;/code&gt; .&lt;/p&gt;

&lt;p&gt;So we can write : &lt;code&gt;client.login(process.env.TOKEN)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now you might wonder what is this &lt;code&gt;process.env.TOKEN&lt;/code&gt;, this is the way we call variables from our &lt;code&gt;.env&lt;/code&gt; file.&lt;br&gt;
So let me show what is stored inside &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5wRnL9jp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o99m5yd2vqufzw18wcfq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5wRnL9jp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o99m5yd2vqufzw18wcfq.png" alt="env"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here in this file, we have to put our bot token inside a pair of single or double quotes and our tenor API key (you can generate it from &lt;a href="https://tenor.com/developer/keyregistration"&gt;here&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;For example if you want to call the &lt;code&gt;tenor api key&lt;/code&gt; inside your &lt;code&gt;bot.js&lt;/code&gt; file, you just have to write &lt;code&gt;process.env.TENOR&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And you can make a &lt;code&gt;try-catch&lt;/code&gt; block around the &lt;code&gt;client.login()&lt;/code&gt; function, so if any error occurs, we can catch it and show it on the console. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V4bRoMmX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6623bj3fmz7ukbj1wxpy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V4bRoMmX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6623bj3fmz7ukbj1wxpy.png" alt="try-catch"&gt;&lt;/a&gt;&lt;br&gt;
So as of now, we have our boiler plate code ready with us, which is 👇🏻: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OHUP5mTS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/amssijt8pdyuvc2ttm3h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OHUP5mTS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/amssijt8pdyuvc2ttm3h.png" alt="boiler"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's code the main functionality of the bot now.&lt;/p&gt;

&lt;p&gt;Now all the code discussed below will be in the reference to 👇🏻 this image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xyFQKmmU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vof6263rdads9k8nj6n4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xyFQKmmU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vof6263rdads9k8nj6n4.png" alt="main"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's understand the above code step-by-step:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Creating an add event listener to react when the user sends message:

&lt;ol&gt;
&lt;li&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WrKk8CPf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/frfzpeoygaulx3ewj3xt.png" alt="addEve"&gt;&lt;/li&gt;
&lt;li&gt;Here the parameter &lt;code&gt;msg&lt;/code&gt; will contain the message which user has sent. &lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;Let's add a prefix to our bot, so it will only react if we write &lt;code&gt;.gif&lt;/code&gt;.

&lt;ol&gt;
&lt;li&gt;Just to be a little safe, I am going to write the main functionality inside a &lt;code&gt;try-catch&lt;/code&gt; block.&lt;/li&gt;
&lt;li&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B2VH8n13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xybcvar7n5fyqxyl3ing.png" alt="try"&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;msg.content&lt;/code&gt; helps us to fetch the content inside the msg. In leman's term, it is like &lt;code&gt;.innerText&lt;/code&gt; in JavaScript. &lt;/li&gt;
&lt;li&gt;Here when the user will write &lt;code&gt;.gif&lt;/code&gt; the code inside the &lt;code&gt;if&lt;/code&gt; statement will be executed.&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;Now let's get user's queries.

&lt;ol&gt;
&lt;li&gt;Now if a user writes &lt;code&gt;.gif batman&lt;/code&gt; then this will be considered as a string and a problem arises here, which is how do we separate the bot command and the user's query.&lt;/li&gt;
&lt;li&gt;We do that by an inbuilt function called &lt;code&gt;.split()&lt;/code&gt;, which will help us to separate the whole string into two different values stored in an array, for example: if I write &lt;code&gt;.gif batman&lt;/code&gt; then &lt;code&gt;.split()&lt;/code&gt;  will make an array :  &lt;code&gt;['.gif', 'batman']&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Let's see it's code.&lt;/li&gt;
&lt;li&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GWl6yqj2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0hgyddtr6tzi94rcecmy.png" alt="split"&gt;&lt;/li&gt;
&lt;li&gt;We are going to compare the &lt;code&gt;first index of query&lt;/code&gt; which will be &lt;code&gt;.gif&lt;/code&gt;  to the string .gif.&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;Let's discuss about the API and Fetching it.

&lt;ol&gt;
&lt;li&gt;I am using node-fetch to fetch the API.&lt;/li&gt;
&lt;li&gt;The base of the API is

&lt;ol&gt;
&lt;li&gt; &lt;code&gt;https://g.tenor.com/v1/search?q=USERQUERY&amp;amp;key=API-KEY&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;And in order to take query from the user and give the key as your API Key we have to make this URL dynamic.&lt;/li&gt;
&lt;li&gt;We can do that by using template literals.

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;https://g.tenor.com/v1/search?q=${query[1]}&amp;amp;key=${process.env.TENOR}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;And now the  code looks like this.&lt;/li&gt;
&lt;li&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--axHEXkqQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nl5eu92onady5c3o02my.png" alt="url"&gt;&lt;/li&gt;
&lt;li&gt;And the query has to be the second value (First Index) in the array.&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;Let's fetch the API now.

&lt;ol&gt;
&lt;li&gt;We just have to put &lt;code&gt;async&lt;/code&gt; in front of the callback function as you can see in the above image on line number 10.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;async&lt;/code&gt; will make your function, asynchronous and then we will use &lt;code&gt;await&lt;/code&gt; to wait for the response from the API.&lt;/li&gt;
&lt;li&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4k1OljK4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/acmflsactcaxk46j97fb.png" alt="without"&gt;&lt;/li&gt;
&lt;li&gt;Now here we will have a problem, which is we will only receive one GIF every time.&lt;/li&gt;
&lt;li&gt;Now the API will return 20 GIFs and we have to pick a random one (on line 17).&lt;/li&gt;
&lt;li&gt;So to do this, we will make a random variable which will choose one GIF.&lt;/li&gt;
&lt;li&gt;Now the final code looks like 👇🏻
&lt;/li&gt;
&lt;li&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dv8PmckI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/23aobyz6j106syjmja4i.png" alt="final"&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Let's run this.

&lt;ol&gt;
&lt;li&gt;Just open the terminal, change the directory to the home directory and inside &lt;code&gt;src&lt;/code&gt; folder, then write  &lt;code&gt;node bot.js&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Thank you for reading the whole blog 🎉!! If you liked it do share it with your developer friends and feel free to comment and give suggestions.&lt;/p&gt;




</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>npm</category>
      <category>discord</category>
    </item>
    <item>
      <title>What Should Dev Teams Measure First? w/ Luca Rossi</title>
      <author>Conor Bronsdon</author>
      <pubDate>Sun, 11 Jul 2021 17:46:15 +0000</pubDate>
      <link>https://dev.to/linearb/what-should-dev-teams-measure-first-w-luca-rossi-4che</link>
      <guid>https://dev.to/linearb/what-should-dev-teams-measure-first-w-luca-rossi-4che</guid>
      <description>&lt;p&gt;Why do we measure dev team metrics?&lt;/p&gt;

&lt;p&gt;It's even more important to understand this question because most engineers don't like to be measured. So why measure at all?&lt;/p&gt;

&lt;p&gt;Luca Rossi, Head of Engineering at Translated, helps answer these questions on the &lt;a href="https://devinterrupted.com/podcast/what-should-dev-teams-measure-first/"&gt;Dev Interrupted podcast&lt;/a&gt;. We also discuss which metrics are worthy and how managers should interpret those metrics.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#listen-to-the-full-episode"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Listen to the full episode&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/3Rz970JfT6lYdAVNRZvRMz"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#episode-highlights-include"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Episode Highlights include:&lt;/strong&gt;
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;What should you measure for?&lt;/li&gt;
&lt;li&gt;Measuring as a tool for good and bad&lt;/li&gt;
&lt;li&gt;What should not be measured&lt;/li&gt;
&lt;li&gt;Can you make progress if you aren't measuring?&lt;/li&gt;
&lt;li&gt;How measuring demonstrates what you care about&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#join-the-dev-interrupted-discord-server"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Join the Dev Interrupted Discord Server&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;With over 1200 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No sales people allowed. &lt;a href="https://discord.gg/devinterrupted"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" alt="Join the Dev Interrupted Discord Community!"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>leadership</category>
      <category>management</category>
      <category>culture</category>
      <category>devteam</category>
    </item>
    <item>
      <title>Redis Crash Course</title>
      <author>milindsoorya</author>
      <pubDate>Sun, 11 Jul 2021 17:28:20 +0000</pubDate>
      <link>https://dev.to/milindsoorya/redis-crash-course-4b7i</link>
      <guid>https://dev.to/milindsoorya/redis-crash-course-4b7i</guid>
      <description>&lt;p&gt;Redis is a type of database and it can be added to your production level application to make it more performant. I will cover the basics of Redis and show a real world example of Redis.&lt;/p&gt;

&lt;p&gt;In this article, we'll discuss:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;What is Redis?&lt;/li&gt;
&lt;li&gt;Why the hype around Redis?&lt;/li&gt;
&lt;li&gt;When to use Redis?&lt;/li&gt;
&lt;li&gt;Redis Installation&lt;/li&gt;
&lt;li&gt;Basic Redis Commands

&lt;ol&gt;
&lt;li&gt;Lists&lt;/li&gt;
&lt;li&gt;Sets&lt;/li&gt;
&lt;li&gt;Hashes&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;Using Redis to make your website 30-40% faster&lt;/li&gt;
&lt;li&gt;Using Redis as a primary database&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So let's dive in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-redis"&gt;
  &lt;/a&gt;
  What is Redis?
&lt;/h2&gt;

&lt;p&gt;Redis is an in-memory database with sub millisecond latency. Redis stands for &lt;strong&gt;Re&lt;/strong&gt;mote &lt;strong&gt;Di&lt;/strong&gt;ctionary &lt;strong&gt;S&lt;/strong&gt;ervice. What makes redis so powerful is that, it stores the data in the memory and not in the slower disks. Every data point in the database is a key-value pair. The value can be any of the following fields:-&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;String - hello World&lt;/li&gt;
&lt;li&gt;Bitmap - 0011001&lt;/li&gt;
&lt;li&gt;Bitfield - {325}{655}{678}&lt;/li&gt;
&lt;li&gt;Hash - {a: "hello", b:'world}&lt;/li&gt;
&lt;li&gt;List - [ A &amp;gt; B &amp;gt; C ]&lt;/li&gt;
&lt;li&gt;Set - { A, B, C}&lt;/li&gt;
&lt;li&gt;Sorted set - {A: 1, B: 2, C: 3}&lt;/li&gt;
&lt;li&gt;Geo-spatial - {A:(52, 2, 3)}&lt;/li&gt;
&lt;li&gt;Hyperlog&lt;/li&gt;
&lt;li&gt;Stream&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#why-the-hype-around-redis"&gt;
  &lt;/a&gt;
  Why the hype around Redis?
&lt;/h2&gt;

&lt;p&gt;Redis is so popular because of it's speed. Unlike a relational database where the data is stored in slower hard disks, redis stores the data in RAM. Due to the usage of RAM, Redis is volatile, meaning that when the system shuts down, your data is also lost. Hence, Redis is usually not used as a persistent database like MongoDb or PostgresSql and is instead used for caching. Now a days its more powerful as I will discuss below.&lt;/p&gt;

&lt;p&gt;🌟 Super Fast data access :-  Redis takes milliseconds to access data as opposed to many hundreds of milliseconds using traditional methods.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-to-use-redis"&gt;
  &lt;/a&gt;
  When to use Redis?
&lt;/h2&gt;

&lt;p&gt;Redis is not a replacement for your database, Instead it is build on top of your traditional database. Any data that needed to be accessed frequently can be stored in Redis.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When you need to access some data frequently&lt;/li&gt;
&lt;li&gt;When the data base query is long and takes a lot of time to execute&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#redis-installation"&gt;
  &lt;/a&gt;
  Redis Installation
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Ubuntu&lt;/strong&gt; - &lt;a href="https://redis.io/download#from-the-official-ubuntu-ppa"&gt;from the official Ubuntu PPA&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;  &lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;add-apt-repository ppa:redislabs/redis
  &lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt-get update
  &lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt-get &lt;span class="nb"&gt;install &lt;/span&gt;redis
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Mac&lt;/strong&gt; - &lt;a href="https://gist.github.com/tomysmile/1b8a321e7c58499ef9f9441b2faa0aa8"&gt;use homebrew&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;  brew update
  brew &lt;span class="nb"&gt;install &lt;/span&gt;redis
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Windows&lt;/strong&gt; - use &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10"&gt;WSL&lt;/a&gt; to install Redis on windows&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#basic-redis-commands"&gt;
  &lt;/a&gt;
  Basic Redis Commands
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Startup Commands&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;redis-server&lt;/code&gt; -  To start Redis server use the command&lt;/li&gt;
&lt;li&gt;To use the Redis CLI open a new terminal and enter &lt;code&gt;redis-cli&lt;/code&gt; and to close it use &lt;code&gt;quit&lt;/code&gt; command&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Basic commands &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;SET name your-name&lt;/code&gt; - Setting a value &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;GET name&lt;/code&gt; - Get the above value &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;DEL name&lt;/code&gt; - Delete a key-value by &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;EXISTS name&lt;/code&gt; - To check if a key exist&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;KEYS *&lt;/code&gt; - Get all keys &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;flushall&lt;/code&gt; - Clear all the data&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Expiration&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;ttl key-name&lt;/code&gt; - Check how long a key has before being deleted automatically. if the result is &lt;code&gt;-1&lt;/code&gt;  it means &lt;strong&gt;ttl&lt;/strong&gt;(Time To Live) is not set and it wont expire.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;expire key-name 10&lt;/code&gt; - Set a &lt;strong&gt;ttl&lt;/strong&gt; of 10 seconds.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;setex name 10 your-name&lt;/code&gt; - To set a &lt;strong&gt;ttl&lt;/strong&gt; while setting a key value pair.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#lists"&gt;
  &lt;/a&gt;
  Lists
&lt;/h3&gt;

&lt;p&gt;Lists are useful when we want to implement a queue or stack. Like in case of a messenger app, where we cache some of the recent messages. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;lpush fruits apple&lt;/code&gt; - Push an item into the left of a list. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;rpush fruits mango&lt;/code&gt; - Push an item into the right of a list. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;lrange fruits 0 -1&lt;/code&gt; - Get all the items from the list. The &lt;code&gt;-1&lt;/code&gt; stands for the index at the end of the list.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;LPOP fruits&lt;/code&gt; - Removes the leftmost item in the list.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;RPOP fruits&lt;/code&gt; - Removes the rightmost item in the list.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#sets"&gt;
  &lt;/a&gt;
  Sets
&lt;/h3&gt;

&lt;p&gt;Sets are similar to lists.  What makes a Set different is that it will only store unique values.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;SADD todo "read book"&lt;/code&gt; - To add item into a set. (note: if we try to add "read book" again it won't be added as it is a duplicate)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;SMEMBERS todo&lt;/code&gt; - Show all the items in the todo set.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;SREM todo "read book"&lt;/code&gt; -  To remove item from set. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#hashes"&gt;
  &lt;/a&gt;
  Hashes
&lt;/h3&gt;

&lt;p&gt;Whereas &lt;code&gt;LIST&lt;/code&gt;s and &lt;code&gt;SET&lt;/code&gt;s in Redis hold sequences of items, Redis &lt;code&gt;HASH&lt;/code&gt;es store a mapping of keys to values.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;HSET person name John&lt;/code&gt; - Here &lt;strong&gt;name&lt;/strong&gt; is the key and &lt;strong&gt;John&lt;/strong&gt; is the value.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;HGET person name&lt;/code&gt; - This returns the value associated with the key name and in this case it returns &lt;strong&gt;John&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;HGETALL person&lt;/code&gt; - Get all the info about person.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;HDEL person name&lt;/code&gt; - Remove the name property.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;HEXISTS person name&lt;/code&gt; - To check if the property exists.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#using-redis-to-make-your-website-3040-faster"&gt;
  &lt;/a&gt;
  Using Redis to make your website 30-40% faster
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Install Redis&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i redis
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Start your Redis server&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;redis-server
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Import the package and create an instance&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Import redis package&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Redis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;redis&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// Create redis client, in case ofer development only&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;redisClient&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Redis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createClient&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;// Incase of production pass your production instance url and use the below line&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;redisClient&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Redis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createClient&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;your-production-url&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;use the above &lt;code&gt;redisClient&lt;/code&gt; instance to do all the commands I mentioned above. for example -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;redisClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;photos&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3600&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringyfy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;some&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Before adding Redis Caching&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The code below takes about &lt;strong&gt;480ms&lt;/strong&gt; to fetch a data of size 900kB.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/photos&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;albumId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;albumId&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://jsonplaceholder.typicode.com/photos&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;albumId&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;After adding Redis Caching&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The code below takes about &lt;strong&gt;480ms&lt;/strong&gt; in the first fetch and in the recurrent fetch it takes only &lt;strong&gt;37ms&lt;/strong&gt;. Now that is some serious performance gain.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Import redis package&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Redis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;redis&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Create redis client, in case ofer development only&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;redisClient&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Redis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createClient&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// Incase of production pass your production instance url and use the below line&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;redisClient&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Redis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createClient&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;your-production-url&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/photos&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;albumId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;albumId&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;redisClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;photos&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;photos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;photos&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;photos&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://jsonplaceholder.typicode.com/photos&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;albumId&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="nx"&gt;redisClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;photos&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3600&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringyfy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example we first check if we have already cached photos in our Redis cache, In case it is cached, the cached value is returned, else the photos are fetched from the API.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-redis-as-a-primary-database"&gt;
  &lt;/a&gt;
  Using Redis as a primary Database
&lt;/h2&gt;

&lt;p&gt;Redis is by nature super fast and doesn't need additional caching layers, but a necessary requirement of a database is to model complex relationships. Don't worry, Redis got you covered. Redis can be used a multi model database. It supports a variety of database paradigms with the help of various modules. Some of the most popular Redis modules are :-&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;RediSearch - Full-Text search over Redis.&lt;/li&gt;
&lt;li&gt;RedisGraph - A graph database with a Cypher-based querying language using sparse adjacency matrices.&lt;/li&gt;
&lt;li&gt;RedisBloom - Scalable Bloom filters.&lt;/li&gt;
&lt;li&gt;RedisJson - A JSON data type for Redis.&lt;/li&gt;
&lt;li&gt;RedisAI - A Redis module for serving tensors and executing deep learning graphs.&lt;/li&gt;
&lt;li&gt;Neural-redis - Online trainable neural networks as Redis data types.&lt;/li&gt;
&lt;li&gt;RedisTimeSeries - Time-series data structure for redis.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Checkout all the modules in &lt;a href="https://redis.io/modules"&gt;redis.io/modules&lt;/a&gt;. You can play around with these modules in &lt;a href="https://redislabs.com/try-free/?utm_source=youtube&amp;amp;utm_medium=social&amp;amp;utm_campaign=fireship-io"&gt;Redis Enterprise Cloud free tier&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#not-in-a-hurry-read-these"&gt;
  &lt;/a&gt;
  Not in a hurry? Read these
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://odino.org/my-favorite-data-structure-hyperloglog/"&gt;My favorite algorithm (and data structure): HyperLogLog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ibm.com/cloud/learn/message-brokers"&gt;What is a message broker?&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>redis</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Guide For Your First Open Source Contribution.💻</title>
      <author>Naman Budhiraja</author>
      <pubDate>Sun, 11 Jul 2021 17:02:53 +0000</pubDate>
      <link>https://dev.to/naman56/guide-for-your-first-open-source-contribution-2136</link>
      <guid>https://dev.to/naman56/guide-for-your-first-open-source-contribution-2136</guid>
      <description>&lt;p&gt;Hi all👋. Today, I  will be talking about an interesting and one of my favourite topics called "Open Source"😃.It is a buzzword that has been roaming around developers nowadays. By following the trend, I am writing this article to help you out so that you can also contribute to open source projects easily.🤘&lt;br&gt;
So, without wasting any time, lets' get started&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HAjQ3UHE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media0.giphy.com/media/l0IyjiXOXTX6Yemsg/giphy.gif%3Fcid%3Decf05e472m87qksbr674emv61tvo6t8ad55591f30a05qiep%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HAjQ3UHE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media0.giphy.com/media/l0IyjiXOXTX6Yemsg/giphy.gif%3Fcid%3Decf05e472m87qksbr674emv61tvo6t8ad55591f30a05qiep%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-open-source"&gt;
  &lt;/a&gt;
  What is Open Source!!🤔
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T4xBHtob--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media1.giphy.com/media/mFNCEWjufpRJa8XLCj/200w.webp%3Fcid%3Decf05e47zu7xsa5i21ve97ce7p2t60nx1rkcvq5pnodoebmu%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T4xBHtob--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media1.giphy.com/media/mFNCEWjufpRJa8XLCj/200w.webp%3Fcid%3Decf05e47zu7xsa5i21ve97ce7p2t60nx1rkcvq5pnodoebmu%26rid%3D200w.webp%26ct%3Dg" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Firstly, Lets' understand the meaning of Open Source. So, basically open source is a term that originally referred to open source software (OSS). Open source software is code that is designed to be publicly accessible—anyone can see, modify, and distribute the code as they see fit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-you-should-contribute-to-open-source"&gt;
  &lt;/a&gt;
  Why you should contribute to Open Source!!🧑‍💻
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BG7bGwbO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media2.giphy.com/media/dILrAu24mU729pxPYN/200.webp%3Fcid%3Decf05e47m7i0sgsjnict6ehsg1vo3hlym6prqsbgw05hs3wf%26rid%3D200.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BG7bGwbO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media2.giphy.com/media/dILrAu24mU729pxPYN/200.webp%3Fcid%3Decf05e47m7i0sgsjnict6ehsg1vo3hlym6prqsbgw05hs3wf%26rid%3D200.webp%26ct%3Dg" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open source is free and open to all enthusiastic folks who want to contribute to the community while learning something. Open source helps many developers to boost up their tech career. Apart from this, you will get the chance to engage with different like-minded people and share your knowledge. You will get a lot of opportunities to learn new technologies. Nowadays, open source section in the resume catches the eyes of recruiters more easily. So, open source will help you in many ways.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites🗒️
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BrRFnqit--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media3.giphy.com/media/MEySLGjxQak0w/200w.webp%3Fcid%3Decf05e47ekrgpgnsyk0zkqrir0cxht8fpxa0m91ltszl82da%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BrRFnqit--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media3.giphy.com/media/MEySLGjxQak0w/200w.webp%3Fcid%3Decf05e47ekrgpgnsyk0zkqrir0cxht8fpxa0m91ltszl82da%26rid%3D200w.webp%26ct%3Dg" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In my opinion, there are two main prerequisites of open source contribution:-&lt;br&gt;
1) Git and GitHub: You should have atleast a basic knowledge of Git and GitHub before starting to contribute to open source projects.This will definetly help you in the long run.You can find the some amazing tutorials for the same for free.Here's youtube link =&amp;gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hindi: &lt;a href="https://www.youtube.com/playlist?list=PLu0W_9lII9agwhy658ZPA0MTStKUJTWPi"&gt;Complete Git Tutorials For Beginners In Hindi&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;English: &lt;a href="https://www.youtube.com/watch?v=RGOj5yH7evk"&gt;Git and GitHub for Beginners - Crash Course&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2) Your Will: Nothing is possible without your will. So, without wasting any time you should start your journey to open source and stick to it. Learning is not easy but you have to make it by staying consistent and doing hard work(Enough motivation for today😅)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finding-your-first-open-source-project"&gt;
  &lt;/a&gt;
  Finding Your First Open Source Project😴
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MbUIFawW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media3.giphy.com/media/U3IgAwhwINa57mRrL5/200w.webp%3Fcid%3Decf05e471p5ae6dlcwp60auckg2p5t9mmtjtdh40hro215kc%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MbUIFawW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media3.giphy.com/media/U3IgAwhwINa57mRrL5/200w.webp%3Fcid%3Decf05e471p5ae6dlcwp60auckg2p5t9mmtjtdh40hro215kc%26rid%3D200w.webp%26ct%3Dg" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finding your first open source project is a daunting process in itself. It is because there are so many projects released on GitHub and so many tutorials for finding projects to contribute. But what you need to do is just press the search button on GitHub and search for that topic in which you are comfortable and want to contribute. But the main hack that I want to share with you is to filter the projects based on the least number of stars.&lt;br&gt;
Why? Because greater the number of star, bigger will be the project and complicated for the beginners. The point here is to start with the small projects and contribute. After some time, when you get the taste of open source environment, you can jump into bigger projects.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#points-to-ponder"&gt;
  &lt;/a&gt;
  Points to ponder:
&lt;/h3&gt;

&lt;p&gt;🌟 Open Source is not a competition, it's collaboration.&lt;br&gt;
🌟 No working experience is required before contributing to open source.&lt;br&gt;
🌟 Don't be afraid if you don't have hard core coding skills. Remember, editing a readme file is also a contribution to the project.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#useful-tips-amp-tricks"&gt;
  &lt;/a&gt;
  Useful Tips &amp;amp; Tricks✍️
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uvbDsGoo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media2.giphy.com/media/mFeNGR1W1O2JYqjsMO/100.webp%3Fcid%3Decf05e47f0v7f6pu0o087hx59yfqvejypv01o6lsx0ltwoxl%26rid%3D100.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uvbDsGoo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media2.giphy.com/media/mFeNGR1W1O2JYqjsMO/100.webp%3Fcid%3Decf05e47f0v7f6pu0o087hx59yfqvejypv01o6lsx0ltwoxl%26rid%3D100.webp%26ct%3Dg" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Always see the activeness of the project before starting the 
contribution.&lt;/li&gt;
&lt;li&gt;Read the project's guidelines carefully before making a pr(Pull Request).&lt;/li&gt;
&lt;li&gt;Read the readme file to get an overview of the project before starting to contribute to a particular project.&lt;/li&gt;
&lt;li&gt;Join the community involved around the particular project or a topic you are interested in.&lt;/li&gt;
&lt;li&gt;Don't hesitate while asking any question to anyone involved in a particular project. (this is the power of open source. People are always here to help you out).&lt;/li&gt;
&lt;li&gt;Find an open source community to meet some like minded people and seek help from the experienced ones.&lt;/li&gt;
&lt;li&gt;Participate in Open Source Programs like &lt;a href="https://summerofcode.withgoogle.com/"&gt;GSOC(Google Summer Of Code)&lt;/a&gt; ,&lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Digital Ocean Hacktoberfest&lt;/a&gt;, &lt;a href="https://fellowship.mlh.io/"&gt;MLH Fellowship&lt;/a&gt; , &lt;a href="https://gssoc.girlscript.tech/#"&gt;GSSOC&lt;/a&gt;(I was part of it) and many more.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#outro"&gt;
  &lt;/a&gt;
  Outro✨
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2F8E7sKx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media3.giphy.com/media/14e24HVY0wdoJaNDnF/200w.webp%3Fcid%3Decf05e47cm7mtcr6egny37ufzgosd71if728lg0czlhb9u5m%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2F8E7sKx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media3.giphy.com/media/14e24HVY0wdoJaNDnF/200w.webp%3Fcid%3Decf05e47cm7mtcr6egny37ufzgosd71if728lg0czlhb9u5m%26rid%3D200w.webp%26ct%3Dg" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This blog post concludes that you don't need any work experience or any hard skills. Open source contribution requires your collaboration behaviour towards the project. So, turn on your laptop and find your first open source project to contribute.😉&lt;/p&gt;

&lt;p&gt;So, That's it from my side🙏🙌. I hope you like this blog post and I didn't waste your time. If so, then please give a ❤ and share to your peers who want to jump into open source.🤘&lt;br&gt;
And if I had missed something, kindly comment down below💻.&lt;br&gt;
See you untill next time👋.Connect With Me On &lt;a href="https://www.linkedin.com/in/naman-budhiraja-1906a418b/"&gt;LinkedIn&lt;/a&gt; and &lt;a href="https://twitter.com/BudhirajaNaman3"&gt;Twitter&lt;/a&gt;. &lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; "The power of open source is the power of the people.The 
  people rule."

                          Thank You
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

</description>
      <category>opensource</category>
      <category>codenewbie</category>
      <category>100daysofcode</category>
    </item>
  </channel>
</rss>
