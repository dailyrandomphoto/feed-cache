<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Choose your first language</title>
      <author>Phu Minh (FreakC)</author>
      <pubDate>Sat, 29 May 2021 04:00:35 +0000</pubDate>
      <link>https://dev.to/freakcdev297/choose-your-first-language-8a7</link>
      <guid>https://dev.to/freakcdev297/choose-your-first-language-8a7</guid>
      <description>&lt;p&gt;Throughout many years, one of the biggest question in the tech industry is "What is the best programming language to start?". While this is a very opinionated topic, in my opinion, I heavily believe that the best one is the one that suits you the most. &lt;/p&gt;

&lt;p&gt;I know, this sounds really stupid, but for real, just have a look at some popular languages out there, see some programs written in them, and just blindly pick the one you see appealing. This is actually a good way to choose your first language, as the one you see interesting at first sight is probably the one that helps you stick with programming for a long run. &lt;/p&gt;

&lt;p&gt;Many people say that Python is the best starter language because it's easy, while others say that C, C++ and Java are the best because they force you to be strict with your code. To me, these words are straight up BS, since it depends on individual's opinion. Some might say Javascript or Ruby is easier than Python, or some beginners might give up due to the difficulties with C or Java. So the best one is probably the one that you think that's good. Besides, if the language you choose is utterly useless, just switch to another language, now that you have the core understanding of the previous language, you can learn any other ones.&lt;/p&gt;

&lt;p&gt;In conclusion, just pick the language that you see interesting, don't let some old man scares you :v&lt;/p&gt;

&lt;p&gt;Here are the top most popular languages with many great options for you: &lt;a href="https://pypl.github.io/PYPL.html"&gt;https://pypl.github.io/PYPL.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm the creator of the &lt;a href="https://freakc-foundation.github.io/"&gt;FreakC Programming Language&lt;/a&gt;, you can check it out too.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>What is an Api ?</title>
      <author>Sambit Kumar Nanda👾</author>
      <pubDate>Sat, 29 May 2021 03:10:58 +0000</pubDate>
      <link>https://dev.to/sambit20/what-is-an-api-42j7</link>
      <guid>https://dev.to/sambit20/what-is-an-api-42j7</guid>
      <description>&lt;h1&gt;
  &lt;a href="#application-programming-interface"&gt;
  &lt;/a&gt;
  Application Programming Interface
&lt;/h1&gt;

&lt;p&gt;Think of it as a set of tools designed for software developers. API makes your life easier by giving you access to data and providing you with an abstraction of the implementation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#interface"&gt;
  &lt;/a&gt;
  Interface
&lt;/h2&gt;

&lt;p&gt;-&amp;gt; Interface, through which the user interacts. The developer knows what' s happening behind the scenes.&lt;br&gt;
-&amp;gt; When the user clicks, it does something! APIs works actually as interfaces that are abstracting details for him.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flashlight-api"&gt;
  &lt;/a&gt;
  Flashlight API
&lt;/h2&gt;

&lt;p&gt;-&amp;gt; Let’s say when the user clicks, it throws the flashlight. So, it' s worth noting the code probably also uses the Flashlight API&lt;br&gt;
-&amp;gt; This API abstracts away the details of how to send flashlight to the user when he interacts with the button&lt;br&gt;
-&amp;gt; You just need to call on/off method of a Flashlight API to make it work!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ui-vs-api"&gt;
  &lt;/a&gt;
  UI V/S API
&lt;/h2&gt;

&lt;p&gt;-&amp;gt; User Interface (UI) is made for the user interaction.&lt;br&gt;
-&amp;gt; Application Programming Interface (API) is made for the programmers to use. They save you   from needing to create everything yourself.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#soap-apis-vs-rest-apis"&gt;
  &lt;/a&gt;
  SOAP APIs V/S REST APIs
&lt;/h2&gt;

&lt;p&gt;-&amp;gt; Soap/Web based API calls are sent from web apps using XML between systems through HTTP&lt;br&gt;
-&amp;gt; Rest is a style of architecture that provides standards on the web between systems&lt;br&gt;
-&amp;gt; Well, SOAP stands for Service Object Access Protocol and REST stands for Representational State Transfer&lt;br&gt;
-&amp;gt; Soap/Web API can only work with XML but Rest API can work with plain text, HTML, XML, JSON, etc.&lt;/p&gt;

</description>
      <category>api</category>
      <category>webdev</category>
      <category>apis</category>
    </item>
    <item>
      <title>The Frontend Hitchhiker's Guide: UI Libraries</title>
      <author>Nicholas Mendez</author>
      <pubDate>Sat, 29 May 2021 03:10:54 +0000</pubDate>
      <link>https://dev.to/snickdx/the-frontend-hitchhiker-s-guide-ui-libraries-59cm</link>
      <guid>https://dev.to/snickdx/the-frontend-hitchhiker-s-guide-ui-libraries-59cm</guid>
      <description>&lt;h1&gt;
  &lt;a href="#about-the-hitchhikers-series"&gt;
  &lt;/a&gt;
  About the hitchhikers series
&lt;/h1&gt;

&lt;p&gt;This is a series of posts dedicated to help devs discover and navigate the web ecosystem. Look, web development is vast and intimidating everyone could use a guide.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#user-interface-libraries"&gt;
  &lt;/a&gt;
  User Interface Libraries
&lt;/h1&gt;

&lt;p&gt;UI libraries are third party code that traditionally provide UI components and utility classes used developers create apps. Classes to affect styles and layouts and user the UI components provided the library. More modern libraries may also provide syntax for creating stateful reusable components.&lt;/p&gt;

&lt;p&gt;The following are some popular libraries.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#tailwind-css"&gt;Tailwind CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bootstrap"&gt;Bootstrap CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#materialize-css"&gt;Materialize CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#jquery"&gt;jQuery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reactjs"&gt;Reactjs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vuejs"&gt;Vuejs&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#tailwind-css"&gt;
  &lt;/a&gt;
  Tailwind CSS
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x9w0MeN_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wghytwhjryvhlsy5y4e0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x9w0MeN_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wghytwhjryvhlsy5y4e0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These days it feels like this wouldn't be a Dev.to post without mentioning &lt;a href="https://tailwindcss.com/"&gt;tailwind&lt;/a&gt;. It's a highly popular library for good reason. There's so many utility classes you can tweak the smallest details of you app needing to write any CSS.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#bootstrap"&gt;
  &lt;/a&gt;
  Bootstrap
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZfGKHREE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p1kgzwhylmrz3xxwm6wo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZfGKHREE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p1kgzwhylmrz3xxwm6wo.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another popular library that is usually the first for many devs is &lt;a href="https://getbootstrap.com/"&gt;Bootstrap&lt;/a&gt;. It's not as flexible as tailwind but its easy to use and has tons of themes, and examples.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#materialize-css"&gt;
  &lt;/a&gt;
  Materialize CSS
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wlcM7rH9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pqos2k4pegzqsv700xh7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wlcM7rH9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pqos2k4pegzqsv700xh7.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is my personal pick for putting together a web app quickly. &lt;a href="https://materializecss.com/"&gt;Materialize CSS&lt;/a&gt; is great for making an app that follows the material design specification.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#jquery"&gt;
  &lt;/a&gt;
  jQuery
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eBmOv9YQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2jvef2vnalxws079g0c6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eBmOv9YQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2jvef2vnalxws079g0c6.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This legacy library is more of an honourable mention. Around 2017-2019 it was unfathomable to build a website without &lt;a href="https://jquery.com/"&gt;jQuery&lt;/a&gt;. It provided easy to use APIs for cross browser DOM manipulation, AJAX and attaching event handlers. &lt;/p&gt;

&lt;p&gt;Since then the standardization of APIs such as document.querySelector() and fetch() have somewhat replaced the common use cases for the library. &lt;/p&gt;

&lt;p&gt;However, jQuery is still used today and has spawned other projects like &lt;a href="https://jqueryui.com/"&gt;jQuery UI&lt;/a&gt; and &lt;a href="https://qunitjs.com/"&gt;Quint&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#react-js"&gt;
  &lt;/a&gt;
  React JS
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8mVqih4R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hn48yyzfauuejgy9gly2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8mVqih4R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hn48yyzfauuejgy9gly2.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
You are probably wondering why this wasn't at the top. According to the &lt;a href="https://2020.stateofjs.com/en-US/technologies/front-end-frameworks/"&gt;State of JS survey&lt;/a&gt;, &lt;a href="https://reactjs.org/"&gt;ReactJS&lt;/a&gt; has been the most used 'Front-end Framework' since 2016. React is featured 5th in this post because it is both a library and a framework.&lt;/p&gt;

&lt;p&gt;React allows for a gradual adoption where you can &lt;a href="https://raw.githubusercontent.com/reactjs/reactjs.org/master/static/html/single-file-example.html"&gt;use it as a drop in library&lt;/a&gt;. However, it is recommended to be used more like a framework by utilizing the CLI tool for bootstrapping and compiling a project. &lt;/p&gt;

&lt;p&gt;In my opinion React's documentation is easy to follow and the basics can be picked up fairly quickly. React also boats a declarative coding style that allows you to write more predictable code that is easier to debug.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#vue-js"&gt;
  &lt;/a&gt;
  Vue JS
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WSda07DU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wz5wehmn4kaofqw6m8bs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WSda07DU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wz5wehmn4kaofqw6m8bs.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt; feels is like the de facto react alternative. It argues some performance improvement over react and doesn't require you to write JSX or CSS in JavaScript. &lt;/p&gt;

&lt;p&gt;Vue is the third most popular 'Front-end Framework' behind React and Angular. Unlike the other frameworks Vue was not created within a big tech company like Facebook (react) or Google (angular) so its impressive to see how far it has come.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;That concludes our visit to our first destination on this journey. There's 7 more stops to go! If you found this informational please consider following me on &lt;a href="https://dev.to/snickdx"&gt;dev.to&lt;/a&gt; or on &lt;a href="https://twitter.com/snickdx"&gt;twitter&lt;/a&gt; so you won't miss the next post in this series. &lt;/p&gt;

&lt;p&gt;What is your favourite UI Library and why?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://2020.stateofjs.com/en-US/technologies/front-end-frameworks/"&gt;State of JS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/snickdx/the-frontend-hitchhiker-s-guide-ui-libraries-2jje-temp-slug-4600245/edit"&gt;Vuejs Comparison with Other Frameworks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>hitchhikers</category>
      <category>javascript</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Containerize your Dev environment! Forget about painful project setup. (Beginner friendly)</title>
      <author>Adnan Alam</author>
      <pubDate>Sat, 29 May 2021 00:24:31 +0000</pubDate>
      <link>https://dev.to/alwaysup/containerize-your-dev-environment-forget-about-painful-setup-beginner-friendly-10bp</link>
      <guid>https://dev.to/alwaysup/containerize-your-dev-environment-forget-about-painful-setup-beginner-friendly-10bp</guid>
      <description>&lt;p&gt;&lt;em&gt;NOTE: IDE will not work on Windows. Please read windows section.&lt;/em&gt;&lt;br&gt;
After only a few years of working in the industry I am already tired of having to setup my machine each time something happens to it or I want to work on it on my laptop when visiting someone. Setting up DEV environment has irked me for as long as I have been working in this industry. And after some inspiration from a company that is doing many things right, I decided to make this amazing solution easily available to everyone!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Pre-requisite
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/get-docker/"&gt;Install docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;For Windows: &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10"&gt;install wsl&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#key-concepts"&gt;
  &lt;/a&gt;
  Key Concepts
&lt;/h3&gt;

&lt;p&gt;I don't intend to leave behind the many developers that are just getting started. So, here's the general breakdown that you &lt;strong&gt;HAVE TO&lt;/strong&gt; know.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Container is just as it sounds, a box to separate out resources used by it. This is somewhere between running apps directly in your host vs running in a VM (Virtual Machine). In a VM only the hardware resources are shared. However, in docker the OS kernel is shared. This does mean that the security of your container can be compromised if you let it (That's a whole another beast of its own, so I'll leave that out. Yes, this does mean you should not just pull down some random image and run exactly as the writer tells you to 😭. &lt;strong&gt;PLEASE ONLY USE TRUSTED IMAGES&lt;/strong&gt;).&lt;/li&gt;
&lt;li&gt;Docker runs natively on your machine, and in this tutorial you will learn to mount folders as volumes into your container so that the work is &lt;em&gt;easily&lt;/em&gt; available (generally, you can access any files the container is using from the host, because of the nature of containerization).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;VOLUMES!!&lt;/strong&gt; Now this is the meat of the entire blog. You will mount your work folders as volumes onto the container which will let you easily work and streamline development. The main idea here is to give the container access to your work environment (for this, I'll assume all of your projects live in a single folder).&lt;/li&gt;
&lt;li&gt;Image Layers. Docker images use layering. Where each layer is generated by a statement in your "Dockerfile" (think of this as the configuration for your container). This is great for many reasons but the most important of them all is re-usability. We can pretty much build on top of an existing image, create our own "base" image and layer that based on what kind of project we will be working on. &lt;em&gt;Think of a sandwich. You put the bread down, your partner puts in the meat, then the kids choose the toppings.&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That should cover most of the key questions you have regarding this. Please comment on whatever finer details you need and I will be happy to help.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#base-module"&gt;
  &lt;/a&gt;
  Base Module
&lt;/h3&gt;

&lt;p&gt;Lets take a look at the main &lt;code&gt;Dockerfile&lt;/code&gt; which you will use as the starting point for many of your customized images.&lt;br&gt;
Please go to the &lt;a href="https://github.com/opiteq/dev-environment"&gt;github repo&lt;/a&gt; to find the source code! 😊&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#dockerfile"&gt;
  &lt;/a&gt;
  Dockerfile:
&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;We will start off with openjdk alpine so that we don't have to install and configure jdk, and set environment variables.&lt;/li&gt;
&lt;li&gt;Then let's go ahead and setup for the user. Running as root is sadly not recommended. So we will configure a "dev" user. This definitely does mean that you will not be able to run some of the commands you are used to running as root. you can always shell into a container as &lt;code&gt;root&lt;/code&gt;, and run &lt;code&gt;sudo&lt;/code&gt; commands that way.&lt;/li&gt;
&lt;li&gt;Now let's go ahead and update our alpine image.&lt;/li&gt;
&lt;li&gt;Let's create the user we setup.&lt;/li&gt;
&lt;li&gt;Finally add our base applications and install dev tools.&lt;/li&gt;
&lt;li&gt;Let's install the browser and IDE.&lt;/li&gt;
&lt;li&gt;Last thing is to make sure we have proper access to our work env.&lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;
  &lt;a href="#dockerrunsh-shell-script"&gt;
  &lt;/a&gt;
  dockerrun.sh (Shell script)
&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;Now we really want to automate the image creation and container start and attach process. This is because very few developers like to do extra manual work 😛.&lt;/li&gt;
&lt;li&gt;Let's cleanup if there's a stopped container.&lt;/li&gt;
&lt;li&gt;If there is no container then we create and start a shell session. If there is then we simply start a new shell session within the same container.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That is all! 😊&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setup-the-environment"&gt;
  &lt;/a&gt;
  Setup the environment
&lt;/h3&gt;

&lt;p&gt;Let's start off by cloning the repo. You will build the image yourself so that you have better control over it.&lt;br&gt;
&lt;em&gt;Note windows not supported.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Let's go into where you will be working &lt;code&gt;cd &amp;lt;workdir&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git clone https://github.com/opiteq/dev-environment .&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./dockerrun.sh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;now if you open up a new terminal you can simply run the same shell script to get inside of your container.&lt;/li&gt;
&lt;li&gt;I have setup ports 3000-3003 for dev, so you can easily access them from host if needed. Idea is you would run your server and use one of those ports.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#breakdown"&gt;
  &lt;/a&gt;
  Breakdown
&lt;/h3&gt;

&lt;p&gt;The core concept here is to get you started with a base image then you customize it to your heart's content and get going with your development. I chose alpine linux as the base image because I think less is more. However, I did go with openjdk image so that majority of the java configuration is handled for me. This is also a work-in-progress, so the repository may evolve overtime as I find better fit for my needs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Your container is what you make of it! Please feel free to customize it to your heart's content and reach out to the amazing community with your questions. I would love to address anything that I missed so definitely let me know. If you think anything I said is incorrect I would be thrilled to learn and correct myself for future readers.&lt;br&gt;
Leave your questions down below and I will get to them as soon as I can.&lt;/p&gt;

</description>
      <category>docker</category>
      <category>java</category>
      <category>python</category>
      <category>node</category>
    </item>
    <item>
      <title>Designing Highly Scalable Serverless Event Scheduler</title>
      <author>Krishna Desiraju</author>
      <pubDate>Sat, 29 May 2021 00:14:43 +0000</pubDate>
      <link>https://dev.to/krishnadesiraju/designing-highly-scalable-serverless-event-scheduler-3ck7</link>
      <guid>https://dev.to/krishnadesiraju/designing-highly-scalable-serverless-event-scheduler-3ck7</guid>
      <description>&lt;p&gt;Some of the business use cases often require a lightweight event scheduling instead of a full blown workflow. For instance, an OTT service that wants to remind the customers of their favorite shows 15 minutes before the streaming with a notification. So each customer would have different favorites and with different reminder timings. So in most cases like these, an Event Scheduler that acts as a timer would be helpful which can be plugged in with a handler to process it appropriately.&lt;/p&gt;

&lt;p&gt;While we can certainly use queues like rabbitmq, aws sqs, gcp pub-sub for delayed messaging all of them have their own maximum delay time. For instance, aws sqs max visibility delay is 15 mins. gcp currently has a tasks API that schedule task up to an year. And if we want to schedule something a month or a quarter later or an year later, we'll have to build something ourselves.&lt;/p&gt;

&lt;p&gt;So here is one architecture of a &lt;em&gt;Highly Scalable and Fully Serverless Event Scheduler&lt;/em&gt; using aws api gateway, lambda, dynamodb, eventbridge cron trigger, and sqs. The idea primarily is to build an event scheduler that is all serverless and that can work at any scale something in the order of million per hour if need be. Also this is inspired from &lt;a href="https://theburningmonk.com/2019/05/using-cloudwatch-and-lambda-to-implement-ad-hoc-scheduling/"&gt;Yan Cui's post here&lt;/a&gt; extending on to make the precision better without hot spots.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uX__KD8a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ppzwrwbush2lwi3una1x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uX__KD8a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ppzwrwbush2lwi3una1x.png" alt="Highly Scalable Serverless Event Scheduler"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#creating-scheduled-events"&gt;
  &lt;/a&gt;
  Creating Scheduled Events
&lt;/h4&gt;

&lt;p&gt;In order to make event creation highly scalable we are using dynamodb fronted by API Gateway with lambda. Though API gateway alone is sufficient to write to dynamodb, lambda is mainly used to pre-batch events in to 1min window and stamp their batch_epoch_time on them.&lt;br&gt;
For instance if there's an event scheduled for 01:11:50 (hh:mm:ss), we stamp batch_epoch_time as 01:11:00 (in epoch though).&lt;/p&gt;

&lt;p&gt;And this makes the job of sweeper easy to just query the dynamodb table for unprocessed batches without having to worry about locking mechanism and isolation.&lt;/p&gt;

&lt;p&gt;Even if we were to use sql for any reason whatsoever, which is obviously not scalable though can be serverless, we don't have use the painful sql pessimistic locking mechanism if we are pre-batching them when they are created or updated.&lt;/p&gt;

&lt;p&gt;And the lambda can also be used for performing any basic validations on the request.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#sweeping-scheduled-events"&gt;
  &lt;/a&gt;
  Sweeping Scheduled Events
&lt;/h4&gt;

&lt;p&gt;Sweeper is essentially an eventbridge cron trigger that triggers the lambda every one minute. Lambda sweeps the dynamodb for all the events that will hit the schedules in the next 5 mins based on the batch_epoch_time.&lt;br&gt;
Note that we are sweeping ahead of time rather than ones that are past scheduled time as this allows us to process events at scale without causing delays. And you will also see that when we get to last step of sending it back to the client application we make sure it is sent with a compensating delay that gives us precision down to second as opposed to the sweeper frequency of 1 min.&lt;/p&gt;

&lt;p&gt;And in order to optimize sweeping dynamodb for efficient retrieval of events based on batch_epoch_time, we'll have to create a Global Secondary Index (GSI) on batch_epoch_time. And this enables us to query the table rather than scanning it.&lt;/p&gt;

&lt;p&gt;In order to make the sweeper highly scalable, lambda batches the swept events in batches of 100 and drops them on SQS queue for further processing so that this lambda doesn't end up processing all the events especially when it sweeps thousands and thousands. Also please note that max payload size of a query response is 1MB, so the lambda has to loop until it sweeps all the events in that one minute windows it is processing.&lt;br&gt;
&lt;em&gt;And to make this little better, we can use a different table that tracks all the batch_epoch_times that are getting processed or completed and refer to this table to find the batches in the next 5 mins that the lambda has to sweep next.&lt;/em&gt;&lt;br&gt;
Also relaying the message to sqs instead of processing helps in prevents hot spots and timeouts in lambda processing.&lt;/p&gt;

&lt;p&gt;And SQS queue is polled by another lambda that processes these batches of 100 events and sends to the client application's SQS queue specified in the request adding a delay that calculated based on the current time and the actual scheduled time as we sweeping it ahead of time. Since SQS support message visibility delay up to 15 mins and since we are pulling about 5 mins ahead of time, we are specifying the compensating delay time.&lt;/p&gt;

&lt;p&gt;And in case of event that is scheduled within the next 5 mins, the API Gateway lambda can directly send it to the client sqs queue bypassing the sweeper which gives us the precision even if something is scheduled a few seconds later.&lt;/p&gt;

&lt;p&gt;In addition to the serverless technologies, pre-batching the events, having a single sweeper instead of multiple workers and relaying them with delay for precision are key in keeping the architecture simple. &lt;/p&gt;

&lt;p&gt;So this is how the above architecture helps us to create fully serverless and highly scalable event scheduler.&lt;/p&gt;

&lt;p&gt;Please let me know your thoughts about this in the comments below. Thanks.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>serverless</category>
      <category>cloud</category>
      <category>cloudnative</category>
    </item>
    <item>
      <title>Configure Symbl.ai to Listen for Action Items in a WebSocket Call</title>
      <author>NLP App Developer &amp; Advocate</author>
      <pubDate>Fri, 28 May 2021 21:59:35 +0000</pubDate>
      <link>https://dev.to/symbldotai/configure-symbl-ai-to-listen-for-action-items-in-a-websocket-call-2l5f</link>
      <guid>https://dev.to/symbldotai/configure-symbl-ai-to-listen-for-action-items-in-a-websocket-call-2l5f</guid>
      <description>&lt;p&gt;Symbl.ai, a conversation intelligence platform for developers to create new experiences around conversation data, empowers developers to extend beyond mere automated speech recognition to contextual insights. Contextual insights are the results of Symbl.ai's Natural Language Processing algorithms to recognize speaker intentions. Among a few of the most common intentions speakers express in speech are follow-ups, questions or action items. &lt;/p&gt;

&lt;p&gt;In short, action-items as a conversational entity recognized by &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt;'s platform are a reflection of a speaker's call to action during his or her conversation at any time. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-step"&gt;
  &lt;/a&gt;
  First Step
&lt;/h2&gt;

&lt;p&gt;The first step to access action items as &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt;'s contextual insights is to sign up. Register for an account at &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt; (i.e., platform.symbl.ai). Grab both your &lt;code&gt;appId&lt;/code&gt; and your &lt;code&gt;appSecret&lt;/code&gt;. With both of those you receive your &lt;code&gt;x-api-key&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you would like to sign your JSON Web Tokens with your &lt;code&gt;appId&lt;/code&gt; together with &lt;code&gt;appSecret&lt;/code&gt; in a &lt;code&gt;cURL&lt;/code&gt; command executed in the terminal, here is a code snippet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl -k -X POST "https://api.symbl.ai/oauth2/token:generate" \
     -H "accept: application/json" \
     -H "Content-Type: application/json" \
     -d "{ \"type\": \"application\", \"appId\": \"&amp;lt;appId&amp;gt;\", \"appSecret\": \"&amp;lt;appSecret&amp;gt;\"}"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you would like to authenticate into &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt;'s developer platform to signing the JWTs in &lt;a href="https://docs.symbl.ai/docs/developer-tools/postman/?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Postman&lt;/a&gt;, the added benefit is that Symbl.ai's public workspace includes almost all of its APIs, including a section called "Labs" for its most experimental developer APIs. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#second-step"&gt;
  &lt;/a&gt;
  Second Step
&lt;/h2&gt;

&lt;p&gt;The second step is to familiarize yourself with &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt;'s &lt;a href="https://docs.symbl.ai/docs/?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;documentation&lt;/a&gt; on its &lt;a href="https://docs.symbl.ai/docs/streamingapi/introduction/?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Streaming API&lt;/a&gt;. To review, loop through each of the following items from &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt;'s &lt;a href="https://docs.symbl.ai/docs/streamingapi/tutorials/receive-ai-insights-from-your-web-browser?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;live speech-to-text&lt;/a&gt; tutorial: 1) creating a WebSocket, 2) setting its listeners, 3) creating an audio stream, or 4) handling the audio stream. If you wouldn't like to review these concepts, then paste the following copied code directly into your console:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * The JWT token you get after authenticating with our API.
 * Check the Authentication section of the documentation for more details.
 */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;accessToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;uniqueMeetingId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;btoa&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user@example.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;symblEndpoint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`wss://api.symbl.ai/v1/realtime/insights/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;uniqueMeetingId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;?access_token=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;accessToken&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ws&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WebSocket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;symblEndpoint&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Fired when a message is received from the WebSocket server&lt;/span&gt;
&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onmessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// You can find the conversationId in event.message.data.conversationId;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasOwnProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;data&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;conversationId&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;conversationId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;message_response&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Transcript (more accurate): &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasOwnProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;punctuated&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Live transcript (less accurate): &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;punctuated&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transcript&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Response type: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;. Object: `&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Fired when the WebSocket closes unexpectedly due to an error or lost connetion&lt;/span&gt;
&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onerror&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Fired when the WebSocket connection has been closed&lt;/span&gt;
&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onclose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Connection to websocket closed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Fired when the connection succeeds.&lt;/span&gt;
&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onopen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;start_request&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;meetingTitle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Websockets How-to&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Conversation name&lt;/span&gt;
    &lt;span class="na"&gt;insightTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;question&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;action_item&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="c1"&gt;// Will enable insight generation&lt;/span&gt;
    &lt;span class="na"&gt;config&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;confidenceThreshold&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;languageCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en-US&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;speechRecognition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;encoding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;LINEAR16&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;sampleRateHertz&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;44100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;speaker&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;example@symbl.ai&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Example Sample&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}));&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mediaDevices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getUserMedia&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;audio&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;video&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * The callback function which fires after a user gives the browser permission to use
 * the computer's microphone. Starts a recording session which sends the audio stream to
 * the WebSocket endpoint for processing.
 */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleSuccess&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AudioContext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;AudioContext&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;AudioContext&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createMediaStreamSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;processor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createScriptProcessor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;gainNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createGain&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;source&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;gainNode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;gainNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;processor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;processor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destination&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;processor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onaudioprocess&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// convert to 16-bit payload&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inputData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputBuffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getChannelData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Float32Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bufferSize&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;targetBuffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Int16Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;inputData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;inputData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;targetBuffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;32767&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;inputData&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;// Send audio stream to websocket.&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readyState&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;WebSocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;OPEN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;targetBuffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;


&lt;span class="nx"&gt;handleSuccess&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#third-step"&gt;
  &lt;/a&gt;
  Third Step
&lt;/h2&gt;

&lt;p&gt;The third step  &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt;'s WebSocket in your browser. Open up an instance of Chrome. Open up the console. Paste the above copied code directly into your console. After hitting enter, your WebSocket's messages start to pile up. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fourth-step"&gt;
  &lt;/a&gt;
  Fourth Step
&lt;/h2&gt;

&lt;p&gt;After having run the &lt;a href="https://docs.symbl.ai/docs/streamingapi/introduction/?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Streaming API&lt;/a&gt; in the browser, you receive &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt;'s transcription from automated speech recognition in real-time. However, &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt; enables you as a developer to extend far beyond merely automated speech recognition to contextual insights. In the code you run in the browser, you configure the WebSocket's event listener to capture contextual insights in real-time. &lt;/p&gt;

&lt;p&gt;Navigate to the event listener &lt;code&gt;ws.onmessage&lt;/code&gt;. Inside of the event listener, the &lt;code&gt;ws.onmessage&lt;/code&gt; method provides you the ability to track events such as those events that are sent or received by the WebSocket. In the event listener there is a stream of raw data following on the WebSocket's protocol.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;topic_response&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;topic&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;topics&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Topic detected: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;topic&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;phrases&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;insight_response&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;insight&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insights&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Insight detected: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;insight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;insight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;action_item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Insight detected is an Action Item!!!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After adding the new log to your WebSocket's &lt;code&gt;ws.onmessage&lt;/code&gt; method, the following is the full code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * The JWT token you get after authenticating with our API.
 * Check the Authentication section of the documentation for more details.
 */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;accessToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;uniqueMeetingId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;btoa&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user@example.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;symblEndpoint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`wss://api.symbl.ai/v1/realtime/insights/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;uniqueMeetingId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;?access_token=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;accessToken&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ws&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WebSocket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;symblEndpoint&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Fired when a message is received from the WebSocket server&lt;/span&gt;
&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onmessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// You can find the conversationId in event.message.data.conversationId;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasOwnProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;data&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;conversationId&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;conversationId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;message_response&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Transcript (more accurate): &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;topic_response&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;topic&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;topics&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Topic detected: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;topic&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;phrases&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;insight_response&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;insight&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insights&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Insight detected: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;insight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;insight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;action_item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Insight detected is an Action Item!!!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasOwnProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;punctuated&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Live transcript (less accurate): &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;punctuated&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transcript&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Response type: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;. Object: `&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Fired when the WebSocket closes unexpectedly due to an error or lost connetion&lt;/span&gt;
&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onerror&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Fired when the WebSocket connection has been closed&lt;/span&gt;
&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onclose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Connection to websocket closed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Fired when the connection succeeds.&lt;/span&gt;
&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onopen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;start_request&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;meetingTitle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Websockets How-to&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Conversation name&lt;/span&gt;
    &lt;span class="na"&gt;insightTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;question&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;action_item&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="c1"&gt;// Will enable insight generation&lt;/span&gt;
    &lt;span class="na"&gt;config&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;confidenceThreshold&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;languageCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en-US&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;speechRecognition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;encoding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;LINEAR16&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;sampleRateHertz&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;44100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;speaker&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;example@symbl.ai&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Example Sample&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}));&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mediaDevices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getUserMedia&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;audio&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;video&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * The callback function which fires after a user gives the browser permission to use
 * the computer's microphone. Starts a recording session which sends the audio stream to
 * the WebSocket endpoint for processing.
 */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleSuccess&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AudioContext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;AudioContext&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;AudioContext&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createMediaStreamSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;processor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createScriptProcessor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;gainNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createGain&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;source&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;gainNode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;gainNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;processor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;processor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destination&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;processor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onaudioprocess&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// convert to 16-bit payload&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inputData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputBuffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getChannelData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Float32Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bufferSize&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;targetBuffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Int16Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;inputData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;inputData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;targetBuffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;32767&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;inputData&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;// Send audio stream to websocket.&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readyState&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;WebSocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;OPEN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;targetBuffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;


&lt;span class="nx"&gt;handleSuccess&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's Next?
&lt;/h1&gt;

&lt;p&gt;If you would like to add a listener for real-time sentiment analysis to your &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt; configurations, &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt; provides you the ability to listen to polarity scores on sentiments from messages in real-time. A &lt;a href="https://medium.com/codex/basic-javascript-code-for-live-conversational-ai-with-its-websockets-api-449d787ddd7a?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;basic knowledge of WebSockets&lt;/a&gt; is a first step. After &lt;a href="https://javascript.plainenglish.io/real-time-sentiment-analysis-api-in-javascript-with-symbl-ai-9e39d50f0654?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;logging sentiments&lt;/a&gt;, the next step is create a way to &lt;a href="https://dev.to/eric_giannini/real-time-sentiment-analysis-on-messages-14n3?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;capture the data in real-time&lt;/a&gt;. If you would like to skip these blogs, feel free to download the code from &lt;a href="https://github.com/symblai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai's GitHub&lt;/a&gt; where you can find the &lt;a href="https://github.com/symblai/real-time-sentiment-analysis-with-websockets?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;real-time sentiment analysis&lt;/a&gt; repo with instructions. &lt;/p&gt;

&lt;p&gt;Sentiment analysis is only one way to handle the conversation data from Symbl.ai's enabled voice. Another way to handle Symbl.ai's enabled voice is to connect an API. In particular, &lt;code&gt;action_item&lt;/code&gt;s enable developers to create automated workflows from the detected insights in real-time so that those detected insights appear in external Third Party SaaS dashboards in real-time. &lt;/p&gt;

&lt;p&gt;Imagine, for instance, creating JIRA tickets in real-time through a &lt;code&gt;POST&lt;/code&gt; request after a &lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt;'s insight for an &lt;code&gt;action_item&lt;/code&gt; is detected in a live conversation. With Symbl.ai, you as a developer are empowered to connect, transform or visualize conversations in ways not yet imagined or implemented in real-life, since Symbl.ai's core product extends far beyond merely automated speech recognition. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#join-our-community"&gt;
  &lt;/a&gt;
  Join Our Community
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://symbl.ai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai&lt;/a&gt;'s invites developers to reach out to us via email at [&lt;code&gt;developer@symbl.ai&lt;/code&gt;][emailto:&lt;a href="mailto:developer@symbl.ai"&gt;developer@symbl.ai&lt;/a&gt;], join our &lt;a href="https://join.slack.com/t/symbldotai/shared_invite/zt-4sic2s11-D3x496pll8UHSJ89cm78CA?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Slack&lt;/a&gt; channels, participate in our &lt;a href="//developer.symbl.ai/hackathon?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;hackathons&lt;/a&gt;, fork our &lt;a href="https://www.postman.com/symbldotai/workspace/symbl-ai/overview?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Postman public workspace&lt;/a&gt;, or &lt;code&gt;git clone&lt;/code&gt; our repos at &lt;a href="https://github.com/symblai?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=devrel"&gt;Symbl.ai's GitHub&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>ai</category>
      <category>machinelearning</category>
      <category>nlp</category>
    </item>
    <item>
      <title>PWA myths and secrets revealed</title>
      <author>Rafael Corrêa Gomes</author>
      <pubDate>Fri, 28 May 2021 21:47:58 +0000</pubDate>
      <link>https://dev.to/rafaelcg/pwa-myths-and-secrets-revealed-50fl</link>
      <guid>https://dev.to/rafaelcg/pwa-myths-and-secrets-revealed-50fl</guid>
      <description>&lt;p&gt;Here I'm going to tell you what nobody is going to tell you from the business and technical standpoint. The opposite side of the PWA word, the myths that might become the dark side of it for you. But first, let's cover what you hear from 99.9% of the agencies and developers, the good points. For those who understand more deeply the technology, I'm covering here PWA Headless which is the most sold solution.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; &lt;em&gt;I prefer PWA, I love the benefits that it provides to customers and merchants. I want to show what agencies and developers won't tell you about the experience working with PWA that they had. Some things will be hidden from you but will impact a lot your business decisions. The best method for anyone to apply PWA is when it wasn't a blind decision.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-seductive-world-of-pwa"&gt;
  &lt;/a&gt;
  The seductive world of PWA 😍
&lt;/h2&gt;

&lt;p&gt;When you hear about PWA, everyone will share the good points. You might hear it in a such manner, that seems like there no reason why you're not on it now. It's faster, cheaper, prettier and you won't have any problems anymore. The real silver bullet already exists and you're missing out. Ok, ok, telling like this you know it's not true, but when a developer or agency that usually has the more technical experience and shows many examples faster than your current store, then it feels like it's going to solve all the problems.&lt;/p&gt;

&lt;p&gt;It's very usual to see as a sales argument numbers like these below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  68% increase of mobile traffic&lt;/li&gt;
&lt;li&gt;  15-fold improvement of load and installation speed&lt;/li&gt;
&lt;li&gt;  25-times reduced use of device storage&lt;/li&gt;
&lt;li&gt;  52% average conversion increase&lt;/li&gt;
&lt;li&gt;  78% average session increase&lt;/li&gt;
&lt;li&gt;  137% engagement increase&lt;/li&gt;
&lt;li&gt;  42.86% lower bounce rate when compared to that of mobile websites&lt;/li&gt;
&lt;li&gt;  133.67% increase in page views&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-main-advantages-are-true"&gt;
  &lt;/a&gt;
  The main advantages are true? 🤔
&lt;/h2&gt;

&lt;p&gt;Usually when I go deep into the analyses made they aren't reporting the real truth. The words are true, but the intentional feeling looking at it, it's not. We didn't see the entire scenario to have been prepared to make a decision based on someone's words; Most of the time who sell it's hiding the bad points for a reason.&lt;/p&gt;

&lt;p&gt;I don't believe into take a decision alone. Without explain to the client and evaluate with them if it makes sense to their business. So, let's cover some of the main points.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-low-development-costs"&gt;
  &lt;/a&gt;
  1. Low Development Costs 🤑
&lt;/h2&gt;

&lt;p&gt;PWAs do not require different versions for various devices; a single progressive app meets the requirements of all endpoints on which it operates. It significantly reduces of efforts that developers provide, and as a result, the cost to create a PWA decrease. The cost is three or four times lower than that of a native mobile app.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider"&gt;
  &lt;/a&gt;
  ⚠️ What to consider
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  If you don't have or you're not planning to have a mobile app soon, it doesn't make sense to consider. The cost of development reduces just when you have to maintain Web / Android / IOS vs PWA.&lt;/li&gt;
&lt;li&gt;  If you just have a web store to maintain the maintenance cost is going to increase.&lt;/li&gt;
&lt;li&gt;  50% of your application will be running into another application. It means that if you use a Shopify or Adobe Commerce store (Magento Commerce) and you usually install apps that change something in the frontend, like apps and modules that improve the customer experience as soon as you install them, forget it, a developer most customizes the 50% of your store that's not you Shopify or Magento store anymore, but a PWA technology running in another server. It usually represents more time to implement something and more money invested to customize 100% of those apps that you usually just have to install.&lt;/li&gt;
&lt;li&gt;  The new 50% custom part of your project will be in another language, probably Vue, React, or Angular. Probably your devs aren't familiar with these technologies, since they aren't not using them now to develop your store.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-applike-experience"&gt;
  &lt;/a&gt;
  2. App-Like Experience 📱
&lt;/h2&gt;

&lt;p&gt;Progressive web applications (a.k.a PWA) provide an advanced user experience by combining the look and feel of mobile applications and the best of website performance. They have the design and settings that are very similar to those of native mobile software. Regardless of technologies, tools, and frameworks on which PWAs are developed, they provide the same user experience as native mobile apps do, and it is considered to be superior to that of websites.&lt;/p&gt;

&lt;p&gt;At the same time, they have the same speed, responsiveness, and comprehensive capabilities as websites with database access and automatic data. As a result, search engines index them, which is why systems such as Google or Bing can find PWA pages. When compared to mobile software that keeps its internal data only for its own use, the pages of these applications can be found on the internet, which may have a favorable impact on the number of page views.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider"&gt;
  &lt;/a&gt;
  ⚠️ What to consider
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  There are many &lt;a href="https://whatwebcando.today/"&gt;PWA capabilities &lt;/a&gt;to match the same experience of a mobile app, each PWA solution offers its own possibilities, and it comes to the agency of developer dedicate more time to implement them, 99% of the PWA implementations that I've seen, just implemented the most basic features.&lt;/li&gt;
&lt;li&gt;  This is unbelievable but there are companies that sell PWA as Headless then when the project is launched, the project is headless and the experience is not PWA, it doesn't even pass in the &lt;a href="https://developers.google.com/web/ilt/pwa/lighthouse-pwa-analysis-tool"&gt;Google PWA validation tool&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;  If you don't track your KPIs you will have the costs and complexity of headless PWA applications but not the advantages that paid for.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-fast-installation"&gt;
  &lt;/a&gt;
  3. Fast Installation 🔥
&lt;/h2&gt;

&lt;p&gt;Unlike regular mobile applications, PWAs do not require a long and complex installation process, which significantly improves user experience. Users just download an app, quickly and directly to their devices, and they do not need to go to the App Store or Google Play. It streamlines the procedure and significantly reduces user abandonment. After users have downloaded an app, they can access it via a desktop icon.&lt;/p&gt;

&lt;p&gt;Some browsers even offer call-to-action-like teasers that prompt users to download these apps when they visit respective websites. This functionality comes built into browsers and allows the apps to enhance their credibility and reliability. As this software does not require installation on devices, users can easily access the PWA via a URL, which significantly contributes to the high shareability.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider"&gt;
  &lt;/a&gt;
  ⚠️ What to consider
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  If you just want the basic features of PWA, measure if the agency is overselling a whole new project attached to it.&lt;/li&gt;
&lt;li&gt;  Basic PWA features might be achieved in a couple of days of work, but migration from Magento 2 to a Magento 2 headless structure might take a couple of months.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MeENmOXz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/rafaelcg.com/wp-content/uploads/2021/05/Magento-PWA-installation.png%3Fresize%3D630%252C319%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MeENmOXz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/rafaelcg.com/wp-content/uploads/2021/05/Magento-PWA-installation.png%3Fresize%3D630%252C319%26ssl%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-better-performance"&gt;
  &lt;/a&gt;
  4. Better Performance 🚀
&lt;/h2&gt;

&lt;p&gt;PWAs cache and serve text, images and other content in a specific, efficient manner, which enables them to operate like websites and significantly improves the running speed. Along with quick operation, impeccable performance is another attribute that has an impact on user experience and conversion rates.&lt;/p&gt;

&lt;p&gt;Retailers and content providers should adopt this type of software as it enables a more positive user experience than mobile apps by improving retention and customer loyalty.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider"&gt;
  &lt;/a&gt;
  ⚠️ What to consider
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  There are many projects that migrated to PWA aiming performance, and the final result was a slower &lt;a href="https://developers.google.com/speed/pagespeed/insights/"&gt;Google Page Speed&lt;/a&gt; or &lt;a href="https://gtmetrix.com/"&gt;GTMetrix&lt;/a&gt; ranking and even worst SEO.&lt;/li&gt;
&lt;li&gt;  The analyses if essential to define the performance KPIs, the styles and static files and pages must be offline, but without consuming time of the first rendering.&lt;/li&gt;
&lt;li&gt;  In general, make sure if you have the possibility of spending 500x less time and money doing performance improvements in your current installation that would bring the same performance result to your current performance metric.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#5-platform-and-deviceagnosticism-%F0%9F%96%A5"&gt;
  &lt;/a&gt;
  5. Platform- and Device-Agnosticism 🖥
&lt;/h2&gt;

&lt;p&gt;Unlike regular applications that are very demanding on operating systems and the technical capabilities of various devices, PWAs work everywhere. A single app can satisfy the needs of various consumers and provide a uniform user experience on different endpoints. At the same time, this type of application enables cross-support to users that switch between their devices by providing them with a continuous experience. Users can access an app that has the same settings and data like that on another device.&lt;/p&gt;

&lt;p&gt;This fact also significantly contributes to business automation, as companies that rely on PWAs know that the software their employees use performs seamlessly regardless of the platform or app version. Also, PWAs are highly responsive to various form factors, as they adapt properly to various screen sizes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider"&gt;
  &lt;/a&gt;
  ⚠️ What to consider
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Your store won't be responsive just because you migrate to PWA, it's something that might be in place today.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#6-no-updating-issues"&gt;
  &lt;/a&gt;
  6. No Updating Issues 🤩
&lt;/h2&gt;

&lt;p&gt;PWAs have specific functionality that allows them to update automatically, without notifying users and bothering them with permission requests. These apps update themselves every time when users visit them, thus eliminating the need to download batch changes and install them. They just provide a renewed look with no human participation.&lt;/p&gt;

&lt;p&gt;However, some of the producers of progressive apps send push notifications to users to inform them about the arrival of a new update. All the same, producers have full control of the information and content, to which users have access.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider"&gt;
  &lt;/a&gt;
  ⚠️ What to consider
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  If you have an app today you know that it's a huge challenge. Basically, it's the same web experience, you deployed it, it's there for everyone.&lt;/li&gt;
&lt;li&gt;  Make sure you have the right "cache" invalidation to different kinds of pages and files. Styles might be saved in the client machine for more time than structural files.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#7-seamless-offline-operation"&gt;
  &lt;/a&gt;
  7. Seamless Offline Operation 📡
&lt;/h2&gt;

&lt;p&gt;The capability to operate offline or in compromised networks makes PWAs much more convenient than websites. Built-in service workers cache important progressive web apps' features and information automatically, which eliminates the necessity to download it and allows users to access it without an internet connection.&lt;/p&gt;

&lt;p&gt;It is based on the saving of information that users previously accessed, for example, pages. If they try to open those that they have not visited online, an app can show a custom offline page. This capability is crucial for retailers, as it allows them to prevent users from abandoning their catalogs and enhances customer retention.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider"&gt;
  &lt;/a&gt;
  ⚠️ What to consider
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Make sure you make the offline content be saved in the client's device during the first access. Check if it won't be requested from the server in the subsequent pages.&lt;/li&gt;
&lt;li&gt;  Dynamic contents might be loaded via AJAX. All public static content of your store will be saved to everyone but the dynamic content will be distributed differently.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#8-no-dependence-on-app-distribution-services"&gt;
  &lt;/a&gt;
  8. No Dependence on App Distribution Services 🍎
&lt;/h2&gt;

&lt;p&gt;Usually, app distribution services, such as the App Store, Google Play or Microsoft Store, set high requirements to software that is included in their databases. Meeting their requirements may become quite a time- and effort-consuming process. Also, in some cases, services remove applications from databases without notice if a company fails to meet some of the requirements. So, PWAs allow producers to avoid complex reconciliation procedures as they do not need to be stored in similar services.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider"&gt;
  &lt;/a&gt;
  ⚠️ What to consider
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  You might want to push your PWA app in the Apple and Google App stores, it will help you to achieve a bigger audience.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#9-push-notification-functionality-%EF%B8%8F"&gt;
  &lt;/a&gt;
  9. Push Notification Functionality ⭐️
&lt;/h2&gt;

&lt;p&gt;Like native mobile applications, PWAs have access to device-specific functionality, such as push notifications. This capability can be performed in various ways and allows companies to make the best use of content advertising.&lt;/p&gt;

&lt;p&gt;Why are push notifications especially efficient when it comes to PWAs? According to &lt;a href="https://developers.google.com/web/showcase/2016/service-worker-perf"&gt;some statistical data&lt;/a&gt;, almost 60% of users allow their progressive applications to send them notifications, which significantly increases opportunities to promote products or services. Moreover, these notifications are displayed on the screens of mobile devices, which is why there is a high probability that they attract users' attention, especially when compared to email newsletters, blog entries or posts in social networks.&lt;/p&gt;

&lt;p&gt;In such a way, a company can better access its target audience, and chances are, the audience will respond. Another valuable outcome is that these bouncing notifications, along with app icons on device desktops, considerably add to brand recognition, as they allow a business to draw attention to itself. However, users that have numerous applications installed on their mobile devices and that allow a great number of them to send notifications risk making their digital experiences cluttered.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider"&gt;
  &lt;/a&gt;
  ⚠️ What to consider
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Most of the time that's a third-party system in the background that is going to handle it for you, have in mind that you might not need a PWA for it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#10-enhanced-security"&gt;
  &lt;/a&gt;
  10. Enhanced Security 👮‍♀️
&lt;/h2&gt;

&lt;p&gt;PWAs rely on HTTPS to provide data safety and minimize the risk of security issues, as this protocol allows to preclude snooping and content tampering. Also, the applications take advantage of Web Bluetooth technology that includes certain security capabilities.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider"&gt;
  &lt;/a&gt;
  ⚠️ What to consider
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  More security is completely relative, you might have even less security depending on how the structure was made.&lt;/li&gt;
&lt;li&gt;  It seems to be 100% guarantee by migrating to PWA but it's not.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#my-thoughts"&gt;
  &lt;/a&gt;
  My thoughts
&lt;/h2&gt;

&lt;p&gt;I love web development and the power of PWA capabilities, I truly believe that PWA is the future and everyone can take parts of its advantages to improve their customer experience. What I don't like is when someone sells some PWA to merchants without telling the points to consider, it results in frustration, huge cost and the client thinks that PWA is what has been delivered by the agency and not what it really is. An awesome method to improve your customer experience.&lt;/p&gt;

</description>
      <category>pwa</category>
      <category>ecommerce</category>
      <category>headless</category>
      <category>strategy</category>
    </item>
    <item>
      <title>Learning from React - part 1</title>
      <author>Costin Manda</author>
      <pubDate>Fri, 28 May 2021 21:28:50 +0000</pubDate>
      <link>https://dev.to/costinmanda/learning-from-react-part-1-d8o</link>
      <guid>https://dev.to/costinmanda/learning-from-react-part-1-d8o</guid>
      <description>&lt;p&gt;Original post at: &lt;a href="https://siderite.dev/blog/learning-from-react---part-1/"&gt;https://siderite.dev/blog/learning-from-react---part-1/&lt;/a&gt;&lt;br&gt;
  More to come.&lt;/p&gt;

&lt;p&gt;A billion years ago, Microsoft was trying to push a web development model that simulated Windows Forms development: &lt;a href="https://en.wikipedia.org/wiki/ASP.NET_Web_Forms"&gt;ASP.Net Web Forms&lt;/a&gt;. It featured several ideas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;component based design (input fields were a component, you could bundle two together into another component, the page was a component, etc)&lt;/li&gt;
&lt;li&gt;each component was rendering itself&lt;/li&gt;
&lt;li&gt;components were defined using both HTML-like language, Javascript, CSS and server .Net code bundled together, sometimes in the same file&lt;/li&gt;
&lt;li&gt;the rendering of the component was done on the server side and pushed to the client&lt;/li&gt;
&lt;li&gt;data changes or queries came from the client to the server via event messages&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;partial rendering was possible using &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.updatepanel"&gt;UpdatePanels&lt;/a&gt;, which were a wrapper over ajax calls that called for partial content  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;at the time many juniors were putting the entire page into an UpdatePanel and said they were doing AJAX while senior devs smugly told them how bad that was and that it shouldn't be done. I agreed with the senior devs, but I really disliked their uninformed condescending attitude, so &lt;a href="///blog/compressing-updatepanel-output.html/"&gt;I created a method&lt;/a&gt; of diffing the content sent previously and the new content and sending only the difference. This minimized the amount of data sent via the network about a hundred times. &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sound familiar? Because for me, learning React made me think of that almost immediately. &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;component based design&lt;/li&gt;
&lt;li&gt;each component renders itself&lt;/li&gt;
&lt;li&gt;components are defined by bundling together HTML, Javascript/Typescript and CSS&lt;/li&gt;
&lt;li&gt;the rendering of the component is done in the virtual DOM and pushed to the actual browser DOM&lt;/li&gt;
&lt;li&gt;data changes or queries are sent from the browser to the React code via event messages&lt;/li&gt;
&lt;li&gt;partial rendering is built in the system, by diffing the existing render tree with a newly generated one from data changes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At first look, an old guy like me would say "been there, done that. It's bad design and it will soon go away". But I was also motivated enough at the time of ASP.Net Forms to look into it, even under the hood, and understand the thing. To say it was badly designed would be stupid. It worked for many years and powered (and still does) thousands of big applications. The reason why Forms failed is because better ideas came along, not because it was a bad idea when it was created.&lt;/p&gt;

&lt;p&gt;Let's look a little bit on what made Forms become obsolete: the MVC pattern, more specifically implemented by Ruby developers and taking the world by storm and ending up being &lt;a href="https://en.wikipedia.org/wiki/ASP.NET_MVC"&gt;adopted by Microsoft&lt;/a&gt;, too. But Model View Controller wasn't a new pattern, it has been used forever on desktop applications, so why was it such a blow to Forms? It was a lot of fashion elitism, but also that MVC molded itself better on web applications:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a clear separation of concerns: data, logic and display&lt;/li&gt;
&lt;li&gt;the ability to push the display more towards the client, which was new but becoming increasingly easy in browsers&lt;/li&gt;
&lt;li&gt;a clear separation of programming languages: HTML in html files, Javascript in .js files, server code in .cs files&lt;/li&gt;
&lt;li&gt;full (and simple) control over how things were rendered, displayed and sent to the server&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Yet in the case of React, things are going in the opposite direction, going from MVC applications with clearly separated language files to these .jsx or .tsx files that contain javascript, html and even css in the same file, mixed together into components. Is that bad? Not really. It kind of looks bad, but the entire work is done on the client. There is no expensive interface between a server and a browser that would make the model, otherwise used successfully for decades in desktop applications, ineffective. It is basically Windows Forms in the browser, with some new ideas thrown in. As for the combination of languages in a single syntax, it can be abused, just like any technology, but it can also be done right: with state, logic and UI represented by different files and areas of the application. Yes, you need script to hide or show something based on data, but that script is part of the UI and different from the script used to represent logic. Just the language is the same. &lt;/p&gt;

&lt;p&gt;"&lt;em&gt;Is Siderite joining the React camp, then? Switching sides, going frontend and doing nasty magic with Javascript and designing web pages?&lt;/em&gt;" people will ask. A reasonable question, considering most of my close friends still think React is for people who can't code or too young to remember the .aspx hell. The answer is no! Yet just as with the UpdatePanel seniors that couldn't stop for a second to look a bit deeper into an idea and see how it could be done and then cruelly dismissing curious juniors, thinking that React can't teach you anything is just dumb.&lt;/p&gt;

&lt;p&gt;In this series I will explore not only React ideas, but also the underlying principles. React is just an example of &lt;a href="https://en.wikipedia.org/wiki/Reactive_programming"&gt;reactive programming&lt;/a&gt;, which has been in use, even if less popular, for decades. It is now making a comeback because of &lt;a href="https://en.wikipedia.org/wiki/Microservices"&gt;microservices&lt;/a&gt;, another fashionable fad that has had implementations since 1990, but no one gave them the time of day. Ideas of data immutability are coming from &lt;a href="https://en.wikipedia.org/wiki/Functional_programming"&gt;functional programming&lt;/a&gt;, which is also making a comeback as it works great with big data. So why not try this thing out, iron out the kinks and learn what they did right?&lt;/p&gt;

</description>
      <category>programming</category>
      <category>essay</category>
      <category>react</category>
      <category>aspnet</category>
    </item>
    <item>
      <title>Can someone help me figure out how I can redistribute my game?</title>
      <author>Calin Baenen</author>
      <pubDate>Fri, 28 May 2021 21:27:34 +0000</pubDate>
      <link>https://dev.to/baenencalin/can-someone-help-me-figure-out-how-i-can-redistribute-my-game-161i</link>
      <guid>https://dev.to/baenencalin/can-someone-help-me-figure-out-how-i-can-redistribute-my-game-161i</guid>
      <description>&lt;p&gt;&lt;a href="https://twitter.com/BaenenCalin/status/1398389301256364033"&gt;Original tweet.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I want people to test my game, and I got someone to test my game, but they got this strange error, and so I tried to fix it in a logical way, and it provided another error, and I'm not sure how I can fix this error.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/gen2brain/raylib-go/issues/135"&gt;GitHub Issue (How do I redistribute my prototype-game? #135).&lt;/a&gt;&lt;/p&gt;

</description>
      <category>c</category>
      <category>go</category>
      <category>help</category>
      <category>gamedev</category>
    </item>
    <item>
      <title>How to create a multilingual project in Laravel 8 (i18n)</title>
      <author>Jérôme W</author>
      <pubDate>Fri, 28 May 2021 20:27:15 +0000</pubDate>
      <link>https://dev.to/jeromew90/how-to-create-a-multilingual-project-in-laravel-internationalization-i18n-11ol</link>
      <guid>https://dev.to/jeromew90/how-to-create-a-multilingual-project-in-laravel-internationalization-i18n-11ol</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VnBsVAKG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xc2sjhp06mhy6zzcqz3x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VnBsVAKG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xc2sjhp06mhy6zzcqz3x.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This tutorial explains how to create a language system and be able to change the language in the menu with the corresponding translations.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I will try to be clear and concise 😃&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h1&gt;

&lt;p&gt;First, you need to create a controller &lt;code&gt;App/Http/Controllers&lt;/code&gt; to record the language in session and be able to retrieve it with the middleware we will create just after :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Http\Controllers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Http\RedirectResponse&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;LocalizationController&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Controller&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cd"&gt;/**
     * @param $locale
     * @return RedirectResponse
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$locale&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;App&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nb"&gt;setLocale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$locale&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'locale'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$locale&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;back&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, you must create a middleware &lt;code&gt;App/Http/Middleware&lt;/code&gt; to retrieve the language that was recorded in session :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Http\Middleware&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Closure&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Localization&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cd"&gt;/**
     * Handle an incoming request.
     * @param \Illuminate\Http\Request $request
     * @param \Closure $next
     * @return mixed
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;Closure&lt;/span&gt; &lt;span class="nv"&gt;$next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'locale'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;App&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nb"&gt;setLocale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'locale'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, you must save the middleware in &lt;code&gt;app/http/Kernel.php&lt;/code&gt; :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;    &lt;span class="cd"&gt;/**
     * The application's route middleware groups.
     * @var array
     */&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$middlewareGroups&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;'web'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;App\Http\Middleware\Localization&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;

        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finaly, create a route to change the language :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Http\Controllers\LocalizationController&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nc"&gt;Route&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'lang/{locale}'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nc"&gt;App\Http\Controllers\LocalizationController&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'index'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#create-the-dropdown"&gt;
  &lt;/a&gt;
  Create the dropdown
&lt;/h1&gt;

&lt;p&gt;First, you must create a flag folder in &lt;code&gt;public/images&lt;/code&gt; and store flags images inside :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MWA3p499--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qjrpx63jcxd0wdkaggrl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MWA3p499--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qjrpx63jcxd0wdkaggrl.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Secondly, in your menu, insert this code to be able to switch from one language to another :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;@php $locale = session()-&amp;gt;get('locale'); @endphp
&lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"nav-item dropdown"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"navbarDropdown"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"nav-link dropdown-toggle"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;
       &lt;span class="na"&gt;data-toggle=&lt;/span&gt;&lt;span class="s"&gt;"dropdown"&lt;/span&gt; &lt;span class="na"&gt;aria-haspopup=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt; &lt;span class="na"&gt;aria-expanded=&lt;/span&gt;&lt;span class="s"&gt;"false"&lt;/span&gt; &lt;span class="na"&gt;v-pre&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        @switch($locale)
            @case('en')
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"{{asset('images/flag/en.png')}}"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"25px"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; English
            @break
            @case('fr')
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"{{asset('images/flag/fr.png')}}"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"25px"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; Français
            @break
            @default
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"{{asset('images/flag/en.png')}}"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"25px"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; English
        @endswitch
        &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"caret"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"dropdown-menu dropdown-menu-right"&lt;/span&gt; &lt;span class="na"&gt;aria-labelledby=&lt;/span&gt;&lt;span class="s"&gt;"navbarDropdown"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"dropdown-item"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"lang/en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"{{asset('images/flag/en.png')}}"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"25px"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; English&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"dropdown-item"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"lang/fr"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"{{asset('images/flag/fr.png')}}"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"25px"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; Français&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#lets-try-it"&gt;
  &lt;/a&gt;
  Let's try it
&lt;/h1&gt;

&lt;p&gt;To test that everything works, insert this code on your homepage or any other page :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;@lang("Bonjour")&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then to finish, in the &lt;code&gt;resources/lang&lt;/code&gt; folder, you have to create a folder for each language you want (for example fr and en) and for each folder, do the following to take into account the text of the homepage to translate :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// EN folder&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s1"&gt;'Bonjour'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'Hello'&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we go, now if you click on the english flag in your menu, the &lt;em&gt;Bonjour&lt;/em&gt; text will change to &lt;em&gt;Hello&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Notice that if you need, there is another way to make translations using &lt;code&gt;json&lt;/code&gt; :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Bonjour"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Hello"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h1&gt;

&lt;p&gt;If you're looking for a lot a flags, I have a &lt;a href="https://github.com/Jerome-W-90/flags-icon-iso-3166-1-alpha-2"&gt;repository&lt;/a&gt; with : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;284 flags of countries and unions all over the world&lt;/li&gt;
&lt;li&gt;With name &lt;code&gt;France.png&lt;/code&gt; or ISO 3166-1 alpha-2 codes &lt;code&gt;fr.png&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Available sizes: 16×16, 24×24, 32×32, 48×48, 64×64, 128×128&lt;/li&gt;
&lt;li&gt;Icon formats: PNG&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want more informations about localization, you can refer in official Laravel documentation : &lt;a href="https://laravel.com/docs/8.x/localization"&gt;https://laravel.com/docs/8.x/localization&lt;/a&gt;&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>php</category>
    </item>
    <item>
      <title>Ruby Money &amp; BigDecimal</title>
      <author>M Bellucci</author>
      <pubDate>Fri, 28 May 2021 20:26:54 +0000</pubDate>
      <link>https://dev.to/delbetu/ruby-money-bigdecimal-1chb</link>
      <guid>https://dev.to/delbetu/ruby-money-bigdecimal-1chb</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The problem
&lt;/h2&gt;

&lt;p&gt;In my current job, we faced calculation errors when operating with &lt;code&gt;float&lt;/code&gt; for Money.&lt;br&gt;
After some investigation, we found this &lt;a href="https://husobee.github.io/money/float/2016/09/23/never-use-floats-for-currency.html"&gt;article&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our first approach was to find every usage of money attributes and parse them with &lt;code&gt;BigDecimal&lt;/code&gt;.&lt;br&gt;&lt;br&gt;
This solution has some drawbacks. First, we would need to replace it in many places. Second, it doesn't prevent future developers to use float.  &lt;/p&gt;

&lt;p&gt;In order to overcome those issues, I wanted to enforce a validation over every money attribute. &lt;br&gt;
Then if a future execution accidentally does &lt;code&gt;money_attr = 233.0&lt;/code&gt; (float) we could detect that error and report it.&lt;br&gt;
After thinking for a moment I thought that would be preferable to do a conversion (&lt;code&gt;float-&amp;gt;BigDecimal&lt;/code&gt;) rather than raising an error.&lt;/p&gt;

&lt;p&gt;So I'd like to write Ruby code to say: "hey if someone tries to assign a &lt;code&gt;float&lt;/code&gt; to a money attribute then convert it to &lt;code&gt;BigDecimal&lt;/code&gt;"&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-solution"&gt;
  &lt;/a&gt;
  The Solution
&lt;/h2&gt;

&lt;p&gt;In order to do that I came up with this solution:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;BigDecimalCheck&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;included&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;klass&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;klass&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;ClassMethods&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;ClassMethods&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;enforce_big_decimal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="kp"&gt;attr&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="n"&gt;define_method&lt;/span&gt; &lt;span class="ss"&gt;:"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="kp"&gt;attr&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="ss"&gt;="&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
          &lt;span class="c1"&gt;# try to convert argument to BigDecimal&lt;/span&gt;
          &lt;span class="nb"&gt;instance_variable_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:"@&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="kp"&gt;attr&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="ss"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;BigDecimal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Rate&lt;/span&gt;
  &lt;span class="nb"&gt;attr_accessor&lt;/span&gt; &lt;span class="ss"&gt;:money&lt;/span&gt;

  &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;BigDecimalCheck&lt;/span&gt;
  &lt;span class="n"&gt;enforce_big_decimal&lt;/span&gt; &lt;span class="ss"&gt;:money&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With that code in place a consumer code would work like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Rate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;money&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;            &lt;span class="c1"&gt;# works&lt;/span&gt;
&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;money&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;33.0293&lt;/span&gt;       &lt;span class="c1"&gt;# works&lt;/span&gt;
&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;money&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"33"&lt;/span&gt;          &lt;span class="c1"&gt;# works&lt;/span&gt;
&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;money&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"33.0293"&lt;/span&gt;     &lt;span class="c1"&gt;# works&lt;/span&gt;
&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;money&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"no numeric"&lt;/span&gt;  &lt;span class="c1"&gt;# Argument Error&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#how-this-solution-work"&gt;
  &lt;/a&gt;
  How this solution work?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;self.included&lt;/code&gt; it is a hook that Ruby modules provide. It is called when the module is included and receives the class that included it.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;klass.extend(ClassMethod)&lt;/code&gt; Let's say that klass = Foo, then this would be the same as doing:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Foo&lt;/span&gt;
  &lt;span class="kp"&gt;extend&lt;/span&gt; &lt;span class="no"&gt;ClassMethod&lt;/span&gt;
  &lt;span class="c1"&gt;# Now I'm able to call methods in ClassMethod form here&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;which will inject methods from ClassMethod into Foo object at class scope. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;enforce_big_decimal&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;enforce_big_decimal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="kp"&gt;attr&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="n"&gt;define_method&lt;/span&gt; &lt;span class="ss"&gt;:"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="kp"&gt;attr&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="ss"&gt;="&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
          &lt;span class="c1"&gt;# try to convert argument to BigDecimal&lt;/span&gt;
          &lt;span class="nb"&gt;instance_variable_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:"@&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="kp"&gt;attr&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="ss"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;BigDecimal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If I call &lt;code&gt;enforce_big_decimal :unit_price, total_price&lt;/code&gt;&lt;br&gt;
It will define two methods:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;unit_price&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;parsed_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;BigDecimal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# raise error if cannot parse&lt;/span&gt;
  &lt;span class="nb"&gt;instance_variable_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:@unit_price&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parsed_value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;total_price&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;parsed_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;BigDecimal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# raise error if cannot parse&lt;/span&gt;
  &lt;span class="nb"&gt;instance_variable_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:@total_price&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parsed_value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conslusion"&gt;
  &lt;/a&gt;
  Conslusion
&lt;/h2&gt;

&lt;p&gt;I've shown an example of how to generalize the solution of a problem by using ruby meta-programming techniques.&lt;br&gt;&lt;br&gt;
I hope it can help you solve similar problems.&lt;br&gt;&lt;br&gt;
Feel free to ask questions or suggest improvements.&lt;br&gt;&lt;br&gt;
Thanks for reading!&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>metaprogramming</category>
      <category>float</category>
      <category>bigdecimal</category>
    </item>
    <item>
      <title>Referrers on the web</title>
      <author>Jordan Finneran</author>
      <pubDate>Fri, 28 May 2021 20:25:16 +0000</pubDate>
      <link>https://dev.to/jordanfinners/referrers-on-the-web-n2b</link>
      <guid>https://dev.to/jordanfinners/referrers-on-the-web-n2b</guid>
      <description>&lt;h2&gt;
  &lt;a href="#contents"&gt;
  &lt;/a&gt;
  Contents
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="#intro"&gt;Intro&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="#referrer-policy"&gt;Referrer-Policy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="#links"&gt;Linking&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="#server"&gt;Bonus: Server header&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="#summary"&gt;Summary&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Continuing on from my previous blog about &lt;a href="https://jordanfinners.dev/blogs/website-security-week"&gt;website security week&lt;/a&gt;, we're going to talk about a Referrers on the web.&lt;/p&gt;

&lt;p&gt;Referrers on the web allow sites you are visiting to see what site you have come from, as the &lt;code&gt;Referer&lt;/code&gt; header (it is actually mispelled in the HTTP Specification) contains a absolute or partial url of the site you've come from if you have followed a link.&lt;br&gt;
This is &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Security/Referer_header:_privacy_and_security_concerns"&gt;commonly used for tracking and analytics&lt;/a&gt;, but it can also be used to steal information for example that contained in the URL of a reset password page or where a token is part of the URL, which is why it comes under security headers.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#referrerpolicy"&gt;
  &lt;/a&gt;
  Referrer-Policy &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This header indicates how much information can be shared in the &lt;code&gt;Referer&lt;/code&gt; header on requests made across your site.&lt;/p&gt;

&lt;p&gt;Recommended setting:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Referrer-Policy: no-referrer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can read about it more on &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy"&gt;Modzilla&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It can also be set in HTML as a meta tag &lt;code&gt;&amp;lt;meta name="referrer" content="origin"&amp;gt;&lt;/code&gt;, but also on individual links.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#linking"&gt;
  &lt;/a&gt;
  Linking &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Links aka &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tags can include a more specific referrer policy than your site wide one you set using the previous header.&lt;/p&gt;

&lt;p&gt;This can be controlled using the &lt;code&gt;referrerpolicy&lt;/code&gt; attribute, for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;a href="http://example.com" referrerpolicy="origin"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This can also be used on &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;area&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;, or &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; elements.&lt;/p&gt;

&lt;p&gt;Or alternatively using the &lt;code&gt;rel&lt;/code&gt; attribute to remove any referrer, this would be my recommended pattern.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;a href="http://example.com" rel="noreferrer"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This can also be used on &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;area&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; elements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-server-header"&gt;
  &lt;/a&gt;
  Bonus: Server header &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;As this is a fairly short and sweet blog I thought I would include a bonus header!&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Server&lt;/code&gt; header, this is usually used to indicate what is serving up your website. Often a form of advertising about the technology you are using.&lt;/p&gt;

&lt;p&gt;This can often include the version of the tools used to serve your website. You should avoid this and including any default information in this header as it could lead to vulnerabilities being found in that version of the tool.&lt;/p&gt;

&lt;p&gt;I would recommend removing the header if possible or overriding it with your own value, as then no information is leaked!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;In summary, setting a few additional headers when serving up your site can in this case also the privacy of your users and reduce any leakage of information to third parties. It reduces the amount of attack surface there is for attackers and prevent common attacks on websites.&lt;/p&gt;

&lt;p&gt;Set those headers now!&lt;/p&gt;

&lt;p&gt;Happy Building!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>security</category>
    </item>
  </channel>
</rss>
