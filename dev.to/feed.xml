<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to easily get started with ThreeJS - Part 2</title>
      <author>Davide Mandelli</author>
      <pubDate>Fri, 26 Nov 2021 15:54:52 +0000</pubDate>
      <link>https://dev.to/th3wall/how-to-easily-get-started-with-threejs-part-2-387f</link>
      <guid>https://dev.to/th3wall/how-to-easily-get-started-with-threejs-part-2-387f</guid>
      <description>&lt;p&gt;Hi guys, hope you are fine! :)&lt;/p&gt;

&lt;p&gt;I'm back after posting the first part of this series about how to get started on Three.js without pain.&lt;br&gt;
If you haven't done it yet, you can read the first part here 👇🏼&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/th3wall" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---_MOyEa0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--RSswW12f--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/140728/2b1da2e6-75eb-48cd-96ac-09ab855b54be.jpeg" alt="th3wall"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/th3wall/how-to-easily-get-started-with-threejs-part-1-go7" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to easily get started with ThreeJS - Part 1&lt;/h2&gt;
      &lt;h3&gt;Davide Mandelli ・ Nov 23 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#threejs&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webgl&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#%C2%A0"&gt;
  &lt;/a&gt;
   
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#small-recap"&gt;
  &lt;/a&gt;
  Small recap
&lt;/h2&gt;

&lt;p&gt;Last time we finished with our canvas containing a red 3D cube rotated by a little bit in order to be able to see some angles.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qAPXosqv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5q6z9kvnk577rfd39tuv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qAPXosqv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5q6z9kvnk577rfd39tuv.png" alt="Cube at last step of part one" width="880" height="354"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the full &lt;em&gt;script.js&lt;/em&gt; file that you should have if you have followed the steps in the &lt;a href="https://dev.to/th3wall/how-to-easily-get-started-with-threejs-part-1-go7"&gt;part one&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// script.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;three&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;scene&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Scene&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PerspectiveCamera&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;geometry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;BoxGeometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;material&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MeshBasicMaterial&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0xff0000&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mesh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;material&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;mesh&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rotation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mesh&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;renderer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WebGLRenderer&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setSize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;domElement&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Today we will see how to animate our cube, how to change its geometry and its material (with a special technique).&lt;br&gt;
At the end of the series you will have a demo that should look just like this: &lt;a href="https://th3wall-threejs.netlify.app"&gt;https://th3wall-threejs.netlify.app&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#%C2%A0"&gt;
  &lt;/a&gt;
   
&lt;/h2&gt;
&lt;h2&gt;
  &lt;a href="#animating-the-cube"&gt;
  &lt;/a&gt;
  Animating the cube
&lt;/h2&gt;

&lt;p&gt;In order to animate stuff, what we need to do is &lt;strong&gt;take a picture of each frame&lt;/strong&gt;. But, how can we do that? 🤔&lt;/p&gt;

&lt;p&gt;We will use the &lt;strong&gt;requestAnimationFrame&lt;/strong&gt; (also called &lt;em&gt;RAF&lt;/em&gt;), which lets you trigger a function on each frame.&lt;br&gt;
This has to do with plain JS and it's not specific to ThreeJS.&lt;/p&gt;

&lt;p&gt;First of all, inside the same &lt;em&gt;script.js&lt;/em&gt; file, we need to create a function and call it once:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;animate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// empty function&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The second step is to &lt;em&gt;move the render&lt;/em&gt; inside this function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;animate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now it's time to insert the &lt;em&gt;requestAnimationFrame&lt;/em&gt; inside the &lt;em&gt;animate&lt;/em&gt; function, passing the same &lt;em&gt;animate&lt;/em&gt; function to it as a parameter.&lt;/p&gt;

&lt;p&gt;RAF method takes a callback function as a parameter, that will be called on the next frame (once the screen is ready to accept the next screen repaint), and on the next, and on the next.....&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;animate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requestAnimationFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;⚠️ You may be wondering why not use a setTimeout/setInterval called repeatedly: when we call requestAnimationFrame() to create an animation, we are assured that our animation code is called when the user's computer is actually ready to make changes to the screen each time, resulting in a &lt;strong&gt;smoother&lt;/strong&gt;, &lt;strong&gt;more efficient&lt;/strong&gt; animation than if we used a setTimeout or a setInterval repeatedly.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br&gt;How can we make sure that everything is working? &lt;strong&gt;Let's rotate our object!&lt;/strong&gt;&lt;br&gt;
To do that, we will increment the rotation of the mesh by a very small amount, let's try with 0.01:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;animate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requestAnimationFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 

  &lt;span class="nx"&gt;mesh&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rotation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mf"&gt;0.01&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here we go: our cube is now rotating!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ImjZQtAH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/86cm57hi9ixzslmopj6x.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ImjZQtAH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/86cm57hi9ixzslmopj6x.gif" alt="Cube rotating for the first time" width="880" height="365"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#%C2%A0"&gt;
  &lt;/a&gt;
   
&lt;/h2&gt;
&lt;h2&gt;
  &lt;a href="#change-the-geometry"&gt;
  &lt;/a&gt;
  Change the geometry
&lt;/h2&gt;

&lt;p&gt;Now that our object is animated, we can change its geometry.&lt;br&gt;
On the &lt;a href="https://threejs.org/docs"&gt;ThreeJS documentation&lt;/a&gt;, you can find a lot of available geometries with which you can play and experiment with a lot of different things.&lt;br&gt;
One of my favorites (same as Bruno 😁) is the &lt;strong&gt;TorusKnowGeometry&lt;/strong&gt;, which consists of a sort of "infinite" knot with a lot of rounded surfaces.&lt;/p&gt;

&lt;p&gt;We can create a torus knot by replacing the geometry declaration line from &lt;em&gt;BoxGeometry&lt;/em&gt; to &lt;em&gt;TorusKnotGeometry&lt;/em&gt;. Obviously, by changing the shape of our object, we need to adjust its parameters accordingly.&lt;/p&gt;

&lt;p&gt;For the Torus Knot, the parameters we will need to remember for our purposes are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;radius&lt;/em&gt; - Defines the radius of the torus [default is 1];&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;tube&lt;/em&gt; — Defines the radius of the tube [default is 0.4];&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;tubularSegments&lt;/em&gt; — Defines the number of tubular vertices [default is 64];&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;radialSegments&lt;/em&gt; — Defines the number of radial vertices [default is 8]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are some values we throw in&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// replace this line&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;geometry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;BoxGeometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// with this one&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;geometry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TorusKnotGeometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and the result will be this one:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3VeNyAcT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/15cxpm83r6x0yqnut1ej.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3VeNyAcT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/15cxpm83r6x0yqnut1ej.gif" alt="First TorusKnot" width="880" height="365"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Much better than the cube I would say, isn't it? I personally love this geometry!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#%C2%A0"&gt;
  &lt;/a&gt;
   
&lt;/h2&gt;
&lt;h2&gt;
  &lt;a href="#change-the-material"&gt;
  &lt;/a&gt;
  Change the material
&lt;/h2&gt;

&lt;p&gt;The geometry looks much better and evolved than before, but honestly, with this flat red color it's a little messy and the curves of the geometry aren't really clear to see. So we need to change the material now.&lt;/p&gt;

&lt;p&gt;There are so many materials included in ThreeJS and you can also create your own material with something called &lt;strong&gt;shaders&lt;/strong&gt;.&lt;br&gt;Shaders are a BIG and quite hard topic to learn so we are not gonna use them for our purpose, but Bruno has hours of lessons also on this topic with his &lt;a href="https://threejs-journey.com/"&gt;ThreeJS Course&lt;/a&gt;, a must for every creative developer.&lt;/p&gt;

&lt;p&gt;What we are gonna use is a special technique called &lt;strong&gt;matcaps&lt;/strong&gt;. Matcaps are a kind of material that is used to simulate the appearance of a material on a surface.&lt;/p&gt;

&lt;p&gt;Firstly, we need to access to a matcap, and Bruno provided a link to one of yours in the video tutorial. I will use this one:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uLTvcl-n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bruno-simon.com/prismic/matcaps/3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uLTvcl-n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bruno-simon.com/prismic/matcaps/3.png" alt="Bruno's Matcap #3" width="256" height="256"&gt;&lt;/a&gt;&lt;br&gt;
Link: &lt;a href="https://bruno-simon.com/prismic/matcaps/3.png"&gt;https://bruno-simon.com/prismic/matcaps/3.png&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's basically a picture of a sphere (you can create one yourself with programs like Photoshop) and you will use this picture as a texture for the geometry. Every pixel of this image will be applied to the geometry and will take the colors from every pixel of the image. &lt;/p&gt;

&lt;p&gt;To use a matcap, we need to load what I've called &lt;em&gt;texture&lt;/em&gt; and in order to do this, in ThreeJS we will use something called &lt;strong&gt;TextureLoader&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;textureLoader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TextureLoader&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, we load our matcap image inside the loader providing it the URL and we assign it to a variable:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;matcapTexture&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;textureLoader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://bruno-simon.com/prismic/matcaps/3.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that our texture is loaded, we need to apply it to the material as last step.&lt;br&gt;
The MeshBasicMaterial method is unable to use a matcap as a texture, so we need to use a different method called &lt;strong&gt;MeshMatcapMaterial&lt;/strong&gt; (ref: &lt;a href="https://threejs.org/docs/#api/en/materials/MeshMatcapMaterial"&gt;MeshMatcapMaterial Docs&lt;/a&gt;) and then we can provide it our texture contained in the variable &lt;em&gt;matcapTexture&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Replace this line&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;material&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MeshBasicMaterial&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0xff0000&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// With this one&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;material&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MeshMatcapMaterial&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;matcap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;matcapTexture&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And finally, if you now preview the scene you will see this beauty&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--611NLVd7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/js1ovd8nseoeoby70jli.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--611NLVd7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/js1ovd8nseoeoby70jli.gif" alt="MeshMatcapMaterial applied" width="880" height="383"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to add a little bit of movement?&lt;br&gt;Let's add also a vertical rotation to our torus knot. Inside the &lt;em&gt;animate&lt;/em&gt; function, together with the horizontal movement, we add this line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;mesh&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rotation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mf"&gt;0.01&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can enjoy this beautiful 3D animation along with this stunning matcap!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j2zkQ3yj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prrughxs2yvw56iainoa.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j2zkQ3yj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prrughxs2yvw56iainoa.gif" alt="Final Torus Knot effect" width="880" height="383"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#%C2%A0"&gt;
  &lt;/a&gt;
   
&lt;/h2&gt;
&lt;h2&gt;
  &lt;a href="#final-recap"&gt;
  &lt;/a&gt;
  Final recap
&lt;/h2&gt;

&lt;p&gt;In this part we have seen how to animate our object, how to change its geometry and how to change its material by using a special technique.&lt;/p&gt;

&lt;p&gt;In the third and last part, we will apply some little smooth animations to our scene, we will make it responsive and we will style the page to look like this: &lt;a href="https://th3wall-threejs.netlify.app"&gt;https://th3wall-threejs.netlify.app&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As I did for the first part, I leave down here the full &lt;em&gt;script.js&lt;/em&gt; code block so you can have the updated one:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// script.js&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;scene&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Scene&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PerspectiveCamera&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;textureLoader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TextureLoader&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;matcapTexture&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;textureLoader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://bruno-simon.com/prismic/matcaps/3.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;geometry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TorusKnotGeometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;material&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MeshMatcapMaterial&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;matcap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;matcapTexture&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mesh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;material&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mesh&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;renderer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WebGLRenderer&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setSize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;animate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requestAnimationFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 

  &lt;span class="nx"&gt;mesh&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rotation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mf"&gt;0.01&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
  &lt;span class="nx"&gt;mesh&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rotation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mf"&gt;0.01&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;domElement&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope you are learning something and I also hope that you find this article interesting.&lt;/p&gt;

&lt;p&gt;Please follow me on &lt;a href="https://twitter.com/Th3Wall25"&gt;Twitter&lt;/a&gt;, &lt;a href="https://github.com/Th3Wall"&gt;GitHub&lt;/a&gt; &amp;amp; &lt;a href="https://hashnode.com/@Th3Wall"&gt;Hashnode&lt;/a&gt; and let me know if you liked it!&lt;/p&gt;

&lt;p&gt;Thanks.&lt;br&gt;
Th3Wall&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Adding Gitmark to lazygit</title>
      <author>Melvin Carvalho</author>
      <pubDate>Fri, 26 Nov 2021 15:52:03 +0000</pubDate>
      <link>https://dev.to/melvincarvalho/adding-gitmark-to-lazygit-dmc</link>
      <guid>https://dev.to/melvincarvalho/adding-gitmark-to-lazygit-dmc</guid>
      <description>&lt;p&gt;&lt;a href="https://git-mark.com/"&gt;Gitmark&lt;/a&gt; is a way to mark your git commits to achieve finalization&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/jesseduffield/lazygit"&gt;Lazygit&lt;/a&gt; is a useful tool for those running git on the command line&lt;/p&gt;

&lt;p&gt;Lazygit has an interesting feature which lets you add commands to key bindings.  Here's how I added a gitmark workflow to lazygit&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;customCommands&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;m'&lt;/span&gt;
    &lt;span class="na"&gt;context&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;global'&lt;/span&gt;
    &lt;span class="na"&gt;subprocess&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
    &lt;span class="na"&gt;prompts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;menu'&lt;/span&gt;
        &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Git&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Mark?'&lt;/span&gt;
        &lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;trial'&lt;/span&gt;
            &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;trial&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;run'&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;commit'&lt;/span&gt;
            &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;commit'&lt;/span&gt;
            &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;--tag&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;--send&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;--commit'&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;init'&lt;/span&gt;
            &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;init'&lt;/span&gt;
            &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;init'&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;git&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;mark&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;{{index&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;.PromptResponses&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;0}}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
    </item>
    <item>
      <title>Top Code Learning Websites</title>
      <author>MD Taseen Khan</author>
      <pubDate>Fri, 26 Nov 2021 15:35:30 +0000</pubDate>
      <link>https://dev.to/mohammadtaseenkhan/top-code-learning-websites-355h</link>
      <guid>https://dev.to/mohammadtaseenkhan/top-code-learning-websites-355h</guid>
      <description>&lt;p&gt;🔰Top Code Learning Websites🔰&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.codecademy.com"&gt;www.codecademy.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.lynda.com"&gt;www.lynda.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.udemy.com"&gt;www.udemy.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.udacity.com"&gt;www.udacity.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.coursera.org"&gt;www.coursera.org&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.w3schools.com"&gt;www.w3schools.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.thenewboston.org"&gt;www.thenewboston.org&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.programmr.com"&gt;www.programmr.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.codeavengers.com"&gt;www.codeavengers.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.codeschool.com"&gt;www.codeschool.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.learnstreet.com"&gt;www.learnstreet.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.teamtreehouse.com"&gt;www.teamtreehouse.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.sqlzoo.net"&gt;www.sqlzoo.net&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.codehs.com"&gt;www.codehs.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.teamtreehouse.com"&gt;www.teamtreehouse.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.html5rocks.com"&gt;www.html5rocks.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.codepen.io"&gt;www.codepen.io&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.sitepoint.com"&gt;www.sitepoint.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.tutorialspoint.com"&gt;www.tutorialspoint.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.javatpoint.com"&gt;www.javatpoint.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.cplusplus.com"&gt;www.cplusplus.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.learncpp.com"&gt;www.learncpp.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.tutorialspoint.com"&gt;www.tutorialspoint.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.cprogramming.com"&gt;www.cprogramming.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.stackoverflow.com"&gt;www.stackoverflow.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.learncodethehardway.org"&gt;www.learncodethehardway.org&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.bloc.io"&gt;www.bloc.io&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.howtocode.io"&gt;www.howtocode.io&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.edx.org"&gt;www.edx.org&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.instructables.com"&gt;www.instructables.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.developer.apple.com"&gt;www.developer.apple.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.developer.android.com"&gt;www.developer.android.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.developers.google.com"&gt;www.developers.google.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.developer.mozilla.org"&gt;www.developer.mozilla.org&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.msdn.microsoft.com"&gt;www.msdn.microsoft.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.dev.opera.com"&gt;www.dev.opera.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.developphp.com"&gt;www.developphp.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.quackit.com"&gt;www.quackit.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.htmlite.com"&gt;www.htmlite.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.siteduzero.com"&gt;www.siteduzero.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.dreamincode.net"&gt;www.dreamincode.net&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.phpbuddy.com"&gt;www.phpbuddy.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.php.net"&gt;www.php.net&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.microsoftvirtualacademy.com"&gt;www.microsoftvirtualacademy.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.professormesser.com"&gt;www.professormesser.com&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.freecodecamp.org"&gt;www.freecodecamp.org&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
Stay safe and secured

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>code</category>
      <category>learning</category>
    </item>
    <item>
      <title>Symfony Station Communique - 26 November 2021. A Look at Symfony and PHP News.
</title>
      <author>Reuben Walker, Jr.</author>
      <pubDate>Fri, 26 Nov 2021 15:32:40 +0000</pubDate>
      <link>https://dev.to/reubenwalker64/symfony-station-communique-26-november-2021-a-look-at-symfony-and-php-news-188e</link>
      <guid>https://dev.to/reubenwalker64/symfony-station-communique-26-november-2021-a-look-at-symfony-and-php-news-188e</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A1WFBHAC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xi8sl8w1l355d3hh9vxj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A1WFBHAC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xi8sl8w1l355d3hh9vxj.png" alt="Symfony Station logo" width="880" height="594"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This post originally appeared on &lt;a href="https://symfonystation.com/Communiques"&gt;Symfony Station&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Welcome to this week's Symfony Station Communique. It’s your weekly review of the most valuable and essential news in the Symfony and PHP development communities. This week it’s extensive again, so take your time and enjoy its most valuable items.&lt;/p&gt;

&lt;p&gt;Thanks to Javier Eguiluz and Symfony for sharing our &lt;a href="https://symfonystation.com/Symfony-Station-Communique-19-November-2021"&gt;last communique&lt;/a&gt; in their &lt;a href="https://symfony.com/blog/a-week-of-symfony-777-15-21-november-2021"&gt;Week of Symfony&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;*Please note all links will open in a new browser window. My opinions, if I present any, will be in bold.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DPerR4m3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zx3xgt3kmm7vn53zewjy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DPerR4m3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zx3xgt3kmm7vn53zewjy.png" alt="Symfony logo" width="209" height="208"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#symfony"&gt;
  &lt;/a&gt;
  Symfony
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#this-week"&gt;
  &lt;/a&gt;
  This week
&lt;/h3&gt;

&lt;p&gt;As always, we will start with the official news from Symfony.&lt;/p&gt;

&lt;p&gt;Highlight -&amp;gt; “This week, Symfony 5.4.0 BETA3 and 6.0.0 BETA3 versions were published so you can test them on your applications before their final release at the end of the month. In addition, the Symfony Core Team added four new members to help grow the Symfony project in the next few years.”&lt;/p&gt;

&lt;p&gt;A Week of Symfony #777 (15-21 November 2021)&lt;br&gt;
&lt;a href="https://symfony.com/blog/a-week-of-symfony-777-15-21-november-2021"&gt;https://symfony.com/blog/a-week-of-symfony-777-15-21-november-2021&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Javier continues a series of posts on what’s new in Symfony 5.4.&lt;/p&gt;

&lt;p&gt;New in Symfony 5.4: Dependency Injection Improvements &lt;a href="https://symfony.com/blog/new-in-symfony-5-4-dependencyinjection-improvements"&gt;https://symfony.com/blog/new-in-symfony-5-4-dependencyinjection-improvements&lt;/a&gt;&lt;br&gt;
New in Symfony 5.4: Messenger Improvements &lt;a href="https://symfony.com/blog/new-in-symfony-5-4-messenger-improvements"&gt;https://symfony.com/blog/new-in-symfony-5-4-messenger-improvements&lt;/a&gt;&lt;br&gt;
New in Symfony 5.4: Profiler improvements &lt;a href="https://symfony.com/blog/new-in-symfony-5-4-profiler-improvements"&gt;https://symfony.com/blog/new-in-symfony-5-4-profiler-improvements&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great deals are still available if you are looking for official certification. November 29th is the last day though!&lt;/p&gt;

&lt;p&gt;Black Friday 2021 Offers from the Symfony Ecosystem&lt;br&gt;
&lt;a href="https://symfony.com/blog/black-friday-2021-offers-from-the-symfony-ecosystem"&gt;https://symfony.com/blog/black-friday-2021-offers-from-the-symfony-ecosystem&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Symfony added to the official docs with information on Flex Private Recipe Repositories.&lt;/p&gt;

&lt;p&gt;How To Configure and Use Flex Private Recipe Repositories&lt;br&gt;
&lt;a href="https://symfony.com/doc/current/setup/flex_private_recipes.html"&gt;https://symfony.com/doc/current/setup/flex_private_recipes.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And this one is self-explanatory.&lt;/p&gt;

&lt;p&gt;Symfony 6.0.0-RC1 released&lt;br&gt;
&lt;a href="https://symfony.com/blog/symfony-6-0-0-rc1-released"&gt;https://symfony.com/blog/symfony-6-0-0-rc1-released&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fcV3ofGE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/Featured-Item_0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fcV3ofGE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/Featured-Item_0.png" alt="Featured Item graphic" width="660" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#featured-item"&gt;
  &lt;/a&gt;
  Featured Item
&lt;/h2&gt;

&lt;p&gt;We continue to highlight a post of the week.&lt;/p&gt;

&lt;p&gt;Please let us know what you think about this one.&lt;/p&gt;

&lt;p&gt;It’s not the most important article of the week considering the news about PHP 8.1 and The PHP Foundation. However, it is the first original content created by Symfony Station so it gets the nod for our Featured Item. ;)&lt;/p&gt;

&lt;p&gt;Twig - The Ultimate Guide to the Premier PHP Templating Language&lt;br&gt;
&lt;a href="https://symfonystation.com/Twig-Ultimate-Guide-PHP-Templating-Language"&gt;https://symfonystation.com/Twig-Ultimate-Guide-PHP-Templating-Language&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Speaking of Twig, Prince Sinha shows us how to:&lt;br&gt;
3 Ways to Reuse Twig Templates in Symfony&lt;br&gt;
&lt;a href="https://scoutapm.com/blog/3-ways-to-reuse-twig-templates-in-symfony"&gt;https://scoutapm.com/blog/3-ways-to-reuse-twig-templates-in-symfony&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Via SymfonyCasts: “We've got some logged in users but we don't want them going anywhere they please around our app. The most precise way to protect your site is by denying access from each Symfony controller and we'll cover about 5 good ways to do that!” &lt;br&gt;
This week on SymfonyCasts&lt;br&gt;
&lt;a href="https://5hy9x.r.ag.d.sendibm3.com/mk/mr/Q5iMMEWQyDhPFyQTXqCh4IZEG9ZzTXdXk0vUI75ZRpMLJaktJ-FWV0YUXqpJF0Phj9uJBdZ56E3nkM32bohWqsbK8wRJKREYMf-eeAHYU88bC5jVrFkhY4WG_spnaW9_fr1XV2a_5g"&gt;https://5hy9x.r.ag.d.sendibm3.com/mk/mr/Q5iMMEWQyDhPFyQTXqCh4IZEG9ZzTXdXk0vUI75ZRpMLJaktJ-FWV0YUXqpJF0Phj9uJBdZ56E3nkM32bohWqsbK8wRJKREYMf-eeAHYU88bC5jVrFkhY4WG_spnaW9_fr1XV2a_5g&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here’s an interesting case study involving updating both PHP and Symfony.&lt;br&gt;
Why did Alice's Garden need to set up a Business Intelligence tool?&lt;br&gt;
&lt;a href="https://welovedevs.com/fr/articles/pourquoi-alices-garden-a-eu-besoin-de-mettre-en-place-un-outil-de-bi/"&gt;https://welovedevs.com/fr/articles/pourquoi-alices-garden-a-eu-besoin-de-mettre-en-place-un-outil-de-bi/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Smaine Millani writes: “In this article, I’ll show how you can add validation on a Request content. (It’s more about a way to learn more about Request and event listener than a best practice.)”&lt;br&gt;
What if we define validations rules in the routing configuration&lt;br&gt;
&lt;a href="https://smaine-milianni.medium.com/what-if-we-define-validations-rules-in-the-routing-configuration-a15b182e847d"&gt;https://smaine-milianni.medium.com/what-if-we-define-validations-rules-in-the-routing-configuration-a15b182e847d&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ahmed Khaled Mohamed shows us how to:&lt;/p&gt;

&lt;p&gt;Deploy Sylius to Heroku&lt;br&gt;
&lt;a href="https://dev.to/aaahmedaa/deploy-sylius-to-heroku-55p1"&gt;https://dev.to/aaahmedaa/deploy-sylius-to-heroku-55p1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alexandre Daubois tells you to “Brace yourself: autocompletion on options and arguments is finally here!”&lt;br&gt;
Symfony 6 brings its CLI to the next level&lt;br&gt;
&lt;a href="https://alex-daubois.medium.com/symfony-6-brings-its-cli-to-the-next-level-9a2531db08cb"&gt;https://alex-daubois.medium.com/symfony-6-brings-its-cli-to-the-next-level-9a2531db08cb&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our friends at Jolicode show us how to:&lt;/p&gt;

&lt;p&gt;Rate limit your Symfony APIs!&lt;br&gt;
&lt;a href="https://jolicode.com/blog/rate-limit-your-symfony-apis"&gt;https://jolicode.com/blog/rate-limit-your-symfony-apis&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Maks Rafalko demonstrates how to:&lt;/p&gt;

&lt;p&gt;Improve Symfony Tests Performance&lt;br&gt;
&lt;a href="https://maks-rafalko.github.io/blog/2021-11-21/symfony-tests-performance/"&gt;https://maks-rafalko.github.io/blog/2021-11-21/symfony-tests-performance/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It seems like there is one of these every week. But, I find something useful in each one so we’re sharing.&lt;/p&gt;

&lt;p&gt;Laravel vs Symfony – a comparison of the two most popular PHP frameworks&lt;br&gt;
&lt;a href="https://davidicke.com/2021/11/23/laravel-vs-symfony-a-comparison-of-the-two-most-popular-php-frameworks/"&gt;https://davidicke.com/2021/11/23/laravel-vs-symfony-a-comparison-of-the-two-most-popular-php-frameworks/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you discovered this communique and are new to Symfony, this article is a good introduction.&lt;/p&gt;

&lt;p&gt;What is PHP Framework Symfony? Explained for executives&lt;br&gt;
&lt;a href="https://medium.com/accesto/what-is-php-framework-symfony-explained-for-executives-accesto-blogwelcome-to-our-72a89abafe71"&gt;https://medium.com/accesto/what-is-php-framework-symfony-explained-for-executives-accesto-blogwelcome-to-our-72a89abafe71&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In French UrbanLinker writes: “In order to help developers and CTOs in their migration to Symfony, SensioLabs has made available a comprehensive migration guide on this subject. From the PHP environment, to the advantages of Symfony via the legacy code, everything is explained to migrate smoothly.”&lt;/p&gt;

&lt;p&gt;Migrating your legacy project to Symfony? SensioLabs explains everything.&lt;br&gt;
&lt;a href="https://urbanlinker.com/fr/blog/articles-tech-1620983703/migration-de-son-legacy-vers-symfony-sensiolabs-vous-explique-tout"&gt;https://urbanlinker.com/fr/blog/articles-tech-1620983703/migration-de-son-legacy-vers-symfony-sensiolabs-vous-explique-tout&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hurray. An article on YAML was published and it’s a comparison with JSON and XML.&lt;/p&gt;

&lt;p&gt;YAML Tutorial: Everything You Need to Know in 5 Mins&lt;br&gt;
&lt;a href="https://levelup.gitconnected.com/yaml-tutorial-everything-you-need-to-know-in-5-mins-14f333a23ed1"&gt;https://levelup.gitconnected.com/yaml-tutorial-everything-you-need-to-know-in-5-mins-14f333a23ed1&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#timeless"&gt;
  &lt;/a&gt;
  Timeless
&lt;/h2&gt;

&lt;p&gt;I ran across Akashic Seer’s blog earlier this month, which is loaded with Symfony-related posts. Here are a few more from his archive.&lt;/p&gt;

&lt;p&gt;Symfony 5+ how to create a Maker&lt;br&gt;
&lt;a href="https://akashicseer.com/web-development/symfony-5-how-to-create-a-maker/"&gt;https://akashicseer.com/web-development/symfony-5-how-to-create-a-maker/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How to quickly create a complete Symfony 5+ app with login and password reset&lt;br&gt;
&lt;a href="https://akashicseer.com/web-development/how-to-quickly-create-a-complete-symfony-5-app-with-login-and-password-reset/"&gt;https://akashicseer.com/web-development/how-to-quickly-create-a-complete-symfony-5-app-with-login-and-password-reset/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kpzVTWT5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/php-logo_4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kpzVTWT5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/php-logo_4.png" alt="PHP logo" width="880" height="645"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#php"&gt;
  &lt;/a&gt;
  PHP
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#this-week"&gt;
  &lt;/a&gt;
  This week
&lt;/h3&gt;

&lt;p&gt;The PhpStorm blog made a big announcement you may have seen elsewhere. I made a contribution for #GivingTuesday and encourage you to do likewise.&lt;/p&gt;

&lt;p&gt;The New Life of PHP – The PHP Foundation&lt;br&gt;
&lt;a href="https://blog.jetbrains.com/phpstorm/2021/11/the-php-foundation/"&gt;https://blog.jetbrains.com/phpstorm/2021/11/the-php-foundation/&lt;/a&gt;&lt;br&gt;
Joe Watkins provides some very interesting details of how the foundation came about and what it requires.&lt;br&gt;
Musings, ninja ones&lt;br&gt;
&lt;a href="https://blog.krakjoe.ninja/2021/11/2-1.html"&gt;https://blog.krakjoe.ninja/2021/11/2-1.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In other big PHP news!&lt;br&gt;
PHP 8.1 is released&lt;br&gt;
&lt;a href="https://php.watch/articles/php81-thanks"&gt;https://php.watch/articles/php81-thanks&lt;/a&gt;&lt;br&gt;
And here’s the official announcement.&lt;br&gt;
&lt;a href="https://www.php.net/releases/8.1/en.php"&gt;https://www.php.net/releases/8.1/en.php&lt;/a&gt;&lt;br&gt;
Finally, if you want to check it out via video, here’s one from JetBrainsTV.&lt;/p&gt;

&lt;p&gt;What’s New in PHP 8.1: Enums, First-Class Callables, Fibers, Readonly Properties, and More&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=rgrQSmUiFJQ"&gt;https://www.youtube.com/watch?v=rgrQSmUiFJQ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mark Baker notes: “One of the many new features of PHP 8.1 is the ability to declare class constants as final, so that they can no longer be overridden in child classes. The same applies when constants are defined as final in an abstract classes, or interface; they can’t be overridden by classes extending that abstract or implementing that interface. So class and interface constants can now truly become constant.”&lt;/p&gt;

&lt;p&gt;Constant Constants. Finally! (On the inconstancy of constants)&lt;br&gt;
&lt;a href="https://markbakeruk.net/2021/11/24/constant-constants-finally/"&gt;https://markbakeruk.net/2021/11/24/constant-constants-finally/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;DerEuroMark wonders “if you use open-source software, you might wonder, why all those changes and why you should migrate up to the next major versions.”&lt;/p&gt;

&lt;p&gt;Keeping up with framework upgrades&lt;br&gt;
&lt;a href="https://www.dereuromark.de/2021/11/22/keeping-up-with-framework-upgrades/"&gt;https://www.dereuromark.de/2021/11/22/keeping-up-with-framework-upgrades/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wouter de Jong writes: “Every now and then, there seems to be a lot of fuss in the PHP community about deprecations. In these discussions, deprecations are often discussed as if they are fatal errors. I think that is very wrong. Let’s reduce our expectations of deprecations. It’ll make everyone’s lives much less stressful.”&lt;/p&gt;

&lt;p&gt;Deprecations are not like E_ERROR, E_WARNING, and E_NOTICE&lt;br&gt;
&lt;a href="https://wouterj.nl/2021/11/deprecations-are-not-errors"&gt;https://wouterj.nl/2021/11/deprecations-are-not-errors&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I ran across an impressive looking new book on PHP. If you have seen it before, this edition is updated for version 8.1.&lt;/p&gt;

&lt;p&gt;Front Line PHP: Building modern applications with PHP 8.1.&lt;br&gt;
&lt;a href="https://front-line-php.com/"&gt;https://front-line-php.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Front Line PHP also has a PHP Cheat Sheet.&lt;/p&gt;

&lt;p&gt;Modern PHP Cheat Sheet: A to-the-point summary of all awesome PHP features&lt;br&gt;
&lt;a href="https://front-line-php.com/cheat-sheet"&gt;https://front-line-php.com/cheat-sheet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We shared several posts from Samuel Fontebasso in the last communique. His series on PHP, Nginx, and Docker continues with this one.&lt;br&gt;
PHP+Nginx with Docker in production - Part 3: Docker Compose for your local environment&lt;br&gt;
&lt;a href="https://blog.fontebasso.com.br/php-nginx-with-docker-in-production-part-3-d8935b910ba9"&gt;https://blog.fontebasso.com.br/php-nginx-with-docker-in-production-part-3-d8935b910ba9&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bulletproof PHP writes: “Rather than yet another generic overview of the language or a point-by-point refutation of the things people say is wrong with it, what I want this post to be more than anything else is kind of a comprehensive list of ✨good things about PHP.✨ “&lt;/p&gt;

&lt;p&gt;Yes, PHP is Worth Learning/Using in $CURRENT_YEAR&lt;br&gt;
&lt;a href="https://bulletproofphp.dev/yes-php-is-worth-using"&gt;https://bulletproofphp.dev/yes-php-is-worth-using&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Along those lines this article from Raft Labs has some great resources for learning PHP.&lt;/p&gt;

&lt;p&gt;PHP in 2021? A Big Yes!&lt;br&gt;
&lt;a href="https://raftlabs.medium.com/php-in-2021-a-big-yes-a3a6d0be4c01"&gt;https://raftlabs.medium.com/php-in-2021-a-big-yes-a3a6d0be4c01&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Behzad Fazelasl says: ”Writing tests is inseparable from programming. If you want to be sure about deploying your code without unexpected failure, writing tests is going to be of assistance. The more tests you write, the more test coverage you get on your code which leads to more confidence.&lt;/p&gt;

&lt;p&gt;But there is a big problem. There should be a sort of measurement to make sure enough tests have been written.”&lt;br&gt;
PHPUnit Test Coverage Report&lt;br&gt;
&lt;a href="https://engineering.teknasyon.com/phpunit-test-coverage-report-8863563f34bd"&gt;https://engineering.teknasyon.com/phpunit-test-coverage-report-8863563f34bd&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Matthew Setter asks why deploy with Docker, especially when there are so many other deployment options?&lt;/p&gt;

&lt;p&gt;Deploy PHP Apps with Docker - The Essentials&lt;br&gt;
&lt;a href="https://speakerdeck.com/webdevwithmatt/deploy-php-apps-with-docker-the-essentials"&gt;https://speakerdeck.com/webdevwithmatt/deploy-php-apps-with-docker-the-essentials&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Peter Packet didn’t pick any peppers but he did author this interesting post.&lt;/p&gt;

&lt;p&gt;Effectively using Facades and Hexagonal Architecture to separate bounded contexts&lt;br&gt;
&lt;a href="https://madewithlove.com/blog/software-engineering/effectively-using-facades-and-hexagonal-architecture-to-separate-bounded-contexts/"&gt;https://madewithlove.com/blog/software-engineering/effectively-using-facades-and-hexagonal-architecture-to-separate-bounded-contexts/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is an article about another PHP Templating language.&lt;/p&gt;

&lt;p&gt;EasyTpl — Simple and fastly template engine for PHP&lt;br&gt;
&lt;a href="https://medium.com/@inhereat/easytpl-simple-and-fastly-template-engine-for-php-6df123bfc0f8"&gt;https://medium.com/@inhereat/easytpl-simple-and-fastly-template-engine-for-php-6df123bfc0f8&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#last-week"&gt;
  &lt;/a&gt;
  Last Week
&lt;/h3&gt;

&lt;p&gt;The Voices of the Elephant podcast spoke with Ben Ramsey, the Release Manager for PHP 8.1.&lt;br&gt;
Interview with Ben Ramsey&lt;br&gt;
&lt;a href="https://voicesoftheelephpant.com/2021/11/18/ep365-interview-benramsey/"&gt;https://voicesoftheelephpant.com/2021/11/18/ep365-interview-benramsey/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9RQn0MV---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/code-logo_3.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9RQn0MV---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/code-logo_3.jpeg" alt="Code logo" width="626" height="626"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other"&gt;
  &lt;/a&gt;
  Other
&lt;/h2&gt;

&lt;p&gt;The Guardian asks a simple but extremely important question.&lt;/p&gt;

&lt;p&gt;Can big tech ever be reined in?&lt;br&gt;
&lt;a href="https://www.theguardian.com/technology/2021/nov/21/can-big-tech-ever-be-reined-in"&gt;https://www.theguardian.com/technology/2021/nov/21/can-big-tech-ever-be-reined-in&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Toptal also has a question. One I’ve asked myself.&lt;/p&gt;

&lt;p&gt;Agile, Scrum, and Kanban: What the Heck Do These Words Really Mean?&lt;br&gt;
&lt;a href="https://www.toptal.com/project-managers/technical/agile-scrum-kanban-what-do-they-mean"&gt;https://www.toptal.com/project-managers/technical/agile-scrum-kanban-what-do-they-mean&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have shared several posts from Mateusz Cholewka. He continues his series on Docker here.&lt;br&gt;
Read this before you start using the multistage builds for your docker images&lt;br&gt;
&lt;a href="https://medium.com/@kontaktmtk3d/read-this-before-you-start-using-the-multistage-builds-for-your-docker-images-a005772b9e61"&gt;https://medium.com/@kontaktmtk3d/read-this-before-you-start-using-the-multistage-builds-for-your-docker-images-a005772b9e61&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here’s a useful tool for anyone who’s making code tutorials.&lt;br&gt;
How to create long screen recordings using OBS Studio&lt;br&gt;
&lt;a href="https://www.techrepublic.com/article/how-to-create-long-screen-recordings-using-obs-studio/#ftag=RSS56d97e7"&gt;https://www.techrepublic.com/article/how-to-create-long-screen-recordings-using-obs-studio/#ftag=RSS56d97e7&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Torque Mag has a post on helpful tools as well. Mobile Atom Code and Symfony Station use a variety of these and the list is legit.&lt;br&gt;
28 Best Tools for Freelancers (2021): Keep Your Business on Track&lt;br&gt;
&lt;a href="https://torquemag.io/2021/11/best-tools-for-freelancers/"&gt;https://torquemag.io/2021/11/best-tools-for-freelancers/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I ran across this on freeCodeCamp and although it’s from February it’s a good resource for working with APIs.&lt;/p&gt;

&lt;p&gt;API Cheat Sheet – What is an API, How it Works, and How to Choose the Right API Testing Tools&lt;br&gt;
&lt;a href="https://www.freecodecamp.org/news/what-is-an-api-and-how-to-test-it/"&gt;https://www.freecodecamp.org/news/what-is-an-api-and-how-to-test-it/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have been sharing Wouter Carabain’s series on using Symfony and React together. Here’s the latest article.&lt;/p&gt;

&lt;p&gt;Setting up React Native (Part 5)&lt;br&gt;
&lt;a href="https://woutercarabain.com/webdevelopment/setting-up-react-native-part-5/"&gt;https://woutercarabain.com/webdevelopment/setting-up-react-native-part-5/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ReadWrite wants to predict: &lt;/p&gt;

&lt;p&gt;What the Future of Programming Languages Looks Like&lt;br&gt;
&lt;a href="https://readwrite.com/2021/11/22/what-the-future-of-programming-languages-looks-like/"&gt;https://readwrite.com/2021/11/22/what-the-future-of-programming-languages-looks-like/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;DeliciousBrains tells us how to:&lt;/p&gt;

&lt;p&gt;Create Your Own SSL Certificate Authority for Local HTTPS Development&lt;br&gt;
&lt;a href="https://deliciousbrains.com/ssl-certificate-authority-for-local-https-development/"&gt;https://deliciousbrains.com/ssl-certificate-authority-for-local-https-development/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And CSS-Tricks shows us how to:&lt;/p&gt;

&lt;p&gt;Create the perfect commit in git&lt;br&gt;
&lt;a href="https://css-tricks.com/creating-the-perfect-commit-in-git/"&gt;https://css-tricks.com/creating-the-perfect-commit-in-git/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have you published or seen something related to Symfony or PHP that we missed? If so, please contact us.&lt;br&gt;
That's it for this week. Thanks for making it to the end of another extended edition. I look forward to sharing next week's Symfony and PHP news with you on Friday. &lt;/p&gt;

&lt;p&gt;Please share this post. :) Be sure to join our newsletter list, so you get each week's communique directly in your inbox (a day early). And follow us on Twitter at @symfonfystation.&lt;/p&gt;

&lt;p&gt;Happy coding Symfonistas!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sHynFiuH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/Reuben_5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sHynFiuH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/Reuben_5.png" alt="Reuben Walker photo" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Reuben Walker&lt;br&gt;
Founder &lt;a href="https://symfonystation.com/"&gt;Symfony Station&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Reuben is also Ringmaster of &lt;a href="https://media.mobileatom.net/about-us/"&gt;Mobile Atom Media&lt;/a&gt; and its division &lt;a href="https://www.mobileatom.net/"&gt;Mobile Atom Code&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>symfony</category>
      <category>php</category>
      <category>docker</category>
      <category>twig</category>
    </item>
    <item>
      <title>DevTips Daily Update 26/11/21</title>
      <author>James Bubb</author>
      <pubDate>Fri, 26 Nov 2021 15:28:08 +0000</pubDate>
      <link>https://dev.to/codebubb/devtips-daily-update-261121-24ab</link>
      <guid>https://dev.to/codebubb/devtips-daily-update-261121-24ab</guid>
      <description>&lt;p&gt;So in this week's videos on DevTips Daily, we were carrying on with our full end to end project and we got setup with our server on Digital ocean, starting creating some endpoints in the Express app for generating short urls and also got setup with a MongoDB database inside a Docker container.&lt;/p&gt;

&lt;p&gt;Here's a link to each individual tutorial:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/TqniZz0ZyWE"&gt;Setup hosting server&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/TqniZz0ZyWE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/zZpiGCXQcZg"&gt;Connecting to server via SSH&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/zZpiGCXQcZg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/Xldt2wT-v90"&gt;Creating short URLs&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Xldt2wT-v90"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/nag8DMmG0D0"&gt;Setup MongoDB with Docker&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/nag8DMmG0D0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;[Testing MongoDB connection](&lt;a href="https://youtu.be/Pm2PWfKG1y0"&gt;https://youtu.be/Pm2PWfKG1y0&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Pm2PWfKG1y0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/g9l3JSmsxdQ"&gt;Connecting to MongoDB in the API&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/g9l3JSmsxdQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/https://youtu.be/NWQJatD432E"&gt;Adding URLs to database&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/NWQJatD432E"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Next week we're going to be carrying on with the project again, we'll be setting up our redirect endpoint and starting to build our delivery pipeline with GitHub Actions!&lt;/p&gt;

&lt;p&gt;Thanks for watching 👍&lt;/p&gt;

</description>
      <category>devtipsdaily</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Using a Private GitHub Repository as a Helm Chart Repository</title>
      <author>Frank Rosner</author>
      <pubDate>Fri, 26 Nov 2021 15:24:09 +0000</pubDate>
      <link>https://dev.to/frosnerd/using-a-private-github-repository-as-a-helm-chart-repository-5fa8</link>
      <guid>https://dev.to/frosnerd/using-a-private-github-repository-as-a-helm-chart-repository-5fa8</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Applications deployed on Kubernetes typically consist of multiple Kubernetes resources, such as deployments, services, config maps, and so on. Application developers can package those resources together to make it easier to install and upgrade them holistically. Helm is a very popular package manager for Kubernetes.&lt;/p&gt;

&lt;p&gt;When using Helm, applications are packaged in the form of Helm charts, which can be installed either from the local file system or from a remote chart repository. If you want to distribute your Helm charts through a chart repository, there are many options available, such as GCS or S3 buckets, GitHub pages, or JFrog Artifactory. A &lt;a href="https://helm.sh/docs/topics/chart_repository/"&gt;chart repository&lt;/a&gt; is really just an HTTP server that hosts an &lt;code&gt;index.yaml&lt;/code&gt; file together with a bunch of packaged charts in form of &lt;code&gt;.tgz&lt;/code&gt; files.&lt;/p&gt;

&lt;p&gt;If you need your chart repository to be private, i.e. password protected, and you do not have an S3 bucket or JFrog Artifactory handy, you can convert any private GitHub repository into a private chart repository. While GitHub pages is typically recommended as a free alternative, I have not found a way to implement a private chart repository using GitHub pages.&lt;/p&gt;

&lt;p&gt;In this post I am going to walk you through the steps needed to set up a private GitHub repository to use it as a private Helm chart repository. The post is structured as follows. First, we will introduce the Helm chart repository structure. Afterwards, we are going to explain how to use a private GitHub repository as a Helm chart repository. The next section illustrates how to push to the repository via a GitHub Actions workflow. We are following up by explaining how to install charts from the newly created repository. The post is closed by discussing advantages and disadvantages of the presented approach.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#chart-repository-structure"&gt;
  &lt;/a&gt;
  Chart Repository Structure
&lt;/h1&gt;

&lt;p&gt;As mentioned already in the introduction, the main component of any chart repository is the index file. The index file is a YAML file called &lt;code&gt;index.yaml&lt;/code&gt; and it contains metadata about all the packages, including the information of the respective &lt;code&gt;Chart.yaml&lt;/code&gt; files. Each entry in the index file also points to the location of the chart package, which is a &lt;code&gt;.tgz&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Note that it is not mandatory for the &lt;code&gt;.tgz&lt;/code&gt; files and the &lt;code&gt;index.yaml&lt;/code&gt; to be co-located, but it is often the case. The following listing shows an example repository layout.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
|- index.yaml
|- mychart-0.1.2.tgz
|- mychart-0.2.0.tgz
|- yourchart-1.0.0.tgz
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this case, the index file would contain information about the two charts &lt;code&gt;mychart&lt;/code&gt; and &lt;code&gt;yourchart&lt;/code&gt; in the respective versions. Next, let's see how we can configure a private GitHub repository so that we can use it as a chart repository.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#private-github-chart-repository-setup"&gt;
  &lt;/a&gt;
  Private GitHub Chart Repository Setup
&lt;/h1&gt;

&lt;p&gt;First, you'll have to create a &lt;a href="https://docs.github.com/en/get-started/quickstart/create-a-repo"&gt;private GitHub repository&lt;/a&gt; that will function as the chart repository. Inside, you configure a new GitHub Actions workflow by creating a file called &lt;code&gt;.github/workflows/update-index.yml&lt;/code&gt; with the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# yourorg/helm-chart-repository/.github/workflows/update-index.yml&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Update Index&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt; &lt;span class="pi"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;paths&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;**.tgz'&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-20.04&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Git Checkout&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Helm Installation&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;azure/setup-helm@v1.1&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v3.7.0&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Update Index&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
          &lt;span class="s"&gt;helm repo index .&lt;/span&gt;
          &lt;span class="s"&gt;git config --global user.email "yourbot@yourorg.com"&lt;/span&gt;
          &lt;span class="s"&gt;git config --global user.name "YourOrg Bot"&lt;/span&gt;
          &lt;span class="s"&gt;git add index.yaml&lt;/span&gt;
          &lt;span class="s"&gt;git commit -m "Update chart index"&lt;/span&gt;
          &lt;span class="s"&gt;git push&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This file defines a workflow that updates the helm repository index file every time a chart package (&lt;code&gt;.tgz&lt;/code&gt;) is updated. It then commits and pushes the changes. To publish a new chart version, simply commit a packaged version of your chart (&lt;code&gt;.tgz&lt;/code&gt;). You can package your chart using &lt;code&gt;helm package&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;helm package &lt;span class="nv"&gt;$CHART_NAME&lt;/span&gt; &lt;span class="nt"&gt;--version&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$CHART_VERSION&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After you pushed your changes, the GitHub Actions workflow will run and update the repository index file. The index file is going to look similar to the following one:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# yourorg/helm-chart-repository/index.yaml&lt;/span&gt;
&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;entries&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;my-chart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v2&lt;/span&gt;
    &lt;span class="na"&gt;appVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;0.1.0&lt;/span&gt;
    &lt;span class="na"&gt;created&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;2021-11-09T19:05:08.827079146Z"&lt;/span&gt;
    &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;My chart is amazing&lt;/span&gt;
    &lt;span class="na"&gt;digest&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;399637d8794fd211d5e63e4bb77e40ab9f2292ab0d5394fb607e878225e70e2e&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;my-chart&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;application&lt;/span&gt;
    &lt;span class="na"&gt;urls&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;my-chart-0.1.0+fa0e2a7.tgz&lt;/span&gt;
    &lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;0.1.0+fa0e2a7&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v2&lt;/span&gt;
    &lt;span class="na"&gt;appVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;0.1.0&lt;/span&gt;
    &lt;span class="na"&gt;created&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;2021-11-09T19:05:08.69877266Z"&lt;/span&gt;
    &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;My chart is amazing&lt;/span&gt;
    &lt;span class="na"&gt;digest&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;24ce7b3276ed063f245213d8f8dbd18f07d9fb083747771f7ace55271bfe91ea&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;my-chart&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;application&lt;/span&gt;
    &lt;span class="na"&gt;urls&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;my-chart-0.1.0+0ac530b.tgz&lt;/span&gt;
    &lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;0.1.0+0ac530b&lt;/span&gt;
&lt;span class="na"&gt;generated&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;2021-11-09T19:05:08.690772398Z"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have the Helm chart repository configured and know how to push new charts to it manually, let's see how to automate this in another GitHub Actions workflow.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#pushing-to-the-private-repository-from-another-workflow"&gt;
  &lt;/a&gt;
  Pushing to the Private Repository from Another Workflow
&lt;/h1&gt;

&lt;p&gt;Imagine we are storing the source code of a Helm chart in another GitHub repository, and you want to package and push any changes automatically to the chart repository we created. We can accomplish this by creating another GitHub Actions workflow file with the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# yourorg/my-chart/.github/workflows/helm.yml&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Helm&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;publish&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-20.04&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Chart Checkout&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Helm Installation&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;azure/setup-helm@v1.1&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v3.7.0&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Helm Repository Checkout&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;repository&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;yourorg/helm-chart-repository&lt;/span&gt;
          &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.YOUR_BOT_GH_TOKEN }}&lt;/span&gt;
          &lt;span class="na"&gt;fetch-depth&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
          &lt;span class="na"&gt;persist-credentials&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
          &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;main&lt;/span&gt;
          &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;helm-chart-repository&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Helm Package&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;helm package my-chart --version "0.1.0+$(git rev-parse --short "$GITHUB_SHA")" -d helm-chart-repository&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Helm Push&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.YOUR_BOT_GH_TOKEN }}&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
          &lt;span class="s"&gt;git config --global user.email "yourbot@yourorg.com"&lt;/span&gt;
          &lt;span class="s"&gt;git config --global user.name "YourOrg Bot"&lt;/span&gt;
          &lt;span class="s"&gt;CHART_PACKAGE_NAME="my-chart-0.1.0+$(git rev-parse --short "$GITHUB_SHA").tgz"&lt;/span&gt;
          &lt;span class="s"&gt;cd helm-chart-repository&lt;/span&gt;
          &lt;span class="s"&gt;git add "$CHART_PACKAGE_NAME"&lt;/span&gt;
          &lt;span class="s"&gt;git commit -m "$CHART_PACKAGE_NAME"&lt;/span&gt;
          &lt;span class="s"&gt;git push origin main&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This workflow is going to run in the source code repository and will package up your chart, commit and push it to the chart repository. Note that you will need to grant permissions to the workflow to push changes to the chart repository. This can be achieved by providing a GitHub API token in a secondary &lt;code&gt;checkout@v2&lt;/code&gt; action that has the required permissions (e.g. full access to org repos).&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#installing-from-the-private-repository"&gt;
  &lt;/a&gt;
  Installing from the Private Repository
&lt;/h1&gt;

&lt;p&gt;Now that we've seen how to set up our private chart repository and how to push to it, let's use it to install a chart! First, you have to add the repository to your local Helm repository list. To authenticate, you must provide a GitHub API token that can read from the chart repository. It has to be provided using HTTP Basic Auth but it does not seem to matter whether you provide it as username, password, or both.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;helm repo add yourorg &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--username&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--password&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="s2"&gt;"https://raw.githubusercontent.com/yourorg/helm-chart-repository/main/"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the repository is added, you can search it or install charts from it. Note that you'll have to update the local repository index when looking for new versions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;helm repo update
helm search repo my-chart &lt;span class="nt"&gt;--devel&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's it! This is how you can transform any private GitHub repository into a private Helm chart repository.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#discussion"&gt;
  &lt;/a&gt;
  Discussion
&lt;/h1&gt;

&lt;p&gt;Before we end the post, I want to note that this solution is far from ideal. It is one possible option in your tool belt and might be great if you need to setup something but have no access to other alternatives. There are some caveats, however.&lt;/p&gt;

&lt;p&gt;First, although this solution gives you a private repository, access management is not very flexible. You need to use API keys that can be difficult to manage and might have too wide permissions. Also, a chart developer can easily use their permission to overwrite other charts / publish new versions of other charts, injecting malicious code. Secondly, it requires setup both on the repository side but also every project that wants to push to the repository. This can be quite tedious, compared to a managed solution such as Artifactory. Thirdly, you are limited by GitHub repository limits. They shouldn't hit you too soon but are still something to be aware of.&lt;/p&gt;

&lt;p&gt;In my opinion it would be sufficient for many use cases if it was possible to install charts directly from git. You simply specify a git repository and a version (hash) to use when running &lt;code&gt;helm install&lt;/code&gt; and it pulls the chart from git directly. I see the benefit of the simple repository API (webserver + &lt;code&gt;index.yaml&lt;/code&gt;) but still, installing from git would be an amazing feature.&lt;/p&gt;




&lt;p&gt;Cover image by &lt;a href="https://unsplash.com/@loik_marras?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Loik Marras&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/helm?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>helm</category>
      <category>git</category>
      <category>github</category>
    </item>
    <item>
      <title>Hacking the hinge</title>
      <author>Thomas Künneth</author>
      <pubDate>Fri, 26 Nov 2021 15:22:15 +0000</pubDate>
      <link>https://dev.to/tkuenneth/hacking-the-hinge-4a5m</link>
      <guid>https://dev.to/tkuenneth/hacking-the-hinge-4a5m</guid>
      <description>&lt;p&gt;In a &lt;a href="https://dev.to/tkuenneth/folding-composables-12go"&gt;previous post&lt;/a&gt; I showed you how to optimize a two column layout for devices with a hinge. The idea is to &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;get the configuration of the hinge using Jetpack WindowManager&lt;/li&gt;
&lt;li&gt;place a third column with the dimensions of the hinge between the left and right one&lt;/li&gt;
&lt;li&gt;set the sizes of the two content columns based on the screen size and the configuration of the hinge&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This way, no content is obstructed by the hinge. &lt;/p&gt;

&lt;p&gt;Almost no content, that is. Unfortunately, some UI elements may not be completely visible. This blog post is based on a sample app called HingeDemo. You can find it on &lt;a href="https://github.com/tkuenneth/android-demos/tree/master/compose/HingeDemo"&gt;GitHub&lt;/a&gt;. Here's how the app looks on the Surface Duo 2 Emulator using one screen:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WBXt3B7Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r5fih4uzpqe6c3tn80p1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WBXt3B7Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r5fih4uzpqe6c3tn80p1.png" alt="HingeDemo using one screen" width="880" height="569"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;HingeDemo consists of an app bar, three tabs, and a bottom navigation. The app bar usually contains a title, which is ridiculously long by intention. To see why this may be a problem, let's look at the app using two screens.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MDjwgjpE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/12a8qz9rj81zipbwedyr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MDjwgjpE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/12a8qz9rj81zipbwedyr.png" alt="HingeDemo using two screens" width="880" height="569"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The hinge makes parts of three UI elements unreadable. They are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the title&lt;/li&gt;
&lt;li&gt;one tab&lt;/li&gt;
&lt;li&gt;one navigation item&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While we can make the main content area hinge-aware easily, our options are rather limited regarding built-in composables, right?&lt;/p&gt;

&lt;p&gt;No. 😎&lt;/p&gt;

&lt;p&gt;Let's start with the title. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tuning-the-title"&gt;
  &lt;/a&gt;
  Tuning the title
&lt;/h2&gt;

&lt;p&gt;Clearly, such a long title makes no sense. To make it shorter, we could show just &lt;em&gt;n&lt;/em&gt; characters and add an ellipsis at the end. But what value should &lt;em&gt;n&lt;/em&gt; be? This depends on the screen size, and the distribution of letters. Obviously, W or M need more space than l or i. Fortunately, Jetpack Compose can help us in this regard.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;TopBar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hingeDef&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;HingeDef&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;TopAppBar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hingeDef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hasGap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;modifier&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;width&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hingeDef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sizeLeft&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;stringResource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;maxLines&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;overflow&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;TextOverflow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Ellipsis&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;stringResource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, the required steps are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;set the maximum number of lines to 1&lt;/li&gt;
&lt;li&gt;set an overflow text&lt;/li&gt;
&lt;li&gt;limit the width of the text&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;HingeDef&lt;/code&gt; is a small data class. It looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;data class&lt;/span&gt; &lt;span class="nc"&gt;HingeDef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;hasGap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Boolean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;sizeLeft&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Dp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;sizeRight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Dp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;widthGap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Dp&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here's how it is instantiated:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;HingeDemo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="n"&gt;layoutInfo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;WindowLayoutInfo&lt;/span&gt;&lt;span class="p"&gt;?,&lt;/span&gt;
  &lt;span class="n"&gt;windowMetrics&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;WindowMetrics&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;hasGap&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;sizeLeft&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;sizeRight&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;widthGap&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
  &lt;span class="n"&gt;layoutInfo&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="n"&gt;displayFeatures&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;forEach&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;displayFeature&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;displayFeature&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nc"&gt;FoldingFeature&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;run&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;hasGap&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;occlusionType&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="nc"&gt;FoldingFeature&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;OcclusionType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;FULL&lt;/span&gt;
          &lt;span class="p"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;orientation&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="nc"&gt;FoldingFeature&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Orientation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;VERTICAL&lt;/span&gt;
      &lt;span class="n"&gt;sizeLeft&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bounds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;
      &lt;span class="n"&gt;sizeRight&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;windowMetrics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bounds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;width&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;bounds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;
      &lt;span class="n"&gt;widthGap&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bounds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;width&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;hingeDef&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;LocalDensity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;HingeDef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="n"&gt;hasGap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;sizeLeft&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toDp&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
      &lt;span class="n"&gt;sizeRight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toDp&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
      &lt;span class="n"&gt;widthGap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toDp&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;…&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, let's see how &lt;code&gt;HingeDemo()&lt;/code&gt; is invoked.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;HingeDemoActivity&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;ComponentActivity&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;onCreate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Bundle&lt;/span&gt;&lt;span class="p"&gt;?)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;onCreate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;lifecycleScope&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;launchWhenResumed&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nf"&gt;setContent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;layoutInfo&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="nc"&gt;WindowInfoTracker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getOrCreate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="nd"&gt;@HingeDemoActivity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;windowLayoutInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="nd"&gt;@HingeDemoActivity&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;collectAsState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="n"&gt;initial&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nc"&gt;HingeDemoTheme&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nc"&gt;HingeDemo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;layoutInfo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nc"&gt;WindowMetricsCalculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getOrCreate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
              &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;computeCurrentWindowMetrics&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="nd"&gt;@HingeDemoActivity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To use Jetpack WindowManager, please make sure to add an implementation dependency to &lt;code&gt;androidx.window:window:1.0.0-beta04&lt;/code&gt; or later in your module-level &lt;em&gt;build.gradle&lt;/em&gt; file.&lt;/p&gt;

&lt;p&gt;Let's return to limiting the width of the text. Remember, the modifier looked like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="nc"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;width&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hingeDef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sizeLeft&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;sizeLeft&lt;/code&gt; is the size of the left screen in density-independent pixels. But why am I subtracting &lt;code&gt;32.dp&lt;/code&gt;? The &lt;code&gt;Text()&lt;/code&gt; appears inside an app bar, which may have paddings and other elements that appear before the title. However, their widths cannot be determined easily, so 32 is an educated guess. In fact, if the app does not set a navigation icon, Compose currently adds a &lt;code&gt;Spacer()&lt;/code&gt; with this modifier:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="nc"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;width&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="nc"&gt;AppBarHorizontalPadding&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;AppBarHorizontalPadding&lt;/code&gt; is set to &lt;code&gt;4.dp&lt;/code&gt;. Therefore, my &lt;code&gt;32.dp&lt;/code&gt; appear generous.&lt;/p&gt;

&lt;p&gt;You may be wondering if setting the width of the text still works if the app bar also contains actions, which appear to the right of the title. It does, because &lt;code&gt;width()&lt;/code&gt; is a &lt;em&gt;preferred&lt;/em&gt; value. If there is less room, the text is truncated earlier.&lt;/p&gt;

&lt;p&gt;Now let's turn to tabs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aligning-tabs"&gt;
  &lt;/a&gt;
  Aligning tabs
&lt;/h2&gt;

&lt;p&gt;Jetpack Compose uses &lt;code&gt;TabRow()&lt;/code&gt; and &lt;code&gt;Tab()&lt;/code&gt; to implement tabs. Out of the box, the label is centred. Here's how to change this behaviour:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="nc"&gt;Tab&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;selected&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="n"&gt;selectedIndex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hingeDef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hasGap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;modifier&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;fillMaxWidth&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
        &lt;span class="n"&gt;textAlign&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;TextAlign&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Left&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Tab #${i + 1}"&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Tab #${i + 1}"&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="err"&gt;…&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The idea is to align the text to the left. To make it work we also need to make the text as wide as possible (&lt;code&gt;Modifier.fillMaxWidth()&lt;/code&gt;). Here's how &lt;em&gt;HingeDemo&lt;/em&gt; looks with these modifications:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P4_pSg0l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/odoeoo0m6kn0qrbmp4lf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4_pSg0l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/odoeoo0m6kn0qrbmp4lf.png" alt="Hinge-aware version of HingeDemo" width="880" height="569"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The screenshot also shows a solution to the third issue. We will be covering this in the next section. Regarding the alignment of the tab text, we need to be aware that this is a clever hack at best. Depending on screen size, number of tabs, and the tab texts, one text may be obstructed by the hinge nonetheless. A true solution would need to make &lt;code&gt;Text()&lt;/code&gt; hinge-aware. I'll return to this in the conclusion.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-a-navigation-rail"&gt;
  &lt;/a&gt;
  Using a navigation rail
&lt;/h2&gt;

&lt;p&gt;The third issue of &lt;em&gt;HingeDemo&lt;/em&gt; is that one navigation item is partially obstructed by the hinge. To solve this, we need not look for clever hacks. Instead, we can use the navigation rail, a user interaction pattern that is particularly suited for large screens.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;Content&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Modifier&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;hingeDef&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;HingeDef&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;Row&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;fillMaxSize&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hingeDef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hasGap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;selected&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="nf"&gt;remember&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nf"&gt;mutableStateOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;NavigationRail&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nc"&gt;NavigationRailItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;selected&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="n"&gt;selected&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;onClick&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="n"&gt;selected&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="n"&gt;icon&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="nc"&gt;Icon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;painter&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;painterResource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drawable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ic_android_black_24dp&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="n"&gt;contentDescription&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;
              &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"#${i + 1}"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nc"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;fillMaxSize&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;selectedIndex&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="nf"&gt;remember&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nf"&gt;mutableStateOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;TabRow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;selectedTabIndex&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;selectedIndex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;…&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The idea is to add &lt;code&gt;NavigationRail()&lt;/code&gt; as the first composable in a &lt;code&gt;Row()&lt;/code&gt; if we detect that the hinge runs vertically. The actual content (in my case, a &lt;code&gt;Column()&lt;/code&gt;) is added anyway. Finally, if your app shows a navigation rail, it should not show other primary navigations, for example &lt;code&gt;BottomNavigation()&lt;/code&gt;. Here's how &lt;em&gt;HingeDemo&lt;/em&gt; handles this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;BottomBar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hasGap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Boolean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="n"&gt;hasGap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nc"&gt;BottomNavigation&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;…&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;BottomBar()&lt;/code&gt; is added to &lt;code&gt;Scaffold()&lt;/code&gt; like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="nc"&gt;Scaffold&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;topBar&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;TopBar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hingeDef&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hingeDef&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="n"&gt;bottomBar&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;BottomBar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hingeDef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hasGap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;Content&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;modifier&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;hingeDef&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To use &lt;code&gt;NavigationRail()&lt;/code&gt; you must add an implementation dependency to &lt;code&gt;androidx.compose.material3:material3:1.0.0-alpha01&lt;/code&gt; or later in your module-level &lt;em&gt;build.gradle&lt;/em&gt; file. The Jetpack compose version of &lt;em&gt;Material3&lt;/em&gt; is not yet stable, so I have not yet migrated other composables to the new implementation of Material Design. Mixing two versions of a design language in an app is certainly no good idea, so in the long run the app should be migrated to Material3 once its Compose lib is stable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Using the techniques shown in this post you can minimize the number of UI elements being obstructed by a hinge. However, in some situations the visual representation of the text may need to be altered. For example, it could be split into two halves, one half being laid out to the left of the hinge, the second one to the right. It may be possible to achieve this by implementing a hypothetical modifier &lt;code&gt;makeHingeAware()&lt;/code&gt;. If this would be an implementation of the &lt;code&gt;LayoutModifier&lt;/code&gt; interface, or something different, is subject to further investigations. &lt;/p&gt;

&lt;p&gt;Also, &lt;em&gt;tweaking&lt;/em&gt; the appearance of common user interface elements may feel awkward to the users. On Android, the title of tabls is expected to be centered. A left-aligned title can feel strange.&lt;/p&gt;

&lt;p&gt;What are your thoughts on this? Please share your impressions in the comments. &lt;/p&gt;

</description>
      <category>android</category>
      <category>jetpackcompose</category>
      <category>foldable</category>
    </item>
    <item>
      <title>Building a Unicorn Engineering Org at GRIN</title>
      <author>Conor Bronsdon</author>
      <pubDate>Fri, 26 Nov 2021 15:21:22 +0000</pubDate>
      <link>https://dev.to/linearb/building-a-unicorn-engineering-org-at-grin-575h</link>
      <guid>https://dev.to/linearb/building-a-unicorn-engineering-org-at-grin-575h</guid>
      <description>&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/4WPlf5roPoDIMxBS9ClAfi"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;How do you build an engineering organization that can drive your company to a billion-dollar valuation and unicorn status?&lt;/p&gt;

&lt;p&gt;And how do you do it in an emerging and highly-competitive product category like influencer/creator management? Brent Bartlett, VP of Engineering at GRIN, joins the podcast this week to share his blueprint for success and his path to leadership.&lt;/p&gt;

&lt;p&gt;Listen as Brent shares his advice on how to use intuition to inform data-based decision making, how he managed GRIN's engineering department during it's explosive growth on the path to a billion dollar valuation, and why he trusts LinearB to help him succeed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#episode-highlights-include"&gt;
  &lt;/a&gt;
  Episode Highlights Include:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Building an engineering org in a highly competitive product market&lt;/li&gt;
&lt;li&gt;How to blend intuition and data when decision making&lt;/li&gt;
&lt;li&gt;Why GRIN chose to partner with LinearB&lt;/li&gt;
&lt;li&gt;Institutionalizing knowledge and communication practices while scaling&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#join-the-dev-interrupted-community"&gt;
  &lt;/a&gt;
  Join the Dev Interrupted Community
&lt;/h2&gt;

&lt;p&gt;With over 2000 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No sales people allowed. &lt;a href="https://discord.com/invite/devinterrupted"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y-Jf9FW7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ntzh378o6mgdwbtqdr8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y-Jf9FW7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ntzh378o6mgdwbtqdr8.png" alt="https://discord.com/invite/devinterrupted" width="880" height="182"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>techtalks</category>
      <category>podcast</category>
      <category>leadership</category>
      <category>analytics</category>
    </item>
    <item>
      <title>Packaging and Releasing (Lab 10)</title>
      <author>Ahmad</author>
      <pubDate>Fri, 26 Nov 2021 15:16:21 +0000</pubDate>
      <link>https://dev.to/ar/packaging-and-releasing-lab-10-3gcl</link>
      <guid>https://dev.to/ar/packaging-and-releasing-lab-10-3gcl</guid>
      <description>&lt;p&gt;For this lab, we were tasked with packaging and releasing our SSG project we've been working on all semester. Since I wrote my &lt;a href="https://github.com/a-rokay/static-site-generator"&gt;SSG&lt;/a&gt; in Python, I chose &lt;a href="https://packaging.python.org/tutorials/packaging-projects/"&gt;PyPI&lt;/a&gt; for this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up"&gt;
  &lt;/a&gt;
  Setting up
&lt;/h2&gt;

&lt;p&gt;Reading &lt;a href="https://packaging.python.org/tutorials/packaging-projects/"&gt;PyPI's docs&lt;/a&gt;, I realized that I have to do a bit of restructuring, add a new file, and install setuptools, which does the packaging.&lt;/p&gt;

&lt;p&gt;Installing setuptools was simple:&lt;br&gt;
&lt;code&gt;pip install setuptools&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I moved the &lt;code&gt;ssg&lt;/code&gt; folder containing the main code into a &lt;code&gt;src&lt;/code&gt; folder and added a new &lt;code&gt;setup.cfg&lt;/code&gt; file, which is used by setuptools.&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#setupcfg"&gt;
  &lt;/a&gt;
  setup.cfg
&lt;/h5&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[metadata]
name = ssg-a-rokay
version = 1.0.4
author = Ahmad Rokay
author_email = *************
description = Uses python to generate static html files from a single txt or folder of txt files
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/a-rokay/static-site-generator
project_urls =
    Bug Tracker = https://github.com/a-rokay/static-site-generator/issues
classifiers =
    Programming Language :: Python :: 3
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent

[options]
package_dir =
    = src
packages = find:
python_requires = &amp;gt;=3.6

[options.packages.find]
where = src
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;I also had to add some lines to &lt;code&gt;pyproject.toml&lt;/code&gt;, which tells &lt;code&gt;pip&lt;/code&gt; and &lt;code&gt;build&lt;/code&gt; what is required to build my project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[build-system]
requires = [
    "setuptools&amp;gt;=42",
    "markdown",
    "pygments"
]
build-backend = "setuptools.build_meta"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because I moved the main code into a new folder, I had to update the imports for my tests to reflect the new structure:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FHe5_80v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8bwh6a4vfcpbs13e7ezf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FHe5_80v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8bwh6a4vfcpbs13e7ezf.png" alt="Image description" width="234" height="33"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XvVRiw3c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9y2fz4l6ln8zoxq7ophx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XvVRiw3c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9y2fz4l6ln8zoxq7ophx.png" alt="Image description" width="250" height="32"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G7aIO_bv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qyau92rxo99noy0qdasf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G7aIO_bv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qyau92rxo99noy0qdasf.png" alt="Image description" width="325" height="24"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#packaging-and-releasing"&gt;
  &lt;/a&gt;
  Packaging and releasing
&lt;/h2&gt;

&lt;p&gt;Now that everything was setup, I was able to package and release.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;py -m build&lt;/code&gt;&lt;br&gt;
&lt;code&gt;py -m twine upload dist/*&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;After creating an account on PyPI and entering my information, the project was &lt;a href="https://pypi.org/project/ssg-a-rokay/"&gt;successfully released!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To install my project, all that has to be run is:&lt;br&gt;
&lt;code&gt;pip install ssg-a-rokay&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing
&lt;/h2&gt;

&lt;p&gt;I reached out through Slack to another student and gave them the  &lt;a href="https://pypi.org/project/ssg-a-rokay/"&gt;PyPI link&lt;/a&gt; to have them attempt to install my project. They had zero issues and were easily able to implement my code.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HXLaFiNn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pubs5ybwtn7n1dxbz405.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HXLaFiNn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pubs5ybwtn7n1dxbz405.png" alt="Image description" width="880" height="151"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outcomes"&gt;
  &lt;/a&gt;
  Outcomes
&lt;/h2&gt;

&lt;p&gt;I've always thought you had to have your project approved by some big entity to be able to install it through pip. It was very interesting to see how easy it actually is. It felt really good installing my work from PyPI and seeing another student effortlessly do too!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Sass(SCSS) @mixin, @extend</title>
      <author>Dahye Ji</author>
      <pubDate>Fri, 26 Nov 2021 14:59:46 +0000</pubDate>
      <link>https://dev.to/daaahailey/sassscss-mixin-extend-220n</link>
      <guid>https://dev.to/daaahailey/sassscss-mixin-extend-220n</guid>
      <description>&lt;h1&gt;
  &lt;a href="#mixin"&gt;
  &lt;/a&gt;
  @mixin
&lt;/h1&gt;

&lt;p&gt;Mixin allows you to &lt;em&gt;&lt;strong&gt;define style that can be re-used&lt;/strong&gt;&lt;/em&gt; throughout your stylesheet.&lt;br&gt;
(They make it easy to avoid using non-semantic classes like .float-left, and to distribute collections of styles in libraries.)&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-to-use-mixin"&gt;
  &lt;/a&gt;
  How to use @mixin
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="k"&gt;@mixin&lt;/span&gt; &lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nc"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;  &lt;span class="c1"&gt;//create&lt;/span&gt;
&lt;span class="k"&gt;@include&lt;/span&gt; &lt;span class="nd"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arguments&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;use&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You can make a file and import or can declare mixin in the file you are working. If you'd like to make multiple mixin and use, create _mixins.scss to manage.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Using @mixin&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="c1"&gt;// SCSS&lt;/span&gt;

&lt;span class="k"&gt;@mixin&lt;/span&gt; &lt;span class="nf"&gt;center-xy&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// You can used @mixin center-xy like below, It's done by one line because of @mixin&lt;/span&gt;

&lt;span class="nc"&gt;.card&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;@include&lt;/span&gt; &lt;span class="nd"&gt;center-xy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.aside&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;@include&lt;/span&gt; &lt;span class="nd"&gt;center-xy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;**But putting all the code inside one @mixin isn't a good way of using it. You should add related styles in @mixin so that you can make more reusable set.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#arguments"&gt;
  &lt;/a&gt;
  Arguments
&lt;/h1&gt;

&lt;p&gt;@mixin can take arguments after its name. It allows their behavior to be customised when they are called.&lt;br&gt;
&lt;strong&gt;SCSS&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="c1"&gt;//SCSS&lt;/span&gt;
&lt;span class="k"&gt;@mixin&lt;/span&gt; &lt;span class="nf"&gt;image-style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ul&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$size&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$repeat&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$positionX&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$positionY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url($ul)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-repeat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$repeat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$positionX&lt;/span&gt; &lt;span class="nv"&gt;$positionY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="c1"&gt;//background related code.&lt;/span&gt;
&lt;span class="c1"&gt;//You can style element differently depending &lt;/span&gt;
 &lt;span class="nt"&gt;arguments&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="nt"&gt;mixin&lt;/span&gt;&lt;span class="nc"&gt;.&lt;/span&gt;

&lt;span class="nc"&gt;.profile&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;@include&lt;/span&gt; &lt;span class="nd"&gt;image-style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"./assets/user.jpg"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;no-repeat&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.box-one&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;@include&lt;/span&gt; &lt;span class="nd"&gt;image-style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sx"&gt;url("/images/poster1.svg")&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;no-repeat&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="m"&gt;40%&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* CSS */&lt;/span&gt;
&lt;span class="nc"&gt;.profile&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url("./assets/user.jpg")&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-repeat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;no-repeat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.box-one&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url(url("/images/poster1.svg")&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-repeat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;no-repeat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40%&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#setting-default-value"&gt;
  &lt;/a&gt;
  Setting default value
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="c1"&gt;// SCSS&lt;/span&gt;
&lt;span class="c1"&gt;// $positionX, $positionY  have default value now. If they don't receive value, it takes default value.&lt;/span&gt;
&lt;span class="k"&gt;@mixin&lt;/span&gt; &lt;span class="nf"&gt;image-style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ul&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$size&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$repeat&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$positionX&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$positionY&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url($ul)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-repeat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$repeat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$positionX&lt;/span&gt; &lt;span class="nv"&gt;$positionY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.profile&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;@include&lt;/span&gt; &lt;span class="nd"&gt;image-style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"./assets/user.jpg"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;no-repeat&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* CSS */&lt;/span&gt;
&lt;span class="nc"&gt;.profile&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url("./assets/user.jpg")&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-repeat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;no-repeat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nt"&gt;profile&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nc"&gt;.box-one&lt;/span&gt; &lt;span class="nt"&gt;are&lt;/span&gt; &lt;span class="nt"&gt;not&lt;/span&gt; &lt;span class="nt"&gt;related&lt;/span&gt; &lt;span class="nt"&gt;elements&lt;/span&gt; &lt;span class="nt"&gt;but&lt;/span&gt; &lt;span class="nt"&gt;because&lt;/span&gt; &lt;span class="nt"&gt;they&lt;/span&gt; &lt;span class="nt"&gt;have&lt;/span&gt; &lt;span class="nt"&gt;similar&lt;/span&gt; &lt;span class="nt"&gt;styles&lt;/span&gt; &lt;span class="nt"&gt;related&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;background&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;you&lt;/span&gt; &lt;span class="nt"&gt;can&lt;/span&gt; &lt;span class="nt"&gt;make&lt;/span&gt; &lt;span class="k"&gt;@mixin&lt;/span&gt; &lt;span class="n"&gt;about&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;background&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;them&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="n"&gt;elements&lt;/span&gt; &lt;span class="n"&gt;instead&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;repeating&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

</description>
      <category>sass</category>
      <category>scss</category>
      <category>css</category>
    </item>
    <item>
      <title>🚀10 Trending projects on GitHub for web developers - 26th November 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 26 Nov 2021 14:47:36 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-26th-november-2021-4p6e</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-26th-november-2021-4p6e</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-remix-run"&gt;
  &lt;/a&gt;
  1. Remix Run
&lt;/h3&gt;

&lt;p&gt;Build Better Websites. Create modern, resilient user experiences with web fundamentals.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/remix-run"&gt;
        remix-run
      &lt;/a&gt; / &lt;a href="https://github.com/remix-run/remix"&gt;
        remix
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Build Better Websites. Create modern, resilient user experiences with web fundamentals.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Welcome to Remix!&lt;/h1&gt;
&lt;p&gt;Remix is a framework for building better websites using modern web standards and
best practices. We are happy you're here!&lt;/p&gt;
&lt;p&gt;This repository contains the Remix source code. This repo is a work in progress,
so we appreciate your patience as we figure things out.&lt;/p&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;For documentation about Remix, please visit &lt;a href="https://remix.run/docs" rel="nofollow"&gt;our website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also, please &lt;a href="https://rmx.as/discord" rel="nofollow"&gt;join our community on Discord&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The documentation is automatically generated on each release from the files in
&lt;a href="https://github.com/remix-run/remixdocs"&gt;the &lt;code&gt;docs&lt;/code&gt; directory&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;If you're interested in contributing code and/or documentation, please &lt;a href="https://github.com/remix-run/remixCONTRIBUTING.md"&gt;read
this first&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Code of Conduct&lt;/h2&gt;
&lt;p&gt;Please see our &lt;a href="https://github.com/remix-run/remixCODE_OF_CONDUCT.md"&gt;code of conduct&lt;/a&gt; for any questions about the
kind of community we are trying to build here and what to do if you need help
with someone who is not acting professionally.&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/remix-run/remix"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#2-helpfuldecorators"&gt;
  &lt;/a&gt;
  2. helpful-decorators
&lt;/h3&gt;

&lt;p&gt;Helpful decorators for typescript projects &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/NetanelBasal"&gt;
        NetanelBasal
      &lt;/a&gt; / &lt;a href="https://github.com/NetanelBasal/helpful-decorators"&gt;
        helpful-decorators
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Helpful decorators for typescript projects
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://github.com/NetanelBasal/helpful-decorators"&gt;&lt;img src="https://camo.githubusercontent.com/f0f14918e04ce6b6a427e379bdccf74489eb089943c31c03f13b8fb4dbecb195/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f68656c7066756c2d6465636f7261746f72732e737667" alt="npm"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/NetanelBasal/helpful-decorators" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6da5cbe9e26f2ac075133d643bc9b9a39472d0c360474ab5857a437889c507c0/68747470733a2f2f7472617669732d63692e6f72672f4e6574616e656c426173616c2f68656c7066756c2d6465636f7261746f72732e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="http://commitizen.github.io/cz-cli/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aca3301042bdedae125df537db587fe82c2123dc8a2c46f0859840b5fa4b7f1a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6d6d6974697a656e2d667269656e646c792d627269676874677265656e2e737667" alt="Commitizen friendly"&gt;&lt;/a&gt;
&lt;a href="https://github.com/semantic-release/semantic-release"&gt;&lt;img src="https://camo.githubusercontent.com/faee7ab841e1beef8d5564944f6856d9af1d88cd8a520929bc8a10329852f171/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2532302532302546302539462539332541362546302539462539412538302d73656d616e7469632d2d72656c656173652d6531303037392e7376673f7374796c653d666c61742d737175617265" alt="semantic-release"&gt;&lt;/a&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;&lt;img src="https://camo.githubusercontent.com/abb97269de2982c379cbc128bba93ba724d8822bfbe082737772bd4feb59cb54/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f617765736f6d652f643733303566333864323966656437386661383536353265336136336531353464643865383832392f6d656469612f62616467652e737667" alt="Awesome"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Helpful Decorators For Typescript Projects&lt;/h1&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-s1"&gt;npm&lt;/span&gt; &lt;span class="pl-s1"&gt;install&lt;/span&gt; &lt;span class="pl-s1"&gt;helpful&lt;/span&gt;&lt;span class="pl-c1"&gt;-&lt;/span&gt;&lt;span class="pl-s1"&gt;decorators&lt;/span&gt;
&lt;span class="pl-s1"&gt;yarn&lt;/span&gt; &lt;span class="pl-s1"&gt;add&lt;/span&gt; &lt;span class="pl-s1"&gt;helpful&lt;/span&gt;&lt;span class="pl-c1"&gt;-&lt;/span&gt;&lt;span class="pl-s1"&gt;decorators&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;delay&lt;/code&gt; - Add &lt;code&gt;setTimeout&lt;/code&gt; functionality to the method&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;delay&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'helpful-decorators'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-v"&gt;Test&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
 @&lt;span class="pl-en"&gt;delay&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-c1"&gt;1000&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
 &lt;span class="pl-en"&gt;method&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
   &lt;span class="pl-c"&gt;// ...&lt;/span&gt;
 &lt;span class="pl-kos"&gt;}&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;code&gt;debounce&lt;/code&gt; - Add &lt;code&gt;debounce&lt;/code&gt; functionality to the method (&lt;a href="https://lodash.com/docs/4.17.4#debounce" rel="nofollow"&gt;options&lt;/a&gt;)&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;debounce&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'helpful-decorators'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-v"&gt;Test&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
 @&lt;span class="pl-en"&gt;debounce&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-c1"&gt;1000&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;options&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
 &lt;span class="pl-en"&gt;method&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
   &lt;span class="pl-c"&gt;// ...&lt;/span&gt;
 &lt;span class="pl-kos"&gt;}&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;code&gt;throttle&lt;/code&gt; - Add &lt;code&gt;throttle&lt;/code&gt; functionality to the method (&lt;a href="https://lodash.com/docs/4.17.4#throttle" rel="nofollow"&gt;options&lt;/a&gt;)&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;throttle&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'helpful-decorators'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-v"&gt;Test&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
 @&lt;span class="pl-en"&gt;throttle&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-c1"&gt;1000&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;options&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
 &lt;span class="pl-en"&gt;method&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
   &lt;span class="pl-c"&gt;// ...&lt;/span&gt;
 &lt;span class="pl-kos"&gt;}&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;code&gt;once&lt;/code&gt; - Add &lt;code&gt;once&lt;/code&gt; functionality to the method&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;once&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'helpful-decorators'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-v"&gt;Test&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
 @&lt;span class="pl-s1"&gt;once&lt;/span&gt;
 &lt;span class="pl-en"&gt;method&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
   &lt;span class="pl-c"&gt;// This will run only once&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/NetanelBasal/helpful-decorators"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#3-microdiff"&gt;
  &lt;/a&gt;
  3. Microdiff
&lt;/h3&gt;

&lt;p&gt;A fast, zero dependency object and array comparison library. Significantly faster than most other deep comparison libraries and has full TypeScript suppor&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/AsyncBanana"&gt;
        AsyncBanana
      &lt;/a&gt; / &lt;a href="https://github.com/AsyncBanana/microdiff"&gt;
        microdiff
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A fast, zero dependency object and array comparison library. Significantly faster than most other deep comparison libraries and has full TypeScript support.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/AsyncBanana/microdiff/master/Logo.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N8MIqJUM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/AsyncBanana/microdiff/master/Logo.svg" alt="Microdiff Logo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microdiff is a tiny (currently &amp;lt;1kb), fast, zero dependency object and array comparison library. It is significantly faster than most other deep comparison libraries, and has full TypeScript support.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/5f3c63607d27b60b58f843d7f3f1619dd51892963359c6b31a19d8fc6a454944/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f6d6963726f646966663f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/5f3c63607d27b60b58f843d7f3f1619dd51892963359c6b31a19d8fc6a454944/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f6d6963726f646966663f7374796c653d666c61742d737175617265" alt="Minizipped Size (from Bundlephobia)"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/04249aace96410f37864717c7e58fe374ba2d36c7b30727e04b3d62b0c17fe05/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f6d6963726f646966663f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/04249aace96410f37864717c7e58fe374ba2d36c7b30727e04b3d62b0c17fe05/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f6d6963726f646966663f7374796c653d666c61742d737175617265" alt="License"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/a5b95e9a5f56c4ab41f06ec5eea2c80331a37384676a003ffe4cb38b9e41b3c5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646570656e64656e636965732d302d677265656e3f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/a5b95e9a5f56c4ab41f06ec5eea2c80331a37384676a003ffe4cb38b9e41b3c5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646570656e64656e636965732d302d677265656e3f7374796c653d666c61742d737175617265" alt="dependency Count"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h1&gt;
Features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
🚀 More than double the speed of other object diff libraries&lt;/li&gt;
&lt;li&gt;
📦 Extremely lightweight, &amp;lt;1kb minified&lt;/li&gt;
&lt;li&gt;
🌎 Supports Deno, Node, the web, and even service workers. Also comes with built in Typescript types&lt;/li&gt;
&lt;li&gt;
🔰 Very easy to use, having just a single &lt;code&gt;diff()&lt;/code&gt; function&lt;/li&gt;
&lt;li&gt;
📅 Full support for objects like &lt;code&gt;new Date()&lt;/code&gt; and &lt;code&gt;new RegExp()&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
Get started&lt;/h1&gt;
&lt;p&gt;First, install Microdiff&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;npm i microdiff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you are using Deno, you can import it from Deno.land with the link &lt;code&gt;https://deno.land/x/microdiff@VERSION/index.ts&lt;/code&gt; (remember to change &lt;code&gt;@VERSION&lt;/code&gt; to the version you want to use).&lt;/p&gt;
&lt;p&gt;After you install it, simply import it and run it on two objects.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s1"&gt;diff&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;"microdiff"&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;obj1&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c1"&gt;originalProperty&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;obj2&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/AsyncBanana/microdiff"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#4-thenodeway"&gt;
  &lt;/a&gt;
  4. the-node-way
&lt;/h3&gt;

&lt;p&gt;Design patterns and best practices for building scaleable, maintainable and beautiful Node.js applications. &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/FredKSchott"&gt;
        FredKSchott
      &lt;/a&gt; / &lt;a href="https://github.com/FredKSchott/the-node-way"&gt;
        the-node-way
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Design patterns and best practices for building scaleable, maintainable and beautiful Node.js applications. Now with website! --&amp;gt;
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/FredKSchott/the-node-waylogo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Il2tbTNr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/FredKSchott/the-node-waylogo.png" alt="icon"&gt;&lt;/a&gt; the-node-way&lt;/h1&gt;
&lt;p&gt;Design patterns and best practices for building scaleable, maintainable and beautiful Node.js applications.&lt;/p&gt;
&lt;h3&gt;
Introduction&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://thenodeway.io/introduction/" rel="nofollow"&gt;What is The Node Way?&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Master The Fundamentals&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://fredkschott.com/post/2014/03/understanding-error-first-callbacks-in-node-js/" rel="nofollow"&gt;Understanding Error-First Callbacks&lt;/a&gt;&lt;br&gt;
&lt;a href="http://fredkschott.com/post/2014/05/nodejs-testing-essentials/" rel="nofollow"&gt;Testing Essentials&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Start Building&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://fredkschott.com/post/2013/12/node-js-cookbook---designing-singletons/" rel="nofollow"&gt;Designing Singletons&lt;/a&gt;&lt;br&gt;
&lt;a href="http://fredkschott.com/post/2014/01/node-js-cookbook---constructors-and-custom-types/" rel="nofollow"&gt;Designing Custom Types&lt;/a&gt;&lt;br&gt;
&lt;a href="http://fredkschott.com/post/2015/01/the-node-way-designing-factories/" rel="nofollow"&gt;Designing Factories&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Get Fancy&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://fredkschott.com/post/2014/06/require-and-the-module-system/" rel="nofollow"&gt;How &lt;code&gt;require()&lt;/code&gt; Actually Works&lt;/a&gt;&lt;br&gt;
&lt;a href="http://fredkschott.com/post/2014/09/nodejs-dangerous-module-design-patterns/" rel="nofollow"&gt;Dangerous Module Design Patterns&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Visit &lt;strong&gt;&lt;a href="http://thenodeway.io" rel="nofollow"&gt;thenodeway.io&lt;/a&gt;&lt;/strong&gt; and learn the way.&lt;/em&gt;&lt;br&gt;
&lt;em&gt;All code examples and website updates will be added to this repo. Watch for new posts, articles, and more.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2016 Copyright &lt;a href="https://twitter.com/FredKSchott" rel="nofollow"&gt;Fred K. Schott&lt;/a&gt;. All rights reserved.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/FredKSchott/the-node-way"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#5-ckeditor-5"&gt;
  &lt;/a&gt;
  5. CKEditor 5
&lt;/h3&gt;

&lt;p&gt;Powerful rich text editor framework with a modular architecture, modern integrations, and features like collaborative editing.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ckeditor"&gt;
        ckeditor
      &lt;/a&gt; / &lt;a href="https://github.com/ckeditor/ckeditor5"&gt;
        ckeditor5
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Powerful rich text editor framework with a modular architecture, modern integrations, and features like collaborative editing.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
CKEditor 5 &lt;a href="https://twitter.com/intent/tweet?text=Check%20out%20CKEditor%205%20on%20GitHub&amp;amp;url=https%3A%2F%2Fgithub.com%2Fckeditor%2Fckeditor5" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c" alt="Tweet"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/ckeditor5" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/33116a29fb080e689d9613044ac55f35936e6d10fefb15405f7b9ca6b255ca34/68747470733a2f2f62616467652e667572792e696f2f6a732f636b656469746f72352e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.com/ckeditor/ckeditor5" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7a371b797b41e6fd7dee441dca03aedee66795fbf0f0d0c72de42ee9bd118a51/68747470733a2f2f7472617669732d63692e636f6d2f636b656469746f722f636b656469746f72352e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/ckeditor/ckeditor5" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bd1bd023193cc7ebb48dd0cc1d900fbd0687fbf1f65ab112544bc84d96810afe/68747470733a2f2f696d672e736869656c64732e696f2f64617669642f636b656469746f722f636b656469746f72352e737667" alt="Dependency Status"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/ckeditor/ckeditor5?type=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0fb7d1f6496fcfe2fb536ca0b83ffdb09ffec0ac109280b1d782586932cb6e7e/68747470733a2f2f696d672e736869656c64732e696f2f64617669642f6465762f636b656469746f722f636b656469746f72352e737667" alt="devDependency Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://eepurl.com/c3zRPr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/01ff6ce05d0f19075844501a25eb14637df998b74094c49c5b67c36dfe76733e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6a6f696e2d6e6577736c65747465722d3030636339392e737667" alt="Join newsletter"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/ckeditor" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c2e5acc723d61e54643c7a8b4199b07b201013cb069885d5f2a59abea728279c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f666f6c6c6f772d747769747465722d3030636339392e737667" alt="Follow twitter"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A set of ready-to-use rich text editors created with a powerful framework. Made with real-time collaborative editing in mind.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/3ce0d5d1a61c5017c965206df823081364bef5a045f96b66e79ef21c2dd4521c/68747470733a2f2f632e636b736f757263652e636f6d2f612f312f696d672f6e706d2f636b656469746f72352d6275696c642d636c61737369632e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/3ce0d5d1a61c5017c965206df823081364bef5a045f96b66e79ef21c2dd4521c/68747470733a2f2f632e636b736f757263652e636f6d2f612f312f696d672f6e706d2f636b656469746f72352d6275696c642d636c61737369632e706e67" alt="CKEditor 5 Classic rich text editor build screenshot"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Table of contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/ckeditor/ckeditor5#quick-start"&gt;Quick start&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#ckeditor-5-builds"&gt;CKEditor 5 builds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#ckeditor-5-framework"&gt;CKEditor 5 Framework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#documentation-and-faq"&gt;Documentation and FAQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ckeditor/ckeditor5#contributing-and-project-organization"&gt;Contributing and project organization&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#ideas-and-discussions"&gt;Ideas and discussions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#development"&gt;Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#reporting-issues-and-feature-requests"&gt;Reporting issues and feature requests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#releases"&gt;Releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ckeditor/ckeditor5#packages"&gt;Packages&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#core-libraries"&gt;Core libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#builds"&gt;Builds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#editors"&gt;Editors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#themes"&gt;Themes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Quick start&lt;/h2&gt;
&lt;h3&gt;
CKEditor 5 builds&lt;/h3&gt;
&lt;p&gt;CKEditor 5 builds are a set of ready-to-use rich text editors. Every "build" provides a single type of editor with a set of features and a default configuration.&lt;/p&gt;
&lt;p&gt;The following CKEditor 5 builds are currently available:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ckeditor.com/docs/ckeditor5/latest/builds/guides/overview.html#classic-editor" rel="nofollow"&gt;Classic editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ckeditor.com/docs/ckeditor5/latest/builds/guides/overview.html#inline-editor" rel="nofollow"&gt;Inline editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ckeditor.com/docs/ckeditor5/latest/builds/guides/overview.html#balloon-editor" rel="nofollow"&gt;Balloon editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ckeditor.com/docs/ckeditor5/latest/builds/guides/overview.html#balloon-block-editor" rel="nofollow"&gt;Balloon block editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ckeditor.com/docs/ckeditor5/latest/builds/guides/overview.html#document-editor" rel="nofollow"&gt;Document editor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
Example&lt;/h4&gt;
&lt;p&gt;Creating an editor using a CKEditor 5 build is very simple and can be described in two steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Load the desired editor via the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag.&lt;/li&gt;
&lt;li&gt;Call the static &lt;code&gt;create()&lt;/code&gt; method to create the editor.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In your HTML page add…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ckeditor/ckeditor5"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#6-reactintersectionobserver"&gt;
  &lt;/a&gt;
  6. react-intersection-observer
&lt;/h3&gt;

&lt;p&gt;React implementation of the Intersection Observer API to tell you when an element enters or leaves the viewport.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/thebuilder"&gt;
        thebuilder
      &lt;/a&gt; / &lt;a href="https://github.com/thebuilder/react-intersection-observer"&gt;
        react-intersection-observer
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      React implementation of the Intersection Observer API to tell you when an element enters or leaves the viewport.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
react-intersection-observer&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://npmjs.org/package/react-intersection-observer" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7bf3fce3ba4f0ef29bc81e870c941fe689e3beaa516ef4f1e9634aecd6df63b6/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f72656163742d696e74657273656374696f6e2d6f627365727665722e737667" alt="Version Badge"&gt;&lt;/a&gt;
&lt;a href="https://bundlephobia.com/result?p=react-intersection-observer" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f135cbbbca482ab12187294c46554317c18bd28b541c2a0e3689b74d02caead6/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f72656163742d696e74657273656374696f6e2d6f627365727665722e737667" alt="GZipped size"&gt;&lt;/a&gt;
&lt;a href="https://github.com/thebuilder/react-intersection-observer/actions?query=workflow%3ATest"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hM8JHrD0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/thebuilder/react-intersection-observer/workflows/Test/badge.svg" alt="Test"&gt;&lt;/a&gt; &lt;a href="https://github.com/thebuilder/react-intersection-observerLICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/53e58a3aad46de95139597a1e591897bf7e8fecb71069b38e080ac6a012ec7d6/687474703a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f72656163742d696e74657273656374696f6e2d6f627365727665722e737667" alt="License"&gt;&lt;/a&gt;
&lt;a href="http://npm-stat.com/charts.html?package=react-intersection-observer" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fab5c40bd42a7b337b1055a050b04e2495f29252dc551c9d827dcd9dd978fa99/687474703a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f72656163742d696e74657273656374696f6e2d6f627365727665722e737667" alt="Downloads"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;React implementation of the
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API" rel="nofollow"&gt;Intersection Observer API&lt;/a&gt;
to tell you when an element enters or leaves the viewport. Contains both a
&lt;a href="https://github.com/thebuilder/react-intersection-observer#hooks-"&gt;Hooks&lt;/a&gt;, &lt;a href="https://github.com/thebuilder/react-intersection-observer#render-props"&gt;render props&lt;/a&gt; and
&lt;a href="https://github.com/thebuilder/react-intersection-observer#plain-children"&gt;plain children&lt;/a&gt; implementation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Storybook Demo:&lt;/strong&gt;
&lt;a href="https://react-intersection-observer.vercel.app" rel="nofollow"&gt;https://react-intersection-observer.vercel.app&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
🎣 &lt;strong&gt;Hooks or Component API&lt;/strong&gt; - With &lt;code&gt;useInView&lt;/code&gt; it's easier than ever to
monitor elements&lt;/li&gt;
&lt;li&gt;
⚡️ &lt;strong&gt;Optimized performance&lt;/strong&gt; - Reuses Intersection Observer instances where
possible&lt;/li&gt;
&lt;li&gt;
⚙️ &lt;strong&gt;Matches native API&lt;/strong&gt; - Intuitive to use&lt;/li&gt;
&lt;li&gt;
🧪 &lt;strong&gt;Ready to test&lt;/strong&gt; - Mocks the Intersection Observer for easy testing with
&lt;a href="https://jestjs.io/" rel="nofollow"&gt;Jest&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
🌳 &lt;strong&gt;Tree-shakeable&lt;/strong&gt; - Only include the parts you use&lt;/li&gt;
&lt;li&gt;
💥 &lt;strong&gt;Tiny bundle&lt;/strong&gt; &lt;a href="https://bundlephobia.com/result?p=react-intersection-observer" rel="nofollow"&gt;~1.7 kB gzipped&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;Install using &lt;a href="https://yarnpkg.com" rel="nofollow"&gt;Yarn&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;yarn add react-intersection-observer&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;or NPM:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npm install react-intersection-observer --save&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;h3&gt;
&lt;code&gt;useInView&lt;/code&gt; hook&lt;/h3&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;// Use object destructing, so you don't need to remember the exact order&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; ref&lt;span class="pl-kos"&gt;,&lt;/span&gt; inView&lt;span class="pl-kos"&gt;,&lt;/span&gt; entry &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useInView&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;options&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-c"&gt;// Or array destructing, making it easy to customize the&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/thebuilder/react-intersection-observer"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#7-streak-counter"&gt;
  &lt;/a&gt;
  7. Streak Counter
&lt;/h3&gt;

&lt;p&gt;A streak counter to track your streak in days (similar to Duolingo)&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/jsjoeio"&gt;
        jsjoeio
      &lt;/a&gt; / &lt;a href="https://github.com/jsjoeio/use-streak"&gt;
        use-streak
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      a streak counter to track your streak in days (similar to Duolingo)
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Streak Counter&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/dc6e2f17b109a3f564d30cc90effeb5f548f382a71f5cfe239a958ee7c3076db/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f7573652d73747265616b"&gt;&lt;img src="https://camo.githubusercontent.com/dc6e2f17b109a3f564d30cc90effeb5f548f382a71f5cfe239a958ee7c3076db/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f7573652d73747265616b" alt="npm"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a basic streak counter - inspired by Duolingo - written in TypeScript and meant for the browser (uses &lt;code&gt;localStorage&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;yarn add use-streak&lt;/pre&gt;

&lt;/div&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npm install use-streak&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Usage&lt;/h3&gt;
&lt;div class="highlight highlight-source-ts position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;useStreak&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;"use-streak"&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;today&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Date&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;streak&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useStreak&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;localStorage&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;today&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-c"&gt;// streak returns an object:&lt;/span&gt;
&lt;span class="pl-c"&gt;// {&lt;/span&gt;
&lt;span class="pl-c"&gt;//    currentCount: 1,&lt;/span&gt;
&lt;span class="pl-c"&gt;//    lastLoginDate: "11/11/2021",&lt;/span&gt;
&lt;span class="pl-c"&gt;//    startDate: "11/11/2021",&lt;/span&gt;
&lt;span class="pl-c"&gt;// }&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/jsjoeio/use-streak./streak-demo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZyEHPC73--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/jsjoeio/use-streak./streak-demo.png" alt="screenshot of streak demo" width="200"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://codesandbox.io/s/vigorous-wood-o8m7w?fontsize=14&amp;amp;hidenavigation=1&amp;amp;theme=dark" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/90808661433696bc57dce8d4ad732307b5cec6270e6b846f114dcd7ee7f9458a/68747470733a2f2f636f646573616e64626f782e696f2f7374617469632f696d672f706c61792d636f646573616e64626f782e737667" alt="Edit vigorous-wood-o8m7w"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
LICENSE&lt;/h2&gt;
&lt;p&gt;MIT. Just make sure you give acknowledgements to this repo.&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/jsjoeio/use-streak"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#8-pivotjs"&gt;
  &lt;/a&gt;
  8. Pivot.js
&lt;/h3&gt;

&lt;p&gt;Pivot.js is a simple way for you to get to your data. It allows for the creation of highly customizable unique table views from your browser.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/rwjblue"&gt;
        rwjblue
      &lt;/a&gt; / &lt;a href="https://github.com/rwjblue/pivot.js"&gt;
        pivot.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Build Pivot Tables from CSV/JSON Data
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Welcome to Pivot.js&lt;/h1&gt;
&lt;p&gt;Pivot.js is a simple way for you to get to your data.  It allows for the
creation of highly customizable unique table views from your browser.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In data processing, a pivot table is a data summarization tool found in
data visualization programs such as spreadsheets or business intelligence
software. Among other functions, pivot-table tools can automatically sort
count, total or give the average of the data stored in one table or
spreadsheet. It displays the results in a second table (called a "pivot
table") showing the summarized data.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In our case, results (or the pivot-table) will be displayed as an HTML table
pivoting from the input data (CSV or JSON). Without further ado let's get to usage.&lt;/p&gt;
&lt;h2&gt;
View an &lt;a href="http://rwjblue.github.com/pivot.js/"&gt;example&lt;/a&gt; or view the &lt;a href="http://rwjblue.github.com/pivot.js/docs/index.html#!/api/Pivot"&gt;Docs&lt;/a&gt; for more information.&lt;/h2&gt;
&lt;h1&gt;
Usage&lt;/h1&gt;
&lt;p&gt;Step one is to initialize the pivot object.  It expects the following attributes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;csv&lt;/code&gt; - which should contain a…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/rwjblue/pivot.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#9-mdsvex"&gt;
  &lt;/a&gt;
  9. mdsvex
&lt;/h3&gt;

&lt;p&gt;A Markdown preprocessor for Svelte. Markdown in Svelte.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/pngwn"&gt;
        pngwn
      &lt;/a&gt; / &lt;a href="https://github.com/pngwn/MDsveX"&gt;
        MDsveX
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A markdown preprocessor for Svelte.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
mdsvex&lt;/h1&gt;
&lt;p&gt;A Markdown preprocessor for Svelte. Markdown in Svelte.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mdsvex.com" rel="nofollow"&gt;mdsvex.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Packages&lt;/h2&gt;
&lt;p&gt;This is a monorepo containing &lt;code&gt;mdsvex&lt;/code&gt; and any supporting packages. Each repo has it's own readme with more details.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/pngwn/MDsveX/tree/master/packages/site"&gt;site&lt;/a&gt; - The documentation website.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pngwn/MDsveX/tree/master/packages/mdsvex"&gt;mdsvex&lt;/a&gt; - &lt;code&gt;mdsvex&lt;/code&gt; itself.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pngwn/MDsveX/tree/master/packages/svelte-parse"&gt;svelte-parse&lt;/a&gt; - Generate a svast AST from a Svelte components.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pngwn/MDsveX/tree/master/packages/svast"&gt;svast&lt;/a&gt; - An AST specification with accompanying TypeScript definitions.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pngwn/MDsveX/tree/master/packages/svast-stringify"&gt;svast-stringify&lt;/a&gt; - Turn a svast AST into a Svelte component.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pngwn/MDsveX/tree/master/packages/svast-utils"&gt;svast-utils&lt;/a&gt; - Utilities for working with a svast tree.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;Contributions are welcome. This repo uses &lt;a href="https://github.com/atlassian/changesets"&gt;changesets&lt;/a&gt; to manage changelogs and versioning. All pull requests need an accompanying changeset file (PRs to the documentation website do not need a changeset file). If you know how changesets work then feel free to add one with the appropriate packages, versions and a description of the change. If you don't know how changesets work, don't worry about it, I am happy to add one (a…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/pngwn/MDsveX"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#10-pnpm"&gt;
  &lt;/a&gt;
  10. pnPm
&lt;/h3&gt;

&lt;p&gt;Fast, disk space efficient package manager&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/pnpm"&gt;
        pnpm
      &lt;/a&gt; / &lt;a href="https://github.com/pnpm/pnpm"&gt;
        pnpm
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Fast, disk space efficient package manager -- 快速的，节省磁盘空间的包管理工具
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://pnpm.io/zh/" rel="nofollow"&gt;中文&lt;/a&gt; | &lt;a href="https://pnpm.io/ja/" rel="nofollow"&gt;日本語&lt;/a&gt; | &lt;a href="https://pnpm.io/it/" rel="nofollow"&gt;Italiano&lt;/a&gt; | &lt;a href="https://pnpm.io/ru/" rel="nofollow"&gt;Русский&lt;/a&gt; | &lt;a href="https://pnpm.io/tr/" rel="nofollow"&gt;Türkçe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/15249b13cd482f77ff1e9f74952f1a01892912af0c5cab22f73f26d595b2f0bf/68747470733a2f2f692e696d6775722e636f6d2f716c57316545472e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/15249b13cd482f77ff1e9f74952f1a01892912af0c5cab22f73f26d595b2f0bf/68747470733a2f2f692e696d6775722e636f6d2f716c57316545472e706e67" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fast, disk space efficient package manager:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Fast.&lt;/strong&gt; Up to 2x faster than the alternatives (see &lt;a href="https://github.com/pnpm/pnpm#benchmark"&gt;benchmark&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Efficient.&lt;/strong&gt; Files inside &lt;code&gt;node_modules&lt;/code&gt; are linked from a single content-addressable storage.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://pnpm.io/workspaces" rel="nofollow"&gt;Great for monorepos&lt;/a&gt;.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Strict.&lt;/strong&gt; A package can access only dependencies that are specified in its &lt;code&gt;package.json&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Deterministic.&lt;/strong&gt; Has a lockfile called &lt;code&gt;pnpm-lock.yaml&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Works as a Node.js version manager.&lt;/strong&gt; See &lt;a href="https://pnpm.io/cli/env" rel="nofollow"&gt;pnpm env use&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Works everywhere.&lt;/strong&gt; Supports Windows, Linux, and macOS.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Battle-tested.&lt;/strong&gt; Used in production by teams of &lt;a href="https://pnpm.io/users" rel="nofollow"&gt;all sizes&lt;/a&gt; since 2016.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To quote the &lt;a href="https://rushjs.io/" rel="nofollow"&gt;Rush&lt;/a&gt; team:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Microsoft uses pnpm in Rush repos with hundreds of projects and hundreds of PRs per day, and we’ve found it to be very fast and reliable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/pnpm" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5aa4ad0238fb29f5f94003a67748b016262eacb7f3fb9283705fd075387b315c/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f706e706d2e737667" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://r.pnpm.io/chat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ffaff4673f3d7d1c95c5da9ebb293ae8151021812e802e37d8df30f35d7eaa53/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3733313539393533383636353535333937312e737667" alt="Join the chat at Discord"&gt;&lt;/a&gt;
&lt;a href="https://github.com/pnpm/pnpm#backers"&gt;&lt;img src="https://camo.githubusercontent.com/7a169f5d11afe0ab0a741ff4211673fb39012b74b51f2a82b9d3bdaa6fa5ac94/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f706e706d2f6261636b6572732f62616467652e737667" alt="OpenCollective"&gt;&lt;/a&gt;
&lt;a href="https://github.com/pnpm/pnpm#sponsors"&gt;&lt;img src="https://camo.githubusercontent.com/992a4d505eabe585243fc1e31946bd1525cef92270ab0d76b7048752f243d237/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f706e706d2f73706f6e736f72732f62616467652e737667" alt="OpenCollective"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/intent/follow?screen_name=pnpmjs&amp;amp;region=follow_link" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8c564e4c968e5d7340d07185d79c451abfc39b0d1a5d2a54a5a9b9648c2b4537/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f706e706d6a732e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77" alt="Twitter Follow"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Sponsors&lt;/h2&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
        &lt;a href="https://bit.dev" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--22L8Abxh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/pnpm/pnpm.github.io/main/static/img/users/bit.svg" width="80"&gt;&lt;/a&gt;
      &lt;/td&gt;
      &lt;td&gt;
        &lt;a href="https://prisma.io" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0xaVeryu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/pnpm/pnpm.github.io/main/static/img/users/prisma.svg" width="180"&gt;&lt;/a&gt;
      &lt;/td&gt;
      &lt;td&gt;
        &lt;a href="https://leniolabs.com" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hx11L2Fy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/pnpm/pnpm.github.io/main/static/img/users/leniolabs.jpg" width="80"&gt;&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Support this project by &lt;a href="https://opencollective.com/pnpm#sponsor" rel="nofollow"&gt;becoming a sponsor&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Background&lt;/h2&gt;
&lt;p&gt;pnpm uses a content-addressable filesystem to store all files from all module directories on a disk
When using…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/pnpm/pnpm"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing 📈
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/medusajs/medusa"&gt;Medusa&lt;/a&gt; +1,604 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners"&gt;Web Dev for Beginners&lt;/a&gt; +1,134 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/ML-For-Beginners"&gt;ML for Beginners&lt;/a&gt; +1,076 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +907 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Budibase/budibase"&gt;Budibase&lt;/a&gt; +892 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/medusajs/medusa"&gt;Medusa&lt;/a&gt; +87%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/gr2m/twitter-together"&gt;Twitter Together&lt;/a&gt; +29%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/smeijer/next-runtime"&gt;next runtime&lt;/a&gt; +25%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/tannerlinsley/react-location"&gt;React Location&lt;/a&gt; +25%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/estruyf/vscode-front-matter"&gt;vsCode Front Matter&lt;/a&gt; +23%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/ML-For-Beginners"&gt;Machine Learning for beginner&lt;/a&gt; +3,623 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +3,013 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +2,815 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trimstray/the-book-of-secret-knowledge"&gt;The Book of Secret Knowledge&lt;/a&gt; +2,355 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +2,256 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/teafuljs/teaful"&gt;Fragstore&lt;/a&gt; +637%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/medusajs/medusa"&gt;Medusa&lt;/a&gt; +171%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/csswizardry/ct"&gt;ct&lt;/a&gt; +112%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ebs-integrator/ebs-design"&gt;EBS Design&lt;/a&gt; +79%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/atapas/webapis-playground"&gt;Web APIs Playground&lt;/a&gt; +74%&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For all for the latest rankings please checkout &lt;a href="https://stargazing.dev"&gt;Stargazing.dev&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/stargazing_dev"&gt;follow me&lt;/a&gt; on Twitter where I regularly post about HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>AWS SSO Tutorial with Google Workspace (Gsuite) as an IdP Step-by-Step</title>
      <author>Mike Elsmore</author>
      <pubDate>Fri, 26 Nov 2021 14:44:01 +0000</pubDate>
      <link>https://dev.to/ukmadlz/aws-sso-tutorial-with-google-workspace-gsuite-as-an-idp-step-by-step-1866</link>
      <guid>https://dev.to/ukmadlz/aws-sso-tutorial-with-google-workspace-gsuite-as-an-idp-step-by-step-1866</guid>
      <description>&lt;p&gt;AWS SSO and AWS Organization were released around 2017 and are probably the best way to manage AWS access at scale.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"AWS Single Sign-On (SSO) is a cloud SSO service that makes it easy to centrally manage SSO access to multiple AWS accounts and business applications. It enables users to sign in to an AWS IAM user with their existing corporate credentials and access all of their assigned accounts and applications from one place."&lt;br&gt;
&lt;em&gt;Quote From AWS SSO page&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is a huge security and operational win, some highlights:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No need to rotate another new password in AWS IAM&lt;/li&gt;
&lt;li&gt;2FA is already managed at your IdP (Google Workspace (Gsuite)/Okta/AzureAD) level&lt;/li&gt;
&lt;li&gt;When a user is leaving an organization he is automatically removed access from the organization&lt;/li&gt;
&lt;li&gt;Easily automate the provisioning of AWS access when a user joins an organisation or department&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this article we, will go through a step-by-step guide to set-up AWS SSO with Google Workspace (previously Gsuite) as an IdP. If you are using Google Workspace and use it as your central directory, this is the guide for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h2&gt;

&lt;p&gt;You should have the &lt;a href="https://aws.amazon.com/organizations/"&gt;AWS Organization&lt;/a&gt; (If you are not using it, This service combined with AWS SSO is a real game changer) set-up. &lt;/p&gt;

&lt;p&gt;You need to signup from the main account (also called &lt;strong&gt;"management account"&lt;/strong&gt; ) and with enough permissions (usually Administrator permissions).&lt;/p&gt;

&lt;p&gt;You will also need to make sure that you have access to the Google Workspace Admin and the relevant permissions to manage it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-aws"&gt;
  &lt;/a&gt;
  Setting up AWS
&lt;/h3&gt;

&lt;p&gt;Now that you have all the relevant permissions, everything is ready to configure for AWS SSO. Here is the step by step to set it all up:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;From within the &lt;a href="http://console.aws.amazon.com/"&gt;AWS Management Console&lt;/a&gt; search so &lt;code&gt;single sign on&lt;/code&gt; and go to the &lt;a href="https://console.aws.amazon.com/singlesignon"&gt;AWS Single Sign-on&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nk66zrrp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image26.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nk66zrrp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image26.png" alt="Find AWS Single Sign-on" width="880" height="137"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once on the service page, click the &lt;code&gt;Enable AWS SSO&lt;/code&gt; button to start the service. This will take a few moments to complete.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1e6E6LHW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image29.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1e6E6LHW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image29.png" alt="Enable AWS Single Sign-on" width="880" height="373"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now that SSO is enabled, we need to change from the AWS directory to using an external provider. Select &lt;code&gt;Choose your identity source&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--njRGT5VX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--njRGT5VX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image1.png" alt="Choose your identity source" width="880" height="402"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Within the Settings page, select &lt;code&gt;Change&lt;/code&gt; under the &lt;code&gt;Identity source&lt;/code&gt; section.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mbYYmSpO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image31.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mbYYmSpO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image31.png" alt="Identity source" width="880" height="279"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now we can change from the AWS SSO directory to an Active Directory (not what we need), or an &lt;code&gt;External identity provider&lt;/code&gt; which is what we need to configure Google Workspace as the provider.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pduhm82d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image28.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pduhm82d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image28.png" alt="External identity provider" width="880" height="421"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After you have selected &lt;code&gt;External identity provider&lt;/code&gt;, scroll down to &lt;code&gt;Service provider metadata&lt;/code&gt; and click &lt;code&gt;Show individual metadata values&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zygug-Sp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image15.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zygug-Sp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image15.png" alt="Show individual metadata values" width="880" height="284"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You should now be presented with three fields that you can use to configure the next step on Google Workspace in the Google Admin console.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fBqz6TzA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image16.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fBqz6TzA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image16.png" alt="Configuration for Google Workspace" width="880" height="418"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Don't close this screen, you will need it shortly after you have done the next section.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#google-workspace-saml-setup"&gt;
  &lt;/a&gt;
  Google Workspace SAML setup
&lt;/h3&gt;

&lt;p&gt;With the SSO Urls for our AWS organization, we can go to our Google Workspace Admin console and configure it.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;When inside the &lt;a href="https://admin.google.com/"&gt;Google Workspace Admin console&lt;/a&gt;, go to the &lt;code&gt;Web and mobile apps&lt;/code&gt; settings. You can find this in the left-hand navigation menu under &lt;code&gt;Apps&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CReKSRsx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image12.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CReKSRsx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image12.png" alt="Web and mobile apps" width="576" height="1172"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then select &lt;code&gt;Add App&lt;/code&gt; from the top navigation, then &lt;code&gt;Add custom SAML app&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FDT2aOWc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FDT2aOWc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image2.png" alt="Add custom SAML app" width="880" height="271"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add an &lt;code&gt;App name&lt;/code&gt; for the integration, I'm using &lt;code&gt;AWS SSO&lt;/code&gt; to make it easier to find later.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JTOQH00N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image18.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JTOQH00N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image18.png" alt="Set the App name" width="880" height="473"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We suggest you download the Google IdP metadata ready to put it back into AWS, this is under &lt;code&gt;Option 1: Download IdP metadata&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WBaapZEL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WBaapZEL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image5.png" alt="Option 1: Download IdP metadata" width="880" height="504"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now to add the AWS SSO Urls from earlier to configure Google Workspace to point to the correct location. The mapping of data is:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vnLH0765--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image22.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vnLH0765--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image22.png" alt="Add the AWS SSO Urls" width="880" height="957"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- For ACS URL, enter the AWS SSO ACS URL.
- For Entity ID, enter the AWS SSO Issue URL.
- For Start URL, leave the field blank.
- For Name ID format, choose EMAIL.
- For Name ID, choose Basic Information &amp;gt; Primary email.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;We don't need to apply anything to the &lt;code&gt;Attribute mapping&lt;/code&gt; settings, so you can just click &lt;code&gt;FINISH&lt;/code&gt; to move forward.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PTf0CzJD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image24.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PTf0CzJD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image24.png" alt="Click FINISH" width="880" height="312"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once that's saved, it is time to enable it for everyone. In the &lt;code&gt;User access&lt;/code&gt; section, open the settings by selecting the karat in the top right corner.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C4jpBAmg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image30.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C4jpBAmg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image30.png" alt="User access settings" width="880" height="182"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now that you're in the Service status screen, select &lt;code&gt;ON for everyone&lt;/code&gt; and &lt;code&gt;SAVE&lt;/code&gt;. This will enable the service and allow you to manage who can have access to AWS, but to configure what they can access you need to do that in AWS SSO as Google Workspace is unaware of all the possible options.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h-D6C8B3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image11.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h-D6C8B3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image11.png" alt="ON for everyone" width="880" height="247"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#adding-google-workspace-configuration-to-aws-sso"&gt;
  &lt;/a&gt;
  Adding Google Workspace configuration to AWS SSO
&lt;/h3&gt;

&lt;p&gt;Now that the AWS SSO service is enabled, and the Google Workspace SAML app exists, it's time to make them talk to each other.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Go back to the &lt;code&gt;Change identity source&lt;/code&gt; screen in AWS SSO. Scroll to the bottom and add the &lt;code&gt;GoogleIDPMetadata.xml&lt;/code&gt; file you downloaded a few moments ago, then click &lt;code&gt;Next: Review&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gI3I6Z-N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image17.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gI3I6Z-N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image17.png" alt="Add GoogleIDPMetadata.xml" width="880" height="598"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To confirm this new identity source, you will need to type &lt;code&gt;ACCEPT&lt;/code&gt; into the field under the warnings and then select &lt;code&gt;Change identity source&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NC2M7iL---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image20.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NC2M7iL---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image20.png" alt="Confirm new identity source" width="880" height="694"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And now you are done with configuring the SSO and SAML connection between AWS SSO and Google Workspace. However, you aren't quite done as you need to configure the user provisioning at this point.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gQnle0-N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image23.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gQnle0-N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image23.png" alt="Completed AWS SSO configuration" width="880" height="323"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-users-and-permissions"&gt;
  &lt;/a&gt;
  Setting up Users and Permissions
&lt;/h3&gt;

&lt;p&gt;As of writing this, you can't automatically sync users between AWS and Google (this is being worked on over at OpenID) so we are limited to two options; manually creating the user (which we will go through) and using &lt;a href="https://github.com/awslabs/ssosync"&gt;https://github.com/awslabs/ssosync&lt;/a&gt; to automate the process.&lt;/p&gt;

&lt;p&gt;To manually add users, you will want to follow these instructions.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Go to &lt;code&gt;Users&lt;/code&gt; in the sidebar of the &lt;code&gt;AWS SSO&lt;/code&gt; service. Then select &lt;code&gt;Add user&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uhRXHydv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uhRXHydv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image4.png" alt="Add user" width="880" height="380"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the primary Google Workplace email address as the &lt;code&gt;Username&lt;/code&gt; as well as the &lt;code&gt;Email address&lt;/code&gt;, and fill the other fields accordingly. Then hit &lt;code&gt;Next: Groups&lt;/code&gt; to save.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j4v-baiQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image13.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j4v-baiQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image13.png" alt="Use Primary Google Workspace email" width="880" height="388"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As part of this process, we aren't going to be adding groups so we can skip these phases by selecting &lt;code&gt;Add user&lt;/code&gt; in the bottom right.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xR6XJBJ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image25.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xR6XJBJ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image25.png" alt="Skip groups and add user" width="880" height="312"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The user now needs to be associated with an AWS account. So select &lt;code&gt;AWS accounts&lt;/code&gt; from the left navigation, select the checkbox next to the user, and click &lt;code&gt;Assign users&lt;/code&gt; to attach them to the account.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qMa1VKtO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qMa1VKtO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image8.png" alt="Assign users" width="880" height="380"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On the next screen select the user again so that we can move on to permissions by clicking &lt;code&gt;Next: Permissions sets&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9biemldh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image10.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9biemldh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image10.png" alt="Select user to assign permissions" width="880" height="387"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As we haven’t configured and permission sets before we will have to do that now by clicking &lt;code&gt;Create new permission set&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DCUpnQvl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image21.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DCUpnQvl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image21.png" alt="Create new permission set" width="880" height="298"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We will be using &lt;code&gt;Use an existing job function policy&lt;/code&gt;, these are like &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html"&gt;AWS managed policies&lt;/a&gt; that you will be aware of if you have configured permissions inside AWS previously. Now &lt;code&gt;Next: Details&lt;/code&gt; to select the policy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nNL4VU_6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image27.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nNL4VU_6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image27.png" alt="Use an existing job function policy" width="880" height="237"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;From here you can select the policy you want to assign, I'll be using &lt;code&gt;AdministratorAccess&lt;/code&gt; as this is for myself. But you could use &lt;code&gt;PowerUserAccess&lt;/code&gt; as this would allow the user to build whatever they want, but not mess with other users and groups. Then click &lt;code&gt;Next: Tags&lt;/code&gt; to apply this to the user.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QXL9OtER--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QXL9OtER--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image7.png" alt="Select policy to use" width="880" height="602"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tags are optional, but they are advised for auditing and search at a later point. But I don't need them so we select &lt;code&gt;Next: Review&lt;/code&gt; to move forward.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DmpN-_15--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DmpN-_15--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image6.png" alt="Tags are optional" width="880" height="382"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A quick once over to make sure everything is set correctly, then we can click &lt;code&gt;Create&lt;/code&gt; to do so.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NoX0pf4c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NoX0pf4c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image3.png" alt="Complete new permissions set" width="880" height="596"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Back to our &lt;code&gt;Assign Users&lt;/code&gt; screen, we can click the refresh icon to view our permission sets. From here we select the checkbox for the permissions set we want for the user, then select &lt;code&gt;Finish&lt;/code&gt; to apply it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jh_3yArL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jh_3yArL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image9.png" alt="Assign newly created permissions set" width="880" height="590"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It'll take a moment to provision, but you should get a Complete screen saying you are done.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DL_LpwkN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image14.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DL_LpwkN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image14.png" alt="Provisioning user complete" width="880" height="210"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And we are done, now the user can authenticate and log in from Google Workplace using the handy link in the &lt;code&gt;Google apps&lt;/code&gt; selector.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZmmWKLIp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image19.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZmmWKLIp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cloudquery.io/imgs/aws-sso-gsuite/image19.png" alt="Google Apps selector" width="672" height="1000"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;By now you should have AWS SSO configured with Google Workspace as an IdP and you can manage access &amp;amp; permissions to your AWS in the AWS SSO service.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>devops</category>
      <category>tutorial</category>
      <category>security</category>
    </item>
  </channel>
</rss>
