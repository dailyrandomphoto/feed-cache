<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network. Open source and radically transparent.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Have you built any projects with Electron?</title>
      <author>Madza</author>
      <pubDate>Fri, 27 Nov 2020 11:40:35 +0000</pubDate>
      <link>https://dev.to/madza/have-you-built-any-projects-with-electron-58bi</link>
      <guid>https://dev.to/madza/have-you-built-any-projects-with-electron-58bi</guid>
      <description>&lt;p&gt;Thanks to &lt;a href="https://www.electronjs.org/"&gt;Electron&lt;/a&gt; you can build cross-platform desktop apps with JavaScript, HTML, and CSS. It's an &lt;a href="https://github.com/electron/electron"&gt;open-source&lt;/a&gt; project, that uses Chromium and Node.js and is actively maintained by GitHub.&lt;/p&gt;

&lt;p&gt;It's been in my eye for a while, so I'm curious have you built any projects with it, and what was your experience?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>javascript</category>
      <category>electron</category>
      <category>desktop</category>
    </item>
    <item>
      <title>FE Jargon you should know - SSG,¬† SSR,¬† CSR,¬† VDOM</title>
      <author>Alexandru-Dan Pop</author>
      <pubDate>Fri, 27 Nov 2020 11:16:08 +0000</pubDate>
      <link>https://dev.to/alexandrudanpop/fe-jargon-you-should-know-ssg-ssr-csr-vdom-22b0</link>
      <guid>https://dev.to/alexandrudanpop/fe-jargon-you-should-know-ssg-ssr-csr-vdom-22b0</guid>
      <description>&lt;p&gt;If you have heard lately talks about &lt;strong&gt;SSG, SSR, CSR, VDOM&lt;/strong&gt; - and you were like: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;What the heck is that? ü§î &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then this article is for you and aims to be a &lt;em&gt;mini dictionary&lt;/em&gt; for modern frontend terminology and jargon.&lt;/p&gt;

&lt;p&gt;Please leave a üß° &amp;amp; ü¶Ñ if you enjoy this article &amp;amp; follow me on &lt;a href="https://twitter.com/alexandrudanpop"&gt;Twitter&lt;/a&gt; where I post more cool content.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#csr" class="anchor"&gt;
  &lt;/a&gt;
  CSR
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Client side rendering&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The general way of building frontend applications those days is writing them using libraries like &lt;strong&gt;React, Angular, Vue, or Svelte&lt;/strong&gt; and then building them in a javascript bundle. This bundle is referenced in our single HTML file. CSR (client-side rendering) is rendering our markup in the browser. If that sounds complicated, look at the image below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8VHzfN4H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ht4ffj3rdmj9a22x6rz3.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8VHzfN4H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ht4ffj3rdmj9a22x6rz3.PNG" alt="CSR flow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#this-image-represents-two-stages" class="anchor"&gt;
  &lt;/a&gt;
  This image represents two stages:
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Dotted gray line represents the deployment of our FE code to a server. As you can see the deploy step generates an HTML file and a bundle.js file.&lt;/li&gt;
&lt;li&gt;Dashed green line represents how a browser gets to paint our app: 

&lt;ol&gt;
&lt;li&gt;Browser - STEP 1 - The browser requests the HTML file&lt;/li&gt;
&lt;li&gt;Browser - STEP 2 - The browser requests the JS file&lt;/li&gt;
&lt;li&gt;Browser - STEP 3 - Perform Client-side rendering (CSR)&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;‚úÖ As an advantage - &lt;strong&gt;CSR is the most straight-forward way to build a SPA&lt;/strong&gt; (single page app). So it's the easiest and fastest way for developers.&lt;/p&gt;

&lt;p&gt;‚ùó The main disadvantage of this approach is that after &lt;em&gt;Step 1&lt;/em&gt;, we cannot show anything to the user. &lt;strong&gt;We need to wait until JS is downloaded, parsed &amp;amp; executed (&lt;em&gt;Step 3&lt;/em&gt;), and only then our users can see the app.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ssg" class="anchor"&gt;
  &lt;/a&gt;
  SSG
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Static site generation&lt;/strong&gt; - this is when you are pre-rendering a website with a framework or library that is producing static HTML pages. &lt;/p&gt;

&lt;p&gt;For example, you could be writing a React application, but you want its output to be static HTML pages. This might be because you enjoy React, but you also want the performance of pre-rendered content. Something like a blog, a presentation website, or an e-shop. &lt;/p&gt;

&lt;p&gt;If the content doesn't change often, it makes sense to render at build time, instead of loading all the javascript in the browser and only then building the HTML that the user will interact with.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--piYozBui--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/a5bsiornhtwefefakmdb.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--piYozBui--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/a5bsiornhtwefefakmdb.PNG" alt="SSG flow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Comparing to CSR -&amp;gt; you can see we have lots of HTML files resulting from our build step. We also have HTML available to render in the browser in Step 2.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Additionally, SSG sites can be hydrated after the initial page is loaded. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ok, if that sounded weird, that just means after the initial HTML page is loaded, it can also load the CSR library so when the user navigates to the next page, it happens instantly, rendered on the client, without other network calls.&lt;/p&gt;

&lt;p&gt;‚úÖ SSG sites will create the &lt;strong&gt;most performant web apps&lt;/strong&gt; provided the hosting is also good.&lt;/p&gt;

&lt;p&gt;‚ùó Content needs to be fetched always at build time. This means we need to build &amp;amp; deploy every time the content changes. This is &lt;strong&gt;not feasible for highly dynamic content&lt;/strong&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ssr" class="anchor"&gt;
  &lt;/a&gt;
  SSR
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Server-side rendering&lt;/strong&gt;&lt;br&gt;
Server-side rendering is a pretty old technique. Any application that renders HTML on the server can be called an SSR app. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LltZC-eF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/oyveukr28dfjv8hc4u73.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LltZC-eF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/oyveukr28dfjv8hc4u73.PNG" alt="SSR flow"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#but-this-looks-like-the-ssg-pic" class="anchor"&gt;
  &lt;/a&gt;
  But this looks like the SSG pic...
&lt;/h3&gt;

&lt;p&gt;Hmm.. kind of, but here you can see we actually don't treat our server just like a dumb provider of static content, instead we are actually doing something useful with it. We are generating the HTML every time our user needs it. This is slower than SSG because the server needs to compute the HTML.&lt;/p&gt;

&lt;p&gt;The generic &lt;em&gt;code that runs on a server&lt;/em&gt; in this picture could be a &lt;em&gt;Node.js Express App or Ruby or Python&lt;/em&gt;. &lt;strong&gt;The thing that we achieve with this approach is the dynamic control of our content, headers &amp;amp; meta tags (that can serve for SEO)&lt;/strong&gt;. And a plus can also be the performance. We don't stress our app consumers downloading a bunch of JS and only then rendering HTML (CSR), we give it straight away. The caveat is that we need to account for the fact that our server needs to be performant doing the generation &amp;amp; also support the load we throw at it. &lt;/p&gt;

&lt;p&gt;‚úÖ SSR sites provide us the most flexibility in terms of what we want to display to users despite fast content changes &amp;amp; how we optimize our response headers &amp;amp; meta tags for SEO.&lt;/p&gt;

&lt;p&gt;‚ùó Extra complexity due to the server-side code &amp;amp; we need to scale our server in case we receive more load. SSR and SSG don't have this problem, they can be thrown on a good CDN and that just scales to any load.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;SSR, SSG, CSR - can be combined.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Modern frameworks like &lt;strong&gt;Next.js (for React)&lt;/strong&gt; or &lt;strong&gt;NuxtJS (for Vue)&lt;/strong&gt; allow us to write applications that can serve multiple purposes and we can combine those techniques with it.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#vdom" class="anchor"&gt;
  &lt;/a&gt;
  VDOM
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Virtual DOM&lt;/strong&gt;&lt;br&gt;
The Virtual DOM is an in-memory representation of our UI elements. Frameworks like React, Angular &amp;amp; Vue use a Virtual DOM to &lt;strong&gt;not paint&lt;/strong&gt; in the real DOM the same thing multiple times. Because the real Browser DOM is slow to paint things, those frameworks use a VDOM as an optimization to keep track and only re-paint the things that are necessary.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/BYbgopx44vo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-article" class="anchor"&gt;
  &lt;/a&gt;
  Next article
&lt;/h2&gt;

&lt;p&gt;The next post will be more about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Micro-frontends&lt;/li&gt;
&lt;li&gt;Building &amp;amp; bundling related topics - CodeSplitting, Transpiling,¬†Tree shaking &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For React specific things to know - I  wrote about it in-depth in &lt;a href="https://blog.alexandrudanpop.dev/posts/react-js-top-things-to-know-3onj/"&gt;my other article.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For a description of more general concepts - you should also read the very nice &lt;a href="https://css-tricks.com/web-nerd-terminology-explained/"&gt;Web Nerd Terminology&lt;/a&gt; blog post on CSS tricks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusions" class="anchor"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h2&gt;

&lt;p&gt;Hope those explanations help - please leave a üß° &amp;amp; ü¶Ñ to support the effort of creating this article. &lt;br&gt;
More cool content on &lt;a href="https://twitter.com/alexandrudanpop"&gt;Twitter&lt;/a&gt; üî•üî•.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#comment-below" class="anchor"&gt;
  &lt;/a&gt;
  üëá &lt;strong&gt;Comment below&lt;/strong&gt; üëá
&lt;/h3&gt;

&lt;p&gt;Do you use SSR, SSG, CSR, or all of them?&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>webpack</category>
      <category>react</category>
    </item>
    <item>
      <title>Beginner-friendly python project ideas (with implementation)</title>
      <author>Saloni Goyal</author>
      <pubDate>Fri, 27 Nov 2020 09:33:55 +0000</pubDate>
      <link>https://dev.to/blender/beginner-friendly-python-project-ideas-2j60</link>
      <guid>https://dev.to/blender/beginner-friendly-python-project-ideas-2j60</guid>
      <description>&lt;p&gt;üëã devs, &lt;/p&gt;

&lt;p&gt;I recently came across this &lt;a href="https://www.dataquest.io/blog/python-projects-for-beginners/"&gt;blog&lt;/a&gt; with some very good project ideas targeted at beginners. If you are a noob in python programming, you can try and build one of these projects. &lt;/p&gt;

&lt;p&gt;Some of the project ideas are - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Fun Python projects for &lt;strong&gt;game dev&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rock, Paper, Scissors &lt;/li&gt;
&lt;li&gt;Guessing Game &lt;/li&gt;
&lt;li&gt;Hangman &lt;/li&gt;
&lt;li&gt;Snake&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Fun Python project ideas for &lt;strong&gt;building data skills&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Find out How Much Money You've Spent on Amazon&lt;/li&gt;
&lt;li&gt;Analyze Survey Data &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Fun Python projects for beginner &lt;strong&gt;web devs&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;URL shortener&lt;/li&gt;
&lt;li&gt;Build a Simple Web Page with Django &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Fun Python projects for aspiring &lt;strong&gt;app developers&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Password generator&lt;/li&gt;
&lt;li&gt;Use Tweepy to create a Twitter bot&lt;/li&gt;
&lt;li&gt;Create a Crypto App with Python&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All the code is included, just try to read through it and follow the explanations to understand the code. There will definitely be few new keywords which you have not seen before which you can look up and learn them on the go.&lt;/p&gt;

&lt;p&gt;Once you understand the code, try to implement it yourself on your machine. You can also add them to your GitHub account and show them here on dev.&lt;/p&gt;

&lt;p&gt;When you learn more things, you can re-visit these projects and improve them and/or add new features to them.&lt;/p&gt;

&lt;p&gt;Thanks for reading! Hope it is useful. &lt;/p&gt;

&lt;p&gt;P.S. I am not affiliated with Dataquest in any way. :)&lt;/p&gt;

</description>
      <category>python</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>The 5am {Hack}</title>
      <author>Dmitri</author>
      <pubDate>Fri, 27 Nov 2020 08:50:41 +0000</pubDate>
      <link>https://dev.to/lankjan007/the-5am-hack-4im7</link>
      <guid>https://dev.to/lankjan007/the-5am-hack-4im7</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-fresh-start" class="anchor"&gt;
  &lt;/a&gt;
  &lt;em&gt;The fresh start&lt;/em&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;RISE UP, Start fresh, see the bright opportunity in each day.&lt;/em&gt; ‚Äì Paulo Coehlo&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You know that side hustle you wanted to start or that skill you planned to add to your repertoire. In this day of constant distraction it seems there is not enough time in the day to do any of this, or is there?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-5am-club" class="anchor"&gt;
  &lt;/a&gt;
  &lt;em&gt;The 5am club&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;I discovered Robin Sharma¬¥s &lt;a href="https://www.amazon.com/AM-Club-Morning-Elevate-Life/dp/1443456624"&gt;the 5am club&lt;/a&gt; book a few months ago during the peak of the global pandemic we are experiencing. The story really connected with me and I only wish I had heard some of this valuable advice earlier. The beauty of starting a day on your terms, not much can compare to that. I won¬¥t reveal all of the book‚Äôs gems here, I will let you discover them for yourself.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#let-the-hacking-begin" class="anchor"&gt;
  &lt;/a&gt;
  &lt;em&gt;Let the Hacking begin&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;So, following &lt;a href="https://www.amazon.com/Start-Why-Leaders-Inspire-Everyone/dp/1591846447/ref=sr_1_1?crid=3R4M6V678HW9E&amp;amp;dchild=1&amp;amp;keywords=start+with+your+why&amp;amp;qid=1606465855&amp;amp;sprefix=start+with+your+why%2Cstripbooks-intl-ship%2C803&amp;amp;sr=8-1"&gt;Simon Sinek¬¥s&lt;/a&gt; advice, I started with my WHY. Given an extra 2 to 3 hours every morning, are you going to focus this time to kickstart your side hustle, build your MVP for a Startup, or continue your professional education as I‚Äôm doing? I am halfway through an intense 6 month online Web Developer Bootcamp spending my morning focused on crunching the hours of video lessons. I have also dedicated more time to doing yoga, meditation and mindfulness than I would otherwise have.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-important-bits" class="anchor"&gt;
  &lt;/a&gt;
  &lt;em&gt;The important bits&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;Among the essential things I would suggest placing your alarm a couple of meters away, so you have to get up and out of your warm and cozy bed and take your first morning steps, and don‚Äôt even think about hitting the snooze button. &lt;/p&gt;

&lt;p&gt;I usually have a glass of water as soon as possible after waking up, hydrating my mind and body. &lt;br&gt;
I then stumble into the living room where I have my training mat setup for a 20-minute high intensity workout (I love Billy Blanks Taebo workouts) after this I will make a green tea or coffee depending on the day and mood and go into my study room to do some focused work for approximately 1 hour with small 10 min evenly spaced breaks in between to stretch and breath in the fresh morning air.&lt;/p&gt;

&lt;p&gt;At around 8 am I usually start feeling hungry and will have breakfast keeping it fairly light and vitamin-rich to start the day. I don‚Äôt work full time so my son¬¥s who usually wakes up around this time will want to have breakfast with me and then a bit of playtime before school.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#breath-in-breath-out-and-relax" class="anchor"&gt;
  &lt;/a&gt;
  &lt;em&gt;Breath in, breath out and relax&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;The rest of the morning I spent tidying up around the house and perhaps a meditation or mindfulness session to calm the mind. The important thing is that by this time I have done more than most people and feel more accomplished in general. It is vital that you get to bed by 9pm to get 8 hours of sleep, which your body will thank you for later. A relaxing bath/shower and sleep-inducing tea before bed always work for me. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#morning-flow-state" class="anchor"&gt;
  &lt;/a&gt;
  &lt;em&gt;Morning flow state&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;It¬¥s best to keep your phone out of the room you studying/working in if possible and to leave your computer's Wi-Fi switched off if you use it to study or work, it will only cause a distraction. I try to keep the light ambiance low with only a desk lamp, occasionally I play soft lo-fi tunes in the background and keep &lt;a href="https://justgetflux.com/"&gt;f.lux&lt;/a&gt; turned on throughout the morning to reduce eye strain. Prepare everything the night before and keep your work area distraction-free with only the essential material you need to work. I also keep a journal on the desk, just for jotting down anything that pops into my head and for practicing my daily gratitude.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stone-riley-the-billionaire" class="anchor"&gt;
  &lt;/a&gt;
  &lt;em&gt;Stone Riley ‚Äì the billionaire&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;According to the 5am club¬¥s protagonist you will be doing what the top 5% of the most successful Athletes, business titans, and other high achievers get accomplished daily. It will take around 66 days for the 5am wake up to become a habit (22 days to destroy your existing bad habits, 22 to install the new habit, and to then integrate it into your daily routine a further 22 days).&lt;br&gt;
However you decide to spend your time, be persistent, and work hard. Success is a marathon, not a sprint. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;The secret of getting ahead is getting started. Sometimes you have to just let go and see what happens. Last night I lost the world and gained the universe&lt;/em&gt; ‚Äì C Joybell C.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Credits to &lt;span&gt;&lt;a href="https://unsplash.com/@dsmacinnes?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Danielle MacInnes&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/4096-x-4096-morning-success?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/span&gt; for the cover photo.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>mindset</category>
      <category>creativity</category>
    </item>
    <item>
      <title>3 Ways To Center Elements In CSS
</title>
      <author>Sanchithasharma</author>
      <pubDate>Fri, 27 Nov 2020 05:17:27 +0000</pubDate>
      <link>https://dev.to/sanchithasharma/3-ways-to-center-elements-in-css-1m43</link>
      <guid>https://dev.to/sanchithasharma/3-ways-to-center-elements-in-css-1m43</guid>
      <description>&lt;p&gt;Web developers come across many instances in everyday life where they have to center the elements. It is also very common and important concept that is asked during interviews. So today I would like to list out my favorite three ways of centering the things using CSS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mynde4Sz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1050/1%2Atm63JHZ5qsNfAF-czwYbaw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mynde4Sz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1050/1%2Atm63JHZ5qsNfAF-czwYbaw.png" alt="Centered Elements"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have two div elements one inside the other. Outer div has id=‚Äôcontainer‚Äô and the inner container has a id = ‚Äòcontent‚Äô. And inside it we have an icon.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div id="container"&amp;gt;        
  &amp;lt;div id="content"&amp;gt;   
     &amp;lt;i class="fa fa-beer" style="font-size:24px"&amp;gt;&amp;lt;/i&amp;gt;       
  &amp;lt;/div&amp;gt;      
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7SoCZtDs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1050/1%2AOLqMWQdxMhiJYNqdBfBReA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7SoCZtDs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1050/1%2AOLqMWQdxMhiJYNqdBfBReA.png" alt="Centered Elements"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-using-flexbox" class="anchor"&gt;
  &lt;/a&gt;
  1 . Using Flexbox
&lt;/h2&gt;

&lt;p&gt;We can use flexbox to center the element. For this we assign display property to flex. For centering items, we are using properties justify-content and align-items and assigning it to center.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#container {
  background: #eee;
  height: 500px;
  width: 100%;

  display: flex;
  justify-content: center;
  align-items: center;
}

#content {
  background: pink;
  height: 100px;
  width: 200px;

  display: flex;
  justify-content: center;
  align-items: center;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-using-grid" class="anchor"&gt;
  &lt;/a&gt;
  2. Using Grid
&lt;/h2&gt;

&lt;p&gt;Centering the elements using grid is one more efficient way. We can use display property to make use of grid. The place-items property is made use to bring the element to center.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#container {
  background: #eee;
  height: 500px;
  width: 100%;
  position: relative;

  display: grid;
  place-items: center;
}

#content {
  top: 50%;
  background: pink;
  height: 100px;
  width: 200px;

  display: grid;
  place-items: center;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-using-position-property" class="anchor"&gt;
  &lt;/a&gt;
  3. Using Position Property
&lt;/h2&gt;

&lt;p&gt;Another way is old- age method of using position property to center the things. We have used margin, top, right, bottom and left properties for position.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#container {
  background: #eee;
  height: 500px;
  width: 100%;

  position: relative;
}

#content {
  top: 50%;
  background: pink;
  height: 100px;
  width: 200px;

  position: absolute;
  left: 0;
  bottom: 0;
  right: 0;
  top: 0;
  margin: auto;
  /* to align the icon */
  text-align: center;
  line-height: 120px;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>css</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>Get the ultimate "code from home" setup</title>
      <author>Michelle Mannering</author>
      <pubDate>Fri, 27 Nov 2020 05:08:27 +0000</pubDate>
      <link>https://dev.to/mishmanners/get-the-ultimate-code-from-home-setup-3aoj</link>
      <guid>https://dev.to/mishmanners/get-the-ultimate-code-from-home-setup-3aoj</guid>
      <description>&lt;p&gt;We've all been working from home a lot, and many of us having been wondering how to get the best setup.&lt;/p&gt;

&lt;p&gt;I recently acquired a new office in my house (one of my roommates moved out). And I spent six weeks putting it together just the way I wanted. Lots of people have asked about the tech, the setup, what works best, and how to create an environment where you want to go to work.&lt;/p&gt;

&lt;p&gt;Also keep in mind my setup was built to be able to live code on Twitch! Go check out &lt;a href="https://twitch.tv/MishManners"&gt;my channel&lt;/a&gt; if you haven't already.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#six-weeks-for-the-ultimate-setup" class="anchor"&gt;
  &lt;/a&gt;
  Six weeks for the ultimate setup
&lt;/h2&gt;

&lt;p&gt;I've been dreaming for years about having the perfect setup. One where I can comfortably work, code, play, and write (yes I still like to use a notebook and pen). And now it's here!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/kdOnFekNE_A"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;So what do you need for the ultimate setup? There are a few things to keep in mind. Here's some of my must haves when building a new workstation area and a funky office vibe.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#computer-and-battle-station-setup" class="anchor"&gt;
  &lt;/a&gt;
  Computer and "battle station" setup
&lt;/h3&gt;

&lt;p&gt;When it comes to PCs, I'm very picky. I went for the top spec high intense Alienware Area 51. It's got a 2080 RTX Ti, an i9, and 64GB RAM. It's perfect for all my video editing, rendering, and gaming. But it's not super necessary. The main thing I find necessary is the monitors.&lt;/p&gt;

&lt;p&gt;I can't live without my large monitors. I have two ultra-wide screen monitors and one vertical. This combination is great for multitasking and well worth the $$$ spent. One of the things you need to consider though - especially if you're using a laptop/Mac - is having a dock. There's no way you can run everything from the minimal ports on a laptop. I have two; one for the work office, and one for the home office.&lt;/p&gt;

&lt;p&gt;My new home office dock is a beast! I picked up the &lt;a href="https://www.aten.com/au/en/products/usb-&amp;amp;-thunderbolt/docking-stations/uh3237/"&gt;ATEN USB-C Multiport Dock&lt;/a&gt;. It's got 13 different ports including USB C, USB 3, 2 HDMI ports and SD card reader. Importantly, it has an ethernet which is super recommended for those of us who are in Australia with patchy internet.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P-BWCsWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/rswujhdb5w71rrg5r2l7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P-BWCsWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/rswujhdb5w71rrg5r2l7.jpg" alt="20201127_151430-1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a super high-spec top of the range dock and well worth the money if you can afford it. If you can't afford a huge one like this, just make sure you grab a dock at can at least fit two displays and a couple of USB slots.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#peripherals" class="anchor"&gt;
  &lt;/a&gt;
  Peripherals
&lt;/h3&gt;

&lt;p&gt;The icing on the cake is what makes the cake. Same with computer peripherals. Choose ones that suit your needs. My non-negotiables are always keyboard, mouse, headset, and now since I'm streaming; a good webcam and microphone. I really love &lt;a href="https://www.razer.com/campaigns/quartz"&gt;Razer's Quartz&lt;/a&gt; range so most of my gear is this cute pink. If you're interested in reading some of my Razer reviews check out &lt;a href="https://www.dailyesports.gg/tag/razer/"&gt;Daily Esports&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As far as extra peripherals go, these aren't necessary. They simply make for a fun vibe. The Corsair iCue lights are really cool. They are edgy, exciting, and programmable.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mZP9VZ5K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1282477359862476800/pu/img/9eqHqhX7OXRqp0AZ.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--D_VjDHYM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1312988648015450112/6PvZD-Z4_normal.jpg" alt="Michelle Mannering üíé #Hacktoberfest profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Michelle Mannering üíé #Hacktoberfest
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/mishmanners"&gt;@mishmanners&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      More from my new toy ü§© aren't they pretty. I need more of these!!!&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/CORSAIR"&gt;@CORSAIR&lt;/a&gt; &lt;a href="https://twitter.com/elgatogaming"&gt;@elgatogaming&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/SmartLights"&gt;#SmartLights&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/RGB"&gt;#RGB&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/lights"&gt;#lights&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      00:50 AM - 13 Jul 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1282477432046366720" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-reply-action.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1282477432046366720" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-retweet-action.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      2
      &lt;a href="https://twitter.com/intent/like?tweet_id=1282477432046366720" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-like-action.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
      15
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;You can buy additional kits and keep building them out. They work with other Corsair peripherals and you can set up funky profiles so they react to what you're doing.&lt;/p&gt;

&lt;p&gt;I also have two Elgato stream decks (and XL and a mini). They are perfect for switching scenes whilst I'm streaming. I even programmed the deck to change the lights in my room. You can check out the &lt;a href="https://www.twitch.tv/videos/777005384"&gt;live stream&lt;/a&gt; where we use Python programming to make this happen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--861XTDqU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/dkxqf8okrcp230bpyxup.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--861XTDqU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/dkxqf8okrcp230bpyxup.jpg" alt="20201127_153800"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lighting" class="anchor"&gt;
  &lt;/a&gt;
  Lighting
&lt;/h3&gt;

&lt;p&gt;Speaking of more lights, you want to have nice lighting in your office. You've probably seen those images on social media of cool setups with feature lighting. My go to is &lt;a href="//lifx.com"&gt;LIFX&lt;/a&gt;. There's heaps of built in functions, settings, and ambient environments. I love the way I can create scenes and even have the lights react to different things I'm doing while streaming or gaming.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0gwJKpl9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/4l52eccl69ebt6h1ngp0.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0gwJKpl9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/4l52eccl69ebt6h1ngp0.jpeg" alt="EdRnPUTUMAElGn3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other types of lighting you might want to consider in your room is ones for live recording or streaming. I have a couple of different types of studio lights. The best ones (although not cheap) are the Elgato lights. I have an Elgato Ring Light as well as &lt;a href="https://www.elgato.com/en/gaming/key-light-air"&gt;Elgato Key Light Air&lt;/a&gt;. Both are programmable with the stream deck and accessible through the Elgato Control Center. The lighting is unparalleled! It's perfect for my live stream and requires little to no editing for recorded videos. Highly recommend these if you're looking for the studio-lighting vibe.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-the-space-work-for-you" class="anchor"&gt;
  &lt;/a&gt;
  Make the space work for you
&lt;/h3&gt;

&lt;p&gt;Put things in your space that work for you. I like gaming (clearly) so I have figurines and pieces of gaming merch around the office. There's obviously a few GitHub octocats, cool pictures on the walls, a skateboard, books, and other things which make the place feel "homey". We have fairly thin walls here so I also opted for some acoustic sound boarding. It makes my audio sound much better as well as keep all the neighbours happy; win-win!&lt;/p&gt;

&lt;p&gt;Oh and plants are a must for me. What makes you happy? What makes you motivated? Maybe neon signage or motivational quotes would go well in your office. Whatever your vibe, go for it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aB2sK7Bt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xqcxdvmddbxu60eobwau.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aB2sK7Bt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xqcxdvmddbxu60eobwau.jpg" alt="20201021_145850"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, make sure your desk is the right height for you, and have at least a half decent chair. I love the &lt;a href="https://www.zqracing.com.au/product-category/gaming-chairs/ref/12/"&gt;ZQ Racing chairs&lt;/a&gt;. The team is dedicated to providing great quality chairs. My favourite thing about these chairs is the &lt;a href="https://www.zqracing.com.au/product/velvet_pillow_set/ref/12/"&gt;memory foam lumbar cushion&lt;/a&gt;. You can even buy it on it's own! Tune into a &lt;a href="https://twitch.tv/MishManners"&gt;live stream&lt;/a&gt; to see it in action, as well as my custom gaming chair.&lt;/p&gt;

&lt;p&gt;Create a space that's welcoming and you want to show off to others. The amount of positive comments I get on my video calls is the reason I wanted to put this post together. I wanted to give you all some inspiration to build your dream setup.&lt;/p&gt;

&lt;p&gt;If you have question about the tech, setup, items, anything, let me know in the comments. Happy to help out any way I can. Good luck setting up your ideal battlestation!&lt;/p&gt;

</description>
      <category>workstations</category>
      <category>productivity</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Why Older People Struggle In Programming Jobs</title>
      <author>Adam Nathaniel Davis</author>
      <pubDate>Fri, 27 Nov 2020 04:56:11 +0000</pubDate>
      <link>https://dev.to/bytebodger/why-older-people-struggle-in-programming-jobs-1pj0</link>
      <guid>https://dev.to/bytebodger/why-older-people-struggle-in-programming-jobs-1pj0</guid>
      <description>&lt;p&gt;I'm old.  I'm OK with it.  I don't lay awake at night worrying about it.  But I do understand quite well that I'm definitely old - at least, in a "programming" sense.&lt;/p&gt;

&lt;p&gt;Most outside this career field would laugh at the idea that I'm old.  In most careers, being in your mid-40s is the prime of your professional powers.  But in software development, anyone north of 40 is often viewed with some suspicion.  Anyone north of 50 is frequently weeded out of the resume pool.  And anyone 60+ had better have a very solid retirement strategy in place.  &lt;/p&gt;

&lt;p&gt;But this isn't an article about outward bias against the Olds.  This article is about the fact that "more-experienced" devs &lt;em&gt;do&lt;/em&gt; often have a tougher time adjusting to any particular job / task / environment.&lt;/p&gt;

&lt;p&gt;It's not just bias.  It's &lt;em&gt;real&lt;/em&gt;.  I've experienced it firsthand.  I've seen it in others.  I've felt it in my soul.  &lt;/p&gt;

&lt;p&gt;I don't know if this will help anyone.  In any way.  But I feel compelled to point out (some of) the reasons why Olds like me find it increasingly more difficult to simply fit in - let alone, &lt;em&gt;excel&lt;/em&gt;.  &lt;/p&gt;

&lt;p&gt;I don't claim to speak for &lt;em&gt;all&lt;/em&gt; Olds.  And I'm not saying that there aren't some aging devs out there who are absolutely thriving in their environments.  The following observations are mine and mine alone.  Your mileage may vary.&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rNQs2svV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/zgp0l5yidmljmx2wjv6v.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rNQs2svV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/zgp0l5yidmljmx2wjv6v.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#political-fatigue" class="anchor"&gt;
  &lt;/a&gt;
  Political Fatigue
&lt;/h2&gt;

&lt;p&gt;When I was younger, I was content to play all of the standard corporate political games.  Heck, at times, I even &lt;em&gt;enjoyed&lt;/em&gt; them.  But nowadays...?  Well, let's just say that I've become the polar opposite of a political player - and my unwillingness to "play along" frequently causes tangible problems in my job.&lt;/p&gt;

&lt;p&gt;I used to be in management.  At one point, I had 60 devs, organized in 6 different teams, that all reported up through me.  At that time, I was much more concerned with making sure that I couched my thoughts in the "right" verbiage.  I was much more inclined to burn hours writing reports (that I knew would never be read) and checking off audit boxes (that I knew no one really cared about).&lt;/p&gt;

&lt;p&gt;About 5 years ago, I purposely stepped &lt;em&gt;away&lt;/em&gt; from management.  I wanted to "just" be a coder again.  I wanted to get as far as possible from standard corporate politics and allow myself to overdose on code.  &lt;/p&gt;

&lt;p&gt;But a funny thing happened on my way to being "just" a coder again.  The politics seems to have... followed me.  On a good day, I'm doing nothing but staring at my IDE.  But on far too many days, I find myself expected to tell executive management what they &lt;em&gt;want&lt;/em&gt; to hear.  On far too many days, I'm still bogged down in meetings and endless administrative details.&lt;/p&gt;

&lt;p&gt;Since I'm griping about this here, you might have the impression that I'm one of those &lt;em&gt;Cranky&lt;/em&gt; Olds.  You know, the guy who's gotta complain about &lt;em&gt;every&lt;/em&gt; decision - no matter how trivial.  However, I don't think this describes me at all.&lt;/p&gt;

&lt;p&gt;I'm perfectly happy talking to "the business" or "the client" or "the stakeholders".  And I can typically talk to them in a manner that avoids techno-babble and doesn't demean anyone.  People can ask me for all manner of questionable deliverables - and I calmly explain to them, in laymen's terms, how those deliverables could have nasty unintended consequences down the road.  &lt;/p&gt;

&lt;p&gt;For weeks, or even months, on end, these interactions cause me no problem whatsoever.  But then &lt;em&gt;it&lt;/em&gt; happens...&lt;/p&gt;

&lt;p&gt;&lt;em&gt;It&lt;/em&gt; is that moment when someone wants you to do something in the code that, quite literally, makes absolutely no sense at all.  But they don't just tell you to do it.  They fervently ask for your opinion.  They insist on making you feel like you've contributed - even when your only logical contribution is to say that this whole idea is batshit-crazy.&lt;/p&gt;

&lt;p&gt;But you can't &lt;em&gt;tell&lt;/em&gt; them that it's batshit-crazy.  In fact, you can barely tell them anything at all - unless it backs up their original request.  That's because they keep &lt;em&gt;soliciting&lt;/em&gt; your feedback.  But they don't &lt;em&gt;want&lt;/em&gt; your feedback.  They just want you to nod along and do whatever crazy thing they've asked. &lt;/p&gt;

&lt;p&gt;When I was younger, I had a much easier time swallowing my objections in cases like these.  But nowadays...?  Well, while it's easy for me to avoid being abusive or confrontational, it's &lt;em&gt;not&lt;/em&gt; easy for me to couch my feedback in such milquetoast terms that the bigwigs can delude themselves into believing that I &lt;em&gt;support&lt;/em&gt; the idea.&lt;/p&gt;

&lt;p&gt;I don't yell at anyone.  I don't use unprofessional language.  But you'd better believe that if you ask me what I think of an idea that is truly, epically stupid, I'm going to tell you, in no uncertain terms, that it's a horrible idea.  It's amazing how often this simple tendency causes me repeated headaches in my work.&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d_sO-nwB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/611fjfoedanhvqhg5qs4.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d_sO-nwB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/611fjfoedanhvqhg5qs4.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rejecting-the-churn" class="anchor"&gt;
  &lt;/a&gt;
  Rejecting the Churn
&lt;/h2&gt;

&lt;p&gt;With every year that slides into my rearview mirror, my patience for technology's relentless "churn" grows a little thinner.  That sentence probably makes me sound like a dinosaur.  But I'm &lt;em&gt;not&lt;/em&gt; complaining about learning or adopting new technologies.  (Like nearly any programmer, the process of learning new tech is usually exciting to me.)&lt;/p&gt;

&lt;p&gt;I'm complaining about (what I perceive to be) an accelerating trend to throw out established tech - and dive headfirst into new tech - often for no better reason than the fact that someone really &lt;em&gt;likes&lt;/em&gt; the new tech (or really &lt;em&gt;dislikes&lt;/em&gt; the old tech).  If you've read some of my other articles, you might've noticed my frequent use of the term: &lt;em&gt;fanboys&lt;/em&gt;.  &lt;/p&gt;

&lt;p&gt;If you're hyping any particular tech, but you can't make a cogent empirical argument for that tech, you're probably a "fanboy".  If you're badmouthing some other tech, but your primary argument against it is that it's old or stupid, you're probably a "fanboy".&lt;/p&gt;

&lt;p&gt;Fanboys may sound like a harmless hazard of this line-of-work. But fanboys can cause real &lt;em&gt;damage&lt;/em&gt;.  If the fanboy is some little-respected kid right out of college, his irrational passions probably won't cause any real problems.  But fanboys can be anywhere.  &lt;/p&gt;

&lt;p&gt;Your manager can be a fanboy.  The ivory-tower architect who's friends with the CIO can be a fanboy.  The guy who's been working for the company for the last 20 years can be a fanboy.  Heck, even the &lt;em&gt;CEO&lt;/em&gt; could be a fanboy.  &lt;/p&gt;

&lt;p&gt;And once the fanboy decides that they hate the tech you're &lt;em&gt;currently&lt;/em&gt; working in (the tech that you've probably invested &lt;em&gt;thousands&lt;/em&gt; of hours into), and once they have the ear of the decision-makers, it's only a matter of time until you'll be rewriting all your stuff.  Or you'll be looking for a new job.&lt;/p&gt;

&lt;p&gt;This "churn" doesn't just apply to top-level tech.  It can apply to NPM packages.  Or style guides.  Or... any trivial aspect of our work.  And once the opinion in your shop has "evolved", you'll find yourself having to radically change the basic way in which you do your work.  Or you'll be looking for a new job.&lt;/p&gt;

&lt;p&gt;Do you wanna know why something as (supposedly) trivial as tabs-vs-spaces can still, to this day, infuriate people?  It's because you have some people who have been coding with tabs/spaces &lt;em&gt;for years&lt;/em&gt; and it's never been a problem.  And then one day, someone walks in and says, "OMFG!  I can't believe you're still using tabs/spaces!"  Pretty soon, you need to follow the herd on whatever trivial decision has been made - &lt;em&gt;for you&lt;/em&gt;.  Or you'll be looking for a new job.&lt;/p&gt;

&lt;p&gt;Please don't confuse this section to mean that I don't want to learn new tech (or &lt;em&gt;techniques&lt;/em&gt;).  I'm as excited as the next programmer to dive into something that promises &lt;em&gt;to solve a problem&lt;/em&gt;.  But I'm not excited to switch out languages / frameworks / tools / etc. just because the old way is supposedly "stooopid" and the replacement is supposedly the New Hawtness.&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9IVKSDz2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ym8ysxxf1hkzpekz2pwr.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9IVKSDz2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ym8ysxxf1hkzpekz2pwr.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-cynicism-of-experience" class="anchor"&gt;
  &lt;/a&gt;
  The Cynicism of Experience
&lt;/h2&gt;

&lt;p&gt;When I started in this career, I can think of many instances where my naivete was almost... &lt;em&gt;an asset&lt;/em&gt;.  You see, sometimes I was too stupid to realize I was being used.  But in the process of being "used", I also gained valuable experience.  Or I impressed the hell out of the people who saw me breaking my back to make everything work.&lt;/p&gt;

&lt;p&gt;In my 20s, any slight &lt;em&gt;suggestion&lt;/em&gt; that extra work was needed would lead to me working a 24-hour coding marathon.  Or working through the weekend.  Any suggestion that we adopt some (counterproductive and poorly-supported) technology would lead to me diving in headfirst to learn-and-implement said technology.  Any hint of stock options or future IPOs would get me all giddy thinking that I was working for the next Google and I could work myself nearly-to-death - because... I'd be &lt;em&gt;rich&lt;/em&gt;!!!&lt;/p&gt;

&lt;p&gt;Nowadays...?  Well, let's just say that I'm more &lt;em&gt;discerning&lt;/em&gt; with my efforts.  &lt;/p&gt;

&lt;p&gt;I will (and frequently do) work overtime.  But the moment I get the sense that my willingness to work overtime is being abused, we're gonna have a little chat.  And if our team loses someone, and the company's "solution" is to simply spread the work onto the remaining employees - while keeping all the due dates the same - you can guarantee that I'll be telling everyone, &lt;em&gt;very clearly&lt;/em&gt;, that I will not be absorbing someone else's entire workload.&lt;/p&gt;

&lt;p&gt;I don't get all giddy anymore about the empty promises of most companies (&lt;em&gt;especially&lt;/em&gt; startups).  If the comp package includes some stock options, that's great.  But if you expect me to consider those options to be all, or a major component, of my comp, then I suggest you start recruiting at the local colleges.  I have mortgages (plural).  I have bills and commitments.  And even if I &lt;em&gt;like&lt;/em&gt; your company, I promise I don't like it so much that I'm willing to forgo a market-rate salary.&lt;/p&gt;

&lt;p&gt;Here's another scenario where my experience (cynicism) can sometimes cause me problems:&lt;/p&gt;

&lt;p&gt;Once you get a reputation in an organization as a proficient coder who can really get stuff done, you can suddenly find many "off the books" requests landing in your lap.  I'm talking about those scenarios where someone &lt;em&gt;outside&lt;/em&gt; your team's pipeline comes over and starts saying things like, "Hey... How difficult would it be to make &lt;em&gt;this one little change&lt;/em&gt; to this app??"&lt;/p&gt;

&lt;p&gt;20s Adam would get all excited about those kinda requests.  A few brief meetings and I might end up working nights-and-weekends just to implement some kinda guerilla project.  Sometimes I'd do it because I was excited about the tech.  Other times, I'd do it because I was eager to please.  In a few cases, I even got &lt;em&gt;in trouble&lt;/em&gt; for doing it.  But I almost always found that the boost within the company to my reputation was well worth any short-term blowback.&lt;/p&gt;

&lt;p&gt;These days, I rarely indulge these folks.  You know the ones.  The people who figure that they can completely subvert the dev pipeline by directly cozying up to one of the programmers.  &lt;/p&gt;

&lt;p&gt;I've had &lt;em&gt;executives&lt;/em&gt; try to do this to me (who were, nevertheless, completely outside of my chain-of-command).  I've had young ladies try to do this to me, sitting closer to me than is natural and smiling at me more than anyone truly wants to smile at me.  &lt;/p&gt;

&lt;p&gt;But these days, my response to these folks is always exactly the same.  I listen politely to them.  I provide any immediate feedback I can which might help to steer them in the right direction.  But as soon as they want to push me to actually &lt;em&gt;do&lt;/em&gt; the work - &lt;em&gt;outside&lt;/em&gt; of the normal dev pipeline - I politely (but firmly) decline.&lt;/p&gt;

&lt;p&gt;This may sound like the "right" way to handle this situation.  But I've noticed that once I tell someone "no", it tends to come with all sorts of long-term side effects.  I've had managers tell me, in performance reviews, that I'm "difficult to work with".  Yet when I try to figure out &lt;em&gt;where&lt;/em&gt; this assessment came from, it turns out that it's from the same people who were trying to get me to subvert the normal flow of things.  &lt;/p&gt;

&lt;p&gt;In fact, it's amazing to see some of the stunned looks on peoples' faces &lt;em&gt;any&lt;/em&gt; time I tell them, in a professional and unemotional tone, "No.  I won't be doing that."  Or, "You'll have to talk to the project manager about that."  Or, "You'll need to negotiate that priority directly with the client."  &lt;/p&gt;

&lt;p&gt;For some people, it doesn't matter how professional (or justified) you are.  They will still hold a grudge against you if you dare to deny their request.&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QW0lyj9V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/min8kem0h5fe8mja9uz9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QW0lyj9V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/min8kem0h5fe8mja9uz9.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#little-tolerance-for-doublespeak" class="anchor"&gt;
  &lt;/a&gt;
  Little Tolerance For Double-Speak
&lt;/h2&gt;

&lt;p&gt;Maybe this doesn't much bother the Olds.  Maybe it just bothers me.  I'm not sure.  But I know that, over the last 2+ decades of corporate work, my patience with blatant corporate double-speak has steadily dwindled.&lt;/p&gt;

&lt;p&gt;To be clear, I understand that corporations have their own vernacular.  It doesn't bother me when someone says that we should "touch base offline".  And "think outside the box" is a hackneyed (and near-meaningless) phrase, but when someone spews those words, I pretty much know what they're &lt;em&gt;trying&lt;/em&gt; to communicate. &lt;/p&gt;

&lt;p&gt;But if you tell me that we need to do some "right-sizing", I'm gonna vomit a little bit in my mouth.  If you keep preaching to me about being a "disruptor", I know that your idea of "disruption" is for me to work nights-and-weekends to realize your vision.  If you ask me to take an "action item", it's your subtle way of trying to assign new work to me without consideration for current project priorities.&lt;/p&gt;

&lt;p&gt;I could go on, but you get the point.  I've really grown to &lt;em&gt;hate&lt;/em&gt; this incessant need to doctor distasteful ideas in some vague form of New Speak.  &lt;/p&gt;

&lt;p&gt;This hang-up of mine is particularly glaring when someone wants me to chime in on a proposal - and that proposal has no redeeming factors.  I can pretty much talk around most potential ideas.  But if the idea is simply without merit... I'm going to say so.  And &lt;em&gt;that's&lt;/em&gt; where people start talking about me like I'm some grumpy old bear that can't be reasoned with.&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bgce7-nj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/77l6wdegf0uh421mb9ey.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bgce7-nj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/77l6wdegf0uh421mb9ey.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#knowing-your-worth" class="anchor"&gt;
  &lt;/a&gt;
  Knowing Your Worth
&lt;/h2&gt;

&lt;p&gt;How can knowing your worth possibly be a &lt;em&gt;bad&lt;/em&gt; thing??  Well, let me explain.&lt;/p&gt;

&lt;p&gt;In my 20s, I already had a ton of knowledge and pretty decent programming skills.  But I had a sparse resume - and it was more-than-difficult to initially get my foot in that door.  &lt;/p&gt;

&lt;p&gt;When you're in &lt;em&gt;that part&lt;/em&gt; of your career, you tend to think very carefully before quitting, or job-hopping, or getting on the bad side of one of your coworkers.  But it's been a lonnnggg time since I had such worries about my resume.&lt;/p&gt;

&lt;p&gt;I'm blessed to work in a field where there has always been very strong demand for my skills.  And my CV is now at a level where I no longer fret over any particular entry.  For the most part, these are &lt;em&gt;good&lt;/em&gt; things.  But it also means that my willingness to put up with other peoples' crap is frighteningly scant.&lt;/p&gt;

&lt;p&gt;I recently had a contracting gig where my entire team was remote - but they wanted &lt;em&gt;me&lt;/em&gt; to come into the office every day.  So... I wasn't there for long. &lt;/p&gt;

&lt;p&gt;I recently had a gig where several of the executives were blatant, boisterous racists.  (And misogynists.  And anti-Semites.)  So... I wasn't there for long.&lt;/p&gt;

&lt;p&gt;I once had a job where they made me jump through ridiculous hoops to certify the security of my code (including many audit checkboxes that would do &lt;em&gt;nothing&lt;/em&gt; to actually secure the application).  But when I showed them how I could &lt;em&gt;easily&lt;/em&gt; hack the employee database - and anyone else outside the company could do the same - they didn't care at all.  So... I wasn't there for long.&lt;/p&gt;

&lt;p&gt;Generally speaking, this sort of hyper-mobility is an &lt;em&gt;asset&lt;/em&gt;.  I mean, who wants to be stuck in a job where some aspect of it has become onerous??  But the flip side is that it becomes very difficult to justify dealing with anyone else's crap - even for a short period of time.&lt;/p&gt;

&lt;p&gt;Again, that's generally a &lt;em&gt;good&lt;/em&gt; thing.  But I've met other Olds like me who just can't be bothered to hunker down and build a solid history with any single company - because those companies always do &lt;em&gt;something&lt;/em&gt; that's rude or unprofessional or just downright stupid.  Follow that pattern through 3, or 4, or even more sequential employers and, before long, you have a reputation as this cranky Old who just can't "fit in".&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PBXlBe7Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/tzn5tl1d0eb2ajhocmef.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PBXlBe7Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/tzn5tl1d0eb2ajhocmef.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-cookiecuttering-of-software" class="anchor"&gt;
  &lt;/a&gt;
  The Cookie-Cutter-ing of Software
&lt;/h2&gt;

&lt;p&gt;One of the most soul-sucking trends in dev over the last decade-plus has been the constant effort to reduce programming to some sort of assembly line kinda process.  Although I can understand the desire to refine a complex process into a simpler one, the end result of these efforts is that the programmers often end up being treated like... assembly line workers.&lt;/p&gt;

&lt;p&gt;Look, I &lt;em&gt;get&lt;/em&gt; it.  Software development is hard.  And complex.  And expensive.  And time-consuming.  And I also understand that organizations are constantly looking for new ways to simplify these (inherently complex) projects.&lt;/p&gt;

&lt;p&gt;But you can't build &lt;em&gt;a sizable, brand new app&lt;/em&gt; from scratch and expect that you can just hand a pile of all-encompassing specs to the dev team and have them crank it out like they're building a bird feeder.  You see, everyone wants to chase this Holy Grail idea that they can just brainstorm over a big set of specs, hand those specs to the dev team, and &lt;em&gt;voila!&lt;/em&gt; out comes the app they were envisioning.&lt;/p&gt;

&lt;p&gt;I don't know how many times I've been building some component, and working my way through the specs, when I realize that the client has asked for something that's completely contradictory or nonsensical.  And that's fine - as long as I can ping them and have an intelligent conversation about the issue.&lt;/p&gt;

&lt;p&gt;But now it seems that, with increasing frequency, the stakeholders wanna just shoot me over a bunch of specs - and then they want me to go away until I have a finished product.  Sometimes, they literally get &lt;em&gt;annoyed&lt;/em&gt; if I hit them up with questions.  And even if they don't mind my queries, god forbid that I ever go so far as to &lt;strong&gt;&lt;em&gt;question(!)&lt;/em&gt;&lt;/strong&gt; the design they've asked for.&lt;/p&gt;

&lt;p&gt;Most people in my position don't &lt;em&gt;just&lt;/em&gt; know how to write code.  They know how to build &lt;em&gt;better&lt;/em&gt; apps.  They know a great deal about what works - and what causes end-user nightmares.  Now, I don't have any desire to be a BA or a PM.  But the idea that I should never provide any functional feedback on the design of the app itself is, well... it's just &lt;em&gt;ignorant&lt;/em&gt;.  &lt;/p&gt;

&lt;p&gt;When I was younger, I'd offer my meager suggestions.  And sometimes the client would even listen.  But if they completely ignored me, I didn't much care.  I just did it exactly how they'd asked for it.&lt;/p&gt;

&lt;p&gt;But I'll admit that, at this point in my life, it's pretty damn frustrating when the client's asked for something &lt;em&gt;that I know will fail or need to be changed once it goes live&lt;/em&gt; - but if I bring this up, in &lt;em&gt;any&lt;/em&gt; way, the annoyance in their voice is palpable.  You can almost hear them thinking, "Why won't this guy shut up and just build the app exactly as we've asked him to??"&lt;/p&gt;

&lt;p&gt;Go through that process with enough clients and you'll find yourself wondering why you're even in this career field at all...&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I could go on like this for an additional 100,000-or-so words, I'm sure.  But this piece is already getting pretty long.  I've decided that I'm going to spin up a new series where I actually go through some specific stories of things that I've experienced.  &lt;/p&gt;

&lt;p&gt;For now, I just wanted to lay out some of the reasons why older programmers really &lt;em&gt;can&lt;/em&gt; have problems fitting in with "modern" dev shops.  It's not because they're "stuck in their ways".  It's not because they can't understand the latest technologies.  Frequently, it's because their own experience is almost, in some ways, working against them.&lt;/p&gt;

&lt;p&gt;I've noticed this often when looking &lt;em&gt;at myself&lt;/em&gt;.  I find myself wondering, "How much longer can I keep doing this?"  Because some of the stupidity I deal with daily can occasionally get me very depressed.&lt;/p&gt;

</description>
      <category>codequality</category>
      <category>programming</category>
      <category>career</category>
    </item>
    <item>
      <title>Accessible, Smooth Scroll-to-top Buttons with Little Code</title>
      <author>Ashlee (she/her)</author>
      <pubDate>Thu, 26 Nov 2020 23:52:29 +0000</pubDate>
      <link>https://dev.to/ashleemboyer/accessible-smooth-scroll-to-top-buttons-with-little-code-3b9d</link>
      <guid>https://dev.to/ashleemboyer/accessible-smooth-scroll-to-top-buttons-with-little-code-3b9d</guid>
      <description>&lt;p&gt;Scroll-to-top buttons are great for pages that are long enough to require a few scrolls to read everything. They're even better for extremely long pages. Scrolling is a lot of work for some users, especially on a mobile device. We (website creators) can greatly reduce the amount of work it takes to scroll our pages with surprisingly little effort on our part.&lt;/p&gt;

&lt;p&gt;One example is the &lt;a href="https://www.w3.org/TR/wai-aria-practices-1.1"&gt;WAI-ARIA Authoring Practices&lt;/a&gt;, which is 140,923 pixels tall at the time of this writing. I'm not calling them out, it's just one of my favorite pages on the entire internet! &lt;a href="https://ashleemboyer.com/my-favorite-resource-for-making-accessible-custom-components"&gt;It's a great resource for making accessible custom components&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Making a scroll-to-top button and making it scroll smoothly is probably a lot easier than you think. It's definitely a lot easier than &lt;em&gt;I&lt;/em&gt; thought! The code bits I'm about to show are for React and SCSS, but you don't need to know either. The basic concepts here are for JavaScript and CSS. We'll also cover how to get rid of the smooth scrolling when it's an accessibility concern.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-scss-code" class="anchor"&gt;
  &lt;/a&gt;
  The SCSS Code
&lt;/h2&gt;

&lt;p&gt;First, let's make sure this scroll will happen smoothly. To do so, set &lt;code&gt;scroll-behavior&lt;/code&gt; to &lt;code&gt;smoothly&lt;/code&gt; in a global stylesheet under the &lt;code&gt;html&lt;/code&gt; element. The media query I've added is for accessibility. Animations can be distracting or for some users, like myself, have vestibular disorders where animations can cause harmful physical effects. These effects can include dizziness, nausea, and headaches or migraines.&lt;/p&gt;

&lt;p&gt;We can prevent this harm to these users who have set up their device to reduce motion by using the &lt;code&gt;prefers-reduced-motion&lt;/code&gt; CSS media query. Inside of it, we set the &lt;code&gt;scroll-behavior&lt;/code&gt; to &lt;code&gt;auto&lt;/code&gt;, which is the default. If you'd like to read more about this technique, it's thoroughly covered in &lt;a href="https://www.w3.org/WAI/WCAG21/Techniques/css/C39"&gt;WCAG 2.1&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="nt"&gt;html&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;scroll-behavior&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;smooth&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prefers-reduced-motion&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;scroll-behavior&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-react-code" class="anchor"&gt;
  &lt;/a&gt;
  The React Code
&lt;/h2&gt;

&lt;p&gt;Now, add a button to the bottom of your page with lots of content. The important line of code here is &lt;code&gt;window.scrollTo(0, 0)&lt;/code&gt;. This is what will scroll your page to the top. You can read more about this function &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo"&gt;on MDN&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;
  &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  Scroll to top
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#managing-focus" class="anchor"&gt;
  &lt;/a&gt;
  Managing focus
&lt;/h2&gt;

&lt;p&gt;Finally, we must also address focus management when adding a scroll-to-top button to our sites. If we add nothing else to our code from above, the button will still have focus after it is clicked. What this means for users who navigate pages with a keyboard is that the page's focus is not where they expect it to be. They expect it to be at the top of the page when it's not.&lt;/p&gt;

&lt;p&gt;In your button's &lt;code&gt;onClick&lt;/code&gt; listener, after &lt;code&gt;window.scrollTo(0, 0)&lt;/code&gt;, you need to manually put something at the top of your page in focus. In this article, for example, I can call &lt;code&gt;focus&lt;/code&gt; on the &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; element containing the article title. We just need to add one thing to that element in order for this to work without interrupting normal keyboard navigation. That thing is &lt;code&gt;tabindex="-1"&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;My &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; element will then look like this (in React):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"article-title"&lt;/span&gt; &lt;span class="na"&gt;tabIndex&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"-1"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  Accessible, Smooth Scroll-to-top Buttons with Little Code
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;And here's what button will look like with this specific example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;
  &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// focus management&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;article-title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  Scroll to top
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That's it! It really is just a few lines of code. After you add this, everyone will be able to quickly scroll to the top of your website. You've also made it so your site doesn't accidentally harm someone who can't tolerate animations! Well done. I am proud of you!&lt;/p&gt;




&lt;p&gt;Did you know I have a newsletter? üì¨&lt;/p&gt;

&lt;p&gt;If you want to get notified when I publish new blog posts or make major project announcements, head over to &lt;a href="https://ashleemboyer.com/newsletter"&gt;https://ashleemboyer.com/newsletter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Fail hard, fail often: why only practice counts?</title>
      <author>Arthur EICHELBERGER</author>
      <pubDate>Thu, 26 Nov 2020 23:29:31 +0000</pubDate>
      <link>https://dev.to/arthureichelberger/fail-hard-fail-often-why-only-practice-counts-1dj4</link>
      <guid>https://dev.to/arthureichelberger/fail-hard-fail-often-why-only-practice-counts-1dj4</guid>
      <description>&lt;p&gt;Many developers will ask you to master Javascript before starting React, will ask you to master PHP before starting Laravel, to master Python before starting Django. Others will tell you that you are not "real developers" if you don't master design patterns, search algorithms, or if you don't know how to reverse a linked-list. &lt;strong&gt;In my opinion, they are wrong.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A developer is just someone who develops.&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#you-must-fail-to-learn" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;You must fail to learn.&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;All the most outstanding entrepreneurs &lt;strong&gt;have failed and then bounced back&lt;/strong&gt; from those failures to become better. The same logic can be applied to development. Experience is the most valuable thing for a developer, and &lt;strong&gt;the only way to become more experienced is to practice.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You've just discovered a technology that inspires you: put the documentation on one side, your favorite code editor on the other, and go for it. Your application won't be perfect, but &lt;strong&gt;you'll already have completed much more than the person who just read the documentation.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You will fail, your code won't be as clean as you want it to be, but you will have a working project. You will then come back to it and &lt;strong&gt;improve it iteratively to make it perfect.&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#find-your-way" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Find your way.&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;If you've been browsing the development discussion forums or are active on social networks, you've probably encountered many debates about different technologies.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"You shouldn't use PHP; it sucks. ¬ª&lt;br&gt;
"You shouldn't use Angular; it's outdated. ¬ª&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;I believe that technology is only a tool to accomplish something more significant and that technology (or language) should not be an end in itself.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;No matter what path you take, if you are good at what you do, then the mission is complete. Explore different technologies, find the most comfortable ones with, and &lt;strong&gt;practice, practice, practice, and practice.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Either you will love this technology and master it. Or you'll see the potential flaws, and then you can take another path.&lt;/p&gt;

&lt;p&gt;Once you've acquired this mentality of &lt;strong&gt;always moving forward&lt;/strong&gt; and this resilience, you'll get through this no matter what the technology.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#three-projects-to-become-a-better-developer" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Three projects to become a better developer.&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;You will find below three examples of projects to become a better developer. These projects are, of course, editable and adaptable according to your constraints. &lt;/p&gt;

&lt;p&gt;Still, they will allow you to study one (or more) languages from a simple discovery to implementing a real-world project enabling you to deepen advanced concepts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-todolist" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The Todo-List.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Very well known by developers, the to-do list will allow you to set up relatively simple logic: the creation, modification, and deletion of elements in an index. The great thing about the to-do list is that you can implement it in almost every language.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-tictactoe" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The Tic-Tac-Toe.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;This game, known worldwide, with straightforward logic, will allow you to dig more advanced concepts, in a complete project, by implementing both the sense of the game and a scoreboard or the possibility to play against another player directly online.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-netflix-clone" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The Netflix clone.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;The Netflix clone is what I call a real-world application. This project involves many aspects and challenges to deal with: from account creation to video playback, the possibility to add videos from a back office for the site administrators, to the management of statistics. &lt;strong&gt;This project is the kind of project that allows you to be hired by a company.&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;üëãüèª Thank you for reading me; feel free to tell me in the comments what you are currently working on and what you have learned so far.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>career</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>How Webpack uses dependency graph to build modules</title>
      <author>Jasmin Virdi</author>
      <pubDate>Thu, 26 Nov 2020 21:39:38 +0000</pubDate>
      <link>https://dev.to/jasmin/how-dependancy-graph-in-webpack-resolve-module-dependency-5ej4</link>
      <guid>https://dev.to/jasmin/how-dependancy-graph-in-webpack-resolve-module-dependency-5ej4</guid>
      <description>&lt;p&gt;In the last two posts I have discussed about Webpack and it's core concepts. Last two post were based on &lt;a href="https://dev.to/jasmin/learning-webpack-concepts-and-creating-your-custom-webpack-plugin-gal"&gt;Webpack's architecture&lt;/a&gt; and how we can extend the use of Webpack by &lt;a href="https://dev.to/jasmin/building-your-own-webpack-plugin-4aom"&gt;building our own plugin&lt;/a&gt;. In this post I will be discussing in detail about the dependency graph which Webpack uses for bundling of modules.&lt;/p&gt;

&lt;p&gt;I've used the word dependancy graph in my previous posts to describe Webpack bundling. Webpack uses dependency graph to resolve modules which are dependent on one another and build the modules first which are required in some other modules.  Let's take the same example which I've used in my first post to understand this more accurately.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rmvC6VCz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/9ldv44awmyjlww4bqsti.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rmvC6VCz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/9ldv44awmyjlww4bqsti.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the above example the file &lt;strong&gt;bootstrap.main.ts&lt;/strong&gt; is used as the entry point to build the dependency graph. Other files in the above example are all required in the main file.&lt;/p&gt;

&lt;p&gt;So let's see how this &lt;strong&gt;dependency graph&lt;/strong&gt; is resolved and rendered such that all the files are loaded in correct order.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more-about-dependency-graph" class="anchor"&gt;
  &lt;/a&gt;
  More about Dependency Graph
&lt;/h2&gt;

&lt;p&gt;The graph we will refer here is &lt;strong&gt;directed acyclic graph&lt;/strong&gt; in which the edges are connected in such way that each edge only goes one way. In directed acyclic graph it becomes difficult to traverse the entire graph starting from one point of the graph due to it's &lt;strong&gt;acyclic&lt;/strong&gt; nature.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But how the dependency graph is sorted?&lt;/strong&gt;&lt;br&gt;
Answer: &lt;strong&gt;Topological Sorting&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So, your next question will be what is Topological Sorting üòÖ &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-topological-sorting-and-how-it-works" class="anchor"&gt;
  &lt;/a&gt;
  What is Topological sorting and how it works?
&lt;/h3&gt;

&lt;p&gt;Let us consider an example of directed acyclic graph to understand this algorithm.&lt;/p&gt;

&lt;p&gt;In Topological sorting we take two data structures a &lt;strong&gt;set&lt;/strong&gt; and a &lt;strong&gt;stack&lt;/strong&gt; to maintain the order and keep track of the vertices.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;set&lt;/strong&gt; will keep track of all the visited vertices while &lt;strong&gt;stack&lt;/strong&gt; will have all the vertices in topologically sorted order.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6Twd0_19--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/dbf0qemgbedil9b8n9gm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Twd0_19--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/dbf0qemgbedil9b8n9gm.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am going to refer the above mentioned graph for reference. So let's start with Node &lt;strong&gt;E&lt;/strong&gt;. In the beginning our visited set is empty so we will directly put &lt;strong&gt;E&lt;/strong&gt; in the visited set. After E we will explore the children's of &lt;strong&gt;E&lt;/strong&gt; which are &lt;strong&gt;F&lt;/strong&gt; and &lt;strong&gt;H&lt;/strong&gt;. Since &lt;strong&gt;H&lt;/strong&gt; is not in the visited set and has no children which means that it is fully explored, so we move &lt;strong&gt;H&lt;/strong&gt; from set to stack.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F_bS5eQN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/tpkhl755ef5knieomtx3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F_bS5eQN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/tpkhl755ef5knieomtx3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now next we move to next child of &lt;strong&gt;E&lt;/strong&gt; which is &lt;strong&gt;F&lt;/strong&gt; and check it's occurrence in set. Since it is not present in set so we will add it in the set and look for the child nodes. &lt;strong&gt;F&lt;/strong&gt; has a child node &lt;strong&gt;G&lt;/strong&gt; so we will check in set and add that in the set. Again, &lt;strong&gt;G&lt;/strong&gt; does not have any child nodes so we will add that to the stack.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HbThkY4H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/g17wt9pzi8xfakem9ihh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HbThkY4H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/g17wt9pzi8xfakem9ihh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After moving &lt;strong&gt;G&lt;/strong&gt; into the stack we move back to its parent which is &lt;strong&gt;F&lt;/strong&gt;. All the children's of &lt;strong&gt;F&lt;/strong&gt; are explored so we put &lt;strong&gt;F&lt;/strong&gt; into the stack and move to its parent &lt;strong&gt;E&lt;/strong&gt;. Since all the children's are already moved to stack so we will add &lt;strong&gt;E&lt;/strong&gt; to the stack.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gq4aCIZq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/5n5752rj29sofszl8d46.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gq4aCIZq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/5n5752rj29sofszl8d46.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we will pick some other unvisited node so let's pick &lt;strong&gt;B&lt;/strong&gt; which has two children's &lt;strong&gt;C&lt;/strong&gt; and &lt;strong&gt;D&lt;/strong&gt;. We will first check that if &lt;strong&gt;C&lt;/strong&gt; is present in the set and will add it to the set as it is not present. After adding &lt;strong&gt;C&lt;/strong&gt; to the set we will again check for the children's of &lt;strong&gt;C&lt;/strong&gt;. &lt;strong&gt;E&lt;/strong&gt; is the only child of &lt;strong&gt;C&lt;/strong&gt; and since it is already present in the set so we will move &lt;strong&gt;C&lt;/strong&gt; to stack.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--STy5rNVf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/nks9snkqg2lu0iwgqs46.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--STy5rNVf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/nks9snkqg2lu0iwgqs46.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next we move towards the next child of &lt;strong&gt;B&lt;/strong&gt; which is &lt;strong&gt;D&lt;/strong&gt; we will check set first and since it is unavailable in the set we will add to the set. &lt;strong&gt;D&lt;/strong&gt; has one child &lt;strong&gt;F&lt;/strong&gt; and since it is already present in set we will add &lt;strong&gt;D&lt;/strong&gt; to the stack.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bpfguMTp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xgolvohrd3ft3dyb759q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bpfguMTp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xgolvohrd3ft3dyb759q.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With this all the children's of &lt;strong&gt;B&lt;/strong&gt; are fully explored so we will add &lt;strong&gt;B&lt;/strong&gt; to the stack.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pwhER_BH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/x3wv0ol3fwx0760jdv8z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pwhER_BH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/x3wv0ol3fwx0760jdv8z.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After completing this cycle we will move to the next unvisited node which is &lt;strong&gt;A&lt;/strong&gt;. Since &lt;strong&gt;A&lt;/strong&gt; has only one child which is present in the set so we will add &lt;strong&gt;A&lt;/strong&gt; to the stack. The final order of set and stack will be like something like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NYktkdZ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/g4ec6c4uk7jctl3z8412.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NYktkdZ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/g4ec6c4uk7jctl3z8412.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The order in which the nodes will be rendered is &lt;strong&gt;A, B, D, C, E, F, G, H&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note- There can be different order for the topological sorting it depends on how you pick the unvisited nodes&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Consider all the nodes in the graph as modules which are dependent on one another. The directed vertices points the dependency relationship between modules. &lt;strong&gt;Webpack uses Topological sorting to resolve the dependency relationship and renders the modules in the order provided by the algorithm&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Hope this has given you brief insight about the execution and use of dependency graph by webpack.&lt;/p&gt;

&lt;p&gt;Happy reading! üìñ &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>webpack</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>Exercises to boost your communication skills üí¨</title>
      <author>sabrinasuarezarrieta</author>
      <pubDate>Thu, 26 Nov 2020 20:28:43 +0000</pubDate>
      <link>https://dev.to/sabrinasuarezarrieta/exercises-to-boost-your-communication-skills-38j5</link>
      <guid>https://dev.to/sabrinasuarezarrieta/exercises-to-boost-your-communication-skills-38j5</guid>
      <description>&lt;p&gt;Hello everybody in my last post I talked about how to exceed expectations in a work environment and one of the key elements that I talked about was the soft skills, especially the assertive communication.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/sabrinasuarezarrieta" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K0MwRapu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--PHm52zEv--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/459873/376350a2-7821-451e-8649-f77b9ded57dc.jpeg" alt="sabrinasuarezarrieta image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/sabrinasuarezarrieta/how-to-exceed-expectations-in-your-first-job-3ofo" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to exceed expectations in your first job ? üë®‚Äçüíªüë©‚Äçüíªü•á&lt;/h2&gt;
      &lt;h3&gt;sabrinasuarezarrieta „Éª Nov 26 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;But someone in my office said: "Ok, I know that my communication skills are not the strongest but, how can I improve?" So for you friends that are in that same situation I wanted to give you these 5 activities that you could try to improve.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-create-presentations" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. Create presentations&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;This is going to sound like a total nerd thing to do, but I encourage you to make presentations, where your audience will be people in which you trust and you want to hear their criticism, in my case, were my parents and sibling, don't have to be presentations about software, I actually presented subjects like sustainability, personal finance, and so on, but the important thing is that you see if your audience is understanding the subject that you are presenting (that defines how good you are to communicate).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-teach-something-to-a-group" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2. Teach something to a group&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;I have been involved in an NGO for 7 years, in this NGO we work with teenagers and I had the pleasure to teach my own dance workshop, and yes the first few lessons were a little uncomfortable for everyone but 6 lessons later I sounded like a totally different person, I was able to give instructions with clarity, never use buzzwords and the most important I was standing with confidence when I was talking, the best is that you could do the same thing in wherever place that you are, your school, NGO, church, neighbourhood, does not matter, somewhere someone will be happy to learn something that you can teach, and you will be exercising constantly your speak in public abilities.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-create-your-blog" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3. Create your blog&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Part of the communication is writing and there's no more reliable way to get better than practising, platforms like this allow you to share and connect with people and all through your writing. But I understand that not everybody feels comfortable exposing their ideas so if you are a little shy you could write and not publish, just share it with 2 or 3 friends of confidence that could give you their feedback (part of growing is hear and acknowledge constructive criticism).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-learn-a-lot" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4. Learn a lot&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Even if you are going to ask about something you have a different attitude when you have been reading about that subject, you feel more comfortable talking about it and can give different and interesting points of view from the subject when you know it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-make-the-hard-question" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5. Make the hard question&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;This is for the risky ones, you need to ask as many people you feel comfortable "In my normal life, how you perceive my communications skills?" the responses could be hard to hear but if the people are honest this is going to be game-changer for you. You could be the smartest and give the best facts but if you do not know how to make people want to listen to you, that knowledge is going to waste, if you hear things like "aggressiveness" or "lack of empathy" or even "when you talk I feel a little bored" people are giving you points in which you could do better so feel grateful and motivated because now you know and you can improve.&lt;/p&gt;

&lt;p&gt;Last I want to say thank you very much for reading and I wish you all a happy day!!&lt;/p&gt;

</description>
      <category>career</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Creating persistent, synchronized global store using React Hooks in TypeScript</title>
      <author>Arooran Thanabalasingam</author>
      <pubDate>Thu, 26 Nov 2020 20:00:42 +0000</pubDate>
      <link>https://dev.to/bigaru/creating-persistent-synchronized-global-store-using-react-hooks-in-typescript-209a</link>
      <guid>https://dev.to/bigaru/creating-persistent-synchronized-global-store-using-react-hooks-in-typescript-209a</guid>
      <description>&lt;p&gt;UPDATE: Lukas Klinzing pointed out that React context is suboptimal concerning performance. (Here is a &lt;a href="https://blog.logrocket.com/pitfalls-of-overusing-react-context/"&gt;article&lt;/a&gt;, which explain in more detail)&lt;/p&gt;

&lt;p&gt;In my spare time, I am creating a url shortener (&lt;a href="https://7.ki"&gt;https://7.ki&lt;/a&gt;). For that I created a global store solely using React Hooks. I like to show you how I implemented it without using any external libraries. Note that the following example is only a lightweight alternative to redux and it is should not be considered as a replacement. For instance, redux still offers a lot of nice features like time travel debugging.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents" class="anchor"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#context"&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#useReducer-hook"&gt;useReducer Hook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#global-store"&gt;Global Store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#persistence"&gt;Persistence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#synchronization-between-browser-tabs"&gt;Synchronization between Browser Tabs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#references"&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#context" class="anchor"&gt;
  &lt;/a&gt;
  Context
&lt;/h2&gt;

&lt;p&gt;Context allows us to share data between components without explicitly passing down the props.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;LocaleContext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createContext&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;language&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;jp&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Provider&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Consumer&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;LocaleContext&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Provider&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;language&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ru&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Layout&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Provider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Layout&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; 
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Consumer&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; 
                &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;I speak &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;language&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Consumer&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;With the help of the React Hooks we can express the same code more concisely:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createContext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="c1"&gt;// ...&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Layout&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;language&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;LocaleContext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; 
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;I speak &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;language&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#usereducer-hook" class="anchor"&gt;
  &lt;/a&gt;
  useReducer Hook
&lt;/h2&gt;

&lt;p&gt;Using &lt;code&gt;useReducer&lt;/code&gt; Hook we can create a reducing/accumulating state:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;START_LOAD&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;COMPLETE_LOAD&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;I forgot a case&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;StartButton&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useReducer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt;    
        &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;COMPLETE_LOAD&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Abort&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;)&lt;/span&gt;
        &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;START_LOAD&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Start&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;)&lt;/span&gt;

    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#global-store" class="anchor"&gt;
  &lt;/a&gt;
  Global Store
&lt;/h2&gt;

&lt;p&gt;Let's combine the both knowledge about the Context and useReducer to create a global store.&lt;/p&gt;

&lt;p&gt;The typings looks as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Dispatch&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;State&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nl"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Dispatch&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Action&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;State&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Entry&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Discriminating Union&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;StartRequestAction&lt;/span&gt;
    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;SucceedRequestAction&lt;/span&gt;
    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;FailRequestAction&lt;/span&gt;

&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;StartRequestAction&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;START_REQUEST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;SucceedRequestAction&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SUCCEED_REQUEST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Entry&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;FailRequestAction&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;FAIL_REQUEST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Let's call the new file &lt;code&gt;store.tsx&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createContext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useReducer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;PropsWithChildren&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;initialStoreContext&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
        &lt;span class="na"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;State&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Action&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;State&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;START_REQUEST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SUCCEED_REQUEST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="na"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;FAIL_REQUEST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;assertNever&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;storeContext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initialStoreContext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Provider&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;storeContext&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;StateProvider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;PropsWithChildren&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useReducer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;initialStoreContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Provider&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Provider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;storeContext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;StateProvider&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;We use a function called &lt;code&gt;assertNever&lt;/code&gt; in order to check if all variants of our union type &lt;code&gt;Action&lt;/code&gt; are handled. In other words, if we forget to handle a certain action like &lt;code&gt;START_REQUEST&lt;/code&gt; in switch case, then TypeScript compiler will report that &lt;code&gt;StartRequestAction&lt;/code&gt; cannot be assigned to type &lt;code&gt;never&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Taken from https://www.typescriptlang.org/docs/handbook/unions-and-intersections.html#union-exhaustiveness-checking&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;assertNever&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;never&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;never&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Unexpected object: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Do not forget to wrap the root element with StateProvider:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;StateProvider&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./store&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;StateProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;App&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;StateProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;,&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now we can simply access our state and dispatch actions. Thanks to discriminating union type &lt;code&gt;Action&lt;/code&gt;, our dispatch function is type-safe. Try to pass a object as payload in &lt;code&gt;FAIL_REQUEST&lt;/code&gt; action. The TypeScript compiler will complain that &lt;code&gt;Type '{}' is not assignable to type 'string'.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;storeContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./store&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Body&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;storeContext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; 
        &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;An error has occurred&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;)&lt;/span&gt;
        &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt; 
            &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Wait ... &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;)&lt;/span&gt;
            &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;storeContext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;

    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;call&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;('/api/v1/data/')
                dispatch(&lt;span class="si"&gt;{&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SUCCEED_REQUEST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="si"&gt;}&lt;/span&gt;)
            } catch (err) &lt;span class="si"&gt;{&lt;/span&gt;
                &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;errorMsg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;
                &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;FAIL_REQUEST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;errorMsg&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="si"&gt;}&lt;/span&gt;
        }

        if (isLoading) &lt;span class="si"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="si"&gt;}&lt;/span&gt;
    }, [isLoading])

    return (
        &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;START_REQUEST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Load Data&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Body&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
    )
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#persistence" class="anchor"&gt;
  &lt;/a&gt;
  Persistence
&lt;/h2&gt;

&lt;p&gt;Modern browers provide many different storage mechanisms like LocalStorage or IndexedDB. Most people will recommend to use IndexedDB because LocalStorage is synchronous, can only save strings and is limited to about 5MB.&lt;/p&gt;

&lt;p&gt;Nonetheless, we will use LocalStorage because there is a certain advantage over IndexedDB, which will be explained in the next chapter. (Furthermore, I noticed that LocalStorage does not work properly in Firefox.)&lt;/p&gt;

&lt;p&gt;We will use the &lt;code&gt;useEffect&lt;/code&gt; hook to save data locally as soon as items are changed. So let's expand the StateProvider as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;StateProvider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;PropsWithChildren&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;STORAGE_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MY_DATA&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

    &lt;span class="c1"&gt;// load data initially&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useReducer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;initialStoreContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;persistedData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;STORAGE_KEY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;persistedData&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;persistedData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="c1"&gt;// save data on every change&lt;/span&gt;
    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;STORAGE_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Provider&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Provider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#synchronization-between-browser-tabs" class="anchor"&gt;
  &lt;/a&gt;
  Synchronization between Browser Tabs
&lt;/h2&gt;

&lt;p&gt;You will quickly notice, once you have multiple tabs of your React app open, that they may end up in an unsynchronized state. In order to avoid that we can listen to changes of LocalStorage and update the state of each tab accordingly. Currently there is no way to listen to the changes of IndexedDB. That is why we use LocalStorage here. &lt;/p&gt;

&lt;p&gt;First we add a new action:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;StorageSyncAction&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SYNC_REQUEST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;State&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Action&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;State&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// ...&lt;/span&gt;

        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SYNC_REQUEST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;assertNever&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Then we expand our StateProvider with LocalStorage listener:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;StateProvider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;PropsWithChildren&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;STORAGE_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MY_DATA&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useReducer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;initialStoreContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;persistedData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;STORAGE_KEY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;persistedData&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;persistedData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;STORAGE_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="c1"&gt;// use the newest data on every LocalStorage change&lt;/span&gt;
    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;storage&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;persistedData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;STORAGE_KEY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;persistedData&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;persistedData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SYNC_REQUEST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;newData&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Provider&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Provider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#references" class="anchor"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/storage_event"&gt;Window: storage event by MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/55647788/getting-events-on-indexeddb-updates-from-another-tab"&gt;Getting events on IndexedDB updates from another tab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.dev/storage-for-the-web/"&gt;Storage for the web by Pete LePage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/unions-and-intersections.html#union-exhaustiveness-checking"&gt;Unions and Intersection Types by Microsoft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://reactjs.org/docs/context.html"&gt;Context by Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://reactjs.org/docs/hooks-reference.html#usereducer"&gt;Hooks API Reference by Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/javascript-scene/do-react-hooks-replace-redux-210bab340672"&gt;Do React Hooks Replace Redux? by Eric Elliott&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.logrocket.com/use-hooks-and-context-not-react-and-redux/"&gt;Use Hooks + Context, not React + Redux by Ebenezer Don&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Cover Image by &lt;a href="https://pixabay.com/users/loggawiggler-15/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=211501"&gt;LoggaWiggler&lt;/a&gt; from &lt;a href="https://pixabay.com/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=211501"&gt;Pixabay&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>typescript</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
