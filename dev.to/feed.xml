<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Menggunakan Flash Message Untuk Notifikasi Dengan Codeigniter 4</title>
      <author>MedanInCode</author>
      <pubDate>Tue, 12 Oct 2021 10:18:22 +0000</pubDate>
      <link>https://dev.to/medanincode/menggunakan-flash-message-untuk-notifikasi-dengan-codeigniter-4-4afd</link>
      <guid>https://dev.to/medanincode/menggunakan-flash-message-untuk-notifikasi-dengan-codeigniter-4-4afd</guid>
      <description>&lt;p&gt;Pada tutorial kali ini akan membahas penggunakan Flash Message pada Codeigniter 4.&lt;strong&gt;Flash Message&lt;/strong&gt; sendiri digunakan untuk memberikan feedback berupa informasi success,warning,error,info dll.&lt;/p&gt;

&lt;p&gt;Di tutorial ini akan digunakan framework bootstrap 4 untuk menampilkan hasil &lt;strong&gt;Flash Message&lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#membuat-flash-message"&gt;
  &lt;/a&gt;
  Membuat Flash Message
&lt;/h4&gt;

&lt;h5&gt;
  &lt;a href="#membuat-view"&gt;
  &lt;/a&gt;
  Membuat View
&lt;/h5&gt;

&lt;p&gt;Pertama buat file view &lt;strong&gt;index.php&lt;/strong&gt; di folder &lt;strong&gt;app\Views&lt;/strong&gt;.Lalu isikan dengan kode dibawah ini.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- Styles --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"&lt;/span&gt; &lt;span class="na"&gt;integrity=&lt;/span&gt;&lt;span class="s"&gt;"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"&lt;/span&gt; &lt;span class="na"&gt;crossorigin=&lt;/span&gt;&lt;span class="s"&gt;"anonymous"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Flash Message&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

    &lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getFlashData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
    &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"alert alert-success alert-dismissible fade show"&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"alert"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;&amp;lt;?=&lt;/span&gt; &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getFlashData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"close"&lt;/span&gt; &lt;span class="na"&gt;data-dismiss=&lt;/span&gt;&lt;span class="s"&gt;"alert"&lt;/span&gt; &lt;span class="na"&gt;aria-label=&lt;/span&gt;&lt;span class="s"&gt;"Close"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;aria-hidden=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;times;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;

    &lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getFlashData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'danger'&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
    &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"alert alert-danger alert-dismissible fade show"&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"alert"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;&amp;lt;?=&lt;/span&gt; &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getFlashData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'danger'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"close"&lt;/span&gt; &lt;span class="na"&gt;data-dismiss=&lt;/span&gt;&lt;span class="s"&gt;"alert"&lt;/span&gt; &lt;span class="na"&gt;aria-label=&lt;/span&gt;&lt;span class="s"&gt;"Close"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;aria-hidden=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;times;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;

    &lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getFlashData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'info'&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
    &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"alert alert-info alert-dismissible fade show"&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"alert"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;&amp;lt;?=&lt;/span&gt; &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getFlashData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'info'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"close"&lt;/span&gt; &lt;span class="na"&gt;data-dismiss=&lt;/span&gt;&lt;span class="s"&gt;"alert"&lt;/span&gt; &lt;span class="na"&gt;aria-label=&lt;/span&gt;&lt;span class="s"&gt;"Close"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;aria-hidden=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;times;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?=&lt;/span&gt; &lt;span class="nf"&gt;base_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'setpesan/success'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-success"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Kirim Pesan Success&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?=&lt;/span&gt; &lt;span class="nf"&gt;base_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'setpesan/info'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-info"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Kirim Pesan Info&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?=&lt;/span&gt; &lt;span class="nf"&gt;base_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'setpesan/danger'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-danger"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Kirim Pesan Danger&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;table&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"table table-striped mt-3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Nama&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Umur&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;Budi&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;12&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;

    &lt;span class="c"&gt;&amp;lt;!-- Scripts --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"&lt;/span&gt; &lt;span class="na"&gt;integrity=&lt;/span&gt;&lt;span class="s"&gt;"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"&lt;/span&gt; &lt;span class="na"&gt;crossorigin=&lt;/span&gt;&lt;span class="s"&gt;"anonymous"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Pada kode diatas bisa dilihat untuk kita perlu mengcheck terlebih dahulu apakah &lt;strong&gt;Flash Message&lt;/strong&gt; ada &lt;strong&gt;if(session()-&amp;gt;getFlashData('info'))&lt;/strong&gt; ,jika ada kita cetak &lt;strong&gt;session()-&amp;gt;getFlashData('info')&lt;/strong&gt;, &lt;strong&gt;info&lt;/strong&gt; itu merupakan nama yang kita set dari controller.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#membuat-router"&gt;
  &lt;/a&gt;
  Membuat Router
&lt;/h5&gt;

&lt;p&gt;Ubah file &lt;strong&gt;Router.php&lt;/strong&gt; di &lt;strong&gt;app\Config&lt;/strong&gt; tambahkan kode dibawah&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$routes&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Home::index'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$routes&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/setpesan/(:alpha)'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'Home::setPesan/$1'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;

&lt;span class="nc"&gt;Kita&lt;/span&gt; &lt;span class="n"&gt;menambahkan&lt;/span&gt; &lt;span class="n"&gt;dua&lt;/span&gt; &lt;span class="n"&gt;router&lt;/span&gt; &lt;span class="n"&gt;satu&lt;/span&gt; &lt;span class="n"&gt;untuk&lt;/span&gt; &lt;span class="n"&gt;halaman&lt;/span&gt; &lt;span class="n"&gt;awal&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;satu&lt;/span&gt; &lt;span class="n"&gt;lagi&lt;/span&gt; &lt;span class="n"&gt;untuk&lt;/span&gt; &lt;span class="n"&gt;setpesan&lt;/span&gt; &lt;span class="n"&gt;dengan&lt;/span&gt; &lt;span class="n"&gt;parameter&lt;/span&gt; &lt;span class="n"&gt;tipe&lt;/span&gt; &lt;span class="n"&gt;pesan&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;

&lt;span class="c1"&gt;##### Merubah Controller&lt;/span&gt;

&lt;span class="nc"&gt;Kita&lt;/span&gt; &lt;span class="n"&gt;akan&lt;/span&gt; &lt;span class="n"&gt;menggunakan&lt;/span&gt; &lt;span class="n"&gt;controller&lt;/span&gt; &lt;span class="n"&gt;bawaan&lt;/span&gt; &lt;span class="n"&gt;yang&lt;/span&gt; &lt;span class="n"&gt;sudah&lt;/span&gt; &lt;span class="n"&gt;ada&lt;/span&gt; &lt;span class="n"&gt;saat&lt;/span&gt; &lt;span class="n"&gt;mendowload&lt;/span&gt; &lt;span class="nc"&gt;Codeigniter&lt;/span&gt; &lt;span class="mf"&gt;4.&lt;/span&gt;&lt;span class="nc"&gt;Ubah&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="nc"&gt;Home&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="n"&gt;di&lt;/span&gt; &lt;span class="n"&gt;folder&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="nc"&gt;app\Controllers&lt;/span&gt;&lt;span class="o"&gt;**.&lt;/span&gt;&lt;span class="nc"&gt;Lalu&lt;/span&gt; &lt;span class="n"&gt;isi&lt;/span&gt; &lt;span class="n"&gt;dengan&lt;/span&gt; &lt;span class="n"&gt;kode&lt;/span&gt; &lt;span class="n"&gt;dibawah&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;

&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;highlight&lt;/span&gt; &lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Controllers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Home&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;BaseController&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'index'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;setPesan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$tipe&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;base_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$tipe&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Pesan '&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$tipe&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Pada kode diatas fungsi &lt;strong&gt;setPesan&lt;/strong&gt; akan meredirect ke halaman awal dan membuat &lt;strong&gt;flash message&lt;/strong&gt; dengan nama seperti parameter &lt;strong&gt;$tipe&lt;/strong&gt; berisi &lt;strong&gt;Pesan&lt;/strong&gt;.Jika tidak ingin menggunakan &lt;strong&gt;with&lt;/strong&gt; bisa juga dengan &lt;strong&gt;setFlashData&lt;/strong&gt; seperti dibawah ini.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Controllers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Home&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;BaseController&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'index'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;setPesan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$tipe&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;setFlashData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$tipe&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Pesan '&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$tipe&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;base_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/dashboard'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Kemudian kita coba jalankan ,tekan salah satu link misalnya &lt;strong&gt;Kirim Pesan Success&lt;/strong&gt; jika sudah benar maka akan keluar hasil seperti dibawah ini.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3gh0x_LL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://medanincode.com/img/tutorial/ci4/flash.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3gh0x_LL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://medanincode.com/img/tutorial/ci4/flash.png" alt="Menggunakan Flash Message Untuk Notifikasi Dengan Codeigniter 4&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sekian tutorialnya,jika ada yang kurang mengerti silahkan bertanya.&lt;/p&gt;

</description>
      <category>codeigniter</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Advanced Javascript Functions</title>
      <author>John Wanjema</author>
      <pubDate>Tue, 12 Oct 2021 09:49:26 +0000</pubDate>
      <link>https://dev.to/luxacademy/advanced-working-with-functions-d0b</link>
      <guid>https://dev.to/luxacademy/advanced-working-with-functions-d0b</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-a-javascript-functions"&gt;
  &lt;/a&gt;
  What is a Javascript functions
&lt;/h2&gt;

&lt;p&gt;A function is a block of organized,reusable code that is used to perform a single,related action.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advanced-working-with-functions"&gt;
  &lt;/a&gt;
  Advanced Working with Functions
&lt;/h2&gt;

&lt;p&gt;Function basics include function declarations,passing parameters and function scope.&lt;br&gt;
check out this article that cover into to Javascript functions.&lt;br&gt;
&lt;a href="https://dev.to/luxacademy/javascript-functions-257f"&gt;Javascript Functions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this article we are going to discuss the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The new function&lt;/li&gt;
&lt;li&gt;Immediately invoked functions&lt;/li&gt;
&lt;li&gt;closures&lt;/li&gt;
&lt;li&gt;Arrow functions&lt;/li&gt;
&lt;li&gt;This keyword&lt;/li&gt;
&lt;li&gt;The call method&lt;/li&gt;
&lt;li&gt;The apply method&lt;/li&gt;
&lt;li&gt;The bind method&lt;/li&gt;
&lt;li&gt;Default parameters&lt;/li&gt;
&lt;li&gt;Rest parameters&lt;/li&gt;
&lt;li&gt;Spread parameters&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#the-new-function"&gt;
  &lt;/a&gt;
  The new function
&lt;/h2&gt;

&lt;p&gt;The new operator lets developers create an instance of a user-defined object type or of one of the built-in object types that has a constructor function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="k"&gt;function &lt;/span&gt;Car&lt;span class="o"&gt;(&lt;/span&gt;make, model, year&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  this.make &lt;span class="o"&gt;=&lt;/span&gt; make&lt;span class="p"&gt;;&lt;/span&gt;
  this.model &lt;span class="o"&gt;=&lt;/span&gt; model&lt;span class="p"&gt;;&lt;/span&gt;
  this.year &lt;span class="o"&gt;=&lt;/span&gt; year&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

const car1 &lt;span class="o"&gt;=&lt;/span&gt; new Car&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'VW'&lt;/span&gt;, &lt;span class="s1"&gt;'GTI'&lt;/span&gt;, 2017&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

console.log&lt;span class="o"&gt;(&lt;/span&gt;car1.make&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // VW
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#immediately-invoked-function-expressioniife"&gt;
  &lt;/a&gt;
  Immediately Invoked Function Expression(IIFE)
&lt;/h3&gt;

&lt;p&gt;An IIFE Lets us group our code and have it work in isolation,independent of any other code.&lt;br&gt;
Invokes a function right away where its defined.&lt;br&gt;
This prevents functions and variables from polluting the global object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function &lt;/span&gt;hello&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Hello World'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; //Hello
&lt;span class="o"&gt;})()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To make it a function expression, we assign it to a variable or use it in another expression.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#closures"&gt;
  &lt;/a&gt;
  closures
&lt;/h3&gt;

&lt;p&gt;A closure is a feature in JavaScript where a function inner scope has access to the outer scope.&lt;br&gt;
In the example below closure help keep message within the scope and it can be accessed in the getMessage function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;let &lt;/span&gt;greeting &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;let &lt;/span&gt;message &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Hello'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;let &lt;/span&gt;getMessage &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return &lt;/span&gt;message&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        getMessage: getMessage
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;})()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

console.log&lt;span class="o"&gt;(&lt;/span&gt;greeting.message&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; //Hello
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#arrow-functions"&gt;
  &lt;/a&gt;
  Arrow functions
&lt;/h3&gt;

&lt;p&gt;Arrow functions were introduced ES6.Refers to anonymous functions with their own unique syntax.Simpler way to create a function.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why"&gt;
  &lt;/a&gt;
  Why?
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;shorter syntax&lt;/li&gt;
&lt;li&gt;this derives it value from  enclosing &lt;a href="https://en.wikipedia.org/wiki/Scope_(computer_science)"&gt;lexical scope&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#shortcomings"&gt;
  &lt;/a&gt;
  Shortcomings.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; Arrow functions don't have their own this value.&lt;/li&gt;
&lt;li&gt;No argument object - we can't reference arguments
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;let &lt;/span&gt;greet &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'Hello world'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;let &lt;/span&gt;message &lt;span class="o"&gt;=&lt;/span&gt; greet&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
console.log&lt;span class="o"&gt;(&lt;/span&gt;message&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; //Hello World
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If there is one parameter parenthesis are optional.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;let &lt;/span&gt;greet &lt;span class="o"&gt;=&lt;/span&gt; name &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'Hello'&lt;/span&gt; + name&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#this-keyword"&gt;
  &lt;/a&gt;
  This keyword
&lt;/h3&gt;

&lt;p&gt;Refers to the owner of the function we are executing&lt;br&gt;
So if it's a standard function,this refers to the global window object;otherwise it can refer to the object that a function is a method of.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;let &lt;/span&gt;message &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    name: &lt;span class="s1"&gt;'john'&lt;/span&gt;,
    regularFunction&lt;span class="o"&gt;(&lt;/span&gt;name&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Hello'&lt;/span&gt; + this.name&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;,

    arrowFunction: &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Hi'&lt;/span&gt; + this.name&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

message.regularFunction&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // Hello John
message.arrowFunction&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;// Hi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-call-method"&gt;
  &lt;/a&gt;
  The call method
&lt;/h3&gt;

&lt;p&gt;The call() allows for a function/method belonging to one object to be assigned and called for a different object.&lt;br&gt;
call() provides a new value of this to the function/method. &lt;br&gt;
With call(), you can write a method once and then inherit it in another object, without having to rewrite the method for the new object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;let &lt;/span&gt;car1 &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; brand: &lt;span class="s1"&gt;'Vw'&lt;/span&gt;, color: &lt;span class="s1"&gt;'blue'&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;let &lt;/span&gt;car2 &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; brand: &lt;span class="s1"&gt;'Toyota'&lt;/span&gt;, color: &lt;span class="s1"&gt;'white'&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;let &lt;/span&gt;returnCarBrand &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Car brand is '&lt;/span&gt; + this.brand&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

returnCarBrand.call&lt;span class="o"&gt;(&lt;/span&gt;car1&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // Car brand is Vw
returnCarBrand.call&lt;span class="o"&gt;(&lt;/span&gt;car2&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // Car brand is Toyota
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-apply-method"&gt;
  &lt;/a&gt;
  The apply method
&lt;/h3&gt;

&lt;p&gt;The apply() method calls a function with a given this value, and arguments provided as an array.&lt;br&gt;
Same syntax as call difference is that call accepts an argument list, while apply accepts a single array of arguments.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="k"&gt;function &lt;/span&gt;bookTitle&lt;span class="o"&gt;(&lt;/span&gt;name, author&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    console.log&lt;span class="o"&gt;(&lt;/span&gt;name + &lt;span class="s1"&gt;'is written by '&lt;/span&gt; + author&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    console.log&lt;span class="o"&gt;(&lt;/span&gt;this&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
bookTitle.apply&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'HTML &amp;amp; CSS: Design and Build Web Sites'&lt;/span&gt;, &lt;span class="s1"&gt;'Jon Duckett'&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-bind-method"&gt;
  &lt;/a&gt;
  The bind method
&lt;/h3&gt;

&lt;p&gt;Allows to make a copy of a function and then change the value of this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;let &lt;/span&gt;book &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    author: &lt;span class="s1"&gt;'Mary'&lt;/span&gt;,
    getAuthor: &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return &lt;/span&gt;this.author&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;let &lt;/span&gt;book2 &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; author: &lt;span class="s1"&gt;'John'&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;let &lt;/span&gt;getAuthorcopy &lt;span class="o"&gt;=&lt;/span&gt; book.getAuthor.bind&lt;span class="o"&gt;(&lt;/span&gt;book2&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
console.log&lt;span class="o"&gt;(&lt;/span&gt;getAuthorcopy&lt;span class="o"&gt;())&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // John
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#default-parameters"&gt;
  &lt;/a&gt;
  Default parameters
&lt;/h3&gt;

&lt;p&gt;Allow named parameters to be initialized with default values if no value or undefined is passed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="k"&gt;function &lt;/span&gt;sayHi&lt;span class="o"&gt;(&lt;/span&gt;message, name &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'John'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    console.log&lt;span class="o"&gt;(&lt;/span&gt;message + name&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#rest-parameters"&gt;
  &lt;/a&gt;
  Rest parameters
&lt;/h3&gt;

&lt;p&gt;The rest parameter syntax allows a function to accept an indefinite number of arguments as an array.&lt;br&gt;
Rest parameters should always come after regular parameters.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;let &lt;/span&gt;sayHi &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function &lt;/span&gt;greet&lt;span class="o"&gt;(&lt;/span&gt;...names&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    names.forEach&lt;span class="o"&gt;(&lt;/span&gt;name &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Hi '&lt;/span&gt; + name&lt;span class="o"&gt;))&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
greet&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Welcome'&lt;/span&gt;, &lt;span class="s1"&gt;'John'&lt;/span&gt;, &lt;span class="s1"&gt;'Mary'&lt;/span&gt;, &lt;span class="s1"&gt;'James'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; // Hi John // Hi Mary // Hi James
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#spread-operator"&gt;
  &lt;/a&gt;
  Spread Operator
&lt;/h3&gt;

&lt;p&gt;Allows an a function to take an array as an argument and spread out its elements so that they can be assigned  to individual parameters&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="k"&gt;function &lt;/span&gt;greet&lt;span class="o"&gt;(&lt;/span&gt;user1, user2&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Hello'&lt;/span&gt; + user1 +&lt;span class="s1"&gt;' and '&lt;/span&gt; + user2&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;let &lt;/span&gt;names &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'John'&lt;/span&gt;,&lt;span class="s1"&gt;'Mary'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
greet&lt;span class="o"&gt;(&lt;/span&gt;...names&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; //Hello John and Mary
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Building a Live Audio Streaming React Native App with Agora</title>
      <author>Ekaansh Arora</author>
      <pubDate>Tue, 12 Oct 2021 09:36:55 +0000</pubDate>
      <link>https://dev.to/ekaansharora/building-a-live-audio-streaming-react-native-app-with-agora-3be2</link>
      <guid>https://dev.to/ekaansharora/building-a-live-audio-streaming-react-native-app-with-agora-3be2</guid>
      <description>&lt;p&gt;Live audio streaming is increasingly popular across a wide range of uses, from live podcasts and interviews to live music performances. The possibilities are endless once you have a few users engaging with an audience in real-time.&lt;/p&gt;

&lt;p&gt;There’s an easy way to accomplish live audio streaming using the Agora React Native SDK. In this tutorial, we’ll walk through building a live audio broadcasting app that can have multiple broadcasters and host thousands of users by utilizing the Agora Audio SDK. We’ll go over the structure, setup, and execution of the app before diving into the code. The open-source code is available &lt;a href="https://github.com/EkaanshArora/Agora-RN-Audio-Broadcast"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We’ll be using &lt;a href="https://www.npmjs.com/package/react-native-agora/"&gt;Agora RTC SDK for React Native&lt;/a&gt; for the example. I’m using v3.2.2 at the time of writing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-an-agora-account"&gt;
  &lt;/a&gt;
  Creating an Agora Account
&lt;/h2&gt;

&lt;p&gt;Sign up at &lt;a href="https://console.agora.io/"&gt;https://console.agora.io/&lt;/a&gt; and log in to the dashboard.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nwk3KVBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/337/1%2ApAkpJsnCJZx1VVzFw2TFiw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nwk3KVBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/337/1%2ApAkpJsnCJZx1VVzFw2TFiw.png" alt="Agora Console"&gt;&lt;/a&gt;&lt;br&gt;
Navigate to the Project List tab under the Project Management tab and create a project by clicking the blue Create button.&lt;/p&gt;

&lt;p&gt;Create a project and retrieve the App ID. (When prompted to use App ID + Certificate, select only App ID.) The App ID will be used to authorize your requests while you’re developing the application, without generating tokens.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: This guide does not implement token authentication which is recommended for all RTE apps running in production environments. For more information about token-based authentication within the Agora platform please refer to this guide: &lt;a href="https://docs.agora.io/en/Video/token?platform=All%20Platforms"&gt;https://docs.agora.io/en/Video/token?platform=All%20Platforms&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#structure-of-our-example"&gt;
  &lt;/a&gt;
  Structure of Our Example
&lt;/h2&gt;

&lt;p&gt;This is the structure of the application:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── android
├── components
│ └── Permission.ts
│ └── Style.ts
├── ios
├── App.tsx
├── index.js
.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#running-the-app"&gt;
  &lt;/a&gt;
  Running the App
&lt;/h2&gt;

&lt;p&gt;You’ll need to have a recent version of Node.js and NPM installed;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make sure you’ve set up an Agora account, set up a project, and generated an App ID (as discussed above).&lt;/li&gt;
&lt;li&gt;Download and extract the ZIP file from the master branch.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt; to install the app dependencies in the unzipped directory.&lt;/li&gt;
&lt;li&gt;Navigate to &lt;code&gt;./App.tsx&lt;/code&gt; and enter the App ID as &lt;code&gt;appId: YourAppIdHere&lt;/code&gt; in the state declaration.&lt;/li&gt;
&lt;li&gt;If you’re building for iOS, open a terminal and execute cd ios &amp;amp;&amp;amp; pod install.&lt;/li&gt;
&lt;li&gt;Connect your device, and run npx react-native run-android / npx react-native run-ios to start the app. Give it a few minutes to build the app and install it on your device.&lt;/li&gt;
&lt;li&gt;Once you see the home screen on your mobile device (or emulator), click the start call button on the device.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That’s it. You should have an audio broadcast going between the two devices.&lt;/p&gt;

&lt;p&gt;The app uses &lt;code&gt;channel-x&lt;/code&gt; as the channel name.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#before-we-dive-into-the-code-lets-get-a-few-basics-out-of-the-way"&gt;
  &lt;/a&gt;
  Before we dive into the code, let’s get a few basics out of the way:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;We’ll use the Agora RTC (Real-time Communication) SDK to connect to a channel and join an audio call.&lt;/li&gt;
&lt;li&gt;We can have multiple users broadcasting to a channel. All users as an audience on that channel can listen to the broadcasters.&lt;/li&gt;
&lt;li&gt;The audience can dynamically switch to a broadcaster role.&lt;/li&gt;
&lt;li&gt;The Agora RTC SDK uses unique IDs (UIDs) for each user. To associate these UIDs with a username, we’ll use the Agora RTM (Real-time Messaging) SDK to signal the username to others on the call. We’ll discuss how it’s done below.
Let’s take a look at how the code works:&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#apptsx"&gt;
  &lt;/a&gt;
  App.tsx
&lt;/h2&gt;

&lt;p&gt;App.tsx will be the entry point into the app. We’ll have all our code in this file. When you open the app, there will be a username field with three buttons: to join the call, end the call, and toggle our user role between broadcaster and audience.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;We start by writing the used import statements. Next, we define an interface for our application state containing the following:&lt;br&gt;
&lt;code&gt;appId&lt;/code&gt;: our Agora App ID&lt;br&gt;
&lt;code&gt;token&lt;/code&gt;: token generated to join the channel&lt;br&gt;
&lt;code&gt;isHost&lt;/code&gt;: boolean value to switch between audience and broadcaster&lt;br&gt;
&lt;code&gt;channelName&lt;/code&gt;: name for the channel&lt;br&gt;
&lt;code&gt;joinSucceed&lt;/code&gt;: boolean value to store if we’ve connected successfully&lt;br&gt;
&lt;code&gt;rtcUid&lt;/code&gt;: local user’s UID on joining the RTC channel&lt;br&gt;
&lt;code&gt;myUsername&lt;/code&gt;: local user’s name to log in to RTM&lt;br&gt;
&lt;code&gt;usernames&lt;/code&gt;: a dictionary associating RTC UIDs of remote users to their usernames that we’ll get using RTM&lt;br&gt;
&lt;code&gt;peerIds&lt;/code&gt;: an array to store the UIDs of other users in the channel&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;We define a class-based component: the &lt;code&gt;_rtcEngine&lt;/code&gt; variable will store the instance of the &lt;code&gt;RtcEngine&lt;/code&gt; class, and the &lt;code&gt;_rtmEngine&lt;/code&gt; variable will store the instance of the &lt;code&gt;RtmEngine&lt;/code&gt; class, which we can use to access the SDK functions.&lt;/p&gt;

&lt;p&gt;In the constructor, we set our state variables and request permission for recording audio on Android. (We use a helper function from &lt;code&gt;permission.ts&lt;/code&gt;, as described below.) When the component is mounted, we call the &lt;code&gt;initRTC&lt;/code&gt; and &lt;code&gt;initRTM&lt;/code&gt; functions, which initialize the RTC and RTM engines using the App ID. When the component unmounts, we destroy our engine instances.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rtc-initialization"&gt;
  &lt;/a&gt;
  RTC Initialization
&lt;/h2&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
We use the App ID to create our engine instance. Next, we set &lt;code&gt;channelProfile&lt;/code&gt; to Live Broadcasting and &lt;code&gt;clientRole&lt;/code&gt; based on our &lt;code&gt;isHost&lt;/code&gt; state variable value.

&lt;p&gt;The RTC triggers a &lt;code&gt;userJoined&lt;/code&gt; event for each user present when we join the channel and for each new user who joins later. The &lt;code&gt;userOffline&lt;/code&gt; event is triggered when a user leaves the channel. We use event listeners to sync our &lt;code&gt;peerIds&lt;/code&gt; array.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: Audience members don’t trigger the userJoined/userOffline event.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#rtm-initialization"&gt;
  &lt;/a&gt;
  RTM Initialization
&lt;/h2&gt;

&lt;p&gt;We’re using RTM to send our username to other usernames on the call. And this is how we associate our usernames with our RTC UID&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When a user joins a channel, we send a message to all channel members as &lt;code&gt;UID:Username&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;On receiving a channel message, all users add the key-value pair to their username dictionary.&lt;/li&gt;
&lt;li&gt;When a new user joins, all members on the channel send a peer message to that user in the same schema &lt;code&gt;UID:Username&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;On receiving peer messages, we do the same (add the key-value pair to the dictionary) and update our usernames.
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;

Following our plan, we attach event listeners with functions to populate and update usernames on &lt;code&gt;channelMessageReceived&lt;/code&gt; (broadcast message to channel), &lt;code&gt;messageReceived&lt;/code&gt; (peer message), and &lt;code&gt;channelMemberJoined&lt;/code&gt; events. We also create a client on the engine using the same App ID.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#functions-for-our-buttons"&gt;
  &lt;/a&gt;
  Functions for Our Buttons
&lt;/h2&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
The &lt;code&gt;toggleRole&lt;/code&gt; function updates the state and calls the &lt;code&gt;setClientRole&lt;/code&gt; function with the correct argument based on the state.&lt;br&gt;
The &lt;code&gt;startCall&lt;/code&gt; function checks if a username is entered. It then joins the RTC channel. It also logs in to RTM, joins the channel, and sends the channel message for the username, as we discussed before.&lt;br&gt;
The &lt;code&gt;endCall&lt;/code&gt; function leaves the RTC channel, sends a message that is used to remove the username from our remote users dictionary, and then leaves and logs out of RTM.

&lt;h2&gt;
  &lt;a href="#rendering-our-ui"&gt;
  &lt;/a&gt;
  Rendering Our UI
&lt;/h2&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
We define the render function for displaying buttons to start and end the call as well as to toggle roles. We define a function &lt;code&gt;_renderUsers&lt;/code&gt; that renders a list of all broadcasters and audience members.

&lt;h2&gt;
  &lt;a href="#permissionts"&gt;
  &lt;/a&gt;
  Permission.ts
&lt;/h2&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
We’re exporting a helper function to request microphone permissions from the Android OS.

&lt;h2&gt;
  &lt;a href="#stylets"&gt;
  &lt;/a&gt;
  Style.ts
&lt;/h2&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
The Style.ts file contains the styling for the components.

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That’s how easy it is to build a live audio streaming app. For more information about building applications using Agora SDKs, take a look at the &lt;a href="https://docs.agora.io/en/Video/landing-page?platform=React%20Native"&gt;Agora Video Call Quickstart Guide&lt;/a&gt; and &lt;a href="https://docs.agora.io/en/Video/API%20Reference/react_native/index.html"&gt;Agora API Reference&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I invite you to join the &lt;a href="https://www.agora.io/en/join-slack/"&gt;Agora Developer Slack community&lt;/a&gt;. You can ask any questions about Agora in the &lt;code&gt;#react-native-help-me&lt;/code&gt; channel.&lt;/p&gt;

</description>
      <category>reactnative</category>
      <category>tutorial</category>
      <category>mobile</category>
      <category>javascript</category>
    </item>
    <item>
      <title>#7 Best Artificial intelligence technologies and there Websites🔥</title>
      <author>Deepak Gupta</author>
      <pubDate>Tue, 12 Oct 2021 09:26:25 +0000</pubDate>
      <link>https://dev.to/deepakguptacoder/7-best-artificial-intelligence-technologies-and-there-websites-28k4</link>
      <guid>https://dev.to/deepakguptacoder/7-best-artificial-intelligence-technologies-and-there-websites-28k4</guid>
      <description>&lt;h1&gt;
  &lt;a href="#hello-everyone"&gt;
  &lt;/a&gt;
  Hello everyone! 🖤
&lt;/h1&gt;

&lt;p&gt;In this article, we look into Best Artificial intelligence technologies.&lt;br&gt;
We are using Artificial intelligence in our daily life I will tell you the best #7th website of the artificial intelligence it's help you to grow and build your knowledge.&lt;br&gt;
.&lt;br&gt;
Website are are given below and disruption also.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1robotic-process-automation"&gt;
  &lt;/a&gt;
  1.&lt;a href="https://www.turbotic.com/campaigns/robotics-operations-center?gclid=Cj0KCQjw5JSLBhCxARIsAHgO2Se8atXKde8vsqTV23wLSVqGJi2Rgi-gHu3N-IKKZ6jtvoazKSdKlTsaArgBEALw_wcB"&gt;Robotic Process Automation&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S1eIL2z4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07u63lqg71r952g5epnj.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S1eIL2z4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07u63lqg71r952g5epnj.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Robotic process is the process of the machine work in our world every place to using this AI to saving time and making process easy.&lt;br&gt;
.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2cyber-defense"&gt;
  &lt;/a&gt;
  2.&lt;a href="https://www.google.com/search?q=cyber+defense+artificial+intelligence&amp;amp;client=ms-android-vivo&amp;amp;sxsrf=AOaemvL4EpPYi4ctNMhmmAO55Q2qhIbzyw%3A1634022805536&amp;amp;ei=lTVlYYaGILib4t4P1KGhGA&amp;amp;oq=Cyber+Defense+art&amp;amp;gs_lcp=ChNtb2JpbGUtZ3dzLXdpei1zZXJwEAEYADIGCAAQFhAeMgYIABAWEB4yBQghEKABOgQIABBHOg0ILhDHARDRAxBDEJMCOgQIABBDOgoILhDHARDRAxBDOgUIABCABDoICAAQgAQQyQNQljFYgTpguURoAHABeACAAZICiAHVBpIBBTAuMi4ymAEAoAEByAEIwAEB&amp;amp;sclient=mobile-gws-wiz-serp#fpstate=form_ad_n1s0p1"&gt;Cyber Defense&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XayIhDJs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2k4p098st7cve36ivgmk.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XayIhDJs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2k4p098st7cve36ivgmk.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Cyber Defense is the Cyber Security to save and protect your data and personal thing from the hacker's.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3machine-learning-platforms"&gt;
  &lt;/a&gt;
  3.&lt;a href="https://www.simplilearn.com/sem-landing/master-program/bundle_id/117/template/2?utm_source=google&amp;amp;utm_medium=cpc&amp;amp;utm_term=%2Bmachine%20%2Blearning&amp;amp;utm_content=1428905907-78938469271-362537006817&amp;amp;utm_device=m&amp;amp;utm_campaign=Search-DataCluster-DSAI-AIML-IN-Main-AllDevice-adgroup-AIML-Machinelearning-Course-BMM-New&amp;amp;gclid=Cj0KCQjw5JSLBhCxARIsAHgO2ScDBtTYsGlu3H2y8AseAbEOB880mODf4DSc3wIhSiJKSjsiR_F4gosaAhWXEALw_wcB"&gt;Machine Learning Platforms&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HRaF18D---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xc2jutyqe90aqa066wct.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HRaF18D---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xc2jutyqe90aqa066wct.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Machine Learning Platforms&lt;br&gt;
A platform for automating and accelerating the delivery lifecycle of predictive applications capable of processing big data using machine learning or related techniques.”&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4biometrics"&gt;
  &lt;/a&gt;
  4.&lt;a href="https://www.kentcam.com/camattendance/?gclid=Cj0KCQjw5JSLBhCxARIsAHgO2ScnSa4-0o8Qpgwqy16W1BsFCcGQoygil5hJaRTA3A48Px2tYwCBfosaAqKrEALw_wcB"&gt;Bio-metrics&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZK_8zWg4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mz6hilvg7cij3ksxg2v0.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZK_8zWg4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mz6hilvg7cij3ksxg2v0.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Biometrics is one of the AI which is Using your daily life example; school, company, factories, college etc.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5emotion-recognition"&gt;
  &lt;/a&gt;
  5.&lt;a href="https://www.neom.com/en-us/whatistheline?utm_source=google&amp;amp;utm_medium=cpc&amp;amp;utm_campaign=2195_AO_RPL_Search_Clicks_IN_CPC_Text_T1_EN_27Apr21_30Nov21_3242_SmartCity&amp;amp;utm_content=SmartCity&amp;amp;gclid=Cj0KCQjw5JSLBhCxARIsAHgO2Sd0WoSvj9Y2EVIkj1bgthnbPSwPrgszyhEnnB6ATOeEvj0n2bKvEXEaAt9rEALw_wcB"&gt;Emotion Recognition&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IuHbJ_GC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wfb5yltu54tnw1693yvp.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IuHbJ_GC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wfb5yltu54tnw1693yvp.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Emotion AI refers to artificial intelligence that detects your face and emotion reaction also and interprets human emotional signals. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6content-creation"&gt;
  &lt;/a&gt;
  6.&lt;a href="https://mydukaan.io/blog/ai-content-creation-tools/"&gt;Content Creation&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E3bT6K79--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqiibs44utaqrq0tj72v.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E3bT6K79--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqiibs44utaqrq0tj72v.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Content Intelligence is a subset of AI that allows marketers to use machine learning algorithms to optimize content for consumption and distribution.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#7speech-recognition"&gt;
  &lt;/a&gt;
  7.&lt;a href="https://www.hpe.com/in/en/solutions/artificial-intelligence.html?jumpid=ps_pwnsy6fgh7_aid-520042864&amp;amp;ef_id=Cj0KCQjw5JSLBhCxARIsAHgO2SdlfrepFz0VI6QcFhqHCPYHap3mTIoeTpb142YC81w8KnvwoBdrSUUaAml6EALw_wcB:G:s&amp;amp;s_kwcid=AL!13472!3!541195828265!p!!g!!ai%20intelligence!14386686690!127123177875&amp;amp;"&gt;Speech Recognition&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ArB1w-mb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q5imzs43l5kr0kringuv.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ArB1w-mb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q5imzs43l5kr0kringuv.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Speech recognition is the voice command to your device&lt;br&gt;
It's the most of the people are using children's also using this AI..&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#i-hope-you-found-this-article-useful-if-you-need-any-help-please-let-me-know-in-the-comment-section"&gt;
  &lt;/a&gt;
  I hope you found this article useful, if you need any help please let me know in the comment section.💯
&lt;/h3&gt;

</description>
      <category>webdev</category>
      <category>showdev</category>
      <category>webpack</category>
      <category>beginners</category>
    </item>
    <item>
      <title>New Luos get started tutorial</title>
      <author>Emanuel Allely</author>
      <pubDate>Tue, 12 Oct 2021 09:17:22 +0000</pubDate>
      <link>https://dev.to/luos/new-luos-get-started-tutorial-19kc</link>
      <guid>https://dev.to/luos/new-luos-get-started-tutorial-19kc</guid>
      <description>&lt;p&gt;⭐ Curious about how Luos is easy to use? Try our new get started tutorial to get the flavor of the new way to think, create, maintain and evolve embedded systems. Luos is open-source 👩‍💻&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/VcK-LJ-gnDo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>opensource</category>
      <category>embedded</category>
      <category>luos</category>
    </item>
    <item>
      <title>Writing an Engaging, SEO-Friendly Technical Content: Tips from Fellow Creators</title>
      <author>Avyaa</author>
      <pubDate>Tue, 12 Oct 2021 09:08:59 +0000</pubDate>
      <link>https://dev.to/aviyel/writing-an-engaging-seo-friendly-technical-content-tips-from-fellow-creators-2ia3</link>
      <guid>https://dev.to/aviyel/writing-an-engaging-seo-friendly-technical-content-tips-from-fellow-creators-2ia3</guid>
      <description>&lt;p&gt;To read the full article, &lt;a href="https://bit.ly/3DEVf6r"&gt;tap here&lt;/a&gt;.&lt;br&gt;
The role of writers in building brands is indispensable today. From global tech giants like Facebook to budding startups, carefully articulated content is essential in attracting consumers, building user base, and maximising user retention rate. Aviyel works with creators around the globe and features informative content around open source projects.&lt;br&gt;
Here’s a quick guide to the basics of technical writing that certainly answers- how to begin with technical writing from a scratch with Aviyel.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-are-we"&gt;
  &lt;/a&gt;
  Who are we?
&lt;/h2&gt;

&lt;p&gt;Aviyel works with open source creators to build and incentivise active communities, achieve financial independence and increase adoption of their projects. At Aviyel, we are building a knowledge repository to share their contents, experiences, and support for open source projects. We are the bridge connecting open source communities, businesses, and developers who build great products.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#role-of-freelancers-in-building-a-platform-like-aviyel"&gt;
  &lt;/a&gt;
  Role of freelancers in building a platform like Aviyel
&lt;/h3&gt;

&lt;p&gt;Great open source projects deserve great content. Open source has always had a content problem creating difficulties connecting with the audience. Here’s where writers come into the picture. Creators are a building block of any organisation, regardless of the size. The content developers through their product allow companies like Aviyel to kickstart the conversations around open source and help OSS projects to climb the desired mark. We want you to help build OSS communities for our partners through your content.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-do-enterprises-expect-from-creators"&gt;
  &lt;/a&gt;
  What do enterprises expect from creators?
&lt;/h3&gt;

&lt;p&gt;To create well-planned, well-researched, and well-crafted articles. Inform the developer ecosystem, stimulate a new and critical discourse around Open Source creators, projects, and community. The blog post should sound human and curated in a way that all reader questions are answered. While preparing a draft of your blog, please ask yourself if this is what I want to read as a reader? This is how you will polish your writing style by quick elimination and bringing rigor to your content. If you encounter any difficulty while writing/formulating your thoughts on a write-up, reach out to our content community and Aviyel’s content management team on our Discord channel. Above all, we will assist each other to learn, grow and accomplish their missions in life.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#voice-and-tone"&gt;
  &lt;/a&gt;
  Voice and Tone
&lt;/h3&gt;

&lt;p&gt;Generally, most articles follow this standard:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#voice"&gt;
  &lt;/a&gt;
  Voice
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Informative&lt;/li&gt;
&lt;li&gt;Technical&lt;/li&gt;
&lt;li&gt;Confident&lt;/li&gt;
&lt;li&gt;Human&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#tone"&gt;
  &lt;/a&gt;
  Tone
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Q&amp;amp;A: Conversational&lt;/li&gt;
&lt;li&gt;Blog: Opinionated&lt;/li&gt;
&lt;li&gt;How-to’s and Tutorials: Informative&lt;/li&gt;
&lt;li&gt;Cheat Sheets, Checklists, and To-do’s: Report&lt;/li&gt;
&lt;li&gt;Reviews: Analyst&lt;/li&gt;
&lt;li&gt;Thought pieces: Storyteller&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#word-count"&gt;
  &lt;/a&gt;
  Word Count
&lt;/h3&gt;

&lt;p&gt;The article should contain around 1500 words. Although, editors do appreciate you going the extra mile, please make sure the extra content adds rigor and value to your content, rather than make it dormant.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#structure-of-blog"&gt;
  &lt;/a&gt;
  Structure of Blog
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Introduction- First line should have the primary keyword. Please use a stat or recent example to supplement your introduction. Must contain at least one external linking (mostly to your stat).&lt;/li&gt;
&lt;li&gt;Body- The body should have a minimum of two headings. Both internal and external linking is required. The headings must include your keywords.&lt;/li&gt;
&lt;li&gt;Conclusion- Can be quoted as “Way Forward/ Parting Note.” Please connect your article with Aviyel’s vision and add Aviyel’s relevant social media/blog links.
&lt;strong&gt;Sample&lt;/strong&gt;- Aviyel is partnering with MobSF to deliver a one-of-a-kind mobile security infrastructure available in the electronics industry. We are embarking on a journey to monetise open source software and build a developers-driven community with constant flow of knowledge, ideas, and goals. To know more about Aviyel's recent endeavors, follow our discussions here. Join Aviyel’s Twitter space at AviyelHQ.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Moreover, the structure of your blog primarily depends on the niche of your post. For instance, if you are curating a step by step tutorial or contribution guide, try to include some generalised pointers like prerequisites, attributions and a summary of your writeup in conclusion. Similarly, if you are attempting a benchmarking article, make sure to enlist pros, cons, and difference between the two technologies you are writing about. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keyword-optimisation"&gt;
  &lt;/a&gt;
  Keyword Optimisation
&lt;/h3&gt;

&lt;p&gt;This is the heart and soul of your write-up. A blog mainly consists of 5-7 main keywords out of which primary keyword will lift your blog ranking. To rank your blog on search engines, please ensure your keyword is stuffed at the right places. Do not overuse your keywords. An ideal keyword density means using your primary keyword once in every three lines. Please follow the ritual the next time you draft an article. &lt;br&gt;
Other pointers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;At least two of your headings must have the primary keyword.
The first paragraph of your blog must contain the primary keyword. It’s better if you use it in the first two lines themselves.&lt;/li&gt;
&lt;li&gt;There is no right answer to how many times your keywords should appear in your blog. However, please make sure your secondary keywords are stuffed at least 5-7 times in the entire blog.&lt;/li&gt;
&lt;li&gt;Frame your content around your keywords, not vice versa.&lt;/li&gt;
&lt;li&gt;The title should not be more than 12-word long. The keyword must come in the first 4 words.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#plagiarism"&gt;
  &lt;/a&gt;
  Plagiarism
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Aviyel, or any other company per se is strictly against * plag. Please use any plag detection tool before submitting your article to the content team at Aviyel. At times, plag is a result of adding repeated quotations or stats. Try to modify their language without changing the essence.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#important-pointers"&gt;
  &lt;/a&gt;
  Important Pointers
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use minimum passive voice. It decreases the readability score of your blog.&lt;/li&gt;
&lt;li&gt;Try not to use big words with more than two syllables.&lt;/li&gt;
&lt;li&gt;Use Headings as much as you can. It decreases the complexity meter.&lt;/li&gt;
&lt;li&gt;Image caption and title- should involve keywords in a robust manner. Download your images with the title of your blog.&lt;/li&gt;
&lt;li&gt;Complex sentences reduce readability scores and may not pacify the reader’s imagination. Short and crisp sentences enrich the content. Try to wrap most of your sentences in 10 words.&lt;/li&gt;
&lt;li&gt;Use Social media links. Embed them in your articles.
Internal and external linking&lt;/li&gt;
&lt;li&gt;Do not end your headings with a period, semicolon.&lt;/li&gt;
&lt;li&gt;Make sure your content is fresh. Freshness enhances the SEO of your content.&lt;/li&gt;
&lt;li&gt;Conclude your blog with Aviyel’s vision, social media links.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#formatting"&gt;
  &lt;/a&gt;
  Formatting
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#headlinestitles"&gt;
  &lt;/a&gt;
  Headlines/Titles
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Write in title case&lt;/li&gt;
&lt;li&gt;Make sure you use your primary keyword within the first five words.&lt;/li&gt;
&lt;li&gt;Primary Section Headers: Use Heading 1&lt;/li&gt;
&lt;li&gt;Key Subheads That Should Show Up in Contents: Use Heading 2&lt;/li&gt;
&lt;li&gt;Third-Tier Subheads: Use Subtitle&lt;/li&gt;
&lt;li&gt;Body: Normal Text&lt;/li&gt;
&lt;li&gt;Examples: Indent Normal Text; use bullets as necessary&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#subheads"&gt;
  &lt;/a&gt;
  Subheads
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Include and follow the H2 &amp;gt; H3 &amp;gt; H4 hierarchy strictly. Your headings should start with H2 then followed by H3.&lt;/li&gt;
&lt;li&gt;Do not forget to use your primary keyword in headings and subheadings.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#body"&gt;
  &lt;/a&gt;
  Body
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Bullets: default CMS bullet, aligned left&lt;/li&gt;
&lt;li&gt;Numbering: default CMS, aligned left&lt;/li&gt;
&lt;li&gt;Font, bold, italics

&lt;ul&gt;
&lt;li&gt;Leave font as “paragraph” style unless using a subhead. Bold subheads. No need to italicize.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Hyperlinks

&lt;ul&gt;
&lt;li&gt;Embed link for SEO, set to open in a new tab.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#images"&gt;
  &lt;/a&gt;
  Images
&lt;/h4&gt;

&lt;p&gt;Whenever you download images from Google Images, make sure the title of the blog is the title of your images. When inserting the image in the doc/CMS platform, please caption the image with the primary keyword.&lt;br&gt;
If project title- MobSF: Best practices and Tips&lt;br&gt;
Image captions can be Features of MobSF/Analysis of Mobile Security Framework&lt;/p&gt;

&lt;p&gt;You can find more tips, templates and suggestions &lt;a href="https://bit.ly/3DEVf6r"&gt;here&lt;/a&gt;. Tap to read the full post. &lt;/p&gt;

&lt;p&gt;Happy learning!&lt;/p&gt;

</description>
      <category>writing</category>
      <category>beginners</category>
      <category>news</category>
      <category>seo</category>
    </item>
    <item>
      <title>How to dynamically change your React Environment variables without re-building</title>
      <author>lynn</author>
      <pubDate>Tue, 12 Oct 2021 08:26:46 +0000</pubDate>
      <link>https://dev.to/eslynn/how-to-dynamically-change-your-react-environment-variables-without-re-building-55el</link>
      <guid>https://dev.to/eslynn/how-to-dynamically-change-your-react-environment-variables-without-re-building-55el</guid>
      <description>&lt;p&gt;&lt;strong&gt;Have you ever needed to deploy a React application to multiple environments?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you have ever had to do the above, then this scenario may sound familiar to you: &lt;em&gt;You already have an existing build file, you wish to change some environment variables, then re-deploy it to a new environment.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately, you soon realize that the environment variables have been hardcoded within the build file. This means that you cannot change the environment variables without re-building.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Are there any other ways to modify environment variables?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We asked around to see if the other projects had a better way to handle it. After asking around, it turned out that different teams had their own approach:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Some teams simply re-built it for each environment&lt;/li&gt;
&lt;li&gt;Some teams fetched the environment variables asynchronously from an external data source&lt;/li&gt;
&lt;li&gt;One team stored all the environment variables in the app, then selected the environment based on the URL&lt;/li&gt;
&lt;li&gt;One team stored a placeholder environment variable, then replaced it before serving the file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;What would an ideal flow look like?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;All of the above had certain tradeoffs that we weren't willing to make. We were looking to build something that could do the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Does not require a rebuild&lt;/li&gt;
&lt;li&gt;Minimal code change required&lt;/li&gt;
&lt;li&gt;Allows synchronous access of environment variables&lt;/li&gt;
&lt;li&gt;Easy to integrate with your current workflow&lt;/li&gt;
&lt;li&gt;Simple and straightforward&lt;/li&gt;
&lt;/ol&gt;




&lt;h2&gt;
  &lt;a href="#reactinjectenv%E2%80%8Aa-tool-that-allows-you-to-modify-environment-variables-after-the-static-file-has-been%C2%A0built"&gt;
  &lt;/a&gt;
  react-inject-env: a tool that allows you to modify environment variables after the static file has been built
&lt;/h2&gt;

&lt;p&gt;The short and the simple is, it creates an &lt;code&gt;env.js&lt;/code&gt; file in the &lt;code&gt;/public&lt;/code&gt; folder, which is loaded first by the app and stored into the &lt;code&gt;window&lt;/code&gt; object.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Add the following to &lt;code&gt;index.html&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;'/env.js'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;2. Create a new file called &lt;code&gt;env.js&lt;/code&gt; and copy the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;env&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;3. Replace all instances of &lt;code&gt;process.env&lt;/code&gt; with the newly created &lt;code&gt;env&lt;/code&gt; variable&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./env&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;REACT_APP_COLOR&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;REACT_APP_MAIN_TEXT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;4. Build your static files using &lt;code&gt;npm run build&lt;/code&gt; / &lt;code&gt;react-scripts build&lt;/code&gt;, or whatever your build script may be.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;5. Set your environment variables using the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;env &lt;/span&gt;variables] npx react-inject-env &lt;span class="nb"&gt;set&lt;/span&gt;

&lt;span class="c"&gt;# with a black background&lt;/span&gt;
&lt;span class="nv"&gt;REACT_APP_COLOR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;black &lt;span class="nv"&gt;REACT_APP_TEXT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Black Background"&lt;/span&gt; npx react-inject-env &lt;span class="nb"&gt;set&lt;/span&gt;

&lt;span class="c"&gt;# with a blue background&lt;/span&gt;
&lt;span class="nv"&gt;REACT_APP_COLOR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;blue &lt;span class="nv"&gt;REACT_APP_TEXT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Blue Background"&lt;/span&gt; npx react-inject-env &lt;span class="nb"&gt;set&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;6. Verify that your environment variables have been set&lt;/p&gt;

&lt;p&gt;Open &lt;code&gt;build/env.js&lt;/code&gt;, you will see your environment variables here. Your app will read environment variables here at runtime.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1ZZyuUTN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/4Cn4kfH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1ZZyuUTN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/4Cn4kfH.png" alt="build/env.js screenshot sample"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And that's it, you're done!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you need to modify your environment variables again, you can (a) either repeat &lt;em&gt;Step #5&lt;/em&gt;, or (b) modify &lt;code&gt;build/env.js&lt;/code&gt; directly.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-about-ltinsert-toolgt"&gt;
  &lt;/a&gt;
  What about &amp;lt;insert tool&amp;gt;?
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;react-inject-env&lt;/code&gt; was built to be as simple as possible, so it should integrate and work well with most tools. Here are some common tools that are well supported:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;.env / dotenv&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;react-inject-env&lt;/code&gt; will automatically detect environment variables in your &lt;code&gt;.env&lt;/code&gt; file located in your root folder.&lt;/p&gt;

&lt;p&gt;Note: Environment variables passed in through the command line will take precedence over &lt;code&gt;.env&lt;/code&gt; variables.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Typescript&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;Step #2&lt;/em&gt;, create a file named &lt;code&gt;env.ts&lt;/code&gt; instead of &lt;code&gt;env.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;declare&lt;/span&gt; &lt;span class="nb"&gt;global&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Window&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// change with your own variables&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;EnvType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;REACT_APP_COLOR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;REACT_APP_MAIN_TEXT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;REACT_APP_LINK_URL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;REACT_APP_LOGO_URL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;EnvType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;react-inject-env also neatly integrates with Docker&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:16.10-slim&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . /app&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /app&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;npm run build

&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 8080&lt;/span&gt;

&lt;span class="k"&gt;ENTRYPOINT&lt;/span&gt;&lt;span class="s"&gt; npx react-inject-env set &amp;amp;&amp;amp; npx http-server build&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker build &lt;span class="nb"&gt;.&lt;/span&gt; &lt;span class="nt"&gt;-t&lt;/span&gt; react-inject-env-sample-v2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;-p&lt;/span&gt; 8080:8080 &lt;span class="se"&gt;\ &lt;/span&gt;                  
&lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;REACT_APP_COLOR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;yellow &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;REACT_APP_LOGO_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;./logo512.png &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;REACT_APP_MAIN_TEXT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"docker text"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;REACT_APP_LINK_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;https://docker.link &lt;span class="se"&gt;\&lt;/span&gt;
react-inject-env-sample-v2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;This package has greatly enhanced our workflow and has cut our build and deployment times by over 10 minutes. In the past, we had to build 4x times - once for each environment - but now we only need to build it 1x. Deployments are blazing fast now!&lt;/p&gt;

&lt;p&gt;It was built with simplicity in mind, so regardless of what tool you are using, you should be able to integrate it as part of your workflow!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Links&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For more detailed information and support and samples, you may check out the following links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/codegowhere/react-inject-env/tree/develop/sample/v2"&gt;Samples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/codegowhere/react-inject-env#readme"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.npmjs.com/package/react-inject-env"&gt;npm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>devops</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>AVOID Problems with Kubernetes: Best Practices Enforcement with Datree</title>
      <author>Davide 'CoderDave' Benvegnù</author>
      <pubDate>Tue, 12 Oct 2021 08:24:23 +0000</pubDate>
      <link>https://dev.to/n3wt0n/avoid-problems-with-kubernetes-best-practices-enforcement-with-datree-4p2f</link>
      <guid>https://dev.to/n3wt0n/avoid-problems-with-kubernetes-best-practices-enforcement-with-datree-4p2f</guid>
      <description>&lt;p&gt;Starting with Kubernetes is relatively easy. What is hard is &lt;strong&gt;doing it the right way&lt;/strong&gt;, applying all the best practices, and &lt;strong&gt;preventing misconfigurations to affect the security and reliability of your production&lt;/strong&gt; environments.&lt;/p&gt;

&lt;p&gt;Luckily, there is a tool that not only can do it for us, but it is also &lt;strong&gt;powerful&lt;/strong&gt;, really easy to use, and you can start with it for free! &lt;strong&gt;&lt;em&gt;Datree&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Today I'm going to tell you everything about it: how to install it, what it can do for us, &lt;strong&gt;how to use it&lt;/strong&gt; locally and in our CI systems, and of course why we would want to use it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#about-shifting-left"&gt;
  &lt;/a&gt;
  About Shifting Left
&lt;/h3&gt;

&lt;p&gt;If you've been following this blog or the &lt;a href="https://youtube.com/CoderDave"&gt;YouTube Channel&lt;/a&gt; for a while, you know that I'm a big proponent of the &lt;strong&gt;shift-left strategy&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FEAQIDwm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2y0gteybc93ucnw9set.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FEAQIDwm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2y0gteybc93ucnw9set.png" alt="Shift Left"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Whether it is testing, security, or validation, I believe we should do it &lt;strong&gt;as soon as possible in the development workflow&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;When it comes to &lt;strong&gt;validation and security&lt;/strong&gt;, however, there are just a handful of tools that are really designed with that "shif-left" in mind. And if we talk about Kubernetes-specific tools, then you can count them on the fingers of one hand.&lt;/p&gt;

&lt;p&gt;Today we talk about one of those tools, which promises to be the &lt;strong&gt;one-stop-shop for Kubernetes and Helm configuration and best practices validation&lt;/strong&gt;. And boy it delivers!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#about-datree"&gt;
  &lt;/a&gt;
  About Datree
&lt;/h3&gt;

&lt;p&gt;The tool I'm talking about is called &lt;strong&gt;&lt;em&gt;Datree&lt;/em&gt;&lt;/strong&gt;. It's a CLI-based tool which works on Windows, Linux, and MacOS, and it is &lt;strong&gt;Open Source&lt;/strong&gt;.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/datreeio"&gt;
        datreeio
      &lt;/a&gt; / &lt;a href="https://github.com/datreeio/datree"&gt;
        datree
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Prevent Kubernetes misconfigurations from reaching production (again 😤 )! Datree is a CLI tool to ensure K8s manifests and Helm charts follow best practices as well as your organization’s policies. See our docs: https://hub.datree.io
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Datree can do several things for us, and we will explore them in just a second, but the key point for me is that &lt;strong&gt;it works just the same on a local development environment, in any CI system, and anywhere else&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;It can even be configured as a pre-commit git hook, allowing us to truly shift the Kubernetes validation left. (Take a look &lt;a href="https://hub.datree.io/git-hooks"&gt;here&lt;/a&gt; for references on this)&lt;/p&gt;

&lt;p&gt;At the time of writing, Datree uses &lt;strong&gt;some 30 predefined rules and policies based on best practices&lt;/strong&gt;, but it allows you to customize those rules and, in the very near future, even define new custom rules to fit all your needs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video"&gt;
  &lt;/a&gt;
  Video
&lt;/h3&gt;

&lt;p&gt;As usual, if you are a &lt;strong&gt;visual learner&lt;/strong&gt;, or simply prefer to watch and listen instead of reading, here you have &lt;strong&gt;the video with the whole explanation and demo&lt;/strong&gt;, which to be fair is much &lt;strong&gt;&lt;em&gt;more complete&lt;/em&gt;&lt;/strong&gt; than this post.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/aM7EVflmEt4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/aM7EVflmEt4"&gt;Link to the video: https://youtu.be/aM7EVflmEt4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you rather prefer reading, well... let's just continue :)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-datree"&gt;
  &lt;/a&gt;
  Installing Datree
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Demo for this section in the video starts at &lt;a href="https://youtu.be/aM7EVflmEt4?t=124"&gt;minute 2:04&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Alright, enough talking, let's install it and see it in action.&lt;/p&gt;

&lt;p&gt;If you are on &lt;strong&gt;Linux or MacOS&lt;/strong&gt;, you can just execute this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl https://get.datree.io | /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In &lt;strong&gt;Windows&lt;/strong&gt; instead, you can use PowerShell:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;iwr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-useb&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;https://get.datree.io/windows_install.ps1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;iex&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are also options to run this in &lt;strong&gt;Docker&lt;/strong&gt;, or using &lt;strong&gt;Homebrew&lt;/strong&gt; (see &lt;a href="https://hub.datree.io/"&gt;here&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;As you can see, the installation is really quick, just one command, and it is also very fast.&lt;/p&gt;

&lt;p&gt;There is one more step we should do for a proper configuration, but will see that in just a second. Let's first try and use the tool.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#first-scan-with-datree"&gt;
  &lt;/a&gt;
  First Scan with Datree
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Demo for this section in the video starts at &lt;a href="https://youtu.be/aM7EVflmEt4?t=185"&gt;minute 3:05&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To start a scan with Datree, you use the &lt;code&gt;datree test&lt;/code&gt; command, passing the file(s) you want to scan:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;datree&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;myk8smanifest.yml&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After just a few seconds, the tool will get you the output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EuCop6T5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bt3t0posuoceugmpmb9b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EuCop6T5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bt3t0posuoceugmpmb9b.png" alt="Scan Output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see the tool does multiple things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it validates the YAML, to make sure everything is ok (_so it is basically also a YAML linter)&lt;/li&gt;
&lt;li&gt;it validates the Kubernetes-specific schema against a predefined version&lt;/li&gt;
&lt;li&gt;it checks the manifest against the policies&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At the bottom there is a &lt;em&gt;summary table&lt;/em&gt; that also contains a link with a &lt;code&gt;cliId&lt;/code&gt;, or token:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hrg_YSTu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6q5mmu3ea5zhanp9ykgm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hrg_YSTu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6q5mmu3ea5zhanp9ykgm.png" alt="Scan Summary"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A new token is generated &lt;strong&gt;every time you execute the very first scan&lt;/strong&gt; on a new system.&lt;/p&gt;

&lt;p&gt;If you click on the link, the login page will show up and you have the choice to login (create a new account) using you GitHub or Google account.&lt;/p&gt;

&lt;p&gt;After logging in, the Datree Dashboard appears.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gjwBsVwr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ieh0k3q8195tinzu5p55.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gjwBsVwr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ieh0k3q8195tinzu5p55.png" alt="Datree Dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the &lt;strong&gt;Centralized Policy Management&lt;/strong&gt; dashboard, which is one of the key points of the service. In here you can see the rules that are applied to the scans (&lt;em&gt;by default 21 over 30&lt;/em&gt;) and for each rule you can have additional information clicking on the &lt;code&gt;i&lt;/code&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_TBDIcXH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3c3vbhanoex9wzzyxwf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_TBDIcXH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3c3vbhanoex9wzzyxwf.png" alt="Rule info"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will take you to the documentation page relative to that rule, where you can find the complete information about it.&lt;/p&gt;

&lt;p&gt;The interface is pretty minimal, but I appreciate it because &lt;strong&gt;it contains all and only the information you need&lt;/strong&gt; and therefore it is not confusing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubernetes-schema-version"&gt;
  &lt;/a&gt;
  Kubernetes Schema Version
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Demo for this section in the video starts at &lt;a href="https://youtu.be/aM7EVflmEt4?t=185"&gt;minute 5:46&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As mentioned before, Datree validates your manifests for a specific predefined version of the Kubernetes schema. There are 2 ways to change the version.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#via-the-settings"&gt;
  &lt;/a&gt;
  Via the Settings
&lt;/h4&gt;

&lt;p&gt;The first way is to go to the settings (using the user icon in the upper right and selecting &lt;em&gt;settings&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IwhwF9Ys--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tcizens9cly21bjmub5u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IwhwF9Ys--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tcizens9cly21bjmub5u.png" alt="Change Kubernetes schema version"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here you have the dropdown for the version selection, from v1.15.0 to the latest one.&lt;/p&gt;

&lt;p&gt;Be careful with this setting, though, because &lt;strong&gt;changing the version here will change it for each and every scan&lt;/strong&gt; you perform with Datree.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#via-the-cli"&gt;
  &lt;/a&gt;
  Via the CLI
&lt;/h4&gt;

&lt;p&gt;If you want to perform a one-off scan against a specific Kubernetes schema version, instead, you can override the value in &lt;em&gt;settings&lt;/em&gt; using the &lt;code&gt;--schema-version&lt;/code&gt; &lt;strong&gt;CLI flag&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;datree&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--schema-version&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;1.20.0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;myk8smanifest.yml&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This, for example, will run the schema validation against the version 1.20.0 of Kubernetes schema, no matter what the default selected version is.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configuring-datree"&gt;
  &lt;/a&gt;
  Configuring Datree
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Demo for this section in the video starts at &lt;a href="https://youtu.be/aM7EVflmEt4?t=404"&gt;minute 6:44&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As I've mentioned before, there is a &lt;strong&gt;simple configuration change&lt;/strong&gt; that we should make. But I wanted to show you the tool without doing that first, because &lt;strong&gt;it just works&lt;/strong&gt;. Really easy and quick setup indeed.&lt;/p&gt;

&lt;p&gt;The configuration I'm talking about is the Token. Before I said that Datree generates a new token every time you run the first validation on a new system. I've also said that the centralized policy management is of the key features of the service. But how can we centrally manage the policies and assign them to all our users and system if the token changes every time?&lt;/p&gt;

&lt;p&gt;Well, the answer is the &lt;strong&gt;Account Token&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dha6eQgo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d9l13726hd0b8cjg996u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dha6eQgo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d9l13726hd0b8cjg996u.png" alt="Account Token"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you go again in the &lt;em&gt;settings&lt;/em&gt; you will notice that you have a &lt;strong&gt;Token&lt;/strong&gt; field. Just copy the value of the Token, and replace it in the &lt;strong&gt;Datree configuration file&lt;/strong&gt; in your system. You can find the file with this path: &lt;code&gt;~/.datree/config.yaml&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Once this is done, you can start managing your policies and rule effectively.&lt;/p&gt;

&lt;p&gt;Also, thanks to the token, every time you run a validation with Datree you will see it in the History:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VKOP3o5G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xpexkb3738ulxuxtxol6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VKOP3o5G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xpexkb3738ulxuxtxol6.png" alt="Datree History"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In here you not only have recorded all your scans, but also &lt;strong&gt;the results&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#policy-management"&gt;
  &lt;/a&gt;
  Policy Management
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Demo for this section in the video starts at &lt;a href="https://youtu.be/aM7EVflmEt4?t=515"&gt;minute 8:35&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Alright, let's finally talk about the &lt;strong&gt;Centralized Policy Management&lt;/strong&gt; :)&lt;/p&gt;

&lt;p&gt;With the token in place, we can use the dashboard to the fullest. We can of course &lt;strong&gt;&lt;em&gt;enable&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;disable&lt;/em&gt;&lt;/strong&gt; the rules, using the toggle next to the rule's name. As soon as you do it and re-scan your manifest files, you'll see the new rules being taken in consideration. The changes are &lt;strong&gt;automatically propagated&lt;/strong&gt; to all the clients that use the same token.&lt;/p&gt;

&lt;p&gt;You can also customize the output message of the rules.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YqHhvUJ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5lsrculxercc41qozu3v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YqHhvUJ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5lsrculxercc41qozu3v.png" alt="Edit Custom Message"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is very useful if you want to give additional information to your user regarding a specific exception or how to solve it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ILIGswL8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sf3kn2hmpy7de0fp4qjj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ILIGswL8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sf3kn2hmpy7de0fp4qjj.png" alt="Custom Message Output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Again, the changes are automatically propagated so you will see the new message &lt;strong&gt;as soon as you execute a new validation&lt;/strong&gt; scan.&lt;/p&gt;

&lt;p&gt;This is already pretty cool by itself because it assures you have &lt;strong&gt;uniformity across environments&lt;/strong&gt;. But it is not all, &lt;strong&gt;we can do more&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We can in fact &lt;strong&gt;create multiple set of rules&lt;/strong&gt;, or &lt;em&gt;policies&lt;/em&gt; using the Datree naming.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PCv21bLN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/knv61bkjo1e3347wr65l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PCv21bLN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/knv61bkjo1e3347wr65l.png" alt="Multiple Policies"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The creation is done directly from the UI, just click on the "&lt;em&gt;Create Policy +" button, give it a name, and start enabling the rules you want. You can also __clone an existing policy&lt;/em&gt;_ and customize it, as well as deleting existing policies.&lt;/p&gt;

&lt;p&gt;Once you have a new policy created, you can use it for your validation instead of the default policy using the &lt;code&gt;--policy&lt;/code&gt; flag:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;datree&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--policy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;MyNewPolicyName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;manifest.yaml&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;About &lt;strong&gt;deleting a policy&lt;/strong&gt;, remember that if you try to use a policy that doesn't exist anymore Datree won't fall back to the default one, will give you an error message.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#policy-as-code"&gt;
  &lt;/a&gt;
  Policy as Code
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Demo for this section in the video starts at &lt;a href="https://www.youtube.com/watch?v=aM7EVflmEt4&amp;amp;t=689s"&gt;minute 11:29&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There is one more thing about policies and rule I want to show you. It's been &lt;strong&gt;&lt;em&gt;very recently introduced&lt;/em&gt;&lt;/strong&gt; in the product, and it will make all of you code-enthusiast very happy: &lt;strong&gt;Policy as Code&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;As we have seen, by default Datree uses the UI to manage policies and rules. If we want to use &lt;em&gt;Policy as Code&lt;/em&gt;, we have to enable it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D1YpuH-C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03dlmexbwkm2bs0gcxw8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D1YpuH-C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03dlmexbwkm2bs0gcxw8.png" alt="Policy as Code Setting"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remember that once the &lt;em&gt;Policy as Code&lt;/em&gt; mode is enabled, the only way to change the policies in your account is by &lt;strong&gt;publishing a YAML configuration file&lt;/strong&gt; (&lt;code&gt;policies.yaml&lt;/code&gt;) with the defined policies.&lt;/p&gt;

&lt;p&gt;We can either create a policy file from scratch or, as I'd recommend, &lt;strong&gt;download the default file and customize it&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The Policy file, as you can see in an extract below, is just a normal yaml file that contains the definition of the rules, and other metadata for the policy:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;policies&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Default&lt;/span&gt;
    &lt;span class="na"&gt;isDefault&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
    &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;identifier&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CONTAINERS_MISSING_IMAGE_VALUE_VERSION&lt;/span&gt;
        &lt;span class="na"&gt;messageOnFailure&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Incorrect value for key `image` - specify an image version to avoid unpleasant "version surprises" in the future&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;identifier&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CONTAINERS_MISSING_MEMORY_REQUEST_KEY&lt;/span&gt;
        &lt;span class="na"&gt;messageOnFailure&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Missing property object `requests.memory` - value should be within the accepted boundaries recommended by the organization&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;identifier&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CONTAINERS_MISSING_MEMORY_LIMIT_KEY&lt;/span&gt;
        &lt;span class="na"&gt;messageOnFailure&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Missing property object `limits.memory` - value should be within the accepted boundaries recommended by the organization&lt;/span&gt;
    &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;...&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can &lt;strong&gt;disable a rule&lt;/strong&gt; by commenting the line with &lt;code&gt;#&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;    &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;...&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
      &lt;span class="c1"&gt;# - identifier: CONTAINERS_MISSING_IMAGE_VALUE_VERSION&lt;/span&gt;
      &lt;span class="c1"&gt;#   messageOnFailure: Incorrect value for key `image` - specify an image version to avoid unpleasant "version surprises" in the future&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;identifier&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CONTAINERS_MISSING_MEMORY_REQUEST_KEY&lt;/span&gt;
        &lt;span class="na"&gt;messageOnFailure&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Missing property object `requests.memory` - value should be within the accepted boundaries recommended by the organization&lt;/span&gt;
    &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;...&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And once again you can &lt;strong&gt;change the output message&lt;/strong&gt; by editing the &lt;code&gt;messageOnFailure&lt;/code&gt; field.&lt;/p&gt;

&lt;p&gt;You can also &lt;strong&gt;create one or more new policies&lt;/strong&gt;, simply copy/paste the same structure, change the name, set the default, and you are done.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;policies&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Default&lt;/span&gt;
    &lt;span class="na"&gt;isDefault&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
    &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="c1"&gt;# - identifier: CONTAINERS_MISSING_IMAGE_VALUE_VERSION&lt;/span&gt;
      &lt;span class="c1"&gt;#   messageOnFailure: Incorrect value for key `image` - specify an image version to avoid unpleasant "version surprises" in the future&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;identifier&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CONTAINERS_MISSING_MEMORY_REQUEST_KEY&lt;/span&gt;
        &lt;span class="na"&gt;messageOnFailure&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Missing property object `requests.memory` - value should be within the accepted boundaries recommended by the organization&lt;/span&gt;
    &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;...&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;AnotherPolicy&lt;/span&gt;
    &lt;span class="na"&gt;isDefault&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
    &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;identifier&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CONTAINERS_MISSING_IMAGE_VALUE_VERSION&lt;/span&gt;
        &lt;span class="na"&gt;messageOnFailure&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Incorrect value for key `image` - specify an image version to avoid unpleasant "version surprises" in the future&lt;/span&gt;
      &lt;span class="c1"&gt;# - identifier: CONTAINERS_MISSING_MEMORY_REQUEST_KEY&lt;/span&gt;
      &lt;span class="c1"&gt;#   messageOnFailure: Missing property object `requests.memory` - value should be within the accepted boundaries recommended by the organization&lt;/span&gt;
    &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;...&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you are satisfied with your policy file, it's time to &lt;strong&gt;make it available&lt;/strong&gt; to the service by publishing it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;datree&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;publish&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;policyfile.yaml&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once a new policy configuration file is published, it will &lt;strong&gt;override the existing policies&lt;/strong&gt; set up in your account.&lt;/p&gt;

&lt;p&gt;That's it, now you can start using your new policies as we have seen before.&lt;/p&gt;

&lt;p&gt;Using Policy as Code is super interesting, because then as we do with any normal source code and the different "&lt;em&gt;as code&lt;/em&gt;" models like IaC, CaC, etc, we can &lt;strong&gt;version&lt;/strong&gt; them, store them in our source control platform, and even &lt;strong&gt;use Pull Requests, Code Review, etc&lt;/strong&gt; to make sure they are exactly as we want them to be and to keep them &lt;strong&gt;under control&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#datree-for-helm"&gt;
  &lt;/a&gt;
  Datree for Helm
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Demo for this section in the video starts at &lt;a href="https://www.youtube.com/watch?v=aM7EVflmEt4&amp;amp;t=1084s"&gt;minute 18:04&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So far we talked about validating Kubernetes manifests. Datree, however, supports also the &lt;strong&gt;validation of Helm charts&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;Datree provides a &lt;strong&gt;Helm plugin&lt;/strong&gt;, so the validation can be run directly from the Helm CLI.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;helm&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;plugin&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;https://github.com/datreeio/helm-datree&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once installed using the command above, you can just run the &lt;code&gt;helm datree test&lt;/code&gt; command passing the folder containing your helm charts as a parameter.&lt;/p&gt;

&lt;p&gt;After the scan is completed, you'll have the &lt;strong&gt;same results&lt;/strong&gt; as you do running the datree CLI directly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#datree-pricing"&gt;
  &lt;/a&gt;
  Datree Pricing
&lt;/h3&gt;

&lt;p&gt;Cool right? I have one more thing for you: let's talk about pricing.&lt;/p&gt;

&lt;p&gt;As I've said before, &lt;strong&gt;Datree is free to start with&lt;/strong&gt;... and actually it's &lt;strong&gt;totally free to use for a number of scenarios&lt;/strong&gt;. You get in fact &lt;strong&gt;1000 free policy scans&lt;/strong&gt; per month, every month, and it doesn't matter if you scan a single file or a hundred... &lt;strong&gt;one "datree test" execution counts as one policy scan&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If you need more than 1000 scans per month, there are paid options.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--puAQEDxe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ezzubclo3yxaie8lky7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--puAQEDxe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ezzubclo3yxaie8lky7.png" alt="Datree Plans"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can get &lt;strong&gt;2000 policy scans a month and additional support&lt;/strong&gt; with the Pro Plan, and &lt;strong&gt;customizable amount of policy scans&lt;/strong&gt; and dedicated support with the Enterprise Plan.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P_lBxQgo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fiej4wn4mfwlpr8fy4nx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P_lBxQgo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fiej4wn4mfwlpr8fy4nx.png" alt="A Month for Free"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Even better, you can get 1 month of the Premium plan for FREE is you use this link: &lt;a href="https://app.datree.io/?utm_source=coder-dave&amp;amp;medium=youtube"&gt;https://app.datree.io/?utm_source=coder-dave&amp;amp;medium=youtube&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h3&gt;

&lt;p&gt;So, what do you think about Datree? Is it something you will adopt as part of your workflow? Let me know in the comment section below, I'd really like to know it.&lt;/p&gt;

&lt;p&gt;You may also want to watch &lt;a href="https://youtu.be/4Oa5HneTuKs"&gt;this video&lt;/a&gt; in which show you how to deploy to Kubernetes in Azure Pipelines starting from scratch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Like, share and follow me&lt;/strong&gt; 🚀 for more content:&lt;/p&gt;

&lt;p&gt;📽 &lt;a href="https://www.youtube.com/CoderDave"&gt;YouTube&lt;/a&gt;&lt;br&gt;
☕ &lt;a href="https://buymeacoffee.com/CoderDave"&gt;Buy me a coffee&lt;/a&gt;&lt;br&gt;
💖 &lt;a href="https://patreon.com/CoderDave"&gt;Patreon&lt;/a&gt;&lt;br&gt;
📧 &lt;a href="https://coderdave.io/newsletter"&gt;Newsletter&lt;/a&gt;&lt;br&gt;
🌐 &lt;a href="https://coderdave.io"&gt;CoderDave.io Website&lt;/a&gt;&lt;br&gt;
👕 &lt;a href="https://geni.us/cdmerch"&gt;Merch&lt;/a&gt;&lt;br&gt;
👦🏻 &lt;a href="https://www.facebook.com/CoderDaveYT"&gt;Facebook page&lt;/a&gt;&lt;br&gt;
🐱‍💻 &lt;a href="https://github.com/n3wt0n"&gt;GitHub&lt;/a&gt;&lt;br&gt;
👲🏻 &lt;a href="https://www.twitter.com/davide.benvegnu"&gt;Twitter&lt;/a&gt;&lt;br&gt;
👴🏻 &lt;a href="https://www.linkedin.com/in/davidebenvegnu/"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
🔉 &lt;a href="https://geni.us/cdpodcast"&gt;Podcast&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/CoderDave"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/aM7EVflmEt4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>tooling</category>
      <category>devops</category>
      <category>security</category>
    </item>
    <item>
      <title>Failed to create bus connection: No such file or directory Hatası Çözümü</title>
      <author>Turan Kılıç</author>
      <pubDate>Tue, 12 Oct 2021 08:04:48 +0000</pubDate>
      <link>https://dev.to/aciklab/failed-to-create-bus-connection-no-such-file-or-directory-hatasi-cozumu-1idi</link>
      <guid>https://dev.to/aciklab/failed-to-create-bus-connection-no-such-file-or-directory-hatasi-cozumu-1idi</guid>
      <description>&lt;p&gt;Merhabalar, bugün benim de karşılaşmış olduğum ufak bir sorunun çözümünü sizlere sunacağım. Umarım faydalı olur.&lt;/p&gt;

&lt;p&gt;Bu hata ile karşı karşılaşanlar genelde aşağıdaki iki komutu çalıştırdığında karşılaşmakta:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;hostnamectl&lt;/li&gt;
&lt;li&gt;timedatectl&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Komutlar çalıştırıldığında ise aşağıdaki gibi bir output döndürmekteler.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xg7XmUr9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pd2h1qpq9xkiuq8gka2l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xg7XmUr9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pd2h1qpq9xkiuq8gka2l.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu sorunu çözebilmek için öncelikle &lt;strong&gt;dbus&lt;/strong&gt; adlı servisin çalıştığından emin olunmalıdır.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;systemctl status dbus
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Eğer bu komut sonrası dönüt aşağıdaki gibi ise servisin bulunmadığını söylemektedir.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fk2N8jlW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7lwn3emb8xlzbn51dcmz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fk2N8jlW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7lwn3emb8xlzbn51dcmz.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu durumda aşağıdaki komut ile servis yüklenir:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apt install dbus
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Sonrasında servis otomatik olarak active hale gelmiş olabilir. Yine de kesinlik kazandırmak için servisi başlatmalı ve "enable" hale getirmeliyiz. Böylelikle makine her başladığında çalışır duruma gelebilmektedir.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;systemctl start dbus
systemctl enable dbus
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Eğer "systemctl status dbus" komutunun dönütü aşağıdaki gibi ise servis bulunmakta fakat aktif olmadığı anlamına gelmektedir.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4IHWuea4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ncrmbcftcyho77fin9k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4IHWuea4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ncrmbcftcyho77fin9k.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Servis aktif edilir:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;systemctl start dbus
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Böylelikle dbus servisi sorunu çözümlenmiş olur. Eğer bu işlemlere rağmen çözüm sağlanılmamış ise bunun sebebi /var/run ile /run arasındaki gerekli symbolic linkin bozulmuş olması olabilir. Bunun için aşağıdaki komutlar çalıştırılır ve servisin durumuna bakılır:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo rm /var/run -R
sudo ln -s /run /var
sudo reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>linux</category>
      <category>debian</category>
      <category>centos</category>
      <category>dbus</category>
    </item>
    <item>
      <title>How to use the split method in JavaScript</title>
      <author>Amer Sikira</author>
      <pubDate>Tue, 12 Oct 2021 07:44:16 +0000</pubDate>
      <link>https://dev.to/amersikira/how-to-use-the-split-method-in-javascript-2m97</link>
      <guid>https://dev.to/amersikira/how-to-use-the-split-method-in-javascript-2m97</guid>
      <description>&lt;p&gt;&lt;em&gt;This post was originally published on &lt;a href="https://webinuse.com/how-to-use-the-split-method-in-javascript/"&gt;webinuse.com&lt;/a&gt;&lt;/em&gt;&lt;br&gt;
We have already written about &lt;a href="https://webinuse.com/the-power-of-javascript-slice-method/"&gt;The power of JavaScript slice method&lt;/a&gt; which is often confused with the JavaScript split (&lt;code&gt;.split()&lt;/code&gt;) method. &lt;code&gt;.split()&lt;/code&gt; method is splits a string by certain criteria and returns an array of elements.&lt;/p&gt;

&lt;p&gt;Let’s start from the beginning. We have a string that we want to split/divide by certain criteria.  &lt;code&gt;.split()&lt;/code&gt; method accepts two parameters: 1. separator and 2. limit. For example, we have a program that needs to count the number of words in the sentence, using JavaScript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sentence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;We want to count the number of words in this sentence&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sentence&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Result: &lt;/span&gt;
&lt;span class="c1"&gt;//We want to count the number of words in this sentence&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;numberOfWords&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sentence&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numberOfWords&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;//Result: &lt;/span&gt;
&lt;span class="cm"&gt;/* (11) ['We', 'want', 'to', 'count', 'the', 'number', 
        'of', 'words', 'in', 'this', 'sentence']
*/&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numberOfWords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Result: &lt;/span&gt;
&lt;span class="c1"&gt;// 11&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let’s break down our example. We store some sentence in a variable. It could be from anywhere, for that matter. Then, we used &lt;code&gt;.split()&lt;/code&gt;method on the variable where our sentence was stored. After &lt;code&gt;.split()&lt;/code&gt;was successfully over, it returned an array of elements, and the array &lt;code&gt;.length&lt;/code&gt; was &lt;code&gt;11&lt;/code&gt;. This means we had 11 words in our sentence.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#separator"&gt;
  &lt;/a&gt;
  Separator
&lt;/h4&gt;

&lt;p&gt;As we have mentioned earlier, JavaScript .split() accepts two parameters. The first one is the separator. The separator is actually the criteria by which our string is being split.&lt;/p&gt;

&lt;p&gt;The separator can be a string or regular expression. Let’s discuss different cases of the separator.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; The easiest case is when the separator is a single character. This single character can be anything: letter, number, dash, comma, dollar sign, etc.&lt;/li&gt;
&lt;li&gt; When the separator contains multiple characters. In that case, exact match for those characters must be found in the same order in delimited string.&lt;/li&gt;
&lt;li&gt; If we use empty separator, or separator that is not in the string, then entire string is returned as single element of an array.&lt;/li&gt;
&lt;li&gt; According to &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split"&gt;MDN&lt;/a&gt;, if separator appears at the beginning (or end) of the string, it still has the effect of splitting. The result is an empty (i.e. zero length) string, which appears at the first (or last) position of the returned array.&lt;/li&gt;
&lt;li&gt; If we use empty string separator, than the string is converted to an array of each of its UTF-16 “characters”.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, we are going to give an example for each and every one of these points.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sentence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;_We want to count the number of words in this sentence&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//1. Case with single character&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sentence&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//(11)['_We', 'want', 'to', 'count', 'the', 'number', 'of', 'words', 'in', 'this', 'sentence']&lt;/span&gt;

&lt;span class="c1"&gt;//2. Case with a string&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sentence&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;to&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;//Result: &lt;/span&gt;
&lt;span class="c1"&gt;//(2)['_We want ', ' count the number of words in this sentence']&lt;/span&gt;

&lt;span class="c1"&gt;//3. Case without spearator&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sentence&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="c1"&gt;//Result: &lt;/span&gt;
&lt;span class="c1"&gt;//['_We want to count the number of words in this sentence']&lt;/span&gt;

&lt;span class="c1"&gt;//4. Case on the beggining or the end&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sentence&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;_&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//(2)['', 'We want to count the number of words in this sentence']&lt;/span&gt;

&lt;span class="c1"&gt;//5. Empty string separator&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sentence&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;//Result: &lt;/span&gt;
&lt;span class="c1"&gt;//(54)['_', 'W', 'e', ' ', 'w', 'a', 'n', 't', ' ', 't', 'o', ' ', ...]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#limit"&gt;
  &lt;/a&gt;
  Limit
&lt;/h4&gt;

&lt;p&gt;The limit parameter represents the maximum number of items we want to be returned. There is some rules regarding the limit parameter in JavaScript .split() method.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; The limit parameter must be positive integer&lt;/li&gt;
&lt;li&gt; If the limit is equal to zero, an empty array is returned&lt;/li&gt;
&lt;li&gt; If there are more items in an array than the actual limit, than .split() returns only up until limit. JavaScript .split() method doesn’t include any leftover data&lt;/li&gt;
&lt;li&gt; When array contains less data than actual limit, all data is returned
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Split this string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//1. Case Limit must be positive integer&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//(3) ['Split', 'this', 'string']&lt;/span&gt;

&lt;span class="c1"&gt;//2. Case If limit is equal 0&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//[]&lt;/span&gt;

&lt;span class="c1"&gt;//3. Case More items than limit&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//['Split']&lt;/span&gt;

&lt;span class="c1"&gt;//4. Case when array contains less than the limit&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//(3) ['Split', 'this', 'string']&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#regex-as-separator"&gt;
  &lt;/a&gt;
  RegEx as separator
&lt;/h4&gt;

&lt;p&gt;Every developer hates &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions"&gt;RegEx&lt;/a&gt;. And I’ve never met any developer that can do anything with RegEx without consulting documentation or some other helper. But we can’t deny that RegEx is super useful.&lt;/p&gt;

&lt;p&gt;Using RegEx as our separator can help us split a string by some pretty cool criteria. Let’s imagine that we want to split a string by a number. That number is not always the same. That is when we can use RegEx.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello 1 word. Sentence number 2.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;splits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myString&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;(\d)&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;splits&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;// [ "Hello ", "1", " word. Sentence number ", "2", "." ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The JavaScript split method is one of the most useful methods when working with strings. One of the super cool things is that .split() method is simple to use, and the other is that we can use RegEx to split a string, not only characters.&lt;/p&gt;

&lt;p&gt;If you have any questions or anything you can find me on my &lt;a href="https://twitter.com/AmerSikira"&gt;Twitter&lt;/a&gt;, or you can read some of my other articles like &lt;a href="https://webinuse.com/css-combinators/"&gt;&lt;/a&gt;&lt;a href="https://webinuse.com/the-power-of-javascript-slice-method/"&gt;The power of JavaScript slice method&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Useful ffmpeg Commands by Examples</title>
      <author>C.Y. Park</author>
      <pubDate>Tue, 12 Oct 2021 07:28:28 +0000</pubDate>
      <link>https://dev.to/cypark/useful-ffmpeg-commands-by-examples-5dj4</link>
      <guid>https://dev.to/cypark/useful-ffmpeg-commands-by-examples-5dj4</guid>
      <description>&lt;p&gt;This article presents a number of different ffmpeg use cases assuming the reader has basic knowledge of the software. You will see various practical examples in this article. For more details, please refer to the &lt;a href="https://ffmpeg.org/ffmpeg.html"&gt;official documentation pages&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All below examples are &lt;strong&gt;one liners&lt;/strong&gt; although they are presented in multiple lines. Simply copy and paste them in your terminal and hit enter.&lt;/p&gt;


&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;br&gt;
&lt;center&gt;◆ ◆ ◆&lt;/center&gt;
&lt;br&gt;
&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#1-codec-options"&gt;
  &lt;/a&gt;
  1. Codec Options
&lt;/h2&gt;

&lt;p&gt;Setting up codecs is the crucial part of encoding media assets. You will usually want to either keep source file’s encoding or apply a new encoder.&lt;/p&gt;

&lt;p&gt;There are so many available codecs that ffmpeg supports. Below examples are some of the most popular combos that have been used in a number of different commercial projects.&lt;/p&gt;


&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#11-convert-to-mp4"&gt;
  &lt;/a&gt;
  1.1 Convert to MP4
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ffmpeg &lt;span class="nt"&gt;-i&lt;/span&gt; source.mov &lt;span class="nt"&gt;-c&lt;/span&gt;:v libx264 &lt;span class="nt"&gt;-c&lt;/span&gt;:a aac output.mp4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;libx264&lt;/em&gt; is one of the most popular H.264 encoders. &lt;code&gt;libx264&lt;/code&gt; + &lt;code&gt;aac&lt;/code&gt; combo supports IE11. Use &lt;code&gt;-crf&lt;/code&gt; option to control the output quality.&lt;/p&gt;


&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#12-convert-to-webm"&gt;
  &lt;/a&gt;
  1.2 Convert to WebM
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ffmpeg &lt;span class="nt"&gt;-i&lt;/span&gt; source.mov &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-c&lt;/span&gt;:v libvpx-vp9 &lt;span class="nt"&gt;-crf&lt;/span&gt; 31 &lt;span class="nt"&gt;-b&lt;/span&gt;:v 1M &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-c&lt;/span&gt;:a libvorbis &lt;span class="se"&gt;\&lt;/span&gt;
output.webm
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;-crf&lt;/code&gt; stands for Constant Rate Factor. &lt;em&gt;libvpx&lt;/em&gt; doesn’t have default CRF value. &lt;code&gt;-crf 31&lt;/code&gt; for 1080p is usually considered good enough while it accepts any number between 0 (lossless) and 63 (worst quality). For your information, &lt;em&gt;libx264&lt;/em&gt; has default value of 28 with range from 0 to 51.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-b:v&lt;/code&gt; is an option for bitrate. The value &lt;code&gt;1M&lt;/code&gt; is identical to &lt;code&gt;1000k&lt;/code&gt;. &lt;/p&gt;


&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#13-convert-to-ogg"&gt;
  &lt;/a&gt;
  1.3 Convert to Ogg
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ffmpeg &lt;span class="nt"&gt;-i&lt;/span&gt; source.mov &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-c&lt;/span&gt;:v libtheora &lt;span class="nt"&gt;-q&lt;/span&gt;:v 5 &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-c&lt;/span&gt;:a libvorbis &lt;span class="nt"&gt;-q&lt;/span&gt;:a 5 &lt;span class="se"&gt;\&lt;/span&gt;
output.ogg
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;-q:v&lt;/code&gt; (video) and &lt;code&gt;-q:a&lt;/code&gt; (audio) are options for Variable Bit Rate (VBR) quality level. The value range is 1-31 where 1 is the highest quality and 31 is the lowest quality. Alternatively, they are identical to &lt;code&gt;-qscale:v&lt;/code&gt; and &lt;code&gt;-qscale:a&lt;/code&gt; respectively.&lt;/p&gt;


&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#14-convert-to-gif"&gt;
  &lt;/a&gt;
  1.4 Convert to GIF
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ffmpeg &lt;span class="nt"&gt;-i&lt;/span&gt; source.mov &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-vf&lt;/span&gt; &lt;span class="s2"&gt;" &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;&lt;span class="s2"&gt;
    scale=960:-1, &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;&lt;span class="s2"&gt;
    fps=16, &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;&lt;span class="s2"&gt;
    split[s0][s1];[s0]palettegen[p];[s1][p]paletteuse
  "&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-loop&lt;/span&gt; 0 &lt;span class="se"&gt;\&lt;/span&gt;
output.gif
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#15-keep-original-encoding"&gt;
  &lt;/a&gt;
  1.5 Keep original encoding
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ffmpeg &lt;span class="nt"&gt;-i&lt;/span&gt; source.mov &lt;span class="nt"&gt;-c&lt;/span&gt; copy output.mov
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This creates a duplicate copy of the source file.&lt;/p&gt;


&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#16-remove-audio-track"&gt;
  &lt;/a&gt;
  1.6 Remove audio track
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ffmpeg &lt;span class="nt"&gt;-i&lt;/span&gt; source.mov &lt;span class="nt"&gt;-c&lt;/span&gt;:v copy &lt;span class="nt"&gt;-an&lt;/span&gt; output.mp4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use &lt;code&gt;-an&lt;/code&gt; to remove audio track while keeping video track with &lt;code&gt;-c:v copy&lt;/code&gt; option.&lt;/p&gt;


&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;br&gt;
&lt;center&gt;◆ ◆ ◆&lt;/center&gt;
&lt;br&gt;
&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#2-advanced-editing-features"&gt;
  &lt;/a&gt;
  2. Advanced Editing Features
&lt;/h2&gt;

&lt;p&gt;You can combine below options with any of above codec settings.&lt;/p&gt;


&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#21-cut-specific-range-from-the-source"&gt;
  &lt;/a&gt;
  2.1 Cut specific range from the source
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ffmpeg &lt;span class="nt"&gt;-i&lt;/span&gt; source.mov &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-ss&lt;/span&gt; 00:05:00 &lt;span class="nt"&gt;-t&lt;/span&gt; 12 &lt;span class="se"&gt;\&lt;/span&gt;
output.mp4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output file will start from 5 minutes of the source file withe the max length of 12 seconds, meaning that the output video will end at 00:05:12 of the source video if the source is longer than that.&lt;/p&gt;

&lt;p&gt;Alternatively, &lt;code&gt;-ss 00:05:00 -to 00:05:12&lt;/code&gt; or &lt;code&gt;-ss 300 -t 12&lt;/code&gt; can be used for the same result.&lt;/p&gt;


&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#22-resize-video"&gt;
  &lt;/a&gt;
  2.2 Resize video
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Resize to 1920x1080&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ffmpeg &lt;span class="nt"&gt;-i&lt;/span&gt; source.mov &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-vf&lt;/span&gt; &lt;span class="s2"&gt;"scale=1920:1080"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
output.mp4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Resize width to 1920 keeping source ratio&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ffmpeg &lt;span class="nt"&gt;-i&lt;/span&gt; source.mov &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-vf&lt;/span&gt; &lt;span class="s2"&gt;"scale=1920:-1"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
output.mp4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Resize width to 1920 but make height 2160 with black paddings&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ffmpeg &lt;span class="nt"&gt;-i&lt;/span&gt; source.mov &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-vf&lt;/span&gt; &lt;span class="s2"&gt;"scale=1920:-1, pad=1920:2160:-1:-1:color=black"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
output.mp4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#23-change-video-playback-speed"&gt;
  &lt;/a&gt;
  2.3 Change video playback speed
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;2x faster&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ffmpeg &lt;span class="nt"&gt;-i&lt;/span&gt; source.mov &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-vf&lt;/span&gt; &lt;span class="s2"&gt;"setpts=PTS/2"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-af&lt;/span&gt; &lt;span class="s2"&gt;"asetpts=PTS/2"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
output.mp4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;1/2x speed&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ffmpeg &lt;span class="nt"&gt;-i&lt;/span&gt; source.mov &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-vf&lt;/span&gt; &lt;span class="s2"&gt;"setpts=PTS/.5"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-af&lt;/span&gt; &lt;span class="s2"&gt;"asetpts=PTS/.5"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
output.mp4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;PTS&lt;/code&gt; stands for Presentation TimeStamp. You can apply different video and audio speeds by giving different numbers on video filter (&lt;code&gt;-vf&lt;/code&gt;) and audio filter (&lt;code&gt;-af&lt;/code&gt;) respectively.&lt;/p&gt;


&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#24-set-frames-per-second-fps"&gt;
  &lt;/a&gt;
  2.4 Set frames per second (FPS)
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ffmpeg &lt;span class="nt"&gt;-i&lt;/span&gt; source.mov &lt;span class="nt"&gt;-vf&lt;/span&gt; &lt;span class="s2"&gt;"fps=30"&lt;/span&gt; output.mp4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#25-combine-multiple-videos"&gt;
  &lt;/a&gt;
  2.5 Combine multiple videos
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ffmpeg &lt;span class="nt"&gt;-safe&lt;/span&gt; 0 &lt;span class="nt"&gt;-f&lt;/span&gt; concat &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-i&lt;/span&gt; &amp;lt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="k"&gt;for &lt;/span&gt;f &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$PWD&lt;/span&gt;/&lt;span class="k"&gt;*&lt;/span&gt;.@&lt;span class="o"&gt;(&lt;/span&gt;mov|mp4&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
      &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"file &lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-c&lt;/span&gt; copy &lt;span class="se"&gt;\&lt;/span&gt;
output.mov
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above command combines all the .mov and .mp4 files in the current directory and create &lt;em&gt;output.mov&lt;/em&gt; file. All videos must have same dimension ratio to avoid stretch or distortion.&lt;/p&gt;


&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#26-set-group-of-pictures-gop"&gt;
  &lt;/a&gt;
  2.6 Set Group of Pictures (GOP)
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ffmpeg &lt;span class="nt"&gt;-i&lt;/span&gt; source.mov &lt;span class="nt"&gt;-g&lt;/span&gt; 300 output.mp4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;GOP means distance between two keyframes.&lt;/p&gt;

</description>
      <category>bash</category>
      <category>linux</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Use Images as Backgrounds with HTML &amp; CSS</title>
      <author>Binate Noor</author>
      <pubDate>Tue, 12 Oct 2021 07:25:03 +0000</pubDate>
      <link>https://dev.to/binatenoor/use-images-as-backgrounds-with-html-css-n1b</link>
      <guid>https://dev.to/binatenoor/use-images-as-backgrounds-with-html-css-n1b</guid>
      <description>&lt;p&gt;Adding a Background Image in HTML is one of the most common tasks when you are working on Web Designing.&lt;br&gt;
As a new web designer, one very skill you'll need to master is using background images.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-following-pointers-will-be-covered-in-this"&gt;
  &lt;/a&gt;
  The following pointers will be covered in this:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Background Image in HTML&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; CSS background-image Property&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Background Cover&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Two Background Images&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Background Repeat&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; Using Class&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt; Linear-gradient&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7.&lt;/strong&gt; Three Color Gradient&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8.&lt;/strong&gt; Repeating Linear Gradient&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9.&lt;/strong&gt; Radial Gradient&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10.&lt;/strong&gt; Three Color Radial Gradient&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;11.&lt;/strong&gt; Repeating Radial Gradient&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;12.&lt;/strong&gt; Creating "Hero" image with CSS&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#background-image-in-html"&gt;
  &lt;/a&gt;
  Background Image in HTML:
&lt;/h2&gt;

&lt;p&gt;There are various ways in which images can be added to a web page to make it look captivating &amp;amp; appealing. One of such ways is adding a background image. In this blog, I can add background images to a webpage using HTML &amp;amp; CSS. The most common &amp;amp; simple way to add a background image is using the background image attribute inside the &lt;/p&gt; tag.&lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div style="background-image: url('binateNoor.jpg')";&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#css-backgroundimage-property"&gt;
  &lt;/a&gt;
  CSS background-image Property:
&lt;/h2&gt;

&lt;p&gt;I will be defining the CSS code inside the "style" tag. I will also look at how to target div tags and class using CSS. In the below example, I am specifying the background-image &amp;amp; background-color CSS property which will set the background image &amp;amp; background property for the HTML body respectively.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt; 
body {
  background-image: url("bg1.jpg");
  background-color: #cccccc;
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#background-cover"&gt;
  &lt;/a&gt;
  Background Cover:
&lt;/h2&gt;

&lt;p&gt;If you want the background image to cover the entire element, you can set the background-size property to cover.&lt;/p&gt;

&lt;p&gt;Also, to make sure the entire element is always covered, set the background-attachment property to fixed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt;
 body {
   background-image: url('binateNoor.jpg');
   background-repeat: no repeat;
   background-attachement: fixed;
   background-size: cover;
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-background-images"&gt;
  &lt;/a&gt;
  2 Background Images:
&lt;/h2&gt;

&lt;p&gt;You can also go ahead and add two background images for the "body" element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;body {
  background-image: url("bg3.png"), url("bg1.jpg");
  background-color: #cccccc;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#notes"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Notes:&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;The background image by default is added to the left corner &amp;amp; is repeated both ways, i.e. horizontally &amp;amp; vertically.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
The reason why it is preferred to keep a background color is that if the image is unavailable, so the background-color property will be used and the same will be displayed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now before understanding how I can use different CSS property values, let’s look at the list of CSS property values associated with the background image.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;url:&lt;/strong&gt; URL to the background image. In case of more than one image, comma-separated list needs are provided.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;linear-gradient():&lt;/strong&gt; Sets a linear gradient as the background image. Needs at least 2 colors.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;radial-gradient():&lt;/strong&gt; Sets a radial gradient as the background image. Needs at least 2 colors.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;repeating-linear-gradient():&lt;/strong&gt; Repeats a linear gradient&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;repeating-radial-gradient():&lt;/strong&gt; Repeats a radial gradient&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;initial:&lt;/strong&gt; Sets the property to its default value&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;inherit:&lt;/strong&gt; Inherits this property from its parent element&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#background-repeat"&gt;
  &lt;/a&gt;
  Background Repeat:
&lt;/h2&gt;

&lt;p&gt;Here I am trying to add a couple of background images where the first image will appear only one time and the second image will be repeated. We are using background-repeat to do so.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt;
body {
  background-image: url("bg2.jpg"), url("bg3.png");
  background-repeat: no-repeat, repeat;
  background-color: #cccccc;
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-class"&gt;
  &lt;/a&gt;
  Using Class:
&lt;/h2&gt;

&lt;p&gt;In this example, I am creating a bg-image with various background properties such as image, color, position &amp;amp; repeat. I am targeting the bg-image class to apply the background properties to the webpage.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt;
  .bg-image {
     background-image: url("bg2.jpg");
     background-color: #cccccc;
     height: 500px;
     background-position: center;
     background-repeat: no-repeat;
     background-size: cover;
     position: relative;
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#lineargradient"&gt;
  &lt;/a&gt;
  Linear-gradient:
&lt;/h2&gt;

&lt;p&gt;Here I am creating a linear gradient using two colors(i.e. red &amp;amp; yellow) and setting it as the background image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt; 
#gradient {
  height: 200px;
  background-color: #cccccc;
  background-image: linear-gradient(red, yellow);
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-color-gradient"&gt;
  &lt;/a&gt;
  3 Color Gradient:
&lt;/h2&gt;

&lt;p&gt;Here I am creating a linear gradient using three colors(i.e. red, blue &amp;amp; green) and setting it as the background image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt;
  #gradient1 {
     height: 300px;
     background-color: #cccccc;
     background-image: linear-gradient(red, blue, green);
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#repeating-linear-gradient"&gt;
  &lt;/a&gt;
  Repeating Linear Gradient:
&lt;/h2&gt;

&lt;p&gt;In this example, I am repeating the linear gradient using repeating-linear-gradient() functions and set it as the background image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt;
  #gradient {
     height: 300px;
     background-color: #cccccc;
     background-image: repeating-linear-gradient(red, blue 20%, green 30%);
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#radial-gradient"&gt;
  &lt;/a&gt;
  Radial Gradient:
&lt;/h2&gt;

&lt;p&gt;Here I am creating a radial gradient using two colors(i.e. red &amp;amp; yellow) and setting it as the background image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt;
  #gradient {
     height: 300px;
     background-color: #cccccc;
     background-image: radial-gradient(green, red);
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-color-radial-gradient"&gt;
  &lt;/a&gt;
  3 Color Radial Gradient:
&lt;/h2&gt;

&lt;p&gt;Here I am creating a radial gradient using three colors(i.e. red, blue &amp;amp; green) and setting it as the background image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt;
  #gradient {
     height: 500px;
     background-color: #cccccc;
     background-image: radial-gradient(red, blue, green);
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#repeating-radial-gradient"&gt;
  &lt;/a&gt;
  Repeating Radial Gradient:
&lt;/h2&gt;

&lt;p&gt;In this example, I am repeating the radial gradient using repeating-radial-gradient() functions and set it as the background image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt;
  #gradient {
     height: 200px;
     background-color: #cccccc;
     background-image: repeating-radial-gradient(red, blue 10%, green 20%);
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-hero-image-with-css"&gt;
  &lt;/a&gt;
  Creating "Hero" image with CSS:
&lt;/h2&gt;

&lt;p&gt;Creating "Hero" image with CSS&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.hero-image {
   background-image: URL("binatenoor.jpg");
   background-color: #def345;
   height: 500px;
   background-position: center;
   background-repeat: no-repeat;
  background-size: cover;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now after executing the above snippets you would have understood how to insert a background image in a webpage using &lt;strong&gt;HTML &amp;amp; CSS&lt;/strong&gt;. I hope this blog is informative and added value to you. &lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
