<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Build Your New On-demand Multi-Service App Utilizing The Best Laravel PHP Framework</title>
      <author>georgedavid</author>
      <pubDate>Wed, 15 Sep 2021 10:23:05 +0000</pubDate>
      <link>https://dev.to/georgedavid02/build-your-new-on-demand-multi-service-app-utilizing-the-best-laravel-php-framework-21p1</link>
      <guid>https://dev.to/georgedavid02/build-your-new-on-demand-multi-service-app-utilizing-the-best-laravel-php-framework-21p1</guid>
      <description>&lt;p&gt;As app development is the core process to start any kind of on-demand online business, concentrating on it is very important. Consequently, the developers today majorly use the Laravel backend program on the basis of its powerful integration framework. Because of its notable advantages, the same source has been used in on-demand multi-service app development too. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6uGHUomt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ygdanlukmikx2c0pdiua.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6uGHUomt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ygdanlukmikx2c0pdiua.png" alt="on-demand multi services app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Though the multiservice apps are considered as updated stuff to individual on-demand service apps, it admires a lot of business personalities' attention. In response, we can find several entrepreneurs focusing on better multiservice app development for new business initiations nowadays.&lt;/p&gt;

&lt;p&gt;Touching on it, let's discuss why Laravel is better for you to develop your multiservice app. And, how powerfully you can build your Uber for X multiservice app that competes with the demands faced by developers and entrepreneurs at present.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-laravel-backend-framework-is-the-best-for-ondemand-multiservice-app-development"&gt;
  &lt;/a&gt;
  Why Laravel Backend Framework is the Best for On-demand Multiservice App Development?
&lt;/h2&gt;

&lt;p&gt;As mentioned, the backend of an on-demand business app takes a vital role in its complete operation online. Thus, having a reliable and standard technology implementation to take care of progressive business data would be your developed app’s great victory in the market. In the Uber for X multiservice app development too, it acquires the below-mentioned major benefits.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Laravel backend makes your coding easier&lt;/em&gt;&lt;br&gt;
&lt;em&gt;Fast app development completion&lt;/em&gt;&lt;br&gt;
&lt;em&gt;The complete open-source helps you to make an affordable development cost&lt;/em&gt;&lt;br&gt;
&lt;em&gt;Modular approach possible for the convenient development processing&lt;/em&gt;&lt;br&gt;
&lt;em&gt;Your multiservice app could be smartly being updated with its powerful MVC Architecture.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Above all, you could get a lot more additions such as quick time duration to market, object-related libraries, composers, best routing, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#top-features-of-laravel-for-your-effective-business-app-creation"&gt;
  &lt;/a&gt;
  Top Features of Laravel for Your Effective Business App Creation
&lt;/h2&gt;

&lt;p&gt;The comprehensive development framework for your multiservice app boosts an expressive syntax. Its effective feature options make your app development operation completely refreshed. This is how Laravel still stands to be a favorite one of contemporary developers focusing on its most developer-friendly nature and comfortability to build both desktop and mobile apps. In which, for your powerful multiservice app creation, refer to its top features in the following. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Authorization System&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Your app development with Laravel allows you to easily take care of user authentication. As everything is already configured and built-in in the framework, you can also manage the assigning claimed access rights. To developers, it provides an organized way to outline the authentication logic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Simplified Notification Transmission&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Laravel framework’s effective SwiftMailer library lets the notification integration can be used for simplified notification configuration for individual accounts. It supports sending notifications from multiple channels. So that alert transmission throughout the multiservice business in progress would be smoothened. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Seamless Automation Checking&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Automation checking is used to test your new multiservice app’s performance ratio. Representing how well a created solution works without any errors, crashes, or bugs. For this purpose, with the inbuilt Laravel framework’s checking options in addition to its support for PHP Unit test utilizing phpunit.xml, you can easily check the fundamental user activities to examine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Laravel Database Migration System&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Laravel has a seamless database migration system. Because syncing with the database is a tedious task for developers, which also demands long timing hours to complete the task, Laravel’s seamless data migration allows you to easily enhance the quality of the database speedily without any compromisation in actual security.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-core-advantages-app-developers-derives-from-laravel-backend-programming"&gt;
  &lt;/a&gt;
  The Core Advantages App Developers Derives From Laravel Backend Programming
&lt;/h2&gt;

&lt;p&gt;Same as how the backend program is the core stuff in business app operations, its advantages are important for developers for purposes. Thereby, from the development to custom modulations, everything would be smart achievable at the end of the satisfying app design outlet. For example, the following core advantages of the Laravel framework assist you to build a gainful Uber for X business app.&lt;/p&gt;

&lt;p&gt;Implementing Authentication Enable - The Laravel backend program enables implementing authentication. So that everything is finely configured to a great organized authentication logic. And, the requirement controls access to various resources.&lt;/p&gt;

&lt;p&gt;Fast Cache Configurations - Since the Laravel backs are well-known for their cache backends, as a developer, you can configure a number of cache configurations fast. &lt;/p&gt;

&lt;p&gt;User-friendly API Provision - As a developer, you can offer your client a clean and easy-to-use API through SwiftMailer Library. Its drivers let an app rapidly get ready-to-move, send notification alerts via cloud-based service. &lt;/p&gt;

&lt;p&gt;Enhanced Monolog Library - Though the Laravel framework has been well integrated with the enhanced monolog logging library, it is much more useful for you. Through that, you are getting the support for handling a load of effective logs.&lt;/p&gt;

&lt;p&gt;Powerful Routeway Identification - Each Laravel backend route is determined right in the App/HTTP/routes.php file. So it is naturally loaded by the framework. Additionally, offers a forceful method of determining route-ways through accepting URL along with a Closure.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#victorious-development-and-winning-multiservice-app-output"&gt;
  &lt;/a&gt;
  Victorious Development And Winning Multiservice App Output
&lt;/h2&gt;

&lt;p&gt;In the real-time marketplace, your on-demand multiservice app performs sophisticatedly owing to its robust backend structure. Its development side of client-based captivations lets both the developer and the entrepreneurs get a win-win favor. Hence the newly developed Uber for X app possesses the main characteristics as follows, the business achieves a lot in real-time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Seamless App Functionality&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Though all the enhancements would be covered with your backend program, your multiservice app’s total functionality is seamless. So, even between a number of users accessing at the same time, your business app performs in a standardized manner.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Client-centric App Creation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Using its full easy backend programming modulation solution, you can develop the multiservice app as per custom-centric backend program requirements. Therefore, you can make your client better satisfied with your complete app creation task output for service initiations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Speedy Development&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Laravel’s fast and fine backend development segments urge your new app-building right from the beginning. So it helps you to offer clients a fast and secure app development creation. Therefore, an immediate business launching as per the plan possible with its overall.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Great Base for Multi OSs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The adaptable Laravel framework allows you to code programs for a great backend operation functionality to your multiservice apps which are supported with multiple mobile phone/web operating systems. So, the entrepreneurs who require multi-OS supporting business apps could smartly get them all.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Robust Security&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Above all, for a robust security requirement for your new Uber for X on-demand multiservice app, the Laravel framework inherently has many features and operations, which make your app more secure and powerful enough to prevent vulgarities. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#all-in-all"&gt;
  &lt;/a&gt;
  All in All
&lt;/h3&gt;

&lt;p&gt;Multiservice app development today increased amongst business personalities for their gainful startups online. Considering it, the developers using Laravel backend framework are vastly encouraged by them focusing on the programming advantages in the app’s functionality. Whereupon, &lt;a href="https://www.spotnrides.com/uber-for-x-ondemand-multi-services-app"&gt;Uber for X&lt;/a&gt; on-demand multiservice app which is developed utilizing the powerful Laravel framework naturally covers the discussed victorious benefits. &lt;/p&gt;

</description>
      <category>php</category>
      <category>laravel</category>
      <category>programming</category>
      <category>framework</category>
    </item>
    <item>
      <title>Create a PDF document from an Azure DevOps Wiki</title>
      <author>Marcel.L</author>
      <pubDate>Wed, 15 Sep 2021 09:20:57 +0000</pubDate>
      <link>https://dev.to/pwd9000/create-a-pdf-document-from-an-azure-devops-wiki-fjh</link>
      <guid>https://dev.to/pwd9000/create-a-pdf-document-from-an-azure-devops-wiki-fjh</guid>
      <description>&lt;h2&gt;
  &lt;a href="#azure-devops-wiki"&gt;
  &lt;/a&gt;
  Azure DevOps Wiki
&lt;/h2&gt;

&lt;p&gt;When working on Azure DevOps or Github, we have special needs when it comes to wiki's and documentation. Specifically, we often have our documentation sit next to our source code in our repos, allowing us to version our documentation along with our source code. This developer-specific workflow is totally supported by Azure DevOps Wiki. What is great about using the Azure DevOps wiki is that similarly how teams can share and collaborate on a projects source code the same team, using the same workflow can also share and collaborate on a projects documentation through its Wiki. Documentation such as release notes, manuals and any sort of documentation that needs to accompany a project can be created in a Wiki. The documentation is then also kept in source control and in a central place that a team can access and collaborate on.  &lt;/p&gt;

&lt;p&gt;But this might not be suitable or possible at all times in all use cases, for example to see the DevOps wiki a person must have access to the DevOps Project and Wiki. Say for example someone who is in a different project or in a management role that does not have access to the DevOps project or wiki would like to see a products release notes or maybe some sort of documentation on the project in a document, this makes things a bit more tricky. So today I will share with you how you can convert your DevOps or Github wiki into a PDF document. We will also look at how we can create a pipeline that will automatically generate a new "Wiki PDF" document when required.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#devops-wiki-pdf-export-task"&gt;
  &lt;/a&gt;
  DevOps Wiki PDF Export Task
&lt;/h2&gt;

&lt;p&gt;WIKI PDF Export Tasks is a DevOps extension that can be installed into your DevOps Organisation from the Azure DevOps &lt;a href="https://marketplace.visualstudio.com/items?itemName=richardfennellBM.BM-VSTS-WikiPDFExport-Tasks"&gt;marketplace&lt;/a&gt;, simply put it is an Azure Pipelines extension that can give teams another way to present their Wiki as a PDF document, whether it be an export of a whole WIKI or just a single page.  &lt;/p&gt;

&lt;p&gt;The extension is based on a tool called &lt;a href="https://github.com/MaxMelcher/AzureDevOps.WikiPDFExport"&gt;&lt;strong&gt;AzureDevOps.WikiPDFExport&lt;/strong&gt;&lt;/a&gt; by Max Melcher that allows you to export a whole WIKI (or a single file) as a PDF. The tool performs the following tasks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Clone a WIKI Repo&lt;/li&gt;
&lt;li&gt;Run the command line tool passing in a path to the root of the cloned wiki repo&lt;/li&gt;
&lt;li&gt;The .order file is read&lt;/li&gt;
&lt;li&gt;A PDF is generated&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#wiki-to-pdf-pipeline"&gt;
  &lt;/a&gt;
  Wiki to PDF Pipeline
&lt;/h2&gt;

&lt;p&gt;After installing &lt;a href="https://marketplace.visualstudio.com/items?itemName=richardfennellBM.BM-VSTS-WikiPDFExport-Tasks"&gt;WIKI PDF Export Tasks&lt;/a&gt; in your Devops Organisation. Navigate to your Wiki repository.&lt;br&gt;&lt;br&gt;
In this tutorial I am using a repo on my project called: &lt;strong&gt;Devops.Wiki&lt;/strong&gt; published as my project wiki.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--40pVSJJy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Wiki-To-Pdf/assets/wiki.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--40pVSJJy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Wiki-To-Pdf/assets/wiki.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Under my repo I then created a new folder/path called: &lt;code&gt;.pipelines&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SK7O01qR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Wiki-To-Pdf/assets/paths.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SK7O01qR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Wiki-To-Pdf/assets/paths.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this path we will create our YAML pipeline called &lt;code&gt;wiki-to-pdf.yml&lt;/code&gt; with the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# code/wiki-to-pdf.yml&lt;/span&gt;

&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Wiki-To-PDF-$(Rev:rr)&lt;/span&gt;
&lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;none&lt;/span&gt;

&lt;span class="na"&gt;stages&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;stage&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;wiki_export&lt;/span&gt;
  &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Wiki Export&lt;/span&gt;

  &lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;job&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;wiki_to_pdf&lt;/span&gt;
    &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Wiki To PDF&lt;/span&gt;
    &lt;span class="na"&gt;pool&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;vmImage&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;windows-latest&lt;/span&gt;

    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;richardfennellBM.BM-VSTS-WikiPDFExport-Tasks.WikiPDFExportTask.WikiPdfExportTask@1&lt;/span&gt;
      &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Export&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;a&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;private&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Azure&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;DevOps&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;WIKI'&lt;/span&gt;
      &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;cloneRepo&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
        &lt;span class="na"&gt;repo&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://dev.azure.com/magiconionM/Devto_Blog_Demos/_git/DevOps.Wiki'&lt;/span&gt;
        &lt;span class="na"&gt;useAgentToken&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
        &lt;span class="na"&gt;localpath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(System.DefaultWorkingDirectory)/DevOpsWiki'&lt;/span&gt; 
        &lt;span class="na"&gt;outputFile&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Build.ArtifactStagingDirectory)/PDF/DevOpsWiki.pdf'&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;PublishPipelineArtifact@1&lt;/span&gt;
      &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Publish&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;wiki&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;export&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;to&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Azure&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Pipeline'&lt;/span&gt;
      &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;targetPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Build.ArtifactStagingDirectory)/PDF'&lt;/span&gt;
        &lt;span class="na"&gt;artifactName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;DevOpsWiki&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We can then set up this pipeline and trigger it manually, once the pipeline has completed it will generate an artifact that contains the PDF document.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9vwwhPKZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Wiki-To-Pdf/assets/run.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9vwwhPKZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Wiki-To-Pdf/assets/run.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ma4okwSZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Wiki-To-Pdf/assets/artifact.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ma4okwSZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Wiki-To-Pdf/assets/artifact.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Pwd9000-ML/blog-devto/blob/master/posts/DevOps-Wiki-To-Pdf/code/DevOpsWiki.pdf"&gt;Here&lt;/a&gt; is an example PDF export.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#other-examples"&gt;
  &lt;/a&gt;
  Other Examples
&lt;/h2&gt;

&lt;p&gt;Note on our pipeline the task used is specifically to export a private Azure DevOps WIKI:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;richardfennellBM.BM-VSTS-WikiPDFExport-Tasks.WikiPDFExportTask.WikiPdfExportTask@1&lt;/span&gt;
    &lt;span class="s"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Export&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;a&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;private&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Azure&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;DevOps&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;WIKI'&lt;/span&gt;
    &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;cloneRepo&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
    &lt;span class="na"&gt;repo&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://dev.azure.com/magiconionM/Devto_Blog_Demos/_git/DevOps.Wiki'&lt;/span&gt;
    &lt;span class="na"&gt;useAgentToken&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
    &lt;span class="na"&gt;localpath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(System.DefaultWorkingDirectory)/DevOpsWiki'&lt;/span&gt; 
    &lt;span class="na"&gt;outputFile&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Build.ArtifactStagingDirectory)/PDF/DevOpsWiki.pdf'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here are two more examples. Export a Single File:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;richardfennellBM.BM-VSTS-WikiPDFExport-Tasks.WikiPDFExportTask.WikiPdfExportTask@1&lt;/span&gt; 
  &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Export&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Single&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;File'&lt;/span&gt;
  &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;cloneRepo&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
    &lt;span class="na"&gt;localpath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(System.DefaultWorkingDirectory)'&lt;/span&gt;
    &lt;span class="na"&gt;singleFile&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;release_notes.md'&lt;/span&gt;
    &lt;span class="na"&gt;outputFile&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Build.ArtifactStagingDirectory)/PDF/ReleaseNotes.pdf'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Export a public GitHub WIKI:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;richardfennellBM.BM-VSTS-WikiPDFExport-Tasks.WikiPDFExportTask.WikiPdfExportTask@1&lt;/span&gt;
   &lt;span class="s"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Export&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;a&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;public&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;GitHub&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;WIKI'&lt;/span&gt;
   &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
     &lt;span class="na"&gt;cloneRepo&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
     &lt;span class="na"&gt;repo&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://github.com/rfennell/AzurePipelines.wiki.git'&lt;/span&gt; 
     &lt;span class="na"&gt;useAgentToken&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
     &lt;span class="na"&gt;localpath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(System.DefaultWorkingDirectory)\GitHubRepo'&lt;/span&gt; 
     &lt;span class="na"&gt;outputFile&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Build.ArtifactStagingDirectory)\PDF\GitHubWiki.pdf'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;I hope you have enjoyed this post and have learned something new. You can also find the code samples used in this blog post on my &lt;a href="https://github.com/Pwd9000-ML/blog-devto/tree/master/posts/DevOps-Wiki-To-Pdf/code"&gt;Github&lt;/a&gt; page. ❤️&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#author"&gt;
  &lt;/a&gt;
  &lt;em&gt;Author&lt;/em&gt;
&lt;/h3&gt;


&lt;div class="ltag__user ltag__user__id__620034"&gt;
  
    .ltag__user__id__620034 .follow-action-button {
      background-color: #0cbb58 !important;
      color: #000000 !important;
      border-color: #0cbb58 !important;
    }
  
    &lt;a href="/pwd9000" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Amb4rEJN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--L_SDLOmq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/620034/93be2c72-3a13-478e-8af1-a4bedc1b2331.jpeg" alt="pwd9000 image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/pwd9000"&gt;Marcel.L&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/pwd9000"&gt;Cloud Solutions Architect and DevOps enthusiast.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



</description>
      <category>tutorial</category>
      <category>azure</category>
      <category>productivity</category>
      <category>devops</category>
    </item>
    <item>
      <title>Django &amp; Docker - Open-source Projects</title>
      <author>Sm0ke</author>
      <pubDate>Wed, 15 Sep 2021 09:05:11 +0000</pubDate>
      <link>https://dev.to/sm0ke/django-docker-open-source-projects-3g0j</link>
      <guid>https://dev.to/sm0ke/django-docker-open-source-projects-3g0j</guid>
      <description>&lt;p&gt;Hello Coders!&lt;/p&gt;

&lt;p&gt;This article presents a curated list of &lt;strong&gt;&lt;a href="https://blog.appseed.us/django-docker-open-source-projects/"&gt;Open-Source Django&lt;/a&gt;&lt;/strong&gt; Projects already configured to run in &lt;strong&gt;Docker&lt;/strong&gt;, the popular virtualization software.  For newcomers, &lt;strong&gt;Django&lt;/strong&gt; is a leading web framework coded in Python by programming experts and open-source enthusiasts using a batteries-included concept. All projects mentioned on this page are available for download from Github (no registration lock) under MIT License.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;👉 &lt;code&gt;Section #1&lt;/code&gt;: &lt;strong&gt;Django&lt;/strong&gt; - Short Presentation&lt;/li&gt;
&lt;li&gt;👉 &lt;code&gt;Section #2&lt;/code&gt;: What is &lt;strong&gt;Docker&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;👉 &lt;code&gt;Section #3&lt;/code&gt;: &lt;strong&gt;Install Docker&lt;/strong&gt; (Unix workspace)&lt;/li&gt;
&lt;li&gt;👉 &lt;code&gt;Section #4&lt;/code&gt;: &lt;strong&gt;Docker&lt;/strong&gt; CheatSheet&lt;/li&gt;
&lt;li&gt;👉 &lt;code&gt;Section #5&lt;/code&gt;: Pre-configured &lt;strong&gt;Docker&lt;/strong&gt; Projects (all free)

&lt;ul&gt;
&lt;li&gt;(free) 📥 &lt;a href="https://appseed.us/django/django-pixel-bootstrap-uikit"&gt;Django Pixel Lite&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;(free) 📥 &lt;a href="https://appseed.us/admin-dashboards/django-dashboard-atlantis-dark"&gt;Django Atlantis Dark&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;(free) 📥 &lt;a href="https://appseed.us/admin-dashboards/django-dashboard-volt"&gt;Django Bootstrap 5 Volt&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#1-django-presentation"&gt;
  &lt;/a&gt;
  1# - Django Presentation
&lt;/h2&gt;

&lt;p&gt;Django is a modern web framework crafted in Python language that provides modules and libraries for many common features required in modern web development:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Basic authentication, Social Login&lt;/li&gt;
&lt;li&gt;Out-of-the-box Admin Section with CRUD access for all tables&lt;/li&gt;
&lt;li&gt;Abstract Database access via a powerful ORM&lt;/li&gt;
&lt;li&gt;Powerful built-in security patterns&lt;/li&gt;
&lt;li&gt;Helpers: forms, models, and data validation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Django can be installed in many ways and the most recommended way is to use PIP, the official Python package manager. Here is the complete list with commands: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Create a &lt;code&gt;virtual environment&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Create the environment&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;virtualenv &lt;span class="nb"&gt;env&lt;/span&gt; 
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Activate the virtual environment&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source env&lt;/span&gt;/bin/activate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Install Django via PIP&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;Django // &lt;span class="nb"&gt;install &lt;/span&gt;latest version
// OR
&lt;span class="nv"&gt;$ &lt;/span&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;&lt;span class="nv"&gt;django&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;3.2.6 // &lt;span class="nb"&gt;install &lt;/span&gt;specific version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #3&lt;/strong&gt; - Build a minimal Django project&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;firstproject 
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;firstproject
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;django-admin startproject config &lt;span class="nb"&gt;.&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #4&lt;/strong&gt; - Start the project&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py runserver 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If all goes well, we should see in the browser the default Django splash screen when accessing &lt;code&gt;http://localhost:8000&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9kXZ_1Ga--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ug9t6oostt5ns0bjd0b2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9kXZ_1Ga--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ug9t6oostt5ns0bjd0b2.png" alt="Django - The Default Screen"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#2-what-is-docker"&gt;
  &lt;/a&gt;
  2# - What is Docker
&lt;/h2&gt;

&lt;p&gt;Probably the best definition of Docker is the one provided by the official help: &lt;strong&gt;Docker&lt;/strong&gt; is virtualization software for developing, shipping, and running applications that provides a clear separation of applications from the infrastructure so we can deliver software much faster and reliable.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aFBwA-As--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48dwrn2kvuhl5ed5okqb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aFBwA-As--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48dwrn2kvuhl5ed5okqb.png" alt="Docker - Official Logo."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Basically, Docker provides a way to package applications into containers that are executable components built with applications source code and operating system libraries. Once the containers are built, Docker provides also a control layer that enables developers to build, deploy, start, stop, and update containers using simple commands. For more information about Docker feel free to access:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://docs.docker.com/get-started/overview/"&gt;Docker overview&lt;/a&gt; - the official documentation&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://opensource.com/resources/what-docker"&gt;What is Docker&lt;/a&gt; - comprehensive article provided by OSS.com&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#3-install-docker-ubuntu-18-lts"&gt;
  &lt;/a&gt;
  3# - Install Docker (Ubuntu 18 LTS)
&lt;/h2&gt;

&lt;p&gt;All Django projects listed in the last section of this article can be compiled and executed without Docker by following the documentation provided for each project but using Docker the build and execution might be faster with fewer commands typed in the terminal.  Let's install Docker using an Ubuntu 18 LTS workstation.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: All commands presented in this section are executed using &lt;code&gt;sudo&lt;/code&gt;, a command that requires &lt;code&gt;ROOT&lt;/code&gt; privileges.  &lt;/p&gt;
&lt;/blockquote&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Update the system to use the latest packages (optional but recommended)&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt-get update
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Uninstall old versions of Docker (optional but recommended)&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt-get remove docker-engine docker docker.io  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #3&lt;/strong&gt; - Re-Install Docker (the latest version shipped by Ubuntu)&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt-get &lt;span class="nb"&gt;install &lt;/span&gt;docker.io
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #4&lt;/strong&gt; - Enable Docker as a service&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl &lt;span class="nb"&gt;enable &lt;/span&gt;docker
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl start docker
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point, we should be able to build and start all &lt;strong&gt;Django samples using Docker&lt;/strong&gt;. Just to check the installation we can check the version of the current Docker installation using &lt;code&gt;--version&lt;/code&gt; argument:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker &lt;span class="nt"&gt;--version&lt;/span&gt; 
Docker version 20.10.5, build 55c4c88 // &amp;lt;&lt;span class="nt"&gt;--&lt;/span&gt; The Output 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#4-docker-cheatsheet"&gt;
  &lt;/a&gt;
  4# - Docker CheatSheet
&lt;/h2&gt;

&lt;p&gt;This section is a short introduction to the most used Docker commands.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Docker - &lt;strong&gt;Inspecting Containers&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker &lt;span class="nt"&gt;--version&lt;/span&gt;       &lt;span class="c"&gt;# check Docker version&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker ps &lt;span class="nt"&gt;-a&lt;/span&gt;           &lt;span class="c"&gt;# list all containers&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker ps              &lt;span class="c"&gt;# list all RUNNING containers&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker top &amp;lt;container&amp;gt; &lt;span class="c"&gt;# list the active processes &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;Docker -  &lt;strong&gt;Management Commands&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker run     &amp;lt;image&amp;gt;       &lt;span class="c"&gt;# create and start the container&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker start   &amp;lt;container&amp;gt;   &lt;span class="c"&gt;# start container&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker stop    &amp;lt;container&amp;gt;   &lt;span class="c"&gt;# stop container (gracefully)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker pause   &amp;lt;container&amp;gt;   &lt;span class="c"&gt;# freeze the container&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker &lt;span class="nb"&gt;kill&lt;/span&gt;    &amp;lt;container&amp;gt;   &lt;span class="c"&gt;# kill container (not gracefully)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker restart &amp;lt;container&amp;gt;   &lt;span class="c"&gt;# restart container (gracefully) &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;Docker - &lt;strong&gt;Image Transfer Commands&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker pull  &amp;lt;image&amp;gt;   &lt;span class="c"&gt;# pull an image from a registry&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker push  &amp;lt;image&amp;gt;   &lt;span class="c"&gt;# push/save an image to a registry&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker search &amp;lt;image&amp;gt;  &lt;span class="c"&gt;# returns all images related to search keyword&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;Docker - &lt;strong&gt;Miscellaneous Commands&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker container &lt;span class="nb"&gt;kill&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt;docker ps &lt;span class="nt"&gt;-q&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;  &lt;span class="c"&gt;# kill all containers&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker container &lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt;docker ps &lt;span class="nt"&gt;-a&lt;/span&gt; &lt;span class="nt"&gt;-q&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# delete all containers &lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker network prune                   &lt;span class="c"&gt;# delete all IPv4 used address &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#5-django-amp-docker-samples"&gt;
  &lt;/a&gt;
  5# - Django &amp;amp; Docker Samples
&lt;/h2&gt;

&lt;p&gt;With this minimal &lt;strong&gt;Django &amp;amp; Docker&lt;/strong&gt; background we should be able to execute and understand how the samples are built and executed. &lt;em&gt;Let's go!&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#django-pixel-lite"&gt;
  &lt;/a&gt;
  Django Pixel Lite
&lt;/h3&gt;

&lt;p&gt;Open-Source Django starter coded with basic modules, database, ORM, and deployment scripts on top of Pixel Lite UI Kit, a fully responsive and modern Bootstrap 5 UI Kit that will help you build creative and professional websites. The Django codebase is provided with database, ORM, authentication, and deployment scripts.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://appseed.us/django/django-pixel-bootstrap-uikit"&gt;Django Pixel Lite&lt;/a&gt; - product page (contains sources and DEMO)&lt;/p&gt;
&lt;/blockquote&gt;






&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;unzip django-pixel-lite.zip
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;django-pixel-lite
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose pull 
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose build 
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kuf8YU_P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/katj8vk9wm2ztu679n1z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kuf8YU_P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/katj8vk9wm2ztu679n1z.png" alt="Django Docker Sample - Pixel Lite."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#django-atlantis-dark"&gt;
  &lt;/a&gt;
  Django Atlantis Dark
&lt;/h3&gt;

&lt;p&gt;Atlantis Lite (Dark Design) is a free bootstrap 4 admin dashboard that is beautifully and elegantly designed to display various metrics, numbers, or data visualization. Atlantis Lite admin dashboard has 2 layouts, many plugins, and UI components to help developers create dashboards quickly and effectively so they can save development time and also help users to make the right and fast decisions based on existing data.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://appseed.us/admin-dashboards/django-dashboard-atlantis-dark"&gt;Django Atlantis Dark&lt;/a&gt; -  product page (contains sources and DEMO)&lt;/p&gt;
&lt;/blockquote&gt;






&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;unzip django-atlantis-dark.zip
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;django-atlantis-dark
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose pull 
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose build 
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i4y_2P1U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3uplrh2cyoyh4lvebp6l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i4y_2P1U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3uplrh2cyoyh4lvebp6l.png" alt="Django Docker Sample - Atlantis Dark."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#django-bootstrap-5-volt"&gt;
  &lt;/a&gt;
  Django Bootstrap 5 Volt
&lt;/h3&gt;

&lt;p&gt;Volt Dashboard is a free and open-source Bootstrap 5 Admin Dashboard featuring over 100 components, 11 example pages, and 3 plugins with Vanilla JS. There is more than 100 free Bootstrap 5 components included some of them being buttons, alerts, modals, and datepickers.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://appseed.us/admin-dashboards/django-dashboard-volt"&gt;Django Bootstrap 5 Volt&lt;/a&gt; -  product page (contains sources and DEMO)&lt;/p&gt;
&lt;/blockquote&gt;






&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;unzip django-dashboard-volt.zip
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;django-dashboard-volt
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose pull 
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose build 
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1sHA-Gt7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ncbqbriza14niojy1cyi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1sHA-Gt7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ncbqbriza14niojy1cyi.png" alt="Django Docker Sample - Volt Dashboard."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#django-adminlte"&gt;
  &lt;/a&gt;
  Django AdminLTE
&lt;/h3&gt;

&lt;p&gt;AdminLTE is one of the best open-source admin dashboard &amp;amp; control panel themes. Built on top of Bootstrap, AdminLTE provides a range of responsive, reusable, and commonly used components. Django is a high-level Python Web framework that encourages rapid development and clean, pragmatic design.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://appseed.us/admin-dashboards/django-dashboard-adminlte"&gt;AdminLTE Django&lt;/a&gt; -  product page (contains sources and DEMO)&lt;/p&gt;
&lt;/blockquote&gt;






&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;unzip django-adminlte.zip
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;django-adminlte
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose pull 
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose build 
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gv5_uf_G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4no83ejy1vtb7641px23.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gv5_uf_G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4no83ejy1vtb7641px23.png" alt="Django Docker Sample - AdminLTE Dashboard."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! For more resources, please access:&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;More &lt;a href="https://appseed.us/admin-dashboards/django"&gt;Django Dashboards&lt;/a&gt; - free &amp;amp; commercial starters&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/admin-dashboards/open-source"&gt;Open-Source Dashboards&lt;/a&gt; - crafted in Flask, Django, and React
&lt;/li&gt;
&lt;li&gt;Free &lt;a href="https://dev.to/sm0ke/react-dashboards-open-source-apps-1c7j"&gt;React Dashboards&lt;/a&gt; - a popular article published here on Dev&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>django</category>
      <category>docker</category>
      <category>opensource</category>
      <category>appseed</category>
    </item>
    <item>
      <title>What is React Prop Drilling and Context API</title>
      <author>Rishav Raj</author>
      <pubDate>Wed, 15 Sep 2021 09:00:40 +0000</pubDate>
      <link>https://dev.to/iamrishavraj1/what-is-react-prop-drilling-and-context-api-cjl</link>
      <guid>https://dev.to/iamrishavraj1/what-is-react-prop-drilling-and-context-api-cjl</guid>
      <description>&lt;p&gt;Before starting this blog, I assume that you all should have basic knowledge about React. &lt;br&gt;
In this blog we are going to learn one of the best concept of React - Prop Drilling and Context API.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tDIinls5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b12vgd7goncou8i6yxds.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tDIinls5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b12vgd7goncou8i6yxds.png" alt="react"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Prop drilling&lt;/strong&gt; is a method where we pass a props with another component with the help of all the components that come between them.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M6_X4KcZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/otoe7e9bur98rjl5wycv.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M6_X4KcZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/otoe7e9bur98rjl5wycv.gif" alt="Drill"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#let-us-understand-with-a-real-life-example"&gt;
  &lt;/a&gt;
  Let us understand with a real life example.
&lt;/h2&gt;

&lt;p&gt;Imagine you are in school and you are sitting on the last bench and your best friend is sitting on the first bench. Suddenly your best friend needs a pen and you have a spare pen and you want to give that pen to your best friend. For this, ask your friend sitting on your next bench to take the pen and forward it to the next one and said that repeat this until the pen reaches your friend.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EZkzCRd7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3pwf1yh52q6k3601rqns.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EZkzCRd7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3pwf1yh52q6k3601rqns.png" alt="Class"&gt;&lt;/a&gt;&lt;br&gt;
Here you can see how he gives a pen to his best friend with the help of another bench. &lt;br&gt;
In &lt;strong&gt;React&lt;/strong&gt; also if we want to pass props to any other component then we have to pass props to all the components which come between them and This whole process is known as &lt;strong&gt;React Prop Drilling&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#now-come-and-understand-all-these-things-with-the-help-of-code"&gt;
  &lt;/a&gt;
  Now come and understand all these things with the help of code.
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { useState } from "react";

//FIRST COMPONENT
const LastBench = () =&amp;gt; {
  const [penName, setPenName] = useState("Blue Gel Pen");
  return (
    &amp;lt;&amp;gt;
      &amp;lt;h1&amp;gt;Hello I am Last Bench&amp;lt;/h1&amp;gt;
    &amp;lt;/&amp;gt;
  );
};

//SECOND COMPONENT
const NextBench = () =&amp;gt; {
  return (
    &amp;lt;&amp;gt;
      &amp;lt;h1&amp;gt;Hello I am Next Bench.&amp;lt;/h1&amp;gt;
    &amp;lt;/&amp;gt;
  );
};

//THIRD COMPONENT
const FirstBench = () =&amp;gt; {
  return (
    &amp;lt;&amp;gt;
      &amp;lt;h1&amp;gt;Hey I am First Bench&amp;lt;/h1&amp;gt;
    &amp;lt;/&amp;gt;
  );
};

export default LastBench;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;In the above code you see that we create 3 components. In the first component we declare a pen name with the help of useState hook. Now we have to pass the pen name to the last component with the help of second component&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { useState } from "react";

//FIRST COMPONENT

const LastBench = () =&amp;gt; {
  const [penName, setPenName] = useState("Blue Gel Pen");
  return (
    &amp;lt;&amp;gt;
      &amp;lt;h1&amp;gt;Hello I am Last Bench&amp;lt;/h1&amp;gt;
      &amp;lt;br /&amp;gt;
      &amp;lt;NextBench penName={penName} /&amp;gt;
    &amp;lt;/&amp;gt;
  );
};

//SECOND COMPONENT
const NextBench = ({ penName }) =&amp;gt; {
  return (
    &amp;lt;&amp;gt;
      &amp;lt;h1&amp;gt;Hello I am Next Bench.&amp;lt;/h1&amp;gt;
      &amp;lt;FirstBench penName={penName} /&amp;gt;
    &amp;lt;/&amp;gt;
  );
};

//THIRD COMPONENT
const FirstBench = () =&amp;gt; {
  return (
    &amp;lt;&amp;gt;
      &amp;lt;h1&amp;gt;Hey I am First Bench&amp;lt;/h1&amp;gt;
    &amp;lt;/&amp;gt;
  );
};

export default LastBench;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;We call second component in first component then we pass props with penName And then we repeat all these things in second component. We call the last component, then we pass the props named penName.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { useState } from "react";

//FIRST COMPONENT

const LastBench = () =&amp;gt; {
  const [penName, setPenName] = useState("Blue Gel Pen");
  return (
    &amp;lt;&amp;gt;
      &amp;lt;h1&amp;gt;Hello I am Last Bench&amp;lt;/h1&amp;gt;
      &amp;lt;br /&amp;gt;
      &amp;lt;NextBench penName={penName} /&amp;gt;
    &amp;lt;/&amp;gt;
  );
};

//SECOND COMPONENT
const NextBench = ({ penName }) =&amp;gt; {
  return (
    &amp;lt;&amp;gt;
      &amp;lt;h1&amp;gt;Hello I am Next Bench.&amp;lt;/h1&amp;gt;
      &amp;lt;FirstBench penName={penName} /&amp;gt;
    &amp;lt;/&amp;gt;
  );
};

//THIRD COMPONENT
const FirstBench = ({ penName }) =&amp;gt; {
  return (
    &amp;lt;&amp;gt;
      &amp;lt;h1&amp;gt;Hey I am First Bench&amp;lt;/h1&amp;gt;
      &amp;lt;h4&amp;gt;{penName} Here i got My Pen&amp;lt;/h4&amp;gt;
    &amp;lt;/&amp;gt;
  );
};

export default LastBench;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Now You can see Above code we Finally use props in last component which we declared in first component. In second component we have passed props now we can use that props in third component.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#this-is-how-react-prop-drilling-work"&gt;
  &lt;/a&gt;
  This is how &lt;strong&gt;React Prop Drilling Work&lt;/strong&gt;.
&lt;/h1&gt;

&lt;p&gt;But you can see in the code that the props we use in second components are useless. They don't need that props, but we pass that props for use in the third component.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#its-just-like-you-bother-the-next-bench-to-pass-the-pen-to-the-first-bench"&gt;
  &lt;/a&gt;
  It's just like you bother the next bench to pass the pen to the first bench.
&lt;/h3&gt;

&lt;p&gt;To avoid all this, we use the &lt;strong&gt;Context API&lt;/strong&gt;. It works like  you called the teacher and requested him/her to give this pen to his friend who are sitting on the first bench.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j5Tiw036--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3fgpdzydxf0hjywwjcg4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j5Tiw036--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3fgpdzydxf0hjywwjcg4.png" alt="Api"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#now-lets-refactor-the-above-code-with-the-context-api-and-the-usecontext-hook"&gt;
  &lt;/a&gt;
  Now let's refactor the above code with the Context API and the useContext hook.
&lt;/h3&gt;

&lt;p&gt;We have to create an object with React.createContext() in global. Each context object comes with a provider component that assigns a value to the context object. To add that value we have to pass "value" attribute with them&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { useState, useContext } from "react";

//FIRST COMPONENT
const TeacherContext = React.createContext();
const LastBench = () =&amp;gt; {
  const [penName, setPenName] = useState("Blue Gel Pen");
  return (
    &amp;lt;&amp;gt;
      &amp;lt;h1&amp;gt;Hello I am Last Bench&amp;lt;/h1&amp;gt;
      &amp;lt;br /&amp;gt;
      &amp;lt;TeacherContext.Provider value={{ penName }}&amp;gt;
        &amp;lt;NextBench /&amp;gt;
      &amp;lt;/TeacherContext.Provider&amp;gt;
    &amp;lt;/&amp;gt;
  );
};

//SECOND COMPONENT
const NextBench = () =&amp;gt; {
  return (
    &amp;lt;&amp;gt;
      &amp;lt;h1&amp;gt;Hello I am Next Bench.&amp;lt;/h1&amp;gt;
      &amp;lt;FirstBench /&amp;gt;
    &amp;lt;/&amp;gt;
  );
};

//THIRD COMPONENT
const FirstBench = () =&amp;gt; {

  return (
    &amp;lt;&amp;gt;
      &amp;lt;h1&amp;gt;Hey I am First Bench&amp;lt;/h1&amp;gt;
      &amp;lt;h4&amp;gt;Here i got My Pen&amp;lt;/h4&amp;gt;
    &amp;lt;/&amp;gt;
  );
};

export default LastBench;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;In above code you see that we create an object named TeacherContext with the help of React.createContext() and use that object with Provider component with value attribute in first component, where we create a props with name PenName.&lt;br&gt;
Now we need to pass the props to our last component directly. For that we need "useContext" keyword.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X9PngsdE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ycgl3c8l9d4dwb1toxyo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X9PngsdE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ycgl3c8l9d4dwb1toxyo.png" alt="context"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { useState, useContext } from "react";

//FIRST COMPONENT
const TeacherContext = React.createContext();
const LastBench = () =&amp;gt; {
  const [penName, setPenName] = useState("Blue Gel Pen");
  return (
    &amp;lt;&amp;gt;
      &amp;lt;h1&amp;gt;Hello I am Last Bench&amp;lt;/h1&amp;gt;
      &amp;lt;br /&amp;gt;
      &amp;lt;TeacherContext.Provider value={{ penName }}&amp;gt;
        &amp;lt;NextBench /&amp;gt;
      &amp;lt;/TeacherContext.Provider&amp;gt;
    &amp;lt;/&amp;gt;
  );
};

//SECOND COMPONENT
const NextBench = () =&amp;gt; {
  return (
    &amp;lt;&amp;gt;
      &amp;lt;h1&amp;gt;Hello I am Next Bench.&amp;lt;/h1&amp;gt;
      &amp;lt;FirstBench /&amp;gt;
    &amp;lt;/&amp;gt;
  );
};

//THIRD COMPONENT
const FirstBench = () =&amp;gt; {
  const { penName } = useContext(TeacherContext);
  return (
    &amp;lt;&amp;gt;
      &amp;lt;h1&amp;gt;Hey I am First Bench&amp;lt;/h1&amp;gt;
      &amp;lt;h4&amp;gt;{penName} Here i got My Pen&amp;lt;/h4&amp;gt;
    &amp;lt;/&amp;gt;
  );
};

export default LastBench;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;We can see in the above code that the “useContext” keyword will make the first component props available to the last component and in last we use that prop in our component.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WS9VbdKx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/94nsokjx230nkelfc16o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WS9VbdKx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/94nsokjx230nkelfc16o.png" alt="done"&gt;&lt;/a&gt;&lt;br&gt;
We pass the value of the first component to the last component without disturbing the other components with using &lt;em&gt;useContext&lt;/em&gt; hook.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#lets-connect-with-me"&gt;
  &lt;/a&gt;
  Let's Connect With Me
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nqf4n2YM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jfg11ho53427ouafkqt9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nqf4n2YM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jfg11ho53427ouafkqt9.png" alt="connect"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Thank You for reading this blog 😀&lt;br&gt;
I hope all of you have benefited after reading this blog 🎉&lt;br&gt;
Do Share it with your friends and family and get them benefit from it too 🧡👍&lt;br&gt;
Here You Connect with me &lt;a href="https://connect.rishavraj.codes/"&gt;https://connect.rishavraj.codes/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>webdev</category>
      <category>computerscience</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>Tired of opening manually the same programs every morning ?</title>
      <author>ismael garcia</author>
      <pubDate>Wed, 15 Sep 2021 08:40:50 +0000</pubDate>
      <link>https://dev.to/leamsigc/tired-of-opening-manually-the-same-programs-every-morning-19bn</link>
      <guid>https://dev.to/leamsigc/tired-of-opening-manually-the-same-programs-every-morning-19bn</guid>
      <description>&lt;h1&gt;
  &lt;a href="#tired-of-opening-manually-the-same-programs-every-morning-or-every-time-that-you-switch-projects-running-the-same-command-over-and-over"&gt;
  &lt;/a&gt;
  Tired of opening manually the same programs every morning ? Or every time that you switch projects, running the same command over and over?
&lt;/h1&gt;

&lt;h5&gt;
  &lt;a href="#well-i-was-in-the-same-place-that-you-so-i-did-a-little-research-and-check-what-other-team-member-were-using-to-start-the-day-faster"&gt;
  &lt;/a&gt;
  Well I was in the same place that you, so I did a little research and check what other team member were using to start the day faster
&lt;/h5&gt;

&lt;p&gt;My start of the day is kind of repetitive or let say is almost the same when I start the working day.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open the chat application that i user to communicate with my team&lt;/li&gt;
&lt;li&gt;Open my time tracker application - so i can have a clear view of where my time is going every day.&lt;/li&gt;
&lt;li&gt;Open Firefox with a couple tabs that a need for the day

&lt;ul&gt;
&lt;li&gt;Check emails&lt;/li&gt;
&lt;li&gt;Check the ticket system&lt;/li&gt;
&lt;li&gt;Check my calendar for the day&lt;/li&gt;
&lt;li&gt;See the latest changes that the repo have&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The solution for me was the fallowing&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/tmux-python/tmuxp"&gt;tmuxp&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;tmux session manager&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;INSTALL STEPS&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;pip install --user tmuxp&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Create and &lt;code&gt;yml&lt;/code&gt; file in the &lt;code&gt;~/.config/tmuxp/{filename}.yaml&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Here is mine :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;session_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Start&lt;/span&gt;
&lt;span class="na"&gt;start_directory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;~/&lt;/span&gt; &lt;span class="c1"&gt;# load session relative to config location (project root).&lt;/span&gt;
&lt;span class="na"&gt;before_script&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;echo "Starting of the day"&lt;/span&gt;
&lt;span class="c1"&gt;# shell_command_before:&lt;/span&gt;
&lt;span class="c1"&gt;# - '[ -f .venv/bin/activate ] &amp;amp;&amp;amp; source .venv/bin/activate &amp;amp;&amp;amp; reset'&lt;/span&gt;
&lt;span class="na"&gt;windows&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;window_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Start the day&lt;/span&gt;
    &lt;span class="na"&gt;focus&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
    &lt;span class="na"&gt;layout&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;tiled&lt;/span&gt;
    &lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;main-pane-height&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;35&lt;/span&gt;
    &lt;span class="na"&gt;panes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;shell_command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;firefox&lt;/span&gt; &lt;span class="c1"&gt;#https://leamsigc.com/ add the link to the tab that firefox sould open&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;shell_command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;code&lt;/span&gt; &lt;span class="c1"&gt;# Open vscode&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;bpytop&lt;/span&gt; &lt;span class="c1"&gt;# #https://github.com/aristocratos/bpytop and alternative to htop&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;shell_command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;superproductivity &amp;amp; bg&lt;/span&gt; &lt;span class="c1"&gt;# https://super-productivity.com/ Time tricker&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;element-desktop &amp;amp; bg&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#how-to-user"&gt;
  &lt;/a&gt;
  How to user
&lt;/h3&gt;

&lt;p&gt;Start the day by open the terminal and run the fallowing command&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;tmuxp load start #Remember the filename is start for my side so for you it would depend in the faliname&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;
  &lt;a href="#recommendations"&gt;
  &lt;/a&gt;
  Recommendations
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tmux/tmux"&gt;tmux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aristocratos/bpytop"&gt;bpytop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://super-productivity.com/"&gt;super-productivity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



</description>
      <category>tmux</category>
      <category>shell</category>
      <category>vscode</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Making digital currency; How to create a new cryptocurrency</title>
      <author>ladi ladi</author>
      <pubDate>Wed, 15 Sep 2021 08:33:29 +0000</pubDate>
      <link>https://dev.to/ladiladi123/making-digital-currency-how-to-create-a-new-cryptocurrency-3d98</link>
      <guid>https://dev.to/ladiladi123/making-digital-currency-how-to-create-a-new-cryptocurrency-3d98</guid>
      <description>&lt;p&gt;In recent years, many startups have made a lot of money by creating a digital currency and selling tokens in the initial public offering. Creating a new digital currency may seem like an impossible process to most people. While making digital currency is possible if you have enough knowledge in this field. In this article, we will introduce you to the methods of making a digital currency and at the end, we will answer some common questions in this regard.&lt;/p&gt;

&lt;p&gt;Why are new digital currencies being created?&lt;br&gt;
Even if virtual money has been available to the public for a long time, Bitcoin is the first known and most successful cryptocurrency in the cryptocurrency market. Many cryptocurrencies have been created today, the most popular of which are Bitcoin, Ripple, and Atrium.&lt;/p&gt;

&lt;p&gt;Some unique features make companies and individuals think about creating cryptocurrencies. The most important features of digital currency are cryptography, security and confidentiality, no need to monitor a central institution, transparency of transactions, fast transactions, and ease of transfer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-difference-between-coins-and-digital-currency-tokens"&gt;
  &lt;/a&gt;
  The difference between coins and digital currency tokens
&lt;/h2&gt;

&lt;p&gt;Some people mistakenly use tokens and quins as synonyms. While Token and Quinn are different. The most important thing that distinguishes a token from a quin is the lack of an independent blockchain. Tokens are created on the platform of other blockchains. But Quinn has an independent blockchain.&lt;/p&gt;

&lt;p&gt;Another important difference between coins and tokens is that coins are used to buy and sell and are considered a method of payment. While most tokens can be used for use in an application or as an asset. Bitcoin, Atrium, Ripple, and Light Coin are the most popular coins in the digital currency market. Tetra, Chainlink, Dai, and Avi are also in the category of tokens.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#digital-currency-making-training-introducing-3-methods"&gt;
  &lt;/a&gt;
  Digital currency making training; Introducing 3 methods
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#method-one-create-a-new-digital-currency-by-creating-tokens"&gt;
  &lt;/a&gt;
  Method one: Create a new digital currency by creating tokens
&lt;/h3&gt;

&lt;p&gt;One way to make digital currency is to create tokens. As we have said, a token is a digital currency that does not have its independent blockchain and has been created and launched in the context of another blockchain. For this reason, when a token is generated, there is no need to work on the rules of consensus.&lt;/p&gt;

&lt;p&gt;Making tokens is cost-effective for blockchain developers because they do not need the astronomical cost of designing a blockchain to achieve their goals. Of course, it is also important to note that many digital currencies, when in their infancy, are implemented on another blockchain platform to save costs, but once they have been sufficiently developed, a dedicated blockchain for They are used to launch.&lt;/p&gt;

&lt;p&gt;The token can be created on all blockchain platforms that use smart contracts. Atrium is one of the most popular token-building platforms. At the time of writing, Atrium has hosted more than 80% of the tokens on the market. Bainenschin, Ias, Kazmas, Thezos, and Theron are other common platforms for making tokens.&lt;/p&gt;

&lt;p&gt;Atrium's programming language is solidity. Solidarity uses concepts that exist in other programming languages ​​such as PHP. It is a high-level programming language that has all the capabilities and capabilities needed for blockchain software.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#method-2-create-digital-currency-by-copying-and-modifying-current-blockchains"&gt;
  &lt;/a&gt;
  Method 2: Create digital currency by copying and modifying current blockchains
&lt;/h3&gt;

&lt;p&gt;Another way to build digital currency is to use open-source blockchains. Open source blocks are made available to the public with programming code after they are created.&lt;/p&gt;

&lt;p&gt;Atrium and Bitcoin programming codes are also open source and can be accessed by anyone on GitHub. Many blockchains have been launched following the example of these two digital currencies. For example, by making a few changes to the Bitcoin blockchain, the LightCoin network is created.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#method-3-create-a-digital-currency-by-creating-a-new-blockchain"&gt;
  &lt;/a&gt;
  Method 3: Create a digital currency by creating a new blockchain
&lt;/h3&gt;

&lt;p&gt;Build digital currency through the new blockchain&lt;br&gt;
Building and designing a blockchain network is another way to create a new digital currency. In a blockchain, data is stored in blocks and forms an interconnected chain. This structure creates an immutable storage system. The blocks are connected using hashes.&lt;/p&gt;

&lt;p&gt;Creating a new blockchain requires deep programming knowledge and a lot of time. In the following, the steps of creating a new digital currency through making blockchain are outlined in general.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Select the consensus mechanism&lt;br&gt;
Consensus mechanisms are protocols for verifying transactions performed in blockchain without the need for a third party (intermediary). Proof of work and the stock proof is currently the most well-known and basic blockchain consensus mechanisms.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select the blockchain platform&lt;br&gt;
The correct choice of blockchain platform depends on the consensus mechanism you have chosen. The best blockchain operating systems are:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Ethereum&lt;br&gt;
Waves (WAVES)&lt;br&gt;
Hyperledger Fabric&lt;br&gt;
NEM&lt;br&gt;
IBM blockchain&lt;br&gt;
Nxt (NXT)&lt;br&gt;
HydraChain&lt;br&gt;
BlockStarter&lt;br&gt;
BigChainDB&lt;br&gt;
EOS&lt;br&gt;
Quorum&lt;br&gt;
IOTA&lt;br&gt;
CoinList&lt;br&gt;
MultiChain&lt;br&gt;
Open chain&lt;br&gt;
Chain Core&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Design the nodes&lt;br&gt;
You need to decide how the blockchain works and design the nodes accordingly. For example, will the licenses be private or public? Will the hosting be on-premises web systems or cloud systems?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Specify the blockchain architecture&lt;br&gt;
Before launching a digital currency, you need to be sure of all aspects; Because you can not change multiple blockchain parameters after startup. For example, you need to specify what address blockchain will follow to track exchanges of different cryptocurrencies.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Design the user interface&lt;br&gt;
If your user interface is not good, the cipher project will fail. You need to make sure you are using the latest version of FTP servers, databases, etc.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#frequently-asked-questions-about-making-new-digital-currencies"&gt;
  &lt;/a&gt;
  Frequently Asked Questions about Making New Digital Currencies
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Does making a digital currency always lead to profitability?&lt;br&gt;
No. More than a few hundred thousand digital currencies have been launched on various platforms, many of which have failed. For this reason, all aspects of work must be well weighed before creating a digital currency.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the reason for the failure of some new digital currencies?&lt;br&gt;
Unfortunately, this perspective often causes us to become overwhelmed when it's time to start a new digital currency. That's why we see so many teams being forgotten after spending so much money and energy to create a new digital currency, without gaining popularity. One of the main reasons for their failure is that they failed to do good marketing. Therefore, before any action, the marketing system must be well defined.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the first step in building a new digital currency?&lt;br&gt;
The first step in creating a new digital currency is to have a well-defined digital currency white paper. White paper in the world of digital currencies means a comprehensive and complete report of the problem that the introduced project seeks to solve. Project objectives should be clearly defined within the white paper. A standard and complete white paper include an abstract, introduction, problem definition, product description, technical details, descriptions of the new digital currency, details of the public offering, and introduction of the development team.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How much does it cost to create a new digital currency?&lt;br&gt;
Creating new passwords is not an easy task and will probably require some financial resources; Unless you can handle things like development, documentation, and marketing. The cost of building an encrypted currency depends on several factors, and no specific number can be specified.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#concluding-remarks"&gt;
  &lt;/a&gt;
  Concluding remarks
&lt;/h2&gt;

&lt;p&gt;Creating a new dedicated currency may seem like an attractive and profitable offer at first, but we must not forget that there are many challenges in this direction. For this reason, sufficient market research must be done before any action is taken. On the other hand, the necessary capital must be provided for manufacturing and marketing. Otherwise, the digital currency project is likely to fail in its infancy.&lt;/p&gt;

</description>
      <category>blockchain</category>
    </item>
    <item>
      <title>How CMS Covers The Skill Gap In Web Development
</title>
      <author>Hawley Martin</author>
      <pubDate>Wed, 15 Sep 2021 08:18:20 +0000</pubDate>
      <link>https://dev.to/hawleymartin1/how-cms-covers-the-skill-gap-in-web-development-3k5e</link>
      <guid>https://dev.to/hawleymartin1/how-cms-covers-the-skill-gap-in-web-development-3k5e</guid>
      <description>&lt;p&gt;Content management system plays a vital role in Web development field. The most popular CMS WordPress covers the 40% market share in the web development. There are a-lot of people who don't want to indulge in long term coding process as it's boring for them so they prefer CMS. From mobile responsiveness to attractive site creation, CMS covers all the aspects. &lt;br&gt;
It shows the better idea to beginners that how they play with margins and paddings of the sections and give the idea of the responsiveness. &lt;/p&gt;

</description>
      <category>wordpress</category>
      <category>cms</category>
      <category>webdev</category>
    </item>
    <item>
      <title>The Tacit Knowledge Series</title>
      <author>Matt Thompson</author>
      <pubDate>Wed, 15 Sep 2021 08:04:23 +0000</pubDate>
      <link>https://dev.to/matttea/the-tacit-knowledge-series-54gb</link>
      <guid>https://dev.to/matttea/the-tacit-knowledge-series-54gb</guid>
      <description>&lt;p&gt;From a personal and professional standpoint I'm interested in what is required to keep engineers moving from being experienced and competent to being expert.&lt;/p&gt;

&lt;p&gt;Many views point to &lt;code&gt;tacit knowledge&lt;/code&gt;. But by its very nature tacit knowledge is hard to define and even harder to share.&lt;/p&gt;

&lt;p&gt;Shawn Wang describes the problem perfectly in his excellent book &lt;strong&gt;The Coding Career Handbook&lt;/strong&gt;...&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Much of your learning from Junior to Senior involves gaining tacit knowledge. You can read all the programming books in the world, but, by definition, you are still limited to things that people can write down. That is explicit knowledge, and it is only the tip of the iceberg.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We see tacit knowledge in action every day - when a doctor is able to make a prognosis during a crazy short appointment, or, hopefully more commonly, when an expert engineer looks at a design for all of 5 seconds and can immediately tell you her concerns or questions.&lt;/p&gt;

&lt;p&gt;In trying to understand how they reached these conclusions so quickly, explanations might start with some principles, then move on to the exceptions and caveats to these principles, and may often ends with something like "&lt;em&gt;it just feels right&lt;/em&gt;". It's these natural judgements that are made that can't be simply explained so that others could reach the exact same outcome.&lt;/p&gt;

&lt;p&gt;For an excellent breakdown of this, with detailed examples in software engineering and other knowledge fields, I highly recommend Cedric Chin's Commonplace article - &lt;a href="https://commoncog.com/blog/tacit-knowledge-is-a-real-thing/"&gt;Tacit Knowledge is a Real Thing&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;So I want to tap into the tacit knowledge of those around me. I know I can't replace gaining the experience that will build this knowledge myself, but I hope that by being in tune with it I can see the situations, ask the questions, and hopefully understand the thought processes behind these judgements.&lt;/p&gt;

&lt;p&gt;My plan is to pick up on scenarios where experienced engineers might have taken a path through a situation or problem that wasn't obvious to me, pin them down to walk through how they approached it; what experience, principles and ideas they drew on, and then write it down and share it here...&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#the-tacit-knowledge-series-so-far"&gt;
  &lt;/a&gt;
  The Tacit Knowledge Series so far
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://logical-progression.matttea.com/post/tacit-vulnerabilities/"&gt;Dependency vulnerabilities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://logical-progression.matttea.com/post/tacit-bigger-picture-recall/"&gt;Bigger picture recall&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Originally posted on &lt;a href="https://logical-progression.matttea.com"&gt;https://logical-progression.matttea.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>learning</category>
    </item>
    <item>
      <title>how to deploy a graphQL server with docker and fly</title>
      <author>anthony-campolo</author>
      <pubDate>Wed, 15 Sep 2021 08:04:14 +0000</pubDate>
      <link>https://dev.to/ajcwebdev/how-to-deploy-a-graphql-server-with-docker-and-fly-1e8b</link>
      <guid>https://dev.to/ajcwebdev/how-to-deploy-a-graphql-server-with-docker-and-fly-1e8b</guid>
      <description>&lt;p&gt;&lt;a href="https://github.com/graphql/express-graphql/"&gt;Express GraphQL&lt;/a&gt; is a library for building production ready GraphQL HTTP middleware. Despite the emphasis on Express in the repo name, you can create a GraphQL HTTP server with any HTTP web framework that supports connect styled middleware. This includes &lt;a href="https://github.com/senchalabs/connect"&gt;Connect&lt;/a&gt; itself, &lt;a href="https://expressjs.com"&gt;Express&lt;/a&gt; and &lt;a href="http://restify.com/"&gt;Restify&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt; is a set of tools that use OS-level virtualization to deliver software in isolated packages called containers. Containers bundle their own software, libraries and configuration files. &lt;a href="https://fly.io/"&gt;Fly&lt;/a&gt; is a platform for full stack applications and databases that need to run globally. You can run arbitrary Docker containers and host popular databases like Postgres.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outline"&gt;
  &lt;/a&gt;
  Outline
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create a Node project with a GraphQL Express server

&lt;ul&gt;
&lt;li&gt;Create project, install dependencies, and include &lt;code&gt;.gitignore&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Create &lt;code&gt;graphqlHTTP&lt;/code&gt; server in &lt;code&gt;index.js&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Run server and execute test query&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Create a container image

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Dockerfile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.dockerignore&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Build your image with &lt;code&gt;docker build&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;List Docker images with &lt;code&gt;docker images&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Run the Docker container with &lt;code&gt;docker run&lt;/code&gt; and execute test query

&lt;ul&gt;
&lt;li&gt;List containers with &lt;code&gt;docker ps&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Print the output of your app with &lt;code&gt;docker logs&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Docker Compose file

&lt;ul&gt;
&lt;li&gt;Create and start containers with &lt;code&gt;docker compose up&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Publish to GitHub Container Registry

&lt;ul&gt;
&lt;li&gt;Initialize Git, create a blank repository, and push to newly created repo&lt;/li&gt;
&lt;li&gt;Login to &lt;code&gt;ghcr.io&lt;/code&gt; with &lt;code&gt;docker login&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Tag image with &lt;code&gt;docker tag&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Push to registry with &lt;code&gt;docker push&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Pull your image with &lt;code&gt;docker pull&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Deploy to Fly

&lt;ul&gt;
&lt;li&gt;Install and authenticate &lt;code&gt;flyctl&lt;/code&gt; CLI&lt;/li&gt;
&lt;li&gt;Launch app on Fly with &lt;code&gt;fly launch&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Deploy application with &lt;code&gt;fly deploy&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Show the application's current status with &lt;code&gt;fly status&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#1-create-a-node-project-with-a-graphql-express-server"&gt;
  &lt;/a&gt;
  1. Create a Node project with a GraphQL Express server
&lt;/h2&gt;

&lt;p&gt;This article will demonstrate how to create a Docker container with Express GraphQL. The code for this article is available &lt;a href="https://github.com/ajcwebdev/ajcwebdev-express-graphql-docker"&gt;on my GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-project-install-dependencies-and-include-raw-gitignore-endraw-"&gt;
  &lt;/a&gt;
  Create project, install dependencies, and include &lt;code&gt;.gitignore&lt;/code&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;ajcwebdev-express-graphql-docker
&lt;span class="nb"&gt;cd &lt;/span&gt;ajcwebdev-express-graphql-docker
npm init &lt;span class="nt"&gt;-y&lt;/span&gt;
npm i express express-graphql graphql
&lt;span class="nb"&gt;touch &lt;/span&gt;index.js Dockerfile .dockerignore docker-compose.yml
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'node_modules\n.DS_Store\npackage-lock.json'&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; .gitignore
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-raw-graphqlhttp-endraw-server-in-raw-indexjs-endraw-"&gt;
  &lt;/a&gt;
  Create &lt;code&gt;graphqlHTTP&lt;/code&gt; server in &lt;code&gt;index.js&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Enter the following code into &lt;code&gt;index.js&lt;/code&gt; to import the &lt;code&gt;graphqlHTTP&lt;/code&gt; function from &lt;code&gt;express-graphql&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// index.js&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;graphqlHTTP&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express-graphql&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;buildSchema&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;graphql&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;buildSchema&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`type Query { hello: String }`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rootValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello from Express GraphQL!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/graphql&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;graphqlHTTP&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;rootValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;graphiql&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;headerEditorEnabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8080&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0.0.0.0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Running Express GraphQL server at http://localhost:8080/graphql&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;graphqlHTTP&lt;/code&gt; accepts a wide range of options, some of the most common include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;code&gt;schema&lt;/code&gt;&lt;/strong&gt; - A &lt;code&gt;GraphQLSchema&lt;/code&gt; instance from &lt;code&gt;GraphQL.js&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;code&gt;rootValue&lt;/code&gt;&lt;/strong&gt; - A value to pass as the &lt;code&gt;rootValue&lt;/code&gt; to the &lt;code&gt;execute()&lt;/code&gt; function&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;code&gt;graphiql&lt;/code&gt;&lt;/strong&gt; - If passed &lt;code&gt;true&lt;/code&gt; or an options object it will present GraphiQL when the GraphQL endpoint is loaded in a browser&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;code&gt;headerEditorEnabled&lt;/code&gt;&lt;/strong&gt; - Optional boolean which enables the header editor when &lt;code&gt;true&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#run-server-and-execute-test-query"&gt;
  &lt;/a&gt;
  Run server and execute test query
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;node index.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Running Express GraphQL server at http://localhost:8080/graphql
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;express-graphql&lt;/code&gt; will accept requests with the parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;code&gt;query&lt;/code&gt;&lt;/strong&gt; - A string GraphQL document to be executed&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;code&gt;variables&lt;/code&gt;&lt;/strong&gt; - The runtime values to use for any GraphQL query variables as a JSON object&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;code&gt;operationName&lt;/code&gt;&lt;/strong&gt; - Specifies which operation should be executed if the provided &lt;code&gt;query&lt;/code&gt; contains multiple named operations
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;HELLO_QUERY&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--colpM-W2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6tb9ltduj8k6lfiwwwb9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--colpM-W2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6tb9ltduj8k6lfiwwwb9.png" alt="01-express-graphql-hello-localhost-8080"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;--request&lt;/span&gt; POST &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--url&lt;/span&gt; http://localhost:8080/graphql &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--header&lt;/span&gt; &lt;span class="s1"&gt;'content-type: application/json'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--data&lt;/span&gt; &lt;span class="s1"&gt;'{"query":"{ hello }"}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-create-a-container-image"&gt;
  &lt;/a&gt;
  2. Create a container image
&lt;/h2&gt;

&lt;p&gt;We need to build a Docker image of your app to run this app inside a Docker container.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-dockerfile-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;Dockerfile&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Docker can build images automatically by reading the instructions from a &lt;a href="https://docs.docker.com/engine/reference/builder/"&gt;&lt;code&gt;Dockerfile&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;Dockerfile&lt;/code&gt; is a text document that contains all the commands a user could call on the command line to assemble an image. Using &lt;code&gt;docker build&lt;/code&gt; users can create an automated build that executes several command-line instructions in succession.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:14-alpine&lt;/span&gt;
&lt;span class="k"&gt;LABEL&lt;/span&gt;&lt;span class="s"&gt; org.opencontainers.image.source https://github.com/ajcwebdev/ajcwebdev-express-graphql-docker&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /usr/src/app&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; package*.json ./&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;npm i
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . ./&lt;/span&gt;
&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 8080&lt;/span&gt;
&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; [ "node", "index.js" ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-dockerignore-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;.dockerignore&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Before the docker CLI sends the context to the docker daemon, it looks for a file named &lt;code&gt;.dockerignore&lt;/code&gt; in the root directory of the context. If this file exists, the CLI modifies the context to exclude files and directories that match patterns in it. This helps avoid sending large or sensitive files and directories to the daemon.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node_modules
Dockerfile
.dockerignore
.git
.gitignore
npm-debug.log
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will prevent your local modules and debug logs from being copied onto your Docker image and possibly overwriting modules installed within your image.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#build-your-image-with-raw-docker-build-endraw-"&gt;
  &lt;/a&gt;
  Build your image with &lt;code&gt;docker build&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The &lt;a href="https://docs.docker.com/engine/reference/commandline/build/"&gt;&lt;code&gt;docker build&lt;/code&gt;&lt;/a&gt; command builds an image from a Dockerfile and a "context". A build’s context is the set of files located in the specified &lt;code&gt;PATH&lt;/code&gt; or &lt;code&gt;URL&lt;/code&gt;. The &lt;code&gt;URL&lt;/code&gt; parameter can refer to three kinds of resources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Git repositories&lt;/li&gt;
&lt;li&gt;Pre-packaged tarball contexts&lt;/li&gt;
&lt;li&gt;Plain text files
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker build &lt;span class="nb"&gt;.&lt;/span&gt; &lt;span class="nt"&gt;-t&lt;/span&gt; ajcwebdev/ajcwebdev-express-graphql-docker
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;-t&lt;/code&gt; flag lets you tag your image so it's easier to find later using the &lt;code&gt;docker images&lt;/code&gt; command.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#list-docker-images-with-raw-docker-images-endraw-"&gt;
  &lt;/a&gt;
  List Docker images with &lt;code&gt;docker images&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Your image will now be listed by Docker. The &lt;a href="https://docs.docker.com/engine/reference/commandline/images/"&gt;&lt;code&gt;docker images&lt;/code&gt;&lt;/a&gt; command will list all top level images, their repository and tags, and their size.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker images
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;REPOSITORY
ajcwebdev/ajcwebdev-express-graphql-docker

TAG
latest

IMAGE ID
d833d418e179

CREATED
About a minute ago

SIZE
122MB
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-run-the-docker-container-with-raw-docker-run-endraw-and-execute-test-query"&gt;
  &lt;/a&gt;
  3. Run the Docker container with &lt;code&gt;docker run&lt;/code&gt; and execute test query
&lt;/h2&gt;

&lt;p&gt;Docker runs processes in isolated containers. A container is a process which runs on a host. The host may be local or remote. When an operator executes &lt;a href="https://docs.docker.com/engine/reference/run/"&gt;&lt;code&gt;docker run&lt;/code&gt;&lt;/a&gt;, the container process that runs is isolated in that it has its own file system, its own networking, and its own isolated process tree separate from the host.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;-p&lt;/span&gt; 49160:8080 &lt;span class="nt"&gt;-d&lt;/span&gt; ajcwebdev/ajcwebdev-express-graphql-docker
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;-d&lt;/code&gt; runs the container in detached mode, leaving the container running in the background. The &lt;code&gt;-p&lt;/code&gt; flag redirects a public port to a private port inside the container.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#list-containers-with-raw-docker-ps-endraw-"&gt;
  &lt;/a&gt;
  List containers with &lt;code&gt;docker ps&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;To test your app, get the port of your app that Docker mapped:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker ps
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;CONTAINER ID
4bdd108175ab

IMAGE
ajcwebdev/ajcwebdev-express-graphql-docker

COMMAND
"docker-entrypoint.s…"

CREATED
16 seconds ago

STATUS
Up 14 seconds

PORTS
0.0.0.0:49160-&amp;gt;8080/tcp, :::49160-&amp;gt;8080/tcp

NAMES
silly_greider
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#print-the-output-of-your-app-with-raw-docker-logs-endraw-"&gt;
  &lt;/a&gt;
  Print the output of your app with &lt;code&gt;docker logs&lt;/code&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker logs &amp;lt;container &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Running Express GraphQL server at http://localhost:8080/graphql
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Docker mapped the &lt;code&gt;8080&lt;/code&gt; port inside of the container to the port &lt;code&gt;49160&lt;/code&gt; on your machine. Open &lt;a href="http://localhost:49160/graphql"&gt;localhost:49160/graphql&lt;/a&gt; and send a hello query.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;HELLO_QUERY&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ucRdohkF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bpim4bg6oi7z09r4w3hw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ucRdohkF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bpim4bg6oi7z09r4w3hw.png" alt="02-localhost-49160-graphql"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;--request&lt;/span&gt; POST &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--url&lt;/span&gt; http://localhost:49160/graphql &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--header&lt;/span&gt; &lt;span class="s1"&gt;'content-type: application/json'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--data&lt;/span&gt; &lt;span class="s1"&gt;'{"query":"{ hello }"}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-docker-compose-file"&gt;
  &lt;/a&gt;
  4. Docker Compose file
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://docs.docker.com/compose/"&gt;Compose&lt;/a&gt; is a tool for defining and running multi-container Docker applications. After configuring your application’s services with a YAML file, you can create and start all your services with a single command. Define the services that make up your app in &lt;code&gt;docker-compose.yml&lt;/code&gt; so they can be run together in an isolated environment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;3.9"&lt;/span&gt;
&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;web&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;49160:8080"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-and-start-containers-with-raw-docker-compose-up-endraw-"&gt;
  &lt;/a&gt;
  Create and start containers with &lt;code&gt;docker compose up&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Stop your currently running container before running the next command or the port will be in use.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker stop &amp;lt;container &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;docker compose up&lt;/code&gt; command aggregates the output of each container. It builds, (re)creates, starts, and attaches to containers for a service.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker compose up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Attaching to web_1
web_1  | Running Express GraphQL server at http://localhost:8080/graphql
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-publish-to-github-container-registry"&gt;
  &lt;/a&gt;
  5. Publish to GitHub Container Registry
&lt;/h2&gt;

&lt;p&gt;We can publish this image to the GitHub Container Registry with GitHub Packages. This will require pushing our project to a GitHub repository.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#initialize-git-create-a-blank-repository-and-push-to-newly-created-repo"&gt;
  &lt;/a&gt;
  Initialize Git, create a blank repository, and push to newly created repo
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git init
git add &lt;span class="nb"&gt;.&lt;/span&gt;
git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"A container for my graph"&lt;/span&gt;
gh repo create ajcwebdev-express-graphql-docker
git push &lt;span class="nt"&gt;-u&lt;/span&gt; origin main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://docs.github.com/en/packages/learn-github-packages/introduction-to-github-packages"&gt;GitHub Packages&lt;/a&gt; is a platform for hosting and managing packages that combines your source code and packages in one place including containers and other dependencies. You can integrate GitHub Packages with GitHub APIs, GitHub Actions, and webhooks to create an end-to-end DevOps workflow that includes your code, CI, and deployment solutions.&lt;/p&gt;

&lt;p&gt;GitHub Packages offers different package registries for commonly used package managers, such as npm, RubyGems, Maven, Gradle, and Docker. GitHub's &lt;a href="https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry"&gt;Container registry&lt;/a&gt; is optimized for containers and supports Docker and OCI images.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#login-to-raw-ghcrio-endraw-with-raw-docker-login-endraw-"&gt;
  &lt;/a&gt;
  Login to &lt;code&gt;ghcr.io&lt;/code&gt; with &lt;code&gt;docker login&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;To login, create a &lt;a href="https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token"&gt;PAT (personal access token)&lt;/a&gt; with the ability to read, write, and delete packages and include it instead of &lt;code&gt;xxxx&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;CR_PAT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;xxxx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Login with your own username in place of &lt;code&gt;ajcwebdev&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$CR_PAT&lt;/span&gt; | docker login ghcr.io &lt;span class="nt"&gt;-u&lt;/span&gt; ajcwebdev &lt;span class="nt"&gt;--password-stdin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#tag-image-with-raw-docker-tag-endraw-"&gt;
  &lt;/a&gt;
  Tag image with &lt;code&gt;docker tag&lt;/code&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker tag ajcwebdev/ajcwebdev-express-graphql-docker ghcr.io/ajcwebdev/ajcwebdev-express-graphql-docker
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#push-to-registry-with-raw-docker-push-endraw-"&gt;
  &lt;/a&gt;
  Push to registry with &lt;code&gt;docker push&lt;/code&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker push ghcr.io/ajcwebdev/ajcwebdev-express-graphql-docker:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#pull-your-image-with-raw-docker-pull-endraw-"&gt;
  &lt;/a&gt;
  Pull your image with &lt;code&gt;docker pull&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;To test that our project has a docker image published to a public registry, pull it from your local development environment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker pull ghcr.io/ajcwebdev/ajcwebdev-express-graphql-docker
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Using default tag: latest
latest: Pulling from ajcwebdev/ajcwebdev-express-graphql-docker
Digest: sha256:3ff756a3310fcfee7be355e86a6b8f6c7882f94c3a767b1f614f274ae1c82ba4
Status: Image is up to date for ghcr.io/ajcwebdev/ajcwebdev-express-graphql-docker:latest
ghcr.io/ajcwebdev/ajcwebdev-express-graphql-docker:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can view this published container &lt;a href="https://github.com/users/ajcwebdev/packages/container/package/ajcwebdev-express-graphql-docker"&gt;on my GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-deploy-to-fly"&gt;
  &lt;/a&gt;
  6. Deploy to Fly
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#install-and-authenticate-raw-flyctl-endraw-cli"&gt;
  &lt;/a&gt;
  Install and authenticate &lt;code&gt;flyctl&lt;/code&gt; CLI
&lt;/h3&gt;

&lt;p&gt;You can download the CLI on &lt;a href="https://fly.io/docs/getting-started/installing-flyctl/"&gt;Mac, Linux, or Windows&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;brew &lt;span class="nb"&gt;install &lt;/span&gt;superfly/tap/flyctl
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you are a new user you can create an account with &lt;code&gt;fly auth signup&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;fly auth signup
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will also be prompted for credit card payment information, required for charges outside the free plan on Fly. See &lt;a href="https://fly.io/docs/about/pricing"&gt;Pricing&lt;/a&gt; for more details. If you already have an account you can login with &lt;code&gt;fly auth login&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;fly auth login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#launch-app-on-fly-with-raw-fly-launch-endraw-"&gt;
  &lt;/a&gt;
  Launch app on Fly with &lt;code&gt;fly launch&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Run &lt;code&gt;fly launch&lt;/code&gt; in the directory with your source code to configure your app for deployment. This will create and configure a fly app by inspecting your source code and prompting you to deploy.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;fly launch &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--name&lt;/span&gt; ajcwebdev-express-graphql-docker &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--region&lt;/span&gt; sjc
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Creating app in /Users/ajcwebdev/ajcwebdev-express-graphql-docker
Scanning source code
Detected Dockerfile app
Automatically selected personal organization: Anthony Campolo
Created app ajcwebdev-express-graphql-docker in organization personal
Wrote config file fly.toml
Your app is ready. Deploy with `flyctl deploy`
? Would you like to deploy now? No
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This creates a &lt;code&gt;fly.toml&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight toml"&gt;&lt;code&gt;&lt;span class="py"&gt;app&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"ajcwebdev-express-graphql-docker"&lt;/span&gt;

&lt;span class="py"&gt;kill_signal&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"SIGINT"&lt;/span&gt;
&lt;span class="py"&gt;kill_timeout&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="py"&gt;processes&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="nn"&gt;[env]&lt;/span&gt;

&lt;span class="nn"&gt;[experimental]&lt;/span&gt;
  &lt;span class="py"&gt;allowed_public_ports&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
  &lt;span class="py"&gt;auto_rollback&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;

&lt;span class="nn"&gt;[[services]]&lt;/span&gt;
  &lt;span class="py"&gt;http_checks&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
  &lt;span class="py"&gt;internal_port&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8080&lt;/span&gt;
  &lt;span class="py"&gt;processes&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;["app"]&lt;/span&gt;
  &lt;span class="py"&gt;protocol&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"tcp"&lt;/span&gt;
  &lt;span class="py"&gt;script_checks&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="nn"&gt;[services.concurrency]&lt;/span&gt;
  &lt;span class="py"&gt;hard_limit&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;
  &lt;span class="py"&gt;soft_limit&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
  &lt;span class="py"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"connections"&lt;/span&gt;

&lt;span class="nn"&gt;[[services.ports]]&lt;/span&gt;
  &lt;span class="py"&gt;handlers&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;["http"]&lt;/span&gt;
  &lt;span class="py"&gt;port&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;

&lt;span class="nn"&gt;[[services.ports]]&lt;/span&gt;
  &lt;span class="py"&gt;handlers&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"tls"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"http"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="py"&gt;port&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;443&lt;/span&gt;

&lt;span class="nn"&gt;[[services.tcp_checks]]&lt;/span&gt;
  &lt;span class="py"&gt;grace_period&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"1s"&lt;/span&gt;
  &lt;span class="py"&gt;interval&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"15s"&lt;/span&gt;
  &lt;span class="py"&gt;restart_limit&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
  &lt;span class="py"&gt;timeout&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"2s"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add the following &lt;code&gt;PORT&lt;/code&gt; number under &lt;code&gt;env&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight toml"&gt;&lt;code&gt;&lt;span class="nn"&gt;[env]&lt;/span&gt;
  &lt;span class="py"&gt;PORT&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8080&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#deploy-application-with-raw-fly-deploy-endraw-"&gt;
  &lt;/a&gt;
  Deploy application with &lt;code&gt;fly deploy&lt;/code&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;fly deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#show-the-applications-current-status-with-raw-fly-status-endraw-"&gt;
  &lt;/a&gt;
  Show the application's current status with &lt;code&gt;fly status&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Status includes application details, tasks, most recent deployment details and in which regions it is currently allocated.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;fly status
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;App
  Name     = ajcwebdev-express-graphql-docker          
  Owner    = personal                                  
  Version  = 0                                         
  Status   = running                                   
  Hostname = ajcwebdev-express-graphql-docker.fly.dev  

Deployment Status
  ID          = fd7bf249-c37f-7b16-5643-9bfd104a2077         
  Version     = v0                                           
  Status      = successful                                   
  Description = Deployment completed successfully            
  Instances   = 1 desired, 1 placed, 1 healthy, 0 unhealthy  

Instances
ID       TASK VERSION REGION DESIRED STATUS  HEALTH CHECKS      RESTARTS CREATED   
9eb4eaf9 app  0       sjc    run     running 1 total, 1 passing 0        1m15s ago
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Visit &lt;a href="https://ajcwebdev-express-graphql-docker.fly.dev/graphql"&gt;ajcwebdev-express-graphql-docker.fly.dev/graphql&lt;/a&gt; to see the site and run a test query.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;HELLO_QUERY&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g4MpUeuQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e7ab8m96y7j8frtxnwg8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g4MpUeuQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e7ab8m96y7j8frtxnwg8.png" alt="03-ajcwebdev-express-graphql-docker-fly-dev-hello"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;--request&lt;/span&gt; POST &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--url&lt;/span&gt; https://ajcwebdev-express-graphql-docker.fly.dev/graphql &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--header&lt;/span&gt; &lt;span class="s1"&gt;'content-type: application/json'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--data&lt;/span&gt; &lt;span class="s1"&gt;'{"query":"{ hello }"}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>docker</category>
      <category>graphql</category>
      <category>express</category>
      <category>fly</category>
    </item>
    <item>
      <title>Introduction To Web Sockets</title>
      <author>Hannah</author>
      <pubDate>Wed, 15 Sep 2021 08:03:52 +0000</pubDate>
      <link>https://dev.to/earthcomfy/introduction-to-web-sockets-3n7m</link>
      <guid>https://dev.to/earthcomfy/introduction-to-web-sockets-3n7m</guid>
      <description>&lt;p&gt;Hello guys, so I was thinking of using Django to add a web socket support to a project am working on then I came across &lt;a href="https://channels.readthedocs.io/en/stable/"&gt;&lt;code&gt;django channels&lt;/code&gt;&lt;/a&gt;, which is a project that can support the web socket protocol. &lt;/p&gt;

&lt;p&gt;But before showing you guys how we can use Django Channels to create real-time applications that go beyond the standard HTTP protocol, I thought about giving a conceptual introduction about web sockets together with an explanation about the &lt;code&gt;WebSocket&lt;/code&gt; API.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--erotv3wA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzq0d9ojl8b6up4686qs.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--erotv3wA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzq0d9ojl8b6up4686qs.gif" alt="Moving On..."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;In a real-time application, there is a continuous exchange of information between the client and the server. The HTTP protocol can't fulfill the needs of these applications because after the initial request is complete, the server-client communication is closed and to get an update, the client has to establish the connection again. This is where web sockets come into play.&lt;/p&gt;

&lt;p&gt;The increasing demand for real-time applications can be achieved with web sockets, a dual-channel full duplex bidirectional protocol which maintains a persistent, open connection between client and server. Don't worry I know it's a mouthful of words, so let's break it down.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Dual-channel full-duplex bidirectional communication&lt;/em&gt; simply means that the client and the server can talk in real-time without having to continuously make requests, and contrary to HTTP where request is always initiated by the client, and response is processed by the server, with web sockets the communication can go either way i.e. from server to client or client to server.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#main-characteristics-of-web-socket"&gt;
  &lt;/a&gt;
  Main characteristics of web socket:
&lt;/h4&gt;

&lt;p&gt;It is an HTTP upgrade. The following occurs in a web socket connection:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First is what we call &lt;strong&gt;The Client Handshake Request&lt;/strong&gt; which means that the client sends a standard HTTP request with headers to the server for an upgrade from HTTP to web sockets.&lt;/li&gt;
&lt;li&gt;Second is &lt;strong&gt;The Web Socket Handshake&lt;/strong&gt;. Here the server listens for incoming socket connections using that same TCP connection that is originally established by HTTP. The handshake is the bridge from HTTP to web sockets. &lt;/li&gt;
&lt;li&gt;Third is &lt;strong&gt;The Server Handshake Response&lt;/strong&gt;. Now, if all the terms are met, the server agrees to upgrade and sends back a response indicating that the protocol will be changed to web socket. The server also maintains the originally established TCP connection throughout the lifecycle of the web socket connection.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Notice&lt;/strong&gt; that headers are sent only once, and that is during the upgrade request.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, using the concept of web sockets we can build projects that require ongoing updates, and fast reaction time. As an example consider a chat application that allows multiple users to chat in real-time.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If Web Sockets are used, users can exchange messages in real-time. For instance, someone sends a message to a group chat then the server gets that message and will send it to everyone in that same connection. &lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#websocket-client-application"&gt;
  &lt;/a&gt;
  WebSocket client application
&lt;/h3&gt;

&lt;p&gt;WebSocket client applications use the &lt;code&gt;WebSocket&lt;/code&gt; API to communicate with WebSocket servers using the WebSocket protocol.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;WebSocket&lt;/code&gt; API makes it possible for a two-way interactive communication between the client and the server.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To open a web socket connection, we first need to make an object of &lt;code&gt;WebSocket&lt;/code&gt; API which will then be used to send and receive data on the established connection.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WebSocket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Alright, after the socket instance is created we can use different event listeners to perform certain tasks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WebSocket event handlers&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;socket.open()&lt;/code&gt; - Called when a connection is established.&lt;br&gt;
&lt;code&gt;socket.onmessage()&lt;/code&gt; - Called when a message is received from the server.&lt;br&gt;
&lt;code&gt;socket.onclose()&lt;/code&gt; - Called when the connection is closed.&lt;br&gt;
&lt;code&gt;socket.error()&lt;/code&gt; - Called when an error occurs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WebSocket Methods&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;socket.send()&lt;/code&gt; - Sends data to the server using the established connection. We can format the data as JSON to be sent over to the server.&lt;br&gt;
&lt;code&gt;socket.close()&lt;/code&gt; - Terminates the connection.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#websocket-server-application"&gt;
  &lt;/a&gt;
  WebSocket server application
&lt;/h3&gt;

&lt;p&gt;A WebSocket server is an application listening on any port of a TCP server that follows a specific protocol. As I mentioned in the beginning of this tutorial, we can utilize Django Channels to build real time apps that support web sockets.&lt;/p&gt;

&lt;p&gt;In an upcoming tutorial, we will see in detail how all this works together, so stay tuned.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>django</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>These 2 GitHub Tools Left Me Awestruck (Really, No Exaggeration) </title>
      <author>Mohmed Ishak</author>
      <pubDate>Wed, 15 Sep 2021 07:59:50 +0000</pubDate>
      <link>https://dev.to/ishakmohmed/these-2-github-tools-left-me-awestruck-really-no-exaggeration-3ag9</link>
      <guid>https://dev.to/ishakmohmed/these-2-github-tools-left-me-awestruck-really-no-exaggeration-3ag9</guid>
      <description>&lt;p&gt;Hello, devs! GitHub is cool but it can be better. This is a super short article because honestly, no one likes to read a long one, so I better get right to the point.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-install-a-code-tree-extension"&gt;
  &lt;/a&gt;
  [1] Install A Code Tree Extension
&lt;/h3&gt;

&lt;p&gt;Install Octotree Chrome extension from Chrome Web Store (&lt;a href="https://chrome.google.com/webstore/detail/octotree-github-code-tree/bkhaagjahfmjljalopjnoealnfndnagc"&gt;https://chrome.google.com/webstore/detail/octotree-github-code-tree/bkhaagjahfmjljalopjnoealnfndnagc&lt;/a&gt;). Using this tool, you'll have a code tree pinned to the left of your screen whenever you check out any repo. With this, you'll always have a quick overview of the folder structure of any repo regardless of which exact file you're currently looking at. &lt;br&gt;
&lt;strong&gt;&lt;em&gt;Without Octotree&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gv6Ui7FD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eaz0tkdt5e18j02up3qg.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gv6Ui7FD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eaz0tkdt5e18j02up3qg.PNG" alt="Mohmed Ishak"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;With Octotree&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XuVDhNK3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rsl4cbmb4fy8a2e8itvv.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XuVDhNK3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rsl4cbmb4fy8a2e8itvv.PNG" alt="Mohmed Ishak"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-write-cool-readmes-effortlessly"&gt;
  &lt;/a&gt;
  [2] Write Cool READMEs Effortlessly
&lt;/h3&gt;

&lt;p&gt;Use this site (&lt;a href="https://readme.so/editor"&gt;https://readme.so/editor&lt;/a&gt;) and write amazing READMEs using WYSIWYG editor without knowing anything about markdowns.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YqPlIrMM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b8xis0ej57lg6en05nz1.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YqPlIrMM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b8xis0ej57lg6en05nz1.PNG" alt="Mohmed Ishak"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
    </item>
    <item>
      <title>5 Ways To Host Your Applications</title>
      <author>Abdullah Furkan Özbek</author>
      <pubDate>Wed, 15 Sep 2021 07:46:38 +0000</pubDate>
      <link>https://dev.to/afozbek/5-ways-to-host-your-applications-4d77</link>
      <guid>https://dev.to/afozbek/5-ways-to-host-your-applications-4d77</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-surge"&gt;
  &lt;/a&gt;
  1. Surge
&lt;/h2&gt;

&lt;p&gt;Surge is a cloud platform for hosting static websites, which is extremely simple to use but offers customization options for those who need them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WsNkHn2J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hho9fxkum66yyk9zxh10.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WsNkHn2J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hho9fxkum66yyk9zxh10.png" alt="Surge"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-firebase"&gt;
  &lt;/a&gt;
  2. Firebase
&lt;/h2&gt;

&lt;p&gt;Firebase Hosting is a fully managed hosting service for static and dynamic content as well as microservices.&lt;/p&gt;

&lt;p&gt;The service is backed by SSD storage and a global CDN (content delivery network).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H5AAjJfN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3v6uwzvh0pgc1s4chfjn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H5AAjJfN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3v6uwzvh0pgc1s4chfjn.png" alt="Firebase"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-vercel"&gt;
  &lt;/a&gt;
  3. Vercel
&lt;/h2&gt;

&lt;p&gt;Vercel is a hosting platform for frontend frameworks. After you create a pr it will automatically create an environment for you so that the team can check it before merging it. So useful!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W3vdmZzx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gfyqkw4t60q9n05elite.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W3vdmZzx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gfyqkw4t60q9n05elite.png" alt="Vercel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-github-pages"&gt;
  &lt;/a&gt;
  4. Github Pages
&lt;/h2&gt;

&lt;p&gt;GitHub Pages is a static site hosting service that takes HTML, CSS, and JavaScript files straight from a repository on GitHub, optionally runs the files through a build process and publishes a website&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qZvG8XM4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzaqtfmk4u0c73ghh8x1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qZvG8XM4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzaqtfmk4u0c73ghh8x1.png" alt="Github Pages"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-netlify"&gt;
  &lt;/a&gt;
  5. Netlify
&lt;/h2&gt;

&lt;p&gt;Netlify is a web hosting and automation platform that accelerates &lt;strong&gt;development productivity&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I deployed most of my projects to Netlify because it is so easy to use, it is supporting custom domains, and much more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mWb2kIts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r1103jdsiispz4g15azh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mWb2kIts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r1103jdsiispz4g15azh.png" alt="Netlify"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/suhailkakar/6-ways-to-host-your-react-js-app-for-free-2163"&gt;6 Ways to Host Your React JS App For Free&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>programming</category>
      <category>100daysofcode</category>
    </item>
  </channel>
</rss>
