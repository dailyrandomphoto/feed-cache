<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Operating Systems: Program Vs Process, What's the difference?</title>
      <author>Kathan Vakharia</author>
      <pubDate>Mon, 02 Aug 2021 16:52:43 +0000</pubDate>
      <link>https://dev.to/kathanvakharia/operating-systems-program-vs-process-what-s-the-difference-11mf</link>
      <guid>https://dev.to/kathanvakharia/operating-systems-program-vs-process-what-s-the-difference-11mf</guid>
      <description>&lt;h2&gt;
  &lt;a href="#a-text-book-definition"&gt;
  &lt;/a&gt;
  A Text Book Definition
&lt;/h2&gt;

&lt;p&gt;A program in itself is just a text i.e. a &lt;em&gt;passive&lt;/em&gt; entity. &lt;/p&gt;

&lt;p&gt;When you run a program that is open an executable( .exe or a.out ), O.S creates an &lt;em&gt;active&lt;/em&gt; entity known as process. A process is created for the program execution. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;üí°&lt;strong&gt;A process is a program in execution&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Still, confused? Let's take an example to make this distinction super obvious.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#understanding-by-example"&gt;
  &lt;/a&gt;
  Understanding by Example üß∂
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CgDgkb48--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7vuhkyg3seyopr39x156.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CgDgkb48--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7vuhkyg3seyopr39x156.jpg" alt="Image1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's say you wrote a C program, &lt;code&gt;example.C&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You compiled it into &lt;code&gt;a.out&lt;/code&gt;  using &lt;code&gt;gcc example.C&lt;/code&gt; command. &lt;/p&gt;

&lt;p&gt;It is important to note here is both of the files, &lt;code&gt;example.C&lt;/code&gt; and &lt;code&gt;a.out&lt;/code&gt; are programs only - a set of instructions.&lt;/p&gt;

&lt;p&gt;Both files reside in the &lt;em&gt;secondary&lt;/em&gt; memory i.e your hard disk.&lt;/p&gt;

&lt;p&gt;Now when you type &lt;code&gt;a.out&lt;/code&gt; in the terminal to execute the compiled file, your operating system creates a data structure( process ) for the program execution in the &lt;em&gt;main/primary&lt;/em&gt; memory. It looks like the following, &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5fgOAWa7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky27vcp650sjd0aigunq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5fgOAWa7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky27vcp650sjd0aigunq.jpg" alt="Image 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A good analogy is to think of &lt;strong&gt;processes&lt;/strong&gt; like our &lt;strong&gt;body&lt;/strong&gt; and &lt;strong&gt;program&lt;/strong&gt; as our &lt;strong&gt;soul&lt;/strong&gt;. The body cannot exist without a soul and the soul needs the body to take action! &lt;/p&gt;

&lt;p&gt;The operating system's job is to give the set of instructions in &lt;code&gt;a.out&lt;/code&gt; to CPU for execution one by one. &lt;/p&gt;

&lt;p&gt;While executing a program, &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Stack space is used for &lt;em&gt;function calling&lt;/em&gt; - to store &lt;strong&gt;activation records&lt;/strong&gt; ( information about called function )&lt;/li&gt;
&lt;li&gt;Heap space is used for &lt;em&gt;dynamic memory allocation&lt;/em&gt; - memory allocated using &lt;code&gt;malloc, calloc&lt;/code&gt; function is present in this section of the process.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It is important to note that, the &lt;em&gt;stack grows downwards&lt;/em&gt; and the &lt;em&gt;heap grows upwards&lt;/em&gt; since before program execution operating system cannot predict the exact size of both.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚ùó Don't confuse this heap portion with &lt;strong&gt;heap&lt;/strong&gt; data structure, they both are completely different things.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's it!&lt;/p&gt;

</description>
      <category>computerscience</category>
      <category>tutorial</category>
      <category>os</category>
    </item>
    <item>
      <title>5 (Extreme) Performance Tips in C#üî•</title>
      <author>Dotnetsafer</author>
      <pubDate>Mon, 02 Aug 2021 16:46:37 +0000</pubDate>
      <link>https://dev.to/dotnetsafer/5-extreme-performance-tips-in-c-1l9o</link>
      <guid>https://dev.to/dotnetsafer/5-extreme-performance-tips-in-c-1l9o</guid>
      <description>&lt;p&gt;If you have taken a call to grow your career in the information technology sector, knowledge of coding is essential. It is the most in-demand skill in the industry. Thus, the programming knowledge you gain and practice, in the beginning, is priceless.&lt;/p&gt;

&lt;p&gt;Here you have 5 good tips that will help you learn programming skills.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#write-unit-tests-for-nonpublic-methods"&gt;
  &lt;/a&gt;
  Write unit tests for non-public methods
&lt;/h3&gt;

&lt;p&gt;Surely if you work with projects that require quality control you have had to introduce a test project that involves unit tests. In that case, you have probably had problems trying to try a method that is not public.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;C#&lt;/em&gt; allows internal assemblies to be made visible to other assemblies. To solve it we will add the following attribute in the &lt;em&gt;AseemblyInfo.cs.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="c1"&gt;// Make a specific assembly visible  &lt;/span&gt;
&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;assembly&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;InternalsVisibleTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"MyTestAssembly"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#use-tuples"&gt;
  &lt;/a&gt;
  Use tuples
&lt;/h3&gt;

&lt;p&gt;Sometimes it is better to use a containing tuple of typed values than to use classes, especially when the data structure created is only going to be used at a specific moment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;_public&lt;/span&gt; &lt;span class="n"&gt;Tuple&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetEmployee&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;employeeId&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;firstName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"John"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;lastName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Smith"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="c1"&gt;//create a tuple and return it  &lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Tuple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;employeeId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#no-need-to-create-temporary-collections-better-to-use-yield"&gt;
  &lt;/a&gt;
  No need to create temporary collections, better to use yield
&lt;/h3&gt;

&lt;p&gt;We usually create enumerable temporary structures to return in a method.&lt;/p&gt;

&lt;p&gt;Something similar to the following üëá&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;_public&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetValuesGreaterThan100&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;masterCollection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;tempResult&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;  
&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="k"&gt;value&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;masterCollection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;value&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="n"&gt;tempResult&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;  
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;tempResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In these cases we can save a couple of lines of code by using the yield command.&lt;/p&gt;

&lt;p&gt;Next we show the previous example but using yield üëá&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;_public&lt;/span&gt; &lt;span class="n"&gt;IEnumerable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetValuesGreaterThan100&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;masterCollection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="k"&gt;value&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;masterCollection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;value&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#report-that-the-method-is-obsolete"&gt;
  &lt;/a&gt;
  Report that the method is obsolete
&lt;/h3&gt;

&lt;p&gt;If your library is being used by different clients and you want some method to stop being used because there is another method that replaces them or simply because it no longer works, you can indicate it with the following attribute üëá&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Obsolete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"This method will be obsolete soon. To replace it you can use the XYZ method."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;MyComponentLegacyMethod&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="c1"&gt;// Here the implementation  &lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code would cause a warning in the code that invokes this method. However, if you want it to no longer be usable in any way, you would use an additional &lt;em&gt;Boolean&lt;/em&gt; parameter such as &lt;em&gt;True&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Obsolete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"This method will be obsolete soon. To replace it you can use the XYZ method."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;MyComponentLegacyMethod&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="c1"&gt;// Here the implementation  &lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#remember-that-linq-queries-are-deferred"&gt;
  &lt;/a&gt;
  Remember that linq queries are deferred
&lt;/h3&gt;

&lt;p&gt;When a query is made in &lt;em&gt;linq&lt;/em&gt; it only actually runs when the results are accessed. This is called deferred execution. In order for the query to be executed only once, we must use the &lt;em&gt;ToList&lt;/em&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;_public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;MyComponentLegacyMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;masterCollection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="c1"&gt;// Without the ToList method this linq query would be executed twice  &lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;masterCollection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;ToList&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  
&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;  
&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Average&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>csharp</category>
      <category>dotnet</category>
      <category>netcore</category>
      <category>programming</category>
    </item>
    <item>
      <title>Netflix Free Trial is Back| Get Premium account for free and assist to all favourite shows</title>
      <author>Olga Myler</author>
      <pubDate>Mon, 02 Aug 2021 16:30:42 +0000</pubDate>
      <link>https://dev.to/netflixfreetrial/netflix-free-trial-is-back-get-premium-account-for-free-and-assist-to-all-favourite-shows-52m7</link>
      <guid>https://dev.to/netflixfreetrial/netflix-free-trial-is-back-get-premium-account-for-free-and-assist-to-all-favourite-shows-52m7</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rqKaSAfP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v3ehiqy34is9noh27ysw.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rqKaSAfP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v3ehiqy34is9noh27ysw.jpeg" alt="Netflix Free Trial"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Get a Free Netflix Premium Account or Upgrade your current account for 1 more year for free.&lt;/p&gt;

&lt;p&gt;Netflix service is used and liked by thousands of people around the world. But the fact is that all cannot afford its subscription costs. Imagine if you get your Netflix account for free without any monthly subscription? Then free Netflix account login can work wonders for you. You can enjoy your home entertainment now with free Netflix Premium Account or Upgrade your current account for 1 more year for free.&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts for you:&lt;/p&gt;

&lt;p&gt;üëâüëâ&lt;a href="https://bit.ly/3loU98W"&gt;GET NETFLIX PREMIUM FOR FREE&lt;/a&gt;üëàüëà&lt;br&gt;
üëâüëâ&lt;a href="https://bit.ly/3loU98W"&gt;UPGRADE YOUR CURRENT ACCOUNT FOR 1 MORE YEAR FOR FREE&lt;/a&gt;üëàüëà&lt;/p&gt;




&lt;p&gt;&lt;a href="https://bit.ly/3loU98W"&gt;GET NETFLIX PREMIUM FOR FREE&lt;/a&gt;&lt;br&gt;
&lt;a href="https://bit.ly/3loU98W"&gt;UPGRADE YOUR CURRENT ACCOUNT FOR 1 MORE YEAR FOR FREE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts &amp;amp; Passwords List [August 2021] -&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts With Passwords 2021 Some people have premium plans and share their email and password for free so that users can access and watch without spending a lot of money. Ive mentioned a free Netflix account list with username and passwords for you guys here. And its one of the best ways for you to get free accounts.&lt;/p&gt;

&lt;p&gt;(Working) Free Netflix Premium Accounts &amp;amp; Passwords (July 2021)&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts 2021: You can find a number of different websites offering Free Netflix Accounts by searching on Google. However, the problem with them is that they are no longer functional or even exist. To improve the Google user experience, weve added a brief article on Netflix, Netflix Accounts, and a lot more information about it.&lt;/p&gt;

&lt;p&gt;1000+ Free Netflix Accounts &amp;amp; Passwords [May 2021] 100%&lt;/p&gt;

&lt;p&gt;Free Netflix Account and Passwords Generator of 2021 . You can see numerous sites on Google that offer Free Netflix Account Generator. However, the issue with them is that they are done working or don't exist. Indeed, to improve the client experience on Google, we have included a short article How you will get Free Netflix Accounts.&lt;/p&gt;

&lt;p&gt;Free Netflix Account 2021 - Profile | ISA Connect&lt;/p&gt;

&lt;p&gt;Netflix accounts are free. Here I will provide a free daily account 5+ for Netflix 2021 as the plan is very expensive We cannot present your account to everyone because we have a budget. So search with our Netflix account. If you want to help us, we can give you more and more accounts. Keep commenting and sharing the post.&lt;/p&gt;

&lt;p&gt;Free Netflix Account 2021 Today 28/07/2021 | ahlakid.com&lt;/p&gt;

&lt;p&gt;22 hours ago Free Netflix Account &amp;amp; Passwords Premium Generator. But in this, we can provide the free Netflix account and password 2021 (Netflix Dump Accounts 2021) that you can use and access all types of premium services offered by Netflix. Basically, Netflix is an American Multinational Provider of Online Streaming Media Founded in 1997 by Reed Hastings.&lt;/p&gt;

&lt;p&gt;free netflix premium account generator [9wk] | Posts | Intelex&lt;/p&gt;

&lt;p&gt;As a result, it is not possible for everyone to win the giveaway. That is why to help you further, I am adding 10 more Netflix accounts daily on this page. You will find the email and password below. Simply use these credentials to log in to Netflix, and you will be good to go. #1 Free Netflix Email And Password Details (27, July, 2021)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-free-netflix-account-email-amp-password-27-july-2021-"&gt;
  &lt;/a&gt;
  1 Free Netflix Account Email &amp;amp; Password (27, July, 2021) -
&lt;/h1&gt;

&lt;p&gt;Free Netflix Premium Accounts 2021 Username, Passwords. We have just activated a few of the accounts for you! we hope you will not going to change the password. This is only for you! Username Password Subscription Plan [email protected] itechhacks.com: 60-Days [email protected] itechhacks.com: 60-Days [email protected] 17737271888: 30-Days [email protected] 123456: 90-Days&lt;/p&gt;

&lt;p&gt;100 Free Netflix accounts logins 2021 Updated List (Premium&lt;/p&gt;

&lt;p&gt;100 Free Netflix accounts logins 2021 March Updated List (Premium Access) Filed in Articles by TMLT Editorials on ADS! Download JAMB CBT Software Now for FREE! Free Netflix Accounts Logins: Are you looking for free Netflix accounts and passwords? First of all, there is no such thing as a free Netflix account and or free trial because officially Netflix doesnt offer it. If any&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts 2021 - Rocked Buzz&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts consist of up-to-date accounts that can be used in April 2021. The following consists of the accounts previously offered for our followers to use. &lt;a href="mailto:kenguyun@yahoo.es"&gt;kenguyun@yahoo.es&lt;/a&gt; :sad21. &lt;a href="mailto:hurnd12a@hotmail.co.uk"&gt;hurnd12a@hotmail.co.uk&lt;/a&gt; :ppunh. &lt;a href="mailto:halfund.as21@bluewin.ch"&gt;halfund.as21@bluewin.ch&lt;/a&gt; :alloun. &lt;a href="mailto:hungfad114@freenet.de"&gt;hungfad114@freenet.de&lt;/a&gt; :ouyn2. &lt;a href="mailto:gyhn21@yahoo.fr"&gt;gyhn21@yahoo.fr&lt;/a&gt; :2112.&lt;/p&gt;

&lt;p&gt;Free Netflix Premium Accounts [Username And Password]&lt;/p&gt;

&lt;p&gt;10+ Free Netflix Premium Accounts 2021 (Username and Password) Many free Netflix premium accounts, emails, and passwords are available online. If you find them before others do, you can use these accounts freely without any charge. This method does test your speed, so best of luck! Below weve added passwords and usernames that will give you access to Netflix premium accounts without&lt;/p&gt;

&lt;p&gt;Free Netflix Premium accounts Now 2021 - Google Groups&lt;/p&gt;

&lt;p&gt;download (1).jfif There are numerous destinations who are as of now offering free netflix accounts. Jun 26. . Jordan Eli. Jun 26. How To Get Free Netflix Premium Accounts Latest 2021. download (1).jfif The #1 Netflix Generator Our generator is the best one for winning free Netflix.&lt;/p&gt;

&lt;p&gt;Free Netflix Account 2021 List &amp;amp; Password Generator&lt;/p&gt;

&lt;p&gt;Now more than 69 million users are using the free Netflix account 2021. Netflix is an American company which was founded in 1997 by Reed Hastings and Marc Randolph. In older time they only provide the DVD rental service over the USA. Now it is one of the biggest community to provide online streaming of movies and TV shows. On Netflix, you can watch your favorite movies and TV shows on-demand. You just&lt;/p&gt;

&lt;p&gt;Free Netflix account hack october 2021. trickszylo Free Netflix account. Free Netflix account and password. how to get Free Netflix account. Free Netflix accounts reddit. Netflix account Free january 2021. Free Netflix account tricksndtips. Free Netflix account every day. Free Netflix premium account and password. a Free Netflix account with password. Free Netflix account twitter. Netflix premium&lt;/p&gt;

&lt;p&gt;Free Netflix Account 2021 Today 26/07/2021 | ahlakid.com&lt;/p&gt;

&lt;p&gt;Latest Netflix Account 26 July 2021 For Free, youll get 100% free Netflix Daily Accounts running. Tired of knowing how to get a Premium Netflix account running in July 2021. 26/07/2021 updated today. If yes, then do not worry. My friend, you are now on the right site because here I am going to update 5+ 100% free Netflix Premium accounts running every day. Netflix Account is the ideal&lt;/p&gt;

&lt;p&gt;Free Netflix Account Generator 2021 - Net Account Generator&lt;/p&gt;

&lt;p&gt;Free Netflix Account Generator 2021. Welcome to the new free Netflix Account Generator of 2021. Are you searching for a free Netflix premium account?? You are at the right place But Remember!!! There are some points that you need to do before generating the Account. These points are listed down. Read these points carefully and then generate your free account and enjoy your favorite shows . Must-Do. Allow&lt;/p&gt;

&lt;p&gt;PrEMiuM Netflix Account generator Free 2021 Without&lt;/p&gt;

&lt;p&gt;PrEMiuM Netflix Account generator Free 2021 Without Human Verification . 88 views. Skip to first unread message Its.sharmin. Jahan. unread, , 12:25:02 AM Jun 3 to PrEMiuM Netflix Account generator Free 2021 Without Verification . The #1 Netflix Generator. We are so proud to say that we are the first NETFLIX Account Generator in the world, we have more&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts Emails &amp;amp; Password [Todays Working Accounts ...&lt;/p&gt;

&lt;p&gt;Once you are satisfied with the Free Netflix accounts 2021 you can go for a Subscription. You can get original content, a good user experience, and a separate library of movies and shows if you subscribed for it. If you want to cancel your subscription you can cancel your Netflix subscription account anytime you want. Hope some suggestions for the Free Netflix account list 2021 helped you and it is&lt;/p&gt;

&lt;p&gt;50+ Free Netflix Accounts &amp;amp; Passwords May 2021 [100%&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts 22 July 2021 : Almost everyone who loves watching movies and series prefers using Netflix as it contains a huge library of Movies and Web Series.Netflix services are not free and the users need to buy a subscription for accessing their service. In case, you are not able to purchase the Netflix Subscription then dont worry as we are here to help you out.&lt;/p&gt;

&lt;p&gt;Netflix Free Accounts Email &amp;amp; Password July 28, 2021&lt;/p&gt;

&lt;p&gt;Categories Netflix Guide Tags Free Netflix Accounts, Free Netflix Accounts email and password, Free Netflix Accounts june 2021 Leave a comment Post navigation. Vipleague Alternatives-Top 10 Best Sites Like Stream2Watch For Free Online Sports . Netflix Cookies (Update 1 Hour Ago)[100% Working] Leave a Comment Cancel reply. Comment. Name Email Website.&lt;/p&gt;

&lt;p&gt;How To Get Free Netflix Account In Premium Netflix Accounts&lt;/p&gt;

&lt;p&gt;netflix premium accounts free 2021 netflix premium account (lifetime) netflix premium accounts 2021 netflix premium account free apk netflix premium account email and password netflix premium account generator v3.6 netflix premium accounts generator v1.2 netflix premium account generator free download netflix premium account password netflix premium accounts and&lt;/p&gt;

&lt;p&gt;Get FREE Netflix Account in 2021 - How To Get Netflix Premium For FREE&lt;/p&gt;

&lt;p&gt;Netflix Premium Free - hhttps://bit.ly/3qG9imOGet FREE Netflix Account in 2021 - How To Get Netflix Premium FOR FREE in 2021 | free netflix account for 30 d...&lt;/p&gt;

&lt;p&gt;(Working) Free Netflix Premium Accounts &amp;amp; Passwords (February 2021&lt;/p&gt;

&lt;p&gt;Free Netflix Premium Accounts of July 2021. Netflix premium accounts generator and access to free subscription legally. These free netflix login IDs and passwords are 100% working and safe with unlimited access.&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts Email &amp;amp; Password March 2021(100%&lt;/p&gt;

&lt;p&gt;25+ Free Netflix Accounts (March 2021) As we revealed to you before, we shared Daily 25+ Free Netflix Accounts with usernames and passwords, and those are 100% working. On the off chance that the above common Premium Accounts are not working, you can get these Netflix accounts. Mercifully dont change the secret phrase and let utilize this superior HD record for all clients. Today&lt;/p&gt;

&lt;p&gt;Get Netflix For FREE | July 2021 - Super Easy&lt;/p&gt;

&lt;p&gt;3 Ways to get FREE Netflix. Even though theres no free Netflix trial this year, there are ways to get free Netflix. Read on to find how. 1. Rent DVDs free in Netflix. Netflix doesnt offer free 30-days trials in 2021, but they still offer a free trial for DVD rental service. The service has two plans: $7.99/mo. for Standard and $11.99/mo ...&lt;/p&gt;

&lt;p&gt;[!!FREE!!] Netflix Account Generator 2021 Netflix Premium Account&lt;/p&gt;

&lt;p&gt;More. [!!FREE!!] Netflix Account Generator 2021 Netflix Premium Account. netflix account generator,free netflix account generator,free netflix account generator 2020,free netflix account generator ...&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts &amp;amp; Passwords (May 2021) - Review&lt;/p&gt;

&lt;p&gt;Here I have shared the working Netflix Accounts &amp;amp; Passwords. To read the full guide, please refer to this page&lt;/p&gt;

&lt;p&gt;(100% Working)Free Netflix Accounts Email &amp;amp; Password May 2021&lt;/p&gt;

&lt;p&gt;Free Netflix Working Account Id Passward. Netflix, Inc. is associate yank content platform and production company headquartered in Los Gatos, California.Netflix was based in 1997 by Reed Hastings and brandy Randolph in Scotts natural depression, California. Netflix streaming service has many top mind bending movies and tv shows to watch. The companys primary business could be a&lt;/p&gt;

&lt;p&gt;free netflix accounts with email and password 2021 fresh list in 2021&lt;/p&gt;

&lt;p&gt;We have shared the list of working Free Netflix Account 2021. Check out these Free Netflix Accounts generated by Netflix premium account generator.&lt;/p&gt;

&lt;p&gt;How to Get Free Netflix Account in 2021 {3 Ways} - TechWhoop&lt;/p&gt;

&lt;p&gt;40+ Free Netflix Account Usernames With Passwords. If you want some free Netflix premium accounts that have been activated already. Here is a list of different free netflix account and password for netflix account login. Copy and paste away, mate! First one is the user name, and the password follows it on the next line.&lt;/p&gt;

&lt;p&gt;Netflix Account Generator 2021 - Free Online Premium Accounts&lt;/p&gt;

&lt;p&gt;Netflix Account Generator 2021. Netflix is the biggest Entertainment website that almost all individuals watch for the sake of fun, entertainment, and pleasure as well. There are many tools that you can find for Netflix accounts but most of them did not work. Netflix Account Gen is the best tool that anyone can use to generate free Netflix ...&lt;/p&gt;

&lt;p&gt;140 Free Premium Netflix Account 2021 ideas in 2021 | netflix account ...&lt;/p&gt;

&lt;p&gt;Explore Gift Cards Shop 2021's board "Free Premium Netflix Account 2021" on Pinterest. See more ideas about netflix account, netflix, netflix premium.&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts 2021: Username and Passwords [Today]&lt;/p&gt;

&lt;p&gt;3 Free Working Netflix Accounts Passwords 2021; 4 Netflix Account Generators Reality Check; 5 Final Words; About Netflix. For someone new to this platform, here is a brief description of Netflix. Netflix is a media service provider that offers almost thousands of Movies, TV Series, Documentaries, and many more interesting shows. It can be accessed through different devices like&lt;/p&gt;

&lt;p&gt;FREE Netflix Accounts &amp;amp; Password (100+ Working)[Updated 2021]&lt;/p&gt;

&lt;p&gt;Features Of Premium Free Netflix Accounts Free Netflix Accounts 2021. Before friends, lets talk about the features of the | Free Netflix Premium Account |. Although there are many features of Netflix, but in this post we will tell you only about the best features of Netflix : Access To The Vast Library Of Digital Content. Well, we all know that Netflix provides video streaming content. In this we can&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts of 2021 (100% Working) - Giveaway World&lt;/p&gt;

&lt;p&gt;. Use our latest version of Free Netflix Account Generator 2021 and get free Netflix Accounts &amp;amp; Passwords Now! INSTRUCTIONS. - Click the button below. - Follow All the steps. - Prepare Your popcorn and enjoy !! . Click to Grap your Netflix Account.&lt;/p&gt;

&lt;p&gt;Netflix Accounts - Free Netflix Accounts &amp;amp; Passwords That Still&lt;/p&gt;

&lt;p&gt;Netflix Accounts Free Netflix Account Email And Password 2021 July: Netflix Hesaplar / Netflix Accounts: 0: Friday at 6:25 PM: Similar threads. Netflix Accounts Working Free Netflix Accounts &amp;amp; Password List. Started by Redman; Friday at 6:31 PM; Replies: 0; Netflix Hesaplar / Netflix Accounts. Netflix Accounts Long-Term Free Working Netflix Accounts &amp;amp; Passwords. Started by Redman; Friday&lt;/p&gt;

&lt;p&gt;Get A Netflix Account For Free ^&amp;amp;Free Netflix Account Generator 2021&lt;/p&gt;

&lt;p&gt;Free Netflix Account Generator 2021 Private Hack Netflix ... //unofficeny sites files webform List Of Free Netflix Accounts &amp;amp; Passwords In 2021 (100% Working) ... 100+ Free Netflix Account Generator Without Human Verification Free netflix account generator //akiroobsess free-netflix-account-gener... Free netflix account generator no human verification Are you looking&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts and Passwords 2021 - made-by.org&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts and Passwords Trial 2021. You have a full 30-day free trial window option on Netflix. Afterward, payment is mandatory. During this time, you're faced with the need to make a choice out of the three levels available. And, you guessed right, they come with differing benefits at the same time cost.&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts, Cookies, Login &amp;amp; Passwords 2021&lt;/p&gt;

&lt;p&gt;Free Working Netflix Accounts 2021: Getting Free Netflix Accounts is not easy, some websites simply drop in accounts and passwords for their users, but they never seem to regular check it monthly for expiry. So of their users goes as far as changing the login details which is a non-welcoming action. To increase your chance of getting a working account, weve also shared Netflix Cookies and&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts 2021 [100% Working Methods]&lt;/p&gt;

&lt;p&gt;This is a list of free Netflix accounts for July 2021. Publicly shared Netflix accounts are hard to get. However, we update this list every month. So check them out, and if you find the accounts are not working then it means the accounts are already taken by other lucky users. Email: &lt;a href="mailto:jackgates123@gmail.com"&gt;jackgates123@gmail.com&lt;/a&gt;. Password: newacccx007_x. Email: &lt;a href="mailto:francisdx@hotmail.com"&gt;francisdx@hotmail.com&lt;/a&gt;. Password:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#free-netflix-account-username-amp-password"&gt;
  &lt;/a&gt;
  Free Netflix Account Username &amp;amp; Password
&lt;/h2&gt;

&lt;p&gt;Free Netflix Account Hack,netflix Premium Account Free,free Netflix Accounts That Work 2021,netflix Account Generator No Human Verification,free Netflix Account Generator 2021,free Netflix Account And Password 2021,.Free Netflix Accounts 2021. Netflix Premium Account Features You can watch the films on your cell, tablet or PC. In case you need to watch them on TV, continuous sharp TVs&lt;/p&gt;

&lt;p&gt;Free Netflix Account (Username and Password) Working 2021&lt;/p&gt;

&lt;p&gt;For those who are willing get Free Netflix account check the table below: Free Netflix Account Email Netflix Password; &lt;a href="mailto:nataliya.herus@gmail.com"&gt;nataliya.herus@gmail.com&lt;/a&gt;: 17737271888: &lt;a href="mailto:jrrllicey@hotmail.com"&gt;jrrllicey@hotmail.com&lt;/a&gt;: 123456: &lt;a href="mailto:eeyidogan@hotmail.com"&gt;eeyidogan@hotmail.com&lt;/a&gt;: 517454614: &lt;a href="mailto:barxky1976@yahoo.com"&gt;barxky1976@yahoo.com&lt;/a&gt;: interview0929: &lt;a href="mailto:forshee@oasisband.net"&gt;forshee@oasisband.net&lt;/a&gt;: qwerty7: &lt;a href="mailto:Lundind1@yahoo.com"&gt;Lundind1@yahoo.com&lt;/a&gt;: rock88: &lt;a href="mailto:nataliyva.herus@gmail.com"&gt;nataliyva.herus@gmail.com&lt;/a&gt;: 17737271888:&lt;/p&gt;

&lt;p&gt;Op6FQE4s NETFLIX PREMIUM ACCOUNT GENERATOR #2021# FREE NETFLIX&lt;/p&gt;

&lt;p&gt;Use our latest version of Free Netflix Account Generator 2021 and get free Netflix Accounts &amp;amp; Passwords Now! Here are the direct download links for Netflix Premium Account Generator 2021. This will help you to generate a premium account and password in just 3 minutes without veri- fication! So that you no longer need to subscribe to the premium subscription of Netflix. You can easily get a Netflix&lt;/p&gt;

&lt;p&gt;Free Netflix Account Generator 2021 - Netflix Premium Account&lt;/p&gt;

&lt;p&gt;Use our latest version of Free Netflix Account Generator 2021 and get free Netflix Accounts &amp;amp; Passwords Now! Here are the direct download links for Netflix Premium Account Generator 2021. This will help you to generate a premium account and password in just 3 minutes without veri- fication! So that you no longer need to subscribe to the premium subscription of Netflix. You can easily&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts &amp;amp; Passwords Daily Logins (21, July, 2021)&lt;/p&gt;

&lt;p&gt;Get Free Netflix Accounts (2020) with Username &amp;amp; Password (21, July, 2021) This is the part where we get to serve up free Netflix accounts and passwords along with premium features. We have collected these logins from Reddit. You only have to copy &amp;amp; paste the username &amp;amp; ID for the login. Its that easy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3loU98W"&gt;GET NETFLIX PREMIUM FOR FREE&lt;/a&gt;&lt;br&gt;
&lt;a href="https://bit.ly/3loU98W"&gt;UPGRADE YOUR CURRENT ACCOUNT FOR 1 MORE YEAR FOR FREE&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How To Land Your FIRST Web Developer Job In 1 Month</title>
      <author>DevPool</author>
      <pubDate>Mon, 02 Aug 2021 16:08:05 +0000</pubDate>
      <link>https://dev.to/devpool3000/how-to-land-your-first-web-developer-job-in-1-month-54l8</link>
      <guid>https://dev.to/devpool3000/how-to-land-your-first-web-developer-job-in-1-month-54l8</guid>
      <description>&lt;p&gt;The following tips helped me to land my first junior full-stack position in one month back in 2016. Even though I did only 4/7 tips, but that's because I was completely new to the game, and it felt less "competitive" than it is today. The following tips were thought out based on what I did personally in the past and what I've learned/witnessed by working in the field for over 5 years now.&lt;/p&gt;

&lt;p&gt;Let's start with the most apparent/easy one first.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Having a Portfolio&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oKWtxG3E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l3od79zs3bfam1xzfmkc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oKWtxG3E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l3od79zs3bfam1xzfmkc.jpg" alt="1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Back when I was applying for my first junior web developer position in 2016, I didn't have a website because it didn't "feel" necessary or competitive as it is today for a lot of new developers.&lt;/p&gt;

&lt;p&gt;There are many more self-taught developers, graduates from colleges, and coding bootcamps, and the chances of them having a portfolio are high. So little by little, I'm starting to believe that having a portfolio could help you stand out and maybe land on the interview. But at the end of the day, your interviewer will judge you based on your skills and not if you have a portfolio.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Publicly Available GitHub Projects&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ijlKd5TJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3xz3yvidtg8n0an23p61.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ijlKd5TJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3xz3yvidtg8n0an23p61.jpg" alt="2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When I was applying for my first junior full-stack position, I had two available projects on my GitHub. A small frontend application and a full web app with complex features. I confidently explained each technology I used, why I wrote the code the way I did, how I built my schema, and how I imported the data in (this part is called fixtures, but I didn't know about it back then).&lt;/p&gt;

&lt;p&gt;My projects aimed directly at becoming a full stack developer, so I already knew what jobs to apply for and where I will stand out.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Optimize Your LinkedIn For Recruiters To Find You Faster&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cliCZg7n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7f3lgatypc098mutgfyf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cliCZg7n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7f3lgatypc098mutgfyf.jpg" alt="3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LinkedIn is the tool that recruiters use religiously to find candidates for new open roles. If you don't have a LinkedIn profile, create one. If you have one, but it's empty, it's time to update it with your projects, languages/frameworks that you know, or what to be proficient in. Use an "About You" section if you haven't done so. The more information you have on your profile, the higher the chance of finding you because it is all based on keywords. Also, it doesn't mean you have to mention all languages and frameworks (then you will look like the master of none).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Attend Hackathons&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RnYSwSc5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iykookbvvcrwjepovw5q.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RnYSwSc5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iykookbvvcrwjepovw5q.jpg" alt="4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are multiple reasons why you would want to attend a hackathon. But one of the main reasons you want to consider is because many tech professionals are attending it. Some of them go there to have fun, and others could be looking for new developers to fill in a role they have open at a company they work at. Also, if you're a self-taught developer or graduate from a coding bootcamp, you may not have as many professional contacts. So this is the perfect way to get to know more people within your field.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Prepare For An Interview&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bshrr2CH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xozvtavp3mdo40eus2mw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bshrr2CH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xozvtavp3mdo40eus2mw.jpg" alt="5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When I was writing my first resume, I didn't have a link to my portfolio, GitHub, or even my LinkedIn! &lt;/p&gt;

&lt;p&gt;But it had all the essential information that a recruiter/employer wanted to see. I had a summary that underlined what I was looking for and where I see myself heading in the future. Highlighted my strength, technical skills, and a lot more (I have a video on this. If you haven't seen it yet, I have it available on my YouTube channel DevPool). You also want to go over the interview stages (screening, coding, and behavioral). Each of them is important because if you passed the coding, it doesn't mean that the company will hire you if you didn't pass the behavioral.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;While Waiting Try To Upskill&lt;/strong&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z5owh29q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j5e0w5z35xukqyr6i8mj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z5owh29q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j5e0w5z35xukqyr6i8mj.jpg" alt="6"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You could work on a new project using new technology, but if you already have like 100, should you be working on 101?&lt;/p&gt;

&lt;p&gt;The best way to upskill your skills is to work. Now hold up, isn't this what we are trying to do? Yes, and there are jobs that you can start applying for. The only important thing you will be getting out of it is building something real users are using. You've probably guessed that I'm referring to non-profit organizations. You can include that into your resume and start applying for jobs again as you're working there. The difference now is that the recruiter or an employer cannot say, "you don't have working experience".&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Repeat&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Fy3OzIJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1h472ialzfwjng0rv3d7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Fy3OzIJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1h472ialzfwjng0rv3d7.jpg" alt="7"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I remember when I applied to 10 jobs a day minimum, which would lead to a lot of rejections. I had no idea what I was doing because it was my first time, but I would ask for feedback on what I did wrong and see how I could improve. The fact that I was applying to many jobs per week helped me fix many mistakes much-much faster than I anticipated. So by the time I was reaching the end of the month, I was able to get several offers to choose from.&lt;/p&gt;

&lt;p&gt;There is the say "repetition is the key," and it's there for a reason.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These are the seven tips that I hope can help some get that junior developer job much faster than you thought.&lt;/p&gt;

&lt;p&gt;For more helpful tips and advice, subscribe to my channel DevPool and don't miss future topics.&lt;/p&gt;

&lt;p&gt;&lt;a href="//youtube.com/channel/UC03vw5F2isFkbJhyEZU5bvg?sub_confirmation=1"&gt;YouTube - DevPool&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Loaded in 600 milliseconds</title>
      <author>Vedran Cindriƒá</author>
      <pubDate>Mon, 02 Aug 2021 15:47:44 +0000</pubDate>
      <link>https://dev.to/cindreta/loaded-in-600-milliseconds-5daf</link>
      <guid>https://dev.to/cindreta/loaded-in-600-milliseconds-5daf</guid>
      <description>&lt;p&gt;One of the first movies I ever saw in a cinema was in my tiny home town &lt;a href="https://goo.gl/maps/jwNFFPLRB8pbJiDx9"&gt;Nova Gradi≈°ka&lt;/a&gt; in Croatia. The movie playing that day was &lt;a href="https://www.imdb.com/title/tt0187078/"&gt;Gone in 60 seconds&lt;/a&gt;. As you can imagine I was blown away. My first movie on the big screen. And at the time there were a lot of popular actors in it like Nicolas Cage, Angelina Jolie, Vinnie Jones and others. Really an experience I remember to this day as you can see. In particular a scene from that movie seems like a great intro to this article. So, before you continue, play the video and &lt;strong&gt;get yourself into the performance groove&lt;/strong&gt;. Don't forget to do the finger thing that Cage does üòÇ&lt;br&gt;
≈æ&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/iKcYz6rDRVk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Before you think "Oh no, yet another guide i'll never actually be able to implement on my website" let me stop you there! &lt;strong&gt;More or less everything we will go through in this article is easily achievable.&lt;/strong&gt; In some cases some things might take 2 minutes and some might take longer but in general the goal is to bring your website performance up as fast as possible.&lt;/p&gt;

&lt;p&gt;Personally, I'm very passionate about website performance, loading times and optimizing everything in the stack to run as smoothly as possible. For the past 10 years I've spent a lot of my time chasing milliseconds in our software development company. Performance is something we included in every of our projects and the same is with our startup - &lt;a href="https://treblle.com"&gt;Treblle&lt;/a&gt;. To be honest my obsession with performance is probably the reason why we were able to build &lt;a href="https://treblle.com"&gt;Treblle&lt;/a&gt;. Besides that I‚Äôve also spent a lot of time consulting for other companies on how to improve performance. Going after their developers and tidying things up.&lt;/p&gt;

&lt;p&gt;Based on my experience I came up with a list of things you can do almost day one on any projects that would improve the speed drastically and show a noticeable improvement. Some will take time but most are hassle free.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lazyload-everything"&gt;
  &lt;/a&gt;
  Lazyload (everything)
&lt;/h3&gt;

&lt;p&gt;When someone visits your website they probably don't see the entire website but only, what in the marketing world they call, "above the fold" content. In most cases that includes a hero element with either text, images/video and a call to action. Below that is everything else explaining why your product or startup is the next big thing (same as ours üòé). More often than not a user might only view that hero element, scroll a few times but won‚Äôt reach the end of the website. &lt;strong&gt;So why load all the images, videos, iframes and content that nobody will see?&lt;/strong&gt; That right there is the fundamental idea behind lazy loading. It‚Äôs probably the simplest and most effective thing you can do to improve your website load time. The reason why it has such a huge impact is because 90% of the time the content we are loading on the rest of the website are images and videos. So if you have 20 - 30 images on your website and the users can only see 3-4, why load the rest? Sounds logical - it is - but you would be surprised at how many websites don't do this. Especially considering that it‚Äôs super easy to add it to your website.&lt;/p&gt;

&lt;p&gt;The first way we can add lazy loading to our website is by using a really tiny Javascript library called: &lt;a href="https://github.com/aFarkas/lazysizes"&gt;lazysizes&lt;/a&gt;. I've used this puppy in every website we‚Äôve developed for the past 5 years and it works like a charm. You can lazy load images, iframes, videos and even widgets. It works with the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element as well as picture elements which is great for responsive design.&lt;/p&gt;

&lt;p&gt;To use it simply replace your existing &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; elements with the following:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Note that the path to the real image is in the "data-src" attribute and to enable lazy loading you have to add a class of "lazyload". You also might be wondering what the mambo jumbo in the "src" attribute is. Well it‚Äôs basically a really tiny image with a light gray background. This is used to fill up the space and not cause jumps in layouts shift while the image is "replaced". In any case you are done. Nothing more or less to do. The plugin has more options which you can check out on their website.&lt;/p&gt;

&lt;p&gt;Another way you could start using lazy loading is by utilizing a new HTML standard attribute called &lt;code&gt;loading&lt;/code&gt;. Now it does have limited support but it is probably the future of lazy loading and it will be a default HTML attribute once everybody starts supporting it.&lt;/p&gt;

&lt;p&gt;You use it by adding &lt;code&gt;loading="lazy"&lt;/code&gt; to any image element like so:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Again, maybe wait a bit with this one because it‚Äôs lacking support for older browsers but definitely keep an eye for it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#optimize-images"&gt;
  &lt;/a&gt;
  Optimize images
&lt;/h3&gt;

&lt;p&gt;I'm adding this because it has a huge impact and it‚Äôs dead simple to do. Yet - most people don‚Äôt do it. When you are using images as design elements, backgrounds and such simply run them through something like &lt;a href="https://imageoptim.com/mac"&gt;ImageOptim&lt;/a&gt; or &lt;a href="https://www.jpegmini.com/"&gt;JPEGMini&lt;/a&gt;. I've been using the FREE Mac app of &lt;a href="https://imageoptim.com/mac"&gt;ImageOptim&lt;/a&gt; for years and it works like a charm. In some cases it &lt;strong&gt;reduces images by like 80%&lt;/strong&gt; and I simply get shocked. You don't have to think about it, simply drag and drop the images and they are automatically saved as optimized images with as little as possible quality loss. They also have a webservice so you can connect your user generated images with their API and have them optimized as well.&lt;/p&gt;

&lt;p&gt;As far as SVG goes I use another free and awesome service called &lt;a href="https://vecta.io/nano"&gt;SVG Nano&lt;/a&gt;. It's just like &lt;a href="https://imageoptim.com/mac"&gt;ImageOptim&lt;/a&gt; but for SVGs and the results are astonishing. You can have a Full HD illustration cut down to like 10KB which is great.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#minify-and-compress"&gt;
  &lt;/a&gt;
  Minify and compress
&lt;/h3&gt;

&lt;p&gt;A must do when working with CSS and JS is to minimize them! Don't use a non minimized version of your code or other plugins/packages/dependencies in production. Simply don't. You can manually minimize the CSS/JS via tools like this: &lt;a href="https://minifycode.com/"&gt;https://minifycode.com/&lt;/a&gt; or &lt;a href="https://www.minifier.org/"&gt;https://www.minifier.org/&lt;/a&gt;. Ideally you should include minification in your build process either via &lt;a href="https://webpack.js.org/guides/production/#minification"&gt;Webpack&lt;/a&gt; or some other tool. If you don't know how to do any of those then you can maybe download already minified versions of various frameworks and JS plugins.&lt;/p&gt;

&lt;p&gt;Just consider this: a non minified and uncompressed version of Jquery is 290Kb whereas a minified and compressed version is 90KB. &lt;strong&gt;You just saved 200KB or 70% of the download size&lt;/strong&gt;!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#preconnect"&gt;
  &lt;/a&gt;
  Preconnect
&lt;/h3&gt;

&lt;p&gt;Preconnect is a relatively modern type of link element that became popular with HTML5 and HTTP2. The idea behind it is super simple but very effective. By adding one or more preconnect tags to the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; element of your website you tell browsers that, down the line, you will eventually download something from that domain. Browsers can initiate a connection and essentially prepare whatever they need to instantly download something from that domain. This as you can imagine can speed things up for you - especially if you are downloading fonts, images and JS. Using preconnect could not be simpler. Before you call on any CSS and JS in your &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; element add one of these:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;link rel="preconnect" href="https://domain.com/" crossorigin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;And that's it. Later on if you're downloading something from domain.com like an image or JS or CSS it will be faster because the browser is already ready for it. To give you an idea here are top 3 most common preconnect scenarios:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin&amp;gt;
&amp;lt;link rel="preconnect" href="https://www.google-analytics.com/" crossorigin&amp;gt;
&amp;lt;link rel="dns-prefetch" href="https://yourid.cloudfront.net"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
  &lt;a href="#use-a-cdn"&gt;
  &lt;/a&gt;
  Use a CDN
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pXMIbCMS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2yzzcow4k19m2.cloudfront.net/835adbfb-d840-46e2-8758-ad949f91f861/images/blog/cdn-illustration%402x.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pXMIbCMS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2yzzcow4k19m2.cloudfront.net/835adbfb-d840-46e2-8758-ad949f91f861/images/blog/cdn-illustration%402x.jpg" alt="use a cdn"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Today with cloud providers like AWS, Azure and CloudFlare using a CDN couldn't be easier and it has a big performance impact! A CDN or a Content Distribution Network simply takes time files you upload (CSS/JS/images) and stores them across multiple different servers in various parts of the world. So let's say you have a visitor from India and your server is in the Us. If you are using a CDN for your assets then that CDN will serve those assets from a server in India rather than the US one. &lt;strong&gt;This will reduce latency and load times but also enable parallel resource downloading&lt;/strong&gt; since the files are downloaded from a different domain. Another great thing about CDNs is that they are already optimized for performance. Everything we had to do to tweak our server earlier is already done for us ü§üüèª If you are worried about pricing - don't be. Using a CDN nowadays is super affordable especially for the impact it has on performance.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#go-back-to-basics"&gt;
  &lt;/a&gt;
  Go back to basics
&lt;/h3&gt;

&lt;p&gt;I've always been a fan of minimalism except when it comes to Apple devices ü•∫ Guilty as charged. But when it comes to front-end development I love minimalism to a fault. What I mean by minimalism is simple: reduce the number of resources you are using in your pages. This time under resources I don't just mean images and JS but rather fonts, various CSS frameworks, JS frameworks and dependencies. &lt;strong&gt;When we are talking about fonts my rule is 1 custom font with a maximum of 2-3 weights&lt;/strong&gt;. If I really really have to, I will include a second font but then I will try to reduce the weights as much as possible. And yes I understand you should make your website look pretty but not at the cost of extreme performance.&lt;/p&gt;

&lt;p&gt;Another really trivial and stupid problem i repeatdy have seen happen is that developers include multiple versions of JQuery or Bootstrap or some other plugin. I‚Äôve noticed this goes to extremes with Wordpress themes and plugins. It‚Äôs like a frenzy of repeat includes. Every plugin simply piles on it‚Äôs own Bootstrap version, Jquery version or something. Make sure you nip that because you really don‚Äôt wanna be loading multiple useless libraries.&lt;/p&gt;

&lt;p&gt;Finally, think about what you actually need. Do you need a 150KB animation library for CSS and animating that one section on the home page? Can that be done using native CSS or JS. Do you really need JQuery, an Ajax Form plugin and a Form validation plugin to make an HTTP request? Do you need a 200KB parallax plugin that requires another dependency or can you make a similar effect with CSS. Do you really need another library to tell time with JS?&lt;/p&gt;

&lt;p&gt;Consider the fact that an average modern F1 car has 5000 parts and weights around 750 KG whereas a regular car has around 30 000 parts and weights 1300 KG. Just let that sink in. &lt;strong&gt;Do you want your website to be like an F1 car or like your neighbors Toyota Camry?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DjfQBv9o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2yzzcow4k19m2.cloudfront.net/835adbfb-d840-46e2-8758-ad949f91f861/images/blog/f1-redbull%402x.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DjfQBv9o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2yzzcow4k19m2.cloudfront.net/835adbfb-d840-46e2-8758-ad949f91f861/images/blog/f1-redbull%402x.jpg" alt="F1 Redbull"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#optimize-your-server"&gt;
  &lt;/a&gt;
  Optimize your server
&lt;/h3&gt;

&lt;p&gt;Your infrastructure has a significant role in load times and performance. If you have a lousy server nothing you do will help you. Especially if the server is located in a different part of the world and most of your users are accessing it from across the pond. There are easy wins that you can do to make sure you get the best performance with as little as possible.&lt;/p&gt;

&lt;p&gt;The first thing is to make sure that you are running on HTTP2. It's not that complicated to install it in case your hosting provider isn't running on that by default. HTTP2 is much faster than HTTP1. It's also much newer so it has a lot more features that deal with a lot of performance issues that HTTP1 had. One of the biggest things that HTTP2 can do is download resources in parallel. Coupled with other features HTTP2 makes a huge difference and you should find a way to get your website on it.&lt;/p&gt;

&lt;p&gt;Next up if you are developing on top of the LAMP stack and you are using PHP then go check if you are running PHP 7+ at a minimum. PHP has been kicking ass in terms of performance in recent versions like PHP 7 and PHP 8. Just by upgrading from PHP 5 to 7 you will get 60% better performance and render times. PHP 8 also contains a lot of JIT improvements which again makes the jump from 7 to 8 worth it.&lt;/p&gt;

&lt;p&gt;Another thing you can easily do is adjust the server configuration to make it even faster. This includes making sure you are compressing resources like CSS/JS, sending the correct mime types, taking advantage of browser cache and others. To save you some time I'll share my custom Apache configuration I've been using for years.&lt;/p&gt;

&lt;p&gt;The first step would be to create a new Apache config with our performance settings. Open your terminal, SSH to your server and navigate to &lt;code&gt;/etc/apache2/conf-available/&lt;/code&gt; and type in:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo curl https://gist.githubusercontent.com/cindreta/e536faa5494d0a0be409d435757ff9a7/raw/0a24629059e243a44d2caf5d1e95ce1c8df4822f/performance.conf - o performance.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;This will download the custom performance configuration from a gist on my Github and save it as a file called &lt;code&gt;performance.conf&lt;/code&gt; which we will include in our default Apache config.&lt;/p&gt;

&lt;p&gt;Now that we have the file navigate to &lt;code&gt;/etc/apache2/sites-available/&lt;/code&gt; where you should find all your Apache Vhosts. The default one should be called &lt;code&gt;000-default.conf&lt;/code&gt;. Simply do sudo nano 000-default.conf and before the end tag &lt;code&gt;&amp;lt;/VirutalHost&amp;gt;&lt;/code&gt; simply add our custom config like so:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Include /etc/apache2/conf-available/performance.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Save the changes and reload the Apache server by issuing a command: &lt;code&gt;sudo systemctl restart apache2&lt;/code&gt;.If apache starts normally then everything is ok, if we messed something up or you are missing some Apache modules like mod_deflate, mod_rewrite apache will throw an error and you can either try to debug what‚Äôs up or remove the config file from your vhost.&lt;/p&gt;

&lt;p&gt;An additional note I would like to mention: you could have used .htaccess to enable the configuration but I would suggest you don't. The reason is, you guessed it, performance. Adding complicated and long config options to &lt;code&gt;.htaccess&lt;/code&gt; actually slows down the Apache server because it has to do more work to compile that. I don‚Äôt like messing around with servers also but it‚Äôs worth doing it via config files like shown.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#understand-html"&gt;
  &lt;/a&gt;
  Understand HTML
&lt;/h3&gt;

&lt;p&gt;HTML is the most forgiving language on planet Earth. If you make a mistake like forgetting to close a tag or mistype the tag name it will still do it‚Äôs best to render and show the content. A lot of this has to do with browser engines but the fact is you can get away with pretty much anything. And people tend to abuse that. There are around a 100 tags in HTML spanning from more common like &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; to weird ones like &lt;code&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;kbd&amp;gt;&lt;/code&gt; and others. Yet people mostly use 10 of them and probably the one that is used the most is the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element. I've seen this trend phenomenon 10x with these "new kids on the block" learning HTML via React or Angular...In short learn HTML and use appropriate tags. If you are building a list then use &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt;. If you are displaying titles then use &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;h3&amp;gt;&lt;/code&gt;... And guess what - the numbers have a meaning üòä. &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; would imply it's the most important title in the page hence use it accordingly. Same goes for other elements on the page like &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;,&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;,&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Writing good, semantic, meaningful HTML &lt;strong&gt;helps the browser render faster&lt;/strong&gt; but also it saves time on paint events, style recalculations and similar. Another benefit of writing good structured HTML is the on site SEO aspect of it. Google and other engines love when you make their job easier and use tags that have meaning. It also helps anyone else reading your source to better understand what you tried to do, what is what and similar. So just use HTML as &lt;a href="https://en.wikipedia.org/wiki/Tim_Berners-Lee"&gt;sir Tim&lt;/a&gt; wanted you to.&lt;/p&gt;

&lt;p&gt;Another small but interesting tip is to minimize the amount of white space and empty lines also helps with performance. You can even do this automatically by using server side plugins mod_pagespeed for Apache and Ngix. Of course if you are using a back-end programming language which compiles your HTML into views, like Laravel, then there are packages for that like HTMLMin and others.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#css-first"&gt;
  &lt;/a&gt;
  CSS first
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s-Gqcwba--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2yzzcow4k19m2.cloudfront.net/835adbfb-d840-46e2-8758-ad949f91f861/images/blog/css-first%402x.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s-Gqcwba--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2yzzcow4k19m2.cloudfront.net/835adbfb-d840-46e2-8758-ad949f91f861/images/blog/css-first%402x.jpg" alt="CSS first"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just like Donalds thing was "America first", I believe, for us front-end developers, it should be "CSS first". What I mean by that is that if you can make something using CSS rather than using an image or Javascript - then do it. When I see a design my first question is what can i do only with CSS. I evaluate everything from backgrounds, shapes, ornaments, structures and try to figure out if there is a way to do it only with CSS. &lt;strong&gt;You will be surprised how many things you can do in CSS once you master it.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I've seen many, many instances where CSS was able to replace a shape or even a background image. So by writing maybe 10 lines of CSS you save 50-100KB in transfer data on those images. The main reason why most websites are slow is because they use too many images or pile on too many JS plugins to do basic things like hovering, animations and effects. CSS is good at all of those things - you just need to learn how to use it.&lt;/p&gt;

&lt;p&gt;Another important practice you can apply is writing better and more optimized CSS. Yes - that is a thing. You can also do your website an injustice if you write sloppy and bad CSS. So let's just name a few things you can do to write better CSS:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the less lines of CSS you can write - the better&lt;/li&gt;
&lt;li&gt;the shorter your selectors are - the better&lt;/li&gt;
&lt;li&gt;run all the animations on the GPU vs the CPU&lt;/li&gt;
&lt;li&gt;stop supporting ancient browsers&lt;/li&gt;
&lt;li&gt;use shorthand properties when you can&lt;/li&gt;
&lt;li&gt;don't overwrite - learn browser defaults and framework resets&lt;/li&gt;
&lt;li&gt;separate media queries into its own files&lt;/li&gt;
&lt;li&gt;don't bloat your code with third party addons/plugins that you don't understand&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The sooner you start practicing these things the faster you will see results. The best thing about this is you can directly edit CSS rules in a browser and test in literary seconds. So get to it.&lt;/p&gt;

&lt;p&gt;---&lt;/p&gt;

&lt;p&gt;Hope some of these help you reduce your load times and improve your performance in one days work. Some will take longer but they will also make you a better developer in the long run. &lt;strong&gt;At the end of the day performance is a give and take between design, style and functionality.&lt;/strong&gt; You should be walking in the middle of that line for the best of both worlds.&lt;/p&gt;

&lt;p&gt;PS. If you like these articles say hello on my &lt;a href="https://twitter.com/cindreta"&gt;Twitter&lt;/a&gt; or if you are using APIs be a champ and give &lt;a href="https://treblle.com/"&gt;Treblle&lt;/a&gt; a try - you won't regret it.&lt;/p&gt;

</description>
      <category>performance</category>
      <category>webdev</category>
      <category>html</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Improving UX of forms using only HTML</title>
      <author>Stas Melnikov</author>
      <pubDate>Mon, 02 Aug 2021 15:46:36 +0000</pubDate>
      <link>https://dev.to/melnik909/improving-ux-of-forms-using-only-html-21c0</link>
      <guid>https://dev.to/melnik909/improving-ux-of-forms-using-only-html-21c0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-showhide-password-pattern"&gt;
  &lt;/a&gt;
  The show/hide password pattern
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vTrkwlGS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/54375969/5654c4c7e7954c349c336abe5e7c3ef0/1.jpg%3Ftoken-time%3D1629158400%26token-hash%3Da55AdGf9N1gjMZc0hXK7gvhtu5NWeun1AnQG4xYqiLQ%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTrkwlGS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/54375969/5654c4c7e7954c349c336abe5e7c3ef0/1.jpg%3Ftoken-time%3D1629158400%26token-hash%3Da55AdGf9N1gjMZc0hXK7gvhtu5NWeun1AnQG4xYqiLQ%253D" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the last years, the hide/show button pattern became very popular. But a lot of people use it wrong. The mistake is in choosing the right HTML element. &lt;/p&gt;

&lt;p&gt;People think users will interact with an element only using a mouse. Just click one time, two, etc. But the value of this pattern is more important.&lt;/p&gt;

&lt;p&gt;Firstly, users use the keyboard quickly focusing from the field to the button using the tab key. Then they push the enter key for showing or hiding the password. &lt;/p&gt;

&lt;p&gt;Secondly, screen readers have to detect this element is interactive. Then users can use it.&lt;/p&gt;

&lt;p&gt;So only one element meets all these requirements ‚Äî the button element. Use it and your users will be happy to use your interface.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#showing-the-correct-virtual-keyboard-when-you-ask-to-enter-a-code"&gt;
  &lt;/a&gt;
  Showing the correct virtual keyboard when you ask to enter a code
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aQk_ZAAW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/54375684/ffe486076c174da29946eb5b3fe99d1f/1.jpg%3Ftoken-time%3D1629158400%26token-hash%3DBsLdISRPEFuilBqpLQxPa0Cv62j1L50bKIM6KICYInA%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aQk_ZAAW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/54375684/ffe486076c174da29946eb5b3fe99d1f/1.jpg%3Ftoken-time%3D1629158400%26token-hash%3DBsLdISRPEFuilBqpLQxPa0Cv62j1L50bKIM6KICYInA%253D" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to make UX of forms more simple and user-friendly you should right choose the type attribute. That's important because the attribute helps browsers show the most appropriate virtual keyboard. Thus users can more quickly fill forms. For example, if users fill in a phone number type="tel" shows the keyboard with digits and other special symbols.&lt;/p&gt;

&lt;p&gt;But there are cases when existing values can't be applied. For example, when you sign in you want to ask users to enter a numeric code. &lt;/p&gt;

&lt;p&gt;In these cases, you can use the special inputmode attribute that helps browsers display a correct keyboard as well. In the cases with a numeric code, you should use the numeric value. Then browsers will display the keyboard with digits only and users will fill the field quickly as well as with the type attribute.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt;&lt;br&gt;
üòä If you like this post, please, &lt;a href="https://twitter.com/intent/tweet?text=Stas%20Melnikov%20told%20about%20how%20we%20can%20improve%20UX%20of%20forms%20using%20only%20HTML%20on%20%40ThePracticalDev%20www.dev.to/melnik909/improving-ux-of-forms-using-only-html-21c0"&gt;share on Twitter&lt;/a&gt;&lt;br&gt;
üñê I make free written accessibility review so that you don't make common mistakes. If you're interested in that chat me on &lt;a href="mailto:melnik909@ya.ru"&gt;melnik909@ya.ru&lt;/a&gt; or dev.to direct. Please, specify the subject of the email "Stas, need help" &lt;/p&gt;

&lt;p&gt;ü•á If you want to be first who take my tips get &lt;a href="https://www.patreon.com/melnik909"&gt;my paid subscription on Patreon&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üéÅ Make a gift yourself or friends who like frontends: üëï &lt;a href="https://www.redbubble.com/i/t-shirt/Front-End-developer-by-melnik909/79109127.FPE53"&gt;T-Shirt&lt;/a&gt;, üéÅ &lt;a href="https://www.redbubble.com/i/sticker/Front-End-developer-by-melnik909/79109127.EJUG5"&gt;Stickers&lt;/a&gt;, ü•Ω &lt;a href="https://www.redbubble.com/i/mask/Front-End-developer-by-melnik909/79109127.6BSL1"&gt;Masks&lt;/a&gt;, üß© &lt;a href="https://www.redbubble.com/i/magnet/Front-End-developer-by-melnik909/79109127.TBCTK"&gt;Magnets&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P.S.S.&lt;/strong&gt; This post was written with the support of my sponsors: Ben Rinehart, Sergio Kagiema, Jesse Willard, Tanya Ten.&lt;/p&gt;

</description>
      <category>ux</category>
      <category>html</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Build a Google Meet Clone from Scratch: WebRTC &amp; Socket io</title>
      <author>Christopher Glikpo</author>
      <pubDate>Mon, 02 Aug 2021 15:40:23 +0000</pubDate>
      <link>https://dev.to/cglikpo/build-a-google-meet-clone-from-scratch-webrtc-socket-io-e80</link>
      <guid>https://dev.to/cglikpo/build-a-google-meet-clone-from-scratch-webrtc-socket-io-e80</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/h2D7IkMUC20"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Hi and welcome to the course "Build a Google Meet clone from scratch: WebRTC, Socket io &amp;amp; Javascript"".&lt;/p&gt;

&lt;p&gt;webrtc and socket io is combination of powerfull technology where you will able to transfer data in real time with low letency. And thats why its been considering the best technology to build video conferencing app. So If you are webrtc enthusiastic, want to build webconferencing website also want to learn socket io where you are going to build group conferencing webapp in real time, low letency data transfer then you are in the right place.&lt;/p&gt;

&lt;p&gt;In this course we are going to learn how to create a landing page where users will able to host a new meeting or will be able join in a existing meeting by using meeting code. Then in the webconferencing page step by step we will create audio and video streaming for perticular meeting with related functinality. Where user not only can interect with audio video but also user will able to chat in a room. User will able share files and photo. There user can see total number user participant with details. Along with camera input we will also create system to share screen in a meeting. And also we will create recording system where user will able to record full meeting with audio. Not last but least we will create bunch of functionality to make the website more functional.&lt;/p&gt;

&lt;p&gt;So what you say? ready to dive in? Sign up today and get immediate access to the high quality video, downloadable complete project source code with one on one expert support. All backed by a 30 days 100% gaurenty. Got a lot to cover. So lets dive in.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>webrtc</category>
    </item>
    <item>
      <title>üëæ Mutation testing on Go</title>
      <author>Guilherme Guitte</author>
      <pubDate>Mon, 02 Aug 2021 15:29:44 +0000</pubDate>
      <link>https://dev.to/guilhermeguitte/mutation-testing-on-go-1lbf</link>
      <guid>https://dev.to/guilhermeguitte/mutation-testing-on-go-1lbf</guid>
      <description>&lt;p&gt;One of the Developer's goals is to improve the healthiness of codebases. Fortunately, automated testing is a widely known practice to decrease production cycles and receive accelerated feedback. But, how we can check if our test suite are healthy? One of the techniques on automated testing to identify weak spots of dead/untested code is &lt;strong&gt;Mutation Testing&lt;/strong&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-mutation-testing"&gt;
  &lt;/a&gt;
  What is Mutation Testing? üëæ
&lt;/h2&gt;

&lt;p&gt;Mutation testing or known as Mutation Analysis, involves to modifies an application in small ways programmatically and running against your test suite looking for weak spots of your code that has not test for a specific mutation. &lt;/p&gt;

&lt;p&gt;Fundamental concepts involved over Mutation Testing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Mutants&lt;/strong&gt;: a modified version that will test against a testing suite.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Mutation Score&lt;/strong&gt;: percentage of &lt;strong&gt;passed mutation/total mutation created total&lt;/strong&gt;. 
0 means all mutations created are &lt;em&gt;alive&lt;/em&gt; üëæ, so the tests are probably has not good coverage.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Mutation operators/mutators&lt;/strong&gt;: A mutator is an operation applied to the original code. Many types of mutators can be applied. It is important to check which mutators are available for your mutation tool.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Equivalent Mutations&lt;/strong&gt;: Are false-positives mutants. Sometimes, it will found a mutated version that has no practical changes. Often, they can mean a dead/useless code in the application.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#when-to-use-mutation-testing"&gt;
  &lt;/a&gt;
  When to use Mutation Testing?
&lt;/h2&gt;

&lt;p&gt;It is an exciting alternative to the code coverage we see over different open source projects. One caveat about mutation testing that, for larger codebases, mutation testing can consume a significant amount of resources. So it can be decide to run it periodically through the codebase, not each push to your git remote repository.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#mutation-testing-in-go"&gt;
  &lt;/a&gt;
  Mutation Testing in Go
&lt;/h2&gt;

&lt;p&gt;In practice, how mutation testing works? Let's see the follow code sample that will be the production code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;GreetingsByLocale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;localestring&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

   &lt;span class="n"&gt;greetings&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;resolveGreetings&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;locale&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;greetings&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Sorry, we didn't identified you"&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;greetings&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;resolveGreetings&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;localestring&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="n"&gt;iflocale&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"en"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Hello"&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="n"&gt;iflocale&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"pt"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Ol√°"&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The example above, implements a very straightforward &lt;code&gt;GreetingByLocale&lt;/code&gt; function, that returns the appropriated greetings by locale. Example: &lt;code&gt;en&lt;/code&gt; , &lt;code&gt;pt&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To running a mutation testing in Go, we have to install a mutation testing tool. For this article I've choose &lt;a href="https://github.com/zimmski/go-mutesting"&gt;go-mutesting&lt;/a&gt; based what I was looking for at &lt;a href="https://github.com/avelino/awesome-go"&gt;awesome-go&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-install"&gt;
  &lt;/a&gt;
  How to install
&lt;/h2&gt;

&lt;p&gt;Running the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;go get &lt;span class="nt"&gt;-t&lt;/span&gt; &lt;span class="nt"&gt;-v&lt;/span&gt; github.com/zimmski/go-mutesting/...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will be ready to run the follow command without problem normally. If you have any problems, check it out &lt;a href="https://github.com/zimmski/go-mutesting"&gt;documentation&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;go-mutesting main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The command above, will produce:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nt"&gt;--------&lt;/span&gt; main.go   2021-06-06 14:33:00.000000000 +0200
+++ /var/folders/y0/z16t6n116rxgq599drwq_z31r3w4v8/T/go-mutesting-406451808/basics-ut/main.go.0 2021-06-06 14:41:17.000000000 +0200
@@ &lt;span class="nt"&gt;-5&lt;/span&gt;,7 +5,7 @@
        greetings :&lt;span class="o"&gt;=&lt;/span&gt; resolveGreetings&lt;span class="o"&gt;(&lt;/span&gt;locale&lt;span class="o"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if &lt;/span&gt;greetings &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
-               &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;"Sorry, we didn't identified you"&lt;/span&gt;
+
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return &lt;/span&gt;greetings
@@ &lt;span class="nt"&gt;-21&lt;/span&gt;,4 +21,4 @@
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
-&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="se"&gt;\ &lt;/span&gt;No newline at end of file
+&lt;span class="o"&gt;}&lt;/span&gt;

...

FAIL &lt;span class="s2"&gt;"/var/folders/y0/z16t6n116rxgq599drwq_z31r3w4v8/T/go-mutesting-406451808/basics-ut/main.go.2"&lt;/span&gt; with checksum 7543b5d5e97c3a66dec555fb1c908957
The mutation score is 0.000000 &lt;span class="o"&gt;(&lt;/span&gt;0 passed, 3 failed, 0 duplicated, 0 skipped, total is 3&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#what-information-you-should-take-care-of"&gt;
  &lt;/a&gt;
  What information you should take care of?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Mutation Score&lt;/strong&gt;: Percentage over &lt;strong&gt;passed mutation / mutation created total.&lt;/strong&gt;  0 means all mutation created are &lt;strong&gt;alive,&lt;/strong&gt; so the tests are probably not covering the whole usage of this package.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mutation&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;greetings&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;               &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Sorry, we didn't identified you"&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output of mutation testing explains which it was modified that make the &lt;strong&gt;testing suite failed&lt;/strong&gt;. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#fixing-mutations"&gt;
  &lt;/a&gt;
  Fixing Mutations
&lt;/h2&gt;

&lt;p&gt;You need to created the appropriated tests that covers the mutation. For it, you can implement something like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;TestGreetingsByLocaleByDefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="n"&gt;greetings&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;GreetingsByLocale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;greetings&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;"Sorry, we didn't identified you"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Errorf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"greeting() = %v; want 'Sorry, we didn't identified you'"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;greetings&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Running again &lt;code&gt;go-mutesting&lt;/code&gt;, you should see this output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;go-mutesting main.go

PASS &lt;span class="s2"&gt;"/var/folders/y0/z16t6n116rxgq599drwq_z31r3w4v8/T/go-mutesting-610805264/basics-ut/main.go.0"&lt;/span&gt; with checksum 73ab3954dddfcf60d062bf280b49e996
PASS &lt;span class="s2"&gt;"/var/folders/y0/z16t6n116rxgq599drwq_z31r3w4v8/T/go-mutesting-610805264/basics-ut/main.go.1"&lt;/span&gt; with checksum 0a29bb0da18ff5c339c726f678c8f4b9
PASS &lt;span class="s2"&gt;"/var/folders/y0/z16t6n116rxgq599drwq_z31r3w4v8/T/go-mutesting-610805264/basics-ut/main.go.2"&lt;/span&gt; with checksum 7543b5d5e97c3a66dec555fb1c908957
The mutation score is 1.000000 &lt;span class="o"&gt;(&lt;/span&gt;3 passed, 0 failed, 0 duplicated, 0 skipped, total is 3&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Perfect! We fix all mutations found.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#going-further"&gt;
  &lt;/a&gt;
  Going further
&lt;/h2&gt;

&lt;p&gt;Mutation testing is very powerful technique to spot weak coverage points of your test suite. Some links you can found useful:&lt;/p&gt;

&lt;p&gt;Explanation about mutation testing: &lt;br&gt;
&lt;a href="https://en.wikipedia.org/wiki/Mutation_testing"&gt;https://en.wikipedia.org/wiki/Mutation_testing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mutation testing tools by language:&lt;br&gt;
&lt;a href="https://github.com/theofidry/awesome-mutation-testing"&gt;https://github.com/theofidry/awesome-mutation-testing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mutation testing tool for Go:&lt;br&gt;
&lt;a href="https://github.com/zimmski/go-mutesting"&gt;https://github.com/zimmski/go-mutesting&lt;/a&gt;&lt;/p&gt;

</description>
      <category>go</category>
      <category>testdev</category>
      <category>testing</category>
    </item>
    <item>
      <title>10 VS Code extensions every Frontend Developer should use</title>
      <author>vansh bhardwaj</author>
      <pubDate>Mon, 02 Aug 2021 15:21:40 +0000</pubDate>
      <link>https://dev.to/vansh__bhardwaj/10-vs-code-extensions-every-frontend-developer-should-use-3633</link>
      <guid>https://dev.to/vansh__bhardwaj/10-vs-code-extensions-every-frontend-developer-should-use-3633</guid>
      <description>&lt;p&gt;Hello everyone, my name is Vansh and I'm a frontend developer. In this blog post, I would like to share 10 VS code extensions that every frontend developer should use. The purpose of using these extensions is to write faster, cleaner, and more consistent code. &lt;strong&gt;Let's Jump in!&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-live-server"&gt;
  &lt;/a&gt;
  1. Live server
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UMhXhJWS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4wak3fd5avrcf9u91oyt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UMhXhJWS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4wak3fd5avrcf9u91oyt.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's irritating to save changes in the editor and then refresh the browser to see changes, right? thanks to live server , it enforces auto-reload and ensures that your changes are rendered immediately you save your work. It creates a local development server right in Visual Studio Code to serve your static and dynamic sites.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I65LRtpp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xqr0z7j7c6fato2hnvi8.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I65LRtpp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xqr0z7j7c6fato2hnvi8.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-mithril-emmet"&gt;
  &lt;/a&gt;
  2. Mithril Emmet
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cZuC_3DO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627911331550/APGtz9nBw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cZuC_3DO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627911331550/APGtz9nBw.png" alt="emmet.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt; Emmet &lt;/a&gt; is a web-developer‚Äôs toolkit that can greatly improve your HTML &amp;amp; CSS workflow . &lt;a&gt; Emmet &lt;/a&gt; allow us to generate HTML code much quicker and easier than writing them out ourselves. This can greatly increase your speed in development.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BA71Js_5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627911489695/i3LpxiM_Q.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BA71Js_5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627911489695/i3LpxiM_Q.gif" alt="emmet.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-eslint"&gt;
  &lt;/a&gt;
  3. ESLint
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yWXQ44W_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627911586739/JV0XhgklZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yWXQ44W_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627911586739/JV0XhgklZ.png" alt="eslint.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It Integrates ESLint into VS Code. If you are new to ESLint check the documentation.&lt;br&gt;
It allows you to stick to standard practices like indentation and positioning.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-prettier"&gt;
  &lt;/a&gt;
  4. Prettier
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xe8AIXbK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627911619229/7sMmDe57z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xe8AIXbK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627911619229/7sMmDe57z.png" alt="Prettier.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When writing code, a lot of time goes into formatting. Thanks to Prettier, it automates the task for you, removes original styling and puts on the consistent code style which makes code much more readable. It automatically tidy up the code every time the changes are saved.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-bracket-pair-colorizer"&gt;
  &lt;/a&gt;
  5. Bracket pair colorizer
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZFM9fx-1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627911672756/wHm03X6Wu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZFM9fx-1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627911672756/wHm03X6Wu.png" alt="color.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It colourizes and gives same colors to your opening and closing brackets.&lt;br&gt;
It sometimes happens that at the end of your file or function, you have more than one or two closing brackets, and it‚Äôs not so easy to find the correct one of them. Use Bracket pair colorizer to know where your bracket opens and closes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-css-peek"&gt;
  &lt;/a&gt;
  6. CSS Peek
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kn7ADIrj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627911714987/ZEi9rHJhw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kn7ADIrj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627911714987/ZEi9rHJhw.png" alt="csspeeek.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CSS Peek helps to quickly find and check styles applied for selected class or id. It‚Äôs beneficial for developers who don‚Äôt like to switch between different files or split the screen or like to jump between HTML and CSS Back-and-forth.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4z-gyCG4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627912371315/jWtonXmpm.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4z-gyCG4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627912371315/jWtonXmpm.gif" alt="csspeek.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-javascript-es6-code-snippets"&gt;
  &lt;/a&gt;
  7. JavaScript ES6 Code snippets
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KxPO8bmX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627911761488/7Mm6noQhw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KxPO8bmX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627911761488/7Mm6noQhw.png" alt="es6.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It provides Code Snippets for your JavaScript code and uses ES6 syntax.&lt;br&gt;
Snippets are handy and can help to prevent lots of spelling bugs and can make coding much faster. To speed up your Javascript coding, use Javascript code snippets. It also supports TypeScript and JSX files.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-simple-react-snippets"&gt;
  &lt;/a&gt;
  8. Simple React snippets
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m3QHRCpt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627911808645/0gezUqMUw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m3QHRCpt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627911808645/0gezUqMUw.png" alt="rect.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As mentioned above, Snippets are handy and make coding faster. This extension is a collection of day-to-day React snippets and commands.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-env"&gt;
  &lt;/a&gt;
  9. ENV
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--92gZauuY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627911847239/PPVV7gfCa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--92gZauuY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627911847239/PPVV7gfCa.png" alt="env.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is a simple extension, it adds formatting and syntax highlighting support for env files.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6NzltgKp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627912403872/dt828ggmi.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6NzltgKp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627912403872/dt828ggmi.gif" alt="env.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-debugger-for-chrome"&gt;
  &lt;/a&gt;
  10. Debugger for Chrome
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o_rXnF6a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627911886826/U91zlEDaS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o_rXnF6a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627911886826/U91zlEDaS.png" alt="debug.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Debugger for Chrome extension adds the Google Chrome browser debugger into your editor. It allows you to launch an instance of Chrome navigated to your app, or it can attach to a running instance of Chrome.&lt;br&gt;
It supports setting breakpoints, stepping, debugging scripts, and more. If you are tired of switching from files in the code editor to debugging console in the browser, it‚Äôs a great plugin for you.&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Burnout: The Price of¬†Passion</title>
      <author>Saji Wang</author>
      <pubDate>Mon, 02 Aug 2021 15:05:37 +0000</pubDate>
      <link>https://dev.to/codesphere/burnout-the-price-of-passion-2kok</link>
      <guid>https://dev.to/codesphere/burnout-the-price-of-passion-2kok</guid>
      <description>&lt;p&gt;Developer burnout is real and it's more common than you might think.&lt;/p&gt;

&lt;p&gt;We are all aware of imposter syndrome and the ever-present "I have no idea what I'm doing" voice that plagues new and experienced developers alike, but burning out can be a little more insidious. While you might have heard stories of overworked and unhappy employees being worked into an early retirement, what we don't prepare for is how much more likely you are to burn out when you are enjoying your work‚Ä¶&lt;/p&gt;

&lt;p&gt;That's right, even when you finally find that project you have been waiting for, that once in a lifetime dream job, you still have to know when enough is enough when to shut your laptop and take a break.&lt;/p&gt;

&lt;p&gt;Just ask the animators of one of your favorite childhood films about toys that come to life‚Ä¶they were so excited to build their vision, many of them were overworked, burned out, developed physical and mental stress related disorders that almost bought the whole show crashing down.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l2P6ozrb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lodcz2v1h4la26d7yj7o.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l2P6ozrb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lodcz2v1h4la26d7yj7o.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's take a step back and take a look at what developer burnout is.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-burnout"&gt;
  &lt;/a&gt;
  What is burnout?
&lt;/h3&gt;

&lt;p&gt;In short, it is a mental and physical collapse of a developer caused by stress or overworking. Unlike a bad day, which can happen fairly often, burnout can last for weeks at a time and steal a developer's passion for coding altogether.&lt;/p&gt;

&lt;p&gt;The world health organization officially recognizes the workplace phenomenon and defines it as:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Burnout is a syndrome conceptualized as resulting from chronic workplace stress that has not been successfully managed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Simple right? If you work too much you'll eventually break down..well, not exactly. Everyone suffers from and responds to stress differently and the cause of a burnout can differ from person to person. Some developers might indeed struggle with high workloads, while others may not be able to work with insufficient processes or unclear goals, so it is important to recognize the symptoms of a burnout and to know your limits.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#symptoms-of%C2%A0burnout"&gt;
  &lt;/a&gt;
  Symptoms of¬†burnout
&lt;/h3&gt;

&lt;p&gt;Knowing the symptoms of burnout can help you avoid the whole thing. You might also spot some of them in your co-workers, guide them into a healthier work process, save them from an intense workplace breakdown, develop a lifelong friendship and go on to build and deploy an app in Codesphere together that changes the lives of millions of people. You might‚Ä¶&lt;/p&gt;

&lt;p&gt;Look out for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lack of energy&lt;/li&gt;
&lt;li&gt;Physical exhaustion and fatigue&lt;/li&gt;
&lt;li&gt;A loss of interest or passion in your work&lt;/li&gt;
&lt;li&gt;Cynicism toward work-related topics&lt;/li&gt;
&lt;li&gt;No sense of accomplishment&lt;/li&gt;
&lt;li&gt;Sleeplessness&lt;/li&gt;
&lt;li&gt;Frequent headaches&lt;/li&gt;
&lt;li&gt;Feelings of isolations&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;They might seem obvious but in a fast-paced work environment with a product to build and ideas flowing, it takes an experienced eye to step back and take a look at how much of a price you're paying for your passion. You have to know how to pick yourself back up from the ground.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zmA3YjeG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5x5j3m0agb7ton1j65ag.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zmA3YjeG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5x5j3m0agb7ton1j65ag.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-avoid-a%C2%A0burnout"&gt;
  &lt;/a&gt;
  How to avoid a¬†burnout
&lt;/h2&gt;

&lt;p&gt;Knowing what a burnout is and how to recognize it is a great start, but I hear you asking "how do I stop it from happening?". Well, there are a few tips you can follow if you want to stay on top of your game at both work and home.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-diet"&gt;
  &lt;/a&gt;
  1. Diet
&lt;/h3&gt;

&lt;p&gt;Some of you may be rolling your eyes at another healthy eating article that forces goji berries into your life but look, every civilization in human history has recognized a simple truth‚Ää-‚ÄäYou Are What You Eat!&lt;br&gt;
Now, I don't have a link to a pdf of a dietary plan for you to download and stick to your fridge, but eating smart is the way to go. Developing is a lot of sitting down. Snacks are a great way to get an energy boost, but make sure you're eating right where you can at work. Take-outs and beers might be best used to celebrate the launch of a new feature instead of to take your mind off that syntax error you find‚Ä¶&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-take%C2%A0breaks"&gt;
  &lt;/a&gt;
  2. Take¬†breaks
&lt;/h3&gt;

&lt;p&gt;No brainer, if you sit in front of your work station for 9 hours you're going to pay for it sooner or later. Take breaks often to get up and walk around. Avoiding the obvious health risks of sitting down for a prolonged time, like deep vein thrombosis or heart disease, your brain needs space to process information. Five minutes outside can make a world of difference.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-socialize"&gt;
  &lt;/a&gt;
  3. Socialize
&lt;/h3&gt;

&lt;p&gt;The more perceptive of you would have read that isolation is a symptom to look out for when it comes to burnouts and what better way to combat being alone than not being alone. This doesn't just mean team events or getting smashed on a Friday after work. Time with your team talking about anything other than work can be a great way to strengthen the workflow. Time with family and friends, away from work, can help you build that all-important work/life balance and return to work ready to achieve the healthier, zen-like state of development that we here at Codesphere strive for.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-avoid-carpal-tunnel%C2%A0syndrome"&gt;
  &lt;/a&gt;
  4. Avoid Carpal Tunnel¬†syndrome
&lt;/h3&gt;

&lt;p&gt;It is very common and it is very unpleasant. Make sure you sit in the correct position at your desk and minimize the risk; numb and tingly feelings in your hand can be the sign of the dreaded Carpal Tunnel affliction. It's exactly this kind of extra stress we are trying to avoid!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q0yoHYe4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ec5adcopqn0onsw6kd0g.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q0yoHYe4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ec5adcopqn0onsw6kd0g.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So there are a few ways you can keep yourself away from burning out. But let's say you didn't read our advice very well, maybe you didn't like the diet advice so you closed the tab and you've since been the victim of burnout and now you're back to find some sage advice on how to recover? Well, let's take a look at how one might get back into a healthy state of mind‚Ä¶&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-recover-from%C2%A0burnout"&gt;
  &lt;/a&gt;
  How to recover from¬†burnout
&lt;/h2&gt;

&lt;p&gt;Start slow. Don't make the same mistakes that got you into this state in the first place. If you were taking a 5-minute break every 45 minutes, take a break every 15 minutes now.&lt;/p&gt;

&lt;p&gt;Double down on your emotional detachment from work life, if you want to ease yourself back into developing then focus on the things you do when you're not developing. Be unreachable when you're not in the office or start hobbies that keep you busy. Too busy to get sucked back into solving that one last problem, and busy enough for your mind to relax without throwing it straight back into the deep end.&lt;/p&gt;

&lt;p&gt;Communicate with your team and people around you, let them know what's going on so people can hold you accountable when you start to slip back into that old familiar routine.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z5UKeLyw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d3no8acv7bvqhmcmmmvo.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z5UKeLyw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d3no8acv7bvqhmcmmmvo.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#work-smart"&gt;
  &lt;/a&gt;
  Work smart
&lt;/h3&gt;

&lt;p&gt;Developer Burnout can be an awful experience, leaving you with no desire to string two lines of code together and lose your love to code, but it doesn't have to be your fate. Listen to your body and look out for your colleagues. Building what we love is a blessing we all share in the developing world, but it comes at a price. Knowing that price and how best to pay it is the key to a happy and healthy work-life.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bonus-tip"&gt;
  &lt;/a&gt;
  Bonus Tip!
&lt;/h3&gt;

&lt;p&gt;Another helpful way to avoid burnout is not to spend 5 hours attempting to deploy your next web app. By combining a Web IDE with the cloud, &lt;a href="https://link.codesphere.com/BZ"&gt;Codesphere&lt;/a&gt; streamlines the deployment process, so you can spend less time configuring, and more time doing what your body and mind need.&lt;/p&gt;




&lt;p&gt;Thanks for reading! What advice do you have when you feel burnout?&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Learing ruby - day 3</title>
      <author>aderayevans</author>
      <pubDate>Mon, 02 Aug 2021 14:53:44 +0000</pubDate>
      <link>https://dev.to/aderayevans/learing-ruby-day-3-30gk</link>
      <guid>https://dev.to/aderayevans/learing-ruby-day-3-30gk</guid>
      <description>&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#take-user-input"&gt;Take user input&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#convert"&gt;Convert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pass-multiple-arguments"&gt;Pass multiple arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#default-arguments"&gt;Default arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#keyword-arguments"&gt;Keyword arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#block"&gt;Block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#proc"&gt;Proc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Hey guys, welcome to my blog recording my ruby self-taught process&lt;/p&gt;

&lt;p&gt;I decided to learn this amazing language while I was trying to solving some ruby challenges to get my tenth badge in HackerRank&lt;/p&gt;

&lt;p&gt;At the first two days, We have learned about some common collections such as array and hash in ruby. We have also gotten to know with string.&lt;/p&gt;

&lt;p&gt;Today, we will learn more about methods and arguments &lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#take-user-input"&gt;
  &lt;/a&gt;
  Take user input
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gets&lt;/span&gt;

&lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="s2"&gt;"hi\n"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I typed &lt;code&gt;hi&lt;/code&gt; and hit Enter&lt;/p&gt;

&lt;p&gt;As you can see, it also gets the NEWLINE character, which we don't want to.&lt;/p&gt;

&lt;p&gt;So use the chomp method we have learned before to delete that last character at every &lt;code&gt;gets&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;One more problem here&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gets&lt;/code&gt; just gets input as raw type, we need to convert it to other type to use it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_i&lt;/span&gt;

&lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We converted the input to integer, if you type a non-digit character, &lt;code&gt;i&lt;/code&gt; will be &lt;code&gt;0&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#convert"&gt;
  &lt;/a&gt;
  Convert
&lt;/h2&gt;

&lt;p&gt;Convert variable types in Ruby is pretty simple.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# String to integer&lt;/span&gt;
&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_i&lt;/span&gt;
&lt;span class="c1"&gt;# String to float&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_f&lt;/span&gt;
&lt;span class="c1"&gt;# Anything to string&lt;/span&gt;
&lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ob&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_str&lt;/span&gt;

&lt;span class="c1"&gt;# or if you want to catch error unless user type digit&lt;/span&gt;
&lt;span class="c1"&gt;# String to integer&lt;/span&gt;
&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# String to float&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#pass-multiple-arguments"&gt;
  &lt;/a&gt;
  Pass multiple arguments
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;rest&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
    &lt;span class="n"&gt;rest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="n"&gt;str&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"the"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"end"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;*rest&lt;/code&gt; is a array of all arguments passed&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#default-arguments"&gt;
  &lt;/a&gt;
  Default arguments
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;increase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;increase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;increase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#keyword-arguments"&gt;
  &lt;/a&gt;
  Keyword arguments
&lt;/h2&gt;

&lt;p&gt;Convert Temperature program using keyword arguments input_scale and output_scale as default arguments&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;celsius_kelvin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;273.15&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;kelvin_celsius&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;273.15&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;celsius_fahrenheit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mf"&gt;1.8&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fahrenheit_celsius&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mf"&gt;1.8&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;kelvin_fahrenheit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;273.15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mf"&gt;1.8&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fahrenheit_kelvin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mf"&gt;1.8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;273.15&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;convert_temp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;input_scale: &lt;/span&gt;&lt;span class="s1"&gt;'celsius'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;output_scale: &lt;/span&gt;&lt;span class="s1"&gt;'celsius'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;input_scale&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;output_scale&lt;/span&gt;
    &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;input_scale&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s2"&gt;"_"&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;output_scale&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s2"&gt;"(&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;)"&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="n"&gt;cmd&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;convert_temp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;input_scale: &lt;/span&gt;&lt;span class="s1"&gt;'kelvin'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;output_scale: &lt;/span&gt;&lt;span class="s1"&gt;'celsius'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;convert_temp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;393&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;input_scale: &lt;/span&gt;&lt;span class="s1"&gt;'kelvin'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;output_scale: &lt;/span&gt;&lt;span class="s1"&gt;'celsius'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;convert_temp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;input_scale: &lt;/span&gt;&lt;span class="s1"&gt;'fahrenheit'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;output_scale: &lt;/span&gt;&lt;span class="s1"&gt;'celsius'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;convert_temp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;333&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;input_scale: &lt;/span&gt;&lt;span class="s1"&gt;'fahrenheit'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;output_scale: &lt;/span&gt;&lt;span class="s1"&gt;'kelvin'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight viml"&gt;&lt;code&gt;&lt;span class="m"&gt;-273&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;
&lt;span class="m"&gt;119&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="m"&gt;85000000000002&lt;/span&gt;
&lt;span class="m"&gt;204&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="m"&gt;44444444444443&lt;/span&gt;
&lt;span class="m"&gt;440&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="m"&gt;3722222222222&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We could also set a hash parameter &lt;code&gt;**&lt;/code&gt; that helps user pass a key argument&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;str: &lt;/span&gt;&lt;span class="s2"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;num: &lt;/span&gt;&lt;span class="mi"&gt;424242&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each_pair&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;
        &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;key: &lt;/span&gt;&lt;span class="s2"&gt;"val"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;key2: &lt;/span&gt;&lt;span class="s2"&gt;"val2"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight viml"&gt;&lt;code&gt;&lt;span class="nb"&gt;key&lt;/span&gt;
val
key2
val2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#block"&gt;
  &lt;/a&gt;
  Block
&lt;/h2&gt;

&lt;p&gt;Blocks are nameless methods that can be passed to another method as a parameter&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;call_block&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Start"&lt;/span&gt;
    &lt;span class="k"&gt;yield&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"End"&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt; 

&lt;span class="c1"&gt;# Pass a block {puts "I'm in"} to call_block method&lt;/span&gt;
&lt;span class="c1"&gt;# We can pass with do..end&lt;/span&gt;
&lt;span class="n"&gt;call_block&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; 
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"I'm in"&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="c1"&gt;# or&lt;/span&gt;
&lt;span class="n"&gt;call_block&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"I'm in"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Start
I&lt;span class="s1"&gt;'m in
End
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also pass a block to a method that takes parameters&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;call_block&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Start"&lt;/span&gt;
    &lt;span class="k"&gt;yield&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"End"&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt; 

&lt;span class="n"&gt;call_block&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Start
&lt;span class="nt"&gt;-11&lt;/span&gt;
End
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#proc"&gt;
  &lt;/a&gt;
  Proc
&lt;/h2&gt;

&lt;p&gt;"&lt;em&gt;A Proc object is an encapsulation of a block of code, which can be stored in a local variable, passed to a method or another Proc, and can be called.&lt;/em&gt;"&lt;/p&gt;

&lt;p&gt;If Block is a nameless method that can be passed to another method right after the method name&lt;/p&gt;

&lt;p&gt;Proc is now the object that holding block, we can pass it as a normal variable to another method&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;square_of_sum&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;proc_sum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;proc_square&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;proc_sum&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;proc_square&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;proc_sum_arr&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;proc&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;proc_square_number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;proc&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;square_of_sum&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;proc_sum_arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;proc_square_number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If Block codes are called by &lt;code&gt;yield&lt;/code&gt; key word&lt;/p&gt;

&lt;p&gt;Proc codes are called by call() method&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Today we have learned how to take user input, convert variables in ruby&lt;/p&gt;

&lt;p&gt;We also have learned some advanced ways to create methods and pass arguments&lt;/p&gt;

&lt;p&gt;Knowledged a closure object called Proc, and a nameless method called Block&lt;/p&gt;




&lt;p&gt;I'd like to thank HackerRank for giving me a chance to acknowledge and be interesting in this cool language&lt;/p&gt;

&lt;p&gt;If guys found Ruby is fascinating, please come to the link below and solve some Ruby challenges with me &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.hackerrank.com/domains/ruby"&gt;https://www.hackerrank.com/domains/ruby&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any question or suggestion, please let me know at the comment section below.&lt;/p&gt;

&lt;p&gt;OK I'm going to wrap this up here&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Thanks for reading my blog&lt;/code&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>JavaScript ES6 keyed collections</title>
      <author>Guilherme Gules</author>
      <pubDate>Mon, 02 Aug 2021 14:52:32 +0000</pubDate>
      <link>https://dev.to/guilhermegules/javascript-es6-keyed-collections-544n</link>
      <guid>https://dev.to/guilhermegules/javascript-es6-keyed-collections-544n</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;With Data Structures we can store, organize, order and handle data. We need to understand how and when use determinate structures.&lt;/p&gt;

&lt;p&gt;JavaScript has some built-in structures introduced on es6 version, even though these data structures have some time of existence has many developers has doubt about how to use them, today I wanna try to clarify the information about these.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#map"&gt;
  &lt;/a&gt;
  Map
&lt;/h2&gt;

&lt;p&gt;Map is an object and works as a common object, the major difference between them is because map lets you work with internal functions to make the insertion, deletion or get one element with a more simplistic form.&lt;/p&gt;

&lt;p&gt;Also, Map only permit a unique key with diferents values. So if I create a map like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const map = new Map();

map.set('first', 1);

console.log(map.get('first')); // 1

map.set('first', 100);

console.log(map.get('first')); // 100

console.log(map.size); // 1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can note the value is changed but only one key as stored on our Map.&lt;/p&gt;

&lt;p&gt;Map is iterable, so we can use a for..of or for each to iterate through our structure and make operations there.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const map = new Map();

map.set('first', 1);
map.set('second', 2);

for(let item of map) {
  console.log(item);
}

for(let [key, value] of map.entries()) {
  console.log(key, value);
}

for(let key of map.keys()) {
  console.log(key);
}

for(let value of map.values()) {
  console.log(value);
}

map.forEach((item, key) =&amp;gt; {
  console.log(key, item);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With &lt;code&gt;for...of&lt;/code&gt; each iteration return an array like this &lt;code&gt;[key, value]&lt;/code&gt;, with &lt;code&gt;forEach&lt;/code&gt; on each we have three parameters, first the value, them the key and finally the map itself.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whywhen-use-map"&gt;
  &lt;/a&gt;
  Why/When use Map?
&lt;/h3&gt;

&lt;p&gt;We wanna use Map structure when it's necessary to keep control of information about the object, and we need to keep keys unique, also Map has a simple usage, so it's simple to get used to using.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weakmap"&gt;
  &lt;/a&gt;
  WeakMap
&lt;/h2&gt;

&lt;p&gt;WeakMap is a collection of key/value in which keys are weakly referenced. &lt;/p&gt;

&lt;p&gt;Because keys are weakly referenced, they cannot be enumerated, so we can't iterate them like Map and cannot obtain the keys. &lt;/p&gt;

&lt;p&gt;We can use WeakMaps like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const weakMap = new WeakMap();

const value1 = {};
const value2 = function(){};
const value3 = "I'm the third value";
const value4 = { foo: 'foo' };
const value5 = { key: 'foo' };

weakMap.set(value1, value2);

console.log(weakMap.has(value3)); // false

console.log(weakMap.get(value1)); // Returns the value based on key, in this case function() {}

weakMap.delete(value1);

weakMap.set(value5, value4);

console.log(weakMap.get(value5)); // Using a object that already in memory, we can access the position

weakMap.set({ myKey: 'myKey' }, {value: 1});

console.log(weakMap.get({ myKey: 'myKey' })); // Will return undefined, because the object on function call is one and the object on the set function is another
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Note: We can't use primitives values like keys with WeakMaps&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whywhen-use-weakmap"&gt;
  &lt;/a&gt;
  Why/When use WeakMap?
&lt;/h3&gt;

&lt;p&gt;Some use cases for WeakMaps, &lt;a href="https://stackoverflow.com/questions/29413222/what-are-the-actual-uses-of-es6-weakmap"&gt;here&lt;/a&gt; have some discussion on the topic, here I will put some tests and my understandings about the data structure: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When we need to handle some private data and do not want to iterate that data, only getting the specific property, WeakMap can be a good choice.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#set"&gt;
  &lt;/a&gt;
  Set
&lt;/h2&gt;

&lt;p&gt;Sets are collections that permits the storage of any type of unique values. With sets we can avoid duplicate data, remembering that objects references can be added like a new value too.&lt;/p&gt;

&lt;p&gt;We can use Sets like that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const set = new Set();
set.add(1); // set [1]
set.add(5); // set [1, 5]
set.add(5); // 5 already was been setted, so set [1, 5]

const object = { foo: 'foo', bar: 'bar' };
set.add(object); 
set.add({ foo: 'foo', bar: 'bar' }); // This object will be added because is another reference
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's possible check if a value was inserted in our Set:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const set = new Set();

set.add(1);

set.has(1); // true

set.has(5); // false
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also we can check the size of Sets:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const set = new Set();

set.add(1);
set.add(5);
set.add(10);

console.log(set.size) // 3

set.delete(10); // Removes 10 from our set

console.log(set.size); // 2 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Like Maps, Sets can also be iterated:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const set = new Set();

set.add(1);
set.add("text");
set.add({foo: 'bar', bar: 'foo'});

for(let item of set) {
  console.log(item); 
}

// Keys will have the inserted values
for (let item of set.keys()) {
  console.log(item)
}

/**
 * key and values are the same here
 */
for (let [key, value] of set.entries()) {
  console.log(key);
  console.log(value);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using spread operator we can create a copy of a Set and use as an array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const set = new Set();

set.add(1);
set.add("text");
set.add({foo: 'bar', bar: 'foo'});

const setToArray = [...set];

setToArray.forEach(item =&amp;gt; {
  console.log(item);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#whywhen-use-set"&gt;
  &lt;/a&gt;
  Why/When use Set?
&lt;/h3&gt;

&lt;p&gt;We would like to use Sets when it's necessary to keep unique values without the need to use key/value on our structure. For that Sets are the best choice because they will keep the consistency of our data.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: it's valid to think about the objects references example because even though you pass the same object to the set, it will be saved because are different references.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weakset"&gt;
  &lt;/a&gt;
  WeakSet
&lt;/h2&gt;

&lt;p&gt;WeakSet objects permit you to store weakly held objects. Like as Set collection, WeakSet will permits each object occurrence only once.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What the difference of WeakSet and Set?&lt;/strong&gt; WeakSet only accepts objects, so they cannot contain any values like Sets. Another difference is like the WeakMap, WeakSet has weak references of the objects they held, if no other references of an object store exist this object can be garbage collected. Last but not less important, the WeekMap collection cannot be enumerable.&lt;/p&gt;

&lt;p&gt;In the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet"&gt;documentation&lt;/a&gt; have some interesting example about the usage of that structure.&lt;/p&gt;

&lt;p&gt;Simple example of using WeakSet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const weakSet = new WeakSet();
const foo = {};
const bar = {};

weakSet.add(foo);
weakSet.add(bar);

console.log(weakSet.has(foo)); // true 
console.log(weakSet.has(bar)); // true

weakSet.delete(foo); 

console.log(weakSet.has(foo)); // false    
console.log(weakSet.has(bar)); // true
console.log(weakSet.has({})); // false because is another reference    
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful links:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Key equality is based on the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#same-value-zero_equality"&gt;sameValueZero&lt;/a&gt; algorithm&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Keyed_collections"&gt;Keyed collections&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects"&gt;Standard built-in objects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>algorithms</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
