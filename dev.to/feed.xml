<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to create a progress bar with HTML and CSS</title>
      <author>Alvaro Montoro</author>
      <pubDate>Mon, 06 Dec 2021 18:22:28 +0000</pubDate>
      <link>https://dev.to/alvaromontoro/how-to-create-a-progress-bar-with-html-and-css-1fl5</link>
      <guid>https://dev.to/alvaromontoro/how-to-create-a-progress-bar-with-html-and-css-1fl5</guid>
      <description>&lt;p&gt;There are many pages on how to create a progress bar using web technologies, why do we need a new one? I found that many of those tutorials are &lt;em&gt;bloated&lt;/em&gt;: they include a lot of unnecessary HTML elements or they base everything on JavaScript. Also, they tend to forget about Web Accessibility, and the resulting component will prove to be a challenge for assistive technologies (AT) users.&lt;/p&gt;

&lt;p&gt;But it doesn't have to be that way. We can create a dynamic progress bar component using a single HTML element and some CSS, and it can be customizable, responsive, and accessible. I explained the process in this video:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/aXmNG2wie7I"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you prefer reading rather than watching videos for tutorials, I'll have a post about this topic soon (it will be sort of a transcript from the video). Or if you want to jump directly to the code and explore it, you can view the source code on this &lt;a href="https://codepen.io/alvaromontoro/full/LYjZqzP"&gt;CodePen demo&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/alvaromontoro/embed/LYjZqzP?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>tutorial</category>
      <category>youtube</category>
      <category>html</category>
    </item>
    <item>
      <title>17 Ultimate Web Developer Resourcesüéäü•á</title>
      <author>Vidhya Varshany</author>
      <pubDate>Mon, 06 Dec 2021 18:04:13 +0000</pubDate>
      <link>https://dev.to/vidhyavarshanyjs/17-ultimate-web-developer-resources-52ih</link>
      <guid>https://dev.to/vidhyavarshanyjs/17-ultimate-web-developer-resources-52ih</guid>
      <description>&lt;h3&gt;
  &lt;a href="#hello-mates-i-hope-you-all-are-doing-great"&gt;
  &lt;/a&gt;
  HELLOüëãüèª, MATES. I hope you all are doing great!!!üëçüèªüòä
&lt;/h3&gt;


&lt;center&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0xqGWvkD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media1.giphy.com/media/Cmr1OMJ2FN0B2/giphy.gif%3Fcid%3Decf05e4785k6tdb543r1a4pw258k9g4lw7gder8x5ztkbb80%26rid%3Dgiphy.gif%26ct%3Dg" alt="Bom Dia Reaction GIF" width="500" height="500"&gt;
&lt;/center&gt;

&lt;p&gt;I am glad to bring you some of the useful websites in this blog. I hope you will enjoy reading this article. So, this blog is all about websites, that are handy and can be the ultimate productivity hack, Here are some of the best websites I use to make my life easier.&lt;/p&gt;

&lt;p&gt;Let‚Äôs take a look at them one by one.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#are-you-guys-ready"&gt;
  &lt;/a&gt;
  Are you guys ready???üöÄ
&lt;/h3&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---jc1A14n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/xT39Db8zIOODTppk08/giphy.gif%3Fcid%3Decf05e47xzeadbiaiqsqcoyuy38gw81ikz0vacjscky35duc%26rid%3Dgiphy.gif%26ct%3Dg" alt="Are You Ready Mma GIF by BRAVE Combat Federation" width="480" height="480"&gt;
&lt;/center&gt;
&lt;br&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://unsplash.com/developers"&gt;Unsplash&lt;/a&gt; -  The most powerful photo engine in the world. The Unsplash API is a modern JSON API that surfaces all of the info you‚Äôll need to build any experience for your users&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5sClwuk3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638767465025/I3wz8r_93.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5sClwuk3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638767465025/I3wz8r_93.png" alt="screenstabbed_1638767408502.png" width="880" height="425"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;ol&gt;
&lt;li&gt; &lt;a href="https://apption.co"&gt;Embeddable Widget Apps for Notion&lt;/a&gt; - Add 3rd party apps embed or create a custom embed for your Notion Document.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TPqPPvaZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638767585376/4F-f2VM_i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TPqPPvaZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638767585376/4F-f2VM_i.png" alt="screenstabbed_1638767531179.png" width="880" height="425"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;


&lt;ol&gt;
&lt;li&gt; &lt;a href="https://www.peppertype.ai"&gt;Peppertype&lt;/a&gt; - Generate better content copies in seconds with the power of Artificial Intelligence. Expanding your content for writing blogs is easier than ever before. Get AI-Generated tweet ideas in seconds.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ehhUQ3uX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638767740369/6AWfxra_cp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ehhUQ3uX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638767740369/6AWfxra_cp.png" alt="screenstabbed_1638767650011.png" width="880" height="425"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;ol&gt;
&lt;li&gt; &lt;a href="https://carbon.now.sh"&gt; Carbon&lt;/a&gt; - Create and share beautiful images of your source code. Start typing or drop a file into the text area to get started.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GaaDxoo2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638767868296/teEHIqsuv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GaaDxoo2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638767868296/teEHIqsuv.png" alt="screenstabbed_1638767857412.png" width="880" height="425"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://poet.so"&gt;Poet.so&lt;/a&gt; -  Capture and share Twitter posts as beautiful images. You could use this as social proof on your website.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--co4XOGiM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638768120819/FnZIUEzrM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--co4XOGiM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638768120819/FnZIUEzrM.png" alt="screenstabbed_1638768105504.png" width="880" height="421"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;ol&gt;
&lt;li&gt; &lt;a href="https://clearbit.com/resources/tools/visitor-report"&gt;Weekly Visitor Report &lt;/a&gt;  -  Get a weekly report of the companies visiting your website.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AkLKtABp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638768279039/rFux8a8UD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AkLKtABp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638768279039/rFux8a8UD.png" alt="screenstabbed_1638768267482.png" width="880" height="425"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;ol&gt;
&lt;li&gt; &lt;a href="https://smartmockups.com"&gt;Smart Mockup&lt;/a&gt; 
                     - Create stunning product mockups easily and online
                     - The fastest web-based mockup tool
                     - No experience or skills needed, super easy-to-use&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YN0bOLoz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638779163506/6EqW4-01n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YN0bOLoz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638779163506/6EqW4-01n.png" alt="screenstabbed_1638779145814.png" width="880" height="425"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;


&lt;ol&gt;
&lt;li&gt; &lt;a href="https://smalldev.tools"&gt; Small Dev tools  &lt;/a&gt;  - Handy developer tools with a delightful interface. Provide 20+ tools that help developers with commonly performed tasks like Encoding/Decoding, Minifying, Test Dummy data set, and a lot more.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YF0pB3UZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638779290981/NcE5gpgNL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YF0pB3UZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638779290981/NcE5gpgNL.png" alt="screenstabbed_1638779272589.png" width="880" height="425"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;


&lt;ol&gt;
&lt;li&gt; &lt;a href="https://www.npmjs.com/package/figlet"&gt;Show beautiful message in the console &lt;/a&gt;  -  FIGlet is a program for making large letters out of ordinary text.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9ADzEvgN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638779430643/IdPai5Neon.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ADzEvgN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638779430643/IdPai5Neon.png" alt="screenstabbed_1638779419571.png" width="880" height="425"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;


&lt;ol&gt;
&lt;li&gt; &lt;a href="https://type-scale.com"&gt; A Visual Type Scale&lt;/a&gt;  -  Understand and visualize the difference between different font sizes, REM vs. EM Values. Check the preview in real-time to see how it looks&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jC9SSegZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638779463184/EkdNOvLHc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jC9SSegZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638779463184/EkdNOvLHc.png" alt="image.png" width="880" height="425"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.remove.bg"&gt; Remove Background from Image  &lt;/a&gt;  -  Remove backgrounds 100% automatically in 5 seconds with zero clicks.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JZzInS8w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638779493808/8zVdY1r8Y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JZzInS8w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638779493808/8zVdY1r8Y.png" alt="image.png" width="880" height="425"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;



&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://clearbit.com/resources/tools/visitor-report"&gt;Responsively &lt;/a&gt;  -  Develop responsive web apps 5x faster!&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ROloZEzy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638811974650/1nIGYC8IT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ROloZEzy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638811974650/1nIGYC8IT.png" alt="image.png" width="880" height="425"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;


&lt;ol&gt;
&lt;li&gt; &lt;a href="https://metatags.io"&gt;Metatags &lt;/a&gt;  -  Meta Tags is a tool to debug and generate meta tag codes for any website. Tags you can edit and experiment with your content then preview how your webpage will look on Google, Facebook, Twitter, and more!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qXuZreMm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638812010110/A_oXz1SKzD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qXuZreMm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638812010110/A_oXz1SKzD.png" alt="image.png" width="880" height="425"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;


&lt;ol&gt;
&lt;li&gt; &lt;a href="https://readme.so"&gt;ReadMe&lt;/a&gt;  - The easiest way to create a README file in minutes visually&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E0vz_Tox--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638812049474/UV7E_MEdi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E0vz_Tox--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638812049474/UV7E_MEdi.png" alt="image.png" width="880" height="425"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;


&lt;ol&gt;
&lt;li&gt; &lt;a href="https://storytale.io"&gt;Storytale&lt;/a&gt;  - High-class illustrations for web and mobile projects. Make your project eye-catching with awesome characters. Use it both for commercial and personal purposes.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2UlUmiz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638812088772/VFzh7GA35.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2UlUmiz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638812088772/VFzh7GA35.png" alt="image.png" width="880" height="425"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;


&lt;ol&gt;
&lt;li&gt; &lt;a href="https://pfpmaker.com"&gt;Profile Pic Maker &lt;/a&gt;  -  Make an awesome profile picture from any photo&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mBh8G_VU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638812125567/PHSCagJsI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mBh8G_VU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638812125567/PHSCagJsI.png" alt="image.png" width="880" height="425"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;


&lt;ol&gt;
&lt;li&gt; &lt;a href="https://sigmaos.com"&gt;SigmaOS&lt;/a&gt;  -  Fly through your work. The browser that makes you faster and better at working on the web.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RlwpBixW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638812178091/BPZ7xzsPi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RlwpBixW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638812178091/BPZ7xzsPi.png" alt="image.png" width="880" height="425"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;BONUSüéäüéä&lt;/h3&gt;

&lt;p&gt;ü•á&lt;a href="https://ray.so"&gt;Ray.so&lt;/a&gt; - Beautiful Code images&lt;br&gt;&lt;br&gt;
ü•à&lt;a href="https://www.portent.com/tools/title-maker/"&gt;Portent&lt;/a&gt; - Content Creation ideas&lt;br&gt;&lt;br&gt;
ü•â&lt;a href="https://talium.co/choose_theme/"&gt;Talium&lt;/a&gt; - Specially for making single page doc websites .Easy to share and portable.&lt;/p&gt;




&lt;h3&gt;Before we end...üîö&lt;/h3&gt;

&lt;p&gt;Thanks for your Patienceüôèüèª. I just mentioned only few of them.&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üòÇFun fact:&lt;/strong&gt; Spent years to find these resources (PS: For my self utilization)&lt;br&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;üßêMy Motive:&lt;/strong&gt; I don't want people to stress themselves for finding these resources like me, and I am happy to share all of my resources to be a support for them.&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Suppose you find this purposive; comment below. Your Feedbacks are most welcome. &lt;strong&gt;LET ME KNOW WHETHER YOU NEED THESE TYPES OF RESOURCES SPECIFICALLY FOR A CATEGORY. IF SO, MENTION THE CATEGORY NAME&lt;/strong&gt;. It'll help me to do my next post.&lt;br&gt;
Have a wonderful day.üòÄüéÜ&lt;/p&gt;


&lt;h3&gt;Quote to Question‚ùì&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;"Discovery consists of seeing what everybody has seen and thinking what nobody has thought".&lt;br&gt;&lt;br&gt;
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†by @vidhyavarshany                                                                      &lt;/p&gt;


&lt;/blockquote&gt;


&lt;center&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vh2kgRwq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media1.giphy.com/media/upg0i1m4DLe5q/giphy.gif%3Fcid%3Decf05e47dt94ct6ckpeu23p8bqpngk0gzl4r56r1j7i9mdks%26rid%3Dgiphy.gif%26ct%3Dg" alt="thats all folks GIF" width="400" height="301"&gt;&lt;/center&gt;



&lt;br&gt;
Do Follow me on &lt;a href="https://twitter.com/vidhyavarshany/"&gt;Twitter&lt;/a&gt;üíô.I am glad to connect with new people in &lt;a href="https://www.linkedin.com/in/vidhyavarshany/"&gt;LinkedIn&lt;/a&gt;ü§ó.&lt;br&gt;

&lt;p&gt;Until then, Stay tuned to &lt;strong&gt;Get Vibe With BrainiacSpaceüååüß† To Fill Your TechSpace‚úîÔ∏è.&lt;/strong&gt;Cheersüçª&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>beginners</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>8 New Features of Amplify Studio</title>
      <author>Ali Spittel</author>
      <pubDate>Mon, 06 Dec 2021 17:33:34 +0000</pubDate>
      <link>https://dev.to/aspittel/8-new-features-of-amplify-studio-14gf</link>
      <guid>https://dev.to/aspittel/8-new-features-of-amplify-studio-14gf</guid>
      <description>&lt;p&gt;&lt;strong&gt;This post was written with &lt;a class="mentioned-user" href="https://dev.to/theswaminator"&gt;@theswaminator&lt;/a&gt;
&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Last Thursday at re:Invent, AWS Amplify, the team I work on, launched Amplify Studio which brings developers new capabilities to help accelerate UI development. Amplify Studio automatically translates designs made in Figma to human-readable React UI component code. You can also connect a cloud backend to your UI components ‚Äî Studio integrates with existing Amplify data modeling.&lt;/p&gt;

&lt;p&gt;Here are 10 exciting new features available in the brand new Amplify Studio!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#figma-to-react-code"&gt;
  &lt;/a&gt;
  Figma to React code
&lt;/h3&gt;

&lt;p&gt;The biggest new feature is the ability to go from designs made in &lt;a href="https://www.figma.com/"&gt;Figma&lt;/a&gt; to developer-friendly React code. Amplify Studio uses Figma capabilities such as components and auto-layout to generate React code that can be used directly in your own code. This workflow empowers UI/UX designers to control every styling decision of components ‚Äì box shadows, border radii, paddings, margins, and colors that us devs always end up messing up üôà. &lt;/p&gt;

&lt;p&gt;Studio allows developers to focus on the core business logic that makes their app different rather than spending tons of time going back-and-forth on UI styling.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3t_mAcyZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4xpny3f2mp3jg6yzsjd3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3t_mAcyZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4xpny3f2mp3jg6yzsjd3.png" alt="Figma to Studio" width="461" height="377"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#amplify-ui-library"&gt;
  &lt;/a&gt;
  Amplify UI Library
&lt;/h3&gt;

&lt;p&gt;To accelerate UI development, Amplify Studio uses the gorgeous, brand new &lt;a href="https://ui.docs.amplify.aws/"&gt;Amplify UI library&lt;/a&gt;. It offers dozens of components such as newsfeeds, contact forms, e-commerce cards, and primitives such as Buttons, TextFields, and Alerts. All of these components are also available in the &lt;a href="https://www.figma.com/community/file/1047600760128127424"&gt;Amplify Studio Figma community file&lt;/a&gt;. You can mix and match Figma generated UI components with Amplify UI components to build complete apps in very little time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a_7bHh9J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rses09ey55rpmhbx8wxg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a_7bHh9J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rses09ey55rpmhbx8wxg.png" alt="Figma to Code" width="776" height="744"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#figma-theming-plugin"&gt;
  &lt;/a&gt;
  Figma Theming plugin
&lt;/h3&gt;

&lt;p&gt;The Amplify UI library ships with theming capabilities, allowing you to define design tokens that apply globally across your app. The theming plugin for Figma allows you to update the Amplify Figma file to match your brand styles!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3lJkSWya--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s3xfwjhxg8nqxf5i23hm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3lJkSWya--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s3xfwjhxg8nqxf5i23hm.png" alt="Amplify Studio Figma theming plugin" width="880" height="1425"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bind-ui-to-data"&gt;
  &lt;/a&gt;
  Bind UI to data
&lt;/h3&gt;

&lt;p&gt;You can use Amplify‚Äôs point and click interface to visually bind UI components imported into Studio to items in your backend data model. Studio automatically generates all the ‚Äòglue‚Äô code required to power the UI with real data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1yTKrsor--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mabmplw0020gry7n7o1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1yTKrsor--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mabmplw0020gry7n7o1.png" alt="UI to Data" width="776" height="416"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-collections"&gt;
  &lt;/a&gt;
  Create collections
&lt;/h3&gt;

&lt;p&gt;Almost all apps we build render collections (or a repeating list of items). You can create collections in Studio that display multiple instances of your data. Connect to the data in your data manager, dynamically query data with filtering and sorting , bind your collection to specific records, and define your collection layout styling (e.g. grid vs list, padding, direction).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZyALNYZm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07mkca9o25q5qbktjgv9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZyALNYZm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07mkca9o25q5qbktjgv9.png" alt="UI collections layout" width="880" height="565"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#shuffle-preview"&gt;
  &lt;/a&gt;
  Shuffle preview
&lt;/h3&gt;

&lt;p&gt;Shuffle preview gives you the ability to test how your UI component renders with different types of data from your data model. You can make sure that your UI will still look good with a very short title and a very long one, for example!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LpvYKYWE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fwj9dk8lv3uyby0ei2e1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LpvYKYWE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fwj9dk8lv3uyby0ei2e1.gif" alt="UI Shuffle Gif" width="724" height="426"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ui-component-property-editor"&gt;
  &lt;/a&gt;
  UI component property editor
&lt;/h3&gt;

&lt;p&gt;Amplify Studio renders a live preview of your UI component, with the ability to edit properties ranging from styles such as color, font weight and data. All property changes made in the editor are reflected in real-time in the live preview.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GSAWByUR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6hefndmhaexhrxomkcuo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GSAWByUR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6hefndmhaexhrxomkcuo.png" alt="UI Component editor" width="880" height="865"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#extend-generated-code"&gt;
  &lt;/a&gt;
  Extend generated code
&lt;/h3&gt;

&lt;p&gt;My favorite part of Studio is that we focus first and foremost on a developer audience. We have a visual way to make components, but then they can be generated using normal React code. All generated code can be extended by either modifying the component props or by overriding the generated code. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OKrMMJJk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ffcaouvhppia7s57vla.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OKrMMJJk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ffcaouvhppia7s57vla.png" alt="code generation" width="880" height="175"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#check-it-out-for-yourself"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Check it out for yourself!&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Amplify Studio is live &lt;a href="https://console.aws.amazon.com/amplify/home?#/deploy-backend"&gt;right now&lt;/a&gt;! I‚Äôd &lt;strong&gt;love&lt;/strong&gt; to hear your feedback as you build with it!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>aws</category>
      <category>react</category>
    </item>
    <item>
      <title>All about closure in javascript</title>
      <author>sakethk</author>
      <pubDate>Mon, 06 Dec 2021 17:19:37 +0000</pubDate>
      <link>https://dev.to/sakethkowtha/all-about-closure-in-javascript-3of3</link>
      <guid>https://dev.to/sakethkowtha/all-about-closure-in-javascript-3of3</guid>
      <description>&lt;p&gt;Hello all üëãüèª,&lt;/p&gt;

&lt;p&gt;This article is all about closure in javascript.&lt;/p&gt;

&lt;p&gt;Closure is not a easy topic. It will be confusing topic for beginners. In this article i will try to explain it easily.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-closure"&gt;
  &lt;/a&gt;
  What is a closure
&lt;/h3&gt;

&lt;p&gt;According to MDN&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A closure is the combination of a function bundled together (enclosed) with references to its surrounding state (the lexical environment). In other words, a closure gives you access to an outer function‚Äôs scope from an inner function. In JavaScript, closures are created every time a function is created, at function creation time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;According to Stackoverflow&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A closure is a persistent scope which holds on to local variables even after the code execution has moved out of that block. Languages which support closure (such as JavaScript, Swift, and Ruby) will allow you to keep a reference to a scope (including its parent scopes), even after the block in which those variables were declared has finished executing, provided you keep a reference to that block or function somewhere.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It might confusing you again. Let's jump to javascript lexical scoping in a high level not in detail because lexical scoping is a huge concept i will try to publish article on it separately.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Devto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;printTitle&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
 &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;printTitle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Devto&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above snippet will print &lt;code&gt;Devto&lt;/code&gt; in console. &lt;code&gt;title&lt;/code&gt; variable is accessible in printTitle method because &lt;code&gt;title&lt;/code&gt; variable is in &lt;code&gt;printTitle&lt;/code&gt; parent scope. So if &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;printTitle&lt;/code&gt; both are in single scope here i.e &lt;code&gt;global scope&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Consider the following snippet&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Devto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;printTitle&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
   &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;printTitle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Devto&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above snippet will print &lt;code&gt;Devto&lt;/code&gt; in console but in this &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;printTitle&lt;/code&gt; are not in &lt;code&gt;global scope&lt;/code&gt; instead they are in &lt;code&gt;main method scope&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now checkout this example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Devto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;printTitle&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
   &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;printTitle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Devto&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Same output but here the difference is &lt;code&gt;title&lt;/code&gt; is in &lt;code&gt;global scope&lt;/code&gt; and we are accessing it in &lt;code&gt;printTitle&lt;/code&gt; method. So here the point is child's can access their parent / global level scope items. This is not only in javascript you can see this feature in other languages like &lt;code&gt;Java&lt;/code&gt;, &lt;code&gt;C#&lt;/code&gt;, &lt;code&gt;C++&lt;/code&gt; and &lt;code&gt;Python&lt;/code&gt; etc..&lt;/p&gt;

&lt;p&gt;We will the change above snippet&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Devto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;printTitle&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
   &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;printTitleGlobal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;printTitleGlobal&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Devto&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In javascript functions are &lt;code&gt;First class objects&lt;/code&gt; means they are like variables. We can return any type of variable in a function so here we can return function itself because as i said it is also treated as a variable.&lt;/p&gt;

&lt;p&gt;In the above snippet &lt;code&gt;main&lt;/code&gt; method returning &lt;code&gt;printTitle&lt;/code&gt; method and we are assigned it to &lt;code&gt;printTitleGlobal&lt;/code&gt; variable and called that &lt;code&gt;printTitleGlobal&lt;/code&gt; function. Indirectly we are calling &lt;code&gt;printTitle&lt;/code&gt; function as &lt;code&gt;title&lt;/code&gt; in global scope it is accessible in &lt;code&gt;printTitle&lt;/code&gt; method so worked as expected.&lt;/p&gt;

&lt;p&gt;Now Check the following snippet&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Devto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;printTitle&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
   &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;printTitleGlobal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;printTitleGlobal&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Can you guess the output ?&lt;br&gt;
It is same but here the craziest thing is &lt;code&gt;title&lt;/code&gt; is in &lt;code&gt;main&lt;/code&gt; method's scope but we are executing &lt;code&gt;printTitleGlobal&lt;/code&gt; function in &lt;code&gt;global&lt;/code&gt; scope . As per javascript lexical scope concept once the function is executed completely JS will clear the memory allotted for that. Here once &lt;code&gt;main&lt;/code&gt; method is called it should clear all the references related to &lt;code&gt;main&lt;/code&gt; method so JS should clear &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;printTitle&lt;/code&gt; and &lt;code&gt;main&lt;/code&gt;. As we stored &lt;code&gt;printTitle&lt;/code&gt; in &lt;code&gt;printTitleGlobal&lt;/code&gt; we can call that method anytime but that method has &lt;code&gt;main&lt;/code&gt; method references which should be cleared after execution of &lt;code&gt;main&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Then how it is printing "Devto" ‚ùì.&lt;/p&gt;

&lt;p&gt;That is what &lt;strong&gt;closure&lt;/strong&gt; is ‚ùóÔ∏è&lt;/p&gt;

&lt;p&gt;When ever we return any function in javascript. JS will not only return that method before returning it will find all the references required to that returned function it will pack all the references along with along with that function. We will call that pack as &lt;strong&gt;closure&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A closure is the combination of a function bundled together (enclosed) with references to its surrounding state (the lexical environment).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now the above definition will make sense once we call &lt;code&gt;main&lt;/code&gt; method it will give us a closure named &lt;code&gt;main&lt;/code&gt; that closure will hold all the references required for &lt;code&gt;printTitle&lt;/code&gt; and &lt;code&gt;main&lt;/code&gt; method scope will get cleared after execution but still some of references required for &lt;code&gt;printTitle&lt;/code&gt; are persistent in closure.&lt;/p&gt;

&lt;p&gt;Checkout this screenshots: &lt;br&gt;
I have added two &lt;code&gt;debuggers&lt;/code&gt; this is the screenshot taken at the time of first debugger which is in &lt;code&gt;main&lt;/code&gt; method. Look at the &lt;code&gt;call stack&lt;/code&gt; in the left side window and &lt;code&gt;scope&lt;/code&gt; in right side. &lt;code&gt;title&lt;/code&gt; is in &lt;code&gt;local&lt;/code&gt; scope. This is as expected. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ts5BqYn3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fbck5wlpvhrmiij8rk1a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ts5BqYn3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fbck5wlpvhrmiij8rk1a.png" alt="Image description" width="880" height="735"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now time for second debugger which is inside &lt;code&gt;printTitle&lt;/code&gt; method. &lt;code&gt;main&lt;/code&gt; got cleared from &lt;code&gt;call stack&lt;/code&gt; and in right side you can see &lt;code&gt;Closure (main)&lt;/code&gt; it has &lt;code&gt;title&lt;/code&gt; reference. This is the one holding reference of &lt;code&gt;title&lt;/code&gt; which is being used in &lt;code&gt;printTitle&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Em1a8x61--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bn03quhdgj2vg5fjroxk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Em1a8x61--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bn03quhdgj2vg5fjroxk.png" alt="Image description" width="880" height="781"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope you enjoyed it.&lt;br&gt;
Cheers!&lt;/p&gt;

&lt;p&gt;You can now extend your support by buying me a Coffee.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/sakethk"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y61HrVIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-blue.png" alt="Buy Me A Coffee" width="545" height="153"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>functional</category>
    </item>
    <item>
      <title>Integrating the Passport with the Forem Ecosystem</title>
      <author>Fernando</author>
      <pubDate>Mon, 06 Dec 2021 17:18:57 +0000</pubDate>
      <link>https://dev.to/devteam/integrating-the-passport-with-the-forem-ecosystem-42ea</link>
      <guid>https://dev.to/devteam/integrating-the-passport-with-the-forem-ecosystem-42ea</guid>
      <description>&lt;p&gt;This is the second post of a series that covers the new &lt;a href="https://passport.forem.com/"&gt;Forem Passport&lt;/a&gt; service provider, which integrates with the Forem open source software behind DEV and &lt;a href="https://discover.forem.com"&gt;other communities&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#upcoming-forem-passport-projects"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Upcoming Forem Passport Projects&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;This service provider is such an exciting project in my view, because of the power and flexibility baked into the OAuth protocol. Not only does it help solve a problem we had (&lt;em&gt;i.e. compliance and support across different platforms&lt;/em&gt;), it also interacts with many different core and ecosystem projects.&lt;/p&gt;

&lt;p&gt;Some of the projects that relate to Forem Passport in one way or another are:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#android-mobile-app"&gt;
  &lt;/a&gt;
  Android Mobile App
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;We just released the first few versions of our beta Android app!&lt;/p&gt;

&lt;p&gt;Are you interested in being part of the closed beta? Do you want to be notified when the open beta rolls out? Drop a comment below and we‚Äôll contact you.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#ios-mobile-app"&gt;
  &lt;/a&gt;
  iOS Mobile App
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Version &lt;code&gt;1.2.2&lt;/code&gt; includes the Passport integration already! &lt;a href="https://apps.apple.com/us/app/forem/id1536933197"&gt;Try it out now&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#better-tooling-for-creators-to-fight-abuse"&gt;
  &lt;/a&gt;
  Better Tooling for Creators to Fight Abuse
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;In a network of Forem sites, smaller instances might benefit from abuse control measures taken in bigger instances, like DEV. This could include propagation of banished users (at least to flag as likely abusers) throughout the network, making everyone safer.&lt;/p&gt;

&lt;p&gt;‚ö†Ô∏è &lt;em&gt;Abuse in this case refers to anything that doesn‚Äôt adhere to the Forem's code of conduct or terms and conditions.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Please note that this is still in ideation and hasn‚Äôt yet been discussed in great depth.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#better-integration-between-the-passport-and-the-raw-admin-endraw-dash-for-creators"&gt;
  &lt;/a&gt;
  Better Integration Between the Passport and the &lt;code&gt;/admin&lt;/code&gt; Dash for Creators
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;We can automate the process of enabling the Forem authentication for a creator (directly from their &lt;code&gt;/admin&lt;/code&gt; dashboard) a lot more than its current form. &lt;/p&gt;

&lt;p&gt;This idea has definitely been discussed and it‚Äôs actually a high priority goal. We want to make it as easy as possible for creators to enable the Forem passport integration so more users can benefit from it across the ecosystem.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#push-notifications-for-mobile-apps-on-selfhosted-forems"&gt;
  &lt;/a&gt;
  Push Notifications for Mobile Apps on Self-Hosted Forems
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;We can‚Äôt openly give out our PN certificates to deliver push notifications to self hosted Forems. So, in order to overcome this we could rely on the authorization and not authentication aspect of the OAuth protocol.&lt;/p&gt;

&lt;p&gt;The objective of this project is to implement a mechanism relay PN delivery to the Passport via API calls if the certificates aren‚Äôt available (self hosted sites).&lt;/p&gt;

&lt;p&gt;This would only work for users that have connected their accounts with the Passport, because that‚Äôs the key part of how we would avoid abuse from any bad actor if they happen to spam their users.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#allowing-for-social-login-within-forem-passport-itself"&gt;
  &lt;/a&gt;
  Allowing for Social login within Forem Passport itself
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;We heard you like service providers, so we‚Äôre planning to integrate service providers on our service provider üòÜ&lt;/p&gt;

&lt;p&gt;In all seriousness, since we have more control over Forem Passport, we could implement many customized authentication providers and make them compatible with our whole ecosystem (i.e. mobile apps). &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#easier-account-management-across-many-forem-sites"&gt;
  &lt;/a&gt;
  Easier account management across many Forem sites
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;You could &lt;em&gt;in theory&lt;/em&gt; propagate a new profile picture across many Forem sites at once, directly from Forem Passport. &lt;/p&gt;

&lt;p&gt;This isn‚Äôt implemented and hasn‚Äôt even been discussed in depth either, but OAuth should allows us to make some of these integrations possible.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#open-sourcing-the-passport-codebase"&gt;
  &lt;/a&gt;
  Open sourcing the Passport codebase
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;The core Forem software has been open source for a while now, and we want to open source this project as well in the near future for many reasons.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our intention is to solidify the Passport project a bit more (i.e. have better abuse control) and other details sorted out before publishing the repo. We‚Äôll be sure to communicate when this happens!&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#invitations-amp-closing-note"&gt;
  &lt;/a&gt;
  Invitations &amp;amp; Closing Note
&lt;/h2&gt;

&lt;p&gt;Phew! We've covered a lot in this series so far. üòÑ&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Invitations:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We‚Äôre interested in your feedback on all of the above, so please share your thoughts with us in the comments below.&lt;/li&gt;
&lt;li&gt;Do you already have an account on &lt;a href="https://passport.forem.com"&gt;https://passport.forem.com&lt;/a&gt;? Please leave us a comment below! What are your thoughts? Which upcoming project from the list above interests you most? Any other crazy ideas you might think would be cool to integrate with the Passport project?&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://apps.apple.com/us/app/forem/id1536933197"&gt;Try it out Version &lt;code&gt;1.2.2&lt;/code&gt; of the Forem iOS app&lt;/a&gt;, which includes the Passport integration&lt;/li&gt;
&lt;li&gt;Reminder that you can comment below if you'd like to be part of our closed beta test for the Forem Android app &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Closing Note:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We‚Äôre actively working on Forem Passport (i.e. design overhaul, abuse control features, new integrations, etc) so expect changes, big and small, to roll out on a weekly basis.&lt;/p&gt;




&lt;p&gt;In the next post in this series, I‚Äôm going to explain how we managed to implement the Passport project from a technical perspective. Keep an eye out for it in the next few days.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Forem‚Äôs approach to decentralized Authentication and Authorization</title>
      <author>Fernando</author>
      <pubDate>Mon, 06 Dec 2021 17:18:40 +0000</pubDate>
      <link>https://dev.to/devteam/forems-approach-to-decentralized-authentication-and-authorization-49a1</link>
      <guid>https://dev.to/devteam/forems-approach-to-decentralized-authentication-and-authorization-49a1</guid>
      <description>&lt;p&gt;This is the first part in a series that will cover the new &lt;a href="https://passport.forem.com/"&gt;Forem Passport&lt;/a&gt; service provider, which integrates with the Forem open source software behind DEV and &lt;a href="https://discover.forem.com"&gt;other communities&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-brief-history-of-our-authentication-options"&gt;
  &lt;/a&gt;
  A Brief History of Our Authentication Options
&lt;/h2&gt;

&lt;p&gt;Since its early days, DEV relied solely on authentication providers to set up and access user accounts. There are pros and cons with that decision, but I‚Äôd say it‚Äôs working well, overall, with over 756,805 registered users (and counting!) today.&lt;/p&gt;

&lt;p&gt;After DEV became part of the larger Forem umbrella, we‚Äôve continued to expand from GitHub and Twitter authentication &lt;a href="https://admin.forem.com/docs/advanced-customization/config/authentication"&gt;to allowing many other use cases&lt;/a&gt; like invite only (private) or email+password registration, to name a few.&lt;/p&gt;

&lt;p&gt;Despite these new authentication options, our backend implementation of them hasn‚Äôt changed much. This is because we rely on &lt;a href="https://auth0.com/intro-to-iam/what-is-oauth-2/"&gt;OAuth&lt;/a&gt; (an open-standard authorization protocol/framework) and a &lt;a href="https://github.com/forem/forem/tree/main/app/services/authentication/providers"&gt;polymorphic approach&lt;/a&gt;, which allows our team to add new providers that adhere to the OAuth protocol.&lt;/p&gt;

&lt;p&gt;Below, I'll explain how these authentication factors connect with external influences (like Apple and Facebook), leading us to build our own authentication provider. If you‚Äôre more interested in the implementation (&lt;em&gt;show me the code&lt;/em&gt;), check out the next part in this series, coming soon!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-forem-is-decentralized"&gt;
  &lt;/a&gt;
  How Forem is Decentralized
&lt;/h2&gt;

&lt;p&gt;Empowering community by giving ownership to creators (decentralization) is the bedrock of Forem's mission. Anyone that hosts their own Forem site becomes part of the world wide web (WWW), just like any other website does. It becomes a bit more interesting when we look at the &lt;a href="https://discover.forem.com"&gt;network of Forem sites&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In case you missed it, a while ago we announced how you can now self-host your own Forem. Starting your own community with data ownership and the transparency of the open source (much like DEV) is finally possible üå± &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/devteam" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CTihtlIw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--nJ87SGF6--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/1/0213bbaa-d5a1-4d25-9e7a-10c30b455af0.png" alt="The DEV Team" width="150" height="150"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bgwIhvJ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--1M1qt9Sp--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/1/f451a206-11c8-4e3d-8936-143d0a7e65bb.png" alt="" width="150" height="150"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/devteam/forem-self-host-is-now-officially-supported-16h0" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Forem Self-Host is Now Officially Supported&lt;/h2&gt;
      &lt;h3&gt;Ben Halpern for The DEV Team „Éª Jul 20 „Éª 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#forem&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#news&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#meta&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Since we now have a network of sites that run Forem's open source community software, we need to work on the ecosystem around it. So we shipped the Forem iOS app with this in mind.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/ben" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bgwIhvJ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--1M1qt9Sp--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/1/f451a206-11c8-4e3d-8936-143d0a7e65bb.png" alt="ben"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ben/forem-s-approach-to-decentralized-social-media-on-mobile-2e1p" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Forem's Approach to Decentralized Social Media on Mobile&lt;/h2&gt;
      &lt;h3&gt;Ben Halpern „Éª Jun 3 „Éª 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#meta&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#forem&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#ios&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#mobile&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Forem for iOS means that you can browse many different Forem communities in one centralized app on the go. Since the days of our DEV iOS app (soon to be sunsetted), we have enhanced the mobile browser experience with Push Notifications and many more features. Together, we've accomplished all of this despite relying on a WebView-based implementation, which might be a sensitive topic at times... but that‚Äôs a post for another day üòÖ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#authentication-hurdles-apple-and-facebook"&gt;
  &lt;/a&gt;
  Authentication Hurdles: Apple and Facebook
&lt;/h2&gt;

&lt;p&gt;Since a Creator has full ownership of their Forem, we can‚Äôt control the authentication methods they choose to enable (this is the point). Apple, on the other hand, requires everyone using their authentication to comply with their guidelines.&lt;/p&gt;

&lt;p&gt;We actually &lt;del&gt;ranted&lt;/del&gt; joked a little about the ‚ÄúSIWA rule‚Äù in a &lt;a href="https://www.youtube.com/watch?v=Q0LVviE5gB4"&gt;DEV Twitch Stream&lt;/a&gt; a while ago, along with other mobile/ecosystem related conversations. SIWA is the acronym we use for &lt;code&gt;Sign In With Apple&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Because Apple requires every iOS app that allows for social logins to have SIWA enabled, the Forem iOS app is being rejected by AppStore reviewers when they find some Forems listed in the app &lt;em&gt;don‚Äôt&lt;/em&gt; have SIWA enabled by choice.&lt;/p&gt;

&lt;p&gt;Despite being less than ideal, we had to hide all social authentication providers if the Forem site doesn‚Äôt have SIWA enabled within the &lt;code&gt;ForemWebView&lt;/code&gt; context (which means it‚Äôs being rendered in a mobile app). &lt;a href="https://github.com/forem/forem/pull/14260"&gt;This is the PR for that&lt;/a&gt; in case you‚Äôre curious.&lt;/p&gt;

&lt;p&gt;Later, Facebook &lt;a href="https://developers.facebook.com/blog/post/2021/06/28/deprecating-support-fb-login-authentication-android-embedded-browsers/"&gt;shut down their OAuth flow protocol in Android WebView contexts&lt;/a&gt;. According to them, this was a decision made ‚Äúfor security reasons‚Äù. &lt;a href="https://github.com/forem/forem/issues/14681"&gt;This is the issue&lt;/a&gt; where some of this conversation has taken place. Similar to the SIWA situation, we‚Äôre not able to show the Facebook auth option.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#authentication-on-a-decentralized-network-of-forem-communities"&gt;
  &lt;/a&gt;
  Authentication on a Decentralized Network of Forem Communities
&lt;/h2&gt;

&lt;p&gt;With these challenges led us back to a big picture idea discussed over year ago: an SSO solution that would work across Forems. The goal is to make authenticating with any Forem site easier ‚Äî on any platform or context. Enter &lt;strong&gt;&lt;strong&gt;&lt;a href="https://passport.forem.com"&gt;Forem Passport&lt;/a&gt;&lt;/strong&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;OAuth is incredibly powerful and even somewhat democratic, in the sense that each individual user chooses to authorize or revoke the permissions they‚Äôve given through the OAuth protocol.&lt;/p&gt;

&lt;p&gt;The iOS mobile app now integrates directly with Forem Passport and we‚Äôve started to reach out to creators so they can enable the Forem authentication provider to allow for this better experience across platforms.&lt;/p&gt;

&lt;p&gt;On some Forem sites like DEV, &lt;a href="https://community.codenewbie.org/"&gt;CodeNewbie&lt;/a&gt; and &lt;a href="https://forem.dev/"&gt;forem.dev&lt;/a&gt;, you can already connect your Forem Passport account from your settings or directly register a new account using the Forem auth provider.&lt;/p&gt;




&lt;p&gt;In the next post in this series, I‚Äôm going to share the ongoing and upcoming projects we're working on, all of which integrate with the Passport project in one way or another. &lt;a href="https://dev.to/devteam/integrating-the-passport-with-the-forem-ecosystem-42ea"&gt;Read all about it here&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>JSON Formatter - Your Lifesaver</title>
      <author>Arnav Kumar</author>
      <pubDate>Mon, 06 Dec 2021 17:15:48 +0000</pubDate>
      <link>https://dev.to/arnavkr/json-formatter-your-lifesaver-5db4</link>
      <guid>https://dev.to/arnavkr/json-formatter-your-lifesaver-5db4</guid>
      <description>&lt;h2&gt;
  &lt;a href="#welcome-devs"&gt;
  &lt;/a&gt;
  Welcome Devs!
&lt;/h2&gt;

&lt;p&gt;As of now you already have seen that in our day to day work we come up with many types of URLs and files specifically &lt;code&gt;JSON&lt;/code&gt; files they are almost everywhere. For files its clear. You use a text editor with a beautiful syntax highlighting and with your desired settings. But what about when you view them in browser? In your development career you may already heard of &lt;code&gt;json formatter&lt;/code&gt; browser extensions. They format and syntax highlight the json codes from most of the json responses. But most don't give satisfactory results.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#some-of-the-points-that-i-noted-while-i-was-in-search-of-the-perfect-json-formatter-extension"&gt;
  &lt;/a&gt;
  Some of the points that i noted while i was in search of the perfect Json Formatter Extension
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Some of them don't work on JSON response returned with a non json &lt;code&gt;Content-Type&lt;/code&gt; header&lt;/li&gt;
&lt;li&gt;Some of them Don't Have Dark Mode (And we are Dark Lovers)&lt;/li&gt;
&lt;li&gt;Some only let us see the json tree but not the raw data&lt;/li&gt;
&lt;li&gt;Some are just data stealers&lt;/li&gt;
&lt;li&gt;Some Just don't remember your preferences on specific sites&lt;/li&gt;
&lt;li&gt;Some of them aren't regularly maintained
And so on...&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#here-comes-my-json-formatter"&gt;
  &lt;/a&gt;
  Here comes my JSON Formatter ü•≥
&lt;/h2&gt;

&lt;p&gt;So after seeing all these things i decided to create my own &lt;code&gt;Extension&lt;/code&gt; that would solve all those problems and be the devs' best friend. Its New So its Obvious that its underated now, your support would be appreciatable! üòÉ&lt;/p&gt;

&lt;p&gt;Its Available on &lt;a href="https://chrome.google.com/webstore/detail/json-formatter/gpmodmeblccallcadopbcoeoejepgpnb"&gt;Chrome Web Store&lt;/a&gt; for &lt;code&gt;Chrome&lt;/code&gt; but you can also use the extension on all other &lt;code&gt;chromium&lt;/code&gt; based browsers i.e. &lt;code&gt;edge&lt;/code&gt;, &lt;code&gt;firefox&lt;/code&gt;, &lt;code&gt;opera&lt;/code&gt;, &lt;code&gt;brave&lt;/code&gt; etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/json-formatter/gpmodmeblccallcadopbcoeoejepgpnb"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--php1UB5G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://storage.googleapis.com/chrome-gcs-uploader.appspot.com/image/WlD8wC6g8khYWPJUsQceQkhXSlv1/HRs9MPufa1J1h5glNhut.png" alt="Download From Chrome Web Store" width="496" height="150"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#short-link-bitlyjsonformatter"&gt;
  &lt;/a&gt;
  Short Link: &lt;a href="https://bit.ly/json_formatter"&gt;bit.ly/json_formatter&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#website-jsonformatterjsorg"&gt;
  &lt;/a&gt;
  Website: &lt;a href="https://json-formatter.js.org"&gt;json-formatter.js.org&lt;/a&gt;
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#features-of-my-json-formatter-extension"&gt;
  &lt;/a&gt;
  Features of my JSON Formatter Extension
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Dark Mode (Automated + Manual)&lt;/li&gt;
&lt;li&gt;Syntax Highlighting (VS Code Styled)&lt;/li&gt;
&lt;li&gt;Works Offline üì¥&lt;/li&gt;
&lt;li&gt;Works with any JSON Webpage (webpage should just contain valid json code)&lt;/li&gt;
&lt;li&gt;Automatically Linkify Links (just click on links in strings to open them)&lt;/li&gt;
&lt;li&gt;Formats JSON automatically (No Setup Needed&lt;/li&gt;
&lt;li&gt;Raw and Parsed Mode (Parsed for ease of your eye and raw for ease of your hands)&lt;/li&gt;
&lt;li&gt;Remembers Theme Preferences ( knows which mode you prefer on which sites)&lt;/li&gt;
&lt;li&gt;Shortcut Keys (1 tap controls, easy navigation)&lt;/li&gt;
&lt;li&gt;Collapsible Toolbar (Easily Collapse the Toolbar)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am looking for Suggestions and Feedbacks from you&lt;br&gt;
If you have any issues related the extension you can open an &lt;a href="https://github.com/arnav-kr/json-formatter/issues"&gt;issue&lt;/a&gt; at the &lt;a href="https://github.com/arnav-kr/json-formatter/"&gt;Github Repo&lt;/a&gt; i will try to fix it asap!&lt;/p&gt;

&lt;p&gt;Leave a &lt;a href="https://github.com/arnav-kr/json-formatter/"&gt;Star‚≠ê&lt;/a&gt; on the repo and don't forget to rate the &lt;a href="https://chrome.google.com/webstore/detail/json-formatter/gpmodmeblccallcadopbcoeoejepgpnb"&gt;extension&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/arnav-kr/json-formatter/"&gt;Github Repo&lt;/a&gt; | &lt;a href="https://github.com/arnav-kr/json-formatter/issues"&gt;issues&lt;/a&gt; | &lt;a href="https://github.com/arnav-kr/json-formatter/fork"&gt;Fork JSON Formatter&lt;/a&gt; | &lt;a href="https://github.com/arnav-kr/"&gt;My GitHub Profile&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#screenshots"&gt;
  &lt;/a&gt;
  Screenshots:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dFTjTVFR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/arnav-kr/json-formatter/blob/main/images/screenshots/linkified-dark.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dFTjTVFR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/arnav-kr/json-formatter/blob/main/images/screenshots/linkified-dark.png%3Fraw%3Dtrue" alt="Automatic Linkified" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7aGx7q_E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/arnav-kr/json-formatter/blob/main/images/screenshots/parsed-dark.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7aGx7q_E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/arnav-kr/json-formatter/blob/main/images/screenshots/parsed-dark.png%3Fraw%3Dtrue" alt="Parsed Mode Dark" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CmkxA9pq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/arnav-kr/json-formatter/blob/main/images/screenshots/raw-dark.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CmkxA9pq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/arnav-kr/json-formatter/blob/main/images/screenshots/raw-dark.png%3Fraw%3Dtrue" alt="Raw Mode Dark" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---VfiEyVs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/arnav-kr/json-formatter/blob/main/images/screenshots/parsed-light.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---VfiEyVs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/arnav-kr/json-formatter/blob/main/images/screenshots/parsed-light.png%3Fraw%3Dtrue" alt="Parsed Mode Light" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GjfqEp19--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/arnav-kr/json-formatter/blob/main/images/screenshots/raw-light.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GjfqEp19--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/arnav-kr/json-formatter/blob/main/images/screenshots/raw-light.png%3Fraw%3Dtrue" alt="Raw Mode Light" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>extensions</category>
      <category>addons</category>
      <category>opensource</category>
      <category>json</category>
    </item>
    <item>
      <title>Getting Started with Supabase</title>
      <author>Brian Barrow</author>
      <pubDate>Mon, 06 Dec 2021 17:15:11 +0000</pubDate>
      <link>https://dev.to/deepgram/getting-started-with-supabase-3egp</link>
      <guid>https://dev.to/deepgram/getting-started-with-supabase-3egp</guid>
      <description>&lt;p&gt;Getting a database set up and running can be a difficult and time-consuming process. There are quite a few options these days for "quick" solutions. Supabase is one of those options and is gaining popularity very quickly. Let's dive in and see what Supabase offers. We'll walk through an example of setting up a database for a Reading List app and learn how to add, read, edit, and delete data from it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-this-post-is-for"&gt;
  &lt;/a&gt;
  Who this post is for
&lt;/h2&gt;

&lt;p&gt;This post will be easier to follow if you have a general understanding of how databases work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;p&gt;The first thing you'll need to do is sign up on &lt;a href="https://app.supabase.io/api/login"&gt;Supabase&lt;/a&gt;. It asks you to sign up with GitHub, so if you don't have an account, you should also sign up for one of those.&lt;/p&gt;

&lt;p&gt;Once you are signed in, you'll click the green button that says "New Project" and select the default organization that was created when you logged in. Mine was called "briancbarrow's Org." This will bring up a box where we provide some info about the project. I'll name it &lt;code&gt;reading-list&lt;/code&gt;, give it a strong password, and then I'm going to select the region &lt;code&gt;West US (North California)&lt;/code&gt; because that is closest to me.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rS0rRK8R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/esqy2z8jmmfst1dyw2io.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rS0rRK8R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/esqy2z8jmmfst1dyw2io.png" alt="Setting up the project with the name reading-list and selecting the West US region." width="675" height="585"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click the "Create new project" button. It will take a few minutes for the project to be ready, so sit tight until that finishes.&lt;/p&gt;

&lt;p&gt;Now that we have that set up, you should see a page with the name of the project you gave, and below that, it should say "Welcome to your new project." Below that, there are a few features that we can start exploring.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Database&lt;/strong&gt;: The Supabase Database is an instance of a Postgres Database. We'll be diving into this more below.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Auth&lt;/strong&gt;: The Supabase Auth service makes it relatively easy to set up authentication for your app and also manage your users. We won't be covering Auth in this post.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Storage&lt;/strong&gt;: Supabase offers a storage service for larger files like images or audio files. We won't be covering Storage in this post either.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#initializing-the-database"&gt;
  &lt;/a&gt;
  Initializing the Database
&lt;/h2&gt;

&lt;p&gt;Click on the button in the "Database" card that says "Table editor." This takes us to a blank dashboard where we'll be able to add and edit our database tables. Click the &lt;code&gt;+ New table&lt;/code&gt; button on the left and give it the name &lt;code&gt;books&lt;/code&gt;. For now don't check the "Enable Row Level Security (RLS)." This table will need a few columns in addition to the "id" column. I've listed them below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Column Name: &lt;code&gt;title&lt;/code&gt;, Type: &lt;code&gt;varchar&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Column Name: &lt;code&gt;author&lt;/code&gt;, Type: &lt;code&gt;varchar&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Column Name: &lt;code&gt;finished&lt;/code&gt; Type: &lt;code&gt;bool&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The table might already have a 'created_at' column in there by default. We won't need it so you can remove that one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pgYXd72B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0pqgbyxp1r19lzh459r0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pgYXd72B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0pqgbyxp1r19lzh459r0.png" alt="Add new table with the name 'books', leave Row Level Security unchecked, and add title column with type varchar, add author column with type varchar, and add finished column with type bool." width="667" height="597"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Save that, and you've created a table in your database. You should now be able to see it. Let's fill in some data now. Click the button that says "Insert Row" and fill in the data with a couple of books you like. Remember that you can only insert the type of data into columns that you specified in the table setup. For example, we couldn't store a string inside the "finished" column because it only accepts booleans. &lt;a href="https://www.postgresqltutorial.com/postgresql-data-types/"&gt;Here is a link to more info on data types&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here is what my table looked like after I inserted two rows of data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bHeioLyc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fhi2mkk9qc2ra9o2jyn8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bHeioLyc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fhi2mkk9qc2ra9o2jyn8.png" alt="Added two rows of data with the respective titles and authors of books. One with 'finished' set to true and the other to false." width="880" height="172"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#querying-the-database"&gt;
  &lt;/a&gt;
  Querying the Database
&lt;/h2&gt;

&lt;p&gt;With the data added, we can now look at how to send &lt;a href="https://developers.deepgram.com/blog/2021/11/getting-started-with-apis/"&gt;API requests&lt;/a&gt; to it in order to read that data.&lt;/p&gt;

&lt;p&gt;In the left hand navigation, there is a link to the API documentation. This is auto-generated for us by Supabase and allows us to connect with our database in our code. Right now, we want to test that we can get the data we want from our &lt;code&gt;books&lt;/code&gt; table. In the left hand menu, there is a section called "Tables and Views". Select the &lt;code&gt;books&lt;/code&gt; table. Since we don't have a JavaScript app set up yet, select the "Bash" tab at the top of the right hand column above the code output. This will show us how a basic request is structured. I am going to be using Postman &lt;a href="https://www.postman.com/downloads/"&gt;(which you can get here)&lt;/a&gt; to send these requests.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reading-data"&gt;
  &lt;/a&gt;
  Reading data
&lt;/h3&gt;

&lt;p&gt;Go down to the section that says "READ ALL ROWS", where you'll find the &lt;code&gt;curl&lt;/code&gt; request to get the information from our database.&lt;/p&gt;

&lt;p&gt;Here is what it should look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="s1"&gt;'https://swmsbxvlhkqilunwmsgs.supabase.co/rest/v1/books?select=*'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"apikey: SUPABASE_KEY"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Authorization: Bearer SUPABASE_KEY"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can put this info into an app like Postman, or you can copy this code and put it directly into your terminal to get the results. Note that the &lt;code&gt;SUPABASE_KEY&lt;/code&gt; in the above code is just a placeholder for your own key. To get your API keys to populated into the example requests, there is a dropdown labeled "Key" up at the top of the screen. Select &lt;code&gt;anon key&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Since I'm using Postman for these requests I'll first copy the URL from the &lt;code&gt;curl&lt;/code&gt; line and paste it into the request URL field in Postman. For this request we'll keep it as a &lt;code&gt;GET&lt;/code&gt; request. I'll then click on the "Headers" tab inside Postman and add the &lt;code&gt;apikey&lt;/code&gt; and &lt;code&gt;Authorization&lt;/code&gt; headers respectively. It will look something like this, with your URL and API Keys instead of mine.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l9seeLsu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g069wazhb9k8a9rg4wfm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l9seeLsu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g069wazhb9k8a9rg4wfm.png" alt="Postman GET request with URL parameter specifying to select all" width="880" height="328"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#inserting-data-via-the-api"&gt;
  &lt;/a&gt;
  Inserting data via the API
&lt;/h3&gt;

&lt;p&gt;Now we can send the request and the results will show the contents of our books table. But what if we want to add or update data using the API? Inside of the API page of our Supabase app there are examples of all these types of requests. Let's try to insert data. I'll find the "Insert Rows" section of the API documentation and create a new request in Postman with the required fields.&lt;br&gt;
The request with the new headers you'll need should look something like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cE1wTTxS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qpc2ledtt2d8set8h5m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cE1wTTxS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qpc2ledtt2d8set8h5m.png" alt="Postman POST request with just base URL and apikey, Authorization, Content-Type, and Prefer headings set as per the API documentation on Supabase" width="880" height="304"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This request requires a body of data to be sent to the API endpoint. Add some raw JSON data to the body tab of the request like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qgAq6sN5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ozcf3rv1airbfp7p83rs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qgAq6sN5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ozcf3rv1airbfp7p83rs.png" alt="Postman POST request showing the body tab of the above request. Body contains a JSON object with title and author values." width="880" height="240"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we send this, if it is successful, it will return with the item we just inserted.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#updating-data"&gt;
  &lt;/a&gt;
  Updating data
&lt;/h3&gt;

&lt;p&gt;A lot of times we have data in the app that needs to be changed/updated. In the API documentation this will be found under the "Update rows" section. This request is shaped a lot like the Insert request we did above. The first difference is that this is a &lt;em&gt;PATCH&lt;/em&gt; request instead of a &lt;em&gt;POST&lt;/em&gt; request. (Note that we use a &lt;em&gt;PATCH&lt;/em&gt; to update instead of a &lt;em&gt;PUT&lt;/em&gt; because &lt;em&gt;PATCH&lt;/em&gt; allows us to update only specific fields, while &lt;em&gt;PUT&lt;/em&gt; requires us to send the entire object with the request. We could have used &lt;em&gt;PUT&lt;/em&gt; in this case, but the &lt;em&gt;PATCH&lt;/em&gt; makes it more flexible in the future. &lt;a href="https://stackoverflow.com/a/34400076"&gt;See this link&lt;/a&gt; for more details on the difference). The second difference is in the URL. At the end of the URL there is a parameter. In the example from the API documentation they have it shown as &lt;code&gt;?some_column=eq.someValue&lt;/code&gt;. This is where we tell the database which row we want updated. So in our case, we can put &lt;code&gt;?id=eq.2&lt;/code&gt; to update the book with the ID of &lt;code&gt;2&lt;/code&gt;. Let's update the title to "The Graveyard Book" and the author to "Neil Gaiman."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JZWjqsLs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xc7dqqxeu9np2ws60cqk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JZWjqsLs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xc7dqqxeu9np2ws60cqk.png" alt="Postman PATCH request with URL specifying which row we want updated. Also with JSON body with new title and author values" width="880" height="243"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deleting-data"&gt;
  &lt;/a&gt;
  Deleting data
&lt;/h3&gt;

&lt;p&gt;We also need to be able to delete data from our table. Like before, look at the example request in the API documentation page. It is similar to the Update request above. There aren't as many headers needed though and we don't pass any data. We need to specify which row though using a parameter again and make sure you change the type of request to a &lt;em&gt;DELETE&lt;/em&gt; request. Let's delete the same book we just updated. The request will look something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kvOR0gLB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dwzab40l2lxem72lyuw6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kvOR0gLB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dwzab40l2lxem72lyuw6.png" alt="Postman DELETE request specifying which row we want to be deleted" width="880" height="246"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you navigate back to the Tables page of the Supabase UI, you should only see the first book you created.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Now you know the basics of how to set up and use a Supabase Database. This tutorial just scratched the surface of Supabase, but it should give you a solid start.&lt;/p&gt;

&lt;p&gt;Before you start using the database in an app, you'll also want to add the "Row Level Security" to your tables. This is beyond the scope of this introduction to Supabase blog, but basically it makes it so only authenticated users can affect the data in the tables. You can find out more in the &lt;a href="https://supabase.io/docs/guides/auth/row-level-security"&gt;Supabase documentation page&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>database</category>
      <category>supabase</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Static Code Analysis - A Beginner's Guide</title>
      <author>Bala Priya C</author>
      <pubDate>Mon, 06 Dec 2021 17:14:56 +0000</pubDate>
      <link>https://dev.to/balapriya/static-code-analysis-a-beginners-guide-4h91</link>
      <guid>https://dev.to/balapriya/static-code-analysis-a-beginners-guide-4h91</guid>
      <description>&lt;p&gt;Working on a large software project can often be a &lt;em&gt;challenging&lt;/em&gt; yet &lt;em&gt;rewarding&lt;/em&gt; experience. As a developer, you write code to solve problems. &lt;/p&gt;

&lt;p&gt;However, you‚Äôll have to write secure, bug-free code, and follow best coding practices while complying with standards. And this can be super difficult when you‚Äôre working under pressure.&lt;br&gt;
&lt;a href="https://i.giphy.com/media/9DpmqxzBBreVJf3LWH/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/9DpmqxzBBreVJf3LWH/giphy.gif" width="480" height="360"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;This is where &lt;strong&gt;Static Code Analysis&lt;/strong&gt; can come in handy.&lt;/p&gt;

&lt;p&gt;By the end of this post, you‚Äôll have learned enough to answer the following questions: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is static code analysis? &lt;/li&gt;
&lt;li&gt;Why should you care about static analysis as a developer?&lt;/li&gt;
&lt;li&gt;What are the advantages and limitations of static code analysis?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-static-code-analysis"&gt;
  &lt;/a&gt;
  What is static code analysis?
&lt;/h2&gt;

&lt;p&gt;In simple terms, &lt;strong&gt;static analysis&lt;/strong&gt;, or &lt;strong&gt;static code analysis&lt;/strong&gt; scans your code to identify potential bugs, weaknesses, and anti-patterns‚Äîall without actually executing the code.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So how exactly does static analysis work under the hood?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Well, static analysis often involves &lt;em&gt;parsing&lt;/em&gt; of the source code into an &lt;em&gt;intermediary representation&lt;/em&gt; on which you can run analysis. This analysis then returns potential security issues, bugs, and performance issues in your code‚Äîwhich you can fix almost immediately.&lt;/p&gt;

&lt;p&gt;Now that you know what static analysis is, you‚Äôll learn how it can help you write better code in the next section.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-should-you-care-about-static-analysis-as-a-developer"&gt;
  &lt;/a&gt;
  Why should you care about static analysis as a developer?
&lt;/h2&gt;

&lt;p&gt;As a developer, static analysis helps you in every step of the development process. You can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;write code, &lt;/li&gt;
&lt;li&gt;run static analysis, &lt;/li&gt;
&lt;li&gt;review, and &lt;/li&gt;
&lt;li&gt;fix reported bugs‚Äîwithout having to wait for code reviews. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And it‚Äôs a lot easier to fix bugs as and when they arise rather than having to regress and do it much later.&lt;/p&gt;

&lt;p&gt;Unlike the conventional testing process, where you need a specific module to be all ready to go, static analysis only requires a &lt;strong&gt;chunk of code that can be modeled&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;The term ‚Äò&lt;strong&gt;modeled&lt;/strong&gt;‚Äô here means that the code can be parsed into that intermediary representation on which the analyzer can be run. Please note that your code is never actually run in the process.&lt;br&gt;
This intermediary representation is often the &lt;strong&gt;Abstract Syntax Tree (AST)&lt;/strong&gt;. If you'd like to know more about ASTs, consider giving &lt;a href="https://dev.to/balapriya/abstract-syntax-tree-ast-explained-in-plain-english-1h38"&gt;this&lt;/a&gt; post a read.&lt;/p&gt;

&lt;p&gt;Because of how static analysis can be integrated into development right from the beginning, you can run analysis at every step and make sure your code meets the standards. &lt;/p&gt;

&lt;p&gt;This ensures that your code is almost bug-free when the actual testing process begins.&lt;br&gt;
&lt;a href="https://i.giphy.com/media/L1R1tvI9svkIWwpVYr/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/L1R1tvI9svkIWwpVYr/giphy.gif" width="480" height="270"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;So far, you‚Äôve learned how you can benefit from static analysis as a developer. Let‚Äôs put together the advantages in the next section.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages-of-static-analysis"&gt;
  &lt;/a&gt;
  Advantages of Static Analysis
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Static analysis is much faster and a lot more efficient than manual code reviews.&lt;/li&gt;
&lt;li&gt;The earlier you detect bugs and security issues, the easier it is to fix them. This saves time and substantially &lt;em&gt;reduces cost&lt;/em&gt;. - Waiting until deployment and then checking for vulnerabilities, regressing, and making fixes is needlessly complex and time-consuming.&lt;/li&gt;
&lt;li&gt;By shipping software that‚Äôs backed by quality code, you build trust, gain and retain customer base. This in turn motivates you to build more helpful products.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F0_E692j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6qy6497tarm28t1cql1o.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F0_E692j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6qy6497tarm28t1cql1o.jpg" alt="Advantages of static analysis" width="516" height="361"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well, are there any caveats yet? Let‚Äôs summarize the limitations of static analysis in the next section.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#limitations-of-static-analysis"&gt;
  &lt;/a&gt;
  Limitations of static analysis
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;On the flip side, static analysis is prone to &lt;strong&gt;false positives&lt;/strong&gt;. The analysis may report too many bugs, some of which may not actually be bugs. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For a large codebase, reviewing each of the reported bugs and vulnerabilities could come across as an overkill. Therefore, running static analysis as you code your way through the project is recommended.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Static analysis can &lt;strong&gt;miss&lt;/strong&gt; certain &lt;strong&gt;subtle bugs&lt;/strong&gt; which require human expertise. But it‚Äôs possible to fix them in subsequent steps of code review.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;And it‚Äôs always possible to improve the static analysis tool by embedding this intelligence to identify new bugs‚Äîtherefore, static analysis is &lt;em&gt;extensible&lt;/em&gt; to find new bugs.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope this post helped you get a high-level overview of static analysis, its advantages and limitations. See you all soon in another post!&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>codequality</category>
      <category>codereview</category>
    </item>
    <item>
      <title>Abstract Syntax Tree (AST) - Explained in Plain English</title>
      <author>Bala Priya C</author>
      <pubDate>Mon, 06 Dec 2021 17:14:18 +0000</pubDate>
      <link>https://dev.to/balapriya/abstract-syntax-tree-ast-explained-in-plain-english-1h38</link>
      <guid>https://dev.to/balapriya/abstract-syntax-tree-ast-explained-in-plain-english-1h38</guid>
      <description>&lt;p&gt;As a developer, the source code that you write is all so concise and elegant. And other developers can read, and understand your code with ease. However, a compiler has to do a lot more to make sense of your code.&lt;/p&gt;

&lt;p&gt;In this post, you‚Äôll learn how compilers try to understand what your code does, and focus on what an &lt;strong&gt;Abstract Syntax Tree(AST)&lt;/strong&gt; is, and its &lt;em&gt;relevance to static analysis&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-the-compiler-make-sense-of-your-code"&gt;
  &lt;/a&gt;
  How does the compiler make sense of your code?
&lt;/h2&gt;

&lt;p&gt;The steps involved in the compiler‚Äôs processing of source code are illustrated below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tdkv1Uip--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hq40ro9228f1dmyfipty.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tdkv1Uip--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hq40ro9228f1dmyfipty.jpg" alt="Steps in the processing of source code" width="632" height="638"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let‚Äôs expand on this a bit.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The source code is first split into smaller chunks called tokens through the process of &lt;strong&gt;lexical analysis&lt;/strong&gt;. Lexical analysis is also called tokenization.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The tokens are then parsed into a tree called the syntax tree by the &lt;strong&gt;parser&lt;/strong&gt;. An Abstract Syntax Tree (AST) abstracts out certain details, and retains just enough information to help the compiler understand the structure of the code.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Therefore, an AST is a &lt;strong&gt;tree&lt;/strong&gt; data structure that best represents the &lt;strong&gt;syntactic&lt;/strong&gt; structure of the &lt;strong&gt;source code&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Don‚Äôt worry if things aren‚Äôt clear just yet! Over the next few minutes, you‚Äôll draw a relatable analogy. And understand how the compiler works very similarly to how you'd try to make sense of a sentence.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lexical-analysis"&gt;
  &lt;/a&gt;
  Lexical Analysis
&lt;/h2&gt;

&lt;p&gt;In this section, you‚Äôll learn about lexical analysis. &lt;/p&gt;

&lt;p&gt;Suppose you‚Äôre learning a new language‚Äînot a programming language though :). And you‚Äôre given the task of inferring the meaning of a sentence in that language. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So how would you do it?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3ofSBivnP3i4u9SCdy/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3ofSBivnP3i4u9SCdy/giphy.gif" width="480" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a first step, you‚Äôll try identifying the nouns, verbs, or more generally, words that matter. And lexical analysis is very similar to this step.&lt;/p&gt;

&lt;p&gt;Given the source code, the compiler tries to first identify the different types of tokens that your code is composed of. &lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;token&lt;/strong&gt; could be any valid entity in the programming language‚Äîa literal that takes a fixed value, a variable, an operator, or a function call. &lt;/p&gt;

&lt;p&gt;As lexical analysis breaks down the source code into tokens, it is also called &lt;strong&gt;tokenization&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#syntactic-analysis"&gt;
  &lt;/a&gt;
  Syntactic Analysis
&lt;/h2&gt;

&lt;p&gt;So far, you know &lt;strong&gt;tokenization&lt;/strong&gt; leaves you with tokens, or entities‚Äîjust the way you‚Äôd identify entities in a sentence.&lt;br&gt;
Now that you‚Äôve identified the nouns, verbs etc. in the sentence, how‚Äôll you go about inferring its meaning? &lt;/p&gt;

&lt;p&gt;Well, you‚Äôll now try to &lt;strong&gt;parse the relationship&lt;/strong&gt; between the nouns, verbs and the like, to see how they fit together, and how they conform to the language‚Äôs grammar. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/lYpOXbTyaTF60/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/lYpOXbTyaTF60/giphy.gif" width="328" height="245"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This leads to the step of &lt;strong&gt;syntax analysis&lt;/strong&gt;, or &lt;strong&gt;parsing&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;And to perform syntactic analysis, there‚Äôs a parser that processes these tokens and parses them into a tree called the &lt;strong&gt;Abstract Syntax Tree (AST)&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#more-on-ast-representation"&gt;
  &lt;/a&gt;
  More on AST Representation
&lt;/h2&gt;

&lt;p&gt;Just the way the different entities and their relationships are often language-specific, there‚Äôs no one common AST representation.&lt;/p&gt;

&lt;p&gt;In general, the AST models the relationship between tokens in the source code, and each node contains information about the type of token, and related data. &lt;/p&gt;

&lt;p&gt;For example, if your node represents a function call, the arguments and return values will be the associated data.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://astexplorer.net/"&gt;AST Explorer&lt;/a&gt; helps in visualizing ASTs in several popular languages such as Go, Python, Java, and JavaScript.&lt;br&gt;
Here's a simple example in Python:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;my_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"code more!"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B2A29qid--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ejf0neetgwy9sxk9aumo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B2A29qid--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ejf0neetgwy9sxk9aumo.jpg" alt="Image description" width="880" height="532"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, the type of node is &lt;code&gt;VariableDeclaration&lt;/code&gt; as we declare the variable &lt;code&gt;my_str&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#relevance-of-ast-in-development"&gt;
  &lt;/a&gt;
  Relevance of AST in Development
&lt;/h2&gt;

&lt;p&gt;In most languages, parsers that give you the AST will also give you the methods to traverse an AST. This would enable you to visit different nodes of the AST to understand and additionally perform analysis. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So you can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; define rules, &lt;/li&gt;
&lt;li&gt;traverse the parse tree by visiting each node, and &lt;/li&gt;
&lt;li&gt;check for violation of rules.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;And this is where ASTs are relevant in static code analysis.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Static code analysis involves parsing of the source code into an intermediary representation on which you can run analysis, without actually running the code. And the intermediary representation is often the AST. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This analysis then returns potential security issues, bugs, and performance issues in your code - which you can fix almost immediately. For more information on static analysis, consider reading &lt;a href="https://dev.to/balapriya/static-code-analysis-a-beginners-guide-4h91"&gt;this&lt;/a&gt; post.&lt;/p&gt;

&lt;p&gt;In this tutorial, you‚Äôve learned:&lt;br&gt;
how lexical and syntactic analyses work,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Identify the tokens in the source code, and&lt;/li&gt;
&lt;li&gt;parse the relationship between these tokens to see how they fit together.
how ASTs are tree representations of your source code, and
how ASTs can help in static analysis&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you for reading. Hope you found this post helpful!&lt;/p&gt;

</description>
      <category>programming</category>
      <category>codequality</category>
      <category>compilers</category>
      <category>codereview</category>
    </item>
    <item>
      <title>What's the difference between C# and C++?</title>
      <author>ericaeducative</author>
      <pubDate>Mon, 06 Dec 2021 17:14:09 +0000</pubDate>
      <link>https://dev.to/educative/whats-the-difference-between-c-and-c-5d68</link>
      <guid>https://dev.to/educative/whats-the-difference-between-c-and-c-5d68</guid>
      <description>&lt;p&gt;C# and C++ are &lt;strong&gt;general-purpose programming languages&lt;/strong&gt; used for application development across various platforms. C# and C++ have rich histories. They‚Äôre both &lt;strong&gt;popular choices for software development, web development, and game development&lt;/strong&gt;. If you‚Äôre new to computer science, it may be difficult to choose which language to learn first. &lt;/p&gt;

&lt;p&gt;In this article, we‚Äôll discuss the &lt;strong&gt;difference between C# and C++&lt;/strong&gt;, as well as their histories and applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We‚Äôll cover&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#history"&gt;C# vs C++: A brief history&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#whencsharp"&gt;When was C# created?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#whencpp"&gt;When was C++ created?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#overview"&gt;Overview and applications: C# vs C++&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#csharp"&gt;What is C#?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cpp"&gt;What is C++?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#keydifferences"&gt;Major differences between C# and C++&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#compchart"&gt;Comparison chart: C# vs C++&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#learn"&gt;Should I learn C# or C++?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#nextsteps"&gt;Wrapping up and next steps&lt;/a&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#c-vs-c-a-brief-history"&gt;
  &lt;/a&gt;
  C# vs C++: A brief history
&lt;/h2&gt;

&lt;p&gt;Both C# and C++ are &lt;strong&gt;based on the C programming language&lt;/strong&gt;. C is a low-level programming language that was developed in the 1970s for programming in the UNIX operating system. C has various applications to this day, including embedded systems and scripting processes for server-side web applications. Other C-based languages include Objective C and Not Quite C.&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-was-c-created"&gt;
  &lt;/a&gt;
  When was C# created?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t_T38z9z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2j8emtfqs8mcr7kx67nf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t_T38z9z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2j8emtfqs8mcr7kx67nf.png" alt="c sharp" width="880" height="375"&gt;&lt;/a&gt;&lt;br&gt;
C# (pronounced ‚ÄúC Sharp‚Äù) was developed in 2000 by Microsoft‚Äôs Anders Hejlsberg. It was known as ‚ÄúCool‚Äù or "C.O.O.L." in its early days, which stood for ‚ÄúC-Like Object Oriented Language.‚Äù C# was introduced as a generic object-oriented programming (OOP) language and a direct competitor to Java on the Windows platform. In 2005, C# version 2.0 was still in the process of catching up with Java by introducing generics and iterators. By 2007, C# was growing into a more distinct hybrid as both an object-oriented and functional language. &lt;/p&gt;

&lt;p&gt;C# has gained many features over the years and become a &lt;strong&gt;multi-platform language&lt;/strong&gt;. It was initially intended for development in the Microsoft ecosystem, but Microsoft has since released &lt;strong&gt;open-source tools that support C# development across various platforms&lt;/strong&gt;: the Visual Studio Code code editor, the Roslyn compiler, and the unified .NET platform.&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#when-was-c-created"&gt;
  &lt;/a&gt;
  When was C++ created?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qb49npG7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g2b1jab5btw0c2o8spoz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qb49npG7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g2b1jab5btw0c2o8spoz.png" alt="c plus plus" width="880" height="365"&gt;&lt;/a&gt;&lt;br&gt;
C++ was developed in 1979 by Bjarne Stroustrup, a Danish graduate student. Influenced by his PhD thesis, Stroustrup aimed to enhance C by incorporating features from Simula and other programming languages. C++ fulfilled the need for object-oriented programming within C. It was a general-purpose language that &lt;strong&gt;introduced objects and classes to C&lt;/strong&gt;. As such, it was colloquially known as ‚ÄúC with Classes‚Äù. The ‚Äú++‚Äù directly comes from C‚Äôs ‚Äò++‚Äô operator, which increments the value of a variable.  C++ has since changed significantly and adopted &lt;strong&gt;object-oriented, generic, and functional features&lt;/strong&gt; as well as facilities for low-level memory manipulation. &lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#overview-and-applications-c-vs-c"&gt;
  &lt;/a&gt;
  Overview and applications: C# vs C++
&lt;/h2&gt;

&lt;p&gt;At first glance, C# and C++ might seem to have more similarities than differences. They‚Äôre both &lt;strong&gt;multi-paradigm&lt;/strong&gt; languages that can support &lt;strong&gt;object-oriented, functional, and generic programming&lt;/strong&gt;. They are general-purpose, and widely used for software development, web development, and game development across platforms. Let‚Äôs examine each language individually before we compare their differences.&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-is-c"&gt;
  &lt;/a&gt;
  What is C#?
&lt;/h3&gt;

&lt;p&gt;Here's &lt;strong&gt;Hello World&lt;/strong&gt; in C#.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class HelloWorld
{
    static void Main()
    {
        System.Console.WriteLine("Hello, World!");
    }
}
=&amp;gt; Hello, World!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;C#, or C Sharp, is a &lt;strong&gt;high-level language&lt;/strong&gt; that runs on the &lt;strong&gt;.NET Framework&lt;/strong&gt;. It is a multi-paradigm language that includes support for structured, imperative, reflective, and concurrent programming paradigms. C# code is typically compiled using just-in-time (JIT) compilation in &lt;strong&gt;Common Language Runtime&lt;/strong&gt; (CLR), the virtual machine component of the .NET Framework. The code is converted to machine instructions that are executable on the computer‚Äôs CPU.&lt;/p&gt;

&lt;p&gt;C# was originally designed for the Microsoft platform. Today, it has a variety of development applications, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Web applications&lt;/li&gt;
&lt;li&gt;Mobile applications for Android and iOS&lt;/li&gt;
&lt;li&gt;Desktop applications for Windows, Mac, and Linux &lt;/li&gt;
&lt;li&gt;Video games on the Unity game engine

&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-c"&gt;
  &lt;/a&gt;
  What is C++?
&lt;/h3&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;
Here's &lt;strong&gt;Hello World&lt;/strong&gt; in C++.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;
using namespace std;

int main() {
  cout &amp;lt;&amp;lt; "Hello, World!";
  return 0;
}
=&amp;gt; Hello, World!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;C++ is considered an &lt;strong&gt;intermediate language&lt;/strong&gt;, meaning it combines features of high-level and low-level programming languages. It is a multi-paradigm language that includes support for procedural, object-oriented, imperative, and generic programming paradigms. As a low-level language, it gives you a lot of control over your code. C++ is often a go-to language for &lt;strong&gt;large and embedded systems&lt;/strong&gt;, and is known for its speed and flexibility. C++ is most often implemented as a compiled language, meaning the source code compiles directly into machine code. &lt;/p&gt;

&lt;p&gt;C++ is often used for system programming and building applications with resource constraints. It is also used to develop the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Desktop applications&lt;/li&gt;
&lt;li&gt;Operating systems&lt;/li&gt;
&lt;li&gt;Embedded systems&lt;/li&gt;
&lt;li&gt;Servers&lt;/li&gt;
&lt;li&gt;GUI applications like browsers &lt;/li&gt;
&lt;li&gt;Advanced computation projects&lt;/li&gt;
&lt;li&gt;Video games on the Unreal game engine 

&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#major-differences-between-c-and-c"&gt;
  &lt;/a&gt;
  Major differences between C# and C++
&lt;/h2&gt;

&lt;p&gt;Let's start with three major differences between C# and C++:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;C# and C++ are classified as different levels of languages&lt;/strong&gt;: C# is a high-level language. C++ is an intermediate language, which means it combines features of high-level and low-level languages. As a high-level language, C# is inherently easier to learn and faster for building applications. High-level languages are user-centric, while low-level languages are machine-centric. However, high-level languages are also inherently limited because they can‚Äôt perform low-level programming. A low-level programming language offers far more flexibility with your code, which makes C++ more impressive in the category of flexibility.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;C# and C++ code run differently on machines&lt;/strong&gt;: C++ applications can run natively. C#, on the other hand, requires a virtual machine. C++ code is very similar to machine code. Your source code is compiled and converted to machine code without the need for a virtual machine. On the contrary, you need to install the .NET framework to run a C# application.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;C# and C++ have different approaches to memory management&lt;/strong&gt;: C# offers automatic garbage collection, but C++ doesn‚Äôt. This means that C++ requires you to manually manage what C# does automatically in a virtual machine. The plus side to manually managing your memory on C++ is that you also have opportunities to optimize your application from the ground up. 

&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#comparison-chart-c-vs-c"&gt;
  &lt;/a&gt;
  Comparison chart: C# vs C++
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Spc0Hr6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3x3hz7w77h6e1fat9y8d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Spc0Hr6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3x3hz7w77h6e1fat9y8d.png" alt="comparison chart csharp vs Cpp" width="880" height="931"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#should-i-learn-c-or-c"&gt;
  &lt;/a&gt;
  Should I learn C# or C++?
&lt;/h2&gt;

&lt;p&gt;You can choose whether to learn C# or C++ based on your personal and professional goals. Some important factors to consider are the industry you want to work in, the amount of time you‚Äôre willing to spend learning a language, and the types of applications you want to develop. &lt;/p&gt;

&lt;p&gt;Here are some factors to consider when choosing which programming language to learn:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Your game development goals&lt;/strong&gt;: C# and C++ are both used for game development. The Unreal game engine uses C++, while the Unity game engine uses C#. C++ is slightly more popular in the industry because it allows programmers more control than C#. If you‚Äôre looking to enter the gaming industry, you might want to base your decision off the language used by your favorite companies‚Äô game engines.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;How much flexibility you want in a language&lt;/strong&gt;: Flexibility differs between the languages. C# is easier to learn than C++, but C++ gives you more flexibility with your code as a low-level language. You can optimize and customize an application however you wish with C++. Relatively speaking, you can do &lt;em&gt;anything&lt;/em&gt; with C++.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;The types of applications you want to develop&lt;/strong&gt;: The applications you want to develop may also determine your choice. C# is a top pick for applications in the Microsoft ecosystem, especially for Windows desktop applications. However, C# is a cross-platform language that can build for other platforms as well. One thing C# cannot do is create embedded applications. For this kind of task, C++ should be your go-to. C++ is the top pick for programming for Linux. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Your web development goals&lt;/strong&gt;: C# is a popular choice if you‚Äôre looking to get into web development. You can use C# to build dynamic sites and web applications using .NET or other open-source platforms. C++ is less popular for web development for a few reasons. To start, cloud-based hosting is expensive for C++ and there are no stable and mature frameworks for C++ web development. That being said, C++ web development &lt;em&gt;is&lt;/em&gt; possible, and comes with some benefits: more control, higher speed, relatively less resource consumption, and an understanding of how the web really works. There are certainly developers who prefer C++ for web development, especially when they have limited power and many concurrent users.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Your desired learning curve&lt;/strong&gt;: The learning curve you‚Äôre willing to tackle might also impact your decision. C++ usually takes longer to learn than C#. This is because C++ is a low-level language and is machine-oriented, while C# is more intuitive to users as a higher-level language. The &lt;strong&gt;languages you already know&lt;/strong&gt; might shorten your learning curve for either language. For instance, C# may be easy to learn if you know Java, because they're similar languages. C++ may come easier to you if you‚Äôre familiar with the C programming language, or have a background in another high-level or low-level language.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;How well you want to understand computers&lt;/strong&gt;: You may not prefer it for every project, but C++ is a great language to learn if you‚Äôre a computer programmer who wants a deep understanding of how computers work. C++ lets you get hands-on with low-level concepts, and will help you grasp how computers think and operate. Other languages might make more sense to you after you‚Äôve mastered C++.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up-and-next-steps"&gt;
  &lt;/a&gt;
  Wrapping up and next steps
&lt;/h2&gt;

&lt;p&gt;We've seen that C# and C++ are distinct languages that are often used for the same purposes. They are popular for web development, game development, mobile development, and software development across various platforms. They are classified as different levels of languages and their code is processed differently by machines. &lt;br&gt;
Whatever you choose, there are certainly advantages for learning either language. If you have the time and the inclination, you may even decide to learn both!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;To help you master C++&lt;/strong&gt;, we‚Äôve created the &lt;a href="https://www.educative.io/path/cpp-for-programmers"&gt;&lt;strong&gt;C++ for Programmers&lt;/strong&gt;&lt;/a&gt; learning path. The 5-module interactive learning path covers C++ basics, templates, OOP, concurrent programming, and more.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;To help you get hands-on with C#&lt;/strong&gt;, we‚Äôve created this course: &lt;a href="https://www.educative.io/courses/c-sharp-for-programmers-a-practical-guide"&gt;&lt;strong&gt;C# for Programmers: A Practical Guide&lt;/strong&gt;&lt;/a&gt;. The course covers fundamentals of C# programming including loops, arrays, and OOP.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Happy learning!&lt;/em&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#continue-learning-about-c-and-c"&gt;
  &lt;/a&gt;
  Continue learning about C# and C++
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/c-is-a-good-first-language-to-learn"&gt;Why C++ is a good first language to learn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/best-cpp-ides-code-editors"&gt;The 11 best C++ IDEs (and code editors) for 2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/solid-principles-oop-c-sharp"&gt;S.O.L.I.D. Principles of Object-Oriented Programming in C#&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>cpp</category>
      <category>csharp</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Building an npm Package</title>
      <author>Kevin Lewis</author>
      <pubDate>Mon, 06 Dec 2021 17:07:53 +0000</pubDate>
      <link>https://dev.to/deepgram/building-an-npm-package-1p3b</link>
      <guid>https://dev.to/deepgram/building-an-npm-package-1p3b</guid>
      <description>&lt;p&gt;If you're a JavaScript developer, you've almost certainly used npm before. The Node Package Manager is a registry that allows developers to package up code and share it using a common set of commands - most commonly &lt;code&gt;npm install package-name&lt;/code&gt;. Our own Node.js SDK is available on npm under &lt;a href="https://www.npmjs.com/package/@deepgram/sdk"&gt;@deepgram/sdk&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this post, we'll create, publish, install, and use our first npm package. We'll then extend the functionality and end up with a more complex package that will let users query &lt;a href="http://www.omdbapi.com"&gt;The Open Movie Database&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Our final class-based package code can be found at &lt;a href="https://github.com/deepgram-devs/npm-package"&gt;https://github.com/deepgram-devs/npm-package&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#before-we-start"&gt;
  &lt;/a&gt;
  Before We Start
&lt;/h2&gt;

&lt;p&gt;You will need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Node.js installed on your machine - &lt;a href="https://nodejs.org/en/"&gt;download it here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;An npm account - &lt;a href="https://www.npmjs.com/signup"&gt;get one here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;An Open Movie Database API Key - &lt;a href="http://www.omdbapi.com/apikey.aspx"&gt;get one here&lt;/a&gt; and be sure to use the verification link in the email with the key.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Create a new directory and open it in your code editor of choice.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-an-npm-package"&gt;
  &lt;/a&gt;
  Creating an npm Package
&lt;/h2&gt;

&lt;p&gt;Create a &lt;code&gt;package.json&lt;/code&gt; file and populate it with minimal information required for an npm package:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"@username/first-package"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"0.0.1"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;name&lt;/code&gt; must be unique across all of npm. To aid this, and help list packages with the same author, we can 'scope' packages to a user or organization. Replace &lt;code&gt;username&lt;/code&gt; with your npm username to scope it. Some other notes about choosing your package name:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You cannot use uppercase letters.&lt;/li&gt;
&lt;li&gt;You can only use URL-safe characters.&lt;/li&gt;
&lt;li&gt;The maximum character length is 214.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;code&gt;version&lt;/code&gt; should follow &lt;a href="https://docs.npmjs.com/about-semantic-versioning"&gt;semantic versioning&lt;/a&gt;, which is &lt;code&gt;NUMBER.NUMBER.NUMBER&lt;/code&gt;. Every time we publish an update to our package, the version must be different from previously-published versions.&lt;/p&gt;

&lt;p&gt;If not specified, the default file for your project will be &lt;code&gt;index.js&lt;/code&gt;. Create a file and open it in your code editor:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a viable, though not terribly useful, npm package - it will always return a fixed value of &lt;code&gt;42&lt;/code&gt;. The &lt;code&gt;module.exports&lt;/code&gt; value can be anything - a fixed value, an object with multiple values, a function, a class, or any other data.&lt;/p&gt;

&lt;p&gt;While fixed values may have limited use, they are useful in some contexts - the &lt;code&gt;profane-words&lt;/code&gt; package I used in my (automatic profanity censoring)[&lt;a href="https://developers.deepgram.com/blog/2021/11/censor-profanity-nodejs/"&gt;https://developers.deepgram.com/blog/2021/11/censor-profanity-nodejs/&lt;/a&gt;] post use a fixed array value to include a list of almsot 3000 profanities instead of me needing to include them a more manual way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#publishing-an-npm-package"&gt;
  &lt;/a&gt;
  Publishing an npm Package
&lt;/h2&gt;

&lt;p&gt;Open your terminal and navigate to your project directory and run the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm login
npm publish &lt;span class="nt"&gt;--access&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;public
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You have now published your first ever npm package - congratulations! If you go to &lt;a href="https://www.npmjs.com/package/@username/first-package"&gt;https://www.npmjs.com/package/@username/first-package&lt;/a&gt; you should see it. Reminder: if ever you are publishing again, you must increase the version in &lt;code&gt;package.json&lt;/code&gt;,or you will get an error.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#testing-your-npm-package"&gt;
  &lt;/a&gt;
  Testing Your npm Package
&lt;/h2&gt;

&lt;p&gt;Want to use your package locally to test it before publishing? Create a new file in your repository called &lt;code&gt;scratchpad.js&lt;/code&gt; (you can call it anything - this is what I use) and open it on your code editor:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;firstPackage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./index.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firstPackage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 42&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run this file with &lt;code&gt;node scratchpad.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you want to exclude this file from being downloaded by users when they install your package, add it to a &lt;code&gt;.gitignore&lt;/code&gt; file. Create one now and enter the filenames you want to be excluded (one per line):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;scratchpad.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-your-npm-package"&gt;
  &lt;/a&gt;
  Using Your npm Package
&lt;/h2&gt;

&lt;p&gt;Create a brand new directory outside of this project. Navigate to it in a terminal, and type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install @username/first-package
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create an &lt;code&gt;index.js&lt;/code&gt; file to require and use the package:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;firstPackage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@username/first-package&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firstPackage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 42&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#exporting-functions"&gt;
  &lt;/a&gt;
  Exporting Functions
&lt;/h2&gt;

&lt;p&gt;As mentioned above, you can export any JavaScript value or datatype in your package. Replace the content of your &lt;code&gt;index.js&lt;/code&gt; with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is exporting an object with both the fixed value and the function. Update &lt;code&gt;scratchpad.js&lt;/code&gt; and then rerun it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;firstPackage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./index.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firstPackage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// { value: 42, sum: [Function: sum] }&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firstPackage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// 4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You may have seen object destructing when requiring packages. Here's how it looks:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./index.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// 4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This takes the &lt;code&gt;sum&lt;/code&gt; property in the object returned by our package and makes it available as a top-level variable called &lt;code&gt;sum&lt;/code&gt;. This is what we do with our &lt;a href="https://developers.deepgram.com/sdks-tools/sdks/node-sdk/"&gt;Deepgram Node.js SDK&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Deepgram&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@deepgram/sdk&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#exporting-classes"&gt;
  &lt;/a&gt;
  Exporting Classes
&lt;/h2&gt;

&lt;p&gt;Exporting one or more functions is quite a common behavior of npm packages, as is exporting a class. Here's what interacting with a class-based package looks like courtesy of the Deepgram Node.js SDK:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Deepgram&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@deepgram/sdk&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;deepgram&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Deepgram&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;DEEPGRAM_API_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;deepgram&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transcription&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preRecorded&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://static.deepgram.com/examples/nasa-spacewalk-interview.wav&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;transcript&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;transcript&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's create our own exported class for the Open Movie Database. First, install the &lt;code&gt;axios&lt;/code&gt; package that will help us make API calls. In your terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install axios
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you do this take a look at &lt;code&gt;package.json&lt;/code&gt; - the &lt;code&gt;dependencies&lt;/code&gt; section will be created for you. When users install your package, it will also install axios for them, along with axios' dependencies, and so on.&lt;/p&gt;

&lt;p&gt;Replace the whole content of &lt;code&gt;index.js&lt;/code&gt; with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;OpenMovieDatabase&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;apiKey&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apiKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;apiKey&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;GET&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://www.omdbapi.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;apikey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apiKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;parameters&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;OpenMovieDatabase&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Replace &lt;code&gt;scratchpad.js&lt;/code&gt; with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;OpenMovieDatabase&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./index&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;omdb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;OpenMovieDatabase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;YOUR_KEY_HERE&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;omdb&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;t&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Inside Out&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;results&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the package is required, an instance needs to be created. The &lt;code&gt;constructor&lt;/code&gt; we define expects an &lt;code&gt;apiKey&lt;/code&gt; which is then stored in that instance. When using the package, we only need to provide the key once and then use &lt;code&gt;omdb.get()&lt;/code&gt; as many times as we want without needing to provide our key as it is automatically included in the API request &lt;code&gt;params&lt;/code&gt;. Nifty, right?&lt;/p&gt;

&lt;p&gt;Before publishing this again, be sure to add &lt;code&gt;node_modules&lt;/code&gt; to a new line in your &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;This package lacks lots of features I would expect as a user:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;More robust error handling.&lt;/li&gt;
&lt;li&gt;Checking required parameters are provided and providing useful errors if not.&lt;/li&gt;
&lt;li&gt;Splitting the 'get' and 'search' requests.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Our final class-based package code can be found at &lt;a href="https://github.com/deepgram-devs/npm-package"&gt;https://github.com/deepgram-devs/npm-package&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When putting together my first npm packages, I found most tutorials stopped at the most basic examples or assumed lots of additional knowledge. I hope this has provided more helpful context and helped you get your first package published. If it did - please let us know what you've published so we can celebrate together - we are &lt;a href="https://twitter.com/DeepgramDevs"&gt;@DeepgramDevs&lt;/a&gt; on Twitter or &lt;a href="//mailto:devrel@deepgram.com"&gt;devrel@deepgram.com&lt;/a&gt; via email.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
