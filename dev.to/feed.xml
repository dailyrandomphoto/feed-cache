<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How To Plan A Redesign</title>
      <author>Marie-Elise</author>
      <pubDate>Sat, 26 Dec 2020 20:43:46 +0000</pubDate>
      <link>https://dev.to/kreyoldev/how-to-plan-a-redesign-3iji</link>
      <guid>https://dev.to/kreyoldev/how-to-plan-a-redesign-3iji</guid>
      <description>&lt;p&gt;I recently led a corporate website redesign, which involved a move from Drupal 7 to Drupal 8. I wanted to share my process for tackling this kind of CMS-based project. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Disclaimer: The process outlined below is a guide. Feel free to adapt it to fit the scope of your project. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents" class="anchor"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#setup"&gt;Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#phase-i-requirements-gathering"&gt;Phase I: Requirements Gathering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#phase-ii-research"&gt;Phase II: Research&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#phase-iii-information-architecture"&gt;Phase III: Information Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#phase-iv-wireframe"&gt;Phase IV: Wireframe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#phase-v-design"&gt;Phase V: Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#phase-vi-build"&gt;Phase VI: Build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#phase-vii-content-migration"&gt;Phase VII: Content Migration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#phase-viii-test"&gt;Phase VIII: Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#phase-ix-deploy"&gt;Phase IX: Deploy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#phase-x-maintain"&gt;Phase X: Maintain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#summary"&gt;Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#setup" class="anchor"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;p&gt;Choose a project management application (&lt;a href="https://todoist.com"&gt;Todoist&lt;/a&gt;, &lt;a href="https://notion.so"&gt;Notion&lt;/a&gt;, &lt;a href="https://basecamp.com"&gt;Basecamp&lt;/a&gt;, etc) and set up your project. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a section for each phase of the project.&lt;/li&gt;
&lt;li&gt;Add tasks to each section as they come up.&lt;/li&gt;
&lt;li&gt;Share the project with your team to keep everyone on-task and up-to-date.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I used Todoist for my redesign and appreciated the built-in shortcuts for adding tasks, tags, and due dates &lt;strong&gt;with one line of text&lt;/strong&gt;. It was a huge timesaver in my busy office. That being said, I will probably try Notion or Basecamp next time—just to experiment with a different system. There are many other great PM choices out there though! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#phase-i-requirements-gathering" class="anchor"&gt;
  &lt;/a&gt;
  Phase I: Requirements Gathering
&lt;/h2&gt;

&lt;p&gt;Gather the basic project requirements and confirm the "ideal" timeline for completion (if it's known). &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you're planning to use a CMS&lt;/strong&gt;, research platforms now and get quotes if needed. Understanding the basic features and associated costs can help you identify the platforms that will work best for your project. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip #1:&lt;/strong&gt; Don't commit to a timeline until the end of Phase II. Research can take time and reveal unknowns that could impact the scope of the project or the platform you end up choosing.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip #2:&lt;/strong&gt; Set expectations early that the timeline is subject to change and that you will communicate any changes early and often. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip #3:&lt;/strong&gt; Know who you need to communicate with—and get approval from—throughout the process. If this information is unknown, make sure to get approval from all stakeholders—at the very least—before starting &lt;a href="#phase-vi-build"&gt;Phase VI&lt;/a&gt; and &lt;a href="#phase-ix-deploy"&gt;Phase IX&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#phase-ii-research" class="anchor"&gt;
  &lt;/a&gt;
  Phase II: Research
&lt;/h2&gt;

&lt;p&gt;It's time to dive into UX research. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#steps" class="anchor"&gt;
  &lt;/a&gt;
  Steps:
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.toptal.com/designers/user-research/guide-to-ux-research-methods"&gt;Determine which types of research make the most sense for your project.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Implement your chosen research tactics and gather data.&lt;/li&gt;
&lt;li&gt;Pull analytics from any available sources (e.g., Google, Facebook, Twitter).&lt;/li&gt;
&lt;li&gt;Compile a report with all of your findings.&lt;/li&gt;
&lt;li&gt;Discuss findings with your team and any additional stakeholders that need to be at the table.&lt;/li&gt;
&lt;li&gt;Based on findings, brainstorm a list of all features that could address user pain points.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Feature Triage&lt;/strong&gt;—distinguish "Must Have" vs "Nice To Have" features. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;If you're planning to use a CMS&lt;/strong&gt;, this is a great time to cross-reference your feature wishlist with the built-in capabilities of different platforms. You may realize that a must-have feature isn't included with certain platforms—and this could significantly alter your project timeline.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#phase-iii-information-architecture" class="anchor"&gt;
  &lt;/a&gt;
  Phase III: Information Architecture
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Information architecture refers to the way that content is organized on your site. One way that this architecture is represented is with navigation menus. A well-organized menu is essential to a good user experience.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Print out your existing sitemap and analyze the structure of your site (&lt;strong&gt;read:&lt;/strong&gt; how the pages are organized). This is also an opportunity to conduct a content audit. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Is this content interesting or useful to your user? &lt;/li&gt;
&lt;li&gt;Did the analytics highlight any common—or unexpected—paths that users are taking to access certain types of content? &lt;/li&gt;
&lt;li&gt;Does it make sense to reorganize certain sections or pages? &lt;/li&gt;
&lt;li&gt;Does it make sense to condense—or break up—certain pages?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you've reorganized your IA, you'll have an idea of the sections you'll need to create—along with the total number of pages you'll have to build—on your new site. This information is especially useful &lt;strong&gt;if you're using a CMS&lt;/strong&gt; because it will affect the content types you'll have to build during &lt;a href="#phase-vi-build"&gt;Phase VI&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; When the IA has been finalized, assign someone to start writing any new content that will be needed, and start proofreading existing content that will be migrated to the new site. (That includes confirming contact information, spell-checking names, flagging graphic elements that are no longer on-brand, etc.) It will take time to complete this process if your site is large. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#phase-iv-wireframe" class="anchor"&gt;
  &lt;/a&gt;
  Phase IV: Wireframe
&lt;/h2&gt;

&lt;p&gt;Start sketching your wireframes! Grab a paper and pencil—or iPad and Apple Pencil— and start brainstorming. Don't be afraid to research other sites for inspiration, different layouts, etc. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you're using a CMS&lt;/strong&gt;, make sure that you sketch wireframes for each content type you'll be implementing on the new site.&lt;/p&gt;

&lt;p&gt;Once your sketches are complete, create final versions of your wireframes with your UI software of choice. Some popular options include: &lt;a href="https://adobe.com/xd"&gt; AdobeXD&lt;/a&gt;, &lt;a href="https://www.sketch.com"&gt;Sketch&lt;/a&gt; and &lt;a href="https://www.figma.com"&gt;Figma&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Discuss the wireframe options with your team and narrow down the layouts that will work best for your users.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#phase-v-design" class="anchor"&gt;
  &lt;/a&gt;
  Phase V: Design
&lt;/h2&gt;

&lt;p&gt;Take your final wireframes and turn them into full-color, interactive prototypes. This is an important step for integrating brand elements into the wireframe. Feel free to experiment and create multiple prototypes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you're using a CMS&lt;/strong&gt;, this is another opportunity to determine what features—from your prototype—are already built into your chosen platform. Determine if any custom modules need to be developed. Adjust your timeline accordingly.&lt;/p&gt;

&lt;p&gt;Discuss the prototype(s) with your team and finalize the design. Send a link of the final prototype to all essential stakeholders. Make any necessary changes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#phase-vi-build" class="anchor"&gt;
  &lt;/a&gt;
  Phase VI: Build
&lt;/h2&gt;

&lt;p&gt;Once the design is approved, it's time to start building! Set up your server, framework, platform, libraries, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you're using a CMS&lt;/strong&gt;, you'll need to complete this phase in 2 stages.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Site Building—install the base theme, install modules, configure settings, etc&lt;/li&gt;
&lt;li&gt;Custom Theming—customize the CSS, implement custom JS, build custom modules, etc &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Tip #1:&lt;/strong&gt; Incorporate &lt;a href="https://accessibility.arl.org/standards-best-practices/#technical-standards"&gt;accessibility best practices&lt;/a&gt; as you customize your theme. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip #2:&lt;/strong&gt; Bugs &lt;em&gt;will&lt;/em&gt; come up at this point in the process. Be prepared to alter your timeline at this point in the process. If you have to change your go-live date, communicate with all essential stakeholders. If you're not able to push the launch, revisit your feature wishlist and triage again. Consider what features can wait to be implemented until after the site is live.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#phase-vii-content-migration" class="anchor"&gt;
  &lt;/a&gt;
  Phase VII: Content Migration
&lt;/h2&gt;

&lt;p&gt;Migrate your old site's content to your new platform. This can be done automatically or manually. An automatic approach may work best if you're migrating between two versions of a CMS platform. A manual approach may work best if your site is small or if your databases are not compatible. Make sure to research your options.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Incorporate any accessibility features that couldn't be added during Phase VI (e.g., alt text for newly-migrated images) at this point in the process. &lt;/p&gt;

&lt;p&gt;When migration is complete, send a link for the test site to all essential stakeholders. Provide a deadline for users to test the new platform and proofread content. Encourage them to use different devices and browsers and make note of all feedback you receive (e.g., broken links, typos, features that don't work on certain browsers).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#phase-viii-test" class="anchor"&gt;
  &lt;/a&gt;
  Phase VIII: Test
&lt;/h2&gt;

&lt;p&gt;Now it's time for browser compatibility testing. There are two approaches you can take.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Manual testing—install different browsers on your device and pull up your site on each one to manually click through. &lt;/li&gt;
&lt;li&gt;Automatic testing—subscribe to a browser testing service (like &lt;a href="https://www.browserstack.com/"&gt;BrowserStack&lt;/a&gt; or &lt;a href="https://www.browserling.com/"&gt;Browserling&lt;/a&gt;).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Make note of any bugs that are identified and triage. Determine if/what problems need to be addressed before the go-live date.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#phase-ix-deploy" class="anchor"&gt;
  &lt;/a&gt;
  Phase IX: Deploy
&lt;/h2&gt;

&lt;p&gt;When testing is complete and your site has been approved, it's time to deploy! Confirm the go-live date and time, as well as the process for publishing the new site. Choose a non-peak time, preferably early in the week, to give yourself plenty of space to troubleshoot.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#phase-x-maintain" class="anchor"&gt;
  &lt;/a&gt;
  Phase X: Maintain
&lt;/h2&gt;

&lt;p&gt;This phase often gets overlooked but as I work more with older sites, I appreciate the value of a well thought-out maintenance plan. It's easy for a site's IA to grow out of control over time—and for vanity pages to creep in. This is where a solid web content strategy comes into play. It will help you establish an audit schedule for a site's content, along with guidelines for managing that content. This will make long-term maintenance (and future redesigns!) less painful. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I'll write a future post with tips for developing a web content strategy.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary" class="anchor"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Redesigning a website can seem overwhelming, but there is a systematic way to break it down and tackle it. While the steps outlined above are not necessary for every project, it worked well for my CMS-based redesign. &lt;/p&gt;

&lt;p&gt;Have you tackled a redesign? Did you go about it in a different way? I'd love to hear about it!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>You're Allowed To Make Your Own Tools</title>
      <author>swyx</author>
      <pubDate>Sat, 26 Dec 2020 18:04:11 +0000</pubDate>
      <link>https://dev.to/swyx/you-re-allowed-to-make-your-own-tools-85k</link>
      <guid>https://dev.to/swyx/you-re-allowed-to-make-your-own-tools-85k</guid>
      <description>&lt;p&gt;I read a list of &lt;a href="https://milan.cvitkovic.net/writing/things_youre_allowed_to_do/"&gt;Things You're Allowed To Do&lt;/a&gt; on Hacker News recently. These are useful reminders for a well paid, technical audience, but one thing stuck out to me: &lt;strong&gt;It didn't mention making your own tools&lt;/strong&gt;. Not even once.&lt;/p&gt;

&lt;p&gt;Even the greatest software has parts that aren't so great for you. But the difference between you and everyone else is that you can code. &lt;/p&gt;

&lt;p&gt;Here's a list of tools (&lt;em&gt;that you don't need anyone's permission&lt;/em&gt;) to code for yourself:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;You can make your own Stylesheet&lt;/strong&gt;: Long before &lt;a href="https://twitter.com/swyx/status/1336363173838909441"&gt;GitHub got Dark Mode&lt;/a&gt;, developers had been making their own with the &lt;a href="https://github.com/openstyles/stylus"&gt;Stylus Userstyles Manager&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;You can make your own Query Generator&lt;/strong&gt;: Most platforms have advanced features that are poorly documented and don't have good UIs. You can make your own. I made my own &lt;a href="https://twitter.com/swyx/status/1328086859356913664?s=20"&gt;Advanced Twitter Search UI&lt;/a&gt; embedding all the little tips and tricks that people pass around by word of mouth. I know of two ongoing attempts to &lt;a href="https://twitter.com/swyx/status/1335627133956153344"&gt;do the same for Google's advanced operators&lt;/a&gt;.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i5hD-SBx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jntu0l1zk2o3xz8bu5fz.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;You can make an Inspo Generator&lt;/strong&gt;: Projects like &lt;a href="https://whattotweet.com/"&gt;What to Tweet&lt;/a&gt;, &lt;a href="https://components.ai/"&gt;Components.ai&lt;/a&gt; and &lt;a href="https://www.doodlestrudel.com/"&gt;Doodle Strudel&lt;/a&gt; get ridiculously popular compared to their technical complexity - because inspiration loves combinatorial explosions!&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;You can make your own scripts&lt;/strong&gt;: &lt;a href="https://github.com/NARKOZ/hacker-scripts#hacker-scripts"&gt;Like this guy&lt;/a&gt;. Developers have apparently been automating coffee machines for so long that I recently learned that the infamous &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/418"&gt;HTTP Error 418&lt;/a&gt; was inspired by an actual real life situation.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;You can make your own CLIs&lt;/strong&gt;: CLIs are essentially interactive scripts. If you do JavaScript, I made a course on Egghead about &lt;a href="https://egghead.io/courses/build-custom-command-line-interface-cli-tooling-with-oclif-and-typescript?af=95qfq1"&gt;building custom CLIs with oclif and TypeScript&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;You can make personal proxies&lt;/strong&gt;: Frustrated with slow searches (I am often on mobile 3G), &lt;a href="https://news.ycombinator.com/item?id=25538586"&gt;gamed search results&lt;/a&gt;, and &lt;a href="https://twitter.com/shanselman/status/1341583883947544578?s=20"&gt;assorted crap in my URLs&lt;/a&gt;, I recently &lt;a href="https://twitter.com/swyx/status/1342625544320339969"&gt;made my own Google Search proxy&lt;/a&gt;. A proxy is different from "just the UI", because it involves setting up a server or serverless function to process data for you. Because you have total control of server data, you have the ability to postprocess, combine, persist, and optimize it for your specific preferences. &lt;a href="https://www.reuters.com/article/dataprivacy-linkedin-datascraping-idUSL2N2GM1ZV"&gt;Scraping public data is probably legal&lt;/a&gt;, but personal means personal - Be careful about sharing it with others and definitely do not sell it. But this is ethically no different than setting up your own &lt;a href="https://pi-hole.net/"&gt;Pi-hole&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pt5ius5W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/56r2dhdtgq8qw3qsi3jo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pt5ius5W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/56r2dhdtgq8qw3qsi3jo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;My personal &lt;a href="https://github.com/sw-yx/automation/"&gt;cheatsheet of automation resources is available here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These ideas are great, scoped projects that let you try out new languages and frameworks and improve your quality of life as a side effect. Always wanted to &lt;a href="https://www.swyx.io/svelte-why/"&gt;try Svelte&lt;/a&gt;? Make a query generator! Want a new CLI? &lt;a href="https://deno.land/posts/v1.6"&gt;Deno ships binaries now!&lt;/a&gt; &lt;a href="https://supabase.io/"&gt;Supabase&lt;/a&gt; claims to be an Open Source Firebase Alternative? Put it to the test!&lt;/p&gt;

&lt;p&gt;And there's a compounding effect to these as you make them. More often than not, the lessons you learn from making a tool for yourself will find their way into your work. If you get &lt;em&gt;really&lt;/em&gt; lucky - &lt;a href="https://medium.com/who-what-why/how-side-projects-saved-our-startup-a83a80f3b3ae"&gt;your side projects might even become your life's work&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Don't take it from me. Here's &lt;a href="https://twitter.com/dan_abramov/status/1140259247680315393?s=20"&gt;Dan Abramov&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Here’s a thing that I learned at FB that I wish I knew much earlier. Invest in building custom tools! &lt;/p&gt;

&lt;p&gt;You might think only bigcos make custom tools. But a tool doesn’t have to be sophisticated. It can be a script you could write in a day. And at small and medium companies, even a little effort can yield a huge return. Because &lt;strong&gt;nobody optimized anything yet&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The beauty of specializing in moving bits instead of atoms is that we can iterate in minutes, rather than months. That's a skill that customers pay us handsomely for, and we should remember that we can simply be our own customers too.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Author's Note: I wrote a longer treatment of the benefits of, and ideas for, Side Projects in &lt;a href="https://www.learninpublic.org/"&gt;The Coding Career Handbook&lt;/a&gt;. I also commented in &lt;a href="https://www.thekeycuts.com/dear-analyst-50-walking-through-a-vba-script-for-trading-billions-of-dollars-worth-of-derivatives-with-shawn-wang/"&gt;the KeyCuts podcast&lt;/a&gt; on how all young finance traders make their own pricing tools as a rite of passage — like how &lt;a href="https://starwars.fandom.com/wiki/Knighting_ceremony/Legends#New_Jedi_Order"&gt;Jedi make their own lightsabers&lt;/a&gt; before becoming Jedi Knights.&lt;/p&gt;

&lt;p&gt;If you are making a DevTools startup, I am &lt;a href="https://codingcareer.circle.so/c/devtools"&gt;incubating a small community in DX Circle&lt;/a&gt;, my proto-blog for investing in Developer Tools and Developer Communities.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>advice</category>
    </item>
    <item>
      <title>The Difference between JavaScript “==” and “===” Comparison Operators</title>
      <author>Uma</author>
      <pubDate>Sat, 26 Dec 2020 17:40:12 +0000</pubDate>
      <link>https://dev.to/uma/the-difference-between-javascript-and-comparison-operators-2j78</link>
      <guid>https://dev.to/uma/the-difference-between-javascript-and-comparison-operators-2j78</guid>
      <description>&lt;p&gt;There are many comparison operators in javascript but we are going to discuss double equal &lt;code&gt;==&lt;/code&gt;  and triple equal &lt;code&gt;===&lt;/code&gt;  operators. It is important to know the difference between these two operators and also the difference between &lt;code&gt;!=&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt; in javascript. Lets begin with the double equal operator:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Double equal “==”&lt;/strong&gt;&lt;br&gt;
    It is known as equality. The double equal operator checks for equality of value. It doesn’t care about data types. Before it checks for equality JavaScript converts both values to the same type and then compares them, which can lead to some unexpected results. Like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;5 == ‘5’    // true
0 == ‘ ‘    // true
0 == false  // true
null == undefined   // true
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;As seen above, the &lt;code&gt;==&lt;/code&gt; operator is returning true for comparing an integer and a string in the first case, then 0 equals empty string true in the second case, 0 equals false in the third case and null equals undefined is also returning true which is not true in the last case. It is just checking the value but not the type, which is why all of the above comparisons return true. Similarly, the &lt;code&gt;!=&lt;/code&gt; operator is used to check inequality. If you use &lt;code&gt;!=&lt;/code&gt; in the above examples everything will return false. It can definitely lead to some nasty bugs in an application, so it's not recommended to use the &lt;code&gt;==&lt;/code&gt;  and/or &lt;code&gt;!=&lt;/code&gt; operators for comparison in JavaScript. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you are not sure about types you can go to the console and simply type “typeof ” and check its type. You can take a look at the image below to see what is returned in the console when you check the typeof. Make sure you use all lowercase letters when writing typeof and not the camelCase version of typeOf.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lUBNkKU0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/k0onk1fjxzvt6skiz5kw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lUBNkKU0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/k0onk1fjxzvt6skiz5kw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Triple equal “===”&lt;/strong&gt;&lt;br&gt;
    Known as strict equality, it not only checks for equality of value but also datatype. It cares about value and types both which is why it's recommended to use strict equality for comparison, it's more precise. The above examples will return false when &lt;code&gt;===&lt;/code&gt; is used :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;5 === ‘5’   // false
0 === ‘ ‘   // false
0 === false // false
null === undefined  // false
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Similarly the &lt;code&gt;!==&lt;/code&gt; operator is strict inequality. Beside these operators there are few more comparison operators we need to know. Here is the screen shot from the MDN documentation:&lt;/p&gt;

&lt;p&gt;var var1 = 3;&lt;br&gt;
var var2 = 4;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m8ZHiQhg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/m54dm39u0keczyc7aaiu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m8ZHiQhg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/m54dm39u0keczyc7aaiu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all for comparison operators. I hope it helps. &lt;br&gt;
Happy Holidays everyone!&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>Redis, Kafka or RabbitMQ: Which MicroServices Message Broker To Choose?</title>
      <author>Assyahid Hasan Albana</author>
      <pubDate>Sat, 26 Dec 2020 17:04:40 +0000</pubDate>
      <link>https://dev.to/assyahid/redis-kafka-or-rabbitmq-which-microservices-message-broker-to-choose-55k8</link>
      <guid>https://dev.to/assyahid/redis-kafka-or-rabbitmq-which-microservices-message-broker-to-choose-55k8</guid>
      <description>&lt;p&gt;When using asynchronous communication for Microservices, it is common to use a message broker. A broker ensures communication between different microservices is reliable and stable, that the messages are managed and monitored within the system and that messages don’t get lost. There are a few message brokers you can choose from, varying in scale and data capabilities. This blog post will compare the three most popular brokers: RabbitMQ, Kafka and Redis.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#microservices-communication-synchronous-and-asynchronous" class="anchor"&gt;
  &lt;/a&gt;
  Microservices Communication: Synchronous and Asynchronous
&lt;/h3&gt;

&lt;p&gt;There are two common ways Microservices communicate with each other: Synchronous and Asynchronous. In a Synchronous communication, the caller waits for a response before sending the next message, and it operates as a REST protocol on top of HTTP. On the contrary, in an Asynchronous communication the messages are sent without waiting for a response. This is suited for distributed systems, and usually requires a message broker to manage the messages.&lt;/p&gt;

&lt;p&gt;The type of communication you choose should consider different parameters, such as how you structure your Microservices, what infrastructure you have in place, latency, scale, dependencies and the purpose of the communication. Asynchronous communication may be more complicated to establish and requires adding more components to stack, but the advantages of using Asynchronous communication for Microservices outweigh the cons.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#asynchronous-communication-advantages" class="anchor"&gt;
  &lt;/a&gt;
  Asynchronous Communication Advantages
&lt;/h3&gt;

&lt;p&gt;First and foremost, asynchronous communication is non-blocking by definition. It also supports better scaling than Synchronous operations. Third, in the event Microservice crashes, Asynchronous communication mechanisms provide various recovery techniques and is generally better at handling errors pertaining to the crash. In addition, when using brokers instead of a REST protocol, the services receiving communication don’t really need to know each other. A new service can even be introduced after an old one has been running for a long time, i.e better decoupling services.&lt;/p&gt;

&lt;p&gt;Finally, when choosing Asynchronous operations, you increase your capability of creating a central discovery, monitoring, load balancing, or even policy enforcer in the future. This will provide you with abilities for flexibility, scalability and more capabilities in your code and system building.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#choosing-the-right-message-broker" class="anchor"&gt;
  &lt;/a&gt;
  Choosing the Right Message Broker
&lt;/h3&gt;

&lt;p&gt;Asynchronous communication is usually manages through a message broker. There are other ways as well, such as aysncio, but they’re more scarce and limited.&lt;/p&gt;

&lt;p&gt;When choosing a broker for executing your asynchronous operations, you should consider a few things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Broker Scale – The number of messages sent per second in the system.&lt;/li&gt;
&lt;li&gt;Data Persistency – The ability to recover messages.&lt;/li&gt;
&lt;li&gt;Consumer Capability – Whether the broker is capable of managing one-to-one and/or one-to-many consumers.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;One-to-One&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B962MbRp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/x29q4vk0xyweoule3xec.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B962MbRp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/x29q4vk0xyweoule3xec.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;One-to-Many&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QVqTCvTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/y7c1x9bkwx7j1vfd7oom.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QVqTCvTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/y7c1x9bkwx7j1vfd7oom.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We checked out the latest and greatest services out there in order to find out which provider is the strongest within these three categories.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#comparing-different-message-brokers" class="anchor"&gt;
  &lt;/a&gt;
  Comparing Different Message Brokers
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#rabbitmq-amqp" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;RabbitMQ (AMQP)&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Scale&lt;/strong&gt;: based on configuration and resources, the ballpark here is around 50K msg per second.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Persistency&lt;/strong&gt;: both persistent and transient messages are supported.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;One-to-one&lt;/strong&gt; vs &lt;strong&gt;one-to-many consumers&lt;/strong&gt;: both.&lt;br&gt;
RabbitMQ was released in 2007 and is one of the first common message brokers to be created. It’s an open source that delivers messages through both point-to-point and pub-sub methods by implementing Advanced Message Queuing Protocols (AMQP). It’s designed to support complex routing logic.&lt;/p&gt;

&lt;p&gt;There are some managed services that allow you to use it as a SaaS but it’s not part of the native major cloud provider stack. RabbitMQ supports all major languages, including Python, Java, .NET, PHP, Ruby, JavaScript, Go, Swift, and more.&lt;/p&gt;

&lt;p&gt;Expect some performance issues when in persistent mode.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#kafka" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Kafka&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Scale&lt;/strong&gt;: can send up to a millions messages per second.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Persistency&lt;/strong&gt;: yes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;One-to-one&lt;/strong&gt; vs &lt;strong&gt;one-to-many consumers&lt;/strong&gt;: only one-to-many (seems strange at first glance, right?!).&lt;/p&gt;

&lt;p&gt;Kafka was created by Linkedin in 2011 to handle high throughput, low latency processing. As a distributed streaming platform, Kafka replicates a publish-subscribe service. It provides data persistency and stores streams of records that render it capable of exchanging quality messages.&lt;/p&gt;

&lt;p&gt;Kafka has managed SaaS on Azure, AWS, and Confluent. They are all the creators and main contributors of the Kafka project. Kafka supports all major languages, including Python, Java, C/C++, Clojure, .NET, PHP, Ruby, JavaScript, Go, Swift and more.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#redis" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Redis&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Scale&lt;/strong&gt;: can send up to a million messages per second.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Persistency&lt;/strong&gt;: basically, no – it’s an in-memory datastore.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;One-to-one&lt;/strong&gt; vs &lt;strong&gt;one-to-many consumers&lt;/strong&gt;: both.&lt;/p&gt;

&lt;p&gt;Redis is a bit different from the other message brokers. At its core, Redis is an in-memory data store that can be used as either a high-performance key-value store or as a message broker. Another difference is that Redis has no persistency but rather dumps its memory into a Disk/DB. It’s also perfect for real-time data processing.&lt;/p&gt;

&lt;p&gt;Originally, Redis was not one-to-one and one-to-many. However, since Redis 5.0 introduced the pub-sub, capabilities boosted and one-to-many became a real option.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#message-brokers-per-use-case" class="anchor"&gt;
  &lt;/a&gt;
  Message Brokers per Use Case
&lt;/h3&gt;

&lt;p&gt;We covered some characteristics of RabbitMQ, Kafka, and Redis. All three are beasts in their category, but as described, they operate quite differently. Here is our recommendation for the right message broker to use according to different use cases.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#shortlived-messages-redis" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Short-lived Messages: Redis&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Redis’s in-memory database is an almost perfect fit for use-cases with short-lived messages where persistence isn’t required. Because it provides extremely fast service and in-memory capabilities, Redis is the perfect candidate for short retention messages where persistence isn’t so important and you can tolerate some loss. With the release of Redis streams in 5.0, it’s also a candidate for one-to-many use cases, which was definitely needed due to limitations and old pub-sub capabilities.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#large-amounts-of-data-kafka" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Large Amounts of Data: Kafka&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Kafka is a high throughput distributed queue that’s built for storing a large amount of data for long periods of time. Kafka is ideal for one to many use cases where persistency is required.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#complex-routing-rabbitmq" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Complex Routing: RabbitMQ&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;RabbitMQ is an older, yet mature broker with a lot of features and capabilities that support complex routing. It will even support complex routing communication when the required rate is not high (more than a few tens of thousands msg/sec).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#consider-your-software-stack" class="anchor"&gt;
  &lt;/a&gt;
  Consider Your Software Stack
&lt;/h3&gt;

&lt;p&gt;The final consideration, of course, is your current software stack. If you’re looking for a relatively easy integration process and you don’t want to maintain different brokers in a stack, you might be more inclined to work with a broker that is already supported by your stack.&lt;/p&gt;

&lt;p&gt;For example, if you’re using Celery for Task Queue in your system on top of RabbitMQ, you’ll have an incentive to work with RabbitMQ or Redis as opposed to Kafka who is not supported and would require some rewriting.&lt;/p&gt;

&lt;p&gt;We at Otonomo have used all the above through our platform evolution and growth and then some! It’s important to remember that each tool has its own pro &amp;amp; cons and it’s about understanding them and choosing the right tool for the job and that specific moment, situation and requirements.&lt;/p&gt;

</description>
      <category>microservices</category>
      <category>beginners</category>
      <category>messagebroker</category>
      <category>database</category>
    </item>
    <item>
      <title>Javascript: How to implement a queue</title>
      <author>okere chinedu victor</author>
      <pubDate>Sat, 26 Dec 2020 17:04:32 +0000</pubDate>
      <link>https://dev.to/chinedu/javascript-how-to-implement-a-queue-3e1c</link>
      <guid>https://dev.to/chinedu/javascript-how-to-implement-a-queue-3e1c</guid>
      <description>&lt;p&gt;After, writing about &lt;a href="https://www.ddevguys.com/javascript-how-you-can-implement-a-stack-in-3-mins"&gt;STACKS&lt;/a&gt;, the positive feedback, and all the support and nice DMs I got on Instagram and Twitter has made me turn this into a series, yeah you read that right.&lt;/p&gt;

&lt;p&gt;This is going to be a series of data-structures and algorithms using javascript.&lt;/p&gt;

&lt;p&gt;I hope you reading this enjoys it. Let’s go…🤓🤓🤓&lt;/p&gt;

&lt;p&gt;In today’s blog article, we would be talking about queues!&lt;/p&gt;

&lt;p&gt;What is a queue A queue is a data structure that follows the first in first out (FIFO)principle.&lt;/p&gt;

&lt;p&gt;Example: people standing in a line (first come first serve) to get groceries from a grocery store, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RwEYOHNR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/qkfkf6qf2wg795m3j4xm.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RwEYOHNR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/qkfkf6qf2wg795m3j4xm.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Queues are very similar to stack, but instead of using the LIFO principles like stacks do they use the FIFO principle which we would implement as we go on.&lt;/p&gt;

&lt;p&gt;In javascript, we have array methods that define the queue class which is a push() and shift() method.&lt;/p&gt;

&lt;p&gt;Adding an item to the queue is commonly known as enqueuing and removing an item from the queue is known as dequeuing.&lt;/p&gt;

&lt;p&gt;push() is used to enqueue while shift() is used to dequeue.&lt;/p&gt;

&lt;p&gt;The shift() is a javascript array method that removes and returns the first element of an array.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_H2CVB2k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/y4dgj503t5cu0rxxgjln.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_H2CVB2k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/y4dgj503t5cu0rxxgjln.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s create a queue&lt;/p&gt;

&lt;p&gt;Let’s write some codes, shall we? As usual, we start with the basics and declare a class using an array in the constructor property of our class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Queue class

Class Queue{
     constructor() {
       this.items=[];
     }
    //Methods to be 
     implemented go here
      enqueue(item)
      dequeue()
      front()
      isEmpty()
      size()
      print()
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Let’s implement each method for our queue class.&lt;/p&gt;

&lt;p&gt;Enqueue: This adds a new item to the back of the queue, this is similar to standing in a line (queue) to get items from a grocery store.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;enqueue(item) {
//enqueuing items onto the queue
this.items.push(item)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Dequeue: This removes and returns the first item on the queue, this is the first come first serve.&lt;/p&gt;

&lt;p&gt;The first person to get to our imaginary grocery store is the first person to be attended to.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dequeue(){
//remove items from the queue
this.items.shift()
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Front: This method returns the first item from the queue, but it does not modify the queue.&lt;/p&gt;

&lt;p&gt;In our imaginary grocery store, let’s imagine that the grocery store attendant wants to know who is first on the queue.&lt;/p&gt;

&lt;p&gt;Note that he has not attended to this person yet in our case has not modified the queue.&lt;/p&gt;

&lt;p&gt;He just wants to know who is first on the queue.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;front() {
//returns the first item on the queue
this.items[0]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;isEmpty: This returns false if the queue contains items or is greater than 0, and returns true if the queue is empty.&lt;/p&gt;

&lt;p&gt;In our imaginary grocery store, let’s imagine that the grocery store attendant wants to know if there are more customers to attend to, if there are customers, that means the queue is not empty so as a result, we get false.&lt;/p&gt;

&lt;p&gt;But if the grocery attendant has attended to everyone in the queue, then that means the queue is empty so as a result, we get true&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;isEmpty() {
this.items.length == 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Size: This gives us the number of items in our queue.&lt;/p&gt;

&lt;p&gt;Back to our imaginary grocery store where we have a queue of customers.&lt;/p&gt;

&lt;p&gt;Let’s imagine that the grocery store attendant for some reasons best known to him wants to know how many people he is attending to at the moment (people on the queue) then he will have to count them right? Yeah.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;size() {
//check the number of items on the queue
this.items.length;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Just like when we implemented the &lt;a href="https://www.ddevguys.com/javascript-how-you-can-implement-a-stack-in-3-mins"&gt;STACKS&lt;/a&gt; class. We could go a step further to add a print method to help us print all the items in the queue whenever we want.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;print() {
//log all the items in the queue
console.log(items to String())
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Let’s use the queue class First, we have to instantiate the queue class we created&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//instantiating the queue
let queue = new Queue()
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Next, we can add items to our queue (since we are using the imaginary grocery store queue we would use real peoples names and enqueue them unto our queue. Let's use Vivian, Gideon, and Shalom)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// pushing a new item (customers) to the queue
queue.enqueue("Vivian")
queue.enqueue("Gideon")
queue.enqueue("Shalom")
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Next, we can go ahead to check if items are on the queue (checking if anyone is on our grocery store queue)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//returns false
console.log(queue.isEmpty())
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Next, we call the front() method, by doing so we would get Vivian because she happens to be the first person in the queue.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//returns vivian
queue.front()
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now, we want to check the size of our queue to see how many items (customers) are on it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//returns 3
Console.log(queue.size())
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Let’s print out all the items in our queue&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//returns [“Vivian”, “Gideon”, “Shalom”]
queue.print()
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Let’s remove items from the queue.&lt;/p&gt;

&lt;p&gt;In our imaginary grocery store, we have to attend to our customers right? Yeah! If that be the case this has to happen in a first come first serve format (FIFO)).&lt;/p&gt;

&lt;p&gt;Let’s do this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//remove each item from the queue
queue.dequeue()
queue.dequeue()
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;if we run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;queue.print()
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;we see that Vivian and Gideon has left the queue (our first two customers have been tended too) so we have only shalom to attend too.&lt;/p&gt;

&lt;p&gt;Let’s not waste his time let’s attend to him, so once again we run the dequeue method of our queue class&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;queue.dequeue ()
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;To confirm our last action we can once again check if our queue is empty. This should return true&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//returns true
queue.isEmpty()
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;With this, we can say we have successfully implemented a queue in JavaScript KUDOS &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V7UiPajr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/8w76y33sbyszmtr8nkb7.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V7UiPajr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/8w76y33sbyszmtr8nkb7.gif" alt="Alt Text"&gt;&lt;/a&gt; you made it to this point but one more thing…&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D9Ib3Jsl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/pme73d5xngilpl7u278b.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D9Ib3Jsl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/pme73d5xngilpl7u278b.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Whenever a new tab is opened in a browser a task queue is created.&lt;/p&gt;

&lt;p&gt;This is because of something we call the event loop and in the event loop only a single thread handles all the tasks for a single tab.&lt;/p&gt;

&lt;p&gt;The browser handles several tasks such as handling user interaction (keyboard clicks, mouse clicks, etc), processing and executing async requests, executing javascript, and rendering HTML.&lt;/p&gt;

&lt;p&gt;This is amazing that a very powerful and yet popular language like javascript uses queues to handle its internal control. You could learn more about it &lt;a href="https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once again as always thanks for being with me till the end.&lt;/p&gt;

&lt;p&gt;Next, I would be writing about a very popular kind of queue implementation or maybe a linked list.&lt;/p&gt;

&lt;p&gt;Well, I don’t know which to write about if you could make that choice for me I’d really appreciate you could consider sending a DM on Twitter or Instagram (join our 36k community members).&lt;/p&gt;

&lt;p&gt;Cheers! Keep Grinding❤️&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>vue</category>
      <category>angular</category>
    </item>
    <item>
      <title>Animated Eyes Follow Mouse Cursor | JavaScript Mouse move</title>
      <author>Stackfindover</author>
      <pubDate>Sat, 26 Dec 2020 16:24:19 +0000</pubDate>
      <link>https://dev.to/stackfindover/animated-eyes-follow-mouse-cursor-javascript-mouse-move-3n40</link>
      <guid>https://dev.to/stackfindover/animated-eyes-follow-mouse-cursor-javascript-mouse-move-3n40</guid>
      <description>&lt;p&gt;Hello guys in this tutorial, we are going to learn how create Animated Eyes Follow Mouse Cursor using JavaScript.&lt;/p&gt;

&lt;p&gt;First we need to create two files &lt;strong&gt;index.html&lt;/strong&gt; and style.css then we need to do code for it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#animated-eyes-step1" class="anchor"&gt;
  &lt;/a&gt;
  Animated Eyes Step:1
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Add below code inside index.html&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Face&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"ie=edge"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"face"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"eye-outer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"left-eye"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 21 21"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;circle&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"eye eye-left"&lt;/span&gt; &lt;span class="na"&gt;cx=&lt;/span&gt;&lt;span class="s"&gt;"10.5"&lt;/span&gt; &lt;span class="na"&gt;cy=&lt;/span&gt;&lt;span class="s"&gt;"10.5"&lt;/span&gt; &lt;span class="na"&gt;r=&lt;/span&gt;&lt;span class="s"&gt;"2.25"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/circle&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"top"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M2 10.5C2 10.5 6.43686 5.5 10.5 5.5C14.5631 5.5 19 10.5 19 10.5"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bottom"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M2 10.5C2 10.5 6.43686 15.5 10.5 15.5C14.5631 15.5 19 10.5 19 10.5"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;  
          &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"right-eye"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
             &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 21 21"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;circle&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"eye eye-right"&lt;/span&gt; &lt;span class="na"&gt;cx=&lt;/span&gt;&lt;span class="s"&gt;"10.5"&lt;/span&gt; &lt;span class="na"&gt;cy=&lt;/span&gt;&lt;span class="s"&gt;"10.5"&lt;/span&gt; &lt;span class="na"&gt;r=&lt;/span&gt;&lt;span class="s"&gt;"2.25"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/circle&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"top"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M2 10.5C2 10.5 6.43686 5.5 10.5 5.5C14.5631 5.5 19 10.5 19 10.5"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bottom"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M2 10.5C2 10.5 6.43686 15.5 10.5 15.5C14.5631 15.5 19 10.5 19 10.5"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
             &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mouth-outer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 21 21"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"top"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M2 10.5C2 10.5 6.43686 5.5 10.5 5.5C14.5631 5.5 19 10.5 19 10.5"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bottom"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M2 10.5C2 10.5 6.43686 15.5 10.5 15.5C14.5631 15.5 19 10.5 19 10.5"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt; 
       &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;eye1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.eye-left&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;eye2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.eye-right&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mousemove&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;evt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;evt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pageX&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;160&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;evt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pageY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;160&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;eye1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`translateY(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px) translateX(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px)`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;eye2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`translateY(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px) translateX(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px)`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;  
    &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#animated-eyes-step2" class="anchor"&gt;
  &lt;/a&gt;
  Animated Eyes Step:2
&lt;/h3&gt;

&lt;p&gt;Then we need to add code for &lt;strong&gt;style.css&lt;/strong&gt; which code i provide in below screen.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f1f2f3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;svg&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;pointer-events&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform-style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;preserve-3d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;circle&lt;/span&gt;&lt;span class="nc"&gt;.eye&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#a1a1b6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;path&lt;/span&gt;&lt;span class="nc"&gt;.top&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;path&lt;/span&gt;&lt;span class="nc"&gt;.bottom&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#a1a1b6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;stroke-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;stroke-linecap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;round&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.eye-outer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex-start&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.face&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#a1a1b6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;220px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;220px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.mouth-outer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.mouth-outer&lt;/span&gt; &lt;span class="nt"&gt;svg&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.mouth-outer&lt;/span&gt; &lt;span class="nt"&gt;path&lt;/span&gt;&lt;span class="nc"&gt;.top&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;.mouth-outer&lt;/span&gt; &lt;span class="nt"&gt;path&lt;/span&gt;&lt;span class="nc"&gt;.bottom&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;stroke-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#javascript-mouse-move-output" class="anchor"&gt;
  &lt;/a&gt;
  JavaScript Mouse move output:
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/_kzi_J8agKU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For more interesting content&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="http://blogs.stackfindover.com/" rel="dofollow"&gt;Visit for more!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Streamline your projects using Makefile</title>
      <author>Yankee Maharjan</author>
      <pubDate>Sat, 26 Dec 2020 16:17:53 +0000</pubDate>
      <link>https://dev.to/yankee/streamline-projects-using-makefile-28fe</link>
      <guid>https://dev.to/yankee/streamline-projects-using-makefile-28fe</guid>
      <description>&lt;p&gt;&lt;code&gt;make&lt;/code&gt; is one of the tools that we use heavily for streamlining tasks on our projects. It has proven to be helpful specifically for streamlining the development process, repeating mundane tasks with custom CLI like subcommands and mainly &lt;strong&gt;onboarding new team members&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;With a set of rules in &lt;strong&gt;Makefile&lt;/strong&gt;, you can get up and running in no time, keeping the process sane and saving time and effort for everyone in the team. We'll be going through the basics to some interesting stuffs we can do with Makefile.&lt;/p&gt;

&lt;p&gt;There are two pieces to this equation, one is the &lt;code&gt;make&lt;/code&gt; CLI tool and the next is the Makefile . The basics is &lt;code&gt;make&lt;/code&gt; reads the &lt;strong&gt;rules&lt;/strong&gt; from the Makefile and executes them. What I will be showing today is just a small part of what &lt;code&gt;make&lt;/code&gt; is capable of.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#writing-makefile" class="anchor"&gt;
  &lt;/a&gt;
  Writing Makefile
&lt;/h2&gt;

&lt;p&gt;If you have worked with &lt;code&gt;YAML&lt;/code&gt; files before then you will feel right at home writing Makefiles.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#anatomy-of-rules" class="anchor"&gt;
  &lt;/a&gt;
  Anatomy of Rules
&lt;/h3&gt;

&lt;p&gt;Every &lt;code&gt;Makefile&lt;/code&gt; consists of rules with the anatomy of:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight make"&gt;&lt;code&gt;&lt;span class="nl"&gt;target&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;dependencies&lt;/span&gt;
    recipe
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;target&lt;/strong&gt;: 
target can be an executable, object or just a name for an action that we want to carry out. We will be using targets purely with the placeholder name for the rule. Be mindful about the name, as it should resonate with the action we want to perform with no confusion whatsoever.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;dependencies&lt;/strong&gt;: 
Dependencies are the rules that needs to be executed, in order for the current rule to work.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;recipe&lt;/strong&gt;: 
recipe is the meat of the &lt;code&gt;Makefile&lt;/code&gt;, it is the action that we want to perform with our &lt;code&gt;target&lt;/code&gt; name. Make sure to put a &lt;code&gt;tab&lt;/code&gt; character at the start of every recipe line (just like YAML). You can also replace the &lt;code&gt;tab&lt;/code&gt; character with anything you want using the &lt;code&gt;.RECIPEPREFIX&lt;/code&gt; variable.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next we will be looking into some examples on how to make use of &lt;code&gt;Makefile&lt;/code&gt;. These examples will be based on setting up development environments.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#basic-rules" class="anchor"&gt;
  &lt;/a&gt;
  Basic Rules
&lt;/h3&gt;

&lt;p&gt;A basic rule where you just want to put some alias is straight forward. &lt;/p&gt;

&lt;p&gt;Let’s say you have a &lt;strong&gt;python&lt;/strong&gt; project and you want to hand it over to a new team member. How do you streamline the setup process. Maybe it can look something like this. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;br&gt;
&lt;code&gt;#&lt;/code&gt; is for comments. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;@&lt;/code&gt; symbol is for disabling the &lt;code&gt;echo&lt;/code&gt; for recipe. &lt;br&gt;
Test without the &lt;code&gt;@&lt;/code&gt; symbol at the beginning of the recipe.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;:=&lt;/code&gt; is the expansion operator which prevents using subsequent value with the same variable name.&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight make"&gt;&lt;code&gt;&lt;span class="nv"&gt;SHELL&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt;/bin/bash

&lt;span class="nl"&gt;.PHONY&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;format check&lt;/span&gt;

&lt;span class="nl"&gt;venv&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="c"&gt;#&lt;/span&gt;&lt;span class="nf"&gt; setup a virtual environment&lt;/span&gt;
    &lt;span class="p"&gt;@&lt;/span&gt;python3 &lt;span class="nt"&gt;-m&lt;/span&gt; venv venv

&lt;span class="nl"&gt;setup&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="c"&gt;#&lt;/span&gt;&lt;span class="nf"&gt; install dev dependencies&lt;/span&gt;
    &lt;span class="p"&gt;@&lt;/span&gt;pip &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-e&lt;/span&gt; .[dev]
    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;Installing pre-commit hook..."&lt;/span&gt;
    &lt;span class="p"&gt;@&lt;/span&gt;pre-commit &lt;span class="nb"&gt;install&lt;/span&gt;

&lt;span class="nl"&gt;format&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="c"&gt;#&lt;/span&gt;&lt;span class="nf"&gt; format code using black&lt;/span&gt;
    &lt;span class="p"&gt;@&lt;/span&gt;black .

&lt;span class="nl"&gt;check&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="c"&gt;#&lt;/span&gt;&lt;span class="nf"&gt; check for formatting using black&lt;/span&gt;
    &lt;span class="p"&gt;@&lt;/span&gt;black &lt;span class="nt"&gt;--check&lt;/span&gt; &lt;span class="nt"&gt;--diff&lt;/span&gt; &lt;span class="nt"&gt;-v&lt;/span&gt; .

&lt;span class="nl"&gt;test&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="c"&gt;#&lt;/span&gt;&lt;span class="nf"&gt; run pytest&lt;/span&gt;
    &lt;span class="p"&gt;@&lt;/span&gt;pytest &lt;span class="nt"&gt;-vvv&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;You can do something similar with your existing project.&lt;/p&gt;

&lt;p&gt;Now to get up and running, all you have to do is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;make venv 

&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;.&lt;/span&gt; venv/bin/activate 

&lt;span class="nv"&gt;$ &lt;/span&gt;make setup

&lt;span class="nv"&gt;$ &lt;/span&gt;make format 

&lt;span class="c"&gt;# and so on&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#rules-with-dependencies" class="anchor"&gt;
  &lt;/a&gt;
  Rules with Dependencies
&lt;/h3&gt;

&lt;p&gt;Taking the reference from the example above, suppose we want to print out the output of &lt;code&gt;check&lt;/code&gt; target every time we run the &lt;code&gt;format&lt;/code&gt; target. So how do we create that dependency? It’s plain simple, we just have to update the &lt;code&gt;format&lt;/code&gt; target to look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight make"&gt;&lt;code&gt;&lt;span class="nl"&gt;format&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;check &lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;&lt;span class="nf"&gt; run the formatter on files.&lt;/span&gt;
 &lt;span class="err"&gt;@black&lt;/span&gt; &lt;span class="err"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;We have added the dependency of &lt;code&gt;check&lt;/code&gt; to the right of the target, just like showcased on the anatomy &lt;strong&gt;Anatomy of Rules&lt;/strong&gt; section.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#variables" class="anchor"&gt;
  &lt;/a&gt;
  Variables
&lt;/h2&gt;

&lt;p&gt;We can also define variables if we have some piece of command for repeated use. For this example we will be taking the reference of the &lt;code&gt;Django&lt;/code&gt; management command. &lt;/p&gt;

&lt;p&gt;Variables are normally written with all caps and uses &lt;code&gt;:=&lt;/code&gt; to assign variable name to a value. Variables can be accessed using either &lt;code&gt;$()&lt;/code&gt; or &lt;code&gt;${}&lt;/code&gt; syntax.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight make"&gt;&lt;code&gt;&lt;span class="nv"&gt;DJANGO_MANAGE&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; python manage.py
&lt;span class="nl"&gt;run&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; 
 &lt;span class="err"&gt;@${DJANGO_MANAGE}&lt;/span&gt; &lt;span class="err"&gt;runserver&lt;/span&gt;

&lt;span class="nl"&gt;show&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; 
 &lt;span class="err"&gt;@${DJANGO_MANAGE}&lt;/span&gt; &lt;span class="err"&gt;showmigrations&lt;/span&gt;

&lt;span class="nl"&gt;migrate&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; 
 &lt;span class="err"&gt;@${DJANGO_MANAGE}&lt;/span&gt; &lt;span class="err"&gt;migrate&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Also your &lt;strong&gt;SHELL environment variables&lt;/strong&gt; are converted in to Makefile environment variables, so you can directly make use of them while creating your rules. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;In our shell we can export an environment variable called greeting.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;INFO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Run make help to show all the available rules."&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;And now in the Makefile we can refer to it as any variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight make"&gt;&lt;code&gt;&lt;span class="nl"&gt;info&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="c"&gt;#&lt;/span&gt;&lt;span class="nf"&gt; show project info&lt;/span&gt;
    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;${INFO}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#default-target" class="anchor"&gt;
  &lt;/a&gt;
  Default target
&lt;/h2&gt;

&lt;p&gt;If you just run &lt;code&gt;make&lt;/code&gt; on your command line nothing is going to happen. But we can change that by using the &lt;code&gt;.DEFAULTGOAL&lt;/code&gt; special variable and assigning the target we want to run by default.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight make"&gt;&lt;code&gt;&lt;span class="nv"&gt;.DEFAULT_GOAL&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; run
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now, next time you run &lt;code&gt;make&lt;/code&gt; it is going to run the &lt;code&gt;Django&lt;/code&gt; server by default.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#self-documenting" class="anchor"&gt;
  &lt;/a&gt;
  Self documenting
&lt;/h2&gt;

&lt;p&gt;Now we have bunch of targets on our &lt;code&gt;Makefile&lt;/code&gt; and we also called this combo as a custom mini CLI app. Wouldn’t it be great, if we could have a help command similar to a real CLI app? Say no more, thanks to the &lt;a href="https://medium.com/better-programming/how-to-create-a-self-documenting-makefile-533ebf8f82e2"&gt;blog&lt;/a&gt; from &lt;a href="https://medium.com/u/d838624534b3"&gt;Victoria Drake&lt;/a&gt; we have the script to do so. &lt;/p&gt;

&lt;p&gt;Just create a &lt;code&gt;help&lt;/code&gt; target and assign it as a &lt;code&gt;.DEFAULT_GOAL&lt;/code&gt;. With this, all the comments we have been writing on our target gets converted into a nice help message.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight make"&gt;&lt;code&gt;&lt;span class="nv"&gt;.DEFAULT_GOAL&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt; 
&lt;span class="nl"&gt;help&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="c"&gt;#&lt;/span&gt;&lt;span class="nf"&gt; Show this help&lt;/span&gt;
 &lt;span class="nl"&gt;@egrep -h '\s#\s' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = "&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nf"&gt;.*?&lt;/span&gt;&lt;span class="c"&gt;#&lt;/span&gt;&lt;span class="nf"&gt; "}; {printf "&lt;/span&gt;\0&lt;span class="nf"&gt;33[36m%-20s&lt;/span&gt;\0&lt;span class="nf"&gt;33[0m %s&lt;/span&gt;\n&lt;span class="nf"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nf"&gt; $$1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nf"&gt; $$2}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#include-other-makefiles" class="anchor"&gt;
  &lt;/a&gt;
  Include other Makefiles
&lt;/h2&gt;

&lt;p&gt;We can separate out Makefiles based on the tasks they perform and &lt;code&gt;include&lt;/code&gt; them into the main &lt;code&gt;Makefile&lt;/code&gt;. We usually have separate &lt;code&gt;Makefile&lt;/code&gt; managed for &lt;strong&gt;environment variables&lt;/strong&gt;,  &lt;strong&gt;Docker&lt;/strong&gt; and &lt;strong&gt;Kubernetes&lt;/strong&gt;. This offloads all the tasks from project set up to Deployment to the Makefile.&lt;/p&gt;

&lt;p&gt;I will show a brief example of each of the file just to give an example: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: Since make runs each recipe on a new instance of the shell, we can lazy evaluate the variables using &lt;code&gt;?=&lt;/code&gt; meaning, they are initialized only when referenced for a single shell instance.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Makefile&lt;/strong&gt;&lt;br&gt;
Root makefile composed of other Makefiles.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight make"&gt;&lt;code&gt;&lt;span class="nv"&gt;SHELL&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt;/bin/bash
&lt;span class="nv"&gt;APP_ROOT&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nv"&gt;$(PWD)&lt;/span&gt;
&lt;span class="nv"&gt;TMP_PATH&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nv"&gt;$(APP_ROOT)&lt;/span&gt;/.tmp
&lt;span class="nv"&gt;VENV_PATH&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nv"&gt;$(APP_ROOT)&lt;/span&gt;/.venv

&lt;span class="k"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;ENVIRONMENT_OVERRIDE_PATH&lt;/span&gt; &lt;span class="o"&gt;?=&lt;/span&gt; &lt;span class="nv"&gt;$(APP_ROOT)&lt;/span&gt;/env/Makefile.override

&lt;span class="k"&gt;-include&lt;/span&gt;&lt;span class="sx"&gt; $(ENVIRONMENT_OVERRIDE_PATH)&lt;/span&gt;
&lt;span class="k"&gt;include&lt;/span&gt;&lt;span class="sx"&gt; $(APP_ROOT)/targets/Makefile.docker&lt;/span&gt;
&lt;span class="k"&gt;include&lt;/span&gt;&lt;span class="sx"&gt; $(APP_ROOT)/targets/Makefile.k8s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Environment Variables&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Makefile.override&lt;/em&gt;&lt;br&gt;
Makefile containing just the essential environment variables.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight make"&gt;&lt;code&gt;&lt;span class="nv"&gt;STAGE&lt;/span&gt; &lt;span class="o"&gt;?=&lt;/span&gt; &amp;lt;stage&amp;gt;
&lt;span class="nv"&gt;SERVICE_NAME&lt;/span&gt; &lt;span class="o"&gt;?=&lt;/span&gt; &amp;lt;service-name&amp;gt;
&lt;span class="nv"&gt;AKS_RESOURCE_GROUP&lt;/span&gt; &lt;span class="o"&gt;?=&lt;/span&gt; &amp;lt;resource-group&amp;gt;
&lt;span class="nv"&gt;AKS_CLUSTER_NAME&lt;/span&gt; &lt;span class="o"&gt;?=&lt;/span&gt; &amp;lt;cluster-name&amp;gt;
&lt;span class="nv"&gt;REGISTRY_URL&lt;/span&gt; &lt;span class="o"&gt;?=&lt;/span&gt; &amp;lt;registry-url&amp;gt;
&lt;span class="nv"&gt;AZ_ACR_REPO_NAME&lt;/span&gt; &lt;span class="o"&gt;?=&lt;/span&gt; &amp;lt;repo-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Makefile.docker&lt;/em&gt;&lt;br&gt;
Makefile containing docker rules.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight make"&gt;&lt;code&gt;&lt;span class="k"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;GIT_COMMIT&lt;/span&gt; &lt;span class="o"&gt;?=&lt;/span&gt; &lt;span class="nf"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;shell&lt;/span&gt; &lt;span class="nb"&gt;cut&lt;/span&gt; &lt;span class="nt"&gt;-c-8&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;git rev-parse HEAD&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nf"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;BRANCH&lt;/span&gt; &lt;span class="o"&gt;?=&lt;/span&gt; &lt;span class="nf"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;shell&lt;/span&gt; git rev-parse &lt;span class="nt"&gt;--abbrev-ref&lt;/span&gt; HEAD&lt;span class="nf"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;DOCKER_BUILD_FLAGS&lt;/span&gt; &lt;span class="o"&gt;?=&lt;/span&gt; &lt;span class="nt"&gt;--no-cache&lt;/span&gt;
&lt;span class="k"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;DOCKER_BUILD_PATH&lt;/span&gt; &lt;span class="o"&gt;?=&lt;/span&gt; &lt;span class="nv"&gt;$(APP_ROOT)&lt;/span&gt;
&lt;span class="k"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;DOCKER_FILE&lt;/span&gt; &lt;span class="o"&gt;?=&lt;/span&gt; &lt;span class="nv"&gt;$(APP_ROOT)&lt;/span&gt;/Dockerfile

&lt;span class="k"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;TARGET_IMAGE&lt;/span&gt; &lt;span class="o"&gt;?=&lt;/span&gt; &lt;span class="nv"&gt;$(REGISTRY_URL)&lt;/span&gt;/&lt;span class="nv"&gt;$(AZ_ACR_REPO_NAME)&lt;/span&gt;/&lt;span class="nv"&gt;$(SERVICE_NAME)&lt;/span&gt;
&lt;span class="k"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;TARGET_IMAGE_LATEST&lt;/span&gt; &lt;span class="o"&gt;?=&lt;/span&gt; &lt;span class="nv"&gt;$(TARGET_IMAGE)&lt;/span&gt;:&lt;span class="nv"&gt;$(BRANCH)&lt;/span&gt;-&lt;span class="nv"&gt;$(GIT_COMMIT)&lt;/span&gt;

&lt;span class="nl"&gt;acr-docker-login&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    az acr login &lt;span class="nt"&gt;--name&lt;/span&gt; &lt;span class="nv"&gt;$(AZ_ACR_REPO_NAME)&lt;/span&gt;

&lt;span class="nl"&gt;docker-build&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    docker build &lt;span class="nv"&gt;$(DOCKER_BUILD_FLAGS)&lt;/span&gt; &lt;span class="nt"&gt;-t&lt;/span&gt; &lt;span class="nv"&gt;$(SERVICE_NAME)&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt; &lt;span class="nv"&gt;$(DOCKER_FILE)&lt;/span&gt; &lt;span class="nv"&gt;$(DOCKER_BUILD_PATH)&lt;/span&gt;

&lt;span class="nl"&gt;docker-tag&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    docker tag &lt;span class="nv"&gt;$(SERVICE_NAME)&lt;/span&gt; &lt;span class="nv"&gt;$(TARGET_IMAGE_LATEST)&lt;/span&gt;

&lt;span class="nl"&gt;docker-push&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;acr-docker-login&lt;/span&gt;
    docker push &lt;span class="nv"&gt;$(TARGET_IMAGE_LATEST)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Makefile.k8s&lt;/em&gt;&lt;br&gt;
Makefile containing rules for Kubernetes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight make"&gt;&lt;code&gt;&lt;span class="k"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;OVERLAY_PATH&lt;/span&gt; &lt;span class="o"&gt;?=&lt;/span&gt; &lt;span class="nv"&gt;$(APP_ROOT)&lt;/span&gt;/k8s/overlays/&lt;span class="nv"&gt;$(STAGE)&lt;/span&gt;/

&lt;span class="err"&gt;define&lt;/span&gt; &lt;span class="err"&gt;kustomize-image-edit&lt;/span&gt;
    &lt;span class="err"&gt;cd&lt;/span&gt; &lt;span class="err"&gt;$(OVERLAY_PATH)&lt;/span&gt; &lt;span class="err"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="err"&gt;kustomize&lt;/span&gt; &lt;span class="err"&gt;edit&lt;/span&gt; &lt;span class="err"&gt;set&lt;/span&gt; &lt;span class="err"&gt;image&lt;/span&gt; &lt;span class="nv"&gt;api&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$(1)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$(APP_ROOT)&lt;/span&gt;
&lt;span class="err"&gt;endef&lt;/span&gt;

&lt;span class="nl"&gt;kubectl-apply&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    kustomize build &lt;span class="nv"&gt;$(OVERLAY_PATH)&lt;/span&gt;
    kustomize build &lt;span class="nv"&gt;$(OVERLAY_PATH)&lt;/span&gt; | kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; -

&lt;span class="nl"&gt;update-kubeconfig&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    az aks get-credentials &lt;span class="nt"&gt;--resource-group&lt;/span&gt; &lt;span class="nv"&gt;$(AKS_RESOURCE_GROUP)&lt;/span&gt; &lt;span class="nt"&gt;--name&lt;/span&gt; &lt;span class="nv"&gt;$(AKS_CLUSTER_NAME)&lt;/span&gt;

&lt;span class="nl"&gt;aks-deploy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;update-kubeconfig&lt;/span&gt;
    &lt;span class="nf"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;call&lt;/span&gt; kustomize-image-edit,&lt;span class="nv"&gt;$(TARGET_IMAGE_LATEST)&lt;/span&gt;&lt;span class="nf"&gt;)&lt;/span&gt;
    make kubectl-apply

&lt;span class="nl"&gt;aks-delete&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;update-kubeconfig&lt;/span&gt;
    kubectl delete namespace &lt;span class="nv"&gt;$(STAGE)&lt;/span&gt;&lt;span class="nt"&gt;-api&lt;/span&gt;

&lt;span class="nl"&gt;kustomize-edit&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="nf"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;call&lt;/span&gt; kustomize-image-edit,&lt;span class="nv"&gt;$(TARGET_IMAGE_LATEST)&lt;/span&gt;&lt;span class="nf"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now we have orchestrated all these Makefiles, it is easier to keep track of all the rules and makes working with Makefiles sane, if you are doing a lot with it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;So with the use of &lt;code&gt;Makefile&lt;/code&gt; we can streamline a lot of redundant tasks in our projects without having to remember overwhelmingly long and varying commands. &lt;/p&gt;

&lt;p&gt;It increases the productivity of the whole team; with easier project setup and redundant tasks outsourced to the &lt;code&gt;Makefile&lt;/code&gt; with intuitive target names, leaving the devs to focus on more serious tasks at hand.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>cli</category>
    </item>
    <item>
      <title>Search Bar with Autocomplete Search Suggestions in JavaScript</title>
      <author>CodingNepal</author>
      <pubDate>Sat, 26 Dec 2020 16:03:07 +0000</pubDate>
      <link>https://dev.to/codingnepal/search-bar-with-autocomplete-search-suggestions-in-javascript-32dn</link>
      <guid>https://dev.to/codingnepal/search-bar-with-autocomplete-search-suggestions-in-javascript-32dn</guid>
      <description>&lt;p&gt;Hello readers, Today in this blog you'll learn how to create a Search Bar with Auto-complete Search Suggestions using HTML CSS &amp;amp; JavaScript. Earlier I've shared a blog on &lt;a href="https://www.codingnepalweb.com/2020/09/animated-search-box-using-html-css.html"&gt;how to create an Animated Search Bar using only HTML &amp;amp; CSS&lt;/a&gt; and now it's time to create Autocomplete Textbox or Searchbox.&lt;/p&gt;

&lt;p&gt;A search box is a graphical UI element present in many websites. It works as the field for a query input or searches term from the user to search and retrieve related information from the database. Autocomplete is a pattern or feature used to display query suggestions and predicts the rest of a word a user is typing.&lt;/p&gt;

&lt;p&gt;In this program [Search Bar with Auto-complete Search Suggestions], on the webpage, there is a search bar and when you type something, there is shown a autocomplete box that suggests several predictions of how your query could be completed means there are shown several suggestions related your query. &lt;/p&gt;

&lt;p&gt;You can copy the codes from the given boxes or download the code files from the given link but I recommend you to download the source code files instead of copying codes. &lt;a href="https://www.codingnepalweb.com/2020/10/search-bar-with-autocomplete-search-suggestions.html"&gt;Click here to download code files.&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#you-might-like-this" class="anchor"&gt;
  &lt;/a&gt;
  You might like this:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://www.codingnepalweb.com/2020/09/animated-search-box-using-html-css.html"&gt;Animated Search Bar Design&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.codingnepalweb.com/2020/08/full-screen-search-bar-animation.html"&gt;Fullscreen Search Bar Animation&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.codingnepalweb.com/2020/12/todo-list-app-using-html-css-javascript.html"&gt;Todo List App with Local host&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.codingnepalweb.com/2020/12/pagination-ui-design-using-html-css-javascript.html"&gt;Working Pagination UI Design&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#html-code" class="anchor"&gt;
  &lt;/a&gt;
  HTML CODE:
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;!-- Created By CodingNepal - www.codingnepalweb.com --&amp;gt;
&amp;lt;html lang="en" dir="ltr"&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset="utf-8"&amp;gt;
    &amp;lt;!-- &amp;lt;title&amp;gt;Autocomplete Search Box | CodingNepal&amp;lt;/title&amp;gt; --&amp;gt;
    &amp;lt;link rel="stylesheet" href="style.css"&amp;gt;
   &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
    &amp;lt;script src="https://kit.fontawesome.com/a076d05399.js"&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;div class="wrapper"&amp;gt;
      &amp;lt;div class="search-input"&amp;gt;
        &amp;lt;a href="" target="_blank" hidden&amp;gt;&amp;lt;/a&amp;gt;
        &amp;lt;input type="text" placeholder="Type to search.."&amp;gt;
        &amp;lt;div class="autocom-box"&amp;gt;
          &amp;lt;!-- here list are inserted from javascript --&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class="icon"&amp;gt;&amp;lt;i class="fas fa-search"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;!-- &amp;lt;script src="js/suggestions.js"&amp;gt;&amp;lt;/script&amp;gt; --&amp;gt;
    &amp;lt;!-- &amp;lt;script src="js/script.js"&amp;gt;&amp;lt;/script&amp;gt; --&amp;gt;

  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#css-code" class="anchor"&gt;
  &lt;/a&gt;
  CSS CODE:
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700&amp;amp;display=swap');
*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Poppins', sans-serif;
}

body{
  background: #644bff;
  padding: 0 20px;
}

::selection{
  color: #fff;
  background: #664AFF;
}

.wrapper{
  max-width: 450px;
  margin: 150px auto;
}

.wrapper .search-input{
  background: #fff;
  width: 100%;
  border-radius: 5px;
  position: relative;
  box-shadow: 0px 1px 5px 3px rgba(0,0,0,0.12);
}

.search-input input{
  height: 55px;
  width: 100%;
  outline: none;
  border: none;
  border-radius: 5px;
  padding: 0 60px 0 20px;
  font-size: 18px;
  box-shadow: 0px 1px 5px rgba(0,0,0,0.1);
}

.search-input.active input{
  border-radius: 5px 5px 0 0;
}

.search-input .autocom-box{
  padding: 0;
  opacity: 0;
  pointer-events: none;
  max-height: 280px;
  overflow-y: auto;
}

.search-input.active .autocom-box{
  padding: 10px 8px;
  opacity: 1;
  pointer-events: auto;
}

.autocom-box li{
  list-style: none;
  padding: 8px 12px;
  display: none;
  width: 100%;
  cursor: default;
  border-radius: 3px;
}

.search-input.active .autocom-box li{
  display: block;
}
.autocom-box li:hover{
  background: #efefef;
}

.search-input .icon{
  position: absolute;
  right: 0px;
  top: 0px;
  height: 55px;
  width: 55px;
  text-align: center;
  line-height: 55px;
  font-size: 20px;
  color: #644bff;
  cursor: pointer;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;For JavaScript codes, please go to this link - &lt;a href="https://www.codingnepalweb.com/2020/10/search-bar-with-autocomplete-search-suggestions.html"&gt;https://www.codingnepalweb.com/2020/10/search-bar-with-autocomplete-search-suggestions.html&lt;/a&gt; &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>searchbar</category>
      <category>searchbox</category>
      <category>searchsuggestion</category>
    </item>
    <item>
      <title>Learn to integrate splash screen to your react native app.</title>
      <author>Gautham Vijayan</author>
      <pubDate>Sat, 26 Dec 2020 15:31:01 +0000</pubDate>
      <link>https://dev.to/gautham495/learn-to-integrate-splash-screen-to-your-react-native-app-fgf</link>
      <guid>https://dev.to/gautham495/learn-to-integrate-splash-screen-to-your-react-native-app-fgf</guid>
      <description>&lt;p&gt;In this post I will be discussing on how you can integrate Splash Screen to your react native app.&lt;/p&gt;

&lt;p&gt;Off late I have been working on my first react native app about budgeting which uses firebase as its backend. I decided to integrate Splash Screen to my app but I got ton of errors but after lot of googling and scavenging through stack overflow I finally got it.&lt;/p&gt;

&lt;p&gt;My app is the mobile version of this website &lt;a href="https://gautham-neo-budget.netlify.app/"&gt;Neo Budget&lt;/a&gt; and I have made it production ready which you can view below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_JPqbz6d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/7i5bqallth583timqxyk.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_JPqbz6d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/7i5bqallth583timqxyk.gif" alt="Screen+Recording+2020-12-26+at+07.53.42.11+PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now lets learn the steps to integrate splash screen to our app.&lt;/p&gt;

&lt;p&gt;(This post covers splash screen for android only as I do not have mac or an iPhone to do iOS development) &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-1" class="anchor"&gt;
  &lt;/a&gt;
  Step 1:
&lt;/h4&gt;

&lt;p&gt;Hop on to your code editor and go to the &lt;code&gt;android folder&lt;/code&gt; as we will be doing all of the things there.&lt;/p&gt;

&lt;p&gt;Now go to the java folder as below and create a new file named &lt;code&gt;SplashActivity.java&lt;/code&gt;. (Remember all the file names discussed in this post must be used as the same in your project or errors will pop up.)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j-h6FBDy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/t5qhvv7qdbpo5ev26bq3.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j-h6FBDy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/t5qhvv7qdbpo5ev26bq3.gif" alt="Screen+Recording+2020-12-26+at+07.51.37.79+PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Paste the code below in &lt;code&gt;SplashActivity.java&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kr"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;notifier&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// make sure this is your package name&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Intent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Bundle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;androidx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appcompat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;AppCompatActivity&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;SplashActivity&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;AppCompatActivity&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Override&lt;/span&gt;
    &lt;span class="kr"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nx"&gt;onCreate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Bundle&lt;/span&gt; &lt;span class="nx"&gt;savedInstanceState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onCreate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;savedInstanceState&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="nx"&gt;Intent&lt;/span&gt; &lt;span class="nx"&gt;intent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Intent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;MainActivity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;startActivity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;intent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;finish&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now our work here is done. On to the Next Step.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-2" class="anchor"&gt;
  &lt;/a&gt;
  Step 2:
&lt;/h4&gt;

&lt;p&gt;Now go to &lt;code&gt;AndroidManifest.xml&lt;/code&gt; and modify your code such that it includes the code specific to splash screen.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;manifest&lt;/span&gt; &lt;span class="nx"&gt;xmlns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://schemas.android.com/apk/res/android&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="kr"&gt;package&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;com.notifier&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;uses&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;permission&lt;/span&gt; &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;android.permission.INTERNET&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;uses&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;permission&lt;/span&gt; &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;android.permission.VIBRATE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;uses&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;permission&lt;/span&gt; &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;android.permission.RECEIVE_BOOT_COMPLETED&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;uses&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;permission&lt;/span&gt; &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;android.permission.READ_EXTERNAL_STORAGE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;uses&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;permission&lt;/span&gt; &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;android.permission.WRITE_EXTERNAL_STORAGE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;application&lt;/span&gt;
      &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.MainApplication&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@string/app_name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@mipmap/ic_launcher&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;roundIcon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@mipmap/ic_launcher_round&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;allowBackup&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;false&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@style/AppTheme&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;      

      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;activity&lt;/span&gt;
        &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.MainActivity&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@string/app_name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;configChanges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;keyboard|keyboardHidden|orientation|screenSize|uiMode&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;launchMode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;singleTask&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;windowSoftInputMode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;adjustResize&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;exported&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;true&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;intent&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt; &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;android.intent.action.MAIN&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt; &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;android.intent.category.LAUNCHER&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt; &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;android.intent.action.DOWNLOAD_COMPLETE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;  
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/intent-filter&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/activity&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="nx"&gt;Code&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;Splash&lt;/span&gt; &lt;span class="nx"&gt;screen&lt;/span&gt; &lt;span class="nx"&gt;starts&lt;/span&gt; &lt;span class="nx"&gt;here&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;

 &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;activity&lt;/span&gt;
    &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.SplashActivity&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@style/SplashTheme&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@string/app_name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;intent&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt; &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;android.intent.action.MAIN&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt; &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;android.intent.category.LAUNCHER&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/intent-filter&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/activity&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
 &lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="nx"&gt;Code&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;Splash&lt;/span&gt; &lt;span class="nx"&gt;screen&lt;/span&gt; &lt;span class="nx"&gt;endshere&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;

 &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;activity&lt;/span&gt; &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;com.facebook.react.devsupport.DevSettingsActivity&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
 &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/application&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/manifest&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;You have to note down the &lt;code&gt;android:exported="true"&lt;/code&gt;&lt;br&gt;
in the second activity field and include it in your code as it will not be present at first.&lt;/p&gt;

&lt;p&gt;After doing this lets create some files in res folder.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#step-3" class="anchor"&gt;
  &lt;/a&gt;
  Step 3:
&lt;/h4&gt;

&lt;p&gt;Now hop on to res folder which is in &lt;code&gt;Main--&amp;gt;res&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Here we are going to create two new folders and add some files in it.&lt;/p&gt;

&lt;p&gt;Ok lets create two folders called layout and drawable(Names must be same).&lt;/p&gt;

&lt;p&gt;In drawable folder create a file called &lt;code&gt;background_splash.xml&lt;/code&gt; and add the below code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="nx"&gt;xml&lt;/span&gt; &lt;span class="nx"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;utf-8&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;layer&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt; &lt;span class="nx"&gt;xmlns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://schemas.android.com/apk/res/android&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;
        &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;drawable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@color/blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;
        &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;200dp&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;200dp&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;drawable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@mipmap/ic_launcher&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;gravity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/layer-list&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now in layout folder create a file called &lt;code&gt; and paste the code below.&lt;br&gt;
&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="nx"&gt;xml&lt;/span&gt; &lt;span class="nx"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;utf-8&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;LinearLayout&lt;/span&gt; &lt;span class="nx"&gt;xmlns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://schemas.android.com/apk/res/android&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;orientation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vertical&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;layout_width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;match_parent&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;layout_height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;match_parent&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@color/blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="nx"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;gravity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/LinearLayout&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Ok after doing all these steps, Lets hop on to the next one.&lt;/p&gt;

&lt;p&gt;Step 4:&lt;/p&gt;

&lt;p&gt;In the same &lt;code&gt;res folder&lt;/code&gt; create a folder called &lt;code&gt;values&lt;/code&gt; and make three files.&lt;/p&gt;

&lt;p&gt;1.colors.xml&lt;br&gt;
2.strings.xml&lt;br&gt;
3.styles.xml&lt;/p&gt;

&lt;p&gt;Now we are going to give the color of our splash screen's background in colors.xml.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="nx"&gt;xml&lt;/span&gt; &lt;span class="nx"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;utf-8&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;resources&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;ffffff&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/color&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/resources&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now in strings.xml we are going to give the name of our app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;resources&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;app_name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;notifier&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/string&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/resources&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;And in styles.xml we will be using both of the above concepts we had discussed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;resources&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="nx"&gt;Base&lt;/span&gt; &lt;span class="nx"&gt;application&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;AppTheme&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Theme.AppCompat.Light.NoActionBar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="nx"&gt;Customize&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt; &lt;span class="nx"&gt;here&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;android:textColor&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;000000&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/item&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SplashTheme&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Theme.AppCompat.Light.NoActionBar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;android:windowBackground&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;drawable&lt;/span&gt;&lt;span class="sr"&gt;/background_splash&amp;lt;/i&lt;/span&gt;&lt;span class="nx"&gt;tem&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;android:statusBarColor&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;color&lt;/span&gt;&lt;span class="sr"&gt;/blue&amp;lt;/i&lt;/span&gt;&lt;span class="nx"&gt;tem&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/resources&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#step5" class="anchor"&gt;
  &lt;/a&gt;
  Step:5
&lt;/h4&gt;

&lt;p&gt;Now the last step is to actually include the splash screen in our react-native app.&lt;/p&gt;

&lt;p&gt;We need to install &lt;code&gt;react-native-splash-screen&lt;/code&gt; with npm in our root folder and then include some code in our App.js.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;native&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;splash&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;screen&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now in App.js, we will be using this package to help us close our Splash Screen when the app loads for the first time. If we do not include this line in our code, our app will be stuck in the splash screen.&lt;/p&gt;

&lt;p&gt;So in App.js we will be using &lt;code&gt;useEffect&lt;/code&gt; to achieve this one.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;View&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-native&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;SplashScreen&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-native-splash-screen&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;SplashScreen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;View&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Neo&lt;/span&gt; &lt;span class="nx"&gt;Budget&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/View&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Congratulations you have now included splash screen into your app with your logo as well!!&lt;/p&gt;

&lt;p&gt;This post was done at ease using this medium article about &lt;a href="https://medium.com/handlebar-labs/how-to-add-a-splash-screen-to-a-react-native-app-ios-and-android-30a3cec835ae"&gt;Splash Screens&lt;/a&gt;. It discusses about iOS development as well.&lt;/p&gt;

&lt;p&gt;I made this post now because, I encountered some bugs and errors  from that article as it was published 2 years ago.&lt;/p&gt;

&lt;p&gt;The content from this post works absolutely fine like below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GIzztmGi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xaz8zzh9zqksv1gbvaam.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GIzztmGi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xaz8zzh9zqksv1gbvaam.gif" alt="chrome-capture (42)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I made my full stack mobile app about budget using the above mentioned and will be releasing it on or before new year of 2021 and I was working on it for the past 2 weeks.&lt;/p&gt;

&lt;p&gt;I will be grateful if you guys use it and share your feedback here in dev or in google playstore reviews as well.&lt;/p&gt;

&lt;p&gt;Next Post I will discuss about having stack navigator with Bottom Tab Navigator like my app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GW9MNepD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/qpvv1vdjfkmpeqijrqg6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GW9MNepD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/qpvv1vdjfkmpeqijrqg6.png" alt="Films+&amp;amp;+TV+2020-12-26+at+8.58.21+PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading" class="anchor"&gt;
  &lt;/a&gt;
  Thank you for reading!!
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt; &lt;u&gt;Check out my portfolio: &lt;/u&gt; &lt;a href="https://gautham-portfolio.netlify.app/"&gt;Gautham's portfolio&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt; &lt;u&gt; Check out my blog: &lt;/u&gt;&lt;a href="https://coding-magnified.tech"&gt;coding-magnified.tech&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt; &lt;u&gt; Check React Project about budgeting: &lt;/u&gt;&lt;a href="https://gautham-neo-budget.netlify.app/"&gt;neo-budget&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-other-articles" class="anchor"&gt;
  &lt;/a&gt;
  &lt;u&gt;My Other Articles: &lt;/u&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/gautham495/universal-css-properties-everyone-must-use-4kie"&gt;Universal CSS properties everyone must know&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/gautham495/creating-a-new-react-app-with-create-react-app-4e9m"&gt;Create-react-app&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/gautham495/basic-git-knowledge-for-beginners-m4p"&gt;Git for beginners&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/gautham495/changing-headers-in-react-with-react-helmet-d0d"&gt;Change headers in react with react-helmet&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/gautham495/know-how-to-apply-box-shadow-on-all-four-sides-43pn"&gt;Know How to apply box-shadow on all four sides.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/gautham495/simple-css-selectors-for-beginners-2i44"&gt;Simple CSS Selectors&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/gautham495/css-pseudo-elements-for-beginners-53ob"&gt;CSS Pseudo Elements&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Don't be scared, get started with Open Source as soon as possible.</title>
      <author>Manvendra Rajpoot</author>
      <pubDate>Sat, 26 Dec 2020 15:26:38 +0000</pubDate>
      <link>https://dev.to/manvendrajpoot/don-t-be-scared-get-started-with-open-source-as-soon-as-possible-1g7b</link>
      <guid>https://dev.to/manvendrajpoot/don-t-be-scared-get-started-with-open-source-as-soon-as-possible-1g7b</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0752q16l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/qghwus8z7ob2by03xh6w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0752q16l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/qghwus8z7ob2by03xh6w.png" alt="OSS"&gt;&lt;/a&gt;&lt;br&gt;
I will be sharing information about Open Source  how you can and get started. &lt;/p&gt;

&lt;p&gt;Before we jump into the article here is something about me:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;a) Script Winter of Code 2020 Mentee.
b) Devscript Winter of Doing 2020 Mentee.
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;What is open source?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;OS denoting software for which the original source code is made freely available and may be redistributed and modified.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In my view,&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Open Source Software can be anything from an browser extension to an ML model that is developed by a bunch of amazing geeks who wants to share their work with the world and make developed application open to all to use and suggest changes to it.&lt;/p&gt;

&lt;p&gt;An OS project can be created and maintained by anyone with a passion to build amazing technology. Even you!!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-open-source-projects-to-know-amp-love" class="anchor"&gt;
  &lt;/a&gt;
  7 open source projects to know &amp;amp; love
&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://cassandra.apache.org/"&gt;Apache Cassandra&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.tensorflow.org/"&gt;TensorFlow&lt;/a&gt;&lt;br&gt;
&lt;a href="https://renovate.whitesourcesoftware.com/"&gt;Renovate&lt;/a&gt;&lt;br&gt;
&lt;a href="https://kubernetes.io/"&gt;Kubernetes&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.ansible.com/"&gt;Ansibl&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.geany.org/"&gt;Geany&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Open source helps us use and enjoy top quality tools for free of cost, are you pumped up?&lt;/p&gt;

&lt;p&gt;Let's see how you can jump into opensource and build tools and language you will be using in your day to day life to make easy understanding how to get started.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
&lt;strong&gt;Open Source Contributor as a Student&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let’s first see why you should contribute to opensource?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Showcase Platform&lt;/em&gt; : It provides a platform to showcase your technical skills as well as content writting skills.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Unlimited Learning&lt;/em&gt; : Instead of learning tools and languages you can start applying knowledge to build projects and take it a next step higher.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Professional Skills&lt;/em&gt; : When you work, interact and learn with a group of developers under guidance of mentor it end up learning many important soft skills like professional communication, networking, teamwork, time management. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Tons of Opportunities&lt;/em&gt; : Opensource Summits where you can talk and interact with top tech companies and developers.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Alternative for Pocket Money&lt;/em&gt; : Our primary intension for getting into open source must be to learning and developing yourself. If you are a valuable contributor on a project with real clients you can help solve issues or train their employees and bill them for your time. There are so many open source fellowship program that provide stipned.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Strong Resume&lt;/em&gt; : Well Contributing to open-source projects would be a great way to show your mastery of a particular technology an learn new tech. This ultimately step-by-step builds your &lt;strong&gt;resume&lt;/strong&gt; strong.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Pre-requisites :&lt;em&gt;&lt;/em&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Don't freak Out! You don't have to know much to get started but having a knowledge of at least &lt;em&gt;one programming language, Git &amp;amp; Github&lt;em&gt; are fine.&lt;/em&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A common mistake a lot of newcomers do is that they aim for big projects that often have very little issues for a newcomer to implement or no mentor support and are highly competitive. One guidance I would like to give is to start with a small project and try to be a constant contributor to it and learn how the whole open source ecosystem works. Familiarize yourself with the codebase, git commands used, managing workflows, code quality, and best practices used. This helps you in the long run and when you see a chance to contribute to big projects like TensorFlow or .Net you can grab and the issue and solve it with ease.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Some helpful Platform to get started :&lt;em&gt;&lt;/em&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://firstcontributions.github.io/"&gt;First Contributions&lt;/a&gt;&lt;br&gt;
&lt;a href="https://up-for-grabs.net/"&gt;Up For Grabs&lt;/a&gt;&lt;br&gt;
&lt;a href="https://24pullrequests.com/"&gt;24 Pull Requests&lt;/a&gt;&lt;br&gt;
&lt;a href="https://contributor.ninja/"&gt;Contributor Ninja&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.firsttimersonly.com/"&gt;First Timers Only&lt;/a&gt;&lt;br&gt;
&lt;a href="https://opensourcefriday.com/"&gt;Open Source Friday&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.codetriage.com/"&gt;CodeTriage&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/explore/"&gt;Github Explorer&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.sourcesort.com/"&gt;Source Sort&lt;/a&gt;&lt;br&gt;
&lt;a href="https://devpost.com/hackathons"&gt;Devpost&lt;/a&gt;&lt;br&gt;
&lt;a href="https://mlh.io/seasons/localhost/events"&gt;MLH Localhost&lt;/a&gt;&lt;br&gt;
&lt;a href="https://mlh.io/seasons/2021/events"&gt;MLH Events&lt;/a&gt;&lt;br&gt;
..........&lt;/p&gt;

&lt;p&gt;So have you find a project to contribute? Great !!!&lt;/p&gt;

&lt;p&gt;Let's Understand the Project and its attributes&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#a-typical-open-source-project-has-the-following-types-of-people" class="anchor"&gt;
  &lt;/a&gt;
  A typical open source project has the following types of people:
&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Author&lt;/em&gt;: The person/s or organization that created the project&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Owner&lt;/em&gt;: The person/s who has administrative ownership over the organization or repository (not always the same as the original author)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Maintainers&lt;/em&gt;: Contributors who are responsible for driving the vision and managing the organizational aspects of the project (They may also be authors or owners of the project.)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Contributors&lt;/em&gt;: Everyone who has contributed something quality work back to the project.&lt;/p&gt;

&lt;p&gt;To understand issues and bugs one need to understand codebase. &lt;br&gt;
Flushed!! Wait..&lt;br&gt;
There is simpler way read the following files:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;README&lt;/em&gt;: The README is the instruction manual that welcomes new community members to the project. It explains why the project is useful and how to get started.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;CONTRIBUTING&lt;/em&gt;: Whereas READMEs help people use the project, contributing docs help people contribute to the project. It explains what types of contributions are needed and how the process works. While not every project has a CONTRIBUTING file, its presence signals that this is a welcoming project to contribute to.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;CODE_OF_CONDUCT&lt;/em&gt;: The code of conduct sets ground rules for participants’ behavior associated and helps to facilitate a friendly, welcoming environment. While not every project has a CODE_OF_CONDUCT file, its presence signals that this is a welcoming project.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;LICENSE&lt;/em&gt;: By definition, every open source project must have an open-source license. If the project does not have a license, it is not open source.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#things-to-know" class="anchor"&gt;
  &lt;/a&gt;
  Things to know:
&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Issue tracker&lt;/em&gt;: Where people discuss issues related to the project.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Pull requests&lt;/em&gt;: Where people discuss and review changes that are in progress.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Discussion Channel an Forums&lt;/em&gt;: Some projects use chat channels such as Slack,Discord,etc. for casual conversation, collaboration, and quick exchanges.&lt;/p&gt;

&lt;p&gt;Hurry up! catch the train and start your OS journey.&lt;/p&gt;

&lt;p&gt;If you like it leave a clap and if you want to share your thought leave a message at &lt;a href="https://twitter.com/manvendrajpoot_"&gt;twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Check out Github Guides to know more about GitHub.&lt;/p&gt;

&lt;p&gt;Have a good day!!&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>github</category>
      <category>hackathons</category>
    </item>
    <item>
      <title> You don't need passion to find the work you like!</title>
      <author>Nazanin Ashrafi</author>
      <pubDate>Sat, 26 Dec 2020 15:04:45 +0000</pubDate>
      <link>https://dev.to/nazanin_ashrafi/you-don-t-need-passion-to-find-the-work-you-like-a2d</link>
      <guid>https://dev.to/nazanin_ashrafi/you-don-t-need-passion-to-find-the-work-you-like-a2d</guid>
      <description>&lt;h2&gt; The word &lt;i&gt;passion &lt;/i&gt; can be overwhelming sometimes &lt;/h2&gt;

&lt;p&gt;We've all seen some successful people who would tell you that they've always known what they liked and what they were passionate about. &lt;/p&gt;




&lt;p&gt;About a year ago or so I've watched a TED talk video,It was about :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;whether you need to be passionate about something to pursue it or not. &lt;/li&gt;
&lt;li&gt;What if you don't know what your passion is? Is this gonna be the end of the world for you ?&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;The short answer to &lt;i&gt; above questions &lt;/i&gt; are &lt;b&gt;NO &lt;/b&gt;, you don't.&lt;/p&gt;

&lt;p&gt;If you're doing something you've always been passionate about that's good, I'm happy for you . &lt;/p&gt;

&lt;p&gt;But if you can't figure out what your passion is, don't panic, that's totally fine. Believe me you don't really need.&lt;br&gt;
All you need is a strong will to try different things. &lt;/p&gt;




&lt;p&gt;Now let me talk about my experience with this matter :&lt;/p&gt;

&lt;p&gt;&lt;i&gt;When I first watched that TED talk I really couldn't understand the message behind it, but now I totally get it and believe it was a very powerful speech. &lt;/i&gt;&lt;/p&gt;

&lt;p&gt;As long as I remember I was passionate about making coffee and always wanted to be a barista but there were some obstacles (such as living in a very small town where people don't like coffee, lack of enough coffee shop in my town, being broke etc) which wouldn't allow me to pursue my dream.&lt;br&gt;
I wanted to do something about my life, but what could I possibly do? Going after my passion was not an option for me... &lt;/p&gt;

&lt;p&gt;I decided to randomly pick up the things I liked and gave them a shot (drawing and fashion design). &lt;br&gt;
But they didn't last very long and I eventually dropped them.&lt;/p&gt;

&lt;p&gt;One day I was bored and thought about try coding. &lt;br&gt;
The more I learned the more I liked it. &lt;/p&gt;




&lt;p&gt;So you see?&lt;br&gt;
If I were to pursue my passion I had to wait forever for a miracle to happen, never would have tried different things to see what works for me and more importantly would have lost the opportunity to get into this amazing field. &lt;/p&gt;

&lt;p&gt;But instead tried coding out of curiosity and now : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I like it very much. &lt;/li&gt;
&lt;li&gt;I'm pretty happy with who I've become along the way of this journey. &lt;/li&gt;
&lt;li&gt;Never thought I'd write something, let alone like blogging but here I am writing and actually enjoy it to the point where I might end up being passionate about it as well lol. &lt;/li&gt;
&lt;li&gt;Thanks to my new passion the old version of me which was a lazy hopeless person is dead and gone now.
___________________&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Came across &lt;a href="https://twitter.com/m_podlasin/status/1342359385813745664?s=19"&gt; &lt;i&gt; this tweet &lt;/i&gt; &lt;/a&gt; earlier :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IBd6RO7B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/p5x4til2o7x6wn9vfz0w.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IBd6RO7B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/p5x4til2o7x6wn9vfz0w.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
 and my first reaction was "Ah I can relate to him" and thought maybe I should show you guys someone else's experience besides mine. &lt;br&gt;
Mateusz was lost. &lt;br&gt;
I was lost. &lt;br&gt;
We didn't have a passion, we &lt;b&gt;discovered &lt;/b&gt; it. &lt;/p&gt;




&lt;p&gt;So don't worry if you feel like you don't know what to do or feeling lost... &lt;br&gt;
It's okay... &lt;br&gt;
You're not the only one who's struggling... &lt;br&gt;
Just pick up different things and try them... &lt;br&gt;
You WILL find your passion eventually... &lt;br&gt;
And WILL do great things... &lt;/p&gt;




&lt;p&gt;Now I'd like to know your thoughts on this. &lt;br&gt;
Do you agree? 👍 &lt;br&gt;
Do you disagree? 👎 &lt;br&gt;
Do you have similar experience? &lt;/p&gt;




&lt;p&gt;&lt;i&gt; If you're interested to watch the TED talk you can watch  &lt;a href="https://youtu.be/6MBaFL7sCb8"&gt; &lt;b&gt;here&lt;/b&gt; &lt;/a&gt; &lt;/i&gt;&lt;/p&gt;

&lt;p&gt;You can also check out Mateusz's &lt;a href="https://youtube.com/channel/UCF0RK6CA9wpxVrcFbKNG2sA"&gt; YouTube channel &lt;/a&gt;&lt;/p&gt;

</description>
      <category>motivation</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>What is your favorite coding project you have done and why? ⏳</title>
      <author>Firangiz Ganbarli</author>
      <pubDate>Sat, 26 Dec 2020 14:37:58 +0000</pubDate>
      <link>https://dev.to/firangizg/what-is-your-favorite-coding-project-you-have-done-and-why-4kde</link>
      <guid>https://dev.to/firangizg/what-is-your-favorite-coding-project-you-have-done-and-why-4kde</guid>
      <description>&lt;p&gt;Hi! Question is pretty self-explanatory. Which of the projects you have done were your favorite and why? &lt;/p&gt;

&lt;p&gt;I like seeing creative or personal projects of fellow developers, so please share!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Share the source code/links if you have them.&lt;/strong&gt;😊&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>watercooler</category>
      <category>webdev</category>
      <category>machinelearning</category>
    </item>
  </channel>
</rss>
