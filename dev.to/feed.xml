<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>üé¨Simple Countdown Timer | Vanilla JavaScript‚è±Ô∏è</title>
      <author>Robson Muniz</author>
      <pubDate>Tue, 17 Aug 2021 14:23:42 +0000</pubDate>
      <link>https://dev.to/robsonmuniz16/simple-countdown-timer-vanilla-javascript-3ldl</link>
      <guid>https://dev.to/robsonmuniz16/simple-countdown-timer-vanilla-javascript-3ldl</guid>
      <description>&lt;p&gt;Hello, DEV, sometimes, you‚Äôre going to need to build a JavaScript countdown clock. &lt;br&gt;
You may have an event, a sale, a promotion, or a game. You can build a clock in Vanilla JavaScript rather than reaching for the nearest plugin.&lt;br&gt;
You‚Äôll have more control. You will have built the clock to behave exactly the way you want it to (rather than trying to bend a plugin to your will).&lt;br&gt;
So, here‚Äôs how to make your own countdown clock in just a few lines of JavaScript.&lt;/p&gt;



&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/nhaAARFE3MY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;üß† &lt;strong&gt;Concepts covered in this project:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set a valid end date.&lt;/li&gt;
&lt;li&gt;Calculate the time remaining.‚Ä®&lt;/li&gt;
&lt;li&gt;Convert the time to a usable format. (Milliseconds)&lt;/li&gt;
&lt;li&gt;Output the clock data as a reusable object&lt;/li&gt;
&lt;li&gt;Display the clock on the page &lt;/li&gt;
&lt;/ul&gt;




</description>
      <category>javascript</category>
      <category>css</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Exploring the Synergy of Content Creation &amp; Marketing</title>
      <author>Bala Priya C </author>
      <pubDate>Tue, 17 Aug 2021 14:14:50 +0000</pubDate>
      <link>https://dev.to/balapriya/exploring-the-synergy-of-content-creation-marketing-4llo</link>
      <guid>https://dev.to/balapriya/exploring-the-synergy-of-content-creation-marketing-4llo</guid>
      <description>&lt;h2&gt;
  &lt;a href="#why-is-effective-marketing-strategy-important"&gt;
  &lt;/a&gt;
  Why is Effective Marketing Strategy Important?
&lt;/h2&gt;

&lt;p&gt;Today, the technology spectrum is growing faster than ever before. Companies in the tech sector are trying harder than ever before to be found in the highly competitive markets, to add value to customers, and to create impact in the industry. &lt;/p&gt;

&lt;p&gt;Even within a single industry, there are several companies looking to influence the decision-making process of customers, and drive impact. Therefore, charting out effective marketing strategies is just as important as building useful products, and solutions. &lt;/p&gt;

&lt;p&gt;In this post, we explain effective content marketing strategies that facilitate the generation of valuable inbound traffic, and better sales enablement, thereby positively impacting the organization‚Äôs KPIs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-valuable-content-to-understand-customers-better"&gt;
  &lt;/a&gt;
  Creating Valuable Content to Understand Customers Better
&lt;/h2&gt;

&lt;p&gt;The success of any product, solution, or service depends on the customers‚Äô decision. A product or solution, however sophisticated, is useful only if there are sufficient users. Therefore, it‚Äôs extremely important to understand customers and build solutions that address their problems. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Analyzing how prospective customers react to the created content, their interests, and engagement can often give direction and motivation to product design.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This helps gain insights into customer behaviour, preferences, and expectations. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-content-to-educate-and-inform-customers"&gt;
  &lt;/a&gt;
  Creating Content to Educate and Inform Customers
&lt;/h2&gt;

&lt;p&gt;Creating quality content that‚Äôs aimed at educating and informing the customers about the particular product can be immensely beneficial. For a customer who‚Äôs looking to purchase a product, or use a service, creating awareness about the problem or use case in general, followed by specific content that focuses on the advantages of the company‚Äôs products, and services helps in building trust and awareness in customers. &lt;/p&gt;

&lt;p&gt;The following are helpful tips to get started:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create content that answers questions most customers have on how a product can possibly help solve their problems.&lt;/li&gt;
&lt;li&gt;Create educational content that helps build trust and motivate customers to consider the company‚Äôs  products, or services.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is an ideal first step that enables connecting with prospective customers and organically influencing them to consider the company‚Äôs solutions without forcing them to become customers by using attractive offers and discounts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-compelling-and-contextuallyrelevant-content"&gt;
  &lt;/a&gt;
  Creating Compelling and Contextually-Relevant Content
&lt;/h2&gt;

&lt;p&gt;When starting the content creation process, companies should always keep the audience in mind. Too many posts on the logistics and functioning of the organization is definitely not what the customers are looking for. Content created that‚Äôs aligned with the interests of the customers. &lt;/p&gt;

&lt;p&gt;Here are some relevant questions to answer during the content planning phase:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What do the customers want to know about?&lt;/li&gt;
&lt;li&gt;What problems are they seeking solutions for?&lt;/li&gt;
&lt;li&gt;How would the content that we create help them?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Therefore, all posts in the blog section of the website should be contextually relevant. Relevant, clear, and creative content can influence the customers immensely. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;While blog posts should be optimized for search engines with the right keywords, it‚Äôs also extremely important to be concise and expand on one key idea per post instead of talking about many ideas in a single post. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As we‚Äôve already oriented the customers to make well-informed decisions, it‚Äôs often helpful to create whitepapers that substantiate the products - detailing the problem, solution, and the features that make the product under consideration an optimal choice.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#leveraging-the-power-of-social-media-platforms"&gt;
  &lt;/a&gt;
  Leveraging the Power of Social Media Platforms
&lt;/h2&gt;

&lt;p&gt;While a good SEO strategy can help the product‚Äôs landing page show up in search results organically, it‚Äôs important to leverage the use of social media platforms to share and distribute the created content to the target audience, and also interact with them at a closer level to understand their viewpoints better.&lt;/p&gt;

&lt;p&gt;Building an optimal online presence for establishing the company‚Äôs brand, and a well thought-out social media marketing strategy can be powerful in driving favorable decisions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#leveraging-content-strategy-for-a-better-endtoend-experience"&gt;
  &lt;/a&gt;
  Leveraging Content Strategy for a Better End-to-End Experience
&lt;/h2&gt;

&lt;p&gt;Etching out effective content marketing strategies can help establish strong authority and relevance. The trust gained by creating and promoting quality content can help companies become thought leaders in the industry. Content marketing goals that are aligned with the goals and vision of the organization, can, therefore, facilitate better end-to-end experience for customers. &lt;/p&gt;

&lt;p&gt;That said, it‚Äôs now the time to chalk out effective content marketing strategies and revise existing strategies - for, the journey to becoming a leader in the industry begins today!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Recording on JMeter</title>
      <author>NaveenKumar Namachivayam ‚ö°</author>
      <pubDate>Tue, 17 Aug 2021 14:13:59 +0000</pubDate>
      <link>https://dev.to/qainsights/recording-on-jmeter-h95</link>
      <guid>https://dev.to/qainsights/recording-on-jmeter-h95</guid>
      <description>&lt;p&gt;Welcome to Learn JMeter Series! This series helps you to learn Apache JMeter in a much simpler way with the relevant examples and exercises. This tutorial focuses on &lt;strong&gt;Recording on JMeter&lt;/strong&gt;. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qainsights.com/introduction-to-jmeter-elements/"&gt;Introduction to JMeter Elements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qainsights.com/downloading-and-installing-jmeter/"&gt;Downloading and Installing JMeter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qainsights.com/introduction-to-apache-jmeter/"&gt;Introduction to Apache JMeter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qainsights.com/jmeter-execution-order-and-scoping-rules/" rel="noreferrer noopener"&gt;JMeter Execution Order and Scoping Rules&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;What is Recording?&lt;/h2&gt;

&lt;p&gt;To get started with application performance testing, the first step in JMeter is recording your business transactions. Recording the business flow helps to expedite the process of creating test plans. Otherwise, you will be spending more time manually crafting the requests.&lt;/p&gt;

&lt;p&gt;Almost any GUI based performance testing tool offers a way to record the application via proxy. But CLI based tools such as k6 adopt a different approach when it comes to recording.&lt;/p&gt;

&lt;h2&gt;How to get started with recording in JMeter?&lt;/h2&gt;

&lt;p&gt;In JMeter, by adding a Non-Test element to your test plan, enables you to capture the network traffic. Right click on &lt;strong&gt;Test Plan &amp;gt; Add &amp;gt; Non-Test Elements &amp;gt; HTTP(S) Test Script Recorder&lt;/strong&gt;. This will add the recording capability to JMeter.&lt;/p&gt;

&lt;p&gt;To begin recording, understand the business flow and have your input data ready. Preferably clear your cache and cookies from your favorite browser.&lt;/p&gt;

&lt;h2&gt;Configuring HTTP(S) Test Script Recorder&lt;/h2&gt;

&lt;p&gt;JMeter records the traffic via proxy. By default, JMeter uses 8888, but it can be configured based on your needs. &lt;/p&gt;

&lt;p&gt;Now, open your favorite browser. In this case, I am using Mozilla Firefox, then launch the proxy settings and configure the same proxy as JMeter.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/08/image.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aUO8m1ho--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/08/image.png" alt=""&gt;&lt;/a&gt;&lt;strong&gt;Mozilla Firefox Proxy Settings&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this series, we are going to use multiple demo websites. To demonstrate the recording capability, we are going to use &lt;strong&gt;Bank of Anthos&lt;/strong&gt; demo app https://bank-of-anthos.xyz/login &lt;/p&gt;

&lt;p&gt;Below is the business flow:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Launch https://bank-of-anthos.xyz/login&lt;/li&gt;
&lt;li&gt;Sign in with the default credentials,&lt;/li&gt;
&lt;li&gt;Click on &lt;strong&gt;Deposit Funds&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Enter 10 to the default external account, click on &lt;strong&gt;Deposit&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Sign out &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Go back to JMeter, add a &lt;strong&gt;Thread Group&lt;/strong&gt; and in &lt;strong&gt;HTTP(S) Test Script Recorder&lt;/strong&gt;, select the &lt;strong&gt;Target Controller&lt;/strong&gt; as &lt;strong&gt;Test Plan &amp;gt; Thread Group&lt;/strong&gt; as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/08/image-2.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xSmNS15n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/08/image-2.png" alt="Recording on JMeter"&gt;&lt;/a&gt;Recording on JMeter&lt;/p&gt;

&lt;p&gt;Then, click on &lt;strong&gt;Start&lt;/strong&gt;. If you get a pop-up, that is fine, click on OK, and then go back to Firefox and launch the https://bank-of-anthos.xyz/login URL.&lt;/p&gt;

&lt;p&gt;Once the recording is done, click on the &lt;strong&gt;Stop &lt;/strong&gt;button. In your &lt;strong&gt;Thread Group&lt;/strong&gt;, you can see the recorded elements as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/08/image-3.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qhzHAe0J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/08/image-3.png" alt="Vanilla Recording"&gt;&lt;/a&gt;Vanilla Recording&lt;/p&gt;

&lt;p&gt;By default, JMeter records everything. It is your responsibility to remove unwanted requests such as ads, fonts, third party calls etc.&lt;/p&gt;

&lt;p&gt;But you can avoid unwanted requests using the network filtering option in JMeter. Click on &lt;strong&gt;Requests Filtering &lt;/strong&gt;in &lt;strong&gt;HTTP(S) Test Script Recorder&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Add the below regular expressions under URL Patterns to include.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(?i)bank-of-anthos.xyz(.*)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then repeat the recording. You will get only the relevant HTTP requests for your test plan.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/08/image-4.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cGb7oVnH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/08/image-4.png" alt="Optimized Recording"&gt;&lt;/a&gt;Optimized Recording&lt;/p&gt;

&lt;h2&gt;Smoke Test&lt;/h2&gt;

&lt;p&gt;After the recording is done, it is time to smoke test the recorded elements. Add the &lt;strong&gt;View Results Tree&lt;/strong&gt; listener to the test plan, by right-clicking on &lt;strong&gt;Thread Group &amp;gt; Add &amp;gt; Listener &amp;gt; View Results Tree&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You will get the below error when you replay the test plan. That is fine. Let us fix this in a moment.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/08/image-5.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vKuEfkXI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/08/image-5.png" alt="Smoke Testing"&gt;&lt;/a&gt;Smoke Testing&lt;/p&gt;

&lt;h2&gt;How to fix the test plan?&lt;/h2&gt;

&lt;p&gt;Whenever you work on a web application in JMeter, always add &lt;strong&gt;Cache Manager, Cookie Manager and DNS Cache Manager&lt;/strong&gt; from the &lt;strong&gt;Config Element&lt;/strong&gt; category to the test plan. If you replay now, you will not see any errors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/08/image-6.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_qlvMWkJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/08/image-6.png" alt="Clean Run"&gt;&lt;/a&gt;Clean Run&lt;/p&gt;

&lt;p&gt;Above test plan cannot be used for load testing yet. There are lot of enhancements to be done. Eventually we will cover everything.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;In this blog, you have learned how to capture business transactions in JMeter via proxy and a couple of tips and tricks for successful smoke testing. In our next blog post, we will discuss &lt;strong&gt;Data Parameterization in JMeter&lt;/strong&gt;.&lt;/p&gt;

</description>
      <category>performance</category>
      <category>testing</category>
      <category>tutorial</category>
      <category>webperf</category>
    </item>
    <item>
      <title>Share state using custom hooks</title>
      <author>Francesco Sardo</author>
      <pubDate>Tue, 17 Aug 2021 14:04:25 +0000</pubDate>
      <link>https://dev.to/frankiesardo/share-state-using-custom-hooks-5245</link>
      <guid>https://dev.to/frankiesardo/share-state-using-custom-hooks-5245</guid>
      <description>&lt;p&gt;Many articles have been written about React state management strategies for React, and yes, this is yet another one of them. But rather than talking about a new library and how everyone should adopt it, I want to talk about two different philosophical approach to state: centralised vs decentralised.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-decentralised-state-paradigm"&gt;
  &lt;/a&gt;
  The decentralised state paradigm
&lt;/h2&gt;

&lt;p&gt;Decentralised state has been the battery-included solution since the first version of React. Class components can edit local state to trigger a re-render, and functional components can accomplish the same with the &lt;code&gt;useState&lt;/code&gt; hook. &lt;/p&gt;

&lt;p&gt;Local state is very intuitive to manipulate because it sits near the component that uses it for display and side effects, it's allocated when needed, and disappears when the component is unmounted.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-centralised-state-paradigm"&gt;
  &lt;/a&gt;
  The centralised state paradigm
&lt;/h2&gt;

&lt;p&gt;Keeping all mutable state in one place is an approach championed by Elm, ClojureScript and Redux: a single data structure (usually a tree) contains all the state needed to render your React application. When a branch of that tree changes state, the relevant components in your React hierarchy re-render displaying the new information.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CO4u-rov--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jh6fvhqttth686rqcml8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CO4u-rov--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jh6fvhqttth686rqcml8.png" alt="Screenshot 2021-08-11 at 21.27.07"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A single point of reference for the entire app state is a very neat idea and feels like a natural evolution on top of React itself: React abstracts DOM changes with components, the app state abstracts component changes with a big JSON value.&lt;/p&gt;

&lt;p&gt;Since all changes are represented with data, the logic that transitions the app through different states is very easy to express and to test: it's just a function &lt;code&gt;f(currentState, event) =&amp;gt; newState&lt;/code&gt;. It's also easy to generate many valid UI screens by mocking the app state.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n4Pi9Qwx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpnb4kvtblrwjkhsw9u7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n4Pi9Qwx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpnb4kvtblrwjkhsw9u7.png" alt="Screenshot 2021-08-15 at 21.45.26"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;&lt;a href="https://github.com/frankiesardo/speccards"&gt;speccards&lt;/a&gt; generates random valid UI states based on a spec&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#problems-with-decentralised-state"&gt;
  &lt;/a&gt;
  Problems with decentralised state
&lt;/h2&gt;

&lt;p&gt;Local state becomes problematic when two components need to watch and act on the same state. Think about a simple currency converter where the user can edit either currency text input.&lt;/p&gt;

&lt;p&gt;In this case the naive solution is to "lift the state up" to the closest parent and give all children callback functions to manipulate the state. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--avzR7JC6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sc4r26cibamtwqw1982l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--avzR7JC6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sc4r26cibamtwqw1982l.png" alt="Screenshot 2021-08-15 at 21.49.56"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;em&gt;&lt;a href="https://reactjs.org/docs/lifting-state-up.html"&gt;Lifting State Up&lt;/a&gt; in vanilla React&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This rarely scales for bigger applications, so something like &lt;a href="https://recoiljs.org/"&gt;Recoil&lt;/a&gt; might be needed for more powerful sharing.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#problems-with-centralised-state"&gt;
  &lt;/a&gt;
  Problems with centralised state
&lt;/h2&gt;

&lt;p&gt;You can easily get started with centralised state with the &lt;code&gt;useReducer&lt;/code&gt; hook and keeping all state inside the top &lt;code&gt;&amp;lt;App/&amp;gt;&lt;/code&gt; component, passing down state as &lt;code&gt;props&lt;/code&gt; wherever they are needed. What you'll find soon enough, though, is that components far away from the root will require forever more information, and you'll have to drill all the props through the tree until they reach the correct component.&lt;/p&gt;

&lt;p&gt;This, again, doesn't scale for large applications, so some forms of &lt;code&gt;subscriptions&lt;/code&gt; to parts of the state tree are required to keep the app performant and easy to extend. You might need something like the &lt;a href="https://react-redux.js.org/api/hooks#useselector"&gt;hook version of Redux&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-the-two-compare-in-terms-of-developer-experience"&gt;
  &lt;/a&gt;
  How the two compare in terms of Developer Experience
&lt;/h2&gt;

&lt;p&gt;I have always been a huge advocate of the centralised approach. It appealed to me because of its functional purity and how it made accessing and manipulate state much easier in the pre-hook era. I have since changed my mind, and I'd like to explain why.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Centralised state gives you the &lt;em&gt;illusion&lt;/em&gt; of correctness&lt;/strong&gt;. The state neatly transitions from one pure value to another thanks little functions that encapsulate your business logic. You might even have tests for those functions that say something like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- When button is clicked
- Set the loading indicator to true
- Clear the input field
- Send an http call to the server
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Except that when you actually run the app, the behaviour is not what you expected. The problem is that your logic is far removed from your UI components, and while sound and correct in principle, it doesn't play well with your render code. It might be because the state has a different shape, but more often that not, it's because the intended values are not added to the state at the right time.&lt;/p&gt;

&lt;p&gt;Modelling your app as a succession of states works well when you deal mostly with synchronous interactions, like a game, but starts to show its limit with more asynchronous behaviour, like fetching new data over the internet. It's easy to describe how the data changes but not &lt;strong&gt;how the data gets there in the first place&lt;/strong&gt;. So you might end up with an infinite spinner because an action has not been triggered or received at the right time (e.g. when the user navigated to a new screen).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YPTp0VMi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c8684vlq0qyi46rpal4a.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YPTp0VMi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c8684vlq0qyi46rpal4a.gif" alt="1_8NJgObmgEVhNWVt3poeTaA"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Annoying when that happens eh?&lt;/em&gt; &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#colocating-state-effects-and-ui"&gt;
  &lt;/a&gt;
  Colocating state, effects and ui
&lt;/h2&gt;

&lt;p&gt;Advocates of the centralised state approach have a great argument: UI should not care about state management and side effects, it should just care about displaying values. Extract the logic somewhere else and test it.&lt;/p&gt;

&lt;p&gt;While poignant in principle, this doesn't work well in practice. The reverse tends to be true: it's useful to think about components as fragments of the screen with a well defined behaviour. They can trigger actions, listen to events and manipulate state that affects other components.&lt;/p&gt;

&lt;p&gt;Over the last year I've been writing components with complex behaviour, fully expecting things to break and knowing I'll be refactoring them with some centralised solution. To my surprise, this nontrivial, large app, kept on getting bigger and accumulating new features without getting significantly more complex. I would even say it scaled in ways that Redux, ClojureScript or Elm apps haven't been in the past, even with less "formal proofs" (tests, types) of correctness.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#a-hook-with-a-name"&gt;
  &lt;/a&gt;
  A hook with a name
&lt;/h2&gt;

&lt;p&gt;Consider this component&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;ItemList&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useUser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;itemsPerPage&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;usePreferences&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;searchQuery&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useSearch&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useItems&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;itemsPerPage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;searchQuery&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(...)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To me it clearly communicates its dependencies (inputs) and how it uses them for display. Moreover, these inputs are not just static data but a combination of state and effect.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;useUser&lt;/code&gt; returns the current user info if logged in, otherwise it triggers an authentication flow&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;usePreferences&lt;/code&gt; gets saved data asynchronously from IndexedDB&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;useSearch&lt;/code&gt; extracts the query parameters in the current url&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;useItems&lt;/code&gt; ties everything together, getting the items server side and caching them for future uses.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When each one of these dependencies change (the url parameters, or the local storage being cleared, or the user token expiring) the hooks will take care of re-fetching and re-rendering the component.&lt;/p&gt;

&lt;p&gt;Custom hooks that encapsulate caching are also a great way to share data between components: user, preferences, and remote data all reside in-memory and only need to be fetched once. The first component that uses the hook triggers the async behaviour and all the other components can subsequently access it free of charge.&lt;/p&gt;

&lt;p&gt;You can even go one step beyond and wrap this behaviour in a hook itself:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;useSearchItems&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useUser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;itemsPerPage&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;usePreferences&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;searchQuery&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useSearch&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useItems&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;itemsPerPage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;searchQuery&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So you can have the same list of items in two different part of the application (say: the list itself and a Count indicator somewhere else).&lt;/p&gt;

&lt;p&gt;Hooks can be seen as a dependency graph: what they "require" (other hook calls) and what they provide (the returned value). Editing this graph is really easy if you stick with React hooks and don't go outside of it with centralised state management.&lt;/p&gt;

&lt;p&gt;This patterns composes really well and scales as you create new components. Need another components to access this list? It's a one line change. Don't need access to that data anymore? Removing the hook or the component itself means it's not fetched in that screen anymore.&lt;/p&gt;

&lt;p&gt;State (what's cached), behaviour (which effects load and invalidate the data) and UI can be closely linked together again, so they evolve organically together with your app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#theres-an-app-for-that"&gt;
  &lt;/a&gt;
  There's an app for that
&lt;/h2&gt;

&lt;p&gt;Writing hooks manually that load, cache and invalidate it's obviously time consuming, and there's no need to do that when there are great libraries out there already.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://react-query.tanstack.com/"&gt;React Query&lt;/a&gt; obviously stands out with its incredible DX. It works with http, graphql and any asynchronous behaviour really (e.g. IndexedDB).&lt;/p&gt;

&lt;p&gt;This library alone gives you so much leverage it might be the only solution you need. If we're talking about state sharing without asynchronous behaviour, then Recoil might be a good addition too. If you're using custom hooks with a descriptive name, it won't really matter which library you use underneath.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Prefer this&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;repos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRepos&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;// To this&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;repos&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;repoData&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://api.github.com/repos/tannerlinsley/react query&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#a-real-world-example"&gt;
  &lt;/a&gt;
  A real world example
&lt;/h2&gt;

&lt;p&gt;It's always best to show how ideas are implemented in practice rather than just talking about them so I've created &lt;a href="//firebuzz.app"&gt;firebuzz.app&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oDLeDQeS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nivmbecfyn416zdcqd0j.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oDLeDQeS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nivmbecfyn416zdcqd0j.jpeg" alt="WhatsApp Image 2021-08-01 at 19.57.27"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Players can buzz to answer questions and receive points&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You can browse the source code (and it particular the &lt;code&gt;hooks&lt;/code&gt; folder) over here &lt;a href="https://github.com/frankiesardo/firebuzz"&gt;https://github.com/frankiesardo/firebuzz&lt;/a&gt;.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Docker 101!</title>
      <author>kubona Martin Yafesi</author>
      <pubDate>Tue, 17 Aug 2021 13:17:44 +0000</pubDate>
      <link>https://dev.to/kubona_my/docker-101-124e</link>
      <guid>https://dev.to/kubona_my/docker-101-124e</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PSPoVlyY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qd8q1br8y9e1doo0a497.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PSPoVlyY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qd8q1br8y9e1doo0a497.jpg" alt="docker-image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Welcome dear reader to yet another learning opportunity. I applaud you for the commitment devoted to become a better version of yourself. Always here to remind you,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Every master was once a beginner&lt;br&gt;
Whatever tech stack you choose to follow, do not underestimate the small beginnings! &lt;code&gt;Stick to it!&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since we started this learning journey together, we have looked at a few principles and mastered some techniques, absolutely beginner level. Some of these have been;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.tolink%20here"&gt;Python Basics, Pythons 101!&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.tolink%20here"&gt;Introduction to Python Functions&lt;/a&gt;&lt;br&gt;
Feel free to check them out. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7MywqPku--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39tg85klaorj3ynnxip2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7MywqPku--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39tg85klaorj3ynnxip2.png" alt="Getting-started-docker"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#diving-right-in-"&gt;
  &lt;/a&gt;
  Diving right in ‚Ä¶
&lt;/h2&gt;

&lt;p&gt;We are getting started with our topic for the day. Hope you are refreshed and have a clear mind. This article assumes no prior experience with Docker or any of the terms used, sit back, read along and enjoy. &lt;/p&gt;

&lt;p&gt;To explain what Docker is, we will first dig a few decades back before the docker world. Problem scenarios will be used to understand how docker came about, why it is important in your software development work flow, and basic usage examples.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-problems-before-docker"&gt;
  &lt;/a&gt;
  The Problems before docker.
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#scenario-1"&gt;
  &lt;/a&gt;
  Scenario 1
&lt;/h3&gt;

&lt;p&gt;You have just landed your first tech developer job, before anytime elapses, your very first assignment rolls in from the Chief Technical Officer. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-assignment"&gt;
  &lt;/a&gt;
  The assignment...
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;You are required to develop an application for a very needy segment of the population, the blind!!.  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#how-you-start-lets-see"&gt;
  &lt;/a&gt;
  How you start, lets see!!
&lt;/h4&gt;

&lt;p&gt;From your expertise, basing on the app requirements, you decide on a set of tools that will enable you complete the task before hand.&lt;br&gt;
Your application say will require these dependencies to run;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An operating system&lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;A database like Postgres&lt;/li&gt;
&lt;li&gt;Flask&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Installing app dependencies manually&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Task before hand is installing all these tools to your local system. Phew!!! That looks tiresome already. Remember while installing them manually, you are only getting versions specific to your machine/laptop. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Coding, collaborations, testing&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So until now, you are very comfortable coding the real-world application that solves a pressing need in your community. &lt;br&gt;
Your boss has given you a deadline to complete the first module of the application. Yikes!!! Deadline day is here and the module is complete. You send the code over to the operations team, to test the application. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;A few days later ...&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Operations Team manager&lt;/code&gt;: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hey, The code you sent me cannot run on my system, no app!!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;A big problem arises&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Can you see it?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Why did that happen? Well simply put, you used dependencies specific to your personal system, not universal. Another developer to test out your application will also need to manually install these dependencies on his personal system, and the chain continues that way. Along the way, there are more chances of your app breaking,....Oh no!!!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scenario-2"&gt;
  &lt;/a&gt;
  Scenario 2
&lt;/h3&gt;

&lt;p&gt;You have built out your first application, but would like to test it out using a different operating system. How do you go about that? &lt;br&gt;
After making some consultations from your workmates, news has it that its very possible through &lt;code&gt;Virtual Machines&lt;/code&gt;.&lt;br&gt;
Hurray, you feel great utilizing the concept of &lt;em&gt;Virtualization&lt;/em&gt;!!&lt;br&gt;
Virtualization has greatly aided developers in their ability to construct and produce from their computers as if they were separate platforms. They can use virtual computers to construct completely virtual operating systems in which to operate and build.&lt;/p&gt;

&lt;p&gt;A developer can run a virtual Windows computer on their Macbook to evaluate the operation of a Windows-constructed application. Running a virtual machine is more cheaper and easier than buying a brand new one. I guess it's a really great option saving you a couple of thousand dollars.&lt;/p&gt;

&lt;p&gt;Look at the difference between Docker and Virtual Machines from the illustration below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ih45CpFB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwm6yfigwrz8p80a95gp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ih45CpFB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwm6yfigwrz8p80a95gp.png" alt="virual-machines-or-docker"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problems arising ...&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As you enjoy trying out different virtual machines on your local device, you start noticing a few hiccups arising. These could be and not limited to;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Exhaustion of computing resources like ram, storage&lt;/li&gt;
&lt;li&gt;Network congestion&lt;/li&gt;
&lt;li&gt;Marginal app performance inside the Virtual machine&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With the virtual machines installed, they share the same hardware resources with your normal operating system. So the issue of scalability arises since your virtual machine keeps expanding but not your hardware performance. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Do you notice that problem now?&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#leaving-problems-alone"&gt;
  &lt;/a&gt;
  Leaving problems alone...
&lt;/h3&gt;

&lt;p&gt;There are quite a number of scenarios to list out in regards to traditional Software development practices. But I just highlighted on a few to whet our appetite and understand how &lt;code&gt;Docker&lt;/code&gt; comes in the picture. Having understood those challenges, am sure your mind is sparked to solution mode already. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Let us refocus&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3VypFZAU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jq9ythpb5vo694dzrpds.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3VypFZAU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jq9ythpb5vo694dzrpds.png" alt="REFOCUS-docker"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Who comes to our rescue? Docker !!!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-docker"&gt;
  &lt;/a&gt;
  What is Docker?
&lt;/h2&gt;

&lt;p&gt;Docker is a computer program that accelerates the way you build, share and run modern applications. Essentially it solves all the problem scenarios we have discussed above.&lt;br&gt;
Docker takes away tedious, monotonous configuration procedures and is utilized across the development lifecycle for quick, simple and portable application development both on desktop and cloud.&lt;br&gt;
In other words, while you use docker development becomes more efficient and predictable. &lt;/p&gt;

&lt;p&gt;Docker is a tool for building, running, and deploying containerized applications. An application's code, libraries, tools, dependencies, and other files are all contained in a Docker image. When a user executes an image, it might turn into one or more containers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-specifically"&gt;
  &lt;/a&gt;
  How Specifically?
&lt;/h2&gt;

&lt;p&gt;Okay to answer this question, I will split the concept into 3 ways;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Build&lt;/li&gt;
&lt;li&gt;Share&lt;/li&gt;
&lt;li&gt;Run&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O_JMz99o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b2pvxhyamhlw6xjrd9z9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O_JMz99o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b2pvxhyamhlw6xjrd9z9.png" alt="Build-ship-run"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#build"&gt;
  &lt;/a&gt;
  Build
&lt;/h3&gt;

&lt;p&gt;Everything in Docker is based on images and containers. &lt;br&gt;
A Docker image is a file that a Docker container uses to run programs. Docker images, like a template, serve as a collection of instructions for constructing a Docker container. When utilizing Docker, Docker images also serve as a starting point. In virtual machine (VM) settings, an image is similar to a snapshot.&lt;/p&gt;

&lt;p&gt;Docker images include several layers, each of which is derived from the one before it but differs from it. The layers reduce disk use while boosting reusability and speeding up Docker builds. Image layers are read-only files as well. A written layer is put on top of the unchangeable images once a container is formed, enabling a user to make modifications.&lt;/p&gt;

&lt;p&gt;Official images are those created by Docker, and community images are those created by Docker users. Docker applications are monitored by the &lt;em&gt;CoScale&lt;/em&gt; agent, which is an official Docker image.&lt;br&gt;
With confidence, leverage Images from the Docker Hub image repository that are Docker verified and official. As a basis for your application development, use these reliable and secure images.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qezYFRXQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4t1kksqui8x4s31wyhtq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qezYFRXQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4t1kksqui8x4s31wyhtq.png" alt="docker-official-images"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Code, config files, environment variables, libraries, and runtimes are all included in a Docker image for running a containerized application. The image may be run as a Docker container once it has been deployed to a Docker environment. Docker run builds a container based on a specified image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wbzFwT0a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t6miwbgf8t74vqmdbpre.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wbzFwT0a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t6miwbgf8t74vqmdbpre.jpg" alt="docker-build"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In simple terms, you build your image that contains all the libraries, and dependencies for your app and upon running that image you generate a container which is an instance of your application. You can make multiple versions of your application.&lt;/p&gt;

&lt;p&gt;For example;&lt;br&gt;
You can build an image for your flask project based on ;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Python &lt;/li&gt;
&lt;li&gt;Flask &lt;/li&gt;
&lt;li&gt;MySQL&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When you run that image you create an instance of your application which you can share to anyone and will run without any issues.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Do you see how much Docker saves you!!&lt;/em&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#share"&gt;
  &lt;/a&gt;
  Share
&lt;/h3&gt;

&lt;p&gt;Once you have built your image you are able to share it to the world and anyone can use it (&lt;em&gt;if you choose to&lt;/em&gt;). &lt;br&gt;
You may deploy containers and test and share images from private or public repositories, such as those in the Docker Hub cloud registry service. Image management and access control are also available through Docker Hub's Docker Trusted Registry.&lt;/p&gt;

&lt;p&gt;Users may use the docker push command to publish custom images to the Docker Hub and generate new images from existing ones. Docker offers comments to authors prior to publication to ensure the quality of community images. The author is responsible for updating the image once it has been published.&lt;/p&gt;

&lt;p&gt;With Docker it is easy to collaborate with team members and other developers to come up with new ideas, and simply upload images to Docker Hub. It is even possible to have roles-based access control and Docker Hub Audit Logs. That makes it easier customize developer access to images and gain insight into activity history.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#run"&gt;
  &lt;/a&gt;
  Run
&lt;/h3&gt;

&lt;p&gt;Remember we said that when you run the &lt;code&gt;docker run&lt;/code&gt; command, you are making an instance of your application. You can make as many instances as you like, for example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Instance for development&lt;/li&gt;
&lt;li&gt;Instance for testing&lt;/li&gt;
&lt;li&gt;Instance for staging&lt;/li&gt;
&lt;li&gt;Instance for production (&lt;em&gt;One being used by application users&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BonCVll2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3riupfo9kigmmg1fsr9h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BonCVll2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3riupfo9kigmmg1fsr9h.png" alt="docker-containers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So the concept is to deliver numerous apps with ease, and have them operate the same way in all of your settings - desktop or cloud-native - including design, testing, staging, and production.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-do-we-do-that"&gt;
  &lt;/a&gt;
  How do we do that?
&lt;/h4&gt;

&lt;p&gt;It is really simple, Deploy your applications in separate containers independently and in different languages. Reduce the risk of conflict between languages, libraries or frameworks. &lt;/p&gt;

&lt;p&gt;Using the ease of Docker Compose CLI, you can deploy your apps locally and in the cloud with AWS ECS, Azure ACI, and Google GKS with just one command.&lt;/p&gt;

&lt;p&gt;Yes!!! That is it about Docker. Hope you have learnt some concepts about what Docker is?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started-guide"&gt;
  &lt;/a&gt;
  Getting Started Guide.
&lt;/h2&gt;

&lt;p&gt;Docker is a really great tool to include in your software development workflow. &lt;/p&gt;

&lt;p&gt;To have a more whetting experience about docker, please refer to the guide.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.docker.com/get-started"&gt;Getting-Started-With-Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Without installing Docker on your system, you can leverage the online play ground and practice how to use Docker Images and containers. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.docker.com/play-with-docker"&gt;Play-with-Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Congratulations upon finishing the article. I trust that you have learnt something. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-was-the-article"&gt;
  &lt;/a&gt;
  How was the article?
&lt;/h2&gt;

&lt;p&gt;I love learning with the friends I share content with. Are there any insights you have about the article? Any additional features/concepts that would have been of real value to the article? Whatever it is, please share in the discussion section.&lt;/p&gt;

&lt;p&gt;For now... I tap out. Enjoy yourself and see you next time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/PAflk22toszMlnzEdN/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/PAflk22toszMlnzEdN/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>beginners</category>
      <category>docker</category>
    </item>
    <item>
      <title>Top 5 Tips to Boost your rails app performance </title>
      <author>Shaher Shamroukh</author>
      <pubDate>Tue, 17 Aug 2021 13:08:56 +0000</pubDate>
      <link>https://dev.to/shahershamroukh/top-5-tips-to-boost-your-rails-app-performance-4mfj</link>
      <guid>https://dev.to/shahershamroukh/top-5-tips-to-boost-your-rails-app-performance-4mfj</guid>
      <description>&lt;p&gt;The performance of the web application is crucial and the app speed really matters, as it plays a great role of it's success.&lt;/p&gt;

&lt;p&gt;so what techniques will help us improve the performance of our application?&lt;/p&gt;

&lt;p&gt;Here we will talk about the top 5 easy techniques to boost the performance of the rails app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-caching"&gt;
  &lt;/a&gt;
  1- Caching
&lt;/h2&gt;

&lt;p&gt;Caching caching caching &lt;/p&gt;

&lt;p&gt;Caching is crucial to significantly improve the app performance.&lt;br&gt;
To put it simply, caching means storing the results of a complex (or not so complex) computation in some storage and later returning them right away without the need to re-compute everything. &lt;br&gt;
Also "cache" is a French word that means "to hide" and "cache-cache" is a hide-and-seek game.&lt;/p&gt;

&lt;p&gt;Now caching is a long topic to cover in one article so i will list the resources that cover everything you need to know about rails caching.&lt;/p&gt;

&lt;p&gt;Caching with Rails: An Overview &lt;a href="https://guides.rubyonrails.org/caching_with_rails.html"&gt;rails guides&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Everything You Ever Wanted To Know About View Caching In Rails &lt;a href="https://www.honeybadger.io/blog/ruby-rails-view-caching/"&gt;honeybadger&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How Active-record Uses Caching To Avoid Unnecessary Trips To The Database &lt;a href="https://www.honeybadger.io/blog/rails-activerecord-caching/"&gt;honeybadger&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mastering Low Level Caching in Rails &lt;a href="https://www.honeybadger.io/blog/rails-low-level-caching/"&gt;honeybadger&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-n1-query-problem"&gt;
  &lt;/a&gt;
  2- N+1 query problem
&lt;/h2&gt;

&lt;p&gt;This is a very popular and simple optimization technique&lt;br&gt;
but it deserves the first mention since this mistake is so prevalent.&lt;br&gt;
To eliminate the N+1 problem make use of the MySQL database joins and the Rails Active-record includes functions.&lt;/p&gt;

&lt;p&gt;Here is a good &lt;a href="https://semaphoreci.com/blog/2017/08/09/faster-rails-eliminating-n-plus-one-queries.html"&gt;article&lt;/a&gt; about eliminating the n+1 query problem and taking advantage of the bullet gem.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-use-raw-size-endraw-instead-of-raw-length-endraw-or-raw-count-endraw-"&gt;
  &lt;/a&gt;
  3- Use &lt;code&gt;size&lt;/code&gt; Instead of &lt;code&gt;length&lt;/code&gt; or &lt;code&gt;count&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Here is why&lt;br&gt;
&lt;code&gt;count&lt;/code&gt; will perform an SQL COUNT query&lt;br&gt;
&lt;code&gt;length&lt;/code&gt; will calculate the length of the resulting array&lt;br&gt;
&lt;code&gt;size&lt;/code&gt; will try to pick the most appropriate of the two to avoid excessive queries.&lt;br&gt;
Take a look at this &lt;a href="https://web.archive.org/web/20100210204319/http://blog.hasmanythrough.com/2008/2/27/count-length-size"&gt;article&lt;/a&gt; about size vs length vs count.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-use-raw-pluck-endraw-"&gt;
  &lt;/a&gt;
  4- Use &lt;code&gt;pluck&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;pluck can be used to query single or multiple columns from the underlying table of a model. It accepts a list of column names as an argument and returns an array of values of the specified columns with the corresponding data type.&lt;/p&gt;

&lt;p&gt;Unlike select, pluck directly converts a database result into a Ruby Array, without constructing Active-record objects. This means better performance for a large or frequently-run query.&lt;/p&gt;

&lt;p&gt;To see the example and usage of pluck method check it out on rails &lt;a href="https://guides.rubyonrails.org/active_record_querying.html#pluck"&gt;guides&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-upgrade-ruby-and-rails"&gt;
  &lt;/a&gt;
  5- Upgrade Ruby and rails
&lt;/h2&gt;

&lt;p&gt;New versions tend to bring performance improvements as well as security and new methods that often faster for their case uses.&lt;br&gt;
Here is a good &lt;a href="https://www.fastruby.io/blog/rails/upgrades/why-upgrade-your-rails-application.html"&gt;article&lt;/a&gt; about Why Is It Important to Upgrade Your Rails Application.&lt;/p&gt;

&lt;p&gt;I hope you enjoyed reading the article as i have enjoyed writing it.&lt;/p&gt;

</description>
      <category>rails</category>
      <category>performance</category>
      <category>ruby</category>
    </item>
    <item>
      <title>Anahtar Doƒürulamalƒ± API Servisi Olu≈üturma</title>
      <author>Ali Buƒüra Okkalƒ±</author>
      <pubDate>Tue, 17 Aug 2021 13:05:22 +0000</pubDate>
      <link>https://dev.to/aciklab/anahtar-dogrulamali-api-servisi-olusturma-5gbo</link>
      <guid>https://dev.to/aciklab/anahtar-dogrulamali-api-servisi-olusturma-5gbo</guid>
      <description>&lt;p&gt;Her istekte kullanƒ±cƒ± adƒ± ve parolayƒ± g√∂nderme zorunluluƒüu sakƒ±ncalƒ±dƒ±r ve aktarƒ±m g√ºvenli HTTP olsa bile bir g√ºvenlik riski olarak g√∂r√ºlebilir, √ß√ºnk√º istemcinin bu kimlik bilgilerini isteklerle g√∂nderebilmesi i√ßin ≈üifrelemeden saklamasƒ± gerekir.&lt;/p&gt;

&lt;p&gt;√ñnceki √ß√∂z√ºme g√∂re bir geli≈üme, isteklerin kimliƒüini doƒürulamak i√ßin bir anahtar kullanmaktƒ±r.&lt;/p&gt;

&lt;p&gt;Buradaki fikir, istemci uygulamasƒ±nƒ±n bir kimlik doƒürulama anahtarƒ± i√ßin kimlik doƒürulama bilgilerini deƒüi≈ü toku≈ü etmesi ve sonraki isteklerde bu anahtarƒ± g√∂ndermesidir.&lt;/p&gt;

&lt;p&gt;Anahtarlar genellikle bir sona erme s√ºresi ile verilir, ardƒ±ndan ge√ßersiz hale gelirler ve yeni bir anahtar alƒ±nmasƒ± gerekir. Bir anahtarƒ±n sƒ±zdƒ±rƒ±lmasƒ± durumunda olu≈üabilecek potansiyel hasar, kƒ±sa √∂m√ºrleri nedeniyle √ßok daha k√º√ß√ºkt√ºr.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#uygulama"&gt;
  &lt;/a&gt;
  Uygulama
&lt;/h1&gt;

&lt;p&gt;‚Äã Anahtarlarƒ± kullanmanƒ±n bir√ßok yolu vardƒ±r:&lt;/p&gt;

&lt;p&gt;Basit bir uygulama, veritabanƒ±nda kullanƒ±cƒ± ve parola ile saklanan, muhtemelen bir son kullanma tarihi olan, belirli uzunlukta rastgele bir karakter dizisi olu≈üturmaktƒ±r.&lt;/p&gt;

&lt;p&gt;Sunucu tarafƒ±nda depolama gerektirmeyen daha ayrƒ±ntƒ±lƒ± bir uygulama ise, kriptografik olarak imzalanmƒ±≈ü bir mesajƒ± anahtar olarak kullanmaktƒ±r. Bunun avantajƒ±, anahtarla ilgili bilgilerin, yani anahtarƒ±n √ºretildiƒüi kullanƒ±cƒ±nƒ±n, anahtarƒ±n kendisinde kodlanmasƒ± ve g√º√ßl√º bir kriptografik imza ile korunmasƒ±dƒ±r.&lt;/p&gt;

&lt;p&gt;Bu uygulamada da benzer bir yakla≈üƒ±m kullanacaƒüƒ±z.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#kod"&gt;
  &lt;/a&gt;
  Kod
&lt;/h2&gt;

&lt;p&gt;Kodun tamamƒ±na &lt;a href="https://github.com/abugraokkali/Rest-Token-Based-Authentication"&gt;buradan&lt;/a&gt; ula≈üabilirsiniz.&lt;/p&gt;

&lt;p&gt;Ayrƒ±ca Python ile REST-API Servisi Olu≈üturmak ile ilgili yazƒ±ma da &lt;a href="https://dev.to/aciklab/rest-api-e26"&gt;buradan&lt;/a&gt; ula≈üabilirsiniz.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;make_response&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;jwt&lt;/span&gt; 
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;functools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;wraps&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Gerekli paketlerin import edilmesi&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;jwt&lt;/strong&gt;: JSON Web Token'lerini (JWT) kodlamanƒ±za ve kodunu √ß√∂zmenize olanak tanƒ±r.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;datetime&lt;/strong&gt;: Datetime mod√ºl√º, tarih ve saatle √ßalƒ±≈ümak i√ßin sƒ±nƒ±flar saƒülar.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;functools&lt;/strong&gt;, daha y√ºksek dereceli fonksiyonlar (diƒüer fonksiyonlar √ºzerinde hareket eden veya ba≈üka fonksiyon d√∂nd√ºren fonksiyonlar) i√ßin standart bir Python mod√ºl√ºd√ºr. &lt;strong&gt;wraps()&lt;/strong&gt;, bir dekorat√∂r√ºn sarmalayƒ±cƒ± i≈ülevine uygulanan bir dekorat√∂rd√ºr.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'SECRET_KEY'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'thisisthesecretkey'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Flask app objesinin ve gizli anahtarƒ±n olu≈üturulmasƒ±.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;token_required&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;wraps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;decorated&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'token'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;'message'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Token is missing!'&lt;/span&gt;&lt;span class="p"&gt;}),&lt;/span&gt; &lt;span class="mi"&gt;403&lt;/span&gt;

        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
            &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;jwt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'SECRET_KEY'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;algorithms&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"HS256"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;'message'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Token is invalid!'&lt;/span&gt;&lt;span class="p"&gt;}),&lt;/span&gt; &lt;span class="mi"&gt;403&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;decorated&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Anahtar girilmediyse veya girilen anahtar hatalƒ±ysa hata mesajlarƒ± basan, girilen doƒüru bir ≈üekilde decode edildiyse devam eden wrapper fonksiyon.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/unprotected'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;unprotected&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;'message'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Anyone can view this!'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/protected'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;token_required&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;protected&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;'message'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'This is only available for people with valid tokens.'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Test a≈üamasƒ±nda kullanmak i√ßin anahtar gerektiren ve gerektirmeyen end-point'lerin olu≈üturulmasƒ±.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/login'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;login&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;authorization&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'Passw0rd'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;jwt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;'user'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'exp'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utcnow&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minutes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)},&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'SECRET_KEY'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;algorithm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"HS256"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;'token'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;make_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Could not verify!'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;401&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'WWW-Authenticate'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Basic realm="Login Required"'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Herhangi bir kullanƒ±cƒ± adƒ± ve "PasswOrd"parolasƒ± ile /login end-point'inini √ßaƒüƒ±rdƒ±ƒüƒ±nƒ±zda ;

&lt;ul&gt;
&lt;li&gt;kullanƒ±cƒ± adƒ±nƒ±n&lt;/li&gt;
&lt;li&gt;son kullanma tarihinin&lt;/li&gt;
&lt;li&gt;ve gizli anahtarƒ±n &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;jwt ile olu≈üturulan anahtarƒ± d√∂nd√ºren fonksiyon. datetime'ƒ± kullanƒ±p anahtarƒ±n kullanƒ±labilirlik s√ºresini 15 dakika yaptƒ±ƒüƒ±mƒ±zƒ± da g√∂rebilirsiniz.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if __name__ == '__main__':
    app.run(debug=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Betik √ßalƒ±≈ütƒ±rƒ±ldƒ±ƒüƒ±nda app'in debug modda √ßalƒ±≈ütƒ±rƒ±lmasƒ±.&lt;/li&gt;
&lt;/ul&gt;



&lt;h1&gt;
  &lt;a href="#%C3%A7al%C4%B1%C5%9Ft%C4%B1rma"&gt;
  &lt;/a&gt;
  √áalƒ±≈ütƒ±rma
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ python3 api.py

 * Serving Flask app "api" (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: on
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
 * Restarting with stat
 * Debugger is active!
 * Debugger PIN: 241-307-717
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#testler"&gt;
  &lt;/a&gt;
  Testler
&lt;/h1&gt;

&lt;p&gt;Testleri tarayƒ±cƒ±nƒ±z √ºzerinde verilen adreslere giderek yapabilirsiniz.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://127.0.0.1:5000/unprotected
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;adresine gittiƒüimizde beklediƒüimiz i√ßeriƒüi g√∂rebiliyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GIABTHIR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1o858oz2yc2cpmg8n0x5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GIABTHIR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1o858oz2yc2cpmg8n0x5.png" alt="ss1"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://127.0.0.1:5000/protected
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;adresine gittiƒüimizde bir anahtar beklendiƒüi i√ßin i√ßerikte anahtar eksik uyarƒ±sƒ± alƒ±yoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GRpc0Qo3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgvr7u3jytpksn06ob1o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GRpc0Qo3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgvr7u3jytpksn06ob1o.png" alt="ss2"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://127.0.0.1:5000/login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Adresine gittiƒüimizde bizden kullanƒ±cƒ± adƒ± ve ≈üifre isteniyor. Herhangi bir kullanƒ±cƒ± adƒ± ve "Passw0rd" ≈üifresiyle oturum a√ßalƒ±m.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ri3EpMoK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khk2wuapjirqxz2wmvsi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ri3EpMoK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khk2wuapjirqxz2wmvsi.png" alt="ss3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Oturum a√ßtƒ±ƒüƒ±mƒ±zda kullanƒ±cƒ± adƒ±mƒ±za ve gizli anahtarƒ±mƒ±za √∂zel olu≈üturulan 15 dakika ge√ßerli anahtarƒ±mƒ±zƒ± g√∂r√ºnt√ºleyebiliyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D6BQ-1FI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ev3q80l8q6deq7r4yqoh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D6BQ-1FI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ev3q80l8q6deq7r4yqoh.png" alt="ss4"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://127.0.0.1:5000/protected?token=invalidtoken
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Anahtar gerektiren adrese yanlƒ±≈ü bir anahtar ile gitmeye √ßalƒ±≈ütƒ±ƒüƒ±mƒ±zda beklediƒüimiz uyarƒ±yla kar≈üƒ±la≈üƒ±yoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PLfqWX69--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/487mpc16lr1g6x3b9cqm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PLfqWX69--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/487mpc16lr1g6x3b9cqm.png" alt="ss5"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://127.0.0.1:5000/protected?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoiYWxpIiwiZXhwIjoxNjI5MTg4NDMwfQ.ni3Soivc1a4vKyI3_xpDyb1-RV3iDQ4QMtS3FhXijog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Aynƒ± adrese bu ≈üekilde gittiƒüimizde ise herhangi bir uyarƒ±yla kar≈üƒ±la≈ümadan i√ßeriƒüi g√∂rebiliyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K3_Btn7h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kqqxtq5z61sblemzdtx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K3_Btn7h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kqqxtq5z61sblemzdtx.png" alt="ss6"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Ali Buƒüra Okkalƒ± &lt;br&gt;
HAVELSAN - 2021&lt;/em&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>api</category>
      <category>token</category>
      <category>authentication</category>
    </item>
    <item>
      <title>Introduction to Infrastructure as Code with Terraform</title>
      <author>Karan Pratap Singh</author>
      <pubDate>Tue, 17 Aug 2021 12:58:40 +0000</pubDate>
      <link>https://dev.to/karanpratapsingh/introduction-to-infrastructure-as-code-with-terraform-4f29</link>
      <guid>https://dev.to/karanpratapsingh/introduction-to-infrastructure-as-code-with-terraform-4f29</guid>
      <description>&lt;p&gt;In this article we will be learning about Infrastructure as Code, approaches, benefits and then we'll learn basics of &lt;a href="https://www.terraform.io/"&gt;Terraform&lt;/a&gt; by understanding some of its fundamentals and useful commands. &lt;/p&gt;

&lt;p&gt;We will also create a basic Terraform project and provision some resources!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/zqSbi0i0-Mo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-infrastructure-as-code"&gt;
  &lt;/a&gt;
  What is Infrastructure as Code?
&lt;/h2&gt;

&lt;p&gt;Infrastructure as Code (IaC) can be defined as managing and provisioning of infrastructure through code instead of through manual processes like provisioning resources through AWS, GCP console etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#approaches"&gt;
  &lt;/a&gt;
  Approaches
&lt;/h3&gt;

&lt;p&gt;There are two approaches Infrastructure as Code (IaC):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Imperative&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With this approach, we define our desired configuration as a sequence of commands executed in a certain order. &lt;/p&gt;

&lt;p&gt;For example, using a bash script using &lt;a href="https://aws.amazon.com/cli/"&gt;AWS CLI&lt;/a&gt; to provision our resources.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Declarative&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A declarative approach defines the system's desired state, including what resources you need and any properties they should have.&lt;/p&gt;

&lt;p&gt;For example, &lt;a href="https://aws.amazon.com/cloudformation/"&gt;AWS Cloudformation&lt;/a&gt;, &lt;a href="https://terraform.io"&gt;Terraform&lt;/a&gt;, &lt;a href="https://www.ansible.com/"&gt;Ansible&lt;/a&gt;, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#benefits"&gt;
  &lt;/a&gt;
  Benefits
&lt;/h3&gt;

&lt;p&gt;Here are some benefits of using Infrastructure as Code (IaC):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Consistency&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The goal of IaC is to eliminate manual processes which helps us iterate faster while maintaining consistency as our infrastructure evolves&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Simplicity&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;IaC allows us to spin up an entire infrastructure architecture by running few scripts. We can pretty much provision not only for development but also for staging, production environments which makes our software development life cycle (SDLC) much simpler.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Increased efficiency&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;IaC shifts power back into the developer's hand. As provisioning becomes more reliable and automated, engineers spend less time performing manual work, and more time executing higher-value tasks.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Risk minimization&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Imagine having a DevOps engineer who's the only one who knows your infrastructure setup and its ins and outs. Now imagine that engineer is leaving your company.&lt;/p&gt;

&lt;p&gt;Here, IaC is a perfect fit because as a new engineer is onboarded, they won't need to spend much time understanding how our infrastructure is provisioned.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-terraform"&gt;
  &lt;/a&gt;
  What is Terraform?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mbKT5mmr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.hashicorp.com/img/terraform/terraform-iac.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mbKT5mmr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.hashicorp.com/img/terraform/terraform-iac.png" alt="terraform"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://learn.hashicorp.com/tutorials/terraform/infrastructure"&gt;Reference: Terraform docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Terraform is an infrastructure as code (IaC) tool that allows us to build, change, and version infrastructure safely and efficiently.&lt;/p&gt;

&lt;p&gt;Terraform uses HashiCorp Language (HCL) as its language to define a resource regardless of the provider being used.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fundamentals"&gt;
  &lt;/a&gt;
  Fundamentals
&lt;/h3&gt;

&lt;p&gt;Let's look at some fundamentals and building blocks of a basic terraform project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;State&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Terraform must store state about our infrastructure and configuration. This state is used by Terraform to map our resources to our configuration and keep track of metadata.&lt;/p&gt;

&lt;p&gt;Terraform also provides tons of options for how we want to store our state. For example, if we are working with multiple people in the team we can store our state to something like AWS S3 or Consul rather than storing it locally&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Provider&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Providers are basically plugins that terraform uses to interact with cloud providers like AWS, GCP, Azure, etc. Terraform has tons of providers for pretty much any infrastructure needs and can be found at &lt;a href="https://registry.terraform.io/browse/providers"&gt;terraform registry&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="c1"&gt;# AWS&lt;/span&gt;
&lt;span class="nx"&gt;provider&lt;/span&gt; &lt;span class="s2"&gt;"aws"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;region&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"us-east-1"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Google Cloud&lt;/span&gt;
&lt;span class="nx"&gt;provider&lt;/span&gt; &lt;span class="s2"&gt;"google"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;project&lt;/span&gt;     &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"example"&lt;/span&gt;
  &lt;span class="nx"&gt;region&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"us-west1"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Resource&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Resource blocks can describe any infrastructure object such as compute, network or any higher-level component&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="nx"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_apprunner_service"&lt;/span&gt; &lt;span class="s2"&gt;"some_name"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;tags&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"example-apprunner-service"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Data Sources&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;While Resource is used to manage a new infrastructure component. Data sources gives us a read-only view into pre-existing resources in our infrastructure that might or might not have been provisioned by Terraform itself.&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="s2"&gt;"aws_ebs_volume"&lt;/span&gt; &lt;span class="s2"&gt;"ebs_volume"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;most_recent&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;

  &lt;span class="nx"&gt;filter&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;name&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"volume-type"&lt;/span&gt;
    &lt;span class="nx"&gt;values&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"gp2"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Modules&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Terraform modules are containers for multiple resources that are used together.&lt;/p&gt;

&lt;p&gt;Imagine you want to provision an &lt;a href="https://aws.amazon.com/eks"&gt;EKS&lt;/a&gt; cluster but as we know it's not as simple as defining an eks resource, we'll also need a vpc, subnets and the list goes on.&lt;/p&gt;

&lt;p&gt;So modules become a nice way to organize your infrastructure, for example, we can just define our eks specific resources in eks module!&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt; &lt;span class="s2"&gt;"eks"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;vpc&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"..."&lt;/span&gt;
  &lt;span class="nx"&gt;instances&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;But wait, there's more!&lt;/p&gt;

&lt;p&gt;There are tons of modules and resources present on &lt;a href="https://registry.terraform.io/browse/modules"&gt;Terraform registry&lt;/a&gt; so we can probably find a module that fits our needs. Such as ready to use &lt;a href="https://registry.terraform.io/modules/terraform-aws-modules/eks/aws/latest"&gt;EKS module&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can also publish your own module to &lt;a href="https://registry.terraform.io/browse/modules"&gt;Terraform registry&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Functions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Terraform comes with tons of functions from String functions like &lt;code&gt;join&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt; to FileSystem functions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Variables&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Variables can serve as input for resources, data sources, modules, functions, etc., and help us organize common config in a better way.&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="nx"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"bucket_name"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;type&lt;/span&gt;    &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
  &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"example-value"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Or a temporary local variable&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="nx"&gt;locals&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;random&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"hello"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Output in Terraform helps us define outputs we expect when our terraform script runs.&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="s2"&gt;"service_endpoint"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_apprunner_service&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;service&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;domain_name&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#commands"&gt;
  &lt;/a&gt;
  Commands
&lt;/h2&gt;

&lt;p&gt;Here are some important terraform commands we'll be using:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Init&lt;/strong&gt;&lt;br&gt;
Prepare and initialize our project&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Plan&lt;/strong&gt;&lt;br&gt;
Shows changes that'd be done by the configuration change&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apply&lt;/strong&gt;&lt;br&gt;
Applies our changes&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Destroy&lt;/strong&gt;&lt;br&gt;
Destroys all the resources in our configuration&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Terraform&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Terraform cli can be installed from &lt;a href="https://learn.hashicorp.com/tutorials/terraform/install-cli"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: HashiCorp also provides &lt;a href="https://hub.docker.com/r/hashicorp/terraform"&gt;terraform docker image&lt;/a&gt;, if you don't like installing extra dependencies&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Access&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We'll also need programmatic access and AWS CLI configured with our &lt;code&gt;AWS_ACCESS_KEY_ID&lt;/code&gt; and &lt;code&gt;AWS_SECRET_ACCESS_KEY&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can refer to my earlier article, where I cover AWS CLI installation in detail&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/karanpratapsingh" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3yTZfd0g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--QLkRPiF---/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/350819/b3e261fa-d88e-4cb4-80a2-233ab491af4e.jpg" alt="karanpratapsingh"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/karanpratapsingh/configuring-aws-cli-1b2a" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Configuring AWS CLI&lt;/h2&gt;
      &lt;h3&gt;Karan Pratap Singh „Éª Aug 11 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#aws&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#devops&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#hands-on"&gt;
  &lt;/a&gt;
  Hands on!
&lt;/h2&gt;

&lt;p&gt;Enough theory, now let's actually use what we learned and provision something. To keep things simple, we'll be provisioning&lt;br&gt;
a S3 bucket on AWS&lt;/p&gt;

&lt;p&gt;I'll create a &lt;code&gt;terraform&lt;/code&gt; directory with a &lt;code&gt;main.tf&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ mkdir terraform
$ touch main.tf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's define our AWS provider with our preferred region&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="nx"&gt;provider&lt;/span&gt; &lt;span class="s2"&gt;"aws"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;region&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"us-east-1"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a variable for our bucket name.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: make sure the bucket name is unique&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="nx"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"bucket_name"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;type&lt;/span&gt;    &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
  &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"sample-bucket"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Define our &lt;code&gt;aws_s3_bucket&lt;/code&gt; resource&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="nx"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_s3_bucket"&lt;/span&gt; &lt;span class="s2"&gt;"deploy_bucket"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;bucket&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;var&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bucket_name&lt;/span&gt;
  &lt;span class="nx"&gt;acl&lt;/span&gt;    &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"private"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add some output&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="s2"&gt;"s3_bucket_arn"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_s3_bucket&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;s3_bucket&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;arn&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's initialize our project&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E0lvyyue--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/29705703/128762282-91549ff5-93ff-4899-af7c-8f4a4af09c3a.png" class="article-body-image-wrapper"&gt;&lt;img alt="init" src="https://res.cloudinary.com/practicaldev/image/fetch/s--E0lvyyue--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/29705703/128762282-91549ff5-93ff-4899-af7c-8f4a4af09c3a.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great, our project has been initialized. Let's plan our changes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ terraform plan
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dH88DxUQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/29705703/128762288-ed5515f4-837d-4448-925b-8b60fb2a0ba8.png" class="article-body-image-wrapper"&gt;&lt;img alt="plan" src="https://res.cloudinary.com/practicaldev/image/fetch/s--dH88DxUQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/29705703/128762288-ed5515f4-837d-4448-925b-8b60fb2a0ba8.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Everything seems good, Let's apply&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ terraform apply
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2V46PPO4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/29705703/128762261-dece6d63-1923-4c95-8186-d12d0197d053.png" class="article-body-image-wrapper"&gt;&lt;img alt="apply" src="https://res.cloudinary.com/practicaldev/image/fetch/s--2V46PPO4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/29705703/128762261-dece6d63-1923-4c95-8186-d12d0197d053.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, let's cleanup our resources&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ terraform destroy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nyHA8BV3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/29705703/128762279-d1a12e61-d434-41ef-a51d-7024d6308473.png" class="article-body-image-wrapper"&gt;&lt;img alt="destroy" src="https://res.cloudinary.com/practicaldev/image/fetch/s--nyHA8BV3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/29705703/128762279-d1a12e61-d434-41ef-a51d-7024d6308473.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;In this article we covered Infrastructure as Code, it's approaches, benefits along with Terraform. I hope this was helpful and as always feel free to reach out on &lt;a href="https://twitter.com/karan_6864"&gt;twitter&lt;/a&gt; if you face any issues!&lt;/p&gt;

</description>
      <category>aws</category>
      <category>terraform</category>
      <category>devops</category>
      <category>beginners</category>
    </item>
    <item>
      <title>5 APIs to Develop Your Next Project</title>
      <author>Suraj Vishwakarma</author>
      <pubDate>Tue, 17 Aug 2021 12:39:33 +0000</pubDate>
      <link>https://dev.to/basecampxd/5-apis-to-develop-your-next-project-1de5</link>
      <guid>https://dev.to/basecampxd/5-apis-to-develop-your-next-project-1de5</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;I like the power of APIs. They turn simple applications into more useful, informative applications. I have been using APIs to turn my thoughts into a real-life problem-solving application by creating weather and Covid19 statistics web apps.&lt;/p&gt;

&lt;p&gt;You can develop some great applications with the use of the following APIs. &lt;/p&gt;

&lt;p&gt;So let's begin the list.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#api-football"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.api-football.com/"&gt;API Football&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;If you are a fan of a sport like a football, then it will be more fun and exciting to work on a project that deals with football data. API football provides tons of data including teams, fixtures, live scores, predictions, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XTCcAqrN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9tzjpywjjz1hwzbvgecz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XTCcAqrN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9tzjpywjjz1hwzbvgecz.png" alt="API Football"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#frankfurter"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.frankfurter.app/"&gt;Frankfurter&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Frankfurter provides current and historic foreign exchange rates. Rates are based on data published by the European Central Bank. It's totally free and does not require a key to fetch data. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rgXcvT7J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mug49ouynwatwpe4iev0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rgXcvT7J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mug49ouynwatwpe4iev0.png" alt="Frankfurter Currency data API"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#poke-api"&gt;
  &lt;/a&gt;
  &lt;a href="https://pokeapi.co/"&gt;Poke API&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;All Pok√©mon data at one place with poke API. We all know about Pok√©mon, we used to watch the show in our childhood and many even today. This API shows data of individual Pok√©mon.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nINhIlYw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gcr47bwd0a8dk4env6r1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nINhIlYw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gcr47bwd0a8dk4env6r1.png" alt="Poke API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use the data to develop games for pokemon lovers using the statistics. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#responsive-voice"&gt;
  &lt;/a&gt;
  &lt;a href="https://responsivevoice.org/api/"&gt;Responsive Voice&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Responsive Voice API lets you convert text into speech. You can change the voice model based on text and language. You can also modify pitch, rate, and volume.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nOG4pfVW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://techcrunch.com/wp-content/uploads/2017/08/speech-recognition.png%3Fw%3D730%26crop%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nOG4pfVW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://techcrunch.com/wp-content/uploads/2017/08/speech-recognition.png%3Fw%3D730%26crop%3D1" alt="Responsive Voice"&gt;&lt;/a&gt;&lt;br&gt;
image via &lt;a href="https://techcrunch.com/wp-content/uploads/2017/08/speech-recognition.png?w=730&amp;amp;crop=1"&gt;TechCrunch&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#themoviedb"&gt;
  &lt;/a&gt;
  &lt;a href="https://developers.themoviedb.org/3"&gt;TheMovieDB&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The MovieDB as the name suggests it has a database for movies. You can use their API to develop web app revolving around movies and TV shows. It's free to use API, you only need a The MovieDB account to use.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XTLvfXBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/67hhvclyreq5nq2wyymw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XTLvfXBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/67hhvclyreq5nq2wyymw.jpg" alt="TheMovieDB"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can develop a movie recommendation application using all the data.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#weekly-newsletter-of-surajondev"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.getrevue.co/profile/surajondev"&gt;Weekly Newsletter of SurajOnDev&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Time for &lt;a href="https://michelletanpy.hashnode.dev/what-ive-learnt-the-importance-of-self-promotion"&gt;self promotion&lt;/a&gt;. This is a weekly newsletter by myself.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cL1qWSEE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/boivc5mdfzzs2kt0s5wg.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cL1qWSEE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/boivc5mdfzzs2kt0s5wg.PNG" alt="Weekly Newsletter of SurajOnDev"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-you-will-get"&gt;
  &lt;/a&gt;
  What you will get?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Read of the Week&lt;/strong&gt;: 5 best articles hand-picked by myself from different platforms. This article will be developer, self-growth, and productivity-oriented.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tool of the Week&lt;/strong&gt;: A resource or tool link that will help in easing your work.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Our latest blog post&lt;/strong&gt;: Latest 3 blog post from SurajOnDev that is me.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Free eBook and Resources&lt;/strong&gt;: Occasionally you will get free eBook that are by developers and for developers.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Frequency&lt;/strong&gt;: Weekly&lt;br&gt;
&lt;strong&gt;Subscribe Here&lt;/strong&gt;:  &lt;a href="https://tripetto.app/run/4OQIUAO89L"&gt;Weekly Newsletter of SurajOnDev&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#last-note"&gt;
  &lt;/a&gt;
  Last Note
&lt;/h1&gt;

&lt;p&gt;These APIs will help you to develop the website and you can use the data to run scripts for more functionality.&lt;/p&gt;

&lt;p&gt;I hope you will create your next project using these APIs.&lt;/p&gt;

&lt;p&gt;Thanks for reading the blog post.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>python</category>
    </item>
    <item>
      <title>Learning with Self-Help</title>
      <author>John Phillips</author>
      <pubDate>Tue, 17 Aug 2021 12:36:00 +0000</pubDate>
      <link>https://dev.to/john_k_phillips/learning-with-self-help-o3d</link>
      <guid>https://dev.to/john_k_phillips/learning-with-self-help-o3d</guid>
      <description>&lt;p&gt;Let's start with introductions. &lt;br&gt;
Hi, I'm John Phillips.&lt;br&gt;
I'm an aspiring web developer.&lt;/p&gt;

&lt;p&gt;Like everyone else, I have many flaws, I embrace, resent and blame them. I'm not ashamed to discuss my "failures", or my "flaws", consequently the creation of this post.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;So, let's get started...&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-thoughts-on-selfhelp"&gt;
  &lt;/a&gt;
  My thoughts on "self-help".
&lt;/h2&gt;

&lt;p&gt;I've always &lt;strong&gt;HATED&lt;/strong&gt; self-help advice, still do actually.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why"&gt;
  &lt;/a&gt;
  Why?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Harmful Advice. ‚úÖ&lt;/li&gt;
&lt;li&gt;Empty Promises. ‚úÖ&lt;/li&gt;
&lt;li&gt;Egotistical Writers. ‚úÖ &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, this is a stern belief, I know, so why have I found my success in learning and believe it's an incredible approach to learning?&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#failures"&gt;
  &lt;/a&gt;
  Failures
&lt;/h3&gt;

&lt;p&gt;I've failed at too many things in life, &lt;em&gt;of course due to my &lt;br&gt;
own self-loathing&lt;/em&gt;. I struggle to continue working on topics I believed I wanted to understand.&lt;/p&gt;

&lt;p&gt;I had attempted web development several times over the course of a decade, and I'll say again, due to my &lt;strong&gt;OWN&lt;/strong&gt; self-loathing, decided to stop trying.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#the-blame"&gt;
  &lt;/a&gt;
  The Blame
&lt;/h4&gt;

&lt;p&gt;A few years had passed, blaming my 'compulsive nature' to abandon everything I work on, I found it easy to pick up and ditch projects...&lt;/p&gt;

&lt;p&gt;Of course, this blame game was an issue, it was an excuse that many of us make, taking pity on our-self's, temporarily making us feel good.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-resentment"&gt;
  &lt;/a&gt;
  The Resentment
&lt;/h4&gt;

&lt;p&gt;I resented my 'compulsive nature' and refused to learn anything else, believing it just wasn't my 'destiny' to be educated, successful or even happy.&lt;/p&gt;

&lt;p&gt;This was starting to become a problem.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#embracing-my-flaws"&gt;
  &lt;/a&gt;
  Embracing My Flaws
&lt;/h5&gt;

&lt;p&gt;On the 12th of August, 2021. I decided to stop self-loathing and actually solve this "problem" because that's all it was, a problem that required solving.&lt;/p&gt;

&lt;p&gt;I wanted to become a developer, however; I knew that this wasn't going to come to fruition unless I &lt;strong&gt;fixed&lt;/strong&gt; this problem I have.&lt;/p&gt;

&lt;p&gt;I delved into books, guides, blogs, videos you name it, attempting to solve this 'problem' and after a few months, I made progress.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The Problem
&lt;/h3&gt;

&lt;p&gt;This "advice" had given me a quick fix, these self-help guru's would talk about their stories of success, never actually explaining the pain, sacrifice and stress they took to get to their goals; hell, perhaps they fluked their success, but, this isn't going to happen, not to me, you or perhaps anyone else reading this.&lt;/p&gt;

&lt;p&gt;Following and believing in this advice was ruining my progress, my self-worth and my confidence. Blindly following these Guru's was just irresponsible and stupid, to be blunt. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#the-fix"&gt;
  &lt;/a&gt;
  The Fix
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;What pain do you want in your life?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This was a quote from a &lt;a href="https://www.audible.co.uk/pd/The-Subtle-Art-of-Not-Giving-a-F-ck-Audiobook/B01MG9416Z?source_code=M2M30DFT1BkSH101514006S&amp;amp;ipRedirectOverride=true&amp;amp;gclid=Cj0KCQjwvO2IBhCzARIsALw3ASp_st7hoPC00_Y4jynGH35DVg7X1v3wHkSIHS5S98Px5RgfDtb07DEaArk-EALw_wcB&amp;amp;gclsrc=aw.ds"&gt;book&lt;/a&gt; published &lt;a href="https://twitter.com/IAmMarkManson?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor"&gt;by Mark Manson.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mark is like the Ghost of Christmas. Brutally telling you how it is and not what you'd like it to be.&lt;/p&gt;

&lt;p&gt;This particular quote caught my attention, and I believe this is how I've failed and if you feel the same way, perhaps you are too.&lt;/p&gt;

&lt;p&gt;Mark explains that in life, everything has a sacrifice. Simply put; A house needs &lt;strong&gt;repairs&lt;/strong&gt;, A job comes with &lt;strong&gt;stress&lt;/strong&gt; and a relationship requires &lt;strong&gt;work&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Undoubtedly, you're happy to go through these 'pains' and that's exactly why you're untroubled by the thought of them; likewise with learning.&lt;/p&gt;

&lt;p&gt;I believe this is a great philosophy to follow. So far, It hasn't failed me, I am happy to go through the pain and struggles of being a developer and that's exactly why I'm still here; rather it is the pain I enjoy that has allowed me to continue my fight.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#wrapping-up-my-points"&gt;
  &lt;/a&gt;
  Wrapping Up My Points
&lt;/h3&gt;

&lt;p&gt;Ok... My points? This perhaps dragged on for far too long; however, I want to show you that what you're going through is common, especially for beginners, I still struggle even now, a year later.&lt;/p&gt;

&lt;p&gt;Following blindly to one guru is a waste of your time and effort, ensure you &lt;strong&gt;filter&lt;/strong&gt; the useful quotes and information that tailors to you.&lt;/p&gt;

&lt;p&gt;Self-help Guru's that try and give you a boost of encouragement are mostly doing what we call in retail 'customer satisfaction'.&lt;br&gt;
Don't fall into the same pitfalls I did and receive a burst of motivation.&lt;/p&gt;

&lt;p&gt;Solving your own personal issues is crucial to learning, if you find yourself continuing to blame a particular 'feature' of your character, then find a solution for it.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Easier said that done, for sure, I still struggle to this day, but after a year of struggles, my problem has become more of an asset and hence, embracing it.&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;NOTE: Re-reading this, I planned on leaving it unpublished; however, I will post it regardless of how I feel in hopes that it motivates someone to do something of similar nature.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;P.S This is my first blog, It's probably flawed, messy and not well structured. But, It's an attempt and something I aim to get better at.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading. Best of luck learning.&lt;/p&gt;

</description>
      <category>learning</category>
      <category>discuss</category>
      <category>webdev</category>
      <category>motivation</category>
    </item>
    <item>
      <title>2. Implement custom Omit Type in TypeScript</title>
      <author>Ajay kumbhare</author>
      <pubDate>Tue, 17 Aug 2021 12:14:09 +0000</pubDate>
      <link>https://dev.to/ajaykumbhare/2-implement-custom-omit-type-in-typescript-2i0g</link>
      <guid>https://dev.to/ajaykumbhare/2-implement-custom-omit-type-in-typescript-2i0g</guid>
      <description>&lt;h3&gt;
  &lt;a href="#implement-omitlttype-keysgt"&gt;
  &lt;/a&gt;
  Implement Omit&amp;lt;Type, Keys&amp;gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Constructs a type by picking all properties from Type and then removing Keys.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Todo&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;completed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you see the above interface it has 3 properties title, description, and completed. If you want to remove title key from that interface then you can use the Omit utility type. But here I am going to create a custom Omit type that will do the same thing as the Omit utility type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;CustomOmit&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;K&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;keyof&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Key&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;keyof&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Key&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;K&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;never&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you see the above code snippet which expects Type and Keys. Omit will only remove keys from the Type or Interface which we are passing that's why I have return &lt;code&gt;K extends keyof T&lt;/code&gt;. and later we just need to check key is available in K if it's available we will return never else will return keyValue pair.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;TodoPreview&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Omit&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Todo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;TodoPreviewCustomOmit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;CustomOmit&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Todo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above both snippets will work the same and it will pick all key/value except title key from Todo type.&lt;/p&gt;

&lt;p&gt;For Ex.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;TodoPreviewCustomOmit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;completed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more details please refer &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"&gt;official doc&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>How to make all developer heroes?</title>
      <author>Aurel</author>
      <pubDate>Tue, 17 Aug 2021 11:24:22 +0000</pubDate>
      <link>https://dev.to/lighta971/how-to-make-all-developer-heroes-195c</link>
      <guid>https://dev.to/lighta971/how-to-make-all-developer-heroes-195c</guid>
      <description>&lt;p&gt;As a CTO, I try to reduce "bus factor" and the "hero developer" problems.&lt;br&gt;
Why these are problems? Because to scale the team, knowledge needs to be scaled too.&lt;br&gt;
Scaling technical knowledge enable newcomers onboarding, deeper collaboration, and better quality development.&lt;/p&gt;

&lt;p&gt;So what stopped us to spread this knowledge?&lt;br&gt;
Well, in a pre-product market fit startup with a fast ever-changing environment&lt;br&gt;
the short-term cost of writing documentation is high.&lt;/p&gt;

&lt;p&gt;How did you tackle this problem? Or how did you see it tackled?&lt;/p&gt;

&lt;p&gt;Also, I bootstrapped a solution below, tell me your thoughts.&lt;br&gt;
&lt;a href="https://aurel.unstack.website/beta"&gt;https://aurel.unstack.website/beta&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>productivity</category>
      <category>documentation</category>
    </item>
  </channel>
</rss>
