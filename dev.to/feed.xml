<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How Useful PostgreSQL Primary Database for Your Online Taxi Service Business?</title>
      <author>georgedavid</author>
      <pubDate>Sat, 04 Sep 2021 13:55:01 +0000</pubDate>
      <link>https://dev.to/georgedavid02/how-useful-postgresql-primary-database-for-your-online-taxi-service-business-p9c</link>
      <guid>https://dev.to/georgedavid02/how-useful-postgresql-primary-database-for-your-online-taxi-service-business-p9c</guid>
      <description>&lt;p&gt;It is really important to choose a better database for taxi business online for smooth business sustaining. As every data transfer is the main key for digitized service provisions, having PostgreSQL accordingly would be much more effective.&lt;/p&gt;

&lt;p&gt;Following, let’s discuss the great assistance of PostgreSQL as a primary database for your taxi service business in real-time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#key-functions-of-primary-database-in-ondemand-taxi-business-online"&gt;
  &lt;/a&gt;
  Key Functions of Primary Database In On-demand Taxi Business Online
&lt;/h2&gt;

&lt;p&gt;The database is always crucial for any kind of on-demand business app creation. Depending on that only the complete mobile app through businesses runs at the greatest victories. It is not an exception to on-demand taxi booking service apps too. Following, the below described key functions play major roles in the taxi business in real-time.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Data Storage&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Right from the programmed coding to the complete service operation records would be perfectly stored in the selective database securely. As a result, the storage data assists the taxi service app to perform seamlessly in the users’ hands as per the respective commending.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Different Language Support&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Utilizing the supported coding languages, the programmers can design taxi apps in advance. The more advanced language support lets the developer quickly and improved taxi apps creation according to the clients’ satisfaction.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Data Output Showcase&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The created coding output reflections would be showcased at the users’ end for real business utility. Therefore, the launched taxi service app in real-time is being ready for the taxi-hailing service onboarding via the simple and effective internet platform solution.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Modulation Update&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In case of any upgrades or modulations that are required for app workflow improvement, it also lets developers make further changes smartly. The fast turn out of changed actions acquires an immediate presence at the app users' next new updates.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-choosing-postgresql-is-the-best-while-there-are-a-lot-of-others"&gt;
  &lt;/a&gt;
  Why Choosing PostgreSQL Is The Best While There Are A Lot Of Others?
&lt;/h2&gt;

&lt;p&gt;As the on-demand taxi business apps’ databases have a major role in purposes, concluding with the best SQL service is vital for business app creation. Taking into account this, PostgreSQL is the best when we compare it to any other databases in the development tech stack. In the following, you can find the reasons why choosing PostgreSQL is always the best.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Standard and Reliable Compliance&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;PostgreSQL has a highly advanced logging solution. The wide open-source database acquires a built-in support network. It offers ACID complaints too with complete support for foreign keys. And, additionally supports joins, triggers, stored procedures, and views in various languages.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Latest Language Support&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The immersive PostgreSQL database supports many leading programming languages. Therefore, the very latest could be used for app creation that is apt to the contemporary era. Following, its supported languages are listed below. &lt;/p&gt;

&lt;p&gt;Python&lt;br&gt;
.Net&lt;br&gt;
C/C++&lt;br&gt;
Java&lt;br&gt;
Golang&lt;br&gt;
Perl&lt;br&gt;
Ruby&lt;br&gt;
Tcl and ODBC&lt;/p&gt;

&lt;p&gt;&lt;em&gt;World’s Advanced Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As PostgreSQL has its most advanced open-source database management system, it could be simple to make improved up-gradation as regards. So an immediate output reaction happens for your program coding on the screen, a direct reflection of new modulations would be verified in a fraction of seconds.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Smart Management&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Though it has significant characteristics in-built for smart database management processes, the development side of workflow would be completely instant at any time. The less management in the entire progress, while business is carried out, offers a standard service provision without breaking.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-useful-postgresql-as-a-primary-database-for-business"&gt;
  &lt;/a&gt;
  How Useful PostgreSQL As A Primary Database for Business?
&lt;/h3&gt;

&lt;p&gt;The perfect open-source database contains several noteworthy advantages to the development end. So that building your taxi booking app for business or to the clients acquires a very smooth performance nature on the chosen marketplace online. To describe effectively, the following details assist further.&lt;/p&gt;

&lt;p&gt;It is completely free as well as open-source software, so that offering clients an affordable app development solution would be possible.&lt;/p&gt;

&lt;p&gt;PostgreSQL works fine with BI apps, in response, it is suited for Data Warehousing and Analysis apps that require speedy read-write capability. &lt;/p&gt;

&lt;p&gt;It comes out better in systems that are demanded with complex queries executions.&lt;/p&gt;

&lt;p&gt;As PostgreSQL is a LAMP stack option, it can work fantastic in dynamic website and app platforms.&lt;/p&gt;

&lt;p&gt;Its geographic object support lets developers build business apps with robust geolocation tracking systems. &lt;/p&gt;

&lt;p&gt;Also could be used as location-based service information storage as a geospatial data store.&lt;/p&gt;

&lt;p&gt;With the enhanced PostgreSQL open-source, it could be simply possible to have a more sophisticated locking mechanism. &lt;/p&gt;

&lt;p&gt;To the developers, it offers complete adaptability for a client-server network framework.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bottom-line"&gt;
  &lt;/a&gt;
  Bottom Line
&lt;/h3&gt;

&lt;p&gt;The smooth on-demand taxi service apps’ smooth functionality in the business area depends on the primary database selection as well as perfect design and output for service launching online. Considering this, choosing PostgreSQL for your new &lt;a href="https://www.spotnrides.com/"&gt;taxi booking app&lt;/a&gt; for business has possessed significant benefits for a winning ongoing.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>RPC Implementation in Go</title>
      <author>Karan Kumar </author>
      <pubDate>Sat, 04 Sep 2021 13:23:22 +0000</pubDate>
      <link>https://dev.to/karankumarshreds/go-rpc-implementation-4731</link>
      <guid>https://dev.to/karankumarshreds/go-rpc-implementation-4731</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-rpc"&gt;
  &lt;/a&gt;
  What is RPC?
&lt;/h2&gt;

&lt;p&gt;RPC (Remote Procedure Call) is an inter-process communication that exchanges information between various distrubuted systems (servers).&lt;br&gt;
It is a protocol that one program can use to request a service from a program located on some other node/server/computer/system on the network without having to udnerstand the network's details.&lt;/p&gt;

&lt;p&gt;In simple workds, a computer &lt;code&gt;A&lt;/code&gt; can &lt;strong&gt;call&lt;/strong&gt; a function(&lt;strong&gt;procedures&lt;/strong&gt;) in another computer &lt;code&gt;B&lt;/code&gt; &lt;strong&gt;remotely&lt;/strong&gt;. Hence, &lt;em&gt;Remote Procedure Call&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The basic steps for the entire process are as:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Client (system &lt;code&gt;A&lt;/code&gt;) decides the function name and arguments to send&lt;/li&gt;
&lt;li&gt;Client send the same to the &lt;code&gt;RPC Server&lt;/code&gt; by dialing the connection&lt;/li&gt;
&lt;li&gt;The RPC server receives the function name and arguments&lt;/li&gt;
&lt;li&gt;RPC server invokes/executes the function on the remote system &lt;code&gt;B&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;The client collects the data from the request&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As you can see, it is a &lt;code&gt;synchronous&lt;/code&gt; process.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cnrebdxe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awt1ugfwde533ookb0um.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cnrebdxe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awt1ugfwde533ookb0um.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Go provides a library for both &lt;strong&gt;RPC Server&lt;/strong&gt; and &lt;strong&gt;RPC Client&lt;/strong&gt;&lt;br&gt;
In the above diagram, the client sends the arguments and the reply pointer. Since it is a pointer, the server can modify it as per the request. The client will then use the data filled into the pointer.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#creating-an-rpc-server"&gt;
  &lt;/a&gt;
  Creating an RPC server
&lt;/h2&gt;

&lt;p&gt;Code for this blog can be found here &lt;a href="https://github.com/karankumarshreds/GoRPC"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let us now create an RPC server that will send the UTC server time to the RPC client. We will use &lt;code&gt;net/rpc&lt;/code&gt; and &lt;code&gt;net/http&lt;/code&gt; standard packages for this example.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; The RPC Server and RPC Client should agree upon:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Arguments passed&lt;/li&gt;
&lt;li&gt;Value Returned&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;And must have exactly same types for both server and client&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Let us create an &lt;code&gt;Args&lt;/code&gt; struct to hold the arguments received from the client and &lt;code&gt;TimeServer&lt;/code&gt; type using which we will register our function on RPC server for clients to run it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;Args&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;TimeServer&lt;/span&gt; &lt;span class="kt"&gt;int64&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us create the &lt;code&gt;GiveTimeServer&lt;/code&gt; function which will be invoked from the client.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;TimeServer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;GiveServerTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;Args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;reply&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="kt"&gt;int64&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;// Set the value at the pointer got from the client&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;reply&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Unix&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us register the methods listening on type TimeServer on the RPC server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="c"&gt;/* server.go */&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;timeserver&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TimeServer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;// Register the timeserver object upon which the GiveServerTime&lt;/span&gt;
    &lt;span class="c"&gt;// function will be called from the RPC server (from the client)&lt;/span&gt;
    &lt;span class="n"&gt;rpc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timeserver&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;// Registers an HTTP handler for RPC messages&lt;/span&gt;
    &lt;span class="n"&gt;rpc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HandleHTTP&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="c"&gt;// Start listening for the requests on port 1234&lt;/span&gt;
    &lt;span class="n"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"tcp"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;":1234"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fatal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Listener error: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c"&gt;// Serve accepts incoming HTTP connections on the listener l, creating&lt;/span&gt;
    &lt;span class="c"&gt;// a new service goroutine for each. The service goroutines read requests&lt;/span&gt;
    &lt;span class="c"&gt;// and then call handler to reply to them&lt;/span&gt;
    &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Serve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it from the server side.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#creating-an-rpc-client"&gt;
  &lt;/a&gt;
  Creating an RPC client
&lt;/h2&gt;

&lt;p&gt;We will create the struct for Args (its empty in this example). And a &lt;code&gt;reply&lt;/code&gt; variable which must have SAME type as that of server.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="c"&gt;/* client.go */&lt;/span&gt;

&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"log"&lt;/span&gt;
    &lt;span class="s"&gt;"net/rpc"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;Args&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;// Address to this variable will be sent to the RPC server&lt;/span&gt;
    &lt;span class="c"&gt;// Type of reply should be same as that specified on server&lt;/span&gt;
    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;reply&lt;/span&gt; &lt;span class="kt"&gt;int64&lt;/span&gt;
    &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Args&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;

    &lt;span class="c"&gt;// DialHTTP connects to an HTTP RPC server at the specified network&lt;/span&gt;
    &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;rpc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DialHTTP&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"tcp"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"localhost"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;":1234"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fatal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Client connection error: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;// Invoke the remote function GiveServerTime attached to TimeServer pointer&lt;/span&gt;
    &lt;span class="c"&gt;// Sending the arguments and reply variable address to the server as well&lt;/span&gt;
    &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"TimeServer.GiveServerTime"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fatal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Client invocation error: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;// Print the reply from the server&lt;/span&gt;
    &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That was pretty straight forward. We just created a client and connected it to the host and port on which server is listening on.&lt;/p&gt;

&lt;p&gt;Then we used the Call function to invoke a function tied to the TimeServer type and passed in &lt;code&gt;args&lt;/code&gt; and &lt;code&gt;&amp;amp;reply&lt;/code&gt; pointer.&lt;/p&gt;

&lt;p&gt;Now let us start the &lt;code&gt;server.go&lt;/code&gt; program.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ go run server.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us start the &lt;code&gt;client.go&lt;/code&gt; program and as soon as we do that, we will see the server's reply of it's current UTC time:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ go run client.go
2021/09/04 18:36:37 1630760797 // 👈
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it. It's that simple. I hope you guys understood how the client and server connection works via RPC server. In future blogs, we will dive deeper into the same topic and cover more on RPC and also GRPC.&lt;/p&gt;

&lt;p&gt;Code for this blog can be found here &lt;a href="https://github.com/karankumarshreds/GoRPC"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

</description>
      <category>go</category>
      <category>discuss</category>
      <category>rpc</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to visualize data categories in python with pandas</title>
      <author>Code_Jedi</author>
      <pubDate>Sat, 04 Sep 2021 12:49:20 +0000</pubDate>
      <link>https://dev.to/code_jedi/how-to-visualize-data-categories-in-python-with-pandas-2pgn</link>
      <guid>https://dev.to/code_jedi/how-to-visualize-data-categories-in-python-with-pandas-2pgn</guid>
      <description>&lt;p&gt;&lt;strong&gt;If you have a dataset which is divided into categories of data like: kickstarter projects, flower species or most popular car brands, then it's a good idea to visualize those data categories to see the amount of values within each category.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here's a dataset of over 300,000 kickstarter projects as well as their categories, goal, No. of backers and much more: &lt;a href="https://www.kaggle.com/kemical/kickstarter-projects"&gt;https://www.kaggle.com/kemical/kickstarter-projects&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When looking at the dataset, you would notice that every one of those 300,000+ projects are put into different categories such as: Games, Music, Art and Technology.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;To make a python script that will display each category as a fraction of a donut plot based on the number of projects belonging to it, first add the necessary libraries and load in the dataset:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import pandas as pd 
import matplotlib.pyplot as plt
import seaborn as sns

data = pd.read_csv('ks-projects.csv')

df = pd.DataFrame(data)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, to get the number of projects within each category, add this line of code to your script:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;category_values = df.pivot_table(columns=['main_category'], aggfunc='size')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now to display "category_values" in a doughnut graph, add this to the end of your script:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;plt.pie(category_values)
my_circle=plt.Circle( (0,0), 0.7, color='white')
p=plt.gcf()
p.gca().add_artist(my_circle)

plt.show()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now if you run your script, your doughnut plot should look something like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sEBf8Das--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khj02w0p1fyje0e0gtqy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sEBf8Das--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khj02w0p1fyje0e0gtqy.png" alt="Donut!"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, it displays the amount of projects within each category as a fraction of the doughnut plot, but it doesn't label the categories.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;To label the categories, add these lines of code before your doughnut plot:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;category_names = data['main_category']
categories = category_names.unique()
categories.sort()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will count the number of unique category names within the dataset and sort them in alphabetical order.&lt;/p&gt;

&lt;p&gt;The reason for sorting them in alphabetical order is because the category values we defined earlier are ordered alphabetically( first value is Art: 28153 and last value is Theater: 10913).&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Now to display the doughnut plot with its corresponding labels, replace&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;plt.pie(category_values)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;with&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;plt.pie(category_values, labels=categories)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Full code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import pandas as pd 
import matplotlib.pyplot as plt
import seaborn as sns

data = pd.read_csv('ks-projects.csv')

df = pd.DataFrame(data)
category_values = df.pivot_table(columns=['main_category'], aggfunc='size')

category_names = data['main_category']
categories = category_names.unique()
categories.sort()
plt.pie(category_values, labels=categories)

my_circle=plt.Circle( (0,0), 0.7, color='white')
p=plt.gcf()
p.gca().add_artist(my_circle)
plt.show()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#now-if-your-run-your-script-you-should-see-a-doughnut-plot-that-displays-the-fraction-of-projects-each-category-contains-as-well-as-the-categories-labels"&gt;
  &lt;/a&gt;
  Now if your run your script, you should see a doughnut plot that displays the fraction of projects each category contains, as well as the categories' labels:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ML-BlL5c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3294ypluwvi6y3b3vsjp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ML-BlL5c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3294ypluwvi6y3b3vsjp.png" alt="Donut with labels"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>datascience</category>
      <category>machinelearning</category>
      <category>programming</category>
    </item>
    <item>
      <title>Today's Daily Humor For Devs - Daily Developer Jokes</title>
      <author>Daily Developer Jokes</author>
      <pubDate>Sat, 04 Sep 2021 12:00:18 +0000</pubDate>
      <link>https://dev.to/dailydeveloperjokes/today-s-daily-humor-for-devs-daily-developer-jokes-51no</link>
      <guid>https://dev.to/dailydeveloperjokes/today-s-daily-humor-for-devs-daily-developer-jokes-51no</guid>
      <description>&lt;p&gt;Hi there! Here's today's Daily Developer Joke. We hope you enjoy it; it's a good one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WNd0-G0j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://private.xtrp.io/projects/DailyDeveloperJokes/public_image_server/images/5e12591b4fccd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WNd0-G0j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://private.xtrp.io/projects/DailyDeveloperJokes/public_image_server/images/5e12591b4fccd.png" alt="Joke Image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;For more jokes, and to submit your own joke to get featured, check out the &lt;a href="https://dailydeveloperjokes.github.io/"&gt;Daily Developer Jokes Website&lt;/a&gt;. We're also open sourced, so feel free to view &lt;a href="https://github.com/dailydeveloperjokes"&gt;our GitHub Profile&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#leave-this-post-a-if-you-liked-todays-joke-and-stay-tuned-for-tomorrows-joke-too"&gt;
  &lt;/a&gt;
  Leave this post a ❤️ if you liked today's joke, and stay tuned for tomorrow's joke too!
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;This joke comes from &lt;a href="https://github.com/wesbos/dad-jokes"&gt;Dad-Jokes GitHub Repo by Wes Bos&lt;/a&gt; (thank you!), whose owner has given me permission to use this joke with credit.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>jokes</category>
      <category>dailydeveloperjokes</category>
    </item>
    <item>
      <title>Html to render function</title>
      <author>Shaked</author>
      <pubDate>Sat, 04 Sep 2021 11:49:18 +0000</pubDate>
      <link>https://dev.to/shaked46763744/html-to-render-function-59d2</link>
      <guid>https://dev.to/shaked46763744/html-to-render-function-59d2</guid>
      <description>&lt;p&gt;Hey, my name is Shaked, and I want to tell you how to convert boring HTML to Vue/react render function. &lt;br&gt;
There is often this issue with legacy content or content you want to load in general, which has an HTML format, and as we all know, neither Vue nor Rack likes to load HTML directly. Both frameworks can do it; for instance, Vue/Nuxt has v-html, which can let you place html inside, but the issue with that is security and bad practice. Also, you are kind of out of luck if you want to modify HTML on the fly; for example, you want to change all A tags to be a nuxt-link tag or change the links that have Twitter inside in the href of the tag to be twitter-component to load your custom component. &lt;br&gt;
So I built a solution; &lt;a href="https://github.com/1shaked/render-function-from-html"&gt;here is the git repo&lt;/a&gt;&lt;br&gt;
This repository has a couple of files. The first is a python docker container which will help you convert the content. &lt;em&gt;This container is a flask server that runs a miniature python version&lt;/em&gt;.&lt;br&gt;
This server/container will start from the app.py file.&lt;br&gt;
There is an HTML example and JSON file to show the result. Also, a Vue file to show you an example of how to use it. Please note that in the Vue example, I am using Vuex to get the content, but you can pass it anyway to like props, etc. &lt;br&gt;
So let's see the code here&lt;br&gt;
app.py&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'POST'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;cross_origin&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="c1"&gt;# html_content is a string 
&lt;/span&gt;    &lt;span class="n"&gt;html_content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'html'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HtmlConverter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;initWithHtml&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html_content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"success"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Successfully got render func."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;soupToJson&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"error"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"can not convert this to render func"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So very simple flask server getting the post html parameter and convert it using my custom HtmlConverter object. to more info about this object go to &lt;a href="https://github.com/1shaked/render-function-from-html/blob/main/convertor.py"&gt;https://github.com/1shaked/render-function-from-html/blob/main/convertor.py&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vue example with render function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;imgComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Image&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;videoComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Video&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;audioComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Audio&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;youtubeComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Youtube&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;twitterComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Twitter&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;facebookComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Facebook&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;taboolaComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;~/components/taboola&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;img-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;imgComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;video-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;videoComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;audio-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;audioComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;youtube-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;youtubeComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;twitter-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;twitterComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;facebook-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;facebookComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;taboola-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;taboolaComponent&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;computed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;mapState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;articles&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;content&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;handleContent&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="k"&gt;instanceof&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="c1"&gt;// console.log('%c currentElement: ' + el.tag + ' attrs: ' + el.attrs + ' content: ' + el.content, 'color: green; font-weight: bold')&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt; &lt;span class="k"&gt;instanceof&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;attrs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attrs&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="cm"&gt;/* style: { order: '1' } */&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleContent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tag&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iframe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
            &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;www.facebook.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;facebook-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tag&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;img&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;click&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// add custom event&lt;/span&gt;
              &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tag&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;span&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// create copy to avoid error in reactive node&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleContent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>vue</category>
      <category>react</category>
      <category>html</category>
      <category>python</category>
    </item>
    <item>
      <title>Sync fork with the original repository using git</title>
      <author>Isabel Costa</author>
      <pubDate>Sat, 04 Sep 2021 11:38:58 +0000</pubDate>
      <link>https://dev.to/isabelcmdcosta/sync-fork-with-original-repository-using-git-21ap</link>
      <guid>https://dev.to/isabelcmdcosta/sync-fork-with-original-repository-using-git-21ap</guid>
      <description>&lt;p&gt;When you want to contribute to an open source repository, you usually &lt;a href="https://docs.github.com/en/get-started/quickstart/fork-a-repo"&gt;fork a repository&lt;/a&gt; so you can do your changes and later submit them via a pull request. After forking the repository on GitHub, and cloning it into your local environment - &lt;code&gt;git clone &amp;lt;forked repository url&amp;gt;&lt;/code&gt; - the repository will have a remote URL setup, usually named &lt;code&gt;origin&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can also do this using GitHub web user interface. Check &lt;a href="https://docs.github.com/en/github/collaborating-with-pull-requests/working-with-forks/syncing-a-fork"&gt;out the docs&lt;/a&gt;! I already mostly use this option, but it’s always useful to know the basics of doing this with git.&lt;/p&gt;

&lt;p&gt;To use as an example, I forked &lt;a href="https://github.com/anitab-org/documentation"&gt;anitab-org/documentation&lt;/a&gt; repository into my GitHub account &lt;a href="https://github.com/isabelcosta/documentation"&gt;isabelcosta/documentation&lt;/a&gt;. When &lt;strong&gt;cloning the repository I &lt;a href="https://docs.github.com/en/get-started/getting-started-with-git/about-remote-repositories#about-remote-repositories"&gt;used the SSH URL&lt;/a&gt; of my forked repository.&lt;/strong&gt; The commands I’ll mention will be running against the repository’s default &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt;

&lt;p&gt;First, &lt;strong&gt;check what remote URLs your project has set up&lt;/strong&gt; with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git remote -v
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here the &lt;code&gt;origin&lt;/code&gt; configuration will have the URL where your forked project is on GitHub (notice that my &lt;code&gt;isabelcosta&lt;/code&gt; account username is there). I am also inside the root directory of the local clone of my forked repository.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~/dev/documentation &amp;gt; git remote -v
origin  git@github.com:isabelcosta/documentation.git (fetch)
origin  git@github.com:isabelcosta/documentation.git (push)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can &lt;strong&gt;add the new remote repository link to your remotes&lt;/strong&gt;. The &lt;code&gt;upstream&lt;/code&gt; keyword is an alias for the original repository remote URL (replace &lt;code&gt;&amp;lt;url of original repository&amp;gt;&lt;/code&gt; with this URL). You can pick another alias if you prefer.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git remote add upstream &amp;lt;url of original repository&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that in this case, the link is pointing to &lt;code&gt;anitab-org&lt;/code&gt; account - where the repository was originally forked from):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~/dev/documentation &amp;gt; git remote add upstream git@github.com:anitab-org/documentation.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To &lt;strong&gt;confirm the remote repositories you have set up&lt;/strong&gt;, the new &lt;code&gt;upstream&lt;/code&gt; repository configuration should be there.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~/dev/documentation &amp;gt; git remote -v
origin  git@github.com:isabelcosta/documentation.git (fetch)
origin  git@github.com:isabelcosta/documentation.git (push)
upstream    git@github.com:anitab-org/documentation.git (fetch)
upstream    git@github.com:anitab-org/documentation.git (push)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With this setup, you can now &lt;strong&gt;sync your repository locally&lt;/strong&gt; using pull/fetch code from the original repository. Here’s an example where I am pulling code from the original repository into my fork’s &lt;code&gt;master&lt;/code&gt; branch:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~/dev/documentation &amp;gt; git pull upstream master
From github.com:anitab-org/documentation
 * branch            master     -&amp;gt; FETCH_HEAD
   85f3fdc..5854a22  master     -&amp;gt; upstream/master
Already up to date.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After updating my local branch, I usually also &lt;strong&gt;update the fork on GitHub.&lt;/strong&gt; I push the new commits pulled from &lt;code&gt;upstream&lt;/code&gt; to my &lt;code&gt;origin&lt;/code&gt; forked repository (using the same &lt;code&gt;master&lt;/code&gt; branch):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~/dev/documentation &amp;gt; git push origin master
Everything up-to-date
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#commands-summary"&gt;
  &lt;/a&gt;
  Commands summary
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Check remotes: &lt;code&gt;git remote -v&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Add a new remote: &lt;code&gt;git remote add upstream &amp;lt;original repository url&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Sync local repository: &lt;code&gt;git pull upstream &amp;lt;branch&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Update remote forked repo: &lt;code&gt;git push origin &amp;lt;branch&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>git</category>
      <category>github</category>
      <category>beginners</category>
    </item>
    <item>
      <title>The CSS position property</title>
      <author>Ravi kumar</author>
      <pubDate>Sat, 04 Sep 2021 11:33:37 +0000</pubDate>
      <link>https://dev.to/ravikumar1002/the-css-position-property-495c</link>
      <guid>https://dev.to/ravikumar1002/the-css-position-property-495c</guid>
      <description>&lt;p&gt;The position property specifies the type of positioning method used for an element and by position property we can manipulate the location of an element.&lt;br&gt;
These are type of position value :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;static&lt;/li&gt;
&lt;li&gt;relative&lt;/li&gt;
&lt;li&gt;absolute&lt;/li&gt;
&lt;li&gt;fixed&lt;/li&gt;
&lt;li&gt;sticky&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And also global values like &lt;code&gt;inherit&lt;/code&gt; , &lt;code&gt;initial&lt;/code&gt;, &lt;code&gt;revert&lt;/code&gt;, &lt;code&gt;unset&lt;/code&gt;  can also be applied to position property&lt;/p&gt;

&lt;p&gt;Let's talk about each position values one by one :)&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#-raw-static-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;static&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;position: static;&lt;/code&gt;&lt;br&gt;
 &lt;code&gt;static&lt;/code&gt; in the default position and it's position according to the normal flow of the page. In static  &lt;code&gt;top&lt;/code&gt;/&lt;code&gt;bottom&lt;/code&gt;/&lt;code&gt;left&lt;/code&gt;/&lt;code&gt;right&lt;/code&gt;/&lt;code&gt;z-index&lt;/code&gt; property has no effect.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ravikumar1002/embed/dyRXORg?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-raw-relative-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;relative&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;position : relative;&lt;/code&gt;&lt;br&gt;
  It behaves like a static but when we apply on of these property  &lt;code&gt;top&lt;/code&gt;/&lt;code&gt;bottom&lt;/code&gt;/&lt;code&gt;left&lt;/code&gt;/&lt;code&gt;right&lt;/code&gt;/&lt;code&gt;z-index&lt;/code&gt; then element will flow according to these CSS properties.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ravikumar1002/embed/VwWjpWz?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-raw-absolute-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;absolute&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;position : absolute;&lt;/code&gt; &lt;br&gt;
The element is removed from the normal document flow and is relatively positioned to its first non-static ancestor. Its final position is confirm by the values of &lt;code&gt;top&lt;/code&gt;/&lt;code&gt;bottom&lt;/code&gt;/&lt;code&gt;left&lt;/code&gt;/&lt;code&gt;right&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ravikumar1002/embed/abwZJMW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-raw-fixed-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;fixed&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;position : fixed;&lt;/code&gt; &lt;br&gt;
The element is removed from the normal document flow like absolutely positioned elements. In fact they behave almost the same, only fixed positioned elements are always relative to the viewport, not any particular parent, and are unaffected by scrolling.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ravikumar1002/embed/jOwrBZj?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-raw-sticky-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;sticky&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;position : sticky;&lt;/code&gt; &lt;br&gt;
The element is positioned based on the user's scroll position. A &lt;code&gt;sticky&lt;/code&gt; element toggles between &lt;code&gt;relative&lt;/code&gt; and &lt;code&gt;fixed&lt;/code&gt;, depending on the scroll position. It is positioned relative until a given offset position is met in the viewport - then it "sticks" in place (like position:fixed).&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ravikumar1002/embed/XWgKRWM?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>css</category>
      <category>position</category>
      <category>design</category>
    </item>
    <item>
      <title>Management of emotional intelligence in times of Coronavirus</title>
      <author>Jacqueline R. Swearingen</author>
      <pubDate>Sat, 04 Sep 2021 11:19:00 +0000</pubDate>
      <link>https://dev.to/real-iq-test/management-of-emotional-intelligence-in-times-of-coronavirus-3l7h</link>
      <guid>https://dev.to/real-iq-test/management-of-emotional-intelligence-in-times-of-coronavirus-3l7h</guid>
      <description>&lt;p&gt;Tony Schwartz &lt;a href="https://en.wikipedia.org/wiki/Tony_Schwartz_(author)"&gt;1&lt;/a&gt; and Emily Pines &lt;a href="https://judges.newyorklawjournal.com/profile/Emily_Pines/Emily_Pines-869.xml"&gt;2&lt;/a&gt; are the owner and CEO of “The Energy Project” respectively. This is an international consulting firm dedicated to business development through the proper management of human talent and skills. And both maintain that:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Negative attitudes such as tiredness, fear, and stress that are transferred to the environment are as or more contagious than COVID-19. (Tony Schwartz and Emily Pines)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In addition, they ensure that human beings have 2 ways of facing the situations that arise: the infantile and the adult.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Our childish side is associated with vulnerability and fear; while on the other hand,&lt;/li&gt;
&lt;li&gt;the adult implies serenity and reasoning, to keep our childish side under control.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this sense, what our adult profile uses to control our child side is emotional intelligence.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#survival-in-times-of-quarantine"&gt;
  &lt;/a&gt;
  Survival in times of quarantine
&lt;/h2&gt;

&lt;p&gt;We are living in a very unusual and somewhat chaotic situation, due to the new Coronavirus. For these times of social isolation, it is important to have the ability to cope with the uncertainty of tomorrow. The news, and in general, the vast majority of the media, share information that generates fear and stress in the population. The worst thing is that in many cases it is fake or sensational news.&lt;/p&gt;

&lt;p&gt;We must be able to not lose control and properly manage our emotions. This environment of negativity affects us all to a greater or lesser extent. So we talk about living a time of survival. For the most part, human beings tend to act reactively, living day by day, without carrying out an analysis of pros and cons when making decisions. Adequate survival in these times involves taking time for reflection and developing an optimistic point of view in each situation. Hoping for a better situation for our future is what is known as hope, and it is what a human being should never lose.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-alternatives-do-we-have"&gt;
  &lt;/a&gt;
  What alternatives do we have?
&lt;/h2&gt;

&lt;p&gt;An important first step to take into account on this survival path is: recognize our emotions. We must be able to name them and be aware of them.&lt;br&gt;
Since keeping them hidden and unrecognizable can lead us to act negatively and in the worst case have a nervous breakdown. In short, we must allow our adult side to take control, and not fall into irrationalities.&lt;br&gt;
In addition, we must focus on what we can manage. For example:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Avoid falling into compulsive purchases due to panic. On the contrary: stock up in a measured way.&lt;/li&gt;
&lt;li&gt;Focusing on things we can do at home is the key.&lt;/li&gt;
&lt;li&gt;Take breaks and avoid watching TV and social networks at all times (they usually show us negative news repeatedly).&lt;/li&gt;
&lt;li&gt;Hearing daily and repeatedly talking about Coronaviruses and hospital collapses is undeniably detrimental to our mental health.&lt;/li&gt;
&lt;li&gt;Try to carry out those activities that you left pending; like reading a book, learning a new language, starting to blog about positive stories and anecdotes.&lt;/li&gt;
&lt;li&gt;Organize your ideas, set goals, schedule times, get organized.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Nowadays it is easy to find guides on the internet about all kinds of activities.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Look for the bright side of this situation.&lt;/li&gt;
&lt;li&gt;Connect with yourself and your family.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#do-you-want-to-support-those-who-matter-to-you"&gt;
  &lt;/a&gt;
  Do you want to support those who matter to you?
&lt;/h2&gt;

&lt;p&gt;Take an interest in the mood of your family, your loved ones, even your team. We can join that great group of people who fight day by day to get ahead, and without leaving home.&lt;/p&gt;

&lt;p&gt;Spend some time before each meeting, lunch or dinner to ask how everyone feels, about what is happening. What do you have in mind, what challenges or goals have you set?&lt;/p&gt;

&lt;p&gt;Try to recognize their fears and feelings. The moments of crisis are a great opportunity to create bonds of trust.&lt;/p&gt;

&lt;p&gt;Although we find ourselves in a difficult situation and uncertainty, let us remain correct and bear in mind that:&lt;/p&gt;

&lt;p&gt;Throughout its history, the world has gone through many equal or worse situations. And all of them have left us lessons.&lt;/p&gt;

&lt;p&gt;This will not be the exception. Unexpected situations, which no expert has been able to predict, are opportunities to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Demonstrate our ingenuity,&lt;/li&gt;
&lt;li&gt;Learn from them as much as we can, and&lt;/li&gt;
&lt;li&gt;Be part of the positive change.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Remember that according to many experts: intelligence is the ability to adapt over time and survive. This implies anticipating crises, otherwise learning from them.&lt;/p&gt;

&lt;p&gt;Immanuel Kant said well:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The intelligence of an individual is measured by the amount of uncertainties that he is able to bear.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So: Given the international situation, and the great changes in the economy, in addition to the new types of work that are emerging, we live in a time of great uncertainty.&lt;/p&gt;

&lt;p&gt;The future is uncertain and unpredictable. But if we can’t be very objective, isn’t it better to keep our minds positive?&lt;br&gt;
We can affirm that today new levels of uncertainty are being reached worldwide.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;What are we doing accordingly? Are we humans smart enough?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Assess your IQ in no time → Take &lt;a href="https://iqcertificate.org/real-iq-test"&gt;Real IQ Test!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>discuss</category>
      <category>intelligence</category>
      <category>coronavirus</category>
    </item>
    <item>
      <title>Databases: Important Theoretical Concepts</title>
      <author>Fahid Latheef A</author>
      <pubDate>Sat, 04 Sep 2021 11:13:25 +0000</pubDate>
      <link>https://dev.to/fahidlatheef/databases-important-theoretical-concepts-4nll</link>
      <guid>https://dev.to/fahidlatheef/databases-important-theoretical-concepts-4nll</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In the previous &lt;a href="https://dev.to/fahidlatheef/basic-sql-concepts-pn8"&gt;episode&lt;/a&gt;, I discussed the important SQL Statements/Keywords that are useful for day-to-day SQL use. In today's episode, I will try to explain few important Database Concepts that will boost our understanding even further.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#transactions"&gt;
  &lt;/a&gt;
  Transactions
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Transaction&lt;/code&gt; is a fundamental concept of all database systems. It bundles multiple steps into a single, all-or-nothing operation. The intermediate states between the steps are not visible to other concurrent transactions, and if some failure occurs that prevents the transaction from completing, then none of the steps affects the database at all.&lt;/p&gt;

&lt;p&gt;Transactions can be further tuned by BEGIN, COMMIT and ROLLBACK operations.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#begin"&gt;
  &lt;/a&gt;
  BEGIN
&lt;/h3&gt;

&lt;p&gt;Each transaction is explicitly initiated using &lt;code&gt;BEGIN TRAN&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#commit"&gt;
  &lt;/a&gt;
  COMMIT
&lt;/h3&gt;

&lt;p&gt;By using &lt;code&gt;COMMIT TRAN&lt;/code&gt;, a transaction is closed explicitly and modifications performed by the transaction are made permanent.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rollback"&gt;
  &lt;/a&gt;
  ROLLBACK
&lt;/h3&gt;

&lt;p&gt;By using &lt;code&gt;ROLLBACK TRAN&lt;/code&gt;, a transaction is explicitly closed and any modifications made by the transaction is discarded.&lt;/p&gt;

&lt;p&gt;Each Transaction should follow &lt;code&gt;ACID&lt;/code&gt; rules.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#acid"&gt;
  &lt;/a&gt;
  ACID
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;ACID&lt;/strong&gt; stands for &lt;strong&gt;Atomicity, Consistency, Isolation and Durability&lt;/strong&gt;. This describes a set of properties that apply to data transactions. For a reliable database, all these four attributes should be achieved.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#atomicity"&gt;
  &lt;/a&gt;
  Atomicity
&lt;/h3&gt;

&lt;p&gt;Atomicity is also known as the "All or nothing rule". It means that either the entire transaction takes place at once or doesn’t happen at all. There aren't any partial transactions. Hence it is known as the "All or nothing rule".&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#consistency"&gt;
  &lt;/a&gt;
  Consistency
&lt;/h3&gt;

&lt;p&gt;It says that the database should be consistent before and after the transaction (Data types, triggers, constraints, etc). It refers to the correctness of a database. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#isolation"&gt;
  &lt;/a&gt;
  Isolation
&lt;/h3&gt;

&lt;p&gt;This property says that the transactions occur independently without interference. This property ensures that the execution of transactions concurrently will result in a state that is equivalent to a state achieved these were executed serially in some order.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#durability"&gt;
  &lt;/a&gt;
  Durability
&lt;/h3&gt;

&lt;p&gt;It says that once the transaction is saved or committed, it can’t be “lost”. Data won’t go missing after a power outage or system crash.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#locking-mechanism"&gt;
  &lt;/a&gt;
  LOCKING MECHANISM
&lt;/h2&gt;

&lt;p&gt;Locking is designed to allow SQL Server to work seamlessly in a multi-user environment. Locking is the way that SQL Server manages transaction concurrency.&lt;/p&gt;

&lt;p&gt;While objects are locked, SQL Server will prevent other transactions from making any change of data stored in objects affected by the imposed lock. Once the lock is released by committing the changes or by rolling back changes to the initial state, other transactions will be allowed to make required data changes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cap-theorem"&gt;
  &lt;/a&gt;
  CAP THEOREM
&lt;/h2&gt;

&lt;p&gt;CAP Theorem (aka Eric Brewer Theorem) states that we cannot build a general data store that is continually available, sequentially consistent and tolerant to any partition failures. We can only achieve 2 features out of these 3.​ A combination of 2 must be chosen and this is usually the deciding factor in what technology is used.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Consistency&lt;/strong&gt; - All the servers in the system will have the same data so users will get the same copy regardless of which server answers their request.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Availability&lt;/strong&gt; - The system will always respond to a request (even if it's not the latest data or consistent across the system or just a message saying the system isn't working).&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Partition Tolerance&lt;/strong&gt; - The system continues to operate as a whole even if individual servers fail or can't be reached.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fhDc1xmx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://shishirkumarblog.files.wordpress.com/2019/05/cap-theorem.png" alt="enter image description here"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#triggers"&gt;
  &lt;/a&gt;
  TRIGGERS
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Trigger:&lt;/strong&gt; A trigger is a stored procedure in a database that automatically invokes whenever a special event in the database occurs. For example, a trigger can be invoked when a row is inserted into a specified table or when certain table columns are being updated.&lt;/p&gt;

&lt;p&gt;Triggers can be run BEFORE or AFTER the triggering statement.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sql-normalization"&gt;
  &lt;/a&gt;
  SQL NORMALIZATION
&lt;/h2&gt;

&lt;p&gt;It is the process of structuring a database, following a series of &lt;code&gt;Normal Forms&lt;/code&gt; to reduce data redundancy and improve data integrity.&lt;/p&gt;

&lt;p&gt;Without Normalization in SQL, we may face many issues such as&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;strong&gt;Insertion anomaly&lt;/strong&gt;: It occurs when we cannot insert data to the table without the presence of another attribute&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Update anomaly&lt;/strong&gt;: It is a data inconsistency that results from data redundancy and a partial update of data.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Deletion Anomaly&lt;/strong&gt;: It occurs when certain attributes are lost because of the deletion of other attributes.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Some &lt;a href="https://www.edureka.co/blog/normalization-in-sql/"&gt;examples&lt;/a&gt; of Normal Forms are 1NF, 2NF, 3NF, BCNF, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#database-isolation-levels"&gt;
  &lt;/a&gt;
  DATABASE ISOLATION LEVELS
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Database Isolation levels&lt;/strong&gt; control the degree of locking that occurs when selecting data.  This is to prevent reads and writes of temporary, aborted, or otherwise incorrect data written by concurrent transactions. For many database applications, the majority of database transactions can be constructed using isolation level priority rules, reducing the locking overhead for the system.&lt;/p&gt;

&lt;p&gt;These are the &lt;a href="https://en.wikipedia.org/wiki/Isolation_(database_systems)#Isolation_levels"&gt;priority rules&lt;/a&gt; for isolation levels.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Serializable&lt;/li&gt;
&lt;li&gt;Repeatable reads&lt;/li&gt;
&lt;li&gt;Read committed&lt;/li&gt;
&lt;li&gt;Read uncommitted&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.postgresql.org/docs/8.3/tutorial-transactions.html"&gt;Transactions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.essentialsql.com/sql-acid-database-properties-explained/"&gt;ACID: Resource 1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.geeksforgeeks.org/acid-properties-in-dbms/"&gt;ACID: Resource 2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.sqlshack.com/locking-sql-server/"&gt;Locking Mechanism&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://shishirkumarblog.wordpress.com/technical/sql-vs-nosql-the-cap-theorem/"&gt;CAP Theorem&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.edureka.co/blog/normalization-in-sql/"&gt;Normalization&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Isolation_(database_systems)#Isolation_levels"&gt;Database Isolation Levels&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.geeksforgeeks.org/sql-trigger-student-database/"&gt;Triggers&lt;/a&gt;&lt;/p&gt;

</description>
      <category>sql</category>
      <category>postgres</category>
      <category>database</category>
    </item>
    <item>
      <title>5 Best Creativity tools for Developers and Bloggers</title>
      <author>Abhiraj Bhowmick</author>
      <pubDate>Sat, 04 Sep 2021 11:12:47 +0000</pubDate>
      <link>https://dev.to/rainboestrykr/5-best-creativity-tools-for-developers-and-bloggers-3dei</link>
      <guid>https://dev.to/rainboestrykr/5-best-creativity-tools-for-developers-and-bloggers-3dei</guid>
      <description>&lt;p&gt;Whether it be testing out markdown, creating your next viral blog cover, or making cool and minimal slides, we come across many creative tasks in our day to day life&lt;/p&gt;

&lt;p&gt;Thankfully, our solutions usually lie in the hands of the Internet.&lt;/p&gt;

&lt;p&gt;Today I present before you 5 of the best creative tools for developers and tech bloggers.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;PS: This list is just based on my opinions. Feel free to drop in your suggestions down in the comments. Also, most of these apps are open source.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-markdown-editor"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://markdownapp.vercel.app/"&gt;Markdown Editor&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Now we all need markdown, be it testing ideas for your next blog or writing a README for your next project and so this web app, is the perfect choice because of its wide range of features and you can also use it to download your files. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H3TAf_Du--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a2p2wym7z3yqan1m6bpq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H3TAf_Du--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a2p2wym7z3yqan1m6bpq.png" alt="s1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-blog-cover"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://blogcover.vercel.app/"&gt;Blog Cover&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Believe it or not, images always add spice to blogs, and we all try to get the best cover image and its sizes. So this app has built-in presets and sizes for Hashnode, Dev.to, and Medium cover images.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sp0cD6ZP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wu3xy2q1e6q2bqo3hmcg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sp0cD6ZP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wu3xy2q1e6q2bqo3hmcg.png" alt="s2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-mdslide"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://mdslide.vercel.app/"&gt;MDSlide&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Presentations or slides have become a part of our lives and to be honest, we all are bored with using the same old Microsoft Powerpoint. It's time to switch and MDSlide is the best option for developers. It uses the Markdown format for text to create sweet and minimal slides.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jRCK6UWR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pycv5u2rv96kjuu2dks9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jRCK6UWR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pycv5u2rv96kjuu2dks9.png" alt="s3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-codescreenshot"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://codekeep.io/screenshot"&gt;CodeScreenshot&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Are you looking to take a clean screenshot of your code along with your editor? But not getting the desired results? Well, ScreenshotStudio by Codekeep is here to help. This app helps you to copy and paste your code and it will generate clean screenshots for all of them with syntax highlighting and image effects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_i_HPdIv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ts98l3k0zjyp52syt0h1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_i_HPdIv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ts98l3k0zjyp52syt0h1.png" alt="s4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-404-illustrations"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://error404.fun/"&gt;404 Illustrations&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Are you almost finished with creating and designing your best website ever? &lt;br&gt;
Well, you almost forgot to create a beautiful and unique 404 page. A custom 404 page takes away the confusion of not landing on the page they had intended to land on. It lets your user know that there is an error with their request. Perhaps they mistyped the URL, the page is temporarily unavailable, or the page no longer exists. This app allows you to download awesome hand-drawn illustrations for your 404 pages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZxeEtR6a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ldzi1d5pycxgv62uh1cn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZxeEtR6a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ldzi1d5pycxgv62uh1cn.png" alt="s5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-time"&gt;
  &lt;/a&gt;
  Bonus time
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#notule"&gt;
  &lt;/a&gt;
  &lt;a href="http://hellohellohello.world"&gt;Notule&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This awesome app is a note-taking web app that syncs with your Google account. It supports markdown and has an awesome UI. Worth a try!&lt;/p&gt;

&lt;p&gt;Well, that's all from me for today. Hope this list helps you. &lt;/p&gt;

&lt;p&gt;And btw&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2Q82KL1p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/brightestyoungthings.com/wp-content/uploads/2014/09/sadie-youre-welcome-gif.gif%3Ffit%3D500%252C227%26quality%3D100%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2Q82KL1p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/brightestyoungthings.com/wp-content/uploads/2014/09/sadie-youre-welcome-gif.gif%3Ffit%3D500%252C227%26quality%3D100%26ssl%3D1" alt="welcome"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title> CSS Box-Model</title>
      <author>Ravi kumar</author>
      <pubDate>Sat, 04 Sep 2021 10:58:31 +0000</pubDate>
      <link>https://dev.to/ravikumar1002/css-box-model-1c29</link>
      <guid>https://dev.to/ravikumar1002/css-box-model-1c29</guid>
      <description>&lt;p&gt;CSS box model is a container which contains multiple properties including borders, margin, padding and the content itself. The web browser renders every element as a rectangular box according to the CSS box model.&lt;/p&gt;

&lt;p&gt;Box-Model has multiple properties in CSS. Some of them are given below: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;content&lt;/li&gt;
&lt;li&gt;padding&lt;/li&gt;
&lt;li&gt;border&lt;/li&gt;
&lt;li&gt;margin&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#content-area"&gt;
  &lt;/a&gt;
  Content area
&lt;/h2&gt;

&lt;p&gt;The innermost rectangle, known as the content area, may contain text or other visual elements. It is bounded by the content edge and its dimensions are given by content box width and height. If the element is a block element, then the content edge can also be set with the &lt;code&gt;min-width&lt;/code&gt;, &lt;code&gt;max-width&lt;/code&gt;, &lt;code&gt;min-height&lt;/code&gt;, &lt;code&gt;max-height&lt;/code&gt; properties.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V9SC3pZB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ctrzdvb2r0s9e78wujm3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V9SC3pZB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ctrzdvb2r0s9e78wujm3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If the &lt;code&gt;box-sizing&lt;/code&gt; property is set to &lt;code&gt;content-box&lt;/code&gt;, the content area's size can be explicitly defined with the  &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;min-width&lt;/code&gt;, &lt;code&gt;max-width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;min-height&lt;/code&gt;, and &lt;code&gt;max-height&lt;/code&gt; properties&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#padding-area"&gt;
  &lt;/a&gt;
  Padding area
&lt;/h2&gt;

&lt;p&gt;Padding is the space between the border and content of an element. Padding is an important element in web design because it helps make content more visible and readable. &lt;/p&gt;

&lt;p&gt;There are four padding properties,&lt;br&gt;
 &lt;code&gt;padding-top&lt;/code&gt;&lt;br&gt;
 &lt;code&gt;padding-right&lt;/code&gt;&lt;br&gt;
 &lt;code&gt;padding-bottom&lt;/code&gt;&lt;br&gt;
 &lt;code&gt;padding-left&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gmsNR_b9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a6un39opfk2w90izewdt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gmsNR_b9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a6un39opfk2w90izewdt.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All the padding properties can be changed independently or a short hand &lt;code&gt;padding&lt;/code&gt; property can be used to change all the values at once.&lt;br&gt;
Short hand properties syntax:&lt;br&gt;
&lt;code&gt;padding&lt;/code&gt;: &lt;code&gt;padding-top&lt;/code&gt;  &lt;code&gt;padding-right&lt;/code&gt;  &lt;code&gt;padding-bottom&lt;/code&gt; &lt;code&gt;padding-left&lt;/code&gt;;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#border-area"&gt;
  &lt;/a&gt;
  Border area
&lt;/h2&gt;

&lt;p&gt;It is the area between the box’s &lt;code&gt;padding&lt;/code&gt; and &lt;code&gt;margin&lt;/code&gt;. Its dimensions are given by the width and height of border.&lt;br&gt;
The borders are calculated by the &lt;code&gt;border-width&lt;/code&gt; and shorthand border properties. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uUP_t6yv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cgrak2den44mpsiula9c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uUP_t6yv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cgrak2den44mpsiula9c.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Short hand &lt;code&gt;border&lt;/code&gt; properties syntax :&lt;br&gt;
  &lt;code&gt;border&lt;/code&gt;: &lt;code&gt;border-width&lt;/code&gt; &lt;code&gt;border-style&lt;/code&gt; &lt;code&gt;border-color&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;If the &lt;code&gt;box-sizing&lt;/code&gt; property is set to &lt;code&gt;border-box&lt;/code&gt;, the border area's size can be explicitly defined with the  &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;min-width&lt;/code&gt;, &lt;code&gt;max-width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;min-height&lt;/code&gt;, and &lt;code&gt;max-height&lt;/code&gt; properties&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#margin-area"&gt;
  &lt;/a&gt;
  Margin area
&lt;/h2&gt;

&lt;p&gt;The space around the elements can be set using the CSS &lt;code&gt;margin&lt;/code&gt; properties.&lt;/p&gt;

&lt;p&gt;There are four margin properties,&lt;br&gt;
 &lt;code&gt;margin-top&lt;/code&gt;&lt;br&gt;
 &lt;code&gt;margin-bottom&lt;/code&gt;&lt;br&gt;
 &lt;code&gt;margin-left&lt;/code&gt;&lt;br&gt;
 &lt;code&gt;margin-right&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HcWTFjhM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4nfq342jkkl9p270j834.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HcWTFjhM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4nfq342jkkl9p270j834.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
In addition to the above four properties, we also have a short hand property called &lt;code&gt;margin&lt;/code&gt;.&lt;br&gt;
&lt;code&gt;margin&lt;/code&gt; : &lt;code&gt;margin-top&lt;/code&gt; &lt;code&gt;margin-right&lt;/code&gt; &lt;code&gt;margin-bottom&lt;/code&gt; &lt;code&gt;margin-left&lt;/code&gt;;&lt;/p&gt;

&lt;p&gt;Margin clears the area around an element the difference is that it takes care of the area outside the border.The margins are transparent and cannot have any background colors.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#calculating-overall-dimensions"&gt;
  &lt;/a&gt;
  Calculating Overall dimensions
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#how-to-calculate-the-total-width-of-the-box"&gt;
  &lt;/a&gt;
  How to calculate the total width of the box,
&lt;/h4&gt;

&lt;p&gt;The total width of the element would follow the following formula,&lt;br&gt;
    Total element &lt;code&gt;width&lt;/code&gt; = &lt;code&gt;width&lt;/code&gt; + &lt;code&gt;padding-left&lt;/code&gt; + &lt;code&gt;padding-right&lt;/code&gt; +  &lt;code&gt;border-left&lt;/code&gt; + &lt;code&gt;border-right&lt;/code&gt;  + &lt;code&gt;margin-left&lt;/code&gt; + &lt;code&gt;margin-right&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zIxqvbhJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmv5qtzpvof5glwbsqa9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zIxqvbhJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmv5qtzpvof5glwbsqa9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-to-calculate-the-total-height-of-the-box"&gt;
  &lt;/a&gt;
  How to calculate the total height of the box,
&lt;/h4&gt;

&lt;p&gt;The total height of the element would follow the following formula&lt;br&gt;
    Total element &lt;code&gt;height&lt;/code&gt; = &lt;code&gt;height&lt;/code&gt; + &lt;code&gt;padding-top&lt;/code&gt; + &lt;code&gt;padding-bottom&lt;/code&gt; + &lt;code&gt;border-top&lt;/code&gt; + &lt;code&gt;border-bottom&lt;/code&gt; + &lt;code&gt;margin-top&lt;/code&gt; + &lt;code&gt;margin-bottom&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NpGgHYyt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t2dino0qn5t35o3gvgge.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NpGgHYyt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t2dino0qn5t35o3gvgge.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After spending some time and getting familiar with the basics of the CSS Box Model, it can be helpful in designing the layouts efficiently.&lt;/p&gt;

</description>
      <category>boxmodel</category>
      <category>css</category>
      <category>design</category>
    </item>
    <item>
      <title>7 Useful Projects on Github for Web Developers</title>
      <author>Abdullah Furkan Özbek</author>
      <pubDate>Sat, 04 Sep 2021 10:56:06 +0000</pubDate>
      <link>https://dev.to/afozbek/7-useful-projects-on-github-for-web-developers-1l4n</link>
      <guid>https://dev.to/afozbek/7-useful-projects-on-github-for-web-developers-1l4n</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-freecodecamp"&gt;
  &lt;/a&gt;
  1. FreeCodeCamp
&lt;/h2&gt;

&lt;p&gt;Build projects to earn free certificates and get experience by coding for nonprofits. &lt;/p&gt;

&lt;p&gt;You can learn pretty much anything related to programming. If you are type of person who tries to follow video tutorials then you can take a look their youtube channel.&lt;/p&gt;

&lt;p&gt;&lt;a href="//github.com/freeCodeCamp/freeCodeCamp"&gt;&lt;strong&gt;Github&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="//youtube.com/c/Freecodecamp"&gt;&lt;strong&gt;Youtube&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-free-programming-books"&gt;
  &lt;/a&gt;
  2. Free Programming Books
&lt;/h2&gt;

&lt;p&gt;his repository shares free programming books that you can read. It contains all kinds of topics. Definitely check that out if you are interested. (Don't forget to give it a star 😅)&lt;/p&gt;

&lt;p&gt;&lt;a href="//github.com/EbookFoundation/free-programming-books"&gt;&lt;strong&gt;Github&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-bootstrap"&gt;
  &lt;/a&gt;
  3. Bootstrap
&lt;/h2&gt;

&lt;p&gt;Undoubtedly the most popular HTML, CSS and JavaScript framework for developing responsive, mobile first projects on the web.&lt;/p&gt;

&lt;p&gt;&lt;a href="//github.com/twbs/bootstrap"&gt;&lt;strong&gt;Github&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-awesome-lists"&gt;
  &lt;/a&gt;
  4. Awesome Lists
&lt;/h2&gt;

&lt;p&gt;This repository contains detailed lists around any topics. You can found out what you like or you can contribute that you think others would be interested.&lt;/p&gt;

&lt;p&gt;&lt;a href="//github.com/sindresorhus/awesome"&gt;&lt;strong&gt;Github&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-you-dont-know-js"&gt;
  &lt;/a&gt;
  5. You Don't Know JS
&lt;/h2&gt;

&lt;p&gt;A series of books diving deep into the core mechanisms of the JavaScript language. The first edition of the series is now complete. You can buy it in print, or read online for free!&lt;/p&gt;

&lt;p&gt;&lt;a href="//github.com/getify/You-Dont-Know-JS"&gt;&lt;strong&gt;Github&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-coding-interview-university"&gt;
  &lt;/a&gt;
  6. Coding Interview University
&lt;/h2&gt;

&lt;p&gt;So you have big interview coming up or you just want to be prepared. Then this project covers you.&lt;/p&gt;

&lt;p&gt;It contains links, tutorials, stories that author experienced, advices...&lt;/p&gt;

&lt;p&gt;Definitely stop by if you have some time.&lt;/p&gt;

&lt;p&gt;&lt;a href="//github.com/jwasham/coding-interview-university"&gt;&lt;strong&gt;Github&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-developer-roadmap"&gt;
  &lt;/a&gt;
  7. Developer Roadmap
&lt;/h2&gt;

&lt;p&gt;I keep my favorite one to the last.&lt;/p&gt;

&lt;p&gt;This repository will show you what skills or path you need to take in order to fulfill your developer path. &lt;/p&gt;

&lt;p&gt;Of course you do not need to complete all of them but it gives good idea what you need to do. So you can create a list and take a look at the process you made.&lt;/p&gt;

&lt;p&gt;&lt;a href="//github.com/kamranahmedse/developer-roadmap"&gt;&lt;strong&gt;Github&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#helpful-links-amp-resources"&gt;
  &lt;/a&gt;
  Helpful Links &amp;amp; Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/freeCodeCamp/freeCodeCamp"&gt;freeCodeCamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twbs/bootstrap"&gt;Bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/getify/You-Dont-Know-JS"&gt;You-Dont-Know-JS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Developer roadmap - 2020&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.attosol.com/top-50-projects-on-github-2020/"&gt;Top 50 Projects on Github - 2020&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>github</category>
      <category>webdev</category>
      <category>100daysofcode</category>
    </item>
  </channel>
</rss>
