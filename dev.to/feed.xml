<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>OKEx clone script the best way to develop a website like OKEx</title>
      <author>Radin Dev</author>
      <pubDate>Sun, 05 Sep 2021 08:23:26 +0000</pubDate>
      <link>https://dev.to/radindev/okex-clone-script-the-best-way-to-develop-a-website-like-okex-1716</link>
      <guid>https://dev.to/radindev/okex-clone-script-the-best-way-to-develop-a-website-like-okex-1716</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2OKZm2Pi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/OKEX-CLONE-SCRIPT.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2OKZm2Pi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/OKEX-CLONE-SCRIPT.svg" alt="okex rating"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#okex-clone-script"&gt;
  &lt;/a&gt;
  Okex clone script
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://radindev.com/okex-clone-script/"&gt;Okex clone script&lt;/a&gt;&lt;/strong&gt; is a ready-made cryptocurrency exchange website script that helps you to launch a trading website like okex.  The okex clone script describes software that has all the existing features present in the OKEx exchange platform. Because clone script is ready-made software, by using it for developing a website you will get rid of many challenges that you may face while developing a crypto exchange software. Using a clone script to develop a website will save plenty of time and energy. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#okex-website"&gt;
  &lt;/a&gt;
  Okex website
&lt;/h2&gt;

&lt;p&gt;Before we start, let’s get to know the okex exchange platform. &lt;br&gt;
Okex is a leading crypto exchange platform that provides exchange services all around the globe.&lt;br&gt;
Okex was founded in 2014. currently Okex provides exchange services in more than 200 countries around the world and about 20M users are trading on the platform. OKEx offers 24/7 online supports for its clients. Okex exchange currently supports +264 cryptocurrencies that are allowed to be exchanged on the OKEx platform.  okex has the grade A in cyber security rating.&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XoNjdFEC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/rating-1.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XoNjdFEC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/rating-1.svg" alt="okex rating"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#okex-cryptocurrency-exchange-website-features"&gt;
  &lt;/a&gt;
  OKEx cryptocurrency exchange website features
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Live list of the value of the assets that contain: its last price, change of the day the chart of the change.&lt;/li&gt;
&lt;li&gt;Start your account and earn up to 50$ in crypto rewards. Okex exchange gives rewards for users who are new to the platform and want to start their trading.&lt;/li&gt;
&lt;li&gt;Synced app for android, IOS, MAC, and windows &lt;/li&gt;
&lt;li&gt;Different payments method: visa, master cards&lt;/li&gt;
&lt;li&gt;140 top quality assets &lt;/li&gt;
&lt;li&gt;400 trading pairs for trading BTC against USDT&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#tips-for-creating-a-successful-exchange-website-by-cloning-okex-platform"&gt;
  &lt;/a&gt;
  Tips for creating a successful exchange website by cloning okex platform
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; Gain the complete knowledge about the features of the okex platform&lt;/li&gt;
&lt;li&gt; Find the Strengths and weaknesses of the okex platform &lt;/li&gt;
&lt;li&gt; Try to add extra  features to your exchange platform that you think will be interesting or useful for the user &lt;/li&gt;
&lt;li&gt; To understand what the traders really want Read the traders comment in related pages or social Medias to understand the users’ desire. Also reading their feedback in different platform will help you to understand what they are complaining about or what the things are they don’t like in exchange platforms and if this factor . These actions will give you a clear view of what users want.&lt;/li&gt;
&lt;li&gt; The next step is embedding their wanted feature in your platform and solve the factors or issues that the users don’t like.&lt;/li&gt;
&lt;li&gt; Check out other popular exchange websites, and figure out what features do they have that attract traders to them and try to add them to your website.&lt;/li&gt;
&lt;li&gt; Always be updated and add new features to your exchange platform.&lt;/li&gt;
&lt;li&gt; Hire patient employees for your support team to treat and guide the users patiently in order to solve their problems. &lt;/li&gt;
&lt;li&gt; Find reliable blockchain developer and  &lt;strong&gt;&lt;a href="https://radindev.com/cryptocurrency-exchange-development/"&gt;cryptocurrency exchange platform Development&lt;/a&gt;&lt;/strong&gt; company to purchase the premium clone script without security problems.&lt;/li&gt;
&lt;li&gt;Make sure the exchange development company uses the latest technology for developing your website.&lt;/li&gt;
&lt;li&gt;Some exchange websites are not available in some countries try to build an available website and offer exchange services in most of the countries.&lt;/li&gt;
&lt;li&gt;Think of the ways to encourage the users to use your platform for trading. Like some exchange platforms, you can add the rewarding system to your exchange platform. For example, reward them with some altcoins for registration, or after the first transaction give them some extra bitcoins for free and other ways to attract them to your exchange platform.&lt;/li&gt;
&lt;li&gt;Use the educational part of the website to gain more users especially new users by teaching them the helping them to learn trading subjects.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#okex-quik-summary"&gt;
  &lt;/a&gt;
  Okex Quik summary
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yhvWVQl8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/summery-data-1.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yhvWVQl8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/summery-data-1.svg" alt="okex summary"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#okex-accounts"&gt;
  &lt;/a&gt;
  OKEx Accounts
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Funding Account:&lt;/strong&gt;&lt;br&gt;
A funding account is for users to deposit and withdraw their assets safely and instantly.  A funding account is used to store, save and transfer digital assets to another crypto wallet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trading account:&lt;/strong&gt;&lt;br&gt;
The first step to start trading is to transfer the crypto from the funding account to one of the following accounts:&lt;br&gt;
C2C, SPOT, margin, future, p-swap, or options account. for users to deposit and withdraw their assets safely and instantly.  A funding account is used to store, save and transfer digital assets to another crypto wallet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Saving account:&lt;/strong&gt;&lt;br&gt;
Saving account is an account where you collect the revenue of savings. With the help of saving account okex users can make good use of their coins. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mining account&lt;/strong&gt;&lt;br&gt;
Mining account is used to save the revenue of the mining process in the OKEx pool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spot account&lt;/strong&gt;&lt;br&gt;
Users can trade fiat currencies with crypto currencies according to the exchange rate of the system in spot account.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Margin account&lt;/strong&gt; &lt;br&gt;
The name of this account describes its usability Margin account is used for margin trading. Each margin trading links to one of the margin accounts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Option account&lt;/strong&gt;&lt;br&gt;
This account is used for options trading. This trading, it gives you the right to buy and sell a specific security. An option is a contract linked to an underlying asset.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-okex-pool-and-how-does-it-work"&gt;
  &lt;/a&gt;
  What is okex pool and how does it work?
&lt;/h2&gt;

&lt;p&gt;OKEx pool mining&lt;br&gt;
OKEx pool allows cryptocurrency miners to gain cryptocurrency rewards by the process of mining in the pool. The OKEX’s pool merges the trading services with the mining process. It sends the mining rewards directly to users’ mining account. Okex mining pool has 11 assets and provides daily revenue.The okex mining pool is:&lt;br&gt;
Safe and stable &lt;br&gt;
Open and flexible &lt;br&gt;
Global and reliable  &lt;/p&gt;

&lt;p&gt;The pool has three methods for mining rewards:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; complete pay for each share &lt;/li&gt;
&lt;li&gt; pay per N last share + Pay per share (pps+)&lt;/li&gt;
&lt;li&gt; pay per share (PPS)
Steps for working with okex pool:
A.  log into your okex account 
B.  enter the okex pool 
C.  set up you alias
D.  manage your mining dashboard 
E.  establish your mining settings
F.  Choose your desired cryptocurrency to mine.
G.  Connect your mining machine to the okex pool&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#the-features-of-okex-clone-script"&gt;
  &lt;/a&gt;
  The Features of Okex Clone Script
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; Multilingual: it supports more than 150 crypto coins and 
tokens &lt;/li&gt;
&lt;li&gt; Crypto payment gateway &lt;/li&gt;
&lt;li&gt; API security&lt;/li&gt;
&lt;li&gt; Trading engine &lt;/li&gt;
&lt;li&gt; KYC/AML verifications&lt;/li&gt;
&lt;li&gt;Margin, perpetual and futures trading with 100x leverage&lt;/li&gt;
&lt;li&gt;Multi-cryptocurrency wallet integration &lt;/li&gt;
&lt;li&gt;Liquidity API &lt;/li&gt;
&lt;li&gt;Referral program &lt;/li&gt;
&lt;li&gt;Admin and user panel&lt;/li&gt;
&lt;li&gt;Decentralized trading&lt;/li&gt;
&lt;li&gt; Easy interface for beginners and advanced traders.&lt;/li&gt;
&lt;li&gt;Fast and instant way to buy/sell crypto &lt;/li&gt;
&lt;li&gt;Supports three payment methods: credit/debit card purchases and bank transfer payments&lt;/li&gt;
&lt;li&gt;Secure online/offline  wallet &lt;/li&gt;
&lt;li&gt;Supported mobile app for IOS and android to trade anytime and anywhere &lt;/li&gt;
&lt;li&gt;Referral and affiliate system that rewards you in case you add new users to the platform .
Based on the company that you choose to develop your exchange website extra features that you want to embed in your exchange website can be added.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#perpetual-and-futures-trading"&gt;
  &lt;/a&gt;
  Perpetual and futures trading
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E61OWotl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/leverage-1.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E61OWotl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/leverage-1.svg" alt="Perpetual and futures trading "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#is-okex-a-safe-platform"&gt;
  &lt;/a&gt;
  Is Okex a safe platform?
&lt;/h3&gt;

&lt;p&gt;Okex has several layers of security features to protect its client against fraud, keep their funds safe, and also prevent their information to leak. Okex offers a high-security wallet to its client. Based on the research that has been done, okex has not been involved in any exchange hack or even didn’t face any major security issue. So yes okex can be regarded as a safe exchange platform.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comparison"&gt;
  &lt;/a&gt;
  Comparison
&lt;/h2&gt;

&lt;p&gt;Let’s take a look at OKex competitors:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CKCEZAqn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/competitors.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CKCEZAqn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/competitors.svg" alt="okex competitors"&gt;&lt;/a&gt;&lt;br&gt;
The okex offers different order types which consists of:&lt;br&gt;
• Limit order&lt;br&gt;
• Advanced limit &lt;br&gt;
• Market order &lt;br&gt;
• Stop limit &lt;br&gt;
• TWAP&lt;br&gt;
• Iceberg &lt;br&gt;
Iceberg order: seems like a unique feature for okex exchange.  These are advanced orders that are used as part of a crypto trading strategy to execute an order in potions at regular intervals of time as specified by users. This order type can reduce the effect of the market on the basket order. Last words &lt;br&gt;
If you have decided to develop your website with a clone script you better choose a reliable company with expert workers in the field of crypto exchanges that offer premium okex clone scripts. &lt;/p&gt;

</description>
    </item>
    <item>
      <title>Efficiently commenting code</title>
      <author>Siddharth</author>
      <pubDate>Sun, 05 Sep 2021 07:50:43 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/efficiently-commenting-code-5148</link>
      <guid>https://dev.to/siddharthshyniben/efficiently-commenting-code-5148</guid>
      <description>&lt;p&gt;Most of you might comment out code like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// alternateMain();&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But this isn't a really efficient way to comment. If you need to toggle that comment, you need to delete/add at least two characters. And also, sometimes you are trying two different things, and need to comment one and uncomment another. Things get complex really quick&lt;/p&gt;

&lt;p&gt;Here, I'll show you some efficient ways to comment out stuff. This is based on JavaScript, but should work for other languages like CSS, C, etc. (And you probably can adapt it to other languages).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#toggleable-comment"&gt;
  &lt;/a&gt;
  Toggleable comment
&lt;/h2&gt;

&lt;p&gt;For commenting a block of code and making it easier to uncomment, you can do this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/*/
experimental();
/**/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to uncomment, just add a &lt;code&gt;*&lt;/code&gt; to the first line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**/&lt;/span&gt;
&lt;span class="nx"&gt;experimental&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="cm"&gt;/**/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;You can't "nest" comments here, so one trick you can use is to put the comment text in the last comment:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No:&lt;/strong&gt;&lt;/p&gt;


&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/*/
experiment1();
/* Some explanatory text here blabla */&lt;/span&gt;
&lt;span class="nx"&gt;experiment2&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="cm"&gt;/**/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;&lt;strong&gt;Yes:&lt;/strong&gt;&lt;/p&gt;


&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/*/
experiment1();
experiment2();
/* Some explanatory text here blabla */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/blockquote&gt;

&lt;p&gt;Nice?&lt;/p&gt;

&lt;p&gt;We can pretty easily extend this. Check this out:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/*/
experimental();
/*/&lt;/span&gt;
&lt;span class="nx"&gt;stable&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="cm"&gt;/**/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, the first block is commented, but the second isn't. Just add a &lt;code&gt;*&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**/&lt;/span&gt;
&lt;span class="nx"&gt;experimental&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="cm"&gt;/*/
stable();
/**/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Aaand it was toggled and we are running &lt;code&gt;experimental()&lt;/code&gt;!&lt;/p&gt;

&lt;p&gt;You can even put them inline:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="cm"&gt;/**/&lt;/span&gt; &lt;span class="nx"&gt;stable&lt;/span&gt; &lt;span class="cm"&gt;/*/ experimental /**/&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to comment out both, just remove the &lt;code&gt;*&lt;/code&gt; in the middle:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/*/
experimental1();
//
experimental2();
/**/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And if you want to uncomment both, add a &lt;code&gt;*&lt;/code&gt; in the middle:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**/&lt;/span&gt;
&lt;span class="nx"&gt;experimental1&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="cm"&gt;/**/&lt;/span&gt;
&lt;span class="nx"&gt;experimental2&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="cm"&gt;/**/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Awesome right?&lt;/p&gt;

&lt;p&gt;Now, this looks like the end of it, but there's more!&lt;/p&gt;

&lt;p&gt;Check this out:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**/&lt;/span&gt;
&lt;span class="nx"&gt;experimental1&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="cm"&gt;/**/&lt;/span&gt;
&lt;span class="nx"&gt;experimental2&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="cm"&gt;/**/&lt;/span&gt;
&lt;span class="nx"&gt;experimental3&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="cm"&gt;/**/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to comment out a line, just remove one ending &lt;code&gt;/&lt;/code&gt; from the top of that line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**/&lt;/span&gt;
&lt;span class="nx"&gt;experimental1&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="cm"&gt;/**
experimental2();
/**/&lt;/span&gt;
&lt;span class="nx"&gt;experimental3&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="cm"&gt;/**/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also works for multiple lines!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**/&lt;/span&gt;
&lt;span class="nx"&gt;experimental1&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="cm"&gt;/**
experimental2();
/**
experimental3();
/**/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can pretty much infinitely extend that. And of course, don't let these comments past the 'just testing stuff' phase...&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>javascript</category>
      <category>css</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>I build a Github Dark Theme inspired Portfolio</title>
      <author>Unnati Bamania</author>
      <pubDate>Sun, 05 Sep 2021 07:37:08 +0000</pubDate>
      <link>https://dev.to/commentme/i-build-a-github-dark-theme-inspired-portfolio-5gmo</link>
      <guid>https://dev.to/commentme/i-build-a-github-dark-theme-inspired-portfolio-5gmo</guid>
      <description>&lt;p&gt;I always wanted to build a unique portfolio for myself and was inspired by a lot of portfolios. Right since my first year of engineering I've build more than 6 portfolios but nothing was ever eye catchy and satisfying. Finally I came across some unique and eye catchy portfolios. I stumbled upon the idea of building one by using the Github Dark Theme.&lt;/p&gt;

&lt;p&gt;One of them is &lt;a href="https://www.nitinranganath.me/"&gt;Nitin's VS Code theme&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-tech-stack-that-ive-used-is"&gt;
  &lt;/a&gt;
  The tech stack that I've used is:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;NextJS&lt;/li&gt;
&lt;li&gt;Tailwind CSS&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#tools-used"&gt;
  &lt;/a&gt;
  Tools used:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Notion&lt;br&gt;
I've integrated Notion for storing the data of the contact form.&lt;br&gt;
If you want to integrate Notion to your contact forms please do refer to this article&lt;br&gt;
&lt;a href="https://blog.logrocket.com/creating-contact-forms-with-the-notion-api-and-next-js/"&gt;Integrate Notion in your contact form&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;react-github-calendar&lt;br&gt;
You can show your github heat map using the above library.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#github-dark-theme-portfolio"&gt;
  &lt;/a&gt;
  Github Dark Theme Portfolio
&lt;/h2&gt;

&lt;p&gt;If you want to visit the live website you can visit to the following link:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://unnatibamania.me"&gt;https://unnatibamania.me&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The source code for this project is as follows:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/unnati2000/portfolio"&gt;unnati2000/portfolio&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y8l1Itel--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aruamdaukq6anjofigfp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y8l1Itel--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aruamdaukq6anjofigfp.png" alt="Cover Page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4j_z2DL_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ch34e884sugdh0wak8ax.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4j_z2DL_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ch34e884sugdh0wak8ax.png" alt="Repositories"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XEJbVVAi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p10ycqpzw737ue5hmmdo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XEJbVVAi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p10ycqpzw737ue5hmmdo.png" alt="Projects"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#i-would-love-to-listen-from-you"&gt;
  &lt;/a&gt;
  I would love to listen from you
&lt;/h2&gt;

&lt;p&gt;If you have any suggestions or critics please do share your thoughts. I would love to make improvisations in this project. If you feel there was a need to add some more features please do share your thoughts in the comment section below. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>nextjs</category>
      <category>portfolio</category>
    </item>
    <item>
      <title>This Tailwind CSS cut out effect will amaze you</title>
      <author>Chris Bongers</author>
      <pubDate>Sun, 05 Sep 2021 07:06:46 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/this-tailwind-css-cut-out-effect-will-amaze-you-4lfo</link>
      <guid>https://dev.to/dailydevtips1/this-tailwind-css-cut-out-effect-will-amaze-you-4lfo</guid>
      <description>&lt;p&gt;A while a go we created this super cool &lt;a href="https://daily-dev-tips.com/posts/css-cut-out-effect-that-will-blow-your-mind-%F0%9F%A4%AF/"&gt;cut out text effect in CSS&lt;/a&gt;, however in today's article we'll have a look at how to do this in Tailwind CSS.&lt;/p&gt;

&lt;p&gt;The result will be this super amazing, yet simple to achieve effect.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/rebelchris/embed/bGREbqq?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#html-structure-for-tailwind-cut-out-text"&gt;
  &lt;/a&gt;
  HTML Structure for Tailwind cut out text
&lt;/h2&gt;

&lt;p&gt;As for the HTML structure, we only need two elements.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The background container div, this will hold the background image&lt;/li&gt;
&lt;li&gt;A text element, this will be positioned on top of the background for the cut out effect
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;BOTANY&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That is all that we need, and with the help of Tailwind CSS we can easily create this amazing cut out effect.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: Check out this article for &lt;a href="https://daily-dev-tips.com/posts/plain-html-starter-with-tailwind-css/"&gt;integrating Tailwind in your project&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#tailwind-css-cut-out-text-effect"&gt;
  &lt;/a&gt;
  Tailwind CSS cut out text effect
&lt;/h2&gt;

&lt;p&gt;To generate this effect, lets first focus on giving out div a background image.&lt;br&gt;
This will be the only custom part to the setup, however when you are using Tailwind in your project you can use the tailwind config for this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.background&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url('https://images.pexels.com/photos/797797/pexels-photo-797797.jpeg?auto=compress&amp;amp;cs=tinysrgb&amp;amp;dpr=2&amp;amp;h=650&amp;amp;w=940')&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we can add some classes to center this background and make it cover the whole area.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"background bg-cover bg-center"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The second part to this tutorial is to style the &lt;code&gt;h1&lt;/code&gt; element.&lt;br&gt;
Let's start by making it a big bigger and bold.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"font-bold text-9xl"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;BOTANY&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the magic comes with the following three classes, we want our text to be the opposite of our background, and then use the blend mode to get the effect we need.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"font-bold text-9xl mix-blend-lighten text-black bg-white"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;BOTANY&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's it we now have a stunning CSS cutout text effect using Tailwind CSS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fSpB5Rbx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630303037627/qq96is_Ag.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fSpB5Rbx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630303037627/qq96is_Ag.png" alt="Tailwind CSS cut out effect"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>css</category>
    </item>
    <item>
      <title>100 Days Of CODE-JOB Goal</title>
      <author>akanksha</author>
      <pubDate>Sun, 05 Sep 2021 06:07:08 +0000</pubDate>
      <link>https://dev.to/akanksha256/100-days-of-code-4aga</link>
      <guid>https://dev.to/akanksha256/100-days-of-code-4aga</guid>
      <description>&lt;p&gt;For my job I need to quickly learn Front End skills, hence to make myself more authentic to my work. I am taking part in this challenge.&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Top 7 Games To Learn Coding </title>
      <author>Kouluru Nanda Kishore Reddy</author>
      <pubDate>Sun, 05 Sep 2021 06:03:52 +0000</pubDate>
      <link>https://dev.to/koulurunandakishorereddy/top-7-games-to-learn-coding-aoc</link>
      <guid>https://dev.to/koulurunandakishorereddy/top-7-games-to-learn-coding-aoc</guid>
      <description>&lt;h1&gt; 1. CODE MONKEY &lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.codemonkey.com/"&gt;Website Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2io2WQ5V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626100364103/kWqJOi4pt.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2io2WQ5V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626100364103/kWqJOi4pt.jpeg" alt="CodeMonkey.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Code monkey&lt;/b&gt; covers text-based coding languages of CoffeeScript and Python. The programming language used in Coding Adventure is called CoffeeScript. It's a language that compiles to JavaScript, and similarly to JavaScript, it is used in the industry primarily for web applications.&lt;/p&gt;

&lt;p&gt;CodeMonkey is a leading, fun and intuitive curriculum where students learn to code in real programming languages. Through the game and project-based courses, students as young as 7 use real programming languages to solve puzzles and build games and apps. The majority of CodeMonkey’s courses do not require prior coding experience to teach. All courses are designed for school, extra-curricular and home-use.&lt;/p&gt;

&lt;h1&gt;2. CODINGAME &lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.codingame.com/start"&gt;Website Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4WQg4EKe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626101279308/hvsIgGocB.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4WQg4EKe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626101279308/hvsIgGocB.jpeg" alt="codingame-1024x438.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;CodinGame&lt;/b&gt; is a technology company editing an online platform for developers, allowing them to play with programming with increasingly difficult puzzles, to learn to code better with an online programming application supporting twenty-five programming languages, and to compete in multiplayer programming contests involving timed artificial intelligence, or code-golf challenges.&lt;/p&gt;

&lt;p&gt;CodinGame offers up to fun free games to help learn more than 25 programming languages, including JavaScript, PHP and Ruby. &lt;/p&gt;

&lt;h1&gt;3. FLEXBOX FROGGY &lt;/h1&gt;

&lt;p&gt;&lt;a href="https://flexboxfroggy.com/"&gt;Website Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_kKELmK3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626147023499/mOKxLodF9Z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_kKELmK3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626147023499/mOKxLodF9Z.png" alt="screenshot.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Flexbox Froggy &lt;/b&gt;, a game where you help Froggy and friends by writing CSS code! Guide this frog to the lilypad on the right by using the justify-content property, which aligns items horizontally &lt;/p&gt;

&lt;p&gt;Want to learn how CSS flexbox works? check out &lt;a href="https://flexboxfroggy.com/"&gt;FLEXBOX FROGGY&lt;/a&gt; . It has a simple interface that teaches you the basics of how things align in flexbox while you help Froggy and his friends&lt;/p&gt;

&lt;h1&gt;4. Robocode &lt;/h1&gt;

&lt;p&gt;&lt;a href="https://robocode.sourceforge.io/"&gt;Website Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BbZMJWuJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626148427926/iWsxrkYnL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BbZMJWuJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626148427926/iWsxrkYnL.png" alt="programming-game-robocode.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Robocode&lt;/b&gt; is a complex programming game where you code robot tanks that fight against each other. Your job is to write the artificial intelligence that drives your robots to success---using real languages like Java, Scala, C#, and more. To get started, check out the Robocode Basics and Tutorials.&lt;/p&gt;

&lt;p&gt;The Robocode installer comes with a development environment, built-in robot editor, and Java compiler. You're actually writing real code! Despite launching back in 2000, Robocode is still regularly updated and maintained, helped along by the fact that it's open-source and addictive.&lt;/p&gt;

&lt;h1&gt;5. Codecombat &lt;/h1&gt;

&lt;p&gt;&lt;a href="https://codecombat.com/"&gt;Website Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LLd13TFJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626148650812/Ir50QmM0i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LLd13TFJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626148650812/Ir50QmM0i.png" alt="Screen-Shot-2020-04-23-at-2.46.48-PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Codecombat&lt;/b&gt; is another web app for game-like puzzles and challenges that can only be solved by writing code. But whereas Codingame is more entertaining, Codecombat has a significant educational bent with a "Classroom Edition" that teachers can use to help their students learn how to code. As of this writing, three course paths are available: Computer Science, Web Development, and Game Development.&lt;/p&gt;

&lt;h1&gt;6. Codewars &lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.codewars.com/"&gt;Website Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hPXJwt9x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626150051517/utyc-Unyd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hPXJwt9x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626150051517/utyc-Unyd.png" alt="programming-game-codewars.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Codewars &lt;/b&gt; isn't so much a game as it is a gamified way to practice coding and solving algorithmic challenges. You get points for completing puzzles and point values are determined by how efficient your solutions are. Codewars lets you view solutions submitted by others, which you can study and learn from. I believe it's one of the best ways to learn a new programming language and its idioms.&lt;/p&gt;

&lt;h1&gt;7. CheckiO &lt;/h1&gt;

&lt;p&gt;&lt;a href="https://checkio.org/"&gt;Website Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AgUrraSu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626150538733/xW4-kwUwh.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AgUrraSu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626150538733/xW4-kwUwh.jpeg" alt="share.jpg"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;/p&gt;
&lt;p&gt;&lt;b&gt;CheckiO&lt;/b&gt; is web-based Python learning resource, where your task is to learn through playing games and solving intertesting quizzes. CheckiO features it's own feature complete web-based development environment, but many users prfer using desktop IDE's.&lt;/p&gt;
&lt;br&gt;

&lt;br&gt;
&lt;b&gt;&lt;/b&gt;&lt;p&gt;&lt;br&gt;
To all my readers out here I have an interesting thing to share with you. There's a hackathon going on there. For more information, keep reading.&lt;/p&gt;

&lt;p&gt;
A hackathon might be an alternative for you if you are a computer science student or an upcoming developer. The benefit of participating in an online or physical hackathon is that you can develop coding skills, work with developers, develop a resume, and meet peers.&lt;/p&gt;

&lt;p&gt;
I recommend Hack This Fall 2.0 if you are interested in such an event. The event takes place between 22nd and 24th of October. A 48-Hour Virtual Hackathon is taking this to the next level this year, with the aim of promoting hackers and helping them to develop new ideas and prototypes in various domains. A part of their mission is also to support beginners to hack our society and bring a positive change.&lt;/p&gt;

&lt;p&gt;If you want to register for this wonderful hackathon you can do it:&lt;a href="https://hackthisfall.devpost.com/"&gt;click here&lt;/a&gt;.don't forget to use my referral code : HTFHE068. Over a thousand hackers have already signed up.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>python</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to write your first decentralized app - scaffold-eth Challenge 1: Staking dApp</title>
      <author>Emanuele Ricci</author>
      <pubDate>Sun, 05 Sep 2021 05:50:32 +0000</pubDate>
      <link>https://dev.to/stermi/scaffold-eth-challenge-1-staking-dapp-4ofb</link>
      <guid>https://dev.to/stermi/scaffold-eth-challenge-1-staking-dapp-4ofb</guid>
      <description>&lt;p&gt;In this blog post, I’m going to cover the first scaffold-eth speed run project: creating a  &lt;a href="https://github.com/austintgriffith/scaffold-eth/tree/challenge-1-decentralized-staking"&gt;Staking dApp&lt;/a&gt;. If you want to know more about scaffold-eth and my current journey in the web3 world you should read my previous article:  &lt;a href="https://stermi.medium.com/my-journey-in-web3-development-scaffold-eth-c4db1296cedd"&gt;My journey in Web3 development: scaffold-eth&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-goal-of-the-dapp"&gt;
  &lt;/a&gt;
  The goal of the dApp
&lt;/h2&gt;

&lt;p&gt;The end goal of the project is to mimic the Ethereum 2.0 staking contract. The requirements are pretty simple:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  allow anyone to stack ether and track their balance&lt;/li&gt;
&lt;li&gt;  if a time and stack amount deadline have reached don’t allow users to withdraw their fund (those found are used for a future project, like the Ethereum PoS)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-are-you-going-to-learn"&gt;
  &lt;/a&gt;
  What are you going to learn?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  Setup the scaffold-eth project&lt;/li&gt;
&lt;li&gt;  Write a Staking Contract&lt;/li&gt;
&lt;li&gt;  Call an external Contract&lt;/li&gt;
&lt;li&gt;  Create unit test for your Solidity Contract&lt;/li&gt;
&lt;li&gt;  Use and test your Contract with a React app on your local machine&lt;/li&gt;
&lt;li&gt;  Deploy the staking contract on Ethereum Test Net!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Maybe it’s not so much but you can see this as the first stepping stone of your (and mine) journey.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#some-always-useful-links-that-you-should-always-have-in-mind"&gt;
  &lt;/a&gt;
  Some always useful links that you should always have in mind:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://solidity-by-example.org/"&gt;Solidity by Example&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://docs.soliditylang.org/"&gt;Solidity Documentation&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://hardhat.org/getting-started/"&gt;Hardhat Documentation&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://docs.ethers.io/v5/"&gt;Ethers-js Documentation&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://docs.openzeppelin.com/openzeppelin/"&gt;OpenZeppelin Documentation&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://ethernaut.openzeppelin.com/"&gt;OpenZeppelin Ethernaut tutorial&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://cryptozombies.io/"&gt;CryptoZombies Tutorial&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#setup-the-project"&gt;
  &lt;/a&gt;
  Setup the project
&lt;/h2&gt;

&lt;p&gt;First of all, we  need to set up it. Clone the scaffold-eth repository, switch to the challenge 1 branch and install all the needed dependencies.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/austintgriffith/scaffold-eth.git challenge-1-decentralized-staking  
cd challenge-1-decentralized-staking  
git checkout challenge-1-decentralized-staking  
yarn install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
  &lt;a href="#overview-of-the-available-cli-commands"&gt;
  &lt;/a&gt;
  Overview of the available CLI commands
&lt;/h2&gt;

&lt;p&gt;These commands are not specific for this challenge but are in common with every scaffold-eth project!&lt;/p&gt;

&lt;p&gt;&lt;code&gt;yarn chain&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This command will launch your local hardhat network and configure it to run on  &lt;a href="http://localhost:8545/"&gt;http://localhost:8545&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;yarn start&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This command will launch your local react website on  &lt;a href="http://localhost:3000/"&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;yarn deploy&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This command will deploy all your contracts and refresh your react’s app. To be more precise this command will run two javascript scripts (deploy and publish).&lt;/p&gt;

&lt;p&gt;So, open three different Terminals and launch those commands. Every time you make a change to your contracts you just need to re-launch your  &lt;strong&gt;deploy&lt;/strong&gt;  command.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#exercise-part-1-implement-the-stake-method"&gt;
  &lt;/a&gt;
  Exercise Part 1: Implement the stake() method
&lt;/h2&gt;

&lt;p&gt;In this part of the exercise, we want to allow users to stake some ETH in our contract and track their balances.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#important-concepts-to-master"&gt;
  &lt;/a&gt;
  Important Concepts to master
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://solidity-by-example.org/payable/"&gt;Payable methods&lt;/a&gt;  — when a function is declared as  &lt;strong&gt;payable&lt;/strong&gt;  it means that allows users to send ETH to it.&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://solidity-by-example.org/mapping/"&gt;Mapping&lt;/a&gt;  — it’s one of the variable  &lt;a href="https://docs.soliditylang.org/en/v0.8.7/types.html"&gt;types&lt;/a&gt;  supported by Solidity. It allows you to associate a  &lt;strong&gt;key&lt;/strong&gt;  with a  &lt;strong&gt;value&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://solidity-by-example.org/events/"&gt;Events&lt;/a&gt;  — events allow the contract to notify other entities (contracts, web3 applications, etc) that something has happened. When you declare an event you can specify at max 3  &lt;strong&gt;indexed&lt;/strong&gt;  parameters. When a parameter is declared as indexed it allows 3rd-party apps to  &lt;strong&gt;filter&lt;/strong&gt;  events for that specific parameter.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#exercise-implementation"&gt;
  &lt;/a&gt;
  Exercise implementation
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Declare a mapping to track balances&lt;/li&gt;
&lt;li&gt;  Declare constant threshold of 1 ether&lt;/li&gt;
&lt;li&gt;  Declare a Stake event that will log the staker address and staking amount&lt;/li&gt;
&lt;li&gt;  Implement a payable  &lt;code&gt;stake()&lt;/code&gt;  function that will update the staker’s balance&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#contract-code-updated"&gt;
  &lt;/a&gt;
  Contract code updated
&lt;/h3&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;Some clarification:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;uint&lt;/code&gt;  and  &lt;code&gt;uint256&lt;/code&gt;  are the same (it’s just an alias)&lt;/li&gt;
&lt;li&gt;  when a variable is declared public, Solidity will automagically create a getter method for you. This means that it will expose a  &lt;code&gt;yourVariableName()&lt;/code&gt;  method to be called&lt;/li&gt;
&lt;li&gt;  when you declare a variable without initializing it, it will be initialized to its  &lt;strong&gt;default&lt;/strong&gt;  value based on the variable type&lt;/li&gt;
&lt;li&gt;  Solidity exposes some utility units like  &lt;a href="https://docs.soliditylang.org/en/v0.8.7/units-and-global-variables.html"&gt;wei, ethers, or time units&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s review it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  We have declared our balances that will track for each user’s address his stacked balance&lt;/li&gt;
&lt;li&gt;  We have declared our threshold&lt;/li&gt;
&lt;li&gt;  We have declared our Stake event that will notify the blockchain that a user has stacked an amount&lt;/li&gt;
&lt;li&gt;  We have implemented our Stake function as a public payable method that will update the user’s balance and will emit the Stake event.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One thing that could be strange is that we are simply updating the value without initializing the default value of  &lt;code&gt;balances[msg.sender]&lt;/code&gt;. That’s possible because when a variable is not initialized it will be created with its type default value. In this case (uint256) it will be 0.&lt;/p&gt;

&lt;p&gt;Now, deploy the contract, get some funds from the Faucet and try to stake some ETH to the contract.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Can you get some funds from the Faucet?&lt;/li&gt;
&lt;li&gt;  Can you send 0.5 ETH to the Contract by clicking the Stake button?&lt;/li&gt;
&lt;li&gt;  Is the event triggered on the UI?&lt;/li&gt;
&lt;li&gt;  Is your staking balance updated?&lt;/li&gt;
&lt;li&gt;  Is the contract’s balance updated?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/KfoNrlYxBKY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you have checked all these marks we can continue to part 2 of the exercise.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exercise-part-2-implement-the-lock-mechanism-and-withdraw"&gt;
  &lt;/a&gt;
  Exercise Part 2: Implement the lock mechanism and withdraw
&lt;/h2&gt;

&lt;p&gt;As we previously said the final goal of this Contract is to create a Staking dApp that will allow public users to stack some ETH if some conditions are met. If those conditions are not met they will be able to withdraw their funds.&lt;/p&gt;

&lt;p&gt;These conditions are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  At least 1 ETH needs to be stacked on the Staker Contract&lt;/li&gt;
&lt;li&gt;  The 1 ETH stack threshold is reached within a time deadline of 30 seconds&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#important-concepts-to-master"&gt;
  &lt;/a&gt;
  Important Concepts to master
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://solidity-by-example.org/calling-contract/"&gt;Call external contract&lt;/a&gt;  — every contract on the blockchain is like a public REST API. You can call them from your web3 app or directly from another contract if they are declared as  &lt;code&gt;public&lt;/code&gt;  or  &lt;code&gt;external&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://solidity-by-example.org/function-modifier/"&gt;Function Modifier&lt;/a&gt;  — Modifiers are code that can be run before and/or after a function call. They can be used to restrict access, validate inputs, or guard against  &lt;a href="https://solidity-by-example.org/hacks/re-entrancy/"&gt;reentrancy hacks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://solidity-by-example.org/error/"&gt;Error handling&lt;/a&gt;  — Error handling is important because allows you to revert the state (to be precise to not apply) of the smart contract. You can think at the revert like a database  &lt;code&gt;rollback&lt;/code&gt;. Errors also allow you to notify the user of the reason for the reversion.&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://solidity-by-example.org/sending-ether/"&gt;Sending Ether (transfer, send, call)&lt;/a&gt;  — Solidity has native methods to transfer ETH from a contract to another contract/user address. TLDR: use  &lt;strong&gt;call&lt;/strong&gt;  ;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#exercise-implementation"&gt;
  &lt;/a&gt;
  Exercise implementation
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Declare a 30 seconds deadline from the deploy time of the Contract&lt;/li&gt;
&lt;li&gt;  Create a public  &lt;code&gt;timeLeft()&lt;/code&gt;  function that will return the amount of time remaining until the deadline is reached&lt;/li&gt;
&lt;li&gt;  Create a modifier that will check if the external contract is completed&lt;/li&gt;
&lt;li&gt;  Create a modifier that will check dynamically (with a parameter) if the deadline is reached&lt;/li&gt;
&lt;li&gt;  Allow users to stake ETH only if the deadline is not reached yet and we have not executed the external contract&lt;/li&gt;
&lt;li&gt;  Allow users to withdraw funds only if the deadline is not reached with the balance threshold&lt;/li&gt;
&lt;li&gt;  Create an execute() method that will transfer funds from the Staker contract to the external contract and execute an external function from another Contract&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;An important note to remember when you are testing your Contract locally. The blockchain state is only updated when blocks are mined. The block number and block timestamp are updated only when a transaction is done. This means that the timeLeft() will be updated only after a transaction. If you want to simulate a “real-life” experience you could change the hardhat config to simulate block auto-mine. Check out their  &lt;a href="https://hardhat.org/hardhat-network/reference/#mining-modes"&gt;mining-mode documentation&lt;/a&gt;  if you want to learn more.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#contract-code-updated"&gt;
  &lt;/a&gt;
  Contract code updated
&lt;/h3&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#why-is-the-code-different-between-the-one-from-the-original-challenge"&gt;
  &lt;/a&gt;
  Why is the code different between the one from the original challenge?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  I think that the variable  &lt;code&gt;openForWithdraw&lt;/code&gt;  it’s unnecessary in this case. Withdraw can be enabled directly from the status of the Staker Contract and External Contract&lt;/li&gt;
&lt;li&gt;  In this case our  &lt;code&gt;withdraw&lt;/code&gt;  method is not taking an external address for simplification. You will be the only one to be able to withdraw!&lt;/li&gt;
&lt;li&gt;  We have updated both Solidity to version  &lt;code&gt;0.8.4&lt;/code&gt;  and Hardhat to version  &lt;code&gt;2.6.1&lt;/code&gt;  . Some scaffold-eth (like this one) could still rely on old version of Solidity and I think that’s important to use the most updated one for security, optimization and feature complete reasons.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#lets-review-some-code"&gt;
  &lt;/a&gt;
  Let’s review some code
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Function Modifiers&lt;/strong&gt;: First of all you can see that we have created two modifiers. As you have already learned from Solidity by Example, function modifiers are code that can be run before and / or after a function call. In our case we have even added parametric function modifier!&lt;/p&gt;

&lt;p&gt;When you have defined a function modifier you can use them appending the name of the modifier after the function name. If the modifier rever, the function is reverted before even running it!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;stake() function:&lt;/strong&gt;  is the same one as before&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;timeLeft() function&lt;/strong&gt;: it’s pretty easy, we use the  &lt;code&gt;block.timestamp&lt;/code&gt;  value to calculate the seconds remaining before the deadline.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;withdraw() function&lt;/strong&gt;: after our modifiers flag pass, we check if the user has balance otherwise we revert. To prevent from  &lt;a href="https://solidity-by-example.org/hacks/re-entrancy/"&gt;re-entrancy&lt;/a&gt;  attack you  &lt;strong&gt;should always&lt;/strong&gt;  modify the state of your contract  &lt;strong&gt;before&lt;/strong&gt;  any call. That’s why we are saving user’s balance in a variable and we update the user’s balance to 0.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;execute() function&lt;/strong&gt;: after our modifiers flag pass we call the external contract  &lt;code&gt;complete()&lt;/code&gt;  function and we check if everything is successful.&lt;/p&gt;

&lt;p&gt;Now deploy the updated contract with  &lt;code&gt;yarn deploy&lt;/code&gt;  and test it locally.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Do you see the timeLeft changing as soon as you make a transaction?&lt;/li&gt;
&lt;li&gt; Can you Stake ETH after the deadline?&lt;/li&gt;
&lt;li&gt; Can you withdraw before the deadline or after the deadline if the contract is executed?&lt;/li&gt;
&lt;li&gt; Can you execute the contract even if the threshold is not met?&lt;/li&gt;
&lt;li&gt; Can you execute the contract more than once?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/193ZeR17dtk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exercise-part-3-test-coverage"&gt;
  &lt;/a&gt;
  Exercise Part 3: Test Coverage
&lt;/h2&gt;

&lt;p&gt;I know I know, you would like to just deploy your Contract and frontend and start testing it right now on your test-net of choice but… we need to be sure that everything works as expected without monkey-clicking on the UI!&lt;/p&gt;

&lt;p&gt;So in the next part of the post, I’m going to cover something that  &lt;strong&gt;every&lt;/strong&gt;  developer should do: cover your Contract logic with tests!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#waffle"&gt;
  &lt;/a&gt;
  Waffle
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://ethereum-waffle.readthedocs.io/en/latest/index.html"&gt;Waffle&lt;/a&gt;  is a library for writing and testing smart contracts that work with ethers-js like a charm.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Waffle is packed with tools that help with that. Tests in waffle are written using  &lt;a href="https://mochajs.org/"&gt;Mocha&lt;/a&gt;  alongside with  &lt;a href="https://www.chaijs.com/"&gt;Chai&lt;/a&gt;. You can use a different test environment, but Waffle matchers only work with  &lt;code&gt;chai&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To test our contract we will use  &lt;a href="https://ethereum-waffle.readthedocs.io/en/latest/matchers.html"&gt;Chai matchers&lt;/a&gt;  that will verify that the conditions we are expecting have been met.&lt;/p&gt;

&lt;p&gt;After you have written all your test you just need to type  &lt;code&gt;yarn test&lt;/code&gt;  and all your tests will be automatically run against your contract.&lt;/p&gt;

&lt;p&gt;I’m not gonna explain how to use the library (you can simply take a look at the code below to have an overview), I will be more focused on the “what should we test”.&lt;/p&gt;

&lt;p&gt;We have implemented our Smart Contract with some logic:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  we are tracking user balance in  &lt;code&gt;mapping(address =&amp;gt; uint256) public balances&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  we have a minimum  &lt;code&gt;uint256 public constant threshold = 1 ether&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  we have a maximum  &lt;code&gt;uint256 public deadline = block.timestamp + 120 seconds&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  user can call the  &lt;code&gt;stake()&lt;/code&gt;  function if the external contract is not  &lt;code&gt;completed&lt;/code&gt;  and the  &lt;code&gt;deadline&lt;/code&gt;  is not reached yet&lt;/li&gt;
&lt;li&gt;  user can call the  &lt;code&gt;execute&lt;/code&gt;  method if the external contract is not  &lt;code&gt;completed&lt;/code&gt;  and the  &lt;code&gt;deadline&lt;/code&gt;  is not reached yet&lt;/li&gt;
&lt;li&gt;  user can withdraw their funds if  &lt;code&gt;deadline&lt;/code&gt;  has been reached and the external contract is not  &lt;code&gt;completed&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;timeLeft()&lt;/code&gt;  is returning the remaining seconds until  &lt;code&gt;deadline&lt;/code&gt;  is reached, after that it should always return  &lt;code&gt;0&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-you-should-cover-in-your-test"&gt;
  &lt;/a&gt;
  What you should cover in your test
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt;  this is my personal approach to testing, if you have suggestions, hit me up on Twitter!&lt;/p&gt;

&lt;p&gt;When I write tests what I have in mind is to take an individual function and cover all the edge cases. Try to write your tests answering these questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Have I covered all the  &lt;strong&gt;edge cases&lt;/strong&gt;?&lt;/li&gt;
&lt;li&gt;  Is the function  &lt;strong&gt;reverting&lt;/strong&gt;  when expected?&lt;/li&gt;
&lt;li&gt;  Is the function  &lt;strong&gt;emitting&lt;/strong&gt;  the needed  &lt;strong&gt;events&lt;/strong&gt;?&lt;/li&gt;
&lt;li&gt;  With a specific  &lt;strong&gt;input&lt;/strong&gt;, will the function produce the expected  &lt;strong&gt;output&lt;/strong&gt;? Will the new  &lt;strong&gt;state&lt;/strong&gt;  of the Contract be shaped as we expect?&lt;/li&gt;
&lt;li&gt;  Will the function  &lt;strong&gt;returns&lt;/strong&gt;  (if it returns something) what we are expecting?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-to-simulate-blockchain-mining-in-your-test"&gt;
  &lt;/a&gt;
  How to simulate blockchain mining in your test
&lt;/h3&gt;

&lt;p&gt;Remember when we said that to correctly simulate  &lt;code&gt;timeLeft()&lt;/code&gt;  we had to create transactions or just ask for funds from the Faucet (that’s a transaction as well)? Well, to solve this issue on our test I have implemented a little utility (that you can simply copy/paste in other projects) that do the same thing:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MYoF5_P_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2ApGqZzGlYEIRXKQ3ZAy4GCw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MYoF5_P_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2ApGqZzGlYEIRXKQ3ZAy4GCw.png" alt="increaseWorldTimeInSeconds function"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you call &lt;code&gt;increaseWorldTimeInSeconds(10, true)&lt;/code&gt;  it will increase the EVM internal timestamp 10 seconds ahead of the current time. After that, if you specify it, it will also mine a block to create a transaction.&lt;/p&gt;

&lt;p&gt;The next time that your contract will be called the  &lt;code&gt;block.timestamp&lt;/code&gt;  used in  &lt;code&gt;timeLeft()&lt;/code&gt;  should be updated.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing-the-execute-function"&gt;
  &lt;/a&gt;
  Testing the execute() function
&lt;/h3&gt;

&lt;p&gt;Let’s review one test and then I’ll post the entire code explaining only some specific code. The code about is covering the  &lt;code&gt;execute()&lt;/code&gt;  function of our code&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;  The first test check that if the  &lt;code&gt;execute()&lt;/code&gt;  function is called when the threshold is not reached it will revert the transaction with the correct error message&lt;/li&gt;
&lt;li&gt;  The second test is calling two consecutive times the  &lt;code&gt;execute()&lt;/code&gt;  function. The staking process is already done and the transaction should be reverted, preventing doing it again.&lt;/li&gt;
&lt;li&gt;  The third test is trying to call the  &lt;code&gt;execute()&lt;/code&gt;  function after the time deadline. The transaction should revert because you can call the  &lt;code&gt;execute()&lt;/code&gt;  function only before the deadline is reached.&lt;/li&gt;
&lt;li&gt;  The last test is testing that if all the requirements are met the  &lt;code&gt;execute()&lt;/code&gt;  function does not revert and the desired out is reached. After the function call the external contract  &lt;code&gt;completed&lt;/code&gt;  variable should be  &lt;code&gt;true&lt;/code&gt;, the External Contract  &lt;code&gt;balance&lt;/code&gt;  should be equal to the users staked amount and our contract balance should be equal to  &lt;code&gt;0&lt;/code&gt;  (we have transferred all the balance to the external contract).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If everything goes as expected, running  &lt;code&gt;yarn test&lt;/code&gt;  should give you this output&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t7MUH1vV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/538/1%2AtjI_7R3lLSq4SI8EeNstFA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t7MUH1vV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/538/1%2AtjI_7R3lLSq4SI8EeNstFA.png" alt="Text executing success!"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#test-coverage-complete-code"&gt;
  &lt;/a&gt;
  Test coverage complete code
&lt;/h3&gt;

&lt;p&gt;Here we go with the whole test coverage code&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Have you noticed that the test code coverage is far bigger than the Contract itself? That’s what we want to see!  &lt;strong&gt;Test all the things!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-step-deploy-your-contract-to-the-moon-testnet"&gt;
  &lt;/a&gt;
  Final step: deploy your Contract to the moon (testnet)
&lt;/h2&gt;

&lt;p&gt;Ok, now it’s time. We have implemented our Smart Contract, we have tested the frontend UI, we have covered every edge case with our tests. We are ready to deploy it on the testnet.&lt;/p&gt;

&lt;p&gt;Following the  &lt;a href="https://docs.scaffoldeth.io/scaffold-eth/solidity/deploying-your-contracts"&gt;scaffold-eth documentation&lt;/a&gt;, these are the steps we need to follow:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Change the  &lt;code&gt;defaultNetwork&lt;/code&gt;  in  &lt;code&gt;packages/hardhat/hardhat.config.js&lt;/code&gt;  to the testnet you would like to use (in my case rinkeby)&lt;/li&gt;
&lt;li&gt; Updated the  &lt;code&gt;infuriaProjectId&lt;/code&gt;  with one created on  &lt;a href="https://infura.io/"&gt;Infuria&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; Generate a deployer account  &lt;code&gt;with yarn generate&lt;/code&gt;  . This command should generate two  &lt;code&gt;.txt&lt;/code&gt;  file. One that will represent the account address and one with the  &lt;strong&gt;seed phrase&lt;/strong&gt;  of the generated account.&lt;/li&gt;
&lt;li&gt; Run  &lt;code&gt;yarn account&lt;/code&gt;  to see details of the account like eth balances across different networks.&lt;/li&gt;
&lt;li&gt; Make sure that the  &lt;strong&gt;mnemonic.txt&lt;/strong&gt;  and  &lt;strong&gt;relative account files&lt;/strong&gt;  are not pushed with your git repository, otherwise, anyone could get ownership of your Contract!&lt;/li&gt;
&lt;li&gt; Fund your deployer account with some funds. You can use an  &lt;a href="https://instantwallet.io/"&gt;instant wallet&lt;/a&gt;  to send funds to the QR code you just saw on your console.&lt;/li&gt;
&lt;li&gt; Deploy your contract with  &lt;code&gt;yarn deploy&lt;/code&gt;!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If everything goes well you should see something like this on your console&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn run v1.22.10  
$ yarn workspace [@scaffold](http://twitter.com/scaffold)-eth/hardhat deploy  
$ hardhat run scripts/deploy.js &amp;amp;&amp;amp; hardhat run scripts/publish.js📡 Deploying...🛰  Deploying: ExampleExternalContract  
 📄 ExampleExternalContract deployed to: 0x96918Bd0EeAF5BBe10deD67f796ef44b2f5cb2A3  
 🛰  Deploying: Staker  
 📄 Staker deployed to: 0x96918Bd0EeAF5BBe10deD67f796ef44b2f5cb2A3  
 💾  Artifacts (address, abi, and args) saved to:  packages/hardhat/artifacts/ 💽 Publishing ExampleExternalContract to ../react-app/src/contracts  
 📠 Published ExampleExternalContract to the frontend.  
 💽 Publishing Staker to ../react-app/src/contracts  
 📠 Published Staker to the frontend.  
✨  Done in 11.09s.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;Deployment metadata is stored in the  &lt;code&gt;/deployments&lt;/code&gt;  folder, and automatically copied to  &lt;code&gt;/packages/react-app/src/contracts/hardhat_contracts.json&lt;/code&gt;  via the  &lt;code&gt;--export-all&lt;/code&gt;  flag in the  &lt;code&gt;yarn deploy&lt;/code&gt;  command (see  &lt;code&gt;/packages/hardhat/packagen.json&lt;/code&gt;).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you want to check the deployed contract you can search for them on the Etherscan Rinkeby site:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://rinkeby.etherscan.io/address/0x96918Bd0EeAF5BBe10deD67f796ef44b2f5cb2A3"&gt;ExampleExternalContract&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://rinkeby.etherscan.io/address/0x3380Be31610732c7DEF9f6862e157e4D3Dfd2481"&gt;Staker Contract&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#update-your-frontend-app-and-deploy-it-on-surge"&gt;
  &lt;/a&gt;
  Update your frontend app and deploy it on Surge!
&lt;/h3&gt;

&lt;p&gt;We are going to use the  &lt;a href="https://surge.sh/"&gt;Surge&lt;/a&gt;  method but you could also deploy your app on  &lt;strong&gt;AWS S3&lt;/strong&gt;  or on  &lt;strong&gt;IPFS&lt;/strong&gt;, that’s up to you!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In the near future I will try also to add some basic methods to also deploy it to  &lt;strong&gt;Vercel&lt;/strong&gt;  both manually (via CLI) and via GitHub Actions CI/CD.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The  &lt;a href="https://docs.scaffoldeth.io/scaffold-eth/deployment/shipping-your-app"&gt;scaffold-eth documentations&lt;/a&gt;  always come in hand but I will summarize what you should do:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; If you are deploying on mainnet you should verify your contract on Etherscan. This procedure will add credibility and trust to your application. If you are interested in doing so just follow  &lt;a href="https://docs.scaffoldeth.io/scaffold-eth/infraestructure/etherscan"&gt;this guide&lt;/a&gt;  for scaffold-eth.&lt;/li&gt;
&lt;li&gt; Turn  &lt;strong&gt;off Debug Mode&lt;/strong&gt;  (it prints an awful lot of console.log, something that you don’t want to see in Chrome Developer Console, trust me!). Open  &lt;code&gt;App.jsx&lt;/code&gt;  , find  &lt;code&gt;const DEBUG = true;&lt;/code&gt;  and turn it to  &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt; Take a look at  &lt;code&gt;App.jsx&lt;/code&gt;  and remove all unused code, just be sure to ship only what you really need!&lt;/li&gt;
&lt;li&gt; Make sure that your React app is pointing to the correct network (the one you just used to deploy your Contract). Look for  &lt;code&gt;const targetNetwork = NETWORKS[“localhost”];&lt;/code&gt;  and replace  &lt;code&gt;localhost&lt;/code&gt;  with the network of your contract. In our case, it will be  &lt;code&gt;rinkeby&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt; Make sure you are using your own nodes and not the ones in Scaffold-eth as they are public and there’s no guarantee they will be taken down or rate limited. Review lines 58 and 59 of  &lt;code&gt;App.jsx&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt; Update  &lt;code&gt;constants.js&lt;/code&gt;  and swap  &lt;strong&gt;Infura&lt;/strong&gt;,  &lt;strong&gt;Etherscan,&lt;/strong&gt;  and  &lt;strong&gt;Blocknative&lt;/strong&gt; API Keys if you want to use their services.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Are we ready? Let’s go!&lt;/p&gt;

&lt;p&gt;Now build your React App with&lt;code&gt;yarn build&lt;/code&gt;  and when the build script has finished deploy it to Surge with  &lt;code&gt;yarn surge&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If everything goes well you should see something like this. You dApp is now live on Surge!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DMUlLbvy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2Ad9a9bJtM4qBvYsytC81JUw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DMUlLbvy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2Ad9a9bJtM4qBvYsytC81JUw.png" alt="Deploy on Surge.sh success!"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can checkout our deployed dApp here:  &lt;a href="https://woozy-cable.surge.sh/"&gt;https://woozy-cable.surge.sh/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recap-and-conclusions"&gt;
  &lt;/a&gt;
  Recap and Conclusions
&lt;/h2&gt;

&lt;p&gt;That’s what we have learned and done so far&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Clone scaffold-eth challenge repo&lt;/li&gt;
&lt;li&gt;  Learned a couple of fundamental concepts (remember to keep reading Solidity by Example, Hardhat documentation, Solidity documentation, Waffle documentation)&lt;/li&gt;
&lt;li&gt;  Create a Smart Contract from zero&lt;/li&gt;
&lt;li&gt;  Create a full Test Suite for our Contract&lt;/li&gt;
&lt;li&gt;  Tested our Contract locally on hardhat network&lt;/li&gt;
&lt;li&gt;  Deployed our contract on Rinkeby&lt;/li&gt;
&lt;li&gt;  Deployed our dApp on Surge&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If everything works as expect, you are ready to make the big jump and deploy everything on Ethereum main net!&lt;/p&gt;

&lt;p&gt;GitHub Repo for this project:  &lt;a href="https://github.com/StErMi/scaffold-eth-challenge-1-decentralized-staking"&gt;scaffold-eth-challenge-1-decentralized-staking&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#did-you-like-this-content-follow-me-for-more"&gt;
  &lt;/a&gt;
  Did you like this content? Follow me for more!
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  GitHub:  &lt;a href="https://github.com/StErMi"&gt;https://github.com/StErMi&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  Twitter:  &lt;a href="https://twitter.com/StErMi"&gt;https://twitter.com/StErMi&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  Medium:  &lt;a href="https://medium.com/@stermi"&gt;https://medium.com/@stermi&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  Dev.to:  &lt;a href="https://dev.to/stermi"&gt;https://dev.to/stermi&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>solidity</category>
      <category>ethereum</category>
      <category>dapps</category>
      <category>react</category>
    </item>
    <item>
      <title>Top 10 VS Code Themes</title>
      <author>Muthu Annamalai Venkatachalam</author>
      <pubDate>Sun, 05 Sep 2021 05:45:56 +0000</pubDate>
      <link>https://dev.to/muthuannamalai12/top-10-vs-code-themes-3b60</link>
      <guid>https://dev.to/muthuannamalai12/top-10-vs-code-themes-3b60</guid>
      <description>&lt;p&gt;Working in a nice place makes you feel more productive, if you enjoy the look of your code, then you also enjoy writing it, editing it, and painstakingly debugging it. If visuals are important to you, then you’ve come to the right place. Want to make VS Code look a lot better? There are several ways to customize Visual Studio Code, but you should start first with a great theme! If you're looking for a new theme to change up your code editor in the new year, I'm here to help! Check out a variety of stylish themes with unique color palettes—from sleek to snazzy to vibrant and everything in between—to see what works best for you. Learn more about them in this article! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-change-your-visual-studio-code-theme"&gt;
  &lt;/a&gt;
  How to change your Visual Studio Code theme
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;For MAC Users:&lt;/strong&gt; ⌘K and then ⌘T to display the picker.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Or you can go to the Code &amp;gt; Preferences &amp;gt; Color Theme&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For Windows Users:&lt;/strong&gt; Ctrl + Shift + P&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Or you can go to the File Icon &amp;gt;Theme Picker with File &amp;gt;Preferences &amp;gt;File Icon Theme&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here’s the list, choose whatever makes you productive.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-dracula-official"&gt;
  &lt;/a&gt;
  1) Dracula Official:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=dracula-theme.theme-dracula"&gt;Get It Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dzpiB6-u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625567841148/donRBUHoB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dzpiB6-u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625567841148/donRBUHoB.png" alt="1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-shades-of-purple"&gt;
  &lt;/a&gt;
  2) Shades of Purple:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=ahmadawais.shades-of-purple"&gt;Get It Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GOSLAoWQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625568020894/gRP6U8QGxq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GOSLAoWQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625568020894/gRP6U8QGxq.png" alt="2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-winter-is-coming"&gt;
  &lt;/a&gt;
  3) Winter is coming:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=johnpapa.winteriscoming"&gt;Get It Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Winter is Coming Dark Blue Theme&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XhC_Iq93--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625568786606/P3rFSRfit.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XhC_Iq93--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625568786606/P3rFSRfit.png" alt="3.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Winter is Coming Dark Black Theme&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--shOikNff--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625568853223/2L13Bceee.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--shOikNff--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625568853223/2L13Bceee.png" alt="4.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Winter is Coming Light Theme&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UWgOK6Qs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625568874456/MTqf3rns1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UWgOK6Qs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625568874456/MTqf3rns1.png" alt="5.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-night-owl"&gt;
  &lt;/a&gt;
  4) Night Owl
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=sdras.night-owl"&gt;Get It Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Night Owl&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w1lVAIj2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625568952881/vgiEhrmNV.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w1lVAIj2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625568952881/vgiEhrmNV.jpeg" alt="6.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Light Owl&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Clwgxf4c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625568972567/E8LjczvZ5.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Clwgxf4c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625568972567/E8LjczvZ5.jpeg" alt="7.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-laserwave"&gt;
  &lt;/a&gt;
  5) LaserWave:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=jaredkent.laserwave"&gt;Get It Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fJS24Qes--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625569126528/JnkJtJ9h5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fJS24Qes--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625569126528/JnkJtJ9h5.png" alt="8.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-firefox-theme"&gt;
  &lt;/a&gt;
  6) Firefox Theme
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=Heron.firefox-devtools-theme"&gt;Get It Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Firefox Dark&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6SI0P9z0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625569346787/c2YBkZIs4.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6SI0P9z0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625569346787/c2YBkZIs4.jpeg" alt="9.jfif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Firefox Light&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qxb_O_Dj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625569374022/zLEbJ7DAV.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qxb_O_Dj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625569374022/zLEbJ7DAV.jpeg" alt="10.jfif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-one-dark-pro"&gt;
  &lt;/a&gt;
  7) One Dark Pro
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=zhuangtongfa.Material-theme"&gt;Get It Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y0B8ECN0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625569462948/M-kxShveLH0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y0B8ECN0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625569462948/M-kxShveLH0.png" alt="11.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-cobalt-2"&gt;
  &lt;/a&gt;
  8) Cobalt 2
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=wesbos.theme-cobalt2"&gt;Get It Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TuQu9V13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625569519439/TayxhTmFV.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TuQu9V13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625569519439/TayxhTmFV.jpeg" alt="12.jfif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-palenight"&gt;
  &lt;/a&gt;
  9) PaleNight
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=whizkydee.material-palenight-theme"&gt;Get It Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TZDdzUpX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625569581264/CSf_tJrch.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TZDdzUpX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625569581264/CSf_tJrch.png" alt="13.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-outrun"&gt;
  &lt;/a&gt;
  10) OutRun
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=samrapdev.outrun"&gt;Get It Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OutRun Night&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MOihorZj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625569704886/E7HnyWzDs.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MOihorZj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625569704886/E7HnyWzDs.jpeg" alt="14.jfif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OutRun Electric&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5rIDyBwR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625569715291/YQssWgWgg.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5rIDyBwR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625569715291/YQssWgWgg.jpeg" alt="15.jfif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There you have it! Those are some of my favorite themes available for VS Code, do you use any of these themes as well? What's your favorite VS-Code theme? Let me know in the comments 👇 😊 &lt;/p&gt;

&lt;p&gt;To all my readers out here I have an interesting thing to share with you. Hint: That is about a Hackathon. Keep reading to know more&lt;/p&gt;

&lt;p&gt;A hackathon might be an alternative for you if you are a computer science student or an upcoming developer. An online or physical hackathon allows you to develop your coding skills, gain experience working with developers, develop your resume, and meet peers in your field. &lt;/p&gt;

&lt;p&gt;If you are looking for one such hackathon I can recommend Hack This Fall 2.0. It is happening between 22nd October to 24th October. For this season, they are taking this to a level higher with a 48 Hours Virtual Hackathon; where they are aiming to promote hackers and help them nurture their new ideas and prototypes in various domains. Their motto is also to involve more beginner hackers and support everyone to solve the shared problems of our society, to bring a change in a positive way.&lt;/p&gt;

&lt;p&gt;If you want to register for this wonderful hackathon you can do it &lt;a href="https://hackthisfall.devpost.com/"&gt;here&lt;/a&gt; and do not forgot to use my referral code: HTFHE060&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can now extend your support by buying me a Coffee.😊👇&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/muthuannamalai"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Launching WordPress on AWS with RDS</title>
      <author>Suraj Warbhe</author>
      <pubDate>Sun, 05 Sep 2021 05:06:28 +0000</pubDate>
      <link>https://dev.to/surajwarbhe/launching-wordpress-on-aws-with-rds-2ee7</link>
      <guid>https://dev.to/surajwarbhe/launching-wordpress-on-aws-with-rds-2ee7</guid>
      <description>&lt;h1&gt;
  &lt;a href="#usecase"&gt;
  &lt;/a&gt;
  USE-CASE
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Create an AWS EC2 instance
&lt;/li&gt;
&lt;li&gt;Configure the instance with Apache webserver&lt;/li&gt;
&lt;li&gt;Download php application name "WordPress".&lt;/li&gt;
&lt;li&gt;Setup a MySQL server using AWS RDS service using Free Tier as a backend&lt;/li&gt;
&lt;li&gt;Provide the endpoint/connection string to the WordPress application to make it work&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Pre-requisite:
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;AWS Account&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#step-1-create-an-ec2-instance"&gt;
  &lt;/a&gt;
  STEP 1 : Create an EC2 Instance
&lt;/h3&gt;

&lt;p&gt;🔶 We need to launch an EC2 Instance on AWS which we will use to configure Apache Webserver and run WordPress.&lt;/p&gt;

&lt;p&gt;🔶 Click on &lt;code&gt;Launch Instance&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;🔶 Select 'Amazon Linux` as a Instance Flavor.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J8YlANvi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cf750g51p3g1crsjk787.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J8YlANvi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cf750g51p3g1crsjk787.png" alt="Launch instance wizard _ EC2 Management Console - Google Chrome 04-09-2021 10_07_48 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔶 Select &lt;code&gt;t2.micro&lt;/code&gt; as a &lt;code&gt;instance type&lt;/code&gt;. It is free for eligible.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jBd7JScs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/af4qde5o34ggtbb6d6a1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jBd7JScs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/af4qde5o34ggtbb6d6a1.png" alt="Launch instance wizard _ EC2 Management Console - Google Chrome 04-09-2021 10_08_00 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔶 Provide configuration details and click on &lt;code&gt;Add Storage&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ij3TjvWQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcm5mrraeo5ndnkj0q7n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ij3TjvWQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcm5mrraeo5ndnkj0q7n.png" alt="Launch instance wizard _ EC2 Management Console - Google Chrome 04-09-2021 10_08_06 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔶 Add &lt;code&gt;storage&lt;/code&gt;. I will keep it default. And click on &lt;code&gt;Add Tag&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cK8ZiYtI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jarywbww9xy7slr907g2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cK8ZiYtI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jarywbww9xy7slr907g2.png" alt="Launch instance wizard _ EC2 Management Console - Google Chrome 04-09-2021 10_08_20 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔶 Add &lt;code&gt;tag&lt;/code&gt; if you want. For this, click on &lt;code&gt;Add another tag&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v8Fki1wk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kzd0hzveavwmty8o3hf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v8Fki1wk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kzd0hzveavwmty8o3hf.png" alt="Launch instance wizard _ EC2 Management Console - Google Chrome 04-09-2021 10_08_43 PM"&gt;&lt;/a&gt;&lt;br&gt;
🔶 After this click on &lt;code&gt;Configure Security Group&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;🔶 Click on &lt;code&gt;Add Rule&lt;/code&gt;. I will allow &lt;code&gt;All traffic&lt;/code&gt; to avoid any firewall issue. Then click on &lt;code&gt;Review and Launch&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;🔶 Attach &lt;code&gt;key pair&lt;/code&gt; then Instance will launched successfully.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y_GgS-SX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8vvq77usiutd6px6whv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y_GgS-SX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8vvq77usiutd6px6whv.png" alt="Launch instance wizard _ EC2 Management Console - Google Chrome 04-09-2021 10_09_27 PM"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7FYDG4IR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ibv8gdutzshum4xsc4q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7FYDG4IR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ibv8gdutzshum4xsc4q.png" alt="Launch instance wizard _ EC2 Management Console - Google Chrome 04-09-2021 10_09_57 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔶 Click on &lt;code&gt;Instance ID&lt;/code&gt;. You will get all the details of your created instance.&lt;/p&gt;

&lt;p&gt;🔶 You will get &lt;code&gt;Public IP&lt;/code&gt; and &lt;code&gt;Private IP&lt;/code&gt; from this.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2gQ4hbEb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h7jy6dzqyrkaaumzrbxy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2gQ4hbEb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h7jy6dzqyrkaaumzrbxy.png" alt="Launch instance wizard _ EC2 Management Console - Google Chrome 04-09-2021 10_10_32 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you can use &lt;code&gt;Public IP address&lt;/code&gt; any Key to connect this Instance. You can use Putty(Recommended) or CLI Browser provided by Amazon to Connect Instance.&lt;/p&gt;

&lt;p&gt;Lets go for Next to Configure the instance as Apache Webserver:&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#step-2-configure-the-instance-with-apache-webserver"&gt;
  &lt;/a&gt;
  STEP 2 : Configure the Instance with Apache Webserver
&lt;/h3&gt;

&lt;p&gt;🔶 Here we are going to configure the &lt;code&gt;Apache Web Server&lt;/code&gt; in Amazon Linux 2 Instance.&lt;/p&gt;

&lt;p&gt;🔶 To run WordPress, we need to run a web server on our EC2 instance. The open source Apache web server is the most popular web server used with WordPress.&lt;br&gt;
🔶 Install Apache Web Server.&lt;br&gt;
`&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo su -
yum install httpd -y 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🔶 Then we are Starting Webserver and Enable it Permanently.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;systemctl start httpd

systemctl enable httpd
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-3-installation-and-configuration-of-php-software-name-raw-wordpress-endraw-"&gt;
  &lt;/a&gt;
  STEP 3 : Installation and configuration of php software name &lt;code&gt;WordPress&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;🔶 WordPress is a php Application, let’s install &lt;code&gt;php 7.2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;🔶 With Amazon Linux 2, you can use the Extras Library to install application and software updates on your instances.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; amazon-linux-extras install -y php7.2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🔶 After that download WordPress file!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;wget http://wordpress.org/latest.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🔶 After download the "TAR" file "UNTAR" it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;tar -xvzf latest.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🔶 Next you see &lt;code&gt;wordpress&lt;/code&gt; name &lt;code&gt;dir&lt;/code&gt; come up. So now you can copy all Content inside &lt;code&gt;wordpress folder&lt;/code&gt; to Document Root &lt;code&gt;/var/www/html&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cp -rf wordpress/* /var/www/html
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  Note:
&lt;/h5&gt;

&lt;p&gt;Make Sure where you download your &lt;code&gt;tar&lt;/code&gt; file and where you &lt;code&gt;Untar&lt;/code&gt; it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-setup-a-mysql-server-using-aws-rds-service-with-free-tier-account"&gt;
  &lt;/a&gt;
  STEP 4 : Setup a MySQL server using AWS RDS service with Free Tier Account
&lt;/h3&gt;

&lt;p&gt;🔶 Let’s now launch a MySql database using &lt;code&gt;Amazon RDS&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;🔶 Click on &lt;code&gt;Create Database&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PzFooUrY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9o6013f3v5gsozxzzoag.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PzFooUrY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9o6013f3v5gsozxzzoag.png" alt="RDS Management Console - Google Chrome 04-09-2021 10_16_24 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔶 Choose &lt;code&gt;Standard Create&lt;/code&gt; and &lt;code&gt;MySQL&lt;/code&gt; as a engine option.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RUIjsqZa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/412xa1rf8iwtwx3evupv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RUIjsqZa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/412xa1rf8iwtwx3evupv.png" alt="RDS Management Console - Google Chrome 04-09-2021 10_16_55 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔶 Select Version &lt;code&gt;MySQL 8.0.20&lt;/code&gt; and template as &lt;code&gt;Free tier&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HIt3m-Nx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tz7jwakay9o39i2brny4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HIt3m-Nx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tz7jwakay9o39i2brny4.png" alt="RDS Management Console - Google Chrome 04-09-2021 10_17_14 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔶 Provide DB Instance name, Username &amp;amp; Password&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SMgSQXxr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qtqxdoq3jg186p48hs84.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SMgSQXxr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qtqxdoq3jg186p48hs84.png" alt="RDS Management Console - Google Chrome 04-09-2021 10_26_22 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔶 Here this DB instance have No Connectivity to Internet. We will access it through EC2 Instance.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kDWH5tf9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/utmybrrxb6ru9ojuq0wh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kDWH5tf9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/utmybrrxb6ru9ojuq0wh.png" alt="RDS Management Console - Google Chrome 04-09-2021 10_23_51 PM"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2Dt04Vg5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fc74erj62llfcv1h1ol3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2Dt04Vg5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fc74erj62llfcv1h1ol3.png" alt="RDS Management Console - Google Chrome 04-09-2021 10_24_30 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔶 Now after Launching this DB Instance &lt;code&gt;mydb&lt;/code&gt; named Database will be created inside this DB server.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w6dnlyNc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4qak8y43nr5lbjuz3nf2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w6dnlyNc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4qak8y43nr5lbjuz3nf2.png" alt="RDS Management Console - Google Chrome 04-09-2021 10_25_20 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔶 Now click on &lt;code&gt;Launch Database&lt;/code&gt;. It will take around 10 minutes.&lt;/p&gt;

&lt;p&gt;🔶 Once the Database is available, click on &lt;code&gt;Connectivity &amp;amp; Security&lt;/code&gt;. You will get &lt;code&gt;hostname&lt;/code&gt; and &lt;code&gt;Port no.&lt;/code&gt; there.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gRgNxoSw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uuurfyjk2l72iowgxsc7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gRgNxoSw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uuurfyjk2l72iowgxsc7.png" alt="RDS Management Console - Google Chrome 04-09-2021 10_36_48 PM"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#step-5-provide-the-endpointconnection-string-to-the-wordpress-application"&gt;
  &lt;/a&gt;
  STEP 5 : Provide the Endpoint/Connection string to the WordPress Application
&lt;/h3&gt;

&lt;p&gt;🔶 Go to the created EC2 Instances instance. In the Description below, find the &lt;code&gt;Public DNS (IPv4)&lt;/code&gt; of your instance.&lt;/p&gt;

&lt;p&gt;🔶 Enter this IP Address into your web browser. And type Enter.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1oxVSDVG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kh7w8tkxrf1sefago6rg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1oxVSDVG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kh7w8tkxrf1sefago6rg.png" alt="WordPress › Setup Configuration File - Google Chrome 05-09-2021 08_56_01 AM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M4GzbRII--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d10c8wlvnx13gogvkgco.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M4GzbRII--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d10c8wlvnx13gogvkgco.png" alt="WordPress › Setup Configuration File - Google Chrome 05-09-2021 08_56_08 AM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔅 Provide Following Information:&lt;br&gt;
🌀 Database Name: Provide Name of Database which created at time of launching DB!&lt;/p&gt;

&lt;p&gt;🌀 Username: The username you given while launching DB Instance!&lt;/p&gt;

&lt;p&gt;🌀 Password: Provide Password!&lt;/p&gt;

&lt;p&gt;🌀 Database Host: Provide the ENDPOINT which you get from "wordpress-database"!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X5SNasLW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4cdzq3tzeds4k6ggwf6l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X5SNasLW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4cdzq3tzeds4k6ggwf6l.png" alt="(4) Launching WordPress on AWS with RDS _ LinkedIn - Google Chrome 05-09-2021 09_06_58 AM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔶 Now our WordPress is running on the AWS using AWS RDS as a service and in the backend it is using MySQL. &lt;br&gt;
Let's check from CLI.&lt;br&gt;
Use command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# mysql -h &amp;lt;endpoint_url&amp;gt; -u &amp;lt;username&amp;gt; -p
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And provide our password.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RAABndSJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kjamk2n50v8rafc9ynr0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RAABndSJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kjamk2n50v8rafc9ynr0.png" alt="root@ip-172-31-45-40_~ 05-09-2021 09_19_29 AM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔶 Provide Following Details and Install WordPress!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rMjFJb-o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jmlgpt9fr7r296q778mz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rMjFJb-o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jmlgpt9fr7r296q778mz.png" alt="WordPress › Installation - Google Chrome 05-09-2021 09_09_20 AM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔶 After Login with the credentials and Login to WordPress!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uUjP1sLz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wuse2led2assp3rv0r49.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uUjP1sLz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wuse2led2assp3rv0r49.png" alt="WordPress › Installation - Google Chrome 05-09-2021 09_09_31 AM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UHMikP5G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awk644ey1wx5vi0dhveu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UHMikP5G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awk644ey1wx5vi0dhveu.png" alt="WordPress › Installation - Google Chrome 05-09-2021 09_17_13 AM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#successfully-done-we-have-login-in-to-wordpress-and-we-can-continue-to-write-blogs-etc-all-your-data-will-be-stored-in-rds-mysql-db"&gt;
  &lt;/a&gt;
  Successfully done! We have Login in to WordPress and we can continue to write Blogs etc., All your Data will Be stored in RDS MySQL DB.
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hgxzl7Ad--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yybi3w53tdcy9ct6uk38.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hgxzl7Ad--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yybi3w53tdcy9ct6uk38.gif" alt="68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f776174747061642d6d656469612d736572766963652f53746f7279496d6167652f69346776387341505f5f586746673d3d2d3931363135303430372e3136316636643238343363343039646134303138393"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>mysql</category>
      <category>wordpress</category>
      <category>awsrds</category>
    </item>
    <item>
      <title>How Pros Automate Repetitive Code using VS Code</title>
      <author>Tapajyoti Bose</author>
      <pubDate>Sun, 05 Sep 2021 04:02:44 +0000</pubDate>
      <link>https://dev.to/ruppysuppy/how-pros-automate-repetitive-code-using-vs-code-53b</link>
      <guid>https://dev.to/ruppysuppy/how-pros-automate-repetitive-code-using-vs-code-53b</guid>
      <description>&lt;p&gt;While &lt;strong&gt;Programming&lt;/strong&gt;, you are bound to encounter &lt;em&gt;Repetitive Code&lt;/em&gt;, writing which is a complete &lt;strong&gt;waste of time&lt;/strong&gt;. I am not talking about &lt;strong&gt;Non-DRY Code&lt;/strong&gt;, but &lt;em&gt;Essentials Code&lt;/em&gt; that is necessary to be written. An example of this would be connecting &lt;strong&gt;State&lt;/strong&gt;/&lt;strong&gt;Dispatch&lt;/strong&gt; to &lt;strong&gt;Props&lt;/strong&gt; using &lt;strong&gt;React-Redux&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Anyone who has worked on a decent-sized &lt;strong&gt;React-Redux&lt;/strong&gt; project knows how many times you have to write the same code to connect the &lt;strong&gt;Redux Store Data&lt;/strong&gt; to the &lt;strong&gt;Component Props&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Today we are going to fix that and provide you with a way to &lt;em&gt;streamline &lt;strong&gt;ANY&lt;/strong&gt; Repetitive Code&lt;/em&gt; you have and &lt;strong&gt;Maximize your Productivity&lt;/strong&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-are-snippets-in-vs-code"&gt;
  &lt;/a&gt;
  What are &lt;strong&gt;Snippets&lt;/strong&gt; in &lt;strong&gt;VS Code&lt;/strong&gt;?
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;VS Code&lt;/strong&gt; is an Amazing Code Editor that provides a &lt;em&gt;plethora of tools&lt;/em&gt; to take your &lt;strong&gt;productivity&lt;/strong&gt; to the &lt;strong&gt;next level&lt;/strong&gt;. &lt;strong&gt;Snippets&lt;/strong&gt; are just one such tool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Snippets&lt;/strong&gt; can be thought of as &lt;strong&gt;Templates&lt;/strong&gt; that enable you &lt;em&gt;write code once&lt;/em&gt; and reuse it, &lt;em&gt;as per requirement&lt;/em&gt;. It allows &lt;strong&gt;Variables&lt;/strong&gt; as well as &lt;strong&gt;Dynamic User Inputs&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If you have been using &lt;strong&gt;VS Code&lt;/strong&gt; for some time, you are bound to come across &lt;strong&gt;Snippets&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l0U4WfyZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0dl9v0jabeyz1e5zp616.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l0U4WfyZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0dl9v0jabeyz1e5zp616.png" alt="Snippet"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some &lt;strong&gt;Snippets&lt;/strong&gt; come pre-built with &lt;strong&gt;VS Code&lt;/strong&gt;. You can install some extensions to add event more &lt;strong&gt;Snippets&lt;/strong&gt;, but most importantly, you can create your own &lt;strong&gt;Snippets&lt;/strong&gt; to cater to your very own needs.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#creating-our-first-snippets"&gt;
  &lt;/a&gt;
  Creating our first &lt;strong&gt;Snippets&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;Creating a &lt;strong&gt;Snippets&lt;/strong&gt; is fairly simple:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Go to &lt;strong&gt;File &amp;gt; Preferences &amp;gt; User Snippets&lt;/strong&gt; (possibly &lt;strong&gt;Code &amp;gt; Preferences &amp;gt; User Snippets&lt;/strong&gt; on macOS).&lt;/p&gt;

&lt;p&gt;Or you might use &lt;code&gt;F1&lt;/code&gt; to bring up the &lt;strong&gt;Command Palette&lt;/strong&gt; and search for &lt;strong&gt;User Snippets&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the type of &lt;strong&gt;Snippet&lt;/strong&gt; you want to create (&lt;strong&gt;language-specific&lt;/strong&gt;, &lt;strong&gt;project-specific&lt;/strong&gt; or &lt;strong&gt;global&lt;/strong&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a_YSpOzr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e23x82lrpzerzvzx2sxy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a_YSpOzr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e23x82lrpzerzvzx2sxy.png" alt="Snippet Creation"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the following in the created &lt;code&gt;.code-snippets&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"Signature"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"scope"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"html"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"prefix"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"hello"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"body"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="s2"&gt;"Hello!!!"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Hello"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Done! Now when you type &lt;strong&gt;"hello"&lt;/strong&gt; in an &lt;strong&gt;HTML&lt;/strong&gt; file, you would be to use the &lt;strong&gt;Snippet&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This wasn't a practical example, but we did manage to get our feet wet at making &lt;strong&gt;Snippets&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;On inspecting the &lt;strong&gt;Snippet&lt;/strong&gt; definition, we find the &lt;code&gt;scope&lt;/code&gt; that declares which files the &lt;strong&gt;Snippet&lt;/strong&gt; should be used in. The &lt;code&gt;prefix&lt;/code&gt; mentions the &lt;strong&gt;prefix text&lt;/strong&gt; that will trigger the &lt;strong&gt;Snippet&lt;/strong&gt; to show up. The &lt;code&gt;body&lt;/code&gt; defines the &lt;strong&gt;body&lt;/strong&gt; of the &lt;strong&gt;Snippet&lt;/strong&gt;(each line of the &lt;strong&gt;Snippet&lt;/strong&gt; would be a new &lt;strong&gt;string&lt;/strong&gt; in array). And finally, &lt;code&gt;description&lt;/code&gt; is a short description of the &lt;strong&gt;Snippet&lt;/strong&gt;'s function.&lt;/p&gt;

&lt;p&gt;Let us make a couple of &lt;strong&gt;practical ones&lt;/strong&gt; to &lt;em&gt;deepen our understanding&lt;/em&gt; and solve the issue mentioned in the &lt;em&gt;Intro of the article&lt;/em&gt; (connecting &lt;strong&gt;State&lt;/strong&gt;/&lt;strong&gt;Dispatch&lt;/strong&gt; to &lt;strong&gt;Props&lt;/strong&gt; using &lt;strong&gt;React-Redux&lt;/strong&gt;).&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#snippet-1-leaving-a-signature"&gt;
  &lt;/a&gt;
  Snippet 1: Leaving a Signature
&lt;/h1&gt;

&lt;p&gt;Let's try making a snippet that leaves a &lt;em&gt;signature&lt;/em&gt; like this in any file and isn't restricted to only &lt;strong&gt;Python&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="s"&gt;"""
Name: Tapajyoti Bose
Modified on: 05 September 2021 08:38:35
"""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We would also like the &lt;strong&gt;Snippet&lt;/strong&gt; to update the &lt;strong&gt;date&lt;/strong&gt; and &lt;strong&gt;time&lt;/strong&gt; dynamically, of course.&lt;/p&gt;

&lt;p&gt;Luckily, &lt;strong&gt;VS Code&lt;/strong&gt; provides a bunch of &lt;strong&gt;variables&lt;/strong&gt; for this purpose. &lt;/p&gt;

&lt;p&gt;We would be using &lt;code&gt;BLOCK_COMMENT_START&lt;/code&gt; and &lt;code&gt;BLOCK_COMMENT_END&lt;/code&gt; to automatically generate the block comments for any language and &lt;code&gt;CURRENT_DATE&lt;/code&gt;, &lt;code&gt;CURRENT_MONTH_NAME&lt;/code&gt;, &lt;code&gt;CURRENT_YEAR&lt;/code&gt;, &lt;code&gt;CURRENT_HOUR&lt;/code&gt;, &lt;code&gt;CURRENT_MINUTE&lt;/code&gt;, &amp;amp; &lt;code&gt;CURRENT_SECOND&lt;/code&gt; to generate the &lt;strong&gt;date&lt;/strong&gt; and &lt;strong&gt;time&lt;/strong&gt; dynamically.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: To get the complete list of &lt;strong&gt;variables&lt;/strong&gt;, &lt;a href="https://code.visualstudio.com/docs/editor/userdefinedsnippets#_variables"&gt;click here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So the &lt;strong&gt;Snippet&lt;/strong&gt; would initially look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"Signature"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"scope"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"python,javascript,typescript,html,css"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"prefix"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"signature"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"body"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"$BLOCK_COMMENT_START"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"Name: Tapajyoti Bose"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"Modified on: $CURRENT_DATE $CURRENT_MONTH_NAME $CURRENT_YEAR $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"$BLOCK_COMMENT_END"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Leave a signature"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now within &lt;strong&gt;Python&lt;/strong&gt;, &lt;strong&gt;Javascript&lt;/strong&gt;, &lt;strong&gt;Typescript&lt;/strong&gt;, &lt;strong&gt;HTML&lt;/strong&gt;, &lt;strong&gt;CSS&lt;/strong&gt; files, you would be able to leave a signature.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8MXTztiU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b7yb23slsuogytjmkzp7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8MXTztiU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b7yb23slsuogytjmkzp7.png" alt="Signature"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You might be wondering if &lt;em&gt;extending the functionality&lt;/em&gt; to &lt;em&gt;all languages&lt;/em&gt; would require you to add the &lt;em&gt;names of all languages&lt;/em&gt;. Luckily there is an easy solution: just remove the &lt;code&gt;scope&lt;/code&gt; from the &lt;strong&gt;Snippet&lt;/strong&gt; definition and &lt;strong&gt;Viola!&lt;/strong&gt; the functionality is extended to all languages!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#snippet-2-connecting-redux-to-react-props"&gt;
  &lt;/a&gt;
  Snippet 2: Connecting Redux to React Props
&lt;/h1&gt;

&lt;p&gt;This is even easier than the &lt;strong&gt;Signature Snippet&lt;/strong&gt;. Just copy the following code in the snippet definition, and you are done:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"Connect Component to Redux"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"scope"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"javascriptreact,typescriptreact"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"prefix"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"connect"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"body"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"const mapStateToProps = (state) =&amp;gt; ({"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt;$1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"})"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"const mapDispatchToProps = (dispatch) =&amp;gt; ({"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt;$0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"})"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"export default connect(mapStateToProps, mapDispatchToProps)($TM_FILENAME_BASE)"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Connect React Component to Redux"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let us examine what is being done.&lt;/p&gt;

&lt;p&gt;We are scoping the &lt;strong&gt;Snippet&lt;/strong&gt; to &lt;strong&gt;React&lt;/strong&gt; based projects for obvious reasons.&lt;/p&gt;

&lt;p&gt;In the body, you might be seeing &lt;code&gt;$0&lt;/code&gt; and &lt;code&gt;$1&lt;/code&gt; for the first time. These are placeholders for &lt;strong&gt;tab-able&lt;/strong&gt; positions where the user should enter &lt;em&gt;their own logic&lt;/em&gt; (the parts of the &lt;strong&gt;store&lt;/strong&gt; they want to connect to the &lt;strong&gt;props&lt;/strong&gt; in this case).&lt;/p&gt;

&lt;p&gt;We are using the &lt;strong&gt;File Name&lt;/strong&gt; as the &lt;strong&gt;Component Name&lt;/strong&gt;, as in &lt;em&gt;most&lt;/em&gt; cases, the convention is using the &lt;strong&gt;Component Name&lt;/strong&gt; to be the same as the &lt;strong&gt;File Name&lt;/strong&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h1&gt;

&lt;p&gt;In this article, we went over how you can &lt;strong&gt;Automate Repetitive Code&lt;/strong&gt; using &lt;strong&gt;VS Code Snippets&lt;/strong&gt;. Now you can create &lt;strong&gt;Custom Snippets&lt;/strong&gt; that solve your own problems and boost your productivity to new heights.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Happy Developing!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bhChxXQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eqh8teicsquqqivxlfus.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bhChxXQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eqh8teicsquqqivxlfus.gif" alt="Thumbs Up"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h1&gt;

&lt;p&gt;Want to work together? Contact me on &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to see what I am working on? Check out my &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am a freelancer who will start off as a Digital Nomad in mid-2022. Want to catch the journey? Follow me on &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow my blogs for weekly new tidbits on &lt;a href="https://dev.to/ruppysuppy"&gt;Dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These are a few commonly asked questions I get. So, I hope this &lt;strong&gt;FAQ&lt;/strong&gt; section solves your issues.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;I am a beginner, how should I learn Front-End Web Dev?&lt;/strong&gt;&lt;br&gt;
Look into the following articles:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/ruppysuppy/front-end-developer-roadmap-zero-to-hero-4pkf"&gt;Front End Development Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/ruppysuppy/5-projects-to-master-front-end-development-57p"&gt;Front End Project Ideas&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Would you mentor me?&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
Sorry, I am already under a lot of workload and would not have the time to mentor anyone.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Would you like to collaborate on our site?&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
As mentioned in the &lt;em&gt;previous question&lt;/em&gt;, I am in a time crunch, so I would have to pass on such opportunities.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Connect to me on&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.linkedin.com/in/tapajyoti-bose-429a601a0"&gt;LinkedIn&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://tapajyoti-bose.vercel.app"&gt;Portfolio&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>vscode</category>
      <category>productivity</category>
      <category>programming</category>
      <category>json</category>
    </item>
    <item>
      <title>How well do you know DOM JavaScript?</title>
      <author>Nicholas Mendez</author>
      <pubDate>Sun, 05 Sep 2021 03:50:49 +0000</pubDate>
      <link>https://dev.to/snickdx/how-well-do-you-know-dom-javascript-3fl5</link>
      <guid>https://dev.to/snickdx/how-well-do-you-know-dom-javascript-3fl5</guid>
      <description>&lt;p&gt;HTML and JavaScript have been around awhile, with its age there are some very nuanced tricks and hacks that aren't very well known. Let's take a look at some of them and when they are appropriate to use.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#but-first-the-bom"&gt;
  &lt;/a&gt;
  But first... the BOM
&lt;/h1&gt;

&lt;p&gt;The collection of JavaScript objects &amp;amp; methods that let use access the features of the browser is referred to as the Browser Object Model. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XwipPdI3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/czniaazwv9pgm5pegycu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XwipPdI3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/czniaazwv9pgm5pegycu.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The Document Object Model which is the hierarchy of elements on a page that is accessed from the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/documentElement"&gt;window.document&lt;/a&gt; object. The DOM is really just part of the wider Browser Object Model BOM. &lt;/p&gt;

&lt;p&gt;The BOM then forms part of the wider set of Web APIs which allow us to tap into the wider features of the web.&lt;/p&gt;

&lt;p&gt;I often like to access a form and its element via their names and the document object as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"myform"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;

       &lt;span class="c1"&gt;//you can access myform from the dom using document.forms&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myform&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forms&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;myform&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

       &lt;span class="c1"&gt;//you can access a form's element using form.elements&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myform&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#dom-elements"&gt;
  &lt;/a&gt;
  DOM Elements
&lt;/h1&gt;

&lt;p&gt;Every other html element can be accessed in JavaScript by using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector"&gt;document.querySelector()&lt;/a&gt;. The attributes of the HTML element can be accessed as a property of it's corresponding element object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#mylink&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mylink&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;// https://google.com&lt;/span&gt;

      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myform&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

      &lt;span class="c1"&gt;//access html attributes via properties&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;// username&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;// text&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;// value entered into text field  &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#window-and-global-scope"&gt;
  &lt;/a&gt;
  Window and Global Scope
&lt;/h1&gt;

&lt;p&gt;Global functions and objects declared with &lt;strong&gt;var&lt;/strong&gt; can be referenced via the window object. Note, that doesn't work with block scoped variables declared with &lt;strong&gt;let&lt;/strong&gt; and &lt;strong&gt;const&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;myVar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;foo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;(){}&lt;/span&gt;

        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myVar&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;// foo&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;// undefined&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;// [function: baz]&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#dom-nodes-and-id"&gt;
  &lt;/a&gt;
  DOM nodes and ID
&lt;/h1&gt;

&lt;p&gt;Any element with an ID will create a JavaScript object named after that ID. innerHTML is a very useful property that returns the contents of an HTML tab. Though it seems to behave quite differently across various browsers so you're probably better of using document.querySelector().&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"myheading"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;My Heading&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;  

    &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myheading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- logs "My Heading" --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#js-in-html-attributes"&gt;
  &lt;/a&gt;
  JS in html attributes
&lt;/h1&gt;

&lt;p&gt;Some html attributes can allow JavaScript to be executed. The most popular use case is probably calling a function in an &lt;a href="https://www.w3schools.com/tags/ref_eventattributes.asp"&gt;event attribute&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;   &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;"btnClick()"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;My Button &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
       &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;btnClick&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
           &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button clicked!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also execute JavaScript in an anchor tab by specifying JavaScript in the hrefs value. This can supposedly work with elemetets that have the src attribute as well.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;   &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"javascript: console.log('hello')"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; Say Hello&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#data-attributes"&gt;
  &lt;/a&gt;
  Data attributes
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes"&gt;Data attributes&lt;/a&gt; are custom attributes we can add to and element and are a great way to provide contextual data to an event handler. You can create a data attribute by supplying your custom attribute with a data- prefix. Then you can access the value by using the dataset property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;   &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;data-name=&lt;/span&gt;&lt;span class="s"&gt;"john"&lt;/span&gt; &lt;span class="na"&gt;data-age=&lt;/span&gt;&lt;span class="s"&gt;"17"&lt;/span&gt; &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;"logUser(event)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;John Button&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;data-name=&lt;/span&gt;&lt;span class="s"&gt;"mary"&lt;/span&gt; &lt;span class="na"&gt;data-age=&lt;/span&gt;&lt;span class="s"&gt;"18"&lt;/span&gt; &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;"logUser(event)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Mary Button&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
      &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;logUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
         &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
         &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// logs john | mary&lt;/span&gt;
         &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// logs 17 | 18&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we used &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Event/target"&gt;event.target&lt;/a&gt; to get the elment that the click event occured on. This can only work if &lt;strong&gt;event&lt;/strong&gt; is passed to event handler logUser.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;I hope you've learned a few new things in this post. Are there any lesser known tricks that I may have missed? Please share!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/buntine/dom-elements-with-ids-are-global-variable"&gt;Dev.to: DOM Elements with IDs are Global Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/6003819/what-is-the-difference-between-properties-and-attributes-in-html"&gt;Stack Overflow: Attributes &amp;amp; Properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/2725156/complete-list-of-html-tag-attributes-which-have-a-url-value"&gt;Stack Overflow: URL Elements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/27852405/html-attributes-that-can-contain-javascript"&gt;Stack Overflow: Elements with JS Attributes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/3434278/do-dom-tree-elements-with-ids-become-global-variables"&gt;Stack Overflow: ID and Global Variable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>codenewbie</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>ian miles cheong twitter</title>
      <author>mdsahin</author>
      <pubDate>Sun, 05 Sep 2021 03:39:35 +0000</pubDate>
      <link>https://dev.to/sahin82767123/ian-miles-cheong-twitter-464p</link>
      <guid>https://dev.to/sahin82767123/ian-miles-cheong-twitter-464p</guid>
      <description>&lt;p&gt;Ian miles cheong twitter on said :&lt;br&gt;
A Taliban spokesperson nonetheless has a lively Twitter account, notwithstanding the platform’s suspension of former President Donald Trump for “hateful” and “violent” content.&lt;br&gt;
The Taliban are actively operating to recapture Afghanistan after the American withdrawal, with endless men, girls, and kids vulnerable to their lives.&lt;br&gt;
&lt;a href="https://ondequando.com/ian-miles-cheong-twitter/"&gt;https://ondequando.com/ian-miles-cheong-twitter/&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
