<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>S3 types of storage - Hands on</title>
      <author>Ajit Singh</author>
      <pubDate>Mon, 09 Aug 2021 06:59:10 +0000</pubDate>
      <link>https://dev.to/this-is-learning/s3-types-of-storage-hands-on-28ba</link>
      <guid>https://dev.to/this-is-learning/s3-types-of-storage-hands-on-28ba</guid>
      <description>&lt;p&gt;To check how to add files to different storage classes. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open the bucket we have been working on 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4q2tUeAq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jj5u8y4thc46qwa0oqu9.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;Upload a new file.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V0zTj91D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d71ykv5q1qtboaeuskfc.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;Scroll down and open properties. It will show you all the different storage classes in S3.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r7Ackrbm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jwl4quej300uktjnkkba.png" alt="Alt Text"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7CGJuCpx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l0rnuhpiygw1871vvmdt.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;Let us update the file in one zone IA.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1mv2x6bt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3h1wr3fzgb779njc95u.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We have uploaded the S3 object in a different storage class.&lt;/p&gt;

&lt;p&gt;If you don't want to do this manually S3 also has an option of changing all this automatically.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To do this open management tab in S3 bucket. Click on create lifecycle rule.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z6wid6Ss--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zn9g2qq6n5g6kfq40d4n.png" alt="Alt Text"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IpYzT5mI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wsyhr01r5st2mtsui2rk.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;Give a rule name. Select to which objects you want to apply this rule via prefix or you can select the entire bucket. I'll select the entire bucket
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lEY-RN3r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r3088g5omrld9gh0nw5m.png" alt="Alt Text"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v09KvP0n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n95alkst25hsfzdb6p3n.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;Then we will have different lifecycle rule options. Like transitioning the current object into infrequent access after 30 days. And after 60 days added to glacier.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UF8uA1nO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x6fq1hwc3tlt1lcfj36r.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;S3 will show you a time line summary.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NPOKfY9C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zzjnqfocxb4txp9u6pjq.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;Click on create rule.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zQsvfToH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jreb1qrff9ardd3ozddn.png" alt="Alt Text"&gt;
This way we can automate our object transitions into various tiers. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With this we have completed our S3 series. Next I will work on databases.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>devops</category>
    </item>
    <item>
      <title>The Frontend Agency</title>
      <author>Mads Stoumann</author>
      <pubDate>Mon, 09 Aug 2021 06:54:07 +0000</pubDate>
      <link>https://dev.to/madsstoumann/the-frontend-agency-3pfa</link>
      <guid>https://dev.to/madsstoumann/the-frontend-agency-3pfa</guid>
      <description>&lt;p&gt;After 7 years working as a &lt;em&gt;Technical Director&lt;/em&gt; for Valtech, I've decided to go freelance … again (I was self-employeed for 15 years before Valtech)! &lt;/p&gt;

&lt;p&gt;A new role requires … a new company &lt;strong&gt;and&lt;/strong&gt; a new website!&lt;/p&gt;

&lt;p&gt;I've just returned from my summer holidays, so the website is still &lt;em&gt;work-in-progress&lt;/em&gt; and so far it has &lt;strong&gt;no content&lt;/strong&gt;, but it &lt;strong&gt;does&lt;/strong&gt; have some features, you can have fun playing around with!&lt;/p&gt;

&lt;p&gt;Therefore, I've decided to do an “early release”.&lt;/p&gt;

&lt;p&gt;Go to &lt;a href="https://thefrontend.agency"&gt;thefrontend.agency&lt;/a&gt; and click on the spinning cog-wheel at the top left corner:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hi69RAAT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/enetvdbdyua4pthof53o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hi69RAAT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/enetvdbdyua4pthof53o.png" alt="The Frontend Agency Editor"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do you prefer polygons over blobs?&lt;/li&gt;
&lt;li&gt;Less or more shapes?&lt;/li&gt;
&lt;li&gt;Slow animations, fast animations … or &lt;strong&gt;no&lt;/strong&gt; animations?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Try to drag the color-slider at the top of the page, and then play arund with &lt;code&gt;saturation&lt;/code&gt;, &lt;code&gt;lightness&lt;/code&gt; and &lt;code&gt;opacity&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In the upcoming version of Safari, you can specify a &lt;code&gt;theme-color&lt;/code&gt; – and you can use &lt;em&gt;CSS Custom Properties&lt;/em&gt; with it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"theme-color"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"hsl(var(--h, 192), var(--s, 40%), var(--l, 25%))"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Notice how the main browser window/address-bar now has the same &lt;code&gt;background-color&lt;/code&gt; as the main page:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kd8846zy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdplg6n71to5vsmf84qh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kd8846zy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdplg6n71to5vsmf84qh.png" alt="Safari Theme"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Then, if you drag the color-slider, notice how &lt;em&gt;both&lt;/em&gt; the &lt;code&gt;background-color&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; the &lt;code&gt;theme-color&lt;/code&gt; change:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vwvPhCJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qej7bzs0sieodiibiowk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vwvPhCJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qej7bzs0sieodiibiowk.png" alt="Safari Theme Modified"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think this is pretty cool – let's hope other browser-vendors implements this as well!&lt;/p&gt;



&lt;p&gt;Now, typically, I'd never release “half-baked” code, but in this case, I had to release &lt;em&gt;something&lt;/em&gt; – and I'm really looking forward to your comments, suggestions etc.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#the-logo"&gt;
  &lt;/a&gt;
  The Logo
&lt;/h2&gt;

&lt;p&gt;The logo is handdrawn by Danish illustrator, Rasmus Meisler. &lt;/p&gt;

&lt;p&gt;Last year, he drew one of the most &lt;a href="https://fantask.dk/browse.asp?category=comics&amp;amp;aid=4731"&gt;beautiful comic books&lt;/a&gt;, I've ever seen:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UWuNMsyA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ik41s6dgso6akx1atckt.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UWuNMsyA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ik41s6dgso6akx1atckt.jpeg" alt="den-magiske-spinel-2605502"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.rasmusmeisler.dk/weekendavisen"&gt;Take a look&lt;/a&gt; at some of his amazing illustrations for the danish paper &lt;em&gt;Weekendavisen&lt;/em&gt;, too.&lt;/p&gt;

&lt;p&gt;Rasmus actually sent me a whole bunch of sketches and ideas for the logo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NriqqLz0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5p5pfhhgmw2xat50j4mj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NriqqLz0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5p5pfhhgmw2xat50j4mj.png" alt="Logo sketches"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I like them all, but ended up picking “the agent”, as in “agen(t)-cy”!&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#type-of-work"&gt;
  &lt;/a&gt;
  Type of Work
&lt;/h2&gt;

&lt;p&gt;So what will I be doing? Frontend consulting, obviously – but also much more Graphic Design and UX/UI work, than I've been doing at Valtech. &lt;/p&gt;

&lt;p&gt;I will not work as a comicbook-letterer again, but I'd like to use my “crossover-knowledge” of JavaScript and Graphic Design, as I write about here:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/madsstoumann" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JoLwOpQB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--S8Kp4bXC--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/515396/61d796b8-f5ce-468b-8cb5-808b2bbb9279.jpeg" alt="madsstoumann"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/madsstoumann/comics-graphic-design-and-the-power-of-javascript-2kap" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Comics, Graphic Design — and the Power of JavaScript&lt;/h2&gt;
      &lt;h3&gt;Mads Stoumann ・ Jul 9 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#design&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#comics&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#scripting&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;p&gt;I'll also spend more time on sustainability:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/madsstoumann" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JoLwOpQB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--S8Kp4bXC--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/515396/61d796b8-f5ce-468b-8cb5-808b2bbb9279.jpeg" alt="madsstoumann"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/madsstoumann/making-sustainable-websites-hd3" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Making Sustainable Websites&lt;/h2&gt;
      &lt;h3&gt;Mads Stoumann ・ Feb 10 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#sustainability&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;I'm planning to write an extension for &lt;em&gt;Lighthouse&lt;/em&gt;, and much, much more.&lt;/p&gt;

&lt;p&gt;Finally, I'll be spending time on art, coding algorithms with random art, like this:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/stoumann/embed/dyvprJM?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The plan is to launch a webshop, where you can design, tweak and order a print of a unique piece of art.&lt;/p&gt;

&lt;p&gt;Here are two examples, printed on canvas:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rMq4MDpE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwucz0tkbk2uw5dvsf60.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rMq4MDpE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwucz0tkbk2uw5dvsf60.jpeg" alt="Art"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;So: exiting times ahead! &lt;/p&gt;

&lt;p&gt;Naturally, I'll be writing about it all here on dev.to – as well as writing my usual tutorials and guides!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>showdev</category>
      <category>javascript</category>
      <category>css</category>
    </item>
    <item>
      <title>Part 1: Concepts of Code Quality in Sonar Cloud</title>
      <author>Jeiman Jeya</author>
      <pubDate>Mon, 09 Aug 2021 06:50:48 +0000</pubDate>
      <link>https://dev.to/jeiman/part-1-concepts-of-code-quality-in-sonar-cloud-318j</link>
      <guid>https://dev.to/jeiman/part-1-concepts-of-code-quality-in-sonar-cloud-318j</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QD_m4pnS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hleub980wkbdv6ssws23.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QD_m4pnS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hleub980wkbdv6ssws23.png" alt="Placeholder image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In engineering teams/tribes, we often find ourselves stuck in a dilemma of choosing a suitable and efficient code analysis tool. A tool that will provide us all of the essential features and metrics to analyse codebases using best design practices in mind. Teams would want to prevent code problems from being merged by detecting code smells, bugs, and vulnerabilities sooner. Furthermore, they would want to view fast and accurate feedback from their respective pull requests and code merges in their repositories.&lt;/p&gt;

&lt;p&gt;The primary goals of software quality engineering are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Process control and oversight&lt;/li&gt;
&lt;li&gt;Implementing standards and metrics&lt;/li&gt;
&lt;li&gt;Data collection and analysis&lt;/li&gt;
&lt;li&gt;Test development&lt;/li&gt;
&lt;li&gt;Identification of issues and solutions&lt;/li&gt;
&lt;li&gt;Follow-up to ensure corrective actions&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h1&gt;

&lt;p&gt;Over the years, I have worked with many code analysis tools to help developers in various teams such as Codacy, Code Climate, DeepScan, and Sonar Cloud. After spending a considerable amount of time experimenting and setting up Sonar Cloud projects, I realised it stands out from the crowd. It has a comprehensive analysis engine that offers features encompassing all of the aforementioned software quality engineering goals. Some of those features which fascinated me and my team was:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pull Request decorators

&lt;ul&gt;
&lt;li&gt;Inline commenting through report annotations&lt;/li&gt;
&lt;li&gt;Pull request widgets: Provides overall code quality health on your Pull requests&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Repository widgets: Provides overall code quality health on your project&lt;/li&gt;
&lt;li&gt;Scanning Old code vs New code

&lt;ul&gt;
&lt;li&gt;Code Coverage&lt;/li&gt;
&lt;li&gt;Code Duplications&lt;/li&gt;
&lt;li&gt;Maintainability Ratings&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Defining custom Quality Gate checks for different projects&lt;/li&gt;
&lt;li&gt;Defining New Code definitions for different projects&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some of the aforementioned features (Quality Gate, Profile, New Code Definitions) are in fact settings that need to be configured in Sonar Cloud. You will need to give your attention to configuring these settings as you will not reap the benefits of fully utilising Sonar Cloud.&lt;/p&gt;

&lt;p&gt;We are going to explore the Sonar Cloud ecosystem and how all of its core features come together to provide you a comprehensive code analysis experience.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#sonar-cloud-ecosystem"&gt;
  &lt;/a&gt;
  Sonar Cloud Ecosystem
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#projects"&gt;
  &lt;/a&gt;
  Projects
&lt;/h2&gt;

&lt;p&gt;In Sonar Cloud, a single repository corresponds to a single project. It is how they maintain a unique set of code quality data and metrics for each repository you have. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#monorepo-support"&gt;
  &lt;/a&gt;
  Monorepo Support
&lt;/h3&gt;

&lt;p&gt;Sonar Cloud does support monorepo projects. You can create multiple projects, each corresponding to a separate monorepo project which are all bounded to the same repository. This will allow you to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Configure one Quality Gate per project&lt;/li&gt;
&lt;li&gt;Receive multiple Quality Gate results&lt;/li&gt;
&lt;li&gt;Read project-labeled messages from SonarCloud&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each monorepo project must have a unique project key in Sonar Cloud, which will be used to uniquely identify your projects using your CI tool.&lt;/p&gt;

&lt;p&gt;The standard practice is to have the following naming convention: &lt;code&gt;{organisationName-project-monorepoName}&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;Project 1&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;sampleorg-domain-frontend&lt;/span&gt;
&lt;span class="na"&gt;Project 2&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;sampleorg-domain-backend&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is useful if your organisation maintains a big number of monorepo projects across various engineering tribes so the projects can be easily identified in Sonar Cloud. However, you can follow any naming convention you see fit that suits your needs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#new-code-definitions"&gt;
  &lt;/a&gt;
  New Code Definitions
&lt;/h2&gt;

&lt;p&gt;Sonar Cloud follows the concept of &lt;a href="https://sonarcloud.io/documentation/improving/clean-as-you-code/"&gt;Clean As You Code&lt;/a&gt;. The core idea is that you focus your attention and effort on new code. As you work on features and improvements, &lt;strong&gt;SonarCloud analyses your code on each new commit&lt;/strong&gt; and alerts you to any code quality problems and vulnerabilities. This allows you to address the issues right away and ensure that all new code added to the project is always clean. You may read their documentation to find out more information.&lt;/p&gt;

&lt;p&gt;Accompanying this are New Code Definitions. Setting up the right New Code definition for your project is vital to getting the most out of SonarCloud by determining which changes to your code are considered recent enough to merit your full focus and allow you to use the Clean as You Code methodology when addressing issues in your code. There are several options to consider when configuring your New Code Definitions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Previous version:&lt;/strong&gt; Issues in the code that have appeared since the most recent version increment of the project&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Specific version:&lt;/strong&gt; Issues that have occurred on a specific version of the project&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Number of days:&lt;/strong&gt; Issues that have appeared on your code since the specified number of days (A numerical number)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Specific date:&lt;/strong&gt; Issues that have appeared on your code since the specified date&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eeGsA1HB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kiafufxtatfeb3ec0v8u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eeGsA1HB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kiafufxtatfeb3ec0v8u.png" alt="New Code Definition"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you perform initial code analysis, it does not provide you a "New Code" analysis. Instead, it scans the whole project, providing you with an overall code quality health. As you go along and start analysing new commits, Sonar Cloud will present you with both an &lt;strong&gt;Overall&lt;/strong&gt; and &lt;strong&gt;New&lt;/strong&gt; code quality health analysis (depicted from the picture above).&lt;/p&gt;

&lt;p&gt;You can set a New Code Definition either on a project level or an organisation level, with the latter providing you a way of automatically applying the definitions to new projects that are created.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quality-gates"&gt;
  &lt;/a&gt;
  Quality Gates
&lt;/h2&gt;

&lt;p&gt;A quality gate is technically a metric of sorts that informs you whether your code meets a minimum level of quality required for the project. This consists of a set of conditions that are applied to the results of each analysis performed. If the results meet or exceed the quality gate conditions, it will show one of the following statuses accordingly: &lt;strong&gt;Passed&lt;/strong&gt; or &lt;strong&gt;Failed&lt;/strong&gt;. You can define conditions on &lt;strong&gt;New Code&lt;/strong&gt; and &lt;strong&gt;Overall Code&lt;/strong&gt;. Some examples of the conditions are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Coverage is less than 80.0%&lt;/li&gt;
&lt;li&gt;Duplicated Lines is greater than 3.0%&lt;/li&gt;
&lt;li&gt;Maintainability Rating is worse than A&lt;/li&gt;
&lt;li&gt;Reliability Rating is worse than A&lt;/li&gt;
&lt;li&gt;Security Hotspots Reviewed is less than 100%&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The quality gates are analysed and calculated on &lt;strong&gt;Main Branch (&lt;code&gt;master&lt;/code&gt; by default)&lt;/strong&gt;, &lt;strong&gt;other Branches,&lt;/strong&gt; and &lt;strong&gt;Pull Requests&lt;/strong&gt;. You can create any number of Quality Gates for your projects and enable them per project, or create a default Quality Gate that will be applied to all projects that have been or will be created.&lt;/p&gt;

&lt;p&gt;An example of a customised Quality Gate is shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SD1GMJv4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ys1e2e7r7gqg2nk6col.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SD1GMJv4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ys1e2e7r7gqg2nk6col.png" alt="Quality Gates"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quality-profiles"&gt;
  &lt;/a&gt;
  Quality Profiles
&lt;/h2&gt;

&lt;p&gt;Quality profiles as you may have guessed it are programming language rules that are applied during code analysis. By default, the programming languages that are supported on Sonar Cloud have a built-in profile, called "Sonar way", using the standard best practices that are currently in the market. Although the "Sonar way" is best suited for most projects, there are cases where engineering tribes would want to customise their profiles that best suit their needs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--55NYk7q5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/arkrrd7k2rmerogqfrio.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--55NYk7q5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/arkrrd7k2rmerogqfrio.png" alt="Quality Profiles"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#branches"&gt;
  &lt;/a&gt;
  Branches
&lt;/h2&gt;

&lt;p&gt;In Sonar Cloud, there are 2 types of branch analysis: &lt;strong&gt;Short-lived branches&lt;/strong&gt; and &lt;strong&gt;Long-lived branches&lt;/strong&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#shortliving-branches"&gt;
  &lt;/a&gt;
  Short-Living Branches
&lt;/h3&gt;

&lt;p&gt;As the name suggests, these branches are meant to be used to temporarily perform analysis on them, usually via pull requests. Short-lived branches are deleted automatically after 30 days with no analysis.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#longliving-branches"&gt;
  &lt;/a&gt;
  Long-Living Branches
&lt;/h3&gt;

&lt;p&gt;These branches are useful for when tribes follow Agile methodology, utilising Git flow techniques to maintain a set of upstream branches (sprint, release). These branches will remain in your Sonar Cloud project history until it is deleted. Some companies maintain upstream branches for a very long time, hence this option is extremely useful to conduct code analysis on these branches alongside your main branch (&lt;code&gt;master&lt;/code&gt;).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#defining-longliving-branches"&gt;
  &lt;/a&gt;
  Defining long-living branches
&lt;/h3&gt;

&lt;p&gt;Long-living branches are defined on a project level. Simply navigate to your &lt;strong&gt;Project Settings &amp;gt; Administration &amp;gt; Branches &amp;amp; Pull Requests&lt;/strong&gt;. The long-living branches follow a regular expression pattern.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UIHSWfq_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wbj7w1r1rb2uu8r78awu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UIHSWfq_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wbj7w1r1rb2uu8r78awu.png" alt="Branch regex"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By default, the pattern is &lt;code&gt;(branch|release)-.*&lt;/code&gt;. This means that when the name of the branch starts with &lt;code&gt;branch-&lt;/code&gt; or &lt;code&gt;release-&lt;/code&gt;, it will be considered a long-living branch.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#project-settings"&gt;
  &lt;/a&gt;
  Project Settings
&lt;/h3&gt;

&lt;p&gt;All of the aforementioned concepts and terminologies are in fact project and organisation settings (Quality Gates, Quality Profiles, Long-living branches, New Code Definitions, Monorepo Support). Accompanied with are general settings such as Code Coverage Exclusions, Test File Inclusions and Exclusions, Duplication Inclusions, Source File Exclusions and Inclusions, and many more. You may refer to their &lt;a href="https://docs.sonarqube.org/latest/project-administration/narrowing-the-focus"&gt;documentation&lt;/a&gt; to set these up.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h1&gt;

&lt;p&gt;I hope this Part 1 article has provided you with insights on how Sonar Cloud operates and the software engineering quality it follows. Part 2 of this article will provide you a walkthrough on how to set up a Sonar Cloud project with a GitHub repository and perform code analysis using GitHub Actions.&lt;/p&gt;

&lt;p&gt;Image Source: &lt;a href="https://alexandrebrisebois.files.wordpress.com/2014/05/2011-09-18_code_reviews.png"&gt;https://alexandrebrisebois.files.wordpress.com/2014/05/2011-09-18_code_reviews.png&lt;/a&gt;&lt;/p&gt;

</description>
      <category>sonarcloud</category>
      <category>codequality</category>
      <category>cloud</category>
      <category>github</category>
    </item>
    <item>
      <title>5 things I learned from writing 500 tech articles</title>
      <author>Chris Bongers</author>
      <pubDate>Mon, 09 Aug 2021 06:40:42 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/5-things-i-learned-from-writing-500-tech-articles-55co</link>
      <guid>https://dev.to/dailydevtips1/5-things-i-learned-from-writing-500-tech-articles-55co</guid>
      <description>&lt;p&gt;Wow, this is article 500!! 🎉&lt;/p&gt;

&lt;p&gt;I wish I could say I did an article a day, like &lt;a href="https://seths.blog/"&gt;Seth Godin&lt;/a&gt; or &lt;a href="https://flaviocopes.com/"&gt;Flavio Copes&lt;/a&gt;. However, I did miss writing on my wedding days and had zero regrets about that 🥳.&lt;/p&gt;

&lt;p&gt;I did write 500 tech-related articles already...&lt;br&gt;
Can you believe it? That means we went into lockdown about 500 days ago (How time flies, right?).&lt;/p&gt;

&lt;p&gt;This article contains the five most important things I've learned from writing 500 articles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-plan-your-content-and-life"&gt;
  &lt;/a&gt;
  1. Plan your content and life
&lt;/h2&gt;

&lt;p&gt;It might look simple on paper, write some words every day, but the struggle is real. It can be a mental drain at times, so the best thing you can do is plan around your content and life.&lt;/p&gt;

&lt;p&gt;You might get the part about content. Every time you have an idea &lt;a href="https://daily-dev-tips.com/posts/%F0%9F%A4%AB-the-secret-to-my-writing-process/"&gt;write it down in Notion&lt;/a&gt;. This way, you should never run out of ideas.&lt;/p&gt;

&lt;p&gt;A second side to doing such a crazy challenge is your personal life.&lt;/p&gt;

&lt;p&gt;Every single day ~ Yes, every single day, you have to write content. That means holidays, weekends, days you don't feel like it. And it can not just be hard on yourself, but on your partner, friends and family as well.&lt;/p&gt;

&lt;p&gt;The main thing I learned is to keep them informed. When going on a holiday, I try to do some work in advance to enjoy some time off.&lt;br&gt;
My wife is luckily super supportive and lets me do my blog on the weekend. However, some days we need to communicate when I'm writing and when we do something fun.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-you-dont-need-to-write-perfect-content"&gt;
  &lt;/a&gt;
  2. You don't need to write perfect content
&lt;/h2&gt;

&lt;p&gt;Before we dive into this point, let me tell you a bit about my motives for writing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Keep up to date with tech&lt;/li&gt;
&lt;li&gt;Imprint techniques in my brain&lt;/li&gt;
&lt;li&gt;Improve my English writing&lt;/li&gt;
&lt;li&gt;Improve my technical writing&lt;/li&gt;
&lt;li&gt;Learn in public&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As we take these points, you can see my goals are far from your other blog goals like: Get x million views, or Sell x amount of ads.&lt;/p&gt;

&lt;p&gt;I write for myself to become better, and with that comes a side effect that people are intrigued by my way of learning and want to learn with me.&lt;/p&gt;

&lt;p&gt;I have days where people reach out and say I made a mistake. This can be anything from typos to having the wrong Codepen linked to the article.&lt;/p&gt;

&lt;p&gt;I appreciate people telling me these things. It's yet another way of learning. I always thank these people and change that part of the article.&lt;/p&gt;

&lt;p&gt;If you are that person who is procrastinating putting out their first article, run it through Grammarly, read it once more yourself and GO! Put that content out there.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-write-for-your-best-readers"&gt;
  &lt;/a&gt;
  3. Write for your best readers
&lt;/h2&gt;

&lt;p&gt;As you may have seen above, I'm a big fan of writing for myself and like-minded people.&lt;br&gt;
I know from myself that I like small bite-sized articles. I don't read super long articles as they don't get to the point quickly enough for my liking.&lt;/p&gt;

&lt;p&gt;My writing style reflects my reading style in that sense. It's small, to-the-point articles that solve problems quickly.&lt;br&gt;
And I know that's why a lot of people like reading my articles.&lt;/p&gt;

&lt;p&gt;Moral of the story: Write content you would read, as you know best, to write it like that.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-motivate-yourself"&gt;
  &lt;/a&gt;
  4. Motivate yourself
&lt;/h2&gt;

&lt;p&gt;You can't write 500... let's even make that 30 articles consecutive when you're not motivated.&lt;/p&gt;

&lt;p&gt;If you don't enjoy writing and it's a struggle, don't do it. For me writing down my ideas and learnings is such a liberating feeling. This, in turn, motivates me to write more.&lt;/p&gt;

&lt;p&gt;There are days where my brain is overflowing with the idea after idea. I open up my Notion and write down all of those ideas.&lt;/p&gt;

&lt;p&gt;When the next writing session comes, I often read the headlines I wrote down and immediately get re-motivated by my enthusiasm when coming up with the ideas.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-enjoy-what-youre-doing"&gt;
  &lt;/a&gt;
  5. Enjoy what you're doing
&lt;/h2&gt;

&lt;p&gt;With motivating comes enjoyment. Like I said before: If you don't like writing, don't do it.&lt;/p&gt;

&lt;p&gt;This doesn't mean you can't put out content, but maybe you like making videos more? Or just publishing ebooks?&lt;/p&gt;

&lt;p&gt;Do whatever makes you happy as a person.&lt;br&gt;
And don't worry about sucking at it first, pretty sure we all do in the beginning.&lt;/p&gt;

&lt;p&gt;Find your passion and use that to put out content people (and you) love.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recap"&gt;
  &lt;/a&gt;
  Recap
&lt;/h2&gt;

&lt;p&gt;If you are keen to put out a lot of content, keep in mind it's not easy. There's a lot of planning around it, not just in content but also in your life in general.&lt;br&gt;
Don't be afraid that you have to be perfect, nobody is!&lt;br&gt;
Write for your best readers, which are people like-minded often. That said, it comes down to writing content you would read yourself.&lt;br&gt;
And lastly, enjoy the process!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>writing</category>
      <category>webdev</category>
    </item>
    <item>
      <title>🎯 Level Up JavaScript Skills By Building Games.</title>
      <author>Chetan Atrawalkar👉CA.</author>
      <pubDate>Mon, 09 Aug 2021 05:50:32 +0000</pubDate>
      <link>https://dev.to/chetan_atrawalkar/level-up-javascript-skills-by-building-games-2cp1</link>
      <guid>https://dev.to/chetan_atrawalkar/level-up-javascript-skills-by-building-games-2cp1</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q2B13LCL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zzbmb8zam39bl5poz4kl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q2B13LCL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zzbmb8zam39bl5poz4kl.png" alt="javascript"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;JavaScript&lt;/strong&gt; is mainly used for web-based applications and web browsers. But JavaScript is also used beyond the Web in software, servers and embedded hardware controls. Here are some basic things JavaScript is used for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Adding interactive behavior to web pages&lt;/li&gt;
&lt;li&gt;Creating web and mobile apps&lt;/li&gt;
&lt;li&gt;Building web servers and developing server applications&lt;/li&gt;
&lt;li&gt;Game development&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;In this article&lt;/strong&gt; will share some interesting games to level up your javascript skills from zero to hero.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SxXiPJ2E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1hayj2i9gp0f2vyfinmd.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SxXiPJ2E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1hayj2i9gp0f2vyfinmd.gif" alt="level"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;⏩ Here some best open source JavaScript games.&lt;/strong&gt; As the source code of these games is publicly available so it allows you to get an understanding of the actual procedure behind creating such games.&lt;/p&gt;

&lt;p&gt;The best thing about these open source JavaScript games is that you can &lt;strong&gt;easily download their source code&lt;/strong&gt; in your computer, modify it according to your needs, run it using the web browser.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#1-hextris"&gt;
  &lt;/a&gt;
  1. Hextris
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XJbnIQ4I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/548vuzqmhkhzw7ti5yiu.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XJbnIQ4I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/548vuzqmhkhzw7ti5yiu.jpg" alt="hex"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Hextris&lt;/strong&gt; is an awesome puzzle game that is according to its developer inspired by the famous game Tetris.&lt;/li&gt;
&lt;li&gt;The game steadily increases its pace as it progresses which makes it very addictive. &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/Hextris/hextris"&gt;Source Code&lt;/a&gt;
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Hextris"&gt;
        Hextris
      &lt;/a&gt; / &lt;a href="https://github.com/Hextris/hextris"&gt;
        hextris
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Fast paced HTML5 puzzle game inspired by Tetris!
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#2-flexbox-froggy"&gt;
  &lt;/a&gt;
  2. Flexbox Froggy
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ub3JVjMV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jwg2d08mjd866j6hdst0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ub3JVjMV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jwg2d08mjd866j6hdst0.jpg" alt="Froggy"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Flexbox Froggy&lt;/strong&gt; is the game developed. This game allows you to enter CSS styles in order to move the frog and reach the bottom where the pond is situated. &lt;/li&gt;
&lt;li&gt;The game is developed simply using HTML5, JavaScript, CSS styles, and some images.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/thomaspark/flexboxfroggy"&gt;Source Code&lt;/a&gt;
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/thomaspark"&gt;
        thomaspark
      &lt;/a&gt; / &lt;a href="https://github.com/thomaspark/flexboxfroggy"&gt;
        flexboxfroggy
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A game for learning CSS flexbox 🐸
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#3-2048"&gt;
  &lt;/a&gt;
  3. 2048
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JErf3Wts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07t3c4mm8hqac71cdih4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JErf3Wts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07t3c4mm8hqac71cdih4.jpg" alt="Al2048"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;2048&lt;/strong&gt; is a clone of popular Play Store game 1024. Its source code is written in HTML5, CSS3, and JavaScript.&lt;/li&gt;
&lt;li&gt;If you are familiar with these languages then I would suggest you to contribute in this stunning game and display your skills to the whole world. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/gabrielecirulli/2048"&gt;Source Code&lt;/a&gt;
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/gabrielecirulli"&gt;
        gabrielecirulli
      &lt;/a&gt; / &lt;a href="https://github.com/gabrielecirulli/2048"&gt;
        2048
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A small clone of 1024 (https://play.google.com/store/apps/details?id=com.veewo.a1024)
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#4-clumsy-bird"&gt;
  &lt;/a&gt;
  4. Clumsy Bird
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tLiNEe7_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2dntbo6wr2igk6hyzaz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tLiNEe7_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2dntbo6wr2igk6hyzaz.jpg" alt="Bird"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Clumsy Bird&lt;/strong&gt; is a clone of the “Flappy Bird” game and it makes use of the open source and lightweight HTML5 game engine MelonJS. &lt;/li&gt;
&lt;li&gt;The game works by you controlling a flying character and the mission is to successfully pass it from in-between the incoming walls without hitting them.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/ellisonleao/clumsy-bird"&gt;Source Code&lt;/a&gt;
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ellisonleao"&gt;
        ellisonleao
      &lt;/a&gt; / &lt;a href="https://github.com/ellisonleao/clumsy-bird"&gt;
        clumsy-bird
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🐦 🎮 A MelonJS port of the famous Flappy Bird Game
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#5-snake-game"&gt;
  &lt;/a&gt;
  5. Snake Game
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SG_rl3nE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x4d5ikttnwafh16ib8yv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SG_rl3nE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x4d5ikttnwafh16ib8yv.png" alt="snake"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;The Snake game&lt;/strong&gt;, created using JavaScript, and The HTML5 canvas.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/CodeExplainedRepo/Snake-JavaScript"&gt;Source Code&lt;/a&gt;
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/CodeExplainedRepo"&gt;
        CodeExplainedRepo
      &lt;/a&gt; / &lt;a href="https://github.com/CodeExplainedRepo/Snake-JavaScript"&gt;
        Snake-JavaScript
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The Snake game, created using JavaScript, and The HTML5 canvas.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#6-tic-tac-toe"&gt;
  &lt;/a&gt;
  6. Tic Tac Toe
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ec6_L6J1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8o4q5zoijrh89ie62u5v.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ec6_L6J1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8o4q5zoijrh89ie62u5v.jpg" alt="tac toe"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Tic Tac Toe&lt;/strong&gt; is one of the most simple and addictive available out there. This game is developed using HTML5, JavaScript, and CSS for some styling. &lt;/li&gt;
&lt;li&gt;The developer has made use of Google fonts to make this game more visually appealing. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  &lt;a href="https://codepen.io/timrijkse/pen/XjLGKv"&gt;Source Code&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/timrijkse/embed/XjLGKv?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-canvas-tetris"&gt;
  &lt;/a&gt;
  7. Canvas Tetris
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PaGzE_W1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iro6rc70o3lo6xw6zti8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PaGzE_W1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iro6rc70o3lo6xw6zti8.jpg" alt="Canvas"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Canvas Tetris&lt;/strong&gt; is a really simple illustration of the Tetris game which is written in HTML5 and JavaScript to give beginner developers a basic understanding of 2D game concepts. &lt;/li&gt;
&lt;li&gt;The developer has mentioned that he created this game in just 45 minutes.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/dionyziz/canvas-tetris"&gt;Source Code&lt;/a&gt;
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/dionyziz"&gt;
        dionyziz
      &lt;/a&gt; / &lt;a href="https://github.com/dionyziz/canvas-tetris"&gt;
        canvas-tetris
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A 2D tetris game in HTML5 canvas
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#8-pacmancanvas"&gt;
  &lt;/a&gt;
  8. Pacman-canvas
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rs9dXWYU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kfde8zvzb17etqb6gbiu.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rs9dXWYU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kfde8zvzb17etqb6gbiu.jpg" alt="Pacman"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Pacman-canvas&lt;/strong&gt; is completely re-written from scratch in HTML5 and JavaScript. &lt;/li&gt;
&lt;li&gt;In Pacman-canvas you have to control a character using arrow keys on the keyboard and collect the items placed in a maze while protecting yourself from enemy units.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/platzhersh/pacman-canvas"&gt;Source Code&lt;/a&gt;
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/platzhersh"&gt;
        platzhersh
      &lt;/a&gt; / &lt;a href="https://github.com/platzhersh/pacman-canvas"&gt;
        pacman-canvas
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      An old classic, re-written in HTML5.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;JavaScript and modern browsers are improving everyday with excitingly new features that are very powerful, using javascript and HTML5 you can create breathtaking games that do not require Flash to work and it's helpful to level up your javascript skills. &lt;/li&gt;
&lt;li&gt;We hope these JavaScript Games will surely give you fun and also inspire you to create something new in your next projects. Share your thoughts with me in comment section and stay tuned for more interesting articles.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;👍 Don't forget to like, keep following 🤗&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mr2mASwx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4awijdtgg2grwjpzei6r.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mr2mASwx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4awijdtgg2grwjpzei6r.gif" alt="like"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keep-claim-and-just-code-it-"&gt;
  &lt;/a&gt;
  Keep Claim And Just Code It 😎.
&lt;/h3&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>gamedev</category>
    </item>
    <item>
      <title>Artificial Intelligence</title>
      <author>Kouluru Nanda Kishore Reddy</author>
      <pubDate>Mon, 09 Aug 2021 04:55:56 +0000</pubDate>
      <link>https://dev.to/koulurunandakishorereddy/artificial-intelligence-3f7m</link>
      <guid>https://dev.to/koulurunandakishorereddy/artificial-intelligence-3f7m</guid>
      <description>&lt;h1&gt;What is Artificial Intelligence(AI) ?&lt;/h1&gt;

&lt;p&gt;Artificial intelligence (AI) is a wide-ranging branch of computer science concerned with building smart machines capable of performing tasks that typically require human intelligence. AI is an interdisciplinary science with multiple approaches, but advancements in machine learning and deep learning are creating a paradigm shift in virtually every sector of the tech industry. &lt;/p&gt;

&lt;p&gt; AI is the future. It is shaping many industries even when it’s new compared to other technologies. AI is also growing as scientists and engineers are doing research at a rapid pace. Companies such as Google, Facebook, Microsoft, and others are also investing heavily in AI research, and the results are quite evident. The release of self-driving cars is just an example of rapid AI growth.&lt;/p&gt;

&lt;h2&gt;History and Evolution of Artificial Intelligence&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jy_odt2W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625234809634/eDEONIrqv.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jy_odt2W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625234809634/eDEONIrqv.jpeg" alt="History-of-Artificial-Intelligence-1200x720.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The idea of Artificial Intelligence is believed to be born back in 1940s and 1950s when some scientists came up with the idea of creating artificial brain. Since then, there is no turning back.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Turing test(1950s)&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Xm4YQNT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625234881052/8WTxKqj1h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Xm4YQNT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625234881052/8WTxKqj1h.png" alt="turing-test-in-ai.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;
- Turing test is a very famous and the very first one performed by a British computer scientist Alan Turing. In this test, Turing tried to replace a machine with a human in a conversation over a teleprinter and checked whether a computer can replace human with a significant level of intelligence.&lt;/p&gt;
&lt;p&gt;
- He published his research in the famous landmark paper "Computing Machinery and intelligence" in 1950s.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;ELIZA(1960s)&lt;/b&gt;&lt;/p&gt;



&lt;p&gt;
- LIZA was a chatterbot created by Joseph Weizenbaum which is believed to have been one of the first programs to pass Turing test.&lt;/p&gt;
&lt;p&gt;
- It managed to mislead many people by mimicking the role of a therapist. It encouraged the people to speak more by cross questioning them. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;IBM's Deep Blue&lt;/b&gt;&lt;/p&gt;


&lt;p&gt;In 1997, AI achieved a remarkable goal when the world chess champion and grand master Gary Kasparov was defeated by IBM’s Deep Blue, a chess playing computer program.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Kismet(1990s)&lt;/b&gt;&lt;/p&gt;



&lt;p&gt;Kismet is a robot made in late 1990s. This robot had the capability to recognize and simulate facial expressions. It responded by making different facial expression like those of happiness, excitement, sorrow and so on for different scenarios.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Sony's AIBO(1999)&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;
- AIBO(The Artificial Intelligence robot) was a robotic dog created by Sony in 1999 originally for entertainment purposes.&lt;/p&gt;
&lt;p&gt;
- This Robotic dog, AIBO has the capability to develop its own personality over time. It also has face recognition capability which helps it to detect different members of your family.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;ASIMO(2000)&lt;/b&gt;&lt;/p&gt;



&lt;p&gt;
- ASIMO(Advanced Step in Innovative Mobility) is a humanoid robot which was designed by Honda in 2000. ASIMO has the capability to recognize and simulate the surrounding environment such as recognition of moving objects, postures, sounds and faces etc.&lt;/p&gt;
&lt;p&gt;
- It is basically designed to help people. It can even recognize when a person offers it a handshake or calls it by the name.
&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Siri(2011)&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bzHruEnA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625236154431/qwcNcrNn6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bzHruEnA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625236154431/qwcNcrNn6.png" alt="Screen-shot-2011-10-04-at-1.34.33-PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;
- Siri was the first digital virtual assistant designed originally by SRI International and is widely used in iOS, macOS, iPadOS and watchOS.&lt;/p&gt;

&lt;p&gt;
- Siri has many amazing features like scheduling events and reminders, Navigation, device settings, Phone and text actions, handle payments through Apple Pay and much more.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Google DeepMind's AlphaGo(2016)&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5hqgGyAi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625236373944/1blVg-Zwq.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5hqgGyAi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625236373944/1blVg-Zwq.jpeg" alt="google-deepmind-go.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In 2016, Google DeepMind's AlphaGo defeated a professional Korean 'Go champion' who won 27 major tournaments from 2002 to 2016.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Microsoft's Cortana and Amazon's Alexa&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WG8bxFvI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625236483874/fbFVzfkj2.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WG8bxFvI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625236483874/fbFVzfkj2.jpeg" alt="cortana-larger-user-base-amazon-alexa.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;
- The era of virtual assistants started with the release of Apple's Siri. Since then, many developments were made in this field. Alexa, a virtual assistant by Amazon, first came into existence in November,2014 whereas Microsoft announced the availability of Cortana for Windows 10 desktops and mobile devices in January,2015.    &lt;/p&gt;
&lt;p&gt;
- In today's times, these virtual assistants are capable of performing so many daily based tasks with a remarkable level of efficiency&lt;/p&gt;

&lt;h1&gt;HOW DOES ARTIFICIAL INTELLIGENCE WORK?&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SEzD4kIq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625236824567/wdhwv9Xdi.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SEzD4kIq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625236824567/wdhwv9Xdi.jpeg" alt="AI 1_0.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AI works by combining large amounts of data with fast, iterative processing and intelligent algorithms, allowing the software to learn automatically from patterns or features in the data. AI is a broad field of study that includes many theories, methods and technologies, as well as the following major subfields:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;b&gt;&lt;em&gt;Machine learning&lt;/em&gt;&lt;/b&gt; automates analytical model building. It uses methods from neural networks, statistics, operations research and physics to find hidden insights in data without explicitly being programmed for where to look or what to conclude.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;&lt;em&gt;A neural network&lt;/em&gt;&lt;/b&gt; is a type of machine learning that is made up of interconnected units (like neurons) that processes information by responding to external inputs, relaying information between each unit. The process requires multiple passes at the data to find connections and derive meaning from undefined data.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;b&gt;&lt;em&gt;Deep learning &lt;/em&gt;&lt;/b&gt;uses huge neural networks with many layers of processing units, taking advantage of advances in computing power and improved training techniques to learn complex patterns in large amounts of data. Common applications include image and speech recognition.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;b&gt;&lt;em&gt; Cognitive computing&lt;/em&gt;&lt;/b&gt; is a subfield of AI that strives for a natural, human-like interaction with machines. Using AI and cognitive computing, the ultimate goal is for a machine to simulate human processes through the ability to interpret images and speech – and then speak coherently in response&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;b&gt;&lt;em&gt;Computer vision&lt;/em&gt;&lt;/b&gt; relies on pattern recognition and deep learning to recognize what’s in a picture or video. When machines can process, analyze and understand images, they can capture images or videos in real time and interpret their surroundings.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;b&gt;&lt;em&gt; Natural language processing (NLP) &lt;/em&gt;&lt;/b&gt;is the ability of computers to analyze, understand and generate human language, including speech. The next stage of NLP is natural language interaction, which allows humans to communicate with computers using normal, everyday language to perform tasks.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;HOW IS AI USED?&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b8KI1cvp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625240202143/VIJnDYQbv.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b8KI1cvp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625240202143/VIJnDYQbv.jpeg" alt="2156889_1588010158_politics.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;"AI is a computer system able to perform tasks that ordinarily require human intelligence... Many of these artificial intelligence systems are powered by machine learning, some of them are powered by deep learning and some of them are powered by very boring things like rules."&lt;/p&gt;

&lt;p&gt;Artificial intelligence generally falls under two broad categories: &lt;/p&gt;

&lt;p&gt;-&lt;b&gt; Narrow AI:&lt;/b&gt; Sometimes referred to as "Weak AI," this kind of artificial intelligence operates within a limited context and is a simulation of human intelligence. Narrow AI is often focused on performing a single task extremely well and while these machines may seem intelligent, they are operating under far more constraints and limitations than even the most basic human intelligence. &lt;/p&gt;

&lt;p&gt;-&lt;b&gt;Artificial General Intelligence (AGI): &lt;/b&gt;AGI, sometimes referred to as "Strong AI," is the kind of artificial intelligence we see in the movies, like the robots from Westworld or Data from Star Trek: The Next Generation. AGI is a machine with general intelligence and, much like a human being, it can apply that intelligence to solve any problem.  &lt;/p&gt;

&lt;h1&gt;Advantages of Artificial Intelligence&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LNg0U9-f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625240628748/mol3-YfxQ.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LNg0U9-f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625240628748/mol3-YfxQ.jpeg" alt="Advantages-of-Artificial-Intelligence.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1) Reduction in Human Error&lt;/p&gt;

&lt;p&gt;2) Takes risks instead of Humans&lt;/p&gt;

&lt;p&gt;3) Available 24x7&lt;/p&gt;

&lt;p&gt;4) Helping in Repetitive Jobs&lt;/p&gt;

&lt;p&gt;5) Digital Assistance&lt;/p&gt;

&lt;p&gt;6) Faster Decisions&lt;/p&gt;

&lt;p&gt;7) Daily Applications&lt;/p&gt;

&lt;p&gt;8) New Inventions&lt;/p&gt;

&lt;h1&gt;Disadvantages of Artificial Intelligence&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OkzQnsgr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625240963976/guiYR5O5l.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OkzQnsgr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625240963976/guiYR5O5l.jpeg" alt="download.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1)High cost of implementation&lt;/p&gt;

&lt;p&gt;2)Doesn't improve with experience&lt;/p&gt;

&lt;p&gt;3)Lacks creativity&lt;/p&gt;

&lt;p&gt;4)Risk of unemployment&lt;/p&gt;

&lt;h2&gt;Finally :&lt;/h2&gt;

&lt;p&gt;I am going to close by giving some general conclusions about Artificial Intelligence (AI). AI is the ability of machines to adapt to external inputs by forming rational behaviors based on that input. Using AI, we can create systems that can perform tasks that would otherwise require human intelligence.&lt;/p&gt;

&lt;p&gt;Thank you for reading 😊&lt;/p&gt;

&lt;p&gt;If you have enjoyed this article and would like to buy me a coffee you can do it here 😊👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/koulurunanda"&gt;Buy me a Coffee&lt;/a&gt; &lt;/p&gt;

</description>
      <category>ai</category>
      <category>techtalks</category>
      <category>programming</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Angular: Pros and Cons</title>
      <author>Siddharth</author>
      <pubDate>Mon, 09 Aug 2021 03:49:19 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/angular-pros-and-cons-m9l</link>
      <guid>https://dev.to/siddharthshyniben/angular-pros-and-cons-m9l</guid>
      <description>&lt;p&gt;&lt;a href="https://angular.io"&gt;Angular&lt;/a&gt;, maintained by Google and one of the most powerful web development frameworks out there, is a pretty good choice for web development. To help you decide whether Angular is good for you, here's a list of Angular pros and cons.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: We are talking about Angular (2-12), &lt;strong&gt;NOT&lt;/strong&gt; Angular.js.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;p&gt;Scroll to the end of the post for a summary if you don't want to read the whole thing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; Angular sites are &lt;strong&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/SPA"&gt;Single Page Applications (SPA)&lt;/a&gt;&lt;/strong&gt;. SPAs allow us to load new pages without requesting the server, giving a more dynamic and interactive experience. For example, &lt;a href="https://gmail.com"&gt;GMail&lt;/a&gt; is a SPA.&lt;/li&gt;
&lt;li&gt; Angular is &lt;strong&gt;feature-packed&lt;/strong&gt;. State? Baked in. Reactivity? Baked in. Routing? Baked in. DI? Baked in. Services? Baked in.&lt;/li&gt;
&lt;li&gt; Angular is &lt;strong&gt;cross-platform&lt;/strong&gt;.

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;PWAs&lt;/strong&gt;: Use modern web platform capabilities to deliver app-like experiences. High performance, offline, and zero-step installation.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Native&lt;/strong&gt;: Build native mobile apps with strategies from Cordova, Ionic, or NativeScript.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Desktop&lt;/strong&gt;: Create desktop-installed apps across Mac, Windows, and Linux using the same Angular methods you've learned for the web plus the ability to access native OS APIs.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt; Angular **optimizes your templates into code that's highly optimized for today's JavaScript virtual machines, giving you all the benefits of hand-written code with the productivity of a framework.&lt;/li&gt;
&lt;li&gt; Angular has &lt;strong&gt;automatic code-splitting&lt;/strong&gt; so users only load code required to render the view they request.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Angular uses TypeScript&lt;/strong&gt;, which provides better tooling, cleaner code, and higher scalability.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Angular is productive.&lt;/strong&gt; It provides all the tools you need to scaffold apps and components. Angular provides a handy CLI which can generate production-ready apps and components with a single command.&lt;/li&gt;
&lt;li&gt; Angular's &lt;strong&gt;MVC Architecture&lt;/strong&gt; makes it easy to separate styles from logic from markup.&lt;/li&gt;
&lt;li&gt;Angular has a &lt;strong&gt;flexible templating system&lt;/strong&gt; which supports 1 or 2-way binding, pipes, custom structural directives, and more.&lt;/li&gt;
&lt;li&gt; Angular has built-in support for &lt;strong&gt;Services and Dependency Injection (DI)&lt;/strong&gt;. This further separates the business logic from your components, which provides cleaner code.&lt;/li&gt;
&lt;li&gt; Angular &lt;strong&gt;sets up testing frameworks automatically&lt;/strong&gt;. With Karma for unit tests, you can know if you've broken things every time you save.&lt;/li&gt;
&lt;li&gt; Angular has a built-in animation API for high-performance, complex choreographies and animation timelines with very little code.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Pre-render Angular with Angular Universal&lt;/strong&gt; and serve the first view of your application on Node.js, .NET, &lt;code&gt;PHP&lt;/code&gt;, and other servers for near-instant rendering in just HTML and CSS. Also paves the way for sites that optimize for SEO.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; Angular is a SPA, so it has &lt;strong&gt;limited SEO capabilities&lt;/strong&gt;. But, you can prerender Angular using Angular Universal.&lt;/li&gt;
&lt;li&gt; Angular has a &lt;strong&gt;steep learning curve&lt;/strong&gt;, But it's worth the effort, as Angular is super powerful.&lt;/li&gt;
&lt;li&gt; Angular is &lt;strong&gt;complex and verbose&lt;/strong&gt;, so it's not really suitable for small apps. It's designed for complex systems.&lt;/li&gt;
&lt;li&gt; Angular has a (kind of) low ranking on some developer surveys. On The State of JavaScript, Angular has high negative opinions. On the Stack Overflow developer survey, Angular is the ninth most loved developer framework, behind React and Vue, which are at 2nd and 3rd place. Angular is the 8th most dreaded web framework, and it's the third most wanted web framework.&lt;/li&gt;
&lt;/ol&gt;




&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;


&lt;center&gt;
&lt;strong&gt;13&lt;/strong&gt; pros &lt;strong&gt;•&lt;/strong&gt; &lt;strong&gt;4&lt;/strong&gt; cons&lt;/center&gt;
&lt;br&gt;

&lt;p&gt;Angular is a &lt;em&gt;powerful&lt;/em&gt; framework if you are willing to spend time and effort learning it. It has all sorts of features like DI, Services, Components, and more, but its SPA nature makes it bad at SEO. It's also not the most popular framework, owing to its steep learning curve. It's also highly focused on scalability.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Use Angular&lt;/strong&gt; if you are building large, complex applications that should be scalable and modular.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don't use Angular&lt;/strong&gt; smaller apps which don't need all the complexity Angular provides. Don't use them for static sites, because of the accessibility problems and over complexity.&lt;/p&gt;

</description>
      <category>angular</category>
      <category>codenewbie</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Design Patterns: Adapter</title>
      <author>Tamerlan Gudabayev</author>
      <pubDate>Mon, 09 Aug 2021 03:34:08 +0000</pubDate>
      <link>https://dev.to/tamerlang/design-patterns-adapter-36d9</link>
      <guid>https://dev.to/tamerlang/design-patterns-adapter-36d9</guid>
      <description>&lt;p&gt;In the last article, we have finished the first chapter in our design pattern series.&lt;/p&gt;

&lt;p&gt;Today, we start a new chapter, where we will go over the structural design pattern.&lt;/p&gt;

&lt;p&gt;"But, what's structural?" you may ask.&lt;/p&gt;

&lt;p&gt;While creational patterns focus on how objects are created, structural patterns focus on how efficient do objects &lt;strong&gt;combine&lt;/strong&gt; to create other &lt;strong&gt;complex&lt;/strong&gt; objects.&lt;/p&gt;

&lt;p&gt;A real-life analogy would be a fruit salad, you can make fruit salads in many different ways with all sorts of different fruits, but there are some combinations that are superior to others. Structural design patterns help use effectively and flexibly combine objects together to form complex structures.&lt;/p&gt;

&lt;p&gt;To begin, the first of these patterns would be the Adapter pattern.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Today you will learn:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Core concepts behind the Adapter pattern&lt;/li&gt;
&lt;li&gt;How to implement the adapter pattern&lt;/li&gt;
&lt;li&gt;How to recognize opportunities the adapter pattern&lt;/li&gt;
&lt;li&gt;The benefits and downsides of the adapter pattern&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Definition&lt;/h2&gt;

&lt;p&gt;We have a ritual in this series, to start googling things.&lt;/p&gt;

&lt;p&gt;So let's google: "what is the adapter pattern?"&lt;/p&gt;

&lt;p&gt;You would get a Wikipedia answer that would look something like this:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In software engineering, the adapter pattern is a software design pattern that allows the interface of an existing class to be used as another interface. It is often used to make existing classes work with others without modifying their source code&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Why does Wikipedia make everything sound so damn complicated?&lt;/p&gt;

&lt;p&gt;In a nutshell, the &lt;strong&gt;adapter pattern allows classes with incompatible interfaces to work with each other.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;But what do you mean by incompatible interfaces?&lt;/p&gt;

&lt;p&gt;Good question, lemme give you an example&lt;/p&gt;

&lt;p&gt;&lt;em&gt;PS. I'm taking this example from refactoring.guru, they are a great resource, and most of my research comes from there. You can check them out &lt;a href="https://refactoring.guru/"&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Imagine that you have a stock monitoring app.&lt;/p&gt;

&lt;p&gt;The app currently has two components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The third-party library you use to get stocks data.&lt;/li&gt;
&lt;li&gt;A client that monitors, and visualizes the data.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One day you come across a new library, that provides analytics.&lt;/p&gt;

&lt;p&gt;You get all excited and begin coding.&lt;/p&gt;

&lt;p&gt;You eventually realize that your current code isn't compatible with the analytics library.&lt;/p&gt;

&lt;p&gt;Your code, works on XML, while the analytics library works in JSON.&lt;/p&gt;

&lt;p&gt;Your stock provider only works with XML, while the analytics only works with JSON.&lt;/p&gt;

&lt;p&gt;This may be the end...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MweD5DeR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softwareadventuring.com/wp-content/uploads/2021/07/1-9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MweD5DeR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softwareadventuring.com/wp-content/uploads/2021/07/1-9.png" alt=""&gt;&lt;/a&gt;Source: &lt;a href="https://refactoring.guru/design-patterns/adapter"&gt;&lt;/a&gt;&lt;a href="https://refactoring.guru/design-patterns/adapter"&gt;&lt;/a&gt;&lt;a href="https://refactoring.guru/design-patterns/adapter"&gt;https://refactoring.guru/design-patterns/adapter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At this point you have two options:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Get all grumpy and quit&lt;/li&gt;
&lt;li&gt;Toughen up and find a solution&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For the sake of this article, let's say you went with option number two.&lt;/p&gt;

&lt;p&gt;After a while, you come across an article, about the adapter pattern, and soon realize it's a perfect opportunity to use it.&lt;/p&gt;

&lt;p&gt;You just have to create an &lt;em&gt;Adapter&lt;/em&gt; class, that transforms XML to JSON.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9cm2bYDb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softwareadventuring.com/wp-content/uploads/2021/07/2-8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9cm2bYDb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://softwareadventuring.com/wp-content/uploads/2021/07/2-8.png" alt=""&gt;&lt;/a&gt;Source: &lt;a href="https://refactoring.guru/design-patterns/adapter"&gt;&lt;/a&gt;&lt;a href="https://refactoring.guru/design-patterns/adapter"&gt;&lt;/a&gt;&lt;a href="https://refactoring.guru/design-patterns/adapter"&gt;https://refactoring.guru/design-patterns/adapter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The adapter has to &lt;em&gt;wrap&lt;/em&gt; around the XML object and transform it into JSON.&lt;/p&gt;

&lt;p&gt;The XML class doesn't even know it's being wrapped.&lt;/p&gt;

&lt;p&gt;Seems simple enough, let's implement this!&lt;/p&gt;

&lt;h2&gt;Implementation&lt;/h2&gt;

&lt;p&gt;Currently, our client looks something like this:&lt;/p&gt;

&lt;pre&gt;import stock_data_providor from "third-party-stock-library"

class Client {

    public function main(){
        const xml_stocks = stock_data_provider.get_all_stocks()

        this.visualize(xml_stocks)
    }

    public function visualize(){
        // visualization code
    }

}
&lt;/pre&gt;

&lt;p&gt;There are currently only two components, the stock data and client.&lt;/p&gt;

&lt;p&gt;Let's try adding the analytics library:&lt;/p&gt;

&lt;pre&gt;import stock_data_providor from "third-party-stock-library"
import analytics from "third-party-analytics-library"

class Client {

    public function main(){
        const xml_stocks = stock_data_provider.get_all_stocks()

        this.visualize(xml_stocks)
        analytics.analyze(xml_stocks)
    }

    // rest of code

}
&lt;/pre&gt;

&lt;p&gt;This will throw an error because the &lt;code&gt;analyze&lt;/code&gt; function only accepts a JSON.&lt;/p&gt;

&lt;p&gt;To fix that, we have to transform the XML into JSON.&lt;/p&gt;

&lt;p&gt;Let's create an adapter class:&lt;/p&gt;

&lt;pre&gt;class XmlToJsonAdapter(){
    const xml_data

    constructor(xml_data){
            this.xml_data = xml_data
    }

    public function get_json() {
        // return json version of xml
        // out of the scope of this article 
    }

}
&lt;/pre&gt;

&lt;p&gt;Our adapter class accepts &lt;code&gt;xml_data&lt;/code&gt; and with the help of the &lt;code&gt;get_json&lt;/code&gt; function, it returns a JSON version of the XML.&lt;/p&gt;

&lt;p&gt;Let's update our client:&lt;/p&gt;

&lt;pre&gt;import stock_data_providor from "third-party-stock-library"
import analytics from "third-party-analytics-library"
import XmlToJsonAdapter from "./xml_adapter"

class Client {

    public function main(){
        const xml_stocks = stock_data_provider.get_all_stocks()
        const json_format = new XmlToJsonAdapter(xml_stocks)

        this.visualize(xml_stocks)
        analytics.analyze(json_format)
    }

    // rest of code

}
&lt;/pre&gt;

&lt;p&gt;Our code is finally working, good job in implementing the adapter pattern.&lt;/p&gt;

&lt;p&gt;A key to learning design patterns is to know when to use them.&lt;/p&gt;

&lt;p&gt;Let's go over opportunities on when to use this pattern.&lt;/p&gt;

&lt;h2&gt;When to use this pattern?&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Incompatible Interfaces&lt;/strong&gt; — When you want to integrate two or more classes with incompatible interfaces, you can use the adapter pattern to make it work.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Code Reuse&lt;/strong&gt; — Use the adapter pattern when you want to reuse legacy code without making any modifications to the original code.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Benefits&lt;/h2&gt;

&lt;p&gt;Throughout this article, we have covered the technical aspects of the adapter pattern.&lt;/p&gt;

&lt;p&gt;Let's take a step back, and think about why is this pattern useful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Single Responsibility Principle&lt;/strong&gt; — You separate the data conversion code, from the underlying business logic.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Open Closed Principle&lt;/strong&gt; — You can easily introduce new adapters, without breaking the existing client code, as long as they work with a common interface.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Downsides&lt;/h2&gt;

&lt;p&gt;Time to hit reality, it's not all sunshine and rainbows.&lt;/p&gt;

&lt;p&gt;Let's go over the downsides in using the adapter pattern:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Complexity&lt;/strong&gt; — The overall complexity of the code increases, due to the addition of extra classes and interfaces. Sometimes it's easier to change the code in the services. But keep in mind, &lt;strong&gt;the path of least resistance isn't always the best.&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Adapter Chain&lt;/strong&gt; — Sometimes many different adapters are required, causing an adapter chain. This kind of code simply gets very messy and hard to debug.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I would like to end it off with a question.&lt;/p&gt;

&lt;p&gt;What do you think about this pattern?&lt;/p&gt;

&lt;p&gt;Do you ever see yourself using it?&lt;/p&gt;

&lt;p&gt;Can't wait to see your answers down in the comments.&lt;/p&gt;

&lt;p&gt;This has been Tamerlan, I would appreciate it if you would follow me on Twitter &lt;a href="https://twitter.com/tamerlan_dev"&gt;@tamerlan_dev&lt;/a&gt; and check out my blog &lt;a href="http://softwareadventuring.com"&gt;softwareadventuring.com&lt;/a&gt; for more content like this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Today you learned:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Definition and implementation of the adapter pattern.&lt;/li&gt;
&lt;li&gt;When to use the adapter pattern.&lt;/li&gt;
&lt;li&gt;The benefits and downsides of using the adapter pattern.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;h2&gt;Further Readings&lt;/h2&gt;

&lt;p&gt;If you want to learn more about the design patterns, I would recommend &lt;a href="https://refactoring.guru/design-patterns"&gt;Diving into Design Patterns&lt;/a&gt;. It explains all 23 design patterns found in the GoF book, in a fun and engaging manner.&lt;/p&gt;

&lt;p&gt;Another book that I recommend is &lt;a href="https://www.amazon.com/Head-First-Design-Patterns-Brain-Friendly/dp/0596007124"&gt;Heads First Design Patterns: A Brain-Friendly Guide&lt;/a&gt;, which has fun and easy-to-read explanations.&lt;/p&gt;

</description>
      <category>computerscience</category>
      <category>beginners</category>
      <category>programming</category>
      <category>architecture</category>
    </item>
    <item>
      <title>What did you teach this week? (1-8 Aug)</title>
      <author>Aatmaj</author>
      <pubDate>Mon, 09 Aug 2021 03:12:04 +0000</pubDate>
      <link>https://dev.to/aatmaj/what-did-you-teach-this-week-1-8-aug-4j6i</link>
      <guid>https://dev.to/aatmaj/what-did-you-teach-this-week-1-8-aug-4j6i</guid>
      <description>&lt;h2&gt;
  &lt;a href="#welcome-all-did-you-teach-anyone-anything-this-week-i-am-sure-you-did-think-carefully-and-post-in-the-comments-below"&gt;
  &lt;/a&gt;
   Welcome all! Did you teach anyone anything this week? I am sure you did. Think carefully and post in the comments below! 
&lt;/h2&gt;




&lt;p&gt;&lt;em&gt;Teaching can be like.......&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lending a helping hand to your Colleague in learning a new concept &lt;/li&gt;
&lt;li&gt;Posting a blog which teaches a new technology&lt;/li&gt;
&lt;li&gt;Answering on Stack Overflow&lt;/li&gt;
&lt;li&gt;Participating in group training activities&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;....................and many other ways&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6jRA5m_u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ex3xvf47nnq99aecrrd1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6jRA5m_u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ex3xvf47nnq99aecrrd1.gif" alt="teacgher"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So regardless how much you have taught, whome you have taught or how you have taught, please comment below. Let us all join together and create a source of positive energy by teaching others.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d2lCL7CQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ofbjeoc07h4qxojsh187.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d2lCL7CQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ofbjeoc07h4qxojsh187.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>teachingthisweek</category>
      <category>teaching</category>
    </item>
    <item>
      <title>Its 2021, and UX is still Overrated</title>
      <author>Denin Paul</author>
      <pubDate>Mon, 09 Aug 2021 02:23:40 +0000</pubDate>
      <link>https://dev.to/byteslash/its-2021-and-ux-is-still-overrated-50kj</link>
      <guid>https://dev.to/byteslash/its-2021-and-ux-is-still-overrated-50kj</guid>
      <description>&lt;p&gt;&lt;em&gt;...or at least the "UX" the internet talks on.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It's been long since I've been observing articles, tweets, or videos on how UX is like the "single most important item" or like "the icing on the cake". You even have parts of the UX community continuously trashing on anyone who just opens dribbble.com, or who would not agree to "Usability over aesthetics" (cause it ain't true always).&lt;/p&gt;

&lt;p&gt;Even I fell into this ego trap and established my authority using the "UX" entitlement. It took a while for me to have a big enough slap on my face and be aware of it. And I just don't want anyone who's getting into UI/UX to be up there.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BsRRcc2H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/CDb1zMILM74AAAAC/batman-slap.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BsRRcc2H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/CDb1zMILM74AAAAC/batman-slap.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What's worse is how everyone wraps the UX side all up with some "linear" systematic process and case studies, which is usually what someone starting out observes everywhere (esp on Medium). Most of these depend on data from users (mostly fake), obtained through boring forms &amp;amp; other metrics, and stops right after the first iteration of the design.&lt;/p&gt;

&lt;p&gt;"So why is this a problem" you might ask. Lemme explain.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-ketchup-bottle-analogy"&gt;
  &lt;/a&gt;
  The ketchup bottle analogy
&lt;/h2&gt;

&lt;p&gt;Ah, it all comes to this very overused analogy, which shows how 'UX is always the King' and how 'the aesthetics don't matter, it's always the accessibility &amp;amp; usability. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N1aZJQPR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/818cavzkzf9gkl30hthy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N1aZJQPR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/818cavzkzf9gkl30hthy.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When it simply ain't it! It's missing something else which is much important.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"The context."&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;What if you are to place a couple of them in a premium restaurant/hotel? which one would you choose? Wouldn't it be the one labeled "UI"?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As the design labeled "UX" uses plastic, isn't that not recommended if the brand is about being eco-friendly and having organic ketchup being served?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If the design tagged "UI" has more premium ketchup inside it, wouldn't users care about the hassle and jump the hurdles to get to the value?&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is just the tip of the iceberg. Ask a couple more questions and would get to know why it isn't as simple as just "what the user wants". &lt;/p&gt;

&lt;p&gt;And that's exactly the problem with most of the UX goers&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-overemphasis-on-user"&gt;
  &lt;/a&gt;
  The over-emphasis on user
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UVsKjhEf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.redd.it/s2un7gty0vd51.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UVsKjhEf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.redd.it/s2un7gty0vd51.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lemme be honest, I would use the ketchup bottle labeled "UX". &lt;/p&gt;

&lt;p&gt;I mean if you took a survey, even most would choose it. And you can show this to the premium hotel manager client and be like: "You are fricking wrong. See what the data says". To which the client would reply he doesn't care, he just wants the one that is labeled "UI" cause it looks more premium, and fits his brand.&lt;/p&gt;

&lt;p&gt;This then sets you off to making tweets, articles, or memes on how clients are fools, and how they need to learn a bit of UX to get some sense in the puny brain of theirs, or something (I am seriously not venting out on my previous clients over here). &lt;/p&gt;

&lt;p&gt;Thus teaching new designers, who get to see all these, to give zero facks about the client.&lt;/p&gt;

&lt;p&gt;Okay, I guess I went too far but wasn't that scarily accurate?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pcMlORpw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/rF5ERf7ncqUAAAAC/oh-no-top-gear.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pcMlORpw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/rF5ERf7ncqUAAAAC/oh-no-top-gear.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I don't mean to say that the client can never be wrong. What I mean is the fact that you have been focusing on the wrong group of syllables of "User Experience". &lt;/p&gt;

&lt;p&gt;Your eyes where on "User", instead of focusing on "Experience"&lt;/p&gt;

&lt;p&gt;And that's where you went wrong! Your job was never about providing what the users wanted, it was to design a great experience for them. To know what experience you have to serve your users, you might need to take some context into your research. You might need to know what the business is, the brand they are going for, THE BIG PICTURE.&lt;/p&gt;

&lt;p&gt;You need to collaborate! &lt;/p&gt;

&lt;p&gt;And suddenly you are not the 'entitled being' who knows it all. You are just a part of the team that works with the UI Designer and others, helping in designing the greatest experiences for the "humans" using it. (yes "humans", not data points)&lt;/p&gt;

&lt;p&gt;And the scary part of this is you can't predict or control much of the human experiences or emotions. You can only influence it. So how do you do it?&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-create-a-better-experience"&gt;
  &lt;/a&gt;
  How to create a better experience
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VSZ2VchC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/vHcHG7mOtuAAAAAC/thumbs-up-ok.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VSZ2VchC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/vHcHG7mOtuAAAAAC/thumbs-up-ok.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Instead of doing more research, giving out more forms, getting more personal data of the users, or doing more wireframe tests — start thinking about how the users would use the products in the given context. &lt;/p&gt;

&lt;p&gt;This is why empathy and psychology are really necessary for UX thinking (also the reason even I dwell a lot into learning psychology)&lt;/p&gt;

&lt;p&gt;"Aren't you gonna end up with assumptions?", you might ask. I mean yes you are gonna end up with assumptions. &lt;/p&gt;

&lt;p&gt;But it's the same with doing all research and collecting data too. It's just that these assumptions have selective data to back it up (notice that I used 'selective' and not incorrect). And that adds up to your ego too :P&lt;/p&gt;

&lt;p&gt;The real research starts after the user uses your first draft/prototype of the design. This is where you need to gather data and ask in to fill the forms with regards to the experience, not about the user. &lt;/p&gt;

&lt;p&gt;This means yes, it's not a linear systematic process where you do the research, collect gibberish, make some wireframe, submit it to the UI Designer, and shake the dust off your hands. Collaboration and finding a middle ground is the key. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5bOccd9w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://thumbs.gfycat.com/SpanishKindheartedAdouri-size_restricted.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5bOccd9w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://thumbs.gfycat.com/SpanishKindheartedAdouri-size_restricted.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, start collaborating with the UI Designers and others to forge the greatest experience for the user. For this, the UI Designers must know about UX and vise versa, as it's important for effective communication.&lt;/p&gt;

&lt;p&gt;As soon as you change your perspective and start delivering experiences you will get to understand how much a role UI plays. You realize the amount of correlation both have. Contrary to popular belief, UI is a part of the UX, and they aren't separate entities. &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-whats-the-takeaway"&gt;
  &lt;/a&gt;
  So What's the takeaway
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DtOGuQ6y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/Ch2H6tcXVRIAAAAd/blac-youngsta-smile.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DtOGuQ6y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/Ch2H6tcXVRIAAAAd/blac-youngsta-smile.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;People (especially those who write UX Case Studies on Medium) often forget that Design is an iterative process. Instead of testing their design and improving upon the feedback they receive, of the experience they deliver, they just stop after the first iteration of the design, and tell how right they are through pointless research, fake personas, and whatnot.&lt;/p&gt;

&lt;p&gt;Instead, I encourage y'all to start focusing on documenting the feedback process after the first iteration of the design and show how you improved it upon feedback. This way you can accurately understand wherein you have come short when it comes to delivering the experience to the user, and have an idea on how you can make the experience even better by the next iteration.&lt;/p&gt;

&lt;p&gt;At the end of the day, the greatest products aren't the ones with great user research, its the one that provides great value and also improves on feedback. &lt;/p&gt;

&lt;p&gt;Cheerio!&lt;/p&gt;

</description>
      <category>ux</category>
      <category>design</category>
      <category>webdev</category>
      <category>uiweekly</category>
    </item>
    <item>
      <title>Fun Ruby tricks I learned in codewars</title>
      <author>Ashley</author>
      <pubDate>Mon, 09 Aug 2021 02:08:44 +0000</pubDate>
      <link>https://dev.to/saturn226/fun-ruby-tricks-i-learned-in-codewars-41nl</link>
      <guid>https://dev.to/saturn226/fun-ruby-tricks-i-learned-in-codewars-41nl</guid>
      <description>&lt;p&gt;I have been playing around with codewars a lot lately. (&lt;a href="http://www.codewars.com"&gt;www.codewars.com&lt;/a&gt;) I like working with code challenges they are pretty fun. One thing that is great about playing with codewars is that I got to use a lot of tools and methods I would have never else thought of for example&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;delete&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This comes in handy for challenges that ask you to remove a series of elements from a string.&lt;br&gt;
For example, if you need to remove some vowels from a string&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt; &lt;span class="n"&gt;my_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"This is such a wonderful method"&lt;/span&gt;
 &lt;span class="n"&gt;my_string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"aeiou"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 

 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;Ths&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;sch&lt;/span&gt;  &lt;span class="n"&gt;wndrfl&lt;/span&gt; &lt;span class="n"&gt;mthd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is much easier than using gsub!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;to_str(base)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So most everyone knows how to_s works, you are converting a non string object to a string representation of that object. But one thing a lot of people forget is that you can pass in an argument to to_s when its placed on a Fixnum. This argument represents a numerical base which by default is 10. Therefore, this method can be used to convert numbers to different bases&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"100011"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;partition&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is a great way to split up some data. It accepts a block and creates 2 arrays. For the elements that are true, they are first array, while the rest are placed in the second array.  Imagine we have a problem where we need to seperate some evens and odds&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="n"&gt;my_array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;my_array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;partition&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;even?&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;even? odd?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Which reminds me, I have a tendency to forget about these ruby methods. They work just as you expect. The question mark signify's this method returns some sort of boolean.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;even?&lt;/span&gt;
  &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;

    &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;odd?&lt;/span&gt;
    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Its a shame how often I resort to modulo to check for evens and odds knowing this exists&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;chars&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;chars will split a string into an array of chars&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt; &lt;span class="s2"&gt;"This is my string"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;chars&lt;/span&gt;
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"T"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"h"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"i"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"i"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"m"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"t"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"r"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"i"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"n"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"g"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;of course split('') would do the same, but I like this better&lt;/p&gt;

&lt;p&gt;Code challenges are super fun, and its great to learn new tricks. I recomment trying codwars sometime or even hacker rank or leetcode. I think Im going to go do some SQL challenges now!&lt;/p&gt;

</description>
      <category>codewars</category>
      <category>ruby</category>
      <category>fun</category>
    </item>
    <item>
      <title>Web Development Roadmap -2021</title>
      <author>Jjyygh</author>
      <pubDate>Mon, 09 Aug 2021 01:05:00 +0000</pubDate>
      <link>https://dev.to/jjyygh/web-development-roadmap-2021-54o0</link>
      <guid>https://dev.to/jjyygh/web-development-roadmap-2021-54o0</guid>
      <description>&lt;p&gt; &lt;/p&gt;
&lt;p&gt;There has never been a better time to learn to code or make a career change to software engineering. The demand for web developers is at an all-time high, and it’s only increasing. There are both free and premium tutorials online that teach you the skills to get a job as a developer — no CS degree required 🤓.&lt;/p&gt;
&lt;p id="561d"&gt;This article details the needed skills and the corresponding tutorials to learn them effectively. The illustrated guide is provided by &lt;b&gt;&lt;a href="http://www.codelivly.com"&gt;Codelivly&lt;/a&gt;&lt;/b&gt; and can be found on codelivly  — Codelivly work is excellent so be sure to star the repo and subscribe to his newsletter to support his efforts. Don’t be intimidated by the map. It may seem like a lot, but I’ll break it down so you can learn each part step-by-step.&lt;/p&gt;
&lt;p id="dda0"&gt;This article will be divided into the following sections:&lt;/p&gt;
&lt;p id="dda0"&gt;1. &lt;b&gt;&lt;a href="https://www.codelivly.com/web-developer-roadmap-2021/"&gt;Full Stack Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p id="dda0"&gt;2. &lt;b&gt;&lt;a href="https://www.codelivly.com/frontend-web-developer-roadmap/"&gt;Frontend Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p id="dda0"&gt;3. &lt;b&gt;&lt;a href="https://www.codelivly.com/backend-web-developer-roadmap/"&gt;Backend Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p id="dda0"&gt;4. &lt;b&gt;&lt;a href="https://www.codelivly.com/the-best-python-frameworks-for-web-development-in-2021/"&gt;Best Python Framework For Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;







</description>
      <category>webdev</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
