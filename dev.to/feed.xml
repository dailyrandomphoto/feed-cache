<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Introduction to Developer Tools with AWS</title>
      <author>Adit Modi</author>
      <pubDate>Fri, 11 Jun 2021 17:07:34 +0000</pubDate>
      <link>https://dev.to/aws-builders/introduction-to-developer-tools-with-aws-466c</link>
      <guid>https://dev.to/aws-builders/introduction-to-developer-tools-with-aws-466c</guid>
      <description>&lt;p&gt;AWS dominates much of the cloud market and continues to release new tools and services to expand its reach, including a push in recent years to expand its array of developer tools.&lt;/p&gt;

&lt;p&gt;Companies that don't have experienced developers already on staff may struggle with the AWS tool set, but it's hard to argue against the raw computing power of Amazon's cloud. If an IT team is ready to explore the world of AWS cloud developer tools, it will want to get to know the following services.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SAJLWW1C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yiebht0an24cvdl5lltr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SAJLWW1C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yiebht0an24cvdl5lltr.png" alt="Introduction to Developer Tools with AWS (1)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;My Background: Cloud Engineer | AWS Community Builder | AWS Educate Cloud Ambassador | 4x AWS Certified | 3x OCI Certified | 3x Azure Certified.&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#aws-codecommit"&gt;
  &lt;/a&gt;
  AWS CodeCommit
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3oq0BAG_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4fgr4ige6lpgdol43u12.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3oq0BAG_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4fgr4ige6lpgdol43u12.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS CodeCommit is a fully managed source control service that makes it easy for companies to host secure and highly scalable private Git repositories. AWS CodeCommit eliminates the need to operate your own source control system or worry about scaling its infrastructure. You can use AWS CodeCommit to securely store anything from source code to binaries, and it works seamlessly with your existing Git tools.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#codebuild"&gt;
  &lt;/a&gt;
  CodeBuild
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IO0kGgCn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f83shlsw60jiityeuoa5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IO0kGgCn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f83shlsw60jiityeuoa5.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CodeBuild is a fully managed build service that compiles source code, runs tests, and produces software packages that are ready to deploy. With CodeBuild, you don’t need to provision, manage, and scale your own build servers. CodeBuild scales continuously and processes multiple builds concurrently, so your builds are not left waiting in a queue. You can get started quickly by using prepackaged build environments, or you can create custom build environments that use your own build tools.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#aws-codeartifact"&gt;
  &lt;/a&gt;
  AWS CodeArtifact
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1NxkYd3T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88xwhmomwo3opbfm24bf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1NxkYd3T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88xwhmomwo3opbfm24bf.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS CodeArtifact, AWS' managed artifact repository, enables developers to store, publish and share software packages in a secure manner. This service integrates with Maven, Gradle, npm, yarn and other package managers and build tools. CodeArtifact has no upfront costs but there are fees for storage, requests and data transfers.  &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#codedeploy"&gt;
  &lt;/a&gt;
  CodeDeploy
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NhmMMgiO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xrlhkoul92jdn17ilrt1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NhmMMgiO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xrlhkoul92jdn17ilrt1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CodeDeploy is a service that automates code deployments to any instance, including EC2 instances and instances running on premises. CodeDeploy makes it easier for you to rapidly release new features, helps you avoid downtime during application deployment, and handles the complexity of updating your applications. You can use CodeDeploy to automate software deployments, eliminating the need for error-prone manual operations. The service scales with your infrastructure so you can easily deploy to one instance or thousands.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#codepipeline"&gt;
  &lt;/a&gt;
  CodePipeline
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4Hjwh0nZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mcj9max1jz1gxby7nw9b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4Hjwh0nZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mcj9max1jz1gxby7nw9b.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CodePipeline is a fully managed continuous delivery service that helps you automate your release pipelines for fast and reliable application and infrastructure updates. CodePipeline automates the build, test, and deploy phases of your release process every time there is a code change, based on the release model you define. This enables you to rapidly and reliably deliver features and updates. You can easily integrate CodePipeline with third-party services such as GitHub or with your own custom plugin. With AWS CodePipeline, you only pay for what you use. There are no upfront fees or long-term commitments.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#aws-codestar"&gt;
  &lt;/a&gt;
  AWS CodeStar
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7DRTb4wU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b62xtsb4ibfuvf2o0xi3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7DRTb4wU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b62xtsb4ibfuvf2o0xi3.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS CodeStar enables you to quickly develop, build, and deploy applications on AWS. AWS CodeStar provides a unified user interface, enabling you to easily manage your software development activities in one place. With AWS CodeStar, you can set up your entire continuous delivery toolchain in minutes, allowing you to start releasing code faster. AWS CodeStar makes it easy for your whole team to work together securely, allowing you to easily manage access and add owners, contributors, and viewers to your projects. Each AWS CodeStar project comes with a project management dashboard, including an integrated issue tracking capability powered by Atlassian JIRA Software. With the AWS CodeStar project dashboard, you can easily track progress across your entire software development process, from your backlog of work items to teams’ recent code deployments. For more information, see AWS CodeStar features.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#amazon-corretto"&gt;
  &lt;/a&gt;
  Amazon Corretto
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2yImmg81--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8qtcogljbsb04b7kiuvn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2yImmg81--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8qtcogljbsb04b7kiuvn.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Amazon Corretto is a no-cost, multiplatform, production-ready distribution of the Open Java Development Kit (OpenJDK). Corretto comes with long-term support that will include performance enhancements and security fixes. Amazon runs Corretto internally on thousands of production services and Corretto is certified as compatible with the Java SE standard. With Corretto, you can develop and run Java applications on popular operating systems, including Amazon Linux 2, Windows, and macOS.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#aws-cloud9"&gt;
  &lt;/a&gt;
  AWS Cloud9
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2jpdYd8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ol5go512n9k6635kwv9v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2jpdYd8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ol5go512n9k6635kwv9v.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS Cloud9 is a cloud-based integrated development environment (IDE) that lets you write, run, and debug your code with just a browser. It includes a code editor, debugger, and terminal. Cloud9 comes prepackaged with essential tools for popular programming languages, including JavaScript, Python, PHP, and more, so you don’t need to install files or configure your development machine to start new projects. Since your Cloud9 IDE is cloud-based, you can work on your projects from your office, home, or anywhere using an internet-connected machine. Cloud9 also provides a seamless experience for developing serverless applications enabling you to easily define resources, debug, and switch between local and remote execution of serverless applications. With Cloud9, you can quickly share your development environment with your team, enabling you to pair program and track each other's inputs in real time.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#aws-command-line-interface-aws-cli"&gt;
  &lt;/a&gt;
  AWS Command Line Interface (AWS CLI)
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZFT5dfDN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ynzxworannwzy4q2mytc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZFT5dfDN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ynzxworannwzy4q2mytc.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS Command Line Interface (AWS CLI) is an open source tool specifically designed to interact with and control other AWS services from the command line. AWS CLI requires minimal configuration, and developers can run commands with the same functionality as the AWS Management Console. It works with Windows, MacOS and Linux, and it comes preinstalled with the Amazon Linux AMI.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#aws-xray"&gt;
  &lt;/a&gt;
  AWS X-Ray
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fRnzD2Wb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vsqx4w0e5a4uplg1z98o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fRnzD2Wb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vsqx4w0e5a4uplg1z98o.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS X-Ray helps developers analyze and debug distributed applications in production or under development, such as those built using a microservices architecture. With X-Ray, you can understand how your application and its underlying services are performing so you can identify and troubleshoot the root cause of performance issues and errors. X-Ray provides an end-to-end view of requests as they travel through your application, and shows a map of your application’s underlying components. You can use X-Ray to analyze both applications in development and in production, from simple three-tier applications to complex microservices applications consisting of thousands of services.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#aws-cloud-development-kit-cdk"&gt;
  &lt;/a&gt;
  AWS Cloud Development Kit (CDK)
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ehe0z1Af--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8wmkyyv82baofj9daqnx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ehe0z1Af--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8wmkyyv82baofj9daqnx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS Cloud Development Kit (CDK) is an open source software development framework. It defines cloud infrastructure as code through programming languages and AWS CloudFormation deployment. With CDK, developers can interact with their cloud applications. For example, they can list the defined stacks in their apps, move the stacks into CloudFormation templates and deploy them to any public AWS Region. Like other developer services from AWS, there is no additional charge for this tool beyond the associated resources provisioned. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#aws-device-farm"&gt;
  &lt;/a&gt;
  AWS Device Farm
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zVrfdPna--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/go4j30m6rv4stwz0cncj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zVrfdPna--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/go4j30m6rv4stwz0cncj.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS Device Farm is a cloud developer tool focused on increasing the quality of applications, time to market and overall customer satisfaction through testing with real mobile devices. With Device Farm, developers upload an application or test scripts to run tests across a large number of real Android and iOS services. Within this tool, developers can also debug or reproduce any customer issues. Developer teams have the option of three pricing models: Pay as you go, which starts at $0.17 per device minute; unlimited testing, which starts at $250.00 per month; and private devices, which starts at $200 per month.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#amazon-codeguru"&gt;
  &lt;/a&gt;
  Amazon CodeGuru
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---4Ye59tC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0un74rpd54r3d31egvf9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---4Ye59tC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0un74rpd54r3d31egvf9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Amazon CodeGuru is a cloud developer tool that recommends ways to enhance code quality and reduce costs. This service relies on machine learning and has two primary components -- Amazon CodeGuru Reviewer and Amazon CodeGuru Profiler. Reviewer finds the major issues and elusive bugs, while Profiler helps optimize performance and cut costs by exposing the priciest lines of code within the app. Priced separately, both features offer a 90-day free trial in supported AWS Regions. After the trial period, pricing is broken down based on number of lines in the code analyzed or the duration of the analysis.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;AWS Developer Tools is reliable and secure in many ways and it also helps to integrate an industry. With pay as you go service, the whole AWS is economical and there are no additional charges as the user has to pay only for what they have used. AWS Developer Tools are aimed at speeding up development and making your job as a developer easier.&lt;/p&gt;

&lt;p&gt;Hope this guide gives you an Introduction to Developer Tools with AWS, feel free to connect with me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn.&lt;/a&gt;&lt;br&gt;
You can view my badges &lt;a href="https://www.youracclaim.com/users/adit-modi/badges"&gt;here.&lt;/a&gt;&lt;br&gt;
If you are interested in learning more about AWS then follow me on &lt;a href="https://github.com/AditModi"&gt;github.&lt;/a&gt;&lt;br&gt;
If you liked this content then do clap and share it . Thank You .&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Welcome Thread - v128</title>
      <author>dev.to staff</author>
      <pubDate>Fri, 11 Jun 2021 16:50:27 +0000</pubDate>
      <link>https://dev.to/thepracticaldev/welcome-thread-v128-15el</link>
      <guid>https://dev.to/thepracticaldev/welcome-thread-v128-15el</guid>
      <description>&lt;p&gt;&lt;a href="https://i.giphy.com/media/26ufn24Onjz8w7NxS/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/26ufn24Onjz8w7NxS/giphy.gif" alt="hi animation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#welcome-to-dev"&gt;
  &lt;/a&gt;
  Welcome to DEV!
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Leave a comment below to introduce yourself! You can talk about what brought you here, what you're learning, or just a fun fact about yourself.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reply to someone's comment, either with a question or just a hello. 👋 &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Great to have you in the community!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>welcome</category>
    </item>
    <item>
      <title>Where to find a job you love + my list of services I have known and loved</title>
      <author>cheremovsky</author>
      <pubDate>Fri, 11 Jun 2021 16:39:41 +0000</pubDate>
      <link>https://dev.to/cheremovsky/where-to-find-a-job-you-love-my-list-of-services-i-have-known-and-loved-48bj</link>
      <guid>https://dev.to/cheremovsky/where-to-find-a-job-you-love-my-list-of-services-i-have-known-and-loved-48bj</guid>
      <description>&lt;p&gt;Hi there!&lt;br&gt;
I'm a senior React.js dev and recently I think more and more about relocating to the US or Europe (I'm from Russia), or at least about starting working remotely with a US/EU company.&lt;br&gt;
There are some great services in RU-net, where you can leave your resume and little by little offers come in: hh.ru, habr.ru. Everything is convenient, you don't need a million confirmations and a million obligatory fields, which make you feel suffocated.&lt;/p&gt;

&lt;p&gt;Here's a list of sites I compiled in the course of my exploration. Perhaps it will be useful to someone else:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://indeed.com/"&gt;indeed.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://angel.co/"&gt;angel.co&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://remoteok.io/"&gt;remoteok.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hired.com/"&gt;hired.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://careerbuilder.com/"&gt;careerbuilder.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://careerjet.com/"&gt;careerjet.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nofluffjobs.com/"&gt;nofluffjobs.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://arc.dev"&gt;arc.dev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://honeypot.io/"&gt;honeypot.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://talent.io/"&gt;talent.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://monster.com/"&gt;monster.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://workable.com/"&gt;workable.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ycombinator.com/"&gt;ycombinator.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bergamot.io/"&gt;bergamot.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://relocate.me/"&gt;relocate.me&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://meetfrank.com/"&gt;meetfrank.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://xing.com/"&gt;xing.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://justjoin.it/"&gt;justjoin.it&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What do you guys use?&lt;br&gt;
I don't have anything against Linkedin or Angel List, I just want to know what else is out there.&lt;br&gt;
I'd appreciate suggestions and stories about your own experience of changing jobs.&lt;/p&gt;

</description>
      <category>career</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>WAO: How do you get promoted?</title>
      <author>Nathan Kallman</author>
      <pubDate>Fri, 11 Jun 2021 16:14:50 +0000</pubDate>
      <link>https://dev.to/kallmanation/wao-how-do-you-get-promoted-27h4</link>
      <guid>https://dev.to/kallmanation/wao-how-do-you-get-promoted-27h4</guid>
      <description>&lt;p&gt;&lt;em&gt;Cover photo by &lt;a href="https://unsplash.com/@michalmatlon?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Michal Matlon&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/wrong-answer?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#wrong-answers-only"&gt;
  &lt;/a&gt;
  Wrong Answers Only
&lt;/h2&gt;

&lt;p&gt;Whether getting that "Senior" title, going into management, or going above Senior, how do you get recognized and promoted?&lt;/p&gt;




&lt;p&gt;Comment your wrong answer!&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>discuss</category>
      <category>wronganswersonly</category>
    </item>
    <item>
      <title>How to create a Mock response in APIGateway</title>
      <author>Arun Kumar</author>
      <pubDate>Fri, 11 Jun 2021 15:47:27 +0000</pubDate>
      <link>https://dev.to/aws-builders/how-to-create-a-mock-response-in-apigateway-4adp</link>
      <guid>https://dev.to/aws-builders/how-to-create-a-mock-response-in-apigateway-4adp</guid>
      <description>&lt;p&gt;&lt;strong&gt;Goal&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To return a static html response for your website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;a. First create an API endpoint, choose below type.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VdiqjfQ7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hm84zkqb92o1wsudu8ym.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VdiqjfQ7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hm84zkqb92o1wsudu8ym.png" alt="1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;b. Select Regional.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s----0uCbA9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4hdze9x6r6tqoj4sh62r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s----0uCbA9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4hdze9x6r6tqoj4sh62r.png" alt="2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;c. Create a resource, for example sureroute-test-object.html and create method GET, then Click on GET.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V9Sg4TjR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v8h1mnjm28bhmekilvve.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V9Sg4TjR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v8h1mnjm28bhmekilvve.png" alt="3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;d. Select the Integration Request and select Mock.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HooR7sNj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/itm3l9es1b6736nbaiv4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HooR7sNj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/itm3l9es1b6736nbaiv4.png" alt="4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;e. In the method response, change the default reponse body content type to text/html.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--64jH7zZq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j44laedxfz3vl5azmn93.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--64jH7zZq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j44laedxfz3vl5azmn93.png" alt="5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;f. In the Integration Response, replace the Mapping Template with Content-Type text/html.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MzDo2_Xd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0x5z9z4x5jaxdfvnd5ok.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MzDo2_Xd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0x5z9z4x5jaxdfvnd5ok.png" alt="6"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;g. Then add the html file into it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---SVngUuw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a14145fcfs76ztinfh0x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---SVngUuw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a14145fcfs76ztinfh0x.png" alt="7"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;h. Then Select Action Button → Deploy API, create a new Deployment stage.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NuR6Eb5h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1i5rzerq6tdkuy55h24.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NuR6Eb5h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1i5rzerq6tdkuy55h24.png" alt="8"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;i. Then go to Custom domain names →  → API mapping tab → Configure API mapping.&lt;/p&gt;

&lt;p&gt;j. Create a new API mapping and fill in the below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hWkYIaX9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ax8socirivrkophojrem.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hWkYIaX9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ax8socirivrkophojrem.png" alt="9"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;h. Thats it, now test the link and you will get result similar to below !&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1tJGKOCm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8k0puquxs06htmcek6a7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1tJGKOCm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8k0puquxs06htmcek6a7.png" alt="10"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>apigateway</category>
      <category>html</category>
      <category>static</category>
    </item>
    <item>
      <title>How to make teams more productive (WDS #3)</title>
      <author>Blake Campbell</author>
      <pubDate>Fri, 11 Jun 2021 15:35:54 +0000</pubDate>
      <link>https://dev.to/blaketweeted/how-to-make-teams-more-productive-wds-3-4aco</link>
      <guid>https://dev.to/blaketweeted/how-to-make-teams-more-productive-wds-3-4aco</guid>
      <description>&lt;p&gt;Disclaimer this is 100% satire. For fun on a Friday (Web Dev Satire #3)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#everyone-wants-to-be-more-productive"&gt;
  &lt;/a&gt;
  Everyone wants to be more productive
&lt;/h2&gt;




&lt;p&gt;Managers might try to block off time to focus on coding or keep you out of meetings. This is the worst way to have a productive team. &lt;/p&gt;

&lt;p&gt;Here's an outline for any manager trying to squeeze some more code out of developers.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#outline"&gt;
  &lt;/a&gt;
  Outline
&lt;/h2&gt;




&lt;h3&gt;
  &lt;a href="#more-meetings"&gt;
  &lt;/a&gt;
  More Meetings
&lt;/h3&gt;

&lt;p&gt;I'm not just talking about more meetings, though that is part of it. We want meetings with no clear goal and scattered no more than two hours apart. This ensures that developers are hyper-focused for that two-hour gap. &lt;/p&gt;

&lt;p&gt;The less clear the meeting is, the better. Developers are natural problem solvers. Help them work out those muscles with practice. Title your sessions vaguely "Afternoon Debug" or "Productive Morning meeting."&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#code-fast"&gt;
  &lt;/a&gt;
  Code fast
&lt;/h3&gt;

&lt;p&gt;This is what we are after, a short, sweet code. It makes sense that we need short-sweet time to accomplish our goals. Why write tests or dig into details of the code? Developers don't make mistakes.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#switch-systems-slowly-and-often"&gt;
  &lt;/a&gt;
  Switch Systems Slowly and often
&lt;/h3&gt;

&lt;p&gt;Change is good as long as it's drawn out. If you're using Slack, switch to Microsoft Teams. Make sure you don't do this all at once. It should be a month or two processes where developers need to respond to messages in both at any given time.&lt;/p&gt;

&lt;p&gt;While doing this, transfer other internal systems. Shock and awe your developers with the amount of unnecessary change.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IIKHQQjT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjy84c00lqj3kjzh2dp9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IIKHQQjT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjy84c00lqj3kjzh2dp9.png" alt="Screen Shot 2021-06-11 at 11.21.06 AM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is the ideal workday. You make not like it, but this is peak performance.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In case it isn't clear by now, this is satire! Happy Friday, and keep coding! :)&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>productivity</category>
    </item>
    <item>
      <title>How to Level Up Your React Conditionals</title>
      <author>Reed Barger</author>
      <pubDate>Fri, 11 Jun 2021 15:23:16 +0000</pubDate>
      <link>https://dev.to/reedbarger/how-to-level-up-your-react-conditionals-4of6</link>
      <guid>https://dev.to/reedbarger/how-to-level-up-your-react-conditionals-4of6</guid>
      <description>&lt;p&gt;Do you write conditionals correctly within your React applications?&lt;/p&gt;

&lt;p&gt;Good conditionals are an essential part of any React application. We use conditionals to show or hide elements or components in our applications.&lt;/p&gt;

&lt;p&gt;In short – to be an effective React developer, you must know how to write good conditionals.&lt;/p&gt;

&lt;p&gt;Let's go over all of the major patterns you need to know to write clean, concise conditionals, plus what anti-patterns you should avoid.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#want-your-own-copy%E2%80%AC"&gt;
  &lt;/a&gt;
  Want Your Own Copy?‬ 📄
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="http://bit.ly/react-conditionals-2021"&gt;Download the cheatsheet in PDF format here&lt;/a&gt;&lt;/strong&gt; (it takes 5 seconds).&lt;/p&gt;

&lt;p&gt;Here are some quick wins from grabbing the downloadable version:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Quick reference guide to review however and whenever&lt;/li&gt;
&lt;li&gt;  Tons of copyable code snippets for easy reuse&lt;/li&gt;
&lt;li&gt;  Read this massive guide wherever suits you best. On the train, at your desk, standing in line... anywhere.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There's a ton of great stuff to cover, so let's get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-use-ifstatements-primarily-no-need-for-else-or-elseif"&gt;
  &lt;/a&gt;
  1. Use if-statements primarily. No need for else or else-if.
&lt;/h2&gt;

&lt;p&gt;Let's start with the most basic type of conditional in React. If we have data, we want to display it. If not, we want to show nothing.&lt;/p&gt;

&lt;p&gt;Simple! How would we write that?&lt;/p&gt;

&lt;p&gt;Let's say we are fetching an array of posts data from an API. When it is fetching the data, &lt;code&gt;posts&lt;/code&gt; has a value of &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We can check for that value with a simple if-statement.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;usePosts&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// posts === undefined at first&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PostList&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The reason this pattern works is that we are returning early. If it meets the condition (if &lt;code&gt;!posts&lt;/code&gt; is has a boolean value of &lt;code&gt;true&lt;/code&gt;), we display nothing in our component by returning &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If statements also work when you have multiple conditions that you want to check for.&lt;/p&gt;

&lt;p&gt;For example, if you want to check for loading and error states before you display your data:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;usePosts&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Loading&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isError&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PostList&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that we can reuse the if-statement and do not have to write if-else or if-else-if, which cuts down on the code that we have to write and is still just as readable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-use-the-ternary-operator-to-write-conditionals-in-your-jsx"&gt;
  &lt;/a&gt;
  2. Use the ternary operator to write conditionals in your JSX
&lt;/h2&gt;

&lt;p&gt;If-statements are great when we want to exit early and display nothing or a totally different component.&lt;/p&gt;

&lt;p&gt;However, what if we don't want to write a conditional separate from our returned JSX, but directly within it?&lt;/p&gt;

&lt;p&gt;In React, we must include expressions (something that resolves to a value), not statements within our JSX.&lt;/p&gt;

&lt;p&gt;This is why we must write conditionals in our JSX only with ternaries and not if-statements.&lt;/p&gt;

&lt;p&gt;For example, if we wanted to display one nested component on a mobile-sized screen and another on a larger screen, a ternary would be a perfect choice:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isMobile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useWindowSize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Header&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Sidebar&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isMobile&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MobileChat&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Chat&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/main&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Most developers think this the only pattern they can leverage when it comes to using ternaries.&lt;/p&gt;

&lt;p&gt;In fact, you don't have to clutter your component tree by including all of these ternaries directly in your returned JSX.&lt;/p&gt;

&lt;p&gt;Since ternaries resolve to a value, remember that you can assign the result of a ternary to a variable, which you can then use where you like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isMobile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useWindowSize&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ChatComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isMobile&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MobileChat&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Chat&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Header&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Sidebar&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ChatComponent&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/main&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-no-else-condition-use-the-ampamp-and-operator"&gt;
  &lt;/a&gt;
  3. No else condition? Use the &amp;amp;&amp;amp; (and) operator
&lt;/h2&gt;

&lt;p&gt;In many cases, you will want to use a ternary in your JSX, but will realize that if that condition is not met, you don't want to display anything.&lt;/p&gt;

&lt;p&gt;This ternary would look like the following: &lt;code&gt;condition ? &amp;lt;Component /&amp;gt; : null&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you don't have an else condition, use the &amp;amp;&amp;amp; operator:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;PostFeed&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hasFinished&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;usePosts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PostList&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;hasFinished&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;You&lt;/span&gt; &lt;span class="nx"&gt;have&lt;/span&gt; &lt;span class="nx"&gt;reached&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;)}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-switch-statements-for-multiple-conditions"&gt;
  &lt;/a&gt;
  4. Switch statements for multiple conditions
&lt;/h2&gt;

&lt;p&gt;What if we are in a situation where have many different conditions, more than just one or two?&lt;/p&gt;

&lt;p&gt;We could certainly write multiple if-statements, but all of these if statements, as we've seen earlier, go above our returned JSX.&lt;/p&gt;

&lt;p&gt;Too many if-statements can clutter our components. How do we make our code cleaner?&lt;/p&gt;

&lt;p&gt;We can often extract multiple conditions to a separate component which contains a switch statement.&lt;/p&gt;

&lt;p&gt;For example, we have a Menu component that we can toggle and display different tabs.&lt;/p&gt;

&lt;p&gt;We have tabs that can display user, chat, and room data as you see below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Menu&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;menu&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setMenu&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;toggleMenu&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setMenu&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MenuItem&lt;/span&gt; &lt;span class="nx"&gt;menu&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;menu&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggleMenu&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Toggle&lt;/span&gt; &lt;span class="nx"&gt;Menu&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MenuItem&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;menu&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;menu&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Users&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Chats&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Rooms&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since we are using a dedicated MenuItem component with a switch statement, our parent Menu component is not cluttered by conditional logic and we can easily see what component will be displayed given the &lt;code&gt;menu&lt;/code&gt; state.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-want-conditionals-as-components-try-jsx-control-statements"&gt;
  &lt;/a&gt;
  5. Want conditionals as components? Try JSX Control Statements
&lt;/h2&gt;

&lt;p&gt;It's greatly beneficial to be able to use plain JavaScript within our React components. But if you want even more declarative and straightforward conditionals, check out the React library JSX control statements.&lt;/p&gt;

&lt;p&gt;You can bring it into your React projects by running the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save-dev&lt;/span&gt; babel-plugin-jsx-control-statements
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Additionally, you can list it in your .babelrc file like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"plugins"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"jsx-control-statements"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a Babel plugin that allows you to use React components directly within your JSX to write very easy to understand conditionals.&lt;/p&gt;

&lt;p&gt;The best way to understand the use of such a library is by taking a look at an example. Let's rewrite one of our previous examples with the help of JSX control statements:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;usePosts&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Choose&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;When&lt;/span&gt; &lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Loading&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/When&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;When&lt;/span&gt; &lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isError&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/When&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Otherwise&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PostList&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Otherwise&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Choose&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see that there's no if or ternary statement in sight and we have a very readable component structure.&lt;/p&gt;

&lt;p&gt;Give JSX control statements a try in your next React project and see if a library like this is for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's Next
&lt;/h2&gt;

&lt;p&gt;I hope this guide gave you some helpful patterns to write great React conditionals.&lt;/p&gt;

&lt;p&gt;If you want a copy of this cheatsheet to keep for learning purposes, you can &lt;a href="http://bit.ly/react-conditionals-2021"&gt;download a complete PDF version of this cheatsheet here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also check out these ultimate resources, made to take your React skills to the next level, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://reactbootcamp.com/react-for-beginners-2021/"&gt;React for beginners: The complete guide&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://reactbootcamp.com/fetch-data-in-react/"&gt;How to fetch data in React from front to back&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://reactbootcamp.com/react-app-node-backend/"&gt;How to build fullstack apps in React with Node&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Contributing To Open Source - Getting Started</title>
      <author>Vicky Koblinski</author>
      <pubDate>Fri, 11 Jun 2021 15:18:47 +0000</pubDate>
      <link>https://dev.to/vickykoblinski/contributing-to-open-source-getting-started-2o19</link>
      <guid>https://dev.to/vickykoblinski/contributing-to-open-source-getting-started-2o19</guid>
      <description>&lt;p&gt;Contributing to open source projects can be very fulfilling, but getting started may be intimidating and confusing. Most large open source projects have steep learning curves which can be off-putting for the first-time contributor. However, there are a lot of opportunities to get started and thrive, even if you’ve never contributed to an open source project before. &lt;/p&gt;

&lt;p&gt;Open source is incredibly valuable. Where would the Linux kernel be without the 13,500 developers and 1,300 companies that have contributed since 2005? And what of the thousands of projects built on its back?&lt;/p&gt;

&lt;p&gt;These days, every project you start is built using packages and building blocks from those who came before you. You can stand on the shoulders of giants. The wheel has already been invented, and it’s more reliable and battle-tested than anything you could build in-house. Open source software has been essential for developers, companies, and, ideally, consumers.&lt;/p&gt;

&lt;p&gt;However, there would be no giants, no blocks, no wheels without communities, contributors, and passionate people to drive these projects forward. These are ordinary people doing extraordinary things. &lt;/p&gt;

&lt;p&gt;Although the main objective of open source is to create accessible and valuable software for everyone to build off of, contributors can find a plethora of personal benefits from contributing. You will sharpen your technical skills, nurture your interpersonal communication skills, and practice giving and receiving feedback. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-culture"&gt;
  &lt;/a&gt;
  The Culture
&lt;/h2&gt;

&lt;p&gt;Okay, so you’ve decided you want to become a contributor but you’re not convinced that you’ve got what it takes. You’re feeling quite intimidated actually. That’s okay. You’ve never done this before. Every contributor has had a first contribution and open source projects tend to culture empathy, patience, and understanding.&lt;/p&gt;

&lt;p&gt;In my experience, successful open source projects have maintainers and communities that are the friendliest on the planet. They are excited and enthusiastic about someone wanting to contribute. Often they’ll be active on Twitter, Slack, Discord, and/or another platform that you can join and speak directly with the maintainers and other contributors. Many large open source communities even have their own community guidelines that boil down to “Don’t be a jerk”. These communities welcome new contributors with open arms.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finding-the-right-fit"&gt;
  &lt;/a&gt;
  Finding the Right Fit
&lt;/h2&gt;

&lt;p&gt;One of the best ways to find an open source project to work on is to look to open source software that you already use. Tools, packages, frameworks, or languages that you work with regularly and enjoy using could be great candidates. To find out if the project is open source, check its license and if it accepts contributions. It’s also important to check that the project is actively maintained. Are the pull-requests sitting dormant or are the maintainers providing feedback? Are the issues getting acknowledged or are they sitting there stale?&lt;/p&gt;

&lt;p&gt;If that approach doesn’t work for you, try using GitHub to explore. I recommend starting your contribution journey with languages and frameworks that you’re familiar with. It’ll be difficult enough to get up to speed on the codebase, but if you’re already familiar with a framework’s best practices and typical layout, you’ll have a more successful time hitting the ground running.&lt;/p&gt;

&lt;p&gt;GitHub has excellent search capabilities to find open source projects that are actively seeking out new contributors. By searching for the right tags and filtering by languages you know best, you can quickly find new issues that beg for assistance. Some great tags to search for are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/topics/contributions-welcome"&gt;contributions-welcome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/topics/contributions-welcome"&gt;good-first-issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/topics/hacktoberfest"&gt;hacktoberfest&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/topics/beginner-friendly"&gt;beginner-friendly&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/topics/good-first-bug"&gt;good-first-bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/topics/easy"&gt;easy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/topics/low-hanging-fruit"&gt;low-hanging-fruit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/topics/first-timers-only"&gt;first-timers-only&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GitHub also suggests projects you may like based on the people and repositories that you have starred, follow, or watch. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#your-first-contribution"&gt;
  &lt;/a&gt;
  Your First Contribution
&lt;/h2&gt;

&lt;p&gt;Once you find an issue that you feel confident in tackling in an active project that has a culture you feel comfortable in, it’s time to get your hands dirty! The first thing you will want to do is to “claim” the ticket. It’s a bad idea to run off and solve the problem without communicating your intentions to the maintainers. Instead, reply to the ticket in question by volunteering yourself for the task. This allows the maintainers and other contributors to know this ticket is being actively worked on and the maintainers may have requests, suggestions, or guidance to help solve the problem.&lt;/p&gt;

&lt;p&gt;Start small. Pick tickets that are easy and have the smallest contribution and code changes when you first start. Not only will this enable you to slowly get familiar with the codebase, but it will also build your confidence and credibility before you try taking on harder tasks. &lt;/p&gt;

&lt;p&gt;After you have picked up a ticket and think you have finished it, do your research before you open your first pull-request. Carefully read the documentation, code, and discussions related to this ticket to get the best understanding of how to handle the problem. If you’re stuck, reach out to the community and ask for guidance, clarification, or mentorship. &lt;/p&gt;

&lt;p&gt;Once you feel confident that you’ve solved the problem, it’s time to submit a PR. Look in the project for a &lt;strong&gt;CONTRIBUTORS.md&lt;/strong&gt; file--most open source projects on GitHub will likely have this within their project. This file will contain instructions on how this project would like PRs to be submitted by contributors. They may request strict branch naming conventions, PR titles, documentation or tests, comments, or other things in pull-requests. GitHub also has a &lt;a href="https://opensource.guide/how-to-contribute/#a-checklist-before-you-contribute"&gt;great checklist&lt;/a&gt; on what to check for before you open your pull-request. &lt;/p&gt;

&lt;p&gt;Create the PR and follow the PR template if the project has one. Be sure to link back to the original ticket. The maintainer may request changes or want to have a discussion about your changes. It’s normal to have a back-and-forth before a PR is accepted. Work with the maintainer until your PR is ready to be accepted.&lt;/p&gt;

&lt;p&gt;Once your PR passes the maintainer’s review, they will merge your code in. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Congratulations!&lt;/strong&gt; You’re an open source contributor!!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#are-you-an-open-source-project-maintainer-release-wants-to-support-you"&gt;
  &lt;/a&gt;
  Are You An Open Source Project Maintainer? Release Wants To Support You!
&lt;/h3&gt;

&lt;p&gt;Open source projects benefit dramatically from Ephemeral Environments on every pull-request. We love open source and are dedicated to giving back. Contact us to find out how we can help fuel your rocket through preview environments and help put confidence in contributor’s PRs.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>contributorswanted</category>
      <category>github</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Button Animation Using HTML CSS &amp; JS</title>
      <author>Nikhil Bobade </author>
      <pubDate>Fri, 11 Jun 2021 15:16:51 +0000</pubDate>
      <link>https://dev.to/nikhil27b/button-animation-using-html-css-js-1824</link>
      <guid>https://dev.to/nikhil27b/button-animation-using-html-css-js-1824</guid>
      <description>&lt;p&gt;Hello Guys,&lt;/p&gt;

&lt;p&gt;Today I created a Amazing Button Loading Animation with HTML &amp;amp; JS. This is simple Loading Button Animation using JavaScript after a button click I added setTimeout Function to removed the loader class. If you find this useful in a post like and save this post also comments about your thoughts.&lt;/p&gt;

&lt;p&gt;For more content follow me on Instagram  &lt;a href="https://www.instagram.com/developer_nikhil27/"&gt;@developer_nikhil27&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/NikhilBobade/embed/qBrJaqy?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Creating an API that runs Selenium via AWS Lambda</title>
      <author>Jaira Encio</author>
      <pubDate>Fri, 11 Jun 2021 15:06:37 +0000</pubDate>
      <link>https://dev.to/awscommunity-asean/creating-an-api-that-runs-selenium-via-aws-lambda-3ck3</link>
      <guid>https://dev.to/awscommunity-asean/creating-an-api-that-runs-selenium-via-aws-lambda-3ck3</guid>
      <description>&lt;p&gt;Being an automation tester, my job is to automate everything. As I was running my test script via terminal I realised that I’m the only who can execute the scripts I made. What if someone wants to run it? like the Devs, Project Manager, etc. It would be a tedious task to clone my repo, install libraries, and run the script. So I decided that maybe I can store my test script inside a serverless machine and make it accessible via API request.&lt;/p&gt;

&lt;p&gt;I experimented with various AWS resources such as creating my own lambda function, checking features of API gateway, Codepipeline, etc. After several attempts, I was finally able to run my script inside. And then I just researched how to access my lambda via API.&lt;/p&gt;

&lt;p&gt;This will result in higher production and time savings. Engineers may focus on vital work because automated testing does not require human interaction. This is like a portable testing device that anyone could execute. With fast test execution, developers get testing reports in an instant, so whenever a failure occurs, they will react to it quickly. Test automation will make it easier to update programs quickly. As a result, automated testing leads to increased team responsiveness, improved user experience, and increased customer satisfaction.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Create 2 Lambda layers that has selenium and chromedriver libraries&lt;/li&gt;
&lt;li&gt;Include created lambda layers in serverless.yml of lambda then deploy&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#creating-selenium-lambda-layer"&gt;
  &lt;/a&gt;
  Creating Selenium Lambda Layer
&lt;/h1&gt;

&lt;p&gt;Place libraries in &lt;code&gt;python/lib/python3.6/site-packages/&lt;/code&gt; to include them in a layer.&lt;/p&gt;

&lt;p&gt;Download Selenium to layer directory&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pip3.6 install -t selenium/python/lib/python3.6/site-packages selenium==3.8.0
$ cd selenium
$ zip -r python.zip python/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once finished, Create lambda layer then upload zip file&lt;/p&gt;

&lt;p&gt;1. Go to AWS Console Lambda/Layers&lt;br&gt;
2. Click Create Layer&lt;br&gt;
3. Input the following in the layer configuration&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Name: selenium
Description: Selenium 3.8.0 layer
Upload zip file created: python.zip
Compatible runtimes: Python 3.6
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m_lj9ba4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mr9wh1spgyxib4qznm12.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m_lj9ba4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mr9wh1spgyxib4qznm12.png" alt="selenium-layer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4. Click Create&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#%C2%A0creating-chromedriver-lambda-layer"&gt;
  &lt;/a&gt;
   Creating Chromedriver Lambda layer
&lt;/h1&gt;

&lt;p&gt;Download chrome driver&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ mkdir -p chromedriver
$ cd chromedriver
$ curl -SL https://chromedriver.storage.googleapis.com/2.37/chromedriver_linux64.zip &amp;gt; chromedriver.zip
$ unzip chromedriver.zip
$ rm chromedriver.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Download chrome binary&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ curl -SL https://github.com/adieuadieu/serverless-chrome/releases/download/v1.0.0-41/stable-headless-chromium-amazonlinux-2017-03.zip &amp;gt; headless-chromium.zip
$ unzip headless-chromium.zip
$ rm headless-chromium.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Compress driver and binary&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ls
chromedriver headless-chromium
$ zip -r chromedriver.zip chromedriver headless-chromium
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once finished, Create lambda layer then upload zip file&lt;/p&gt;

&lt;p&gt;1. Go to AWS Console Lambda/Layers&lt;br&gt;
2. Click Create Layer&lt;br&gt;
3. Input the following in the layer configuration&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Name: chromedriver
Description: chrome driver and binary layer
Upload zip file created: chromedriver.zip
Compatible runtimes: Python 3.6
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VdKA_0za--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vfzv2ba6oa6lnf0m5akv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VdKA_0za--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vfzv2ba6oa6lnf0m5akv.png" alt="chrome-layer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4. Click Create&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#%C2%A0creating-lambda-function"&gt;
  &lt;/a&gt;
   Creating Lambda Function
&lt;/h1&gt;

&lt;p&gt;To ensure that your function code has access to libraries included in layers, Lambda runtimes include paths in the '/opt' directory.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%C2%A0file-structure"&gt;
  &lt;/a&gt;
   File Structure
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;── /lambda/            # lambda function
  ├── /handler.py      # source code of lambda function 
  └── /serverless.yaml # serverless config
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#%C2%A0code"&gt;
  &lt;/a&gt;
   Code
&lt;/h3&gt;

&lt;p&gt;Copy the code below to &lt;code&gt;/lambda/handler.py&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from selenium import webdriver
from selenium.webdriver.chrome.options import Options

def main(event, context):
    options = Options()
    options.binary_location = '/opt/headless-chromium'
    options.add_argument('--headless')
    options.add_argument('--no-sandbox')
    options.add_argument('--single-process')
    options.add_argument('--disable-dev-shm-usage')

    driver = webdriver.Chrome('/opt/chromedriver',chrome_options=options)
    driver.get('https://www.google.com/')

    driver.close();
    driver.quit();

    response = {
        "statusCode": 200,
        "body": "Selenium Headless Chrome Initialized"
    }

    return response
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Copy the code below to &lt;code&gt;/lambda/serverless.yaml&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;service: selenium-lambda

provider:
  name: aws
  runtime: python3.6
  region: ap-southeast-2
  timeout: 900

functions:
  main:
    memorySize: 1000
    handler: handler.main
    events:
      - http:
          path: test
          method: get

    layers:
      - arn:aws:lambda:ap-southeast-2:{}:layer:chromedriver:2
      - arn:aws:lambda:ap-southeast-2:{}:layer:selenium:2

resources:
  Resources:
    ApiGatewayRestApi:
      Properties:
        BinaryMediaTypes:
          - "*/*"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#%C2%A0deploy-lambda-function"&gt;
  &lt;/a&gt;
   Deploy Lambda Function
&lt;/h3&gt;

&lt;p&gt;Go to &lt;code&gt;/lambda&lt;/code&gt; directory&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sls deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#%C2%A0output"&gt;
  &lt;/a&gt;
   Output
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Serverless: Stack update finished...
Service Information
service: selenium-lambda
stage: dev
region: ap-southeast-2
stack: selenium-lambda-dev
api keys:
  None
endpoints:
  GET - https://{name}.execute-api.ap-southeast-2.amazonaws.com/dev/test
functions:
  main: selenium-lambda-dev-main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r1WgXQny--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ngj9rtk6v7pq5cc30kl8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r1WgXQny--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ngj9rtk6v7pq5cc30kl8.png" alt="output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You should get same response as below when accessing API&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
"statusCode": 200,
"body": "Selenium Headless Chrome Initialized"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This deployment automatically creates cloudformation stack and s3 bucket.&lt;/p&gt;

</description>
      <category>serverless</category>
      <category>lambda</category>
      <category>selenium</category>
    </item>
    <item>
      <title>Helm Charts Testing</title>
      <author>Chirag Modi</author>
      <pubDate>Fri, 11 Jun 2021 15:04:33 +0000</pubDate>
      <link>https://dev.to/chiragdm/helm-charts-testing-4de2</link>
      <guid>https://dev.to/chiragdm/helm-charts-testing-4de2</guid>
      <description>&lt;p&gt;&lt;strong&gt;Tools to use for Helm Chart Testing during Development to Release&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R-3Jhl4j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AvV-hnNm2VAEshpQ1bqS24g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R-3Jhl4j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AvV-hnNm2VAEshpQ1bqS24g.png" alt="Helm Chart Testing during Development to Release"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://helm.sh/"&gt;Helm Chart&lt;/a&gt;&lt;/strong&gt; is a package management software to write Kubernetes templates and package it as a chart with all its dependencies. A single chart can be used to deploy nginx, memcache or any full stack web application. You can deploy any application chart just by running the following command.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;helm install my-release bitnami/nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
  &lt;a href="#scope"&gt;
  &lt;/a&gt;
  Scope
&lt;/h2&gt;

&lt;p&gt;This article does not cover detailed information about Helm Chart development instead Helm chart has very good documentation which you can go through to learn more about it.&lt;/p&gt;

&lt;p&gt;I am going to cover how to test helm charts as part of development and what different types of testing tools can be used to test charts from unit tests to integration tests.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#helm-chart-development-not-a-pleasant-experience"&gt;
  &lt;/a&gt;
  Helm Chart Development — Not a pleasant Experience
&lt;/h2&gt;

&lt;p&gt;Helm Chart is written in go templates and writing those templates to render Kubernetes manifests is a painful experience. There is no good debugger support available and errors are clueless so sometimes you need to spend hours to fix minor indentation related issues. Helm provides a debug flag while rendering templates though it does not pinpoint the exact line where the error is in the code so it’s difficult to find issues. I hope to have better tools available in the future for helm chart development to make developers’ lives easy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GkSvhctl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3200/0%2At_56kOrA6PQmKdQD" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GkSvhctl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3200/0%2At_56kOrA6PQmKdQD" alt="Photo by Ryan Snaadt on Unsplash"&gt;&lt;/a&gt;&lt;em&gt;Photo by Ryan Snaadt on Unsplash&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#are-your-chart-templates-correct-"&gt;
  &lt;/a&gt;
  Are your chart templates correct ?
&lt;/h2&gt;

&lt;p&gt;As mentioned earlier, Helm Chart templates use go templates so as part of development you need to be sure of syntactical errors so you don’t get last minute surprises when you release your chart.&lt;/p&gt;

&lt;p&gt;Helm provides a lint command which finds and reports all these issues related to templates so you can execute this command frequently to find compile time errors as part of your development.&lt;/p&gt;

&lt;p&gt;Here is a helm chart deployment template with errors.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Helm lint&lt;/strong&gt; will report the following issues which were expected.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;➜ mychart helm lint .
==&amp;gt; Linting .
[INFO] Chart.yaml: icon is recommended

[ERROR] templates/: parse error at (mychart/templates/deployment.yaml:19): function “Values” not defined

[ERROR] templates/: template: mychart/templates/deployment.yaml:7:16: executing “mychart/templates/deployment.yaml” at &amp;lt;include “namespace” .&amp;gt;: error calling include: template: no template “namespace” associated with template “gotpl”

Error: 1 chart(s) linted, 1 chart(s) failed
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;I know this is a very simple example but good enough for understating how lint works.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#validate-against-kubernetes-manifests"&gt;
  &lt;/a&gt;
  Validate against Kubernetes Manifests
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Helm template&lt;/strong&gt; is the command you can use to render/generate Kubernetes manifests/templates out of your helm chart templates.&lt;/p&gt;

&lt;p&gt;There is a command &lt;strong&gt;Helm install&lt;/strong&gt; to install/deploy charts to Kubernetes cluster. Internally, It  first executes helm template command and then deploys generated template output to the cluster.&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;helm template . &amp;gt; deployment.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
  &lt;a href="#are-your-kubernetes-manifests-valid-"&gt;
  &lt;/a&gt;
  Are your  Kubernetes Manifests Valid ?
&lt;/h3&gt;

&lt;p&gt;If you make mistakes while developing a chart then it might be possible that the generated Kubernetes Manifests generate errors when applied to  the Kubernetes cluster but I want to know about those errors before deployment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.kubeval.com/"&gt;Kubeval&lt;/a&gt;&lt;/strong&gt; is the tool to rescue. It’s a tool to validate your generated manifests against official Kubernetes specification and reports issues if any.&lt;/p&gt;

&lt;p&gt;Can you spot any issue in this Deployment template ?&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;Run kubeval against this deployment manifest and look at the issues.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;➜ mychart kubeval deployment.yaml

WARN — mychart/templates/deployment.yaml contains an invalid Deployment (myservice.nginx-deployment) — selector: selector is required

WARN — mychart/templates/deployment.yaml contains an invalid Deployment (myservice.nginx-deployment) — containerPort: containerPort is required

WARN — mychart/templates/deployment.yaml contains an invalid Deployment (myservice.nginx-deployment) — spec.replicas: Invalid type. Expected: [integer,null], given: string

##### This is the output if it was valid deployment #####
PASS — mychart/templates/deployment.yaml contains a valid Deployment (myservice.nginx-deployment)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Additionally you can specify Kubernetes version against which you want to validate generated templates using option* “ — kubernetes-version v1.20.4”*&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#custom-validations-against-kubernetes-manifests"&gt;
  &lt;/a&gt;
  Custom Validations against Kubernetes Manifests
&lt;/h3&gt;

&lt;p&gt;Let’s say I have the following simple requirements.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Containers should not run as root.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Docker images should come from my org repository.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can address this by implementing an admission controller in Kubernetes when resources get deployed to the cluster but would it not be nice if we can apply this custom validation before deployment ?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.conftest.dev/"&gt;Conftest&lt;/a&gt;&lt;/strong&gt; is a framework which allows you to write rules using &lt;strong&gt;&lt;a href="https://www.openpolicyagent.org/docs/latest/policy-language/"&gt;OPA policies&lt;/a&gt;&lt;/strong&gt; and run it against the Kubernetes manifests.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;Run these custom rules against deployment manifests using conftest which will report issues based on configured rules.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;➜ mychart conftest test — policy . deployment.yaml

FAIL — deployment.yaml — main — Containers must not run as root
FAIL — deployment.yaml — main — image ‘nginx’ doesn’t come from myorg.com repository

2 tests, 0 passed, 0 warnings, 2 failures, 0 exceptions
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;You can write any custom policies for all your resources which you can execute against Kubernetes manifests before deployment. That’s Pretty Cool.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#schema-validations-for-custom-values"&gt;
  &lt;/a&gt;
  Schema Validations for Custom Values
&lt;/h2&gt;

&lt;p&gt;As I explained, you can verify Kubernetes manifests using Kubeval and Conftest tools but when you are creating a helm chart then you need to allow your users who are using the chart to add some custom values for any new feature. you need to validate that those custom values are in correct format to be consumed by the chart otherwise it will fail chart rendering which is a very difficult task to debug. how can we apply the first level of defense to make sure provided custom values are in correct format otherwise error it out with proper validation message.&lt;/p&gt;

&lt;p&gt;Helm Chart provides &lt;strong&gt;&lt;a href="https://helm.sh/docs/topics/charts/#schema-files"&gt;Schema Validation&lt;/a&gt;&lt;/strong&gt; feature for which you need to provide a schema file in a chart containing rules for all your custom values. It validates this schema validation first before executing any of these commands.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;helm lint&lt;/li&gt;
&lt;li&gt;helm template&lt;/li&gt;
&lt;li&gt;helm install&lt;/li&gt;
&lt;li&gt;helm upgrade&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are a few of the use cases using custom values.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Users should be able to specify memory and cpu requirements.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Some users want to specify different log locations for application logs.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Users want to supply environment *variables&lt;/em&gt; for the application container.*&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s implement the first use case where if the user specifies custom values for memory and cpu then it will take it otherwise set default values.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;Here is &lt;strong&gt;values.schema.json&lt;/strong&gt; file to validate against custom values.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;This is custom-values.yaml which users can provide while consuming the chart.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;As the user has provided wrong custom values, it should fail.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;➜ mychart helm template . -f custom-values.yaml

Error: values don’t meet the specifications of the schema(s) in the following chart(s):
mychart:
- memory: Does not match pattern ‘^[0–9.]+[M|G]i$’
- cpu: Does not match pattern ‘^[0–9.]+m*$’
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;You can do any type of validation as long as it’s supported by json schema specifications though the only condition is you should have all json schema rules available in file named values.schema.json in your chart.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unit-testing"&gt;
  &lt;/a&gt;
  Unit Testing
&lt;/h2&gt;

&lt;p&gt;Like any other programming language, Unit tests are the first which developers should consider in the early stage of development. I see a scarcity of good unit testing frameworks available for Helm Charts.&lt;/p&gt;

&lt;p&gt;There is a unit test framework &lt;strong&gt;&lt;a href="https://github.com/quintush/helm-unittest"&gt;helm-unittest&lt;/a&gt;&lt;/strong&gt;. It is a very nice framework for unit testing and lots of active deployment is going on so one should definitely go for it.&lt;/p&gt;

&lt;p&gt;There is another hacky way of testing Helm charts which is a mix of unit tests and regression tests.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Idea is very simple. you need to add a binding file containing custom values for each new feature you are implementing in helm chart and generate fixture file out of it using helm template command. You need to commit binding and it’s fixture file in the repository. Now create a simple shell script to be executed in CI which will create a fixture file out of a binding file on the fly against your changes in chart and compare it with existing fixture file. you just fail the test if there is difference in fixture files then you need to either fix your helm chart or update the existing fixture file if it’s expected behavior.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Testing using fixtures is very helpful in code refactoring and also can be considered for unit tests while writing new features.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#integration-tests-using-kubetest"&gt;
  &lt;/a&gt;
  Integration Tests using Kubetest
&lt;/h2&gt;

&lt;p&gt;Till now, we have tested helm chart templates and Kubernetes manifests using different tools but we did not verify anything by actually deploying Kubernetes manifests in the Kubernetes cluster.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-do-we-need-integration-tests-"&gt;
  &lt;/a&gt;
  Why do we need integration tests ?
&lt;/h3&gt;

&lt;p&gt;I have mentioned a few of the use cases which can only be verified by deploying resources in a cluster.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;I have mounted the volume as writable which I want to verify by creating a file in volume.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;There are some custom resources which I want to verify.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;I want to verify the health-check of the internal load balancer created as part of Kubernetes service creation.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are many tools available but I really liked &lt;strong&gt;&lt;a href="https://kubetest.readthedocs.io/en/latest/"&gt;Kubetest&lt;/a&gt;&lt;/strong&gt; which is a pytest plugin. Kubetest makes it easy to write integration tests by providing abstraction on top of Kubernetes client.&lt;/p&gt;

&lt;p&gt;It provides many helper functions so you don’t need to write complex code using Kubernetes client unless it’s absolutely necessary.&lt;/p&gt;

&lt;p&gt;It’s very intuitive and fun to write integration tests using Kubetest. I was tempted to skip not putting any example code here because it is  self explanatory once you look at this &lt;strong&gt;&lt;a href="https://kubetest.readthedocs.io/en/latest/examples.html"&gt;example&lt;/a&gt;&lt;/strong&gt; code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;I have covered the basics about helm charts, various tools we can use for different types of testing including unit test and integration tests during the lifecycle from development to releasing the helm charts. &lt;/p&gt;

&lt;p&gt;Don’t miss out to look at my &lt;strong&gt;&lt;a href="https://github.com/chiragdm/helm-chart-testing"&gt;github&lt;/a&gt;&lt;/strong&gt; I have used as an example through out the article if anything is not clear.&lt;/p&gt;

&lt;p&gt;Hope you enjoyed it. Cheers !&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://helm.sh/"&gt;https://helm.sh/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kubeval.com/"&gt;https://www.kubeval.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.conftest.dev/"&gt;https://www.conftest.dev/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.openpolicyagent.org/docs/latest/policy-language/"&gt;https://www.openpolicyagent.org/docs/latest/policy-language/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://helm.sh/docs/topics/charts/#schema-files"&gt;https://helm.sh/docs/topics/charts/#schema-files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/quintush/helm-unittest"&gt;https://github.com/quintush/helm-unittest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kubetest.readthedocs.io/en/latest/"&gt;https://kubetest.readthedocs.io/en/latest/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chiragdm/helm-chart-testing"&gt;https://github.com/chiragdm/helm-chart-testing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>helm</category>
      <category>kubernetes</category>
      <category>unittesting</category>
      <category>integrationtesting</category>
    </item>
    <item>
      <title>We live in Savage with a better hair cut</title>
      <author>ROHIT KANYAL</author>
      <pubDate>Fri, 11 Jun 2021 14:59:20 +0000</pubDate>
      <link>https://dev.to/rohitkanyal/we-live-in-savage-with-a-better-hair-cut-1lda</link>
      <guid>https://dev.to/rohitkanyal/we-live-in-savage-with-a-better-hair-cut-1lda</guid>
      <description>&lt;p&gt;When the Dr. Singh start giving speech about what going on there In society anything become like it is normal thing to do burn people just to feel safe it is that much simple.&lt;br&gt;
This is so much true but it can't put in next Gen kid mind without making them feel bad about there previous gen.&lt;br&gt;
What I see is that, We all need some way to show and tell real thing to child without giving them something to rebel current situation rather make a steady change in society, where we want to see both gen live in peace without blaming any gen.&lt;br&gt;
That work is efficiently done by the maker of Sweet tooth.&lt;br&gt;
So what I see it more then Entertainment it psychological way to give awareness to people &lt;br&gt;
in war's we give signal that attack is coming but now we need to give message to show them what possibly solution there is no solution simple just giving them a signal is something wrong we need to give them proper solution with reason there are many miss use of message so there should be a way to understand real thing.&lt;br&gt;
You need to help people with good reason if not it is totally misunderstanding which will cause more damage then real problem in future gen.&lt;/p&gt;

&lt;p&gt;There is one movie which give amazing insight what is going to be next big problem as society which is anime&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#%C9%A2%E1%B4%87%C9%B4%E1%B4%8F%E1%B4%84%C9%AA%E1%B4%85%E1%B4%80%CA%9F-%E1%B4%8F%CA%80%C9%A2%E1%B4%80%C9%B4"&gt;
  &lt;/a&gt;
  ɢᴇɴᴏᴄɪᴅᴀʟ ᴏʀɢᴀɴ
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ILvzHAq368Q"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>sweettoothquotes</category>
    </item>
  </channel>
</rss>
