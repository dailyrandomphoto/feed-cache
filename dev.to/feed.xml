<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Deploying a Kotlin App to Heroku</title>
      <author>Michael Bogan</author>
      <pubDate>Wed, 13 Oct 2021 11:24:52 +0000</pubDate>
      <link>https://dev.to/heroku/deploying-a-kotlin-app-to-heroku-5d0g</link>
      <guid>https://dev.to/heroku/deploying-a-kotlin-app-to-heroku-5d0g</guid>
      <description>&lt;p&gt;Since its earliest release, Java has touted itself as a "&lt;a href="https://en.wikipedia.org/wiki/Write_once,_run_anywhere"&gt;write once, run everywhere&lt;/a&gt;" programming language. The idea was that a programmer could develop an app in Java, have it compiled down to bytecode, and become an executable that can run on any platform, regardless of operating system or platform. It was able to do so in part by a runtime known as the Java Virtual Machine, or &lt;a href="https://en.wikipedia.org/wiki/Java_virtual_machine"&gt;JVM&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;To Java's credit, the JVM was (and still is!) an incredibly fine-tuned runtime that abstracted away a computer's underlying hardware. While Java as a programming language survives to this day, it is often viewed as cumbersome, stodgy, and representative of an outdated approach to implementing solutions. &lt;/p&gt;

&lt;p&gt;In the last 10 years, more and more languages that run on the JVM have developed, but look and feel nothing like Java. One such language is &lt;a href="https://en.wikipedia.org/wiki/Kotlin_(programming_language)"&gt;Kotlin&lt;/a&gt;. Because of the JVM, it has no real performance advantages over regular Java. Still, its strength lies in the fact that it prioritizes legibility in a way that Java does not. Consider, for example, printing a substring in Java:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Java
String input = "What is the answer to the Ultimate Question of Life, the Universe, and Everything? 42";
String answer = input.substring(input.indexOf("?") + 1);
System.out.println(answer);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You must first get the index of the character you want to be in the substring, add one (since strings are zero-indexed), and call &lt;code&gt;System.out.println&lt;/code&gt; to write to stdout.&lt;/p&gt;

&lt;p&gt;In Kotlin, this is much shorter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Kotlin
val input = "What is the answer to the Ultimate Question of Life, the Universe, and Everything? 42"
val answer = input.substringAfter("?")
println(answer)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Kotlin has garnered so much interest that&lt;a href="https://techcrunch.com/2019/05/07/kotlin-is-now-googles-preferred-language-for-android-app-development/"&gt; Google even recommends it over Java for developing Android apps&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;In this post, we'll take a quick look at how to develop an app in Kotlin. We'll build a simple API with a PostgreSQL database and deploy it to Heroku to see it live.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;Before we begin, you'll need to make sure you've got the following software installed on your machine: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://signup.heroku.com/"&gt;An account on Heroku&lt;/a&gt;. This is completely free and doesn't require any payment information.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://devcenter.heroku.com/articles/heroku-cli#download-and-install"&gt;The Heroku CLI&lt;/a&gt;. Once your application is on Heroku, this will make managing it much easier.&lt;/li&gt;
&lt;li&gt;You'll need to have &lt;a href="https://kotlinlang.org/docs/command-line.html"&gt;Kotlin&lt;/a&gt; installed (&amp;gt;= 1.4).&lt;/li&gt;
&lt;li&gt;You'll also need &lt;a href="https://gradle.org/install/"&gt;Gradle&lt;/a&gt; installed (&amp;gt;= 7.0).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You will also need to be a little familiar with &lt;a href="https://git-scm.com"&gt;Git&lt;/a&gt; and have it installed on your machine.&lt;/p&gt;

&lt;p&gt;We’re going to be using &lt;a href="https://www.jetbrains.com/help/idea/get-started-with-kotlin.html"&gt;the IntelliJ&lt;/a&gt; IDE for this Kotlin app. Their documentation provides some guidance on how to create a new project. Make sure you select the following options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We want to create a Kotlin application that uses Gradle as a build system&lt;/li&gt;
&lt;li&gt;Set the name of the project to kotlin-api&lt;/li&gt;
&lt;li&gt;Set the JDK version to 16. If you don’t have this version installed, you can select &lt;strong&gt;Download JDK&lt;/strong&gt;… from the dropdown, then choose &lt;strong&gt;Oracle Open JDK&lt;/strong&gt; version 16&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After the IDE sets everything up, you should have a directory structure that looks roughly like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kotlin-api
├── build.gradle.kts
└── src
    ├── main
    │   ├── kotlin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our Kotlin files will be kept in &lt;code&gt;src/main/kotlin&lt;/code&gt;, and our build logic will be in &lt;em&gt;build.gradle.kts&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h2&gt;

&lt;p&gt;Gradle is a build tool for a variety of languages. It also acts as a dependency management tool, similar to Maven. You’ll already have some lines in your &lt;em&gt;build.gradle.kts&lt;/em&gt; file, which the IDE automatically added to be helpful. You can delete all of that, and paste in these lines instead:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;plugins {
    id("java")
    id("org.jetbrains.kotlin.jvm") version "1.5.10"
    id("org.springframework.boot") version "2.4.3"

    id("io.spring.dependency-management") version "1.0.11.RELEASE"
}

group "com.example"
version "0.0.1"

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib") 

    implementation("org.springframework.boot:spring-boot-starter-web")    
    implementation("org.springframework.boot:spring-boot-starter")

    developmentOnly("org.springframework.boot:spring-boot-devtools")
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These lines specify our project's dependencies and where to find them. For example, we want to use  &lt;code&gt;[org.springframework.boot](https://plugins.gradle.org/plugin/org.springframework.boot)&lt;/code&gt; at version 2.4.3, which is why it's defined within the &lt;code&gt;plugins&lt;/code&gt; block. We point out the repositories where the packages can be found—at &lt;code&gt;mavenCentral()&lt;/code&gt;—and which exposed classes we want to use (&lt;code&gt;implementation( "org.springframework.boot:spring-boot-starter-web")&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Let's create two small files to test our setup. Create a file called &lt;code&gt;Application.kt&lt;/code&gt; in the &lt;em&gt;src/main/kotlin&lt;/em&gt; folder and paste in the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.example

import org.springframework.boot.SpringApplication
import org.springframework.boot.autoconfigure.SpringBootApplication

@SpringBootApplication
open class Application

fun main(args: Array&amp;lt;String&amp;gt;) {
    SpringApplication.run(Application::class.java, *args)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This starts a default app using the Spring framework. The real magic happens in this next file, &lt;code&gt;Controller.kt&lt;/code&gt;, which you should create alongside &lt;code&gt;Application.kt&lt;/code&gt; in &lt;em&gt;src/main/kotlin&lt;/em&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.example

import org.springframework.web.bind.annotation.GetMapping
import org.springframework.web.bind.annotation.PathVariable
import org.springframework.web.bind.annotation.RestController

@RestController
class GreetingController {

    @GetMapping("/{name}")
    fun get(@PathVariable name: String) = "Hello, $name"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we define a route (&lt;code&gt;@GetMapping("/{name}")&lt;/code&gt;), where &lt;code&gt;{name}&lt;/code&gt; is a dynamic value. By placing this decorator over a Kotlin method (&lt;code&gt;fun get&lt;/code&gt;, or "a function named get"), we're able to match the route to whatever behavior we want—in this case, returning a greeting with the path name for a &lt;code&gt;GET&lt;/code&gt; request. &lt;/p&gt;

&lt;p&gt;In order for the IDE to know how to launch our application, we need to create &lt;a href="https://www.jetbrains.com/help/idea/run-debug-configuration.html"&gt;a run configuration&lt;/a&gt;. At the top of the IDE menu, click the button that says &lt;strong&gt;Add Configuration…&lt;/strong&gt;. Select &lt;strong&gt;Add new run configuration&lt;/strong&gt;, then choose Gradle from the list. For the Gradle project name, enter kotlin-api. In the Tasks field, type &lt;code&gt;bootRun&lt;/code&gt;. &lt;code&gt;&lt;a href="https://docs.spring.io/spring-boot/docs/2.5.0/gradle-plugin/reference/htmlsingle/#running-your-application"&gt;bootRun&lt;/a&gt;&lt;/code&gt; is a Gradle task provided by the Spring framework which will compile our code and start the server. Click &lt;strong&gt;Ok&lt;/strong&gt;; you should now have a green Play button in your IDE menu bar. When you click on this, the IDE will execute  &lt;code&gt;gradle bootRun&lt;/code&gt; to build this Kotlin app and start the server. When that finishes, navigate to &lt;code&gt;http:&lt;em&gt;//localhost:8080/world&lt;/em&gt;&lt;/code&gt;. You should see a nice greeting.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#interacting-with-the-database"&gt;
  &lt;/a&gt;
  Interacting with the database
&lt;/h2&gt;

&lt;p&gt;Now, let's get to the (somewhat) serious stuff. Suppose we wanted to attach a database to this project. In a Maven/Java world, we'd need to update an XML file and add a reference to a JAR file. In Gradle, we can get by with just adding a few lines to our &lt;code&gt;build.gradle.kts&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dependencies {
    # ...

    implementation("com.zaxxer:HikariCP:4.0.3")
    runtimeOnly("org.postgresql:postgresql")

    # ...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we've included &lt;a href="https://github.com/brettwooldridge/HikariCP"&gt;HikariCP&lt;/a&gt; in our project, which is a popular database connection driver. We also indicate that we want to "load" the &lt;code&gt;org.postgresql&lt;/code&gt; library during runtime. With just these two lines, we've let our configuration know that we want to interact with a PostgreSQL database. If you already have a PostgreSQL database running locally, that's great. You'll be able to continue the rest of this guide locally and see the results when browsing localhost. If you don't have PostgreSQL, don't fret—we'll show you just how easy it is to deploy this app on Heroku, which will take care of the infrastructure for you. &lt;/p&gt;

&lt;p&gt;Head back to &lt;code&gt;Controller.kt&lt;/code&gt;, and replace it with the contents below. This takes some of what we had from before but adds to it. We'll go over the changes shortly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.example
import org.springframework.web.bind.annotation.GetMapping
import org.springframework.web.bind.annotation.PathVariable
import org.springframework.web.bind.annotation.RestController
import org.springframework.web.bind.annotation.PostMapping
import org.springframework.web.bind.annotation.RequestBody
import org.springframework.http.MediaType
import com.zaxxer.hikari.HikariConfig
import com.zaxxer.hikari.HikariDataSource
import java.net.URI
import javax.sql.DataSource

@RestController
class GreetingController {

   val dataSource = dataSource()
   val connection = dataSource.connection

   @GetMapping("/{name}")

   fun get(@PathVariable name: String) = "Hello, $name"

   @PostMapping(value = ["/add-name"], consumes = [MediaType.TEXT_PLAIN_VALUE])
   fun post(@RequestBody requestBody: String) : String {
       initDb()
       val stmt = connection.createStatement()
       stmt.executeUpdate("INSERT INTO names values('$requestBody')")
       return "Added $requestBody"
   }

   @GetMapping("/everyone")

   fun getAll() : String {
       initDb()
       val stmt = connection.createStatement()
       val rs = stmt.executeQuery("SELECT name FROM names")
       val output = ArrayList&amp;lt;String&amp;gt;()
       while (rs.next()) {
           output.add(rs.getString("name"))
       }
       val names = output.joinToString(", ")
       return "Here are the names: $names"
   }

   internal fun initDb() {
       val stmt = connection.createStatement()
       stmt.executeUpdate("CREATE TABLE IF NOT EXISTS names (name text)")
   }

   internal fun dataSource(): HikariDataSource {
       val config = HikariConfig()
       var dbUri = URI(System.getenv("DATABASE_URL") ?: "postgresql://localhost:5432/")
       var dbUserInfo =  dbUri.getUserInfo()
       var username: String?; var password: String?;
       if (dbUserInfo != null) {
           username = dbUserInfo.split(":").get(0)
           password = dbUserInfo.split(":").get(1)
       } else {
           username = System.getenv("DATABASE_USERNAME") ?: null
           password = System.getenv("DATABASE_PASSWORD") ?: null
       }
       if (username != null) {
           config.setUsername(username)
       }
       if (password != null) {
           config.setPassword(password)
       }
       val dbUrl = "jdbc:postgresql://${dbUri.getHost()}:${dbUri.getPort()}${dbUri.getPath()}"
       config.setJdbcUrl(dbUrl)
       return HikariDataSource(config)
   }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There's quite a lot going on here! Let's start from the bottom. We define a function called &lt;code&gt;dataSource&lt;/code&gt; which provides a connection to our database. Because we're building&lt;a href="https://12factor.net/config"&gt; a 12-Factor app&lt;/a&gt;, our database credentials are stored in an environment variable called &lt;code&gt;DATABASE_URL&lt;/code&gt;. We fetch that URL and pull out the username and password from it if one exists. If not, we check another two environment variables for that information—&lt;code&gt;DATABASE_USERNAME&lt;/code&gt; and &lt;code&gt;DATABASE_PASSWORD&lt;/code&gt;. We then put all that information together into a format that the database connector needs. The &lt;code&gt;initDb&lt;/code&gt; function creates a table called &lt;code&gt;names&lt;/code&gt;, with a single text column called &lt;code&gt;name&lt;/code&gt;. The &lt;code&gt;/everyone&lt;/code&gt; endpoint has a &lt;code&gt;@GetMapping&lt;/code&gt; decorator just like before. This defines a &lt;code&gt;GET /everyone&lt;/code&gt; route, which gets all the names from the database.&lt;/p&gt;

&lt;p&gt;Finally, we've added something rather new: a &lt;code&gt;@PostMapping&lt;/code&gt; decorator. Here, we need to define what types of content this &lt;code&gt;POST&lt;/code&gt; route can accept. In this case, it &lt;code&gt;consumes&lt;/code&gt; a &lt;code&gt;TEXT_PLAIN_VALUE&lt;/code&gt; media type (in other words, &lt;code&gt;"Content-Type: text/plain"&lt;/code&gt;). Whatever string of information we put in the request body will be added to the database. In just a few lines, we've built a small API that we can add to and query.&lt;/p&gt;

&lt;p&gt;If you start this server now—and if you have PostgreSQL running locally—you should be able to interact with it. Try making the following request:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ curl -H "Content-Type: text/plain" -X POST http://localhost:8080/add-name -d 'Frank'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you navigate to &lt;code&gt;http://localhost:8080/everyone&lt;/code&gt;, you'll see that &lt;code&gt;Frank&lt;/code&gt; was included.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploying-to-heroku"&gt;
  &lt;/a&gt;
  Deploying to Heroku
&lt;/h2&gt;

&lt;p&gt;It's time to see just how easy it is to get Kotlin running on Heroku. First, we need to create a file that's specific to Heroku:&lt;a href="https://devcenter.heroku.com/articles/procfile"&gt; the Procfile&lt;/a&gt;. This text file defines how our application should boot and run. &lt;/p&gt;

&lt;p&gt;Create a file named &lt;em&gt;Procfile&lt;/em&gt; in the root level directory, right next to your &lt;em&gt;build.gradle.kts&lt;/em&gt; file. Copy-paste the following lines into it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;web: java -jar build/libs/kotlin-api.jar --server.port=$PORT
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we're saying that we want Heroku to run &lt;code&gt;java -jar build/libs/kotlin-api.jar&lt;/code&gt;. That JAR is packaged and built during the deployment process; Heroku will create it automatically for us because it knows how to execute the Gradle task to do so. We are also binding the &lt;code&gt;$PORT&lt;/code&gt; environment variable so that Heroku knows which port the server is listening to.&lt;/p&gt;

&lt;p&gt;Next, run the following Git commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git init
$ git add .
$ git commit -m "Preparing my first Kotlin app"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since we have the Heroku CLI installed, we can &lt;a href="https://devcenter.heroku.com/articles/creating-apps"&gt;call heroku create on the command line to generate an app&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ heroku create
Creating app... done, ⬢ desolate-plains-67007
Created http://desolate-plains-67007.herokuapp.com/ | git@heroku.com:desolate-plains-67007.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your app will be assigned a random name—in this example, it's &lt;code&gt;desolate-plains-67007&lt;/code&gt;—as well as a publicly accessible URL.&lt;/p&gt;

&lt;p&gt;In order to provision a database, we use the &lt;code&gt;&lt;a href="https://devcenter.heroku.com/articles/heroku-cli-commands#heroku-addons-all-app-app"&gt;heroku addons&lt;/a&gt;&lt;/code&gt; command. Calling it without arguments will let us know if any exist:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ heroku addons
No add-ons for app desolate-plains-67007.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;No add-ons exist for our app, which makes sense—we just created it! To add a PostgreSQL database, we can use the &lt;code&gt;addons:create&lt;/code&gt; command like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ heroku addons:create heroku-postgresql:hobby-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Heroku offers several tiers of PostgreSQL databases. &lt;code&gt;hobby-dev&lt;/code&gt; is the free tier, so we can play around with this without paying a dime.&lt;/p&gt;

&lt;p&gt;Your code is ready, your Heroku app is configured—you’re ready to deploy. This is the easy part! Just type out the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git push heroku master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your code will be pushed to Heroku. From that point on, Heroku will take over. You'll see your build logs scrolling through your terminal. This will show you what Heroku is installing on your behalf and where you are in the build process. After it’s complete, you can visit your special URL in the browser (in this case, &lt;code&gt;https://desolate-plains-67007.herokuapp.com&lt;/code&gt;) and interact with the API on the internet!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learning-more"&gt;
  &lt;/a&gt;
  Learning more
&lt;/h2&gt;

&lt;p&gt;Kotlin's &lt;a href="https://blog.heroku.com/rise-of-kotlin"&gt;performant design and legible syntax&lt;/a&gt;—combined with the ease of Gradle—make it ideal for enterprises that need to rely on battle-tested Java packages. Because of its interoperability with Java, Kotlin is ideal as a transitional language; vast swaths of Java code can be converted into Kotlin while still maintaining a functional app. Deploying to Heroku is smooth, and I didn't even take advantage of the different ways to &lt;a href="https://devcenter.heroku.com/categories/java-support"&gt;fine-tune Java and JVM-based apps for deployment&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>java</category>
      <category>kotlin</category>
      <category>architecture</category>
    </item>
    <item>
      <title>what is DeFi?</title>
      <author>arz digital</author>
      <pubDate>Wed, 13 Oct 2021 11:03:59 +0000</pubDate>
      <link>https://dev.to/zohaspotlight/what-is-defi-3la9</link>
      <guid>https://dev.to/zohaspotlight/what-is-defi-3la9</guid>
      <description>&lt;p&gt;DeFi draws inspiration from blockchain, the technology behind the digital currency bitcoin, which allows several entities to hold a copy of a history of transactions, meaning it isn't controlled by a single, central source. That's important because centralized systems and human gatekeepers can limit the speed and sophistication of transactions while offering users less direct control over their money. DeFi is distinct because it expands the use of blockchain from simple value transfer to more complex financial use cases.&lt;/p&gt;

&lt;p&gt;Bitcoin and many other digital-native assets stand out from legacy digital payment methods, such as those run by Visa and PayPal, in that they remove all middlemen from transactions. When you pay with a credit card for coffee at a cafe, a financial institution sits between you and the business, with control over the transaction, retaining the authority to stop or pause it and record it in its private ledger. With bitcoin, those institutions are cut out of the picture.&lt;/p&gt;

&lt;p&gt;Direct purchases aren't the only type of transaction or contract overseen by big companies; financial applications such as loans, insurance, crowdfunding, derivatives, betting and more are also in their control. Cutting out middlemen from all kinds of transactions is one of the primary advantages of DeFi.&lt;/p&gt;

&lt;p&gt;Before it was commonly known as decentralized finance, the idea of DeFi was often called "open finance."&lt;/p&gt;

</description>
      <category>blockchain</category>
    </item>
    <item>
      <title>Instagram clone</title>
      <author>Mayank Choudhary</author>
      <pubDate>Wed, 13 Oct 2021 10:50:52 +0000</pubDate>
      <link>https://dev.to/rado_mayank/instagram-clone-he8</link>
      <guid>https://dev.to/rado_mayank/instagram-clone-he8</guid>
      <description>&lt;p&gt;Build a frontend clone for Instagram using HTML, CSS, and JavaScript skills.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YSGorBb1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1ng9pd71jvt2sco2fds.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YSGorBb1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1ng9pd71jvt2sco2fds.png" alt="logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Source code&lt;/strong&gt; - &lt;a href="https://github.com/mayankchaudhary26/Instagram-Clone-Project"&gt;https://github.com/mayankchaudhary26/Instagram-Clone-Project&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
You can use any tools you like to help you complete the challenge. So if you've got something you'd like to practice, feel free to give it a go.&lt;br&gt;
View the optimal layout for the site depending on their device's screen size See hover states for all interactive elements on the page Download the starter code and go through the README.md file. This will provide further details about the project. The style-guide.md file is where you'll find colors, fonts, etc.&lt;/p&gt;

&lt;p&gt;The designs are in image formats (sketch and figma designs coming soon).&lt;/p&gt;

&lt;p&gt;You will find all the required assets in the /assets folder. These include images, fonts, etc.&lt;/p&gt;

&lt;p&gt;There is also a style-guide.html file containing the information you'll need, such as color palette and font names. Make sure to open this in the browser to see the contents.&lt;br&gt;
Submit your solution on the platform for the rest of the community to see. Find this project on codedamn projects page for tips on how to do this.&lt;br&gt;
You will find all the required assets in the /assets folder. These include images, fonts, etc.&lt;/p&gt;

&lt;p&gt;Remember, if you're looking for feedback on your solution, be sure to ask questions when submitting it. The more specific and detailed you are with your questions, the higher the chance you'll get valuable feedback from the community.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
Your project should:&lt;/p&gt;


&lt;li&gt; Be responsive for desktop and mobile phones
&lt;/li&gt;
&lt;li&gt; Have minimum functionalities and effects working
Style guide :

&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0SopUwac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efttp0k1zp6mffmcm73s.png" alt="image"&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Body&lt;/strong&gt;&lt;br&gt;
FONT FAMILY -apple-system, system-ui, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif&lt;/p&gt;




&lt;/li&gt;
&lt;li&gt; FONT SIZE
16px




&lt;/li&gt;
&lt;li&gt; FONT STYLE
normal




&lt;/li&gt;
&lt;li&gt; FONT HEIGHT
normal


&lt;p&gt;&lt;strong&gt;Final Output&lt;/strong&gt; - &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g3301BdS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4obmleyvgcscru9b0x86.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g3301BdS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4obmleyvgcscru9b0x86.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;/li&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>html</category>
      <category>hacktoberfest</category>
    </item>
    <item>
      <title>Day 5 of 100 Days of Code &amp; Scrum: Rejected, Mislead, and Distracted</title>
      <author>Rammina</author>
      <pubDate>Wed, 13 Oct 2021 10:36:05 +0000</pubDate>
      <link>https://dev.to/rammina/day-5-of-100-days-of-code-scrum-rejected-mislead-and-distracted-13c2</link>
      <guid>https://dev.to/rammina/day-5-of-100-days-of-code-scrum-rejected-mislead-and-distracted-13c2</guid>
      <description>&lt;p&gt;Good morning, everyone!&lt;/p&gt;

&lt;p&gt;Today wasn't as bad as yesterday. Or is it?&lt;/p&gt;

&lt;p&gt;Anyway, I got an email notification saying that I got rejected for my technical interview submission.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0LkJt-E_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/76ddah7lxyyrecig52lm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0LkJt-E_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/76ddah7lxyyrecig52lm.png" alt="Rejection Letter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ouch? It didn't really hurt as much as I thought it would.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fAGDWQMC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4av0wf2cqwb6df7bsksy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fAGDWQMC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4av0wf2cqwb6df7bsksy.png" alt="This is Fine"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Firstly, it was kind of my fault for diving into a position in which I didn't know about GraphQL. The first time I used GraphQL was on this interview, and while I think I managed to solve the problem, my solution was not really the most appropriate and I just didn't stand out compared to the other candidates.&lt;/p&gt;

&lt;p&gt;Secondly, I apply to multiple companies at the same time. By doing so, each rejection hurts a lot less. I also recommend most people to do so unless they don't have the time to or if it's too stressful for them.&lt;/p&gt;

&lt;p&gt;It's kind of stupid, but the main reason why I'm studying GraphQL right now is because I got really upset about not doing well enough in my technical interview.&lt;/p&gt;

&lt;p&gt;And yes, I still apply to positions that are beyond my current experience level, just so I can learn a little bit about what is expected of more senior developers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sending-a-thank-you-letter"&gt;
  &lt;/a&gt;
  Sending a Thank You Letter
&lt;/h2&gt;

&lt;p&gt;Moving on, I sent them back a &lt;code&gt;Thank You Letter&lt;/code&gt;, out of gratitude for letting me take a technical test for a job position that was way out of my current expertise. While &lt;code&gt;Thank You Letters&lt;/code&gt; are not mandatory, I do think it improves employers' perception of you, even if just a little bit. This makes it more likely that you're able to reapply in the future.    &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WCGd6oGZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fdzqqob0rerynbllfm51.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WCGd6oGZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fdzqqob0rerynbllfm51.png" alt="Thank You Letter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Oh, and I had 2 interviews today which I managed to get through.&lt;/p&gt;

&lt;p&gt;I also had to deal with calls, emails, social media-related stuff, and so on. It was pretty distracting. I'm probably going to have to put my phone away from my desk when I'm coding next time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I learned how to organize my &lt;code&gt;graphql&lt;/code&gt; folders and files, and I learned how to perform query and mutation options.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Today was fairly productive, I learned a lot and I managed to reach out to multiple people.&lt;/p&gt;

&lt;p&gt;Here are some of the things I've learned:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#graphql"&gt;
  &lt;/a&gt;
  GraphQL
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;setContext&lt;/code&gt; - takes in a function and returns an object or a promise (said promise will return an object that sets the new context of a request), it receives two arguments:

&lt;ul&gt;
&lt;li&gt;the first one being the GraphQL request being executed&lt;/li&gt;
&lt;li&gt;and the second is the previous context&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;ApolloClient enables a developer to read and write cache&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;cache.readQuery&lt;/code&gt; - allows for directly executing a query from the cache. It takes in an object which contains the query and other properties.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;cache.writeQuery&lt;/code&gt; - allows for directly writing data to the cache. It takes in an object which contains the query and a required data option.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;the Product Backlog will always exist as long as there is the product.&lt;/li&gt;
&lt;li&gt;the Product Backlog is dynamic, and will always be changed and refined as the development process continues.&lt;/li&gt;
&lt;li&gt;the Product Backlog will never run out of items, there is always something to add and work on.&lt;/li&gt;
&lt;li&gt;the Development Team is responsible for all estimates, and the Product Owner only influences the Development Team by helping it understand and choose trade-offs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OLEVrt6o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/auqvmwyndqd7ljopwywv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OLEVrt6o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/auqvmwyndqd7ljopwywv.jpg" alt="Sleepy Dog"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.howtographql.com/"&gt;The Fullstack Tutorial for GraphQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.apollographql.com/docs/"&gt;Apollo Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How is everyone doing in their learning journey? Feel free to chat with me in the comments and/via DM!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>100daysofcode</category>
      <category>graphql</category>
    </item>
    <item>
      <title>Join Hacktoberfest 2021 with Milvus!</title>
      <author>Milvus</author>
      <pubDate>Wed, 13 Oct 2021 10:09:20 +0000</pubDate>
      <link>https://dev.to/milvusio/join-hacktoberfest-2021-with-milvus-3k3n</link>
      <guid>https://dev.to/milvusio/join-hacktoberfest-2021-with-milvus-3k3n</guid>
      <description>&lt;p&gt;How's your #Hacktoberfest so far?&lt;/p&gt;

&lt;p&gt;If you have not started yet, it's still not too late. Join the event with Milvus community and win some awesome prizes!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LET'S GET STARTED!👇🏻&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-participate"&gt;
  &lt;/a&gt;
  How to participate
&lt;/h2&gt;

&lt;p&gt;Sign up for the event on the &lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest website&lt;/a&gt; and visit &lt;a href="https://milvus.io/hacktoberfest-2021?utm_source=Dev.to&amp;amp;utm_medium=blog&amp;amp;utm_campaign=Hacktoberfest_dev.to&amp;amp;utm_id=Hacktoberfest+dev"&gt;Milvus Hactoberfest 2021 landing page&lt;/a&gt;. If you’re new to the open source world, no worries, we’ve got you covered. Here are some useful resources for beginners:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://milvus.io/community/making_your_first_contributions.md"&gt;Make your first contribution&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/chrissiemhrk/git-commit-message-5e21?utm_medium=email&amp;amp;utm_source=hacktoberfest&amp;amp;utm_campaign=preptember_&amp;amp;utm_content=participants"&gt;How to create a good commit message&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Below we’ve prepared a number of issues of different specialties to kick off the event, but you are free to wander around the Milvus Project and take on any existing issue or open a new issue you find interesting. Just don’t forget to mention Hacktoberfest in your PR title to make sure it counts toward your Hacktoberfest participation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code 👩🏻‍💻
&lt;/h3&gt;

&lt;p&gt;As the traditional way to contribute to open source projects, we happily welcome code contributions - the more the merrier! We’ve labeled a series of issues based on difficulty as “beginner”, “intermediate”, and “advanced” (Jackpot if you are to solve it!) for contributors of all skill levels. Click the issue links to learn more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#documentation"&gt;
  &lt;/a&gt;
  Documentation 📚
&lt;/h3&gt;

&lt;p&gt;Help improve our documentation! We’re always looking to improve our website and associated docs. If you are a newbie contributor, this is a great place to get your feet wet with Milvus. We’ve prepared a list of newbie-friendly Hacktoberfest issues ready to be tackled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Milvus technical documentation&lt;/li&gt;
&lt;li&gt;Milvus Go API reference documentation&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#community-content"&gt;
  &lt;/a&gt;
  Community content 📝
&lt;/h3&gt;

&lt;p&gt;The Milvus community is more than just code! In addition to documentation and direct code contributions, there are lots of other areas to show off your creativity. Some examples include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Showcases of a project you’ve built with Milvus&lt;/li&gt;
&lt;li&gt;Blog posts about interesting use cases or topics related to vector database technology&lt;/li&gt;
&lt;li&gt;Video content&lt;/li&gt;
&lt;li&gt;Website design&lt;/li&gt;
&lt;li&gt;Artwork&lt;/li&gt;
&lt;li&gt;Anything else you can think of!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#bootcamp"&gt;
  &lt;/a&gt;
  Bootcamp
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/milvus-io/bootcamp"&gt;Milvus Bootcamp&lt;/a&gt; is a repository of sample projects that demonstrate some of the possibilities of Milvus. You can contribute to the bootcamp by creating GitHub issues or pull requests for bug fixes, improvement suggestions, or other changes. &lt;/p&gt;

&lt;p&gt;We’re also looking for new projects to add to the Bootcamp. If you have a project idea you’d like to build on, even if it is just a concept, we encourage you to post a proposal in the “Hacktoberfest” category to stir up some discussions. &lt;br&gt;
Community content contribution&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#prizes"&gt;
  &lt;/a&gt;
  Prizes
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bp1onFsY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p7se2uzuhs81hozqbqsd.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bp1onFsY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p7se2uzuhs81hozqbqsd.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
This year we are going big! Besides the limited edition Hacktoberfest T-shirt 2, by contributing to the Milvus project between October 1 and October 31 you’ll also earn some additional swag and prizes sponsored by Zilliz.&lt;/p&gt;

&lt;p&gt;To be eligible for prizes, you need to have:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1 merged PR to receive a sticker pack &amp;amp; a digital Milvus contributor badge (for you to showcase on your LinkedIn profile).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2+ merged PRs to receive a sticker pack, a digital Milvus contributor badge, and a Milvus T-shirt (only for the first 50 participants).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But that’s not all. You also have the chance to bring home:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A Logitech Pro X Keyboard (USD $149 value) and a physical Hacktoberfest badge if recognized as 🏆 Top Contributor 🏆 (Best Quality PR).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A DJI Drone (USD $799 value) if you complete at least 1 PR merged with the issue tagged #advanced and is awarded the 🏆🏆 Grand Prize 🏆🏆 (Most Difficult PR).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;📌 The above-mentioned prizes might be replaced with alternatives of the equivalent value should shipping restrictions occur. The final interpretation right belongs to Zilliz.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#claim-your-prize"&gt;
  &lt;/a&gt;
  Claim your prize
&lt;/h2&gt;

&lt;p&gt;Once you’ve submitted your PR, don’t forget to come back and fill in your information &lt;a href="https://milvus.io/hacktoberfest-2021?utm_source=Dev.to&amp;amp;utm_medium=blog&amp;amp;utm_campaign=Hacktoberfest_dev.to&amp;amp;utm_id=Hacktoberfest+dev"&gt;here&lt;/a&gt; before October 31 to claim your prizes.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#contact-us"&gt;
  &lt;/a&gt;
  Contact us
&lt;/h2&gt;

&lt;p&gt;💬 &lt;a href="https://discuss.milvus.io/t/join-hacktoberfest-2021-with-us/72"&gt;Milvus Discussion Forum&lt;/a&gt;: You can DM @kateshaowanjou or @Renshi8 for any questions you might have about the event or the Forum.&lt;br&gt;
👥 Follow us on Twitter and if your contribution is highlighted during the event you could earn special swag!&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XGNydCaH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E_53zZHVcAUvlEu.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--2nY3Osuw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1184002663119114242/UYESE3g6_normal.jpg" alt="Milvus profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Milvus
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/milvusio"&gt;@milvusio&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Are you a &lt;a href="https://twitter.com/hashtag/Golang"&gt;#Golang&lt;/a&gt; expert?💻  We've curated a list of &lt;a href="https://twitter.com/hashtag/Milvus"&gt;#Milvus&lt;/a&gt; Golang issues ready for &lt;a href="https://twitter.com/hashtag/Hacktoberfest"&gt;#Hacktoberfest&lt;/a&gt; (only a few days away)!  Check out our list and guidelines, and you could win awesome swag!🎉&lt;br&gt;&lt;br&gt;&lt;a href="https://t.co/1U6h0LzUpA"&gt;ow.ly/7cRX50GeGhf&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/DigitalOcean"&gt;#DigitalOcean&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Python"&gt;#Python&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Opensource"&gt;#Opensource&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Software"&gt;#Software&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Programmers"&gt;#Programmers&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:52 PM - 22 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1440720658044911619" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1440720658044911619" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1440720658044911619" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


</description>
      <category>python</category>
      <category>opensource</category>
      <category>hacktoberfest</category>
      <category>go</category>
    </item>
    <item>
      <title>Visit StackOverflow without leaving the terminal with Pyhton</title>
      <author>Stokry</author>
      <pubDate>Wed, 13 Oct 2021 10:07:55 +0000</pubDate>
      <link>https://dev.to/stokry/visit-stackoverflow-without-leaving-the-terminal-with-pyhton-ie4</link>
      <guid>https://dev.to/stokry/visit-stackoverflow-without-leaving-the-terminal-with-pyhton-ie4</guid>
      <description>&lt;p&gt;Stuck on a coding problem? Wish to visit StackOverflow without leaving the terminal? With &lt;code&gt;howdoi&lt;/code&gt;, you can do it!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#introduction-to-howdoi"&gt;
  &lt;/a&gt;
  Introduction to howdoi
&lt;/h3&gt;

&lt;p&gt;Howdoi is an open source command line tool that gives answers to your questions right on the command line. Howdoi can be used by anyone and everyone who finds themselves Googling for answers to their basic programming questions.&lt;/p&gt;

&lt;p&gt;You wonder:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;howdoi&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;hello&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Howdoi output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;howdoi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Suppose you want to know how to format a date in bash. Why open your browser and read through blogs (risking major distraction) when you can simply stay in the console and ask howdoi:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ howdoi format date bash
&amp;gt; DATE=`date +%Y-%m-%d`
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;howdoi will answer all sorts of queries:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ howdoi print stack trace python
&amp;gt; import traceback
&amp;gt;
&amp;gt; try:
&amp;gt;     1/0
&amp;gt; except:
&amp;gt;     print '&amp;gt;&amp;gt;&amp;gt; traceback &amp;lt;&amp;lt;&amp;lt;'
&amp;gt;     traceback.print_exc()
&amp;gt;     print '&amp;gt;&amp;gt;&amp;gt; end of traceback &amp;lt;&amp;lt;&amp;lt;'
&amp;gt; traceback.print_exc()

$ howdoi convert mp4 to animated gif
&amp;gt; video=/path/to/video.avi
&amp;gt; outdir=/path/to/output.gif
&amp;gt; mplayer "$video" \
&amp;gt;         -ao null \
&amp;gt;         -ss "00:01:00" \  # starting point
&amp;gt;         -endpos 10 \ # duration in second
&amp;gt;         -vo gif89a:fps=13:output=$outdir \
&amp;gt;         -vf scale=240:180

$ howdoi create tar archive
&amp;gt; tar -cf backup.tar --exclude "www/subf3" www
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also search other &lt;a href="https://stackexchange.com/sites#traffic"&gt;StackExchange properties&lt;/a&gt; for answers:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;HOWDOI_URL=cooking.stackexchange.com howdoi make pesto
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or as an alias:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;alias hcook='function hcook(){ HOWDOI_URL=cooking.stackexchange.com howdoi $* ; }; hcook'
hcook make pesto
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I advise you to visit this link:  &lt;a href="https://github.com/gleitz/howdoi"&gt;howdoi&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is also an  Visual Studio Code Extension, Head over to the &lt;a href="https://marketplace.visualstudio.com/items?itemName=howdoi-org.howdoi"&gt;MarketPlace&lt;/a&gt; to install the extension.&lt;/p&gt;

&lt;p&gt;Thank you all.&lt;/p&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
      <category>productivity</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Creating a cool profile card</title>
      <author>Ayebidun Ezekiel</author>
      <pubDate>Wed, 13 Oct 2021 09:52:57 +0000</pubDate>
      <link>https://dev.to/ezekiel8807/creating-a-cool-profile-card-52c6</link>
      <guid>https://dev.to/ezekiel8807/creating-a-cool-profile-card-52c6</guid>
      <description>&lt;p&gt;Hello guys,&lt;br&gt;
today i will be showing how I created this cool profile card, let's get started..&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k7ih_zTQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/md87pijbeiddnrdwfczn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k7ih_zTQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/md87pijbeiddnrdwfczn.png" alt="profile_card"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-workspace"&gt;
  &lt;/a&gt;
  Create a workspace
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   cd /Desktop
   mkdir profile_card
   cd profile_card
   touch index.html
   touch style.css
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;cd /Desktop&lt;/strong&gt;: is use to change directory to the desktop 🖥️&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mkdir profile_card&lt;/strong&gt;: this command is use to create a folder called &lt;em&gt;ptofile_card&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cd profile_card&lt;/strong&gt;: the command is use to navigate inside the profile_card folder.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;touch index.html&lt;/strong&gt;: create a index.html file inside the profile_card folder.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;touch style.css&lt;/strong&gt;: create a style.css file inside the profile_card folder.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-profile-card"&gt;
  &lt;/a&gt;
  create profile card
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA- 
         Compatible"&lt;/span&gt; 
          &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;" IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; 
         &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device- 
         width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Profile page&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-block"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"cover-img"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"c.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"cover-photo"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-image-box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"a.jpg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"profile picture"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;Ayebidun Ezekiel&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Full_stack Developer&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"more"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Portfolio&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#styling-our-profile-card"&gt;
  &lt;/a&gt;
  styling our profile card
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="nc"&gt;.profile-block&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;250px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;#5c75b1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.cover-img&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;150px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.cover-img&lt;/span&gt; &lt;span class="nt"&gt;img&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-repeat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;no-repeat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-top-right-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-top-left-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.profile-image-box&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;65px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;7px&lt;/span&gt; &lt;span class="m"&gt;#4d6cb2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;#5c75b1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="nc"&gt;.profile-image-box&lt;/span&gt; &lt;span class="nt"&gt;img&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.profile-block&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'franklin gothic medium'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;'arial narrow'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.profile-block&lt;/span&gt; &lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;lighter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.more&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.more&lt;/span&gt; &lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;150px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ffffff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#5c75b7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>beginners</category>
      <category>tutorial</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>How to copy files in Java? Example</title>
      <author>javinpaul</author>
      <pubDate>Wed, 13 Oct 2021 09:21:04 +0000</pubDate>
      <link>https://dev.to/javinpaul/how-to-copy-files-in-java-example-3clf</link>
      <guid>https://dev.to/javinpaul/how-to-copy-files-in-java-example-3clf</guid>
      <description>&lt;p&gt;Hello folks, I have been programming in Java for a long time and you won't believe but there was &lt;strong&gt;no file copy method in the Java API until Java 7&lt;/strong&gt;. At that time, our options were either write it ourself, using a FileInputStream, a FileOutputStream and a buffer to copy bytes from one to the other - or better yet, use the &lt;a href="https://docs.oracle.com/javase/7/docs/api/java/nio/channels/FileChannel.html"&gt;*&lt;em&gt;FileChannel.transferTo() *&lt;/em&gt;&lt;/a&gt;method or just use the Apache Commons' FileUtils which was a life save those days and even today. &lt;/p&gt;

&lt;p&gt;JDK has evolved now and you have a decent API to copy files from one directory to another. In this article, I'll show you both the pre-Java code for copying files from one directory to another as well post Java 7 code which makes this task a lot easier.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#1-copying-file-from-directory-to-other-before-java-7"&gt;
  &lt;/a&gt;
  1. Copying File from Directory to other before Java 7
&lt;/h2&gt;

&lt;p&gt;Dependency: Apache Commons IO&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-fileutilscopyfilefile-source-file-destination"&gt;
  &lt;/a&gt;
  1. FileUtils.copyFile(File source, File destination)
&lt;/h3&gt;

&lt;p&gt;This method copies a file to a new location preserving file timestamp&lt;/p&gt;

&lt;p&gt;This method copies the contents of the specified source file to the specified destination file. The directory holding the destination &lt;a href="https://www.java67.com/2014/02/how-to-create-file-and-directory-in-java.html"&gt;file is created if it does not exis&lt;/a&gt;t. If the destination file exists, then this method will overwrite it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.io.File&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.io.IOException&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.commons.io.FileUtils&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="cm"&gt;/*** Java program to copy a file from one directory to another e.g. from src to dest
 ** @author Javin*/&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;FileCopyDemo&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;[])&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
        &lt;span class="c1"&gt;// Using Apache Commons FileUtils class&lt;/span&gt;
        &lt;span class="nc"&gt;File&lt;/span&gt; &lt;span class="n"&gt;srcFile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;File&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bin/HelloWorld.class"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;File&lt;/span&gt; &lt;span class="n"&gt;destFile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;File&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"target/HelloWorld.class"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;FileUtils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;copyFile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;srcFile&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;destFile&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"File successfully copied in Java"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;IOException&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;printStackTrace&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nl"&gt;Output:&lt;/span&gt; &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"File successfully copied in Java"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#12-copies-a-file-to-a-directory-preserving-the-timestamp"&gt;
  &lt;/a&gt;
  1.2 Copies a file to a directory preserving the timestamp
&lt;/h3&gt;

&lt;p&gt;This method copies the contents of the specified source file to a file of the same name in the specified destination directory. The destination &lt;a href="https://javarevisited.blogspot.com/2011/12/create-file-directory-java-example.html"&gt;directory is created if it does not exis&lt;/a&gt;t. If the destination file exists, then this method will overwrite it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.io.File&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.io.IOException&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.commons.io.FileUtils&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="cm"&gt;/*** Java program to copy a file from one directory to another like from src to dest
 ** @author Javin Paul*/&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Testing&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;[])&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
        &lt;span class="c1"&gt;// Using Apache Commons FileUtils class&lt;/span&gt;
        &lt;span class="nc"&gt;File&lt;/span&gt; &lt;span class="n"&gt;srcFile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;File&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bin/HelloWorld.class"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;File&lt;/span&gt; &lt;span class="n"&gt;destDir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;File&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"target"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;FileUtils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;copyFileToDirectory&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;srcFile&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;destDir&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"File successfully copied to destination directory in Java"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;IOException&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;printStackTrace&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nl"&gt;Output:&lt;/span&gt; &lt;span class="nc"&gt;File&lt;/span&gt; &lt;span class="n"&gt;successfully&lt;/span&gt; &lt;span class="n"&gt;copied&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;destination&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="nc"&gt;Java&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://javarevisited.blogspot.com/2016/02/how-to-copy-non-empty-directory-in-java.html"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eooXXODw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dz2cdn1.dzone.com/storage/temp/15253331-how-to-copy-file-from-one-directory-to-other-in-ja.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-copying-files-from-one-directory-to-another-using-java-7-nio-2-api"&gt;
  &lt;/a&gt;
  2. Copying Files from One Directory to Another using Java 7 NIO 2 API
&lt;/h3&gt;

&lt;p&gt;In &lt;a href="https://javarevisited.blogspot.com/2014/04/10-jdk-7-features-to-revisit-before-you.html#google_vignette"&gt;Java 7&lt;/a&gt;, there is a standard method to copy files in java:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#filescopy"&gt;
  &lt;/a&gt;
  Files.copy.
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;It integrates with O/S native I/O for high performance.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.io.IOException&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.nio.file.Files&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.nio.file.Path&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;static&lt;/span&gt; &lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;nio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;StandardCopyOption&lt;/span&gt;&lt;span class="o"&gt;.*;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;static&lt;/span&gt; &lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;nio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;LinkOption&lt;/span&gt;&lt;span class="o"&gt;.*;&lt;/span&gt; &lt;span class="cm"&gt;/*** Java program to copy file using Java 7 Files.copy() method** @author Javin Paul*/&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;FileCopyDemo&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;[])&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;Path&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Files&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Java&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;File&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bin/HelloWorld.class"&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;toPath&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;File&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"target/HelloWorld.class"&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;toPath&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="no"&gt;REPLACE_EXISTING&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="no"&gt;COPY_ATTRIBUTES&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="no"&gt;NOFOLLOW_LINKS&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"File successfully copied using Java 7 way"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;IOException&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// TODO Auto-generated catch blocke.printStackTrace();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also copy files in Java by writing code using &lt;a href="https://javarevisited.blogspot.com/2014/04/difference-between-fileinputstream-and-filereader-in-java.html"&gt;FileInputStream &lt;/a&gt;and &lt;a href="https://javarevisited.blogspot.com/2012/12/how-to-append-text-into-file-in-java-filewriter-example.html"&gt;FileOuputStream&lt;/a&gt;, but that's just not required, given you have Java 7 installed.&lt;/p&gt;

&lt;p&gt;Alternatively Apache commons IO FileUtils class is also handy. For high-speed file copy and transfer, you can also take advantage of the java.nio and &lt;a href="https://javarevisited.blogspot.com/2016/01/reading-writing-files-using-filechannel-bytebuffer-example.html#axzz6g8q23kRW"&gt;FileChannel &lt;/a&gt;class but beware that there is a bug in Windows, which prevents you to transfer more than 64GB of channel data. Windows bug around the transferFrom not able to copy streams larger than 64MB in one piece?&lt;/p&gt;

&lt;p&gt;Other &lt;strong&gt;Java Programming Articles&lt;/strong&gt; you May like:&lt;br&gt;
Other &lt;strong&gt;Java and Programming articles&lt;/strong&gt; you may like to read.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/10/the-java-developer-roadmap.html"&gt;The Java Developer RoadMap&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://www.java67.com/2017/11/top-5-free-core-spring-mvc-courses-learn-online.html"&gt;5 Free Spring  Framework Courses for Java Developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/02/top-5-spring-microservices-courses-with-spring-boot-and-spring-cloud.html#axzz6JJFPbsyP"&gt;Top 5 Courses to Learn Microservices with Spring Boot&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-5-books-and-courses-to-learn-restful-web-services-in-java-using-spring-mvc-and-spring-boot-79ec4b351d12"&gt;10 Courses to learn RESTful Web Service in Java&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/06/top-6-spring-framework-online-courses-Java-programmers.html"&gt;Top 5 Courses to learn Spring in Depth&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/5-essential-frameworks-every-java-developer-should-learn-6ed83315f1fb"&gt;5 Essential Frameworks Java Developer should learn &lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://javarevisited.blogspot.sg/2017/11/top-5-free-java-courses-for-beginners.html#axzz4zuIICRs9"&gt;5 Online Courses to learn Core Java for Free&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://javarevisited.blogspot.sg/2018/02/top-5-java-design-pattern-courses-for-developers.html"&gt;Top 5 Java design patterns courses for experienced Java devs&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-5-courses-to-learn-microservices-in-java-and-spring-framework-e9fed1ba804d"&gt;Top 7 Courses to learn Microservices in Java&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-courses-to-learn-spring-security-and-oauth2-with-spring-boot-for-java-developers-8f0222d6066d"&gt;10 Courses to learn Spring Security and OAuth2&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://javarevisited.blogspot.sg/2018/02/10-courses-to-prepare-for-programming-job-interviews.html"&gt;10 courses for Programming/Coding Job Interviews&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/10-advanced-spring-boot-courses-for-experienced-java-developers-5e57606816bd"&gt;10 Advanced Spring Boot Courses for Java developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/04/top-5-spring-cloud-courses-for-java.html"&gt;Top 5 Courses to learn Spring Cloud for Beginners&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://javarevisited.blogspot.sg/2018/02/5-courses-to-learn-shell-scripting-in-linux.html"&gt;5 Courses to learn Shell Scripting in Linux&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/10-free-spring-boot-tutorials-and-courses-for-java-developers-53dfe084587e"&gt;10 Free Spring Boot Tutorials and Courses for Java Devs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading this article so far. If you like this Java tutorial, then please share it with your friends and colleagues. If you have any questions or feedback, then please drop a note.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P. S. -&lt;/strong&gt; If you are new to the Java world and looking for free courses to learn Java from scratch then you can also take a look at &lt;strong&gt;&lt;a href="https://medium.com/javarevisited/10-free-courses-to-learn-java-in-2019-22d1f33a3915"&gt;my favorite free Java courses&lt;/a&gt;&lt;/strong&gt; on Medium. It has some of the best free Java training courses to learn Java online.&lt;/p&gt;

</description>
      <category>java</category>
      <category>programming</category>
      <category>coding</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Free Django Dashboard - MaterialPRO Lite</title>
      <author>Sm0ke</author>
      <pubDate>Wed, 13 Oct 2021 09:02:41 +0000</pubDate>
      <link>https://dev.to/sm0ke/free-django-dashboard-materialpro-lite-450b</link>
      <guid>https://dev.to/sm0ke/free-django-dashboard-materialpro-lite-450b</guid>
      <description>&lt;p&gt;Hello Coders!&lt;/p&gt;

&lt;p&gt;This article presents an open-source &lt;strong&gt;Django Dashboard&lt;/strong&gt; crafted on top of a pixel-perfect &lt;a href="https://appseed.us/admin-dashboards/django-dashboard-material-lite"&gt;Material-Based&lt;/a&gt; design. The product comes with a simple, intuitive codebase, authentication, database, and deployment scripts via Docker. For newcomers, &lt;strong&gt;Django&lt;/strong&gt; is a leading web framework crafted in Python by experienced developers using a batteries-included concept and actively supported by an impressive open-source community. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;✨&lt;a href="https://appseed.us/admin-dashboards/django-dashboard-material-lite"&gt;Django MaterialPRO Lite&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;✨&lt;a href="https://django-dashboard-material-lite.appseed.us/"&gt;Django MaterialPRO Lite&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;li&gt;✨More &lt;a href="https://appseed.us/admin-dashboards/django"&gt;Django Dashboards&lt;/a&gt; - free &amp;amp; commercial products&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RaZxecZq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgddb1m46bu14ok67drd.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RaZxecZq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgddb1m46bu14ok67drd.jpg" alt="Django MaterialPRO Lite - Open-source seed project crafted in Django."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#product-features"&gt;
  &lt;/a&gt;
  ✨ Product Features
&lt;/h2&gt;

&lt;p&gt;This open-source &lt;strong&gt;Django Dashboard&lt;/strong&gt; comes with a few useful features that might help beginners (and not only) to code faster a new dashboard project without losing time with a few repetitive tasks like setting up the project, prepare the UI, and code the deployment scripts. &lt;strong&gt;Django MaterialPro Lite&lt;/strong&gt; offers out-of-the-box a short-list with features that solve all the above case-cases:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Up-to-date dependencies&lt;/code&gt;: &lt;strong&gt;Django 3.2.6 LTS&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;SCSS compilation&lt;/strong&gt; via Gulp&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;SQLite Database&lt;/code&gt;, Django Native ORM&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Session-Based Authentication&lt;/strong&gt;, Forms validation&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Deployment scripts&lt;/strong&gt;: &lt;code&gt;Docker&lt;/code&gt;, Gunicorn / Nginx&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Probably the most easier way to see this seed project in action is to execute the Docker setup:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Clone the source code&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/django-dashboard-material-lite.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;django-dashboard-material-lite
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Execute in Docker&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose pull   &lt;span class="c"&gt;# download modules&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose build  &lt;span class="c"&gt;# execute local set up&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up     &lt;span class="c"&gt;# start the project&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once all the above commands are executed, the project should be visible in the browser and we should be able to interact with the UI, create users, and access the private pages.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--83I-mHuX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u6tl75te946d5tkt667z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--83I-mHuX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u6tl75te946d5tkt667z.png" alt="Django MaterialPRO Lite - Profile Page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Django MaterialPro Lite - Maps Page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_9q_84rW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mu8m7c2wo4k2rezda5xt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_9q_84rW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mu8m7c2wo4k2rezda5xt.png" alt="Django MaterialPro Lite - Maps Page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-to-compile-from-sources"&gt;
  &lt;/a&gt;
  ✨ How to compile from sources
&lt;/h2&gt;

&lt;p&gt;In case &lt;code&gt;Docker is not installed in the workstation&lt;/code&gt;, we can build the product using the classic workflow: clone sources, install modules, set up the database, and start the app using Django WSGI embedded server. In order to complete this phase, make sure you have a &lt;a href="https://docs.appseed.us/content/tutorials/minimal-programming-kit"&gt;minimal programming kit&lt;/a&gt; installed in the workstation and accessible via the terminal: &lt;strong&gt;Python3&lt;/strong&gt;, &lt;strong&gt;GIT&lt;/strong&gt;, and a modern code editor like &lt;code&gt;Atom&lt;/code&gt; or &lt;code&gt;VsCode&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Step #1 - Clone sources&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/django-dashboard-material-lite.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;django-dashboard-material-lite
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;Step #2 - Install dependencies&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Virtualenv modules installation (Unix based systems)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;virtualenv &lt;span class="nb"&gt;env&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source env&lt;/span&gt;/bin/activate
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Install modules - SQLite Storage&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pip3 &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;Step #3 - Set up the database&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py makemigrations
&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;Step #4 - Start app (development mode)&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Start the application (development mode)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py runserver &lt;span class="c"&gt;# default port 8000&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Access the web app in browser: http://127.0.0.1:8000/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If all goes well we should see the project running in the browser on the address  &lt;a href="http://localhost:8000:"&gt;http://localhost:8000:&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GpFLwD_s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kv58vtc8jga5bnpcwpmd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GpFLwD_s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kv58vtc8jga5bnpcwpmd.png" alt="Django MaterialPro Lite - Login Page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources, feel free to access:&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/admin-dashboards/open-source"&gt;Open-Source Dashboards&lt;/a&gt; - index provided by AppSeed.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Full-stack &lt;a href="https://appseed.us/apps/react"&gt;React Apps&lt;/a&gt;&lt;/strong&gt; - free &amp;amp; commercial products &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>django</category>
      <category>python</category>
      <category>webdev</category>
      <category>dashboards</category>
    </item>
    <item>
      <title>Mockup API With JSON Server</title>
      <author>Linda Sebastian</author>
      <pubDate>Wed, 13 Oct 2021 08:05:37 +0000</pubDate>
      <link>https://dev.to/rocklinda/mockup-api-with-json-server-3kb8</link>
      <guid>https://dev.to/rocklinda/mockup-api-with-json-server-3kb8</guid>
      <description>&lt;h4&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h4&gt;

&lt;p&gt;In a software development project, sometimes the annoying common problem is frontend developer needs to wait until the backend developer finishes working on an API. That's why we need to make a mockup API, therefore both backend and frontend developers can work parallel.&lt;/p&gt;

&lt;p&gt;JSON server is an easy way to make a fake REST API, even a beginner or non-programmer can make it. The only prerequisite is you need to understand JSON structure. Here's a tutorial to make a fake REST API with JSON Server.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Install node js: [&lt;a href="https://nodejs.org/en/download/"&gt;https://nodejs.org/en/download/&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Open a terminal (bash/shell/linux)&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a directory call mock-api (or whatever you want)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;initial new project. Type &lt;code&gt;npm init&lt;/code&gt; then enter until show like below, and type yes.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H3jcZk1x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fvthygvtfdp6abizfzr1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H3jcZk1x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fvthygvtfdp6abizfzr1.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#working-with-json-server"&gt;
  &lt;/a&gt;
  Working with JSON Server
&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;install json server npm install -g json-server if you want install globally or npm i json-server if you want install locally. In this tutorial I will install globally&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install -g json-server
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;create file db.json&lt;/li&gt;
&lt;li&gt;write this structure json
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "users": [
        {
            "id": 1,
            "first_name": "Sonny",
            "last_name": "Allward",
            "email": "sallward0@umn.edu",
            "gender": "Genderfluid",
            "ip_address": "24.3.199.140"
        },
        {
            "id": 2,
            "first_name": "Manfred",
            "last_name": "Erickson",
            "email": "merickson1d@mapquest.com",
            "gender": "Genderfluid",
            "ip_address": "103.30.222.192"
        }
    ],
    "products": [
        {
            "id": 1,
            "product_name": "Beets",
            "sku": "54949-004",
            "price": 27,
            "category": "Beauty",
            "quantity": 69
        },
        {
            "id": 2,
            "product_name": "Wine - Mondavi Coastal Private",
            "sku": "46122-146",
            "price": 63,
            "category": "Home",
            "quantity": 12
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;running JSON Server
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm run json:server --watch db.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pZ0yDVD1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fpm0uquzggr4yu007vzc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pZ0yDVD1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fpm0uquzggr4yu007vzc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#call-request"&gt;
  &lt;/a&gt;
  Call Request
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Get all data
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://localhost:3000/users
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Get one data, method GET
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://localhost:3000/users/1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Search data, method GET
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://localhost:3000/users?first_name=Manfred
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Pagination, method GET
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://localhost:3000/users?_limit=10&amp;amp;_page=5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Sorting, method GET
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://localhost:3000/users?_sort=id&amp;amp;_order=DESC
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create data, method POST
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://localhost:3000/users
body:
{
    "id": 51,
    "first_name": "Itje",
    "last_name": "Juice",
    "email": "itje@yale.edu",
    "gender": "Helicopter",
    "ip_address": "44.73.130.666"
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Delete data, method DELETE
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://localhost:3000/users/1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Github URL: [&lt;a href="https://github.com/rocklinda/mock-api"&gt;https://github.com/rocklinda/mock-api&lt;/a&gt;]&lt;br&gt;
NPM JSON Server: [&lt;a href="https://www.npmjs.com/package/json-server"&gt;https://www.npmjs.com/package/json-server&lt;/a&gt;]&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>What is Exception Filter and Explain Custom Exception Filter in ASP.NET MVC?</title>
      <author>Tarun Gurang</author>
      <pubDate>Wed, 13 Oct 2021 07:55:42 +0000</pubDate>
      <link>https://dev.to/tarungurang/what-is-exception-filter-and-explain-custom-exception-filter-in-aspnet-mvc-1l5b</link>
      <guid>https://dev.to/tarungurang/what-is-exception-filter-and-explain-custom-exception-filter-in-aspnet-mvc-1l5b</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-an-exception-filter"&gt;
  &lt;/a&gt;
  What is an Exception Filter?
&lt;/h2&gt;

&lt;p&gt;Exception Filter provides an ability to handle the exception for all the method, controller classes in one place. Exception filters execute when some of the exceptions are thrown from an action. The exception can be anything. This is by creating a class that inherits from IExceptionFilter and FileAttribute interface.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#custom-exception-filter"&gt;
  &lt;/a&gt;
  Custom Exception Filter
&lt;/h3&gt;

&lt;p&gt;Exception Filter provides a built-in HandleError attribute to handle exception filter with the built-in attribute we can’t do the following things.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Cannot log the Exception using the HandleError attribute&lt;/li&gt;
&lt;li&gt;It is not possible to handle exception occurs outside the controllers.&lt;/li&gt;
&lt;li&gt;Exception handling is not possible, depending on the scenario. For Example, one error page when the request comes through AJAX and a different one is a normal request.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's look at how to work around these problems by creating a custom exception filter.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#creating-custom-exception-filter"&gt;
  &lt;/a&gt;
  Creating Custom Exception Filter
&lt;/h4&gt;

&lt;p&gt;Here I am creating an Employee class for the model inside the model folder.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Employee. class&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
namespace LIBData
{
   public class Employee  
    {  
        public int Id { 
get; 
set;
 }  

        [Required(ErrorMessage = "Name Required")]  
        public string Name { 
get; 
set;
 }  
        [Required(ErrorMessage = " Designation Required ")]  
        public string Designation{ 
get; 
set;
 }  
        [Required(ErrorMessage = "Salary Required ")]  
        public int Salary { 
get; 
set;
 }  
    }  
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to add controller class inside the controller folder add.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;EmployeeController&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;using System;  
using System.Collections.Generic;  
using System.Linq;  
using System.Web;  
using System.Web.Mvc;  
using LIBUser.CustomFilter;  
using LIBUser.Models;  

namespace LIBUser.Controllers
{
    public class EmployeeController: Controller
    {
        public EmployeeContext  db =  new EmployeeContext();
        public ActionResult Index()
        {
            var employee = db .Employees.ToList();
            return View(employee);
        }
        public ActionResult Details(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            Employee employee = db.Employees.Find(id);
            if (employee == null)
            {
                return HttpNotFound();
            }
            return View(employee);
        }
        public ActionResult Create()
        {
            return View();
        }
        [HttpPost]
        [CustomExceptionHandlerFilter]
        public ActionResult Create(Employee employee)
        {
            if (ModelState.IsValid)
            {
                if (employee.Designation== "JuniorForntEndDeveloper" &amp;amp;&amp;amp; (employee.Salary &amp;lt; 1000 || employee.Salary &amp;gt; 4000))
                {
                    throw new Exception("Salary is not matching with JuniorForntEndDeveloper.");
                }
                else if (employee.Designation== "WebDeveloper" &amp;amp;&amp;amp; (employee.Salary &amp;lt; 30000 || employee.Salary &amp;gt; 40000))
                {
                    throw new Exception("Salary is not matching with WebDeveloper.");
                }
                else if (employee.Designation== "Marketing Manager")
                {
                    throw new Exception("Salary is not matching with Marketing Manager");
                }
                else
                {
                    db .Employees.Add(employee);
                    db .SaveChanges();
                }
            }
            return RedirectToAction("Index");
        }
    }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Read More: &lt;a href="https://www.ifourtechnolab.com/blog/generate-thumbnail-using-asp-net-mvc"&gt;Generate Thumbnail Using ASP.NET MVC&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Add the following line of code inside the Employee controller.&lt;/p&gt;

&lt;p&gt;In this example, I will just demonstrate how to use a Custom Exception filter you can change your controller as per the requirements.&lt;/p&gt;

&lt;p&gt;Now, we need to add the view for Create action method and Index action method. Right-click on create method and add view.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create View&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;xmp&amp;gt;
@model LIBData.Employee
@{
    ViewBag.Title = &amp;amp;quot;Create&amp;amp;quot;;
    Layout = &amp;amp;quot;~/Views/Shared/LibStudent.cshtml&amp;amp;quot;;
}&amp;lt;div class="container"&amp;gt;&amp;lt;div class="card"&amp;gt;&amp;lt;div class="card-header bg-dark"&amp;gt;
            &amp;lt;strong class="card-title" style="color : white;"&amp;gt; Add Employee Details&amp;lt;/strong&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div class="card-body"&amp;gt;
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()&amp;lt;div class="form-horizontal"&amp;gt;&amp;lt;h4&amp;gt;Employee&amp;lt;/h4&amp;gt;
&amp;lt;hr /&amp;gt;
                    @Html.ValidationSummary(true, &amp;amp;quot;&amp;amp;quot;, new { @class = &amp;amp;quot;text-danger&amp;amp;quot; })&amp;lt;div class="form-group"&amp;gt;
                        @Html.LabelFor(model =&amp;gt; model.Name, htmlAttributes: new { @class = &amp;amp;quot;control-label col-md-2&amp;amp;quot; })
                        @Html.EditorFor(model =&amp;gt; model.Name, new { htmlAttributes = new { @class = &amp;amp;quot;form-control&amp;amp;quot; } })
                        @Html.ValidationMessageFor(model =&amp;gt; model.Name, &amp;amp;quot;&amp;amp;quot;, new { @class = &amp;amp;quot;text-danger&amp;amp;quot; })&amp;lt;/div&amp;gt;
&amp;lt;div class="form-group"&amp;gt;
                        @Html.LabelFor(model =&amp;gt; model.Designation, htmlAttributes: new { @class = &amp;amp;quot;control-label col-md-2&amp;amp;quot; })
                        @Html.EditorFor(model =&amp;gt; model.Designation, new { htmlAttributes = new { @class = &amp;amp;quot;form-control&amp;amp;quot; } })
                        @Html.ValidationMessageFor(model =&amp;gt; model.Designation, &amp;amp;quot;&amp;amp;quot;, new { @class = &amp;amp;quot;text-danger&amp;amp;quot; })&amp;lt;/div&amp;gt;
&amp;lt;div class="form-group"&amp;gt;
                        @Html.LabelFor(model =&amp;gt; model.Salary, htmlAttributes: new { @class = &amp;amp;quot;control-label col-md-2&amp;amp;quot; })
                        @Html.EditorFor(model =&amp;gt; model.Salary, new { htmlAttributes = new { @class = &amp;amp;quot;form-control&amp;amp;quot; } })
                        @Html.ValidationMessageFor(model =&amp;gt; model.Salary, &amp;amp;quot;&amp;amp;quot;, new { @class = &amp;amp;quot;text-danger&amp;amp;quot; })&amp;lt;/div&amp;gt;
&amp;lt;div class="form-group"&amp;gt;&amp;lt;div class="col-md-offset-2 col-md-10"&amp;gt;
                            &amp;lt;input class="btn btn-default" type="submit" value="Create" /&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;
            }&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;
    @Html.ActionLink(&amp;amp;quot;Back to List&amp;amp;quot;, &amp;amp;quot;Index&amp;amp;quot;)&amp;lt;/div&amp;gt;
&amp;lt;/xmp&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add the CustomExceptionHandlerFilter class for creating a custom exception handler.&lt;/p&gt;

&lt;p&gt;Implements FilterAttribute and IExceptionFilter and overrides the OnException method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
namespace LIBUser.Controllers
{
    public class CustomExceptionHandlerFilter: FilterAttribute, IExceptionFilter
    {
        public void OnException(ExceptionContext filterContext)
        {
            ExceptionLogger logger = new ExceptionLogger()
            {
                ExceptionMessage = filterContext.Exception.Message,
                ExceptionStackTrack = filterContext.Exception.StackTrace,
                ControllerName = filterContext.RouteData.Values["controller"].ToString(),
                ActionName = filterContext.RouteData.Values["action"].ToString(),
                ExceptionLogTime = DateTime.Now
            };
            EmployeeContext dbContext = new EmployeeContext();
            dbContext.ExceptionLoggers.Add(logger);
            dbContext.SaveChanges();
            filterContext.ExceptionHandled = true;
            filterContext.Result = new ViewResult()
            {
                ViewName = "Error"
            };
        }
    }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open App_Start folder inside the App_start folder contains FilterConfig class. Inside this class, we add our new CustomExceptionHandlerFilter in the following way.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;using System;  
using System.Collections.Generic;  
using System.Linq;  
using System.Web;  
using System.Web.Mvc;  
using Microsoft.ApplicationInsights.DataContracts;  
using MvcCustomExceptionFilter.CustomFilter;  

namespace LIBUser.App_Start
{
    public class FilterConfig
    {
        public static void RegisterGlobalFilter(GlobalFilterCollection filters)
        {
            filters.Add(new CustomExceptionHandlerFilter());
        }
    }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you create a project, if you have selected the Empty MVC Template then the FilterConfig class will not be available to you, but if you have selected any ready-mate MVC template then the FilterConfig class will be available within your application. If this file is not available, then just simply create a class file with the name FilterConfig inside the App_Start folder. This FilterConfig class is the place where we used to add the Filters globally for our application. It file will be instantiated when our Web application starts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Looking for Trusted &lt;a href="https://www.ifourtechnolab.com/dot-net-development-company"&gt;ASP.NET Development Company&lt;/a&gt;? Your Search ends here.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now Register our CustomExceptionHandlerFilter in the Global. asax&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Global.aspx&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;using System;  
using System.Collections.Generic;  
using System.Linq;  
using System.Web;  
using System.Web.Mvc;  
using System.Web.Routing;  
using MvcCustomExceptionFilter.App_Start;  

namespace MvcCustomExceptionFilter
{
    public class MvcApplication : System.Web.HttpApplication
    {
        protected void Application_Start()
        {
            FilterConfig.RegisterGlobalFilter(GlobalFilters.Filters);
            AreaRegistration.RegisterAllAreas();
            RouteConfig.RegisterRoutes(RouteTable.Routes);
        }
    }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside the shared folder of view, it contains the Error. cshtml page modifies the Error. cshtml as per your requirement. If the shared folder does not contain an Error. cshtml you can add a view inside the shared folder and place this code inside the error page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;xmp&amp;gt;
@{
    ViewBag.Title = &amp;amp;quot;Error&amp;amp;quot;;
}&amp;lt;h1&amp;gt;Error Occured&amp;lt;/h1&amp;gt;
&amp;lt;h1 class="alert alert-danger"&amp;gt;An unknown error occurred while processing your request.&amp;lt;/h1&amp;gt;
&amp;lt;/xmp&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open the web. config file and add the custom error mode inside the system. web&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;system.web&amp;gt;
&amp;lt;customerrors mode="On"&amp;gt;&amp;lt;/customerrors&amp;gt;
&amp;lt;/system.web&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now run the application and add the details inside the create view.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jkvWaoFQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zzpc138pcjj7qnfoypb4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jkvWaoFQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zzpc138pcjj7qnfoypb4.jpg" alt="Add employee details"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we can add the salary that is not range to a specific position it will give an error and we will redirect to the Error page instead of yellow screen or exception. Here I insert salary for JuniorForntEndDeveloper 10000 it will get me an error because in code set salary for JuniorForntEndDeveloper between 1000 to 4000.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vwq8mEZf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x4y1zkdann1yrtxj67m4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vwq8mEZf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x4y1zkdann1yrtxj67m4.jpg" alt="error and redirect"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After click on create button, it gives an Error and redirects to the error page.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h5&gt;

&lt;p&gt;Exception filter provides the built-in HandleError attribute but we cannot handle the log error and exceptions that occurs inside the controller class, however, with the help of the custom exception we can handle the errors that occur inside the controller class.&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Grow Your Business With These Law Firm Marketing Strategies </title>
      <author>Jamesbrown93</author>
      <pubDate>Wed, 13 Oct 2021 07:54:12 +0000</pubDate>
      <link>https://dev.to/jamesbrown93/grow-your-business-with-these-law-firm-marketing-strategies-n6b</link>
      <guid>https://dev.to/jamesbrown93/grow-your-business-with-these-law-firm-marketing-strategies-n6b</guid>
      <description>&lt;p&gt;Do you own a law firm? Or plan to start one? Well, whatever the scenario is you obviously would want to grow it in size and thrive in the competitive market. And to grow you’ll need more clients that would add to your business and profitability. Having a concrete &lt;a href="https://www.janbaskdigitaldesign.com/"&gt;law firm marketing&lt;/a&gt; strategy ensures your firm expands by the use of various law marketing strategies. Moreover, it is important that we update our strategies to keep moving forward in the competitive market. &lt;/p&gt;

&lt;p&gt;In this post, we will be talking about how you can grow your firm to the next level by creating a set of firm marketing strategies and executing them based on your goals.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;9 Law firm Marketing Strategies&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Your law firm’s marketing strategy should be curated according to your firm’s goal and core values. There are certain strategies that will make your firm stand out and add value to your law firm if implied strategically. Some of them are: &lt;/p&gt;

&lt;p&gt;&lt;b&gt;1. Build a Brand&lt;/b&gt;&lt;br&gt;
Your brand is what you want your law firm to be seen as  to the public. It is more than just updating your logo. As a law firm your brand might seem the same as other brands do out there, despite your core values and product might differ.  You know the unique value of your law firm, so you would know how to showcase your law firm differently. You also would want to build a positive brand image that forms trust for your customers. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;2. Design an attractive law firm design&lt;/b&gt; &lt;br&gt;
All other law firm marketing strategies will not be as effective unless you invest into building an amazing website and strengthen your brand on an online platform. Make sure of the following when launching your website: &lt;br&gt;
=&amp;gt; Is it mobile, laptop and tablet friendly&lt;br&gt;
=&amp;gt; Easy to navigate &lt;br&gt;
=&amp;gt; News/blog section&lt;br&gt;
=&amp;gt; Different page for each of your lawyer &lt;br&gt;
=&amp;gt; Built - in - security &lt;br&gt;
=&amp;gt; Professional logo&lt;br&gt;
=&amp;gt; Engaging and informative content &lt;/p&gt;

&lt;p&gt;&lt;b&gt;3. Work on your SEO to improve your search engine ranking&lt;/b&gt;&lt;br&gt;
You need to be seen on the first page of the search engine to get maximum visitors and traffic to your website. You can run SEO or Google Adwords campaigns. Some of the important practices in SEO research are having professionally written content, keyword research, optimal title &amp;amp; description, optimized images, and logical website architecture. Mobile-friendly compatibility of your website also improves your SEO ranking. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;4. Get on Social Media&lt;/b&gt;&lt;br&gt;
Getting your business on social media marketing can be an interesting law firm marketing strategy to grow your business. You don't have to create an account on all social media platforms but maybe only where you have your strongest customer base. It is usually Facebook, LinkedIn, and Google to get your customers engaging in your business. With social media done right it can benefit your business in :&lt;br&gt;
=&amp;gt; Reaching a large audience for little financial investment &lt;br&gt;
=&amp;gt; Building community and brand authority&lt;br&gt;
=&amp;gt; Providing clients alternative ways to reach you&lt;/p&gt;

&lt;p&gt;&lt;b&gt;5. Get into legal directories&lt;/b&gt;&lt;br&gt;
Being listed on legal directories can be very beneficial for your law firm marketing. It is a reputated source of information for potential customers. It also contributes to your SEO as it will help with link building and obtaining traffic. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;6. Try Videos or Webinars&lt;/b&gt;&lt;br&gt;
Every Business longs for attention. They try every possible way to get attention from potential clients. Videos are possibly the best way to grab people’s attention and it is the fastest way to spread your content to a wide audience. They help you build expertise, stand out and generate new clients. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;7. Email Marketing&lt;/b&gt; &lt;br&gt;
Email marketing offers a lot of boost to your law firm marketing for minimal effort. Email marketing is also easy to measure in terms of the recipient’s behavior on the email. It also supports the A/B testing, where you send the same campaign to different sets of recipients in different styles/formats to see the variations in results in two email promotions. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;8. Search Advertising&lt;/b&gt; &lt;br&gt;
While SEO is an organic way to improve your ranking on google search engines. You can also go for a paid online advertising campaign for the same to attract potential clients to your website. There are two types of paid search engine advertising:&lt;br&gt;
=&amp;gt; Pay Per Click (PPC): In this campaign each time a visitor clicks on your ad, advertisers pay a certain amount to the search engine. &lt;br&gt;
=&amp;gt; Google Advertising: Here advertisers bid to be displayed on the search engine as well as non-search websites, mobile apps, blog pages, etc. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;9. Content Marketing&lt;/b&gt; &lt;br&gt;
Content marketing is a marketing tactic where that helps to build your brand expertise, offer value to potential customers and drive traffic to your website. This could include content like blog posts, videos, infographics, or podcasts. The content should depend on your target client’s persona so that readers connect with it and develop an interest in your website. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;KPIs to Monitor your Law firm's Marketing Strategies&lt;/b&gt;&lt;br&gt;
Monitoring your strategies is a crucial part and can’t be overlooked. Without tracking you won’t know what was actually working and what was not. If it's working you might want to work more into it and if it's not, you are simply wasting your time and efforts or you might want to improve. So here’s how you can track those strategies:&lt;br&gt;
=&amp;gt; Ask for clients’ feedback: Ask your firm’s assistant to follow up with clients with a set of questionnaires about how they came across your company. &lt;br&gt;
=&amp;gt; Analyze website analytics: Google analytics can help you gather data like from which website did the visitor come before visiting yours, how long people are spending on your website (bounce rate), and traffic. &lt;br&gt;
=&amp;gt; Source data from your client’s intake software: There is software that lets you identify referral sources for new customers and enables you to make custom reports on lead sources. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Conclusion:&lt;/b&gt; &lt;br&gt;
To establish your &lt;a href="https://www.janbaskdigitaldesign.com/industry/law-firm-website-design"&gt;law firm design&lt;/a&gt; in the highly competitive market you need to put yourself out there and implement these law firms' marketing strategies. There are several ways to market your firms but the most success will come when you start with setting your SMART goals. However, agencies like Janbask are very well know how to put all these together and integrate them effectively. &lt;/p&gt;

</description>
      <category>lawfirmdesign</category>
      <category>webdesign</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
